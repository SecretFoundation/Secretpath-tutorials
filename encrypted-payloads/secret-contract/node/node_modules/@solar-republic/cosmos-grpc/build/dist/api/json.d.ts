import type { WeakDurationStr, WeakTimestampStr } from './types.js';
import type { Nilable } from '@blake.regalia/belt';
import type { WeakUintStr } from '@solar-republic/types';
export declare const parse_duration: (s_duration: Nilable<string>) => number | undefined;
export declare const parse_timestamp: (s_timestamp: Nilable<string>) => number | undefined;
export declare const duration_to_json: (xn_milliseconds: Nilable<number>) => string | undefined;
export declare const timestamp_to_json: (xt_timestamp: Nilable<number>) => string | undefined;
export declare const expand_duration: <d_undefined = undefined>(a_temporal: [string, number] | Extract<d_undefined, undefined>) => `${bigint}.${bigint}s` | Extract<d_undefined, undefined>;
export declare const expand_timestamp: <d_undefined = undefined>(a_temporal: [string, number] | Extract<d_undefined, undefined>) => `${string}T${string}Z` | Extract<d_undefined, undefined>;
type Coin = {
    denom: string;
    amount: WeakUintStr;
};
export declare const expand_coin: <d_undefined = undefined>(a_coin: [denom: string, amount: string] | Extract<d_undefined, undefined>) => Coin | Extract<d_undefined, undefined>;
export {};
