import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashAuditAuditedAttributes, DecodedAkashAuditAuditedAttributes } from './audit.js';
export type EncodedAkashAuditGenesisState = Encoded<'/akash.audit.v1beta3.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the basic genesis state used by audit module
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditGenesisState: (a_attributes?: Opt<Encoded<'/akash.audit.v1beta3.AuditedAttributes'>[]>) => EncodedAkashAuditGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: attributes -
 */
export type DecodedAkashAuditGenesisState = [
    a_attributes?: DecodedAkashAuditAuditedAttributes[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditGenesisState}
 */
export declare const decodeAkashAuditGenesisState: (atu8_payload: Uint8Array) => DecodedAkashAuditGenesisState;
/**
 * Destructures the fields of a {@link AkashAuditGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: attributes -
 */
export declare const destructAkashAuditGenesisState: (g_struct: AkashAuditGenesisState) => [attributes?: AkashAuditAuditedAttributes[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_GENESIS_STATE = "/akash.audit.v1beta3.GenesisState";
/**
 * JSON serialization of `akash.audit.v1beta3.GenesisState` - defines the basic genesis state used by audit module
 */
export type AkashAuditGenesisState = {
    attributes?: AkashAuditAuditedAttributes[] | undefined;
};
