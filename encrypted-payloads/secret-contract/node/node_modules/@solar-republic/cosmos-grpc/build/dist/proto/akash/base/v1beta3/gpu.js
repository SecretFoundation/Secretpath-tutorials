/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashBaseAttribute } from './attribute.js';
import { decodeAkashBaseResourceValue } from './resourcevalue.js';
/**
 * Encodes a `GPU` protobuf message: stores resource units and cpu config attributes
 * @param g_units - `units`:
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashBaseGPU = (atu8_units, a_attributes) => Protobuf() // ...
    .b(atu8_units) // ResourceValue units = 1
    .B(a_attributes) // Attribute[] attributes = 2
    .o;
/**
 * Decodes a protobuf GPU message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashBaseGPU}
 */
export const decodeAkashBaseGPU = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0], [decodeAkashBaseResourceValue, decodeAkashBaseAttribute]);
/**
 * Destructures the fields of a {@link AkashBaseGPU} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: units -
 *   - 1: attributes -
 */
export const destructAkashBaseGPU = (g_struct) => [g_struct.units, g_struct.attributes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_BASE_G_P_U = '/akash.base.v1beta3.GPU';
//# sourceMappingURL=gpu.js.map