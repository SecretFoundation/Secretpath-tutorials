import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, SlimCoin, CwInt64, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashDeploymentGroupSpec, DecodedAkashDeploymentGroupSpec } from './group.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
export type EncodedAkashDeploymentMsgCreateDeployment = Encoded<'/akash.deployment.v1beta1.MsgCreateDeployment'>;
export type EncodedAkashDeploymentMsgCreateDeploymentResponse = Encoded<'/akash.deployment.v1beta1.MsgCreateDeploymentResponse'>;
export type EncodedAkashDeploymentMsgDepositDeployment = Encoded<'/akash.deployment.v1beta1.MsgDepositDeployment'>;
export type EncodedAkashDeploymentMsgDepositDeploymentResponse = Encoded<'/akash.deployment.v1beta1.MsgDepositDeploymentResponse'>;
export type EncodedAkashDeploymentMsgUpdateDeployment = Encoded<'/akash.deployment.v1beta1.MsgUpdateDeployment'>;
export type EncodedAkashDeploymentMsgUpdateDeploymentResponse = Encoded<'/akash.deployment.v1beta1.MsgUpdateDeploymentResponse'>;
export type EncodedAkashDeploymentMsgCloseDeployment = Encoded<'/akash.deployment.v1beta1.MsgCloseDeployment'>;
export type EncodedAkashDeploymentMsgCloseDeploymentResponse = Encoded<'/akash.deployment.v1beta1.MsgCloseDeploymentResponse'>;
export type EncodedAkashDeploymentDeploymentID = Encoded<'/akash.deployment.v1beta1.DeploymentID'>;
export type EncodedAkashDeploymentDeployment = Encoded<'/akash.deployment.v1beta1.Deployment'>;
export type EncodedAkashDeploymentDeploymentFilters = Encoded<'/akash.deployment.v1beta1.DeploymentFilters'>;
/**
 * Encodes a `MsgCreateDeployment` protobuf message: defines an SDK message for creating deployment
 * @param g_id - `id`:
 * @param a_groups - `groups`:
 * @param atu8_version - `version`:
 * @param a_deposit - `deposit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCreateDeployment: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.DeploymentID'>>, a_groups?: Opt<Encoded<'/akash.deployment.v1beta1.GroupSpec'>[]>, atu8_version?: Opt<Uint8Array>, a_deposit?: Opt<SlimCoin>) => EncodedAkashDeploymentMsgCreateDeployment;
/**
 * Encodes a `MsgCreateDeploymentResponse` protobuf message: defines the Msg/CreateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCreateDeploymentResponse: () => EncodedAkashDeploymentMsgCreateDeploymentResponse;
/**
 * Encodes a `MsgDepositDeployment` protobuf message: deposits more funds into the deposit account
 * @param g_id - `id`:
 * @param a_amount - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgDepositDeployment: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.DeploymentID'>>, a_amount?: Opt<SlimCoin>) => EncodedAkashDeploymentMsgDepositDeployment;
/**
 * Encodes a `MsgDepositDeploymentResponse` protobuf message: MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgDepositDeploymentResponse: () => EncodedAkashDeploymentMsgDepositDeploymentResponse;
/**
 * Encodes a `MsgUpdateDeployment` protobuf message: defines an SDK message for updating deployment
 * @param g_id - `id`:
 * @param a_groups - `groups`:
 * @param atu8_version - `version`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgUpdateDeployment: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.DeploymentID'>>, a_groups?: Opt<Encoded<'/akash.deployment.v1beta1.GroupSpec'>[]>, atu8_version?: Opt<Uint8Array>) => EncodedAkashDeploymentMsgUpdateDeployment;
/**
 * Encodes a `MsgUpdateDeploymentResponse` protobuf message: defines the Msg/UpdateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgUpdateDeploymentResponse: () => EncodedAkashDeploymentMsgUpdateDeploymentResponse;
/**
 * Encodes a `MsgCloseDeployment` protobuf message: defines an SDK message for closing deployment
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseDeployment: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.DeploymentID'>>) => EncodedAkashDeploymentMsgCloseDeployment;
/**
 * Encodes a `MsgCloseDeploymentResponse` protobuf message: defines the Msg/CloseDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseDeploymentResponse: () => EncodedAkashDeploymentMsgCloseDeploymentResponse;
/**
 * Encodes a `DeploymentID` protobuf message: stores owner and sequence number
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeploymentID: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>) => EncodedAkashDeploymentDeploymentID;
/**
 * Encodes a `Deployment` protobuf message: stores deploymentID, state and version details
 * @param g_deployment_id - `deployment_id`:
 * @param xc_state - `state`:
 * @param atu8_version - `version`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeployment: (atu8_deployment_id?: Opt<Encoded<'/akash.deployment.v1beta1.DeploymentID'>>, xc_state?: Opt<ProtoEnumAkashDeploymentDeploymentState>, atu8_version?: Opt<Uint8Array>, sg_created_at?: Opt<WeakInt64Str>) => EncodedAkashDeploymentDeployment;
/**
 * Encodes a `DeploymentFilters` protobuf message: defines filters used to filter deployments
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeploymentFilters: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>, s_state?: Opt<string>) => EncodedAkashDeploymentDeploymentFilters;
/**
 * A decoded protobuf CreateDeployment message
 *
 * Tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 *   - 3: deposit -
 */
export type DecodedAkashDeploymentMsgCreateDeployment = [
    a_id?: DecodedAkashDeploymentDeploymentID,
    a_groups?: DecodedAkashDeploymentGroupSpec[],
    atu8_version?: Uint8Array,
    a_deposit?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf CreateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCreateDeployment}
 */
export declare const decodeAkashDeploymentMsgCreateDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgCreateDeployment;
/**
 * A decoded protobuf CreateDeployment message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgCreateDeploymentResponse = [];
/**
 * Decodes a protobuf CreateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCreateDeploymentResponse}
 */
export declare const decodeAkashDeploymentMsgCreateDeploymentResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf DepositDeployment message
 *
 * Tuple where:
 *   - 0: id -
 *   - 1: amount -
 */
export type DecodedAkashDeploymentMsgDepositDeployment = [
    a_id?: DecodedAkashDeploymentDeploymentID,
    a_amount?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf DepositDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgDepositDeployment}
 */
export declare const decodeAkashDeploymentMsgDepositDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgDepositDeployment;
/**
 * A decoded protobuf DepositDeployment message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgDepositDeploymentResponse = [];
/**
 * Decodes a protobuf DepositDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgDepositDeploymentResponse}
 */
export declare const decodeAkashDeploymentMsgDepositDeploymentResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UpdateDeployment message
 *
 * Tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 */
export type DecodedAkashDeploymentMsgUpdateDeployment = [
    a_id?: DecodedAkashDeploymentDeploymentID,
    a_groups?: DecodedAkashDeploymentGroupSpec[],
    atu8_version?: Uint8Array
];
/**
 * Decodes a protobuf UpdateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgUpdateDeployment}
 */
export declare const decodeAkashDeploymentMsgUpdateDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgUpdateDeployment;
/**
 * A decoded protobuf UpdateDeployment message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgUpdateDeploymentResponse = [];
/**
 * Decodes a protobuf UpdateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgUpdateDeploymentResponse}
 */
export declare const decodeAkashDeploymentMsgUpdateDeploymentResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CloseDeployment message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgCloseDeployment = [
    a_id?: DecodedAkashDeploymentDeploymentID
];
/**
 * Decodes a protobuf CloseDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseDeployment}
 */
export declare const decodeAkashDeploymentMsgCloseDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgCloseDeployment;
/**
 * A decoded protobuf CloseDeployment message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgCloseDeploymentResponse = [];
/**
 * Decodes a protobuf CloseDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseDeploymentResponse}
 */
export declare const decodeAkashDeploymentMsgCloseDeploymentResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf DeploymentID message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 */
export type DecodedAkashDeploymentDeploymentID = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64
];
/**
 * Decodes a protobuf DeploymentID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentID}
 */
export declare const decodeAkashDeploymentDeploymentID: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeploymentID;
/**
 * A decoded protobuf Deployment message
 *
 * Tuple where:
 *   - 0: deployment_id -
 *   - 1: state -
 *   - 2: version -
 *   - 3: created_at -
 */
export type DecodedAkashDeploymentDeployment = [
    a_deployment_id?: DecodedAkashDeploymentDeploymentID,
    xc_state?: ProtoEnumAkashDeploymentDeploymentState,
    atu8_version?: Uint8Array,
    sg_created_at?: CwInt64
];
/**
 * Decodes a protobuf Deployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeployment}
 */
export declare const decodeAkashDeploymentDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeployment;
/**
 * A decoded protobuf DeploymentFilters message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: state -
 */
export type DecodedAkashDeploymentDeploymentFilters = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64,
    s_state?: string
];
/**
 * Decodes a protobuf DeploymentFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentFilters}
 */
export declare const decodeAkashDeploymentDeploymentFilters: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeploymentFilters;
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCreateDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 *   - 3: deposit -
 */
export declare const destructAkashDeploymentMsgCreateDeployment: (g_struct: AkashDeploymentMsgCreateDeployment) => [id?: AkashDeploymentDeploymentID, groups?: AkashDeploymentGroupSpec[], version?: Uint8Array, deposit?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CREATE_DEPLOYMENT = "/akash.deployment.v1beta1.MsgCreateDeployment";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCreateDeployment` - defines an SDK message for creating deployment
 */
export type AkashDeploymentMsgCreateDeployment = {
    id?: AkashDeploymentDeploymentID | undefined;
    groups?: AkashDeploymentGroupSpec[] | undefined;
    version?: CwBase64 | undefined;
    deposit?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 */
export declare const destructAkashDeploymentDeploymentID: (g_struct: AkashDeploymentDeploymentID) => [owner?: CwAccountAddr, dseq?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_I_D = "/akash.deployment.v1beta1.DeploymentID";
/**
 * JSON serialization of `akash.deployment.v1beta1.DeploymentID` - stores owner and sequence number
 */
export type AkashDeploymentDeploymentID = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCreateDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgCreateDeploymentResponse: (g_struct: AkashDeploymentMsgCreateDeploymentResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CREATE_DEPLOYMENT_RESPONSE = "/akash.deployment.v1beta1.MsgCreateDeploymentResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCreateDeploymentResponse` - defines the Msg/CreateDeployment response type.
 */
export type AkashDeploymentMsgCreateDeploymentResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgDepositDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: amount -
 */
export declare const destructAkashDeploymentMsgDepositDeployment: (g_struct: AkashDeploymentMsgDepositDeployment) => [id?: AkashDeploymentDeploymentID, amount?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_DEPOSIT_DEPLOYMENT = "/akash.deployment.v1beta1.MsgDepositDeployment";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgDepositDeployment` - deposits more funds into the deposit account
 */
export type AkashDeploymentMsgDepositDeployment = {
    id?: AkashDeploymentDeploymentID | undefined;
    amount?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgDepositDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgDepositDeploymentResponse: (g_struct: AkashDeploymentMsgDepositDeploymentResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_DEPOSIT_DEPLOYMENT_RESPONSE = "/akash.deployment.v1beta1.MsgDepositDeploymentResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgDepositDeploymentResponse` - MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 */
export type AkashDeploymentMsgDepositDeploymentResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgUpdateDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 */
export declare const destructAkashDeploymentMsgUpdateDeployment: (g_struct: AkashDeploymentMsgUpdateDeployment) => [id?: AkashDeploymentDeploymentID, groups?: AkashDeploymentGroupSpec[], version?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_UPDATE_DEPLOYMENT = "/akash.deployment.v1beta1.MsgUpdateDeployment";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgUpdateDeployment` - defines an SDK message for updating deployment
 */
export type AkashDeploymentMsgUpdateDeployment = {
    id?: AkashDeploymentDeploymentID | undefined;
    groups?: AkashDeploymentGroupSpec[] | undefined;
    version?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgUpdateDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgUpdateDeploymentResponse: (g_struct: AkashDeploymentMsgUpdateDeploymentResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_UPDATE_DEPLOYMENT_RESPONSE = "/akash.deployment.v1beta1.MsgUpdateDeploymentResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgUpdateDeploymentResponse` - defines the Msg/UpdateDeployment response type.
 */
export type AkashDeploymentMsgUpdateDeploymentResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgCloseDeployment: (g_struct: AkashDeploymentMsgCloseDeployment) => [id?: AkashDeploymentDeploymentID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_DEPLOYMENT = "/akash.deployment.v1beta1.MsgCloseDeployment";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCloseDeployment` - defines an SDK message for closing deployment
 */
export type AkashDeploymentMsgCloseDeployment = {
    id?: AkashDeploymentDeploymentID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgCloseDeploymentResponse: (g_struct: AkashDeploymentMsgCloseDeploymentResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_DEPLOYMENT_RESPONSE = "/akash.deployment.v1beta1.MsgCloseDeploymentResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCloseDeploymentResponse` - defines the Msg/CloseDeployment response type.
 */
export type AkashDeploymentMsgCloseDeploymentResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deployment_id -
 *   - 1: state -
 *   - 2: version -
 *   - 3: created_at -
 */
export declare const destructAkashDeploymentDeployment: (g_struct: AkashDeploymentDeployment) => [deployment_id?: AkashDeploymentDeploymentID, state?: JsonEnumAkashDeploymentDeploymentState, version?: Uint8Array, created_at?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT = "/akash.deployment.v1beta1.Deployment";
/**
 * JSON serialization of `akash.deployment.v1beta1.Deployment` - stores deploymentID, state and version details
 */
export type AkashDeploymentDeployment = {
    deployment_id?: AkashDeploymentDeploymentID | undefined;
    state?: JsonEnumAkashDeploymentDeploymentState | undefined;
    version?: CwBase64 | undefined;
    created_at?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: state -
 */
export declare const destructAkashDeploymentDeploymentFilters: (g_struct: AkashDeploymentDeploymentFilters) => [owner?: CwAccountAddr, dseq?: CwUint64, state?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_FILTERS = "/akash.deployment.v1beta1.DeploymentFilters";
/**
 * JSON serialization of `akash.deployment.v1beta1.DeploymentFilters` - defines filters used to filter deployments
 */
export type AkashDeploymentDeploymentFilters = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
    state?: string | undefined;
};
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = 0;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = "DeploymentStateInvalid";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active = 1;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active = "DeploymentActive";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed = 2;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed = "DeploymentClosed";
/**
 * Raw protobuf enum values for `akash.deployment.v1beta1.Deployment.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed}
 */
export type ProtoEnumAkashDeploymentDeploymentState = typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid | typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active | typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed;
/**
 * JSON enum values for `akash.deployment.v1beta1.Deployment.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed}
 */
export type JsonEnumAkashDeploymentDeploymentState = typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid | typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active | typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed;
/**
 * Maps a protobuf enum int value for `akash.deployment.v1beta1.Deployment.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashDeploymentDeploymentState: Record<ProtoEnumAkashDeploymentDeploymentState, JsonEnumAkashDeploymentDeploymentState>;
/**
 * Maps a JSON enum string value for `akash.deployment.v1beta1.Deployment.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashDeploymentDeploymentState: Record<JsonEnumAkashDeploymentDeploymentState, ProtoEnumAkashDeploymentDeploymentState>;
