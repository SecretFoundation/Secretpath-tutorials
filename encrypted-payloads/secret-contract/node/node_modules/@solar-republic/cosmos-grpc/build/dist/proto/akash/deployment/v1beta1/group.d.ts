import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, SlimCoin, CwInt64, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashBasePlacementRequirements, DecodedAkashBasePlacementRequirements } from '../../base/v1beta1/attribute.js';
import type { AkashBaseResourceUnits, DecodedAkashBaseResourceUnits } from '../../base/v1beta1/resource.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
export type EncodedAkashDeploymentMsgCloseGroup = Encoded<'/akash.deployment.v1beta1.MsgCloseGroup'>;
export type EncodedAkashDeploymentMsgCloseGroupResponse = Encoded<'/akash.deployment.v1beta1.MsgCloseGroupResponse'>;
export type EncodedAkashDeploymentMsgPauseGroup = Encoded<'/akash.deployment.v1beta1.MsgPauseGroup'>;
export type EncodedAkashDeploymentMsgPauseGroupResponse = Encoded<'/akash.deployment.v1beta1.MsgPauseGroupResponse'>;
export type EncodedAkashDeploymentMsgStartGroup = Encoded<'/akash.deployment.v1beta1.MsgStartGroup'>;
export type EncodedAkashDeploymentMsgStartGroupResponse = Encoded<'/akash.deployment.v1beta1.MsgStartGroupResponse'>;
export type EncodedAkashDeploymentGroupID = Encoded<'/akash.deployment.v1beta1.GroupID'>;
export type EncodedAkashDeploymentGroupSpec = Encoded<'/akash.deployment.v1beta1.GroupSpec'>;
export type EncodedAkashDeploymentGroup = Encoded<'/akash.deployment.v1beta1.Group'>;
export type EncodedAkashDeploymentResource = Encoded<'/akash.deployment.v1beta1.Resource'>;
/**
 * Encodes a `MsgCloseGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.GroupID'>>) => EncodedAkashDeploymentMsgCloseGroup;
/**
 * Encodes a `MsgCloseGroupResponse` protobuf message: defines the Msg/CloseGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseGroupResponse: () => EncodedAkashDeploymentMsgCloseGroupResponse;
/**
 * Encodes a `MsgPauseGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgPauseGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.GroupID'>>) => EncodedAkashDeploymentMsgPauseGroup;
/**
 * Encodes a `MsgPauseGroupResponse` protobuf message: defines the Msg/PauseGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgPauseGroupResponse: () => EncodedAkashDeploymentMsgPauseGroupResponse;
/**
 * Encodes a `MsgStartGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgStartGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta1.GroupID'>>) => EncodedAkashDeploymentMsgStartGroup;
/**
 * Encodes a `MsgStartGroupResponse` protobuf message: defines the Msg/StartGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgStartGroupResponse: () => EncodedAkashDeploymentMsgStartGroupResponse;
/**
 * Encodes a `GroupID` protobuf message: stores owner, deployment sequence number and group sequence number
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentGroupID: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>, n_gseq?: Opt<number>) => EncodedAkashDeploymentGroupID;
/**
 * Encodes a `GroupSpec` protobuf message: stores group specifications
 * @param s_name - `name`:
 * @param g_requirements - `requirements`:
 * @param a_resources - `resources`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentGroupSpec: (s_name?: Opt<string>, atu8_requirements?: Opt<Encoded<'/akash.base.v1beta1.PlacementRequirements'>>, a_resources?: Opt<Encoded<'/akash.deployment.v1beta1.Resource'>[]>) => EncodedAkashDeploymentGroupSpec;
/**
 * Encodes a `Group` protobuf message: stores group id, state and specifications of group
 * @param g_group_id - `group_id`:
 * @param xc_state - `state`:
 * @param g_group_spec - `group_spec`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentGroup: (atu8_group_id?: Opt<Encoded<'/akash.deployment.v1beta1.GroupID'>>, xc_state?: Opt<ProtoEnumAkashDeploymentGroupState>, atu8_group_spec?: Opt<Encoded<'/akash.deployment.v1beta1.GroupSpec'>>, sg_created_at?: Opt<WeakInt64Str>) => EncodedAkashDeploymentGroup;
/**
 * Encodes a `Resource` protobuf message: stores unit, total count and price of resource
 * @param g_resources - `resources`:
 * @param n_count - `count`:
 * @param a_price - `price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentResource: (atu8_resources?: Opt<Encoded<'/akash.base.v1beta1.ResourceUnits'>>, n_count?: Opt<number>, a_price?: Opt<SlimCoin>) => EncodedAkashDeploymentResource;
/**
 * A decoded protobuf CloseGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgCloseGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf CloseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseGroup}
 */
export declare const decodeAkashDeploymentMsgCloseGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgCloseGroup;
/**
 * A decoded protobuf CloseGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgCloseGroupResponse = [];
/**
 * Decodes a protobuf CloseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseGroupResponse}
 */
export declare const decodeAkashDeploymentMsgCloseGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf PauseGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgPauseGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf PauseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgPauseGroup}
 */
export declare const decodeAkashDeploymentMsgPauseGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgPauseGroup;
/**
 * A decoded protobuf PauseGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgPauseGroupResponse = [];
/**
 * Decodes a protobuf PauseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgPauseGroupResponse}
 */
export declare const decodeAkashDeploymentMsgPauseGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf StartGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgStartGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf StartGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgStartGroup}
 */
export declare const decodeAkashDeploymentMsgStartGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgStartGroup;
/**
 * A decoded protobuf StartGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgStartGroupResponse = [];
/**
 * Decodes a protobuf StartGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgStartGroupResponse}
 */
export declare const decodeAkashDeploymentMsgStartGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf GroupID message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 */
export type DecodedAkashDeploymentGroupID = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64,
    n_gseq?: number
];
/**
 * Decodes a protobuf GroupID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGroupID}
 */
export declare const decodeAkashDeploymentGroupID: (atu8_payload: Uint8Array) => DecodedAkashDeploymentGroupID;
/**
 * A decoded protobuf GroupSpec message
 *
 * Tuple where:
 *   - 0: name -
 *   - 1: requirements -
 *   - 2: resources -
 */
export type DecodedAkashDeploymentGroupSpec = [
    s_name?: string,
    a_requirements?: DecodedAkashBasePlacementRequirements,
    a_resources?: DecodedAkashDeploymentResource[]
];
/**
 * Decodes a protobuf GroupSpec message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGroupSpec}
 */
export declare const decodeAkashDeploymentGroupSpec: (atu8_payload: Uint8Array) => DecodedAkashDeploymentGroupSpec;
/**
 * A decoded protobuf Group message
 *
 * Tuple where:
 *   - 0: group_id -
 *   - 1: state -
 *   - 2: group_spec -
 *   - 3: created_at -
 */
export type DecodedAkashDeploymentGroup = [
    a_group_id?: DecodedAkashDeploymentGroupID,
    xc_state?: ProtoEnumAkashDeploymentGroupState,
    a_group_spec?: DecodedAkashDeploymentGroupSpec,
    sg_created_at?: CwInt64
];
/**
 * Decodes a protobuf Group message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGroup}
 */
export declare const decodeAkashDeploymentGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentGroup;
/**
 * A decoded protobuf Resource message
 *
 * Tuple where:
 *   - 0: resources -
 *   - 1: count -
 *   - 2: price -
 */
export type DecodedAkashDeploymentResource = [
    a_resources?: DecodedAkashBaseResourceUnits,
    n_count?: number,
    a_price?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf Resource message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentResource}
 */
export declare const decodeAkashDeploymentResource: (atu8_payload: Uint8Array) => DecodedAkashDeploymentResource;
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgCloseGroup: (g_struct: AkashDeploymentMsgCloseGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_GROUP = "/akash.deployment.v1beta1.MsgCloseGroup";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCloseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgCloseGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentGroupID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 */
export declare const destructAkashDeploymentGroupID: (g_struct: AkashDeploymentGroupID) => [owner?: CwAccountAddr, dseq?: CwUint64, gseq?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GROUP_I_D = "/akash.deployment.v1beta1.GroupID";
/**
 * JSON serialization of `akash.deployment.v1beta1.GroupID` - stores owner, deployment sequence number and group sequence number
 */
export type AkashDeploymentGroupID = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
    gseq?: number | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgCloseGroupResponse: (g_struct: AkashDeploymentMsgCloseGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_GROUP_RESPONSE = "/akash.deployment.v1beta1.MsgCloseGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgCloseGroupResponse` - defines the Msg/CloseGroup response type.
 */
export type AkashDeploymentMsgCloseGroupResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgPauseGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgPauseGroup: (g_struct: AkashDeploymentMsgPauseGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_PAUSE_GROUP = "/akash.deployment.v1beta1.MsgPauseGroup";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgPauseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgPauseGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgPauseGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgPauseGroupResponse: (g_struct: AkashDeploymentMsgPauseGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_PAUSE_GROUP_RESPONSE = "/akash.deployment.v1beta1.MsgPauseGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgPauseGroupResponse` - defines the Msg/PauseGroup response type.
 */
export type AkashDeploymentMsgPauseGroupResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgStartGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgStartGroup: (g_struct: AkashDeploymentMsgStartGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_START_GROUP = "/akash.deployment.v1beta1.MsgStartGroup";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgStartGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgStartGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgStartGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgStartGroupResponse: (g_struct: AkashDeploymentMsgStartGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_START_GROUP_RESPONSE = "/akash.deployment.v1beta1.MsgStartGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta1.MsgStartGroupResponse` - defines the Msg/StartGroup response type.
 */
export type AkashDeploymentMsgStartGroupResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentGroupSpec} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: name -
 *   - 1: requirements -
 *   - 2: resources -
 */
export declare const destructAkashDeploymentGroupSpec: (g_struct: AkashDeploymentGroupSpec) => [name?: string, requirements?: AkashBasePlacementRequirements, resources?: AkashDeploymentResource[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GROUP_SPEC = "/akash.deployment.v1beta1.GroupSpec";
/**
 * JSON serialization of `akash.deployment.v1beta1.GroupSpec` - stores group specifications
 */
export type AkashDeploymentGroupSpec = {
    name?: string | undefined;
    requirements?: AkashBasePlacementRequirements | undefined;
    resources?: AkashDeploymentResource[] | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentResource} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: resources -
 *   - 1: count -
 *   - 2: price -
 */
export declare const destructAkashDeploymentResource: (g_struct: AkashDeploymentResource) => [resources?: AkashBaseResourceUnits, count?: number, price?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_RESOURCE = "/akash.deployment.v1beta1.Resource";
/**
 * JSON serialization of `akash.deployment.v1beta1.Resource` - stores unit, total count and price of resource
 */
export type AkashDeploymentResource = {
    resources?: AkashBaseResourceUnits | undefined;
    count?: number | undefined;
    price?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: group_id -
 *   - 1: state -
 *   - 2: group_spec -
 *   - 3: created_at -
 */
export declare const destructAkashDeploymentGroup: (g_struct: AkashDeploymentGroup) => [group_id?: AkashDeploymentGroupID, state?: JsonEnumAkashDeploymentGroupState, group_spec?: AkashDeploymentGroupSpec, created_at?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GROUP = "/akash.deployment.v1beta1.Group";
/**
 * JSON serialization of `akash.deployment.v1beta1.Group` - stores group id, state and specifications of group
 */
export type AkashDeploymentGroup = {
    group_id?: AkashDeploymentGroupID | undefined;
    state?: JsonEnumAkashDeploymentGroupState | undefined;
    group_spec?: AkashDeploymentGroupSpec | undefined;
    created_at?: CwInt64 | undefined;
};
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentGroupState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_GROUP_invalid = 0;
/**
 * JSON enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentGroupState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_GROUP_invalid = "GroupStateInvalid";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentGroupState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_GROUP_open = 1;
/**
 * JSON enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentGroupState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_GROUP_open = "GroupOpen";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **paused** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentGroupState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_GROUP_paused = 2;
/**
 * JSON enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **paused** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentGroupState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_GROUP_paused = "GroupPaused";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **insufficient_funds** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentGroupState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_GROUP_insufficient_funds = 3;
/**
 * JSON enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **insufficient_funds** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentGroupState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_GROUP_insufficient_funds = "GroupInsufficientFunds";
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentGroupState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_GROUP_closed = 4;
/**
 * JSON enum value for `akash.deployment.v1beta1.Group.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentGroupState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_GROUP_closed = "GroupClosed";
/**
 * Raw protobuf enum values for `akash.deployment.v1beta1.Group.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_GROUP_invalid}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_GROUP_open}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_GROUP_paused}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_GROUP_insufficient_funds}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_GROUP_closed}
 */
export type ProtoEnumAkashDeploymentGroupState = typeof XC_PROTO_AKASH_DEPLOYMENT_GROUP_invalid | typeof XC_PROTO_AKASH_DEPLOYMENT_GROUP_open | typeof XC_PROTO_AKASH_DEPLOYMENT_GROUP_paused | typeof XC_PROTO_AKASH_DEPLOYMENT_GROUP_insufficient_funds | typeof XC_PROTO_AKASH_DEPLOYMENT_GROUP_closed;
/**
 * JSON enum values for `akash.deployment.v1beta1.Group.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_GROUP_invalid}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_GROUP_open}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_GROUP_paused}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_GROUP_insufficient_funds}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_GROUP_closed}
 */
export type JsonEnumAkashDeploymentGroupState = typeof SI_JSON_AKASH_DEPLOYMENT_GROUP_invalid | typeof SI_JSON_AKASH_DEPLOYMENT_GROUP_open | typeof SI_JSON_AKASH_DEPLOYMENT_GROUP_paused | typeof SI_JSON_AKASH_DEPLOYMENT_GROUP_insufficient_funds | typeof SI_JSON_AKASH_DEPLOYMENT_GROUP_closed;
/**
 * Maps a protobuf enum int value for `akash.deployment.v1beta1.Group.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashDeploymentGroupState: Record<ProtoEnumAkashDeploymentGroupState, JsonEnumAkashDeploymentGroupState>;
/**
 * Maps a JSON enum string value for `akash.deployment.v1beta1.Group.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashDeploymentGroupState: Record<JsonEnumAkashDeploymentGroupState, ProtoEnumAkashDeploymentGroupState>;
