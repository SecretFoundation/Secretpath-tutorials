/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashDeploymentDeployment } from './deployment.js';
import { decodeAkashDeploymentGroup } from './group.js';
import { decodeAkashDeploymentParams } from './params.js';
/**
 * Encodes a `GenesisDeployment` protobuf message: defines the basic genesis state used by deployment module
 * @param g_deployment - `deployment`:
 * @param a_groups - `groups`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentGenesisDeployment = (atu8_deployment, a_groups) => Protobuf() // ...
    .b(atu8_deployment) // Deployment deployment = 1
    .B(a_groups) // Group[] groups = 2
    .o;
/**
 * Encodes a `GenesisState` protobuf message: stores slice of genesis deployment instance
 * @param a_deployments - `deployments`:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentGenesisState = (a_deployments, atu8_params) => Protobuf() // ...
    .B(a_deployments) // GenesisDeployment[] deployments = 1
    .b(atu8_params) // Params params = 2
    .o;
/**
 * Decodes a protobuf GenesisDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGenesisDeployment}
 */
export const decodeAkashDeploymentGenesisDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0], [decodeAkashDeploymentDeployment, decodeAkashDeploymentGroup]);
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGenesisState}
 */
export const decodeAkashDeploymentGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeAkashDeploymentGenesisDeployment, decodeAkashDeploymentParams]);
/**
 * Destructures the fields of a {@link AkashDeploymentGenesisDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deployment -
 *   - 1: groups -
 */
export const destructAkashDeploymentGenesisDeployment = (g_struct) => [g_struct.deployment, g_struct.groups];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GENESIS_DEPLOYMENT = '/akash.deployment.v1beta2.GenesisDeployment';
/**
 * Destructures the fields of a {@link AkashDeploymentGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deployments -
 *   - 1: params -
 */
export const destructAkashDeploymentGenesisState = (g_struct) => [g_struct.deployments, g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GENESIS_STATE = '/akash.deployment.v1beta2.GenesisState';
//# sourceMappingURL=genesis.js.map