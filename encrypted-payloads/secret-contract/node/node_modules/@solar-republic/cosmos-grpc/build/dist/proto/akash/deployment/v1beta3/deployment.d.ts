import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, CwInt64, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedAkashDeploymentDeploymentID = Encoded<'/akash.deployment.v1beta3.DeploymentID'>;
export type EncodedAkashDeploymentDeployment = Encoded<'/akash.deployment.v1beta3.Deployment'>;
export type EncodedAkashDeploymentDeploymentFilters = Encoded<'/akash.deployment.v1beta3.DeploymentFilters'>;
/**
 * Encodes a `DeploymentID` protobuf message: stores owner and sequence number
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeploymentID: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>) => EncodedAkashDeploymentDeploymentID;
/**
 * Encodes a `Deployment` protobuf message: stores deploymentID, state and version details
 * @param g_deployment_id - `deployment_id`:
 * @param xc_state - `state`:
 * @param atu8_version - `version`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeployment: (atu8_deployment_id?: Opt<Encoded<'/akash.deployment.v1beta3.DeploymentID'>>, xc_state?: Opt<ProtoEnumAkashDeploymentDeploymentState>, atu8_version?: Opt<Uint8Array>, sg_created_at?: Opt<WeakInt64Str>) => EncodedAkashDeploymentDeployment;
/**
 * Encodes a `DeploymentFilters` protobuf message: defines filters used to filter deployments
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentDeploymentFilters: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>, s_state?: Opt<string>) => EncodedAkashDeploymentDeploymentFilters;
/**
 * A decoded protobuf DeploymentID message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 */
export type DecodedAkashDeploymentDeploymentID = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64
];
/**
 * Decodes a protobuf DeploymentID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentID}
 */
export declare const decodeAkashDeploymentDeploymentID: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeploymentID;
/**
 * A decoded protobuf Deployment message
 *
 * Tuple where:
 *   - 0: deployment_id -
 *   - 1: state -
 *   - 2: version -
 *   - 3: created_at -
 */
export type DecodedAkashDeploymentDeployment = [
    a_deployment_id?: DecodedAkashDeploymentDeploymentID,
    xc_state?: ProtoEnumAkashDeploymentDeploymentState,
    atu8_version?: Uint8Array,
    sg_created_at?: CwInt64
];
/**
 * Decodes a protobuf Deployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeployment}
 */
export declare const decodeAkashDeploymentDeployment: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeployment;
/**
 * A decoded protobuf DeploymentFilters message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: state -
 */
export type DecodedAkashDeploymentDeploymentFilters = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64,
    s_state?: string
];
/**
 * Decodes a protobuf DeploymentFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentFilters}
 */
export declare const decodeAkashDeploymentDeploymentFilters: (atu8_payload: Uint8Array) => DecodedAkashDeploymentDeploymentFilters;
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 */
export declare const destructAkashDeploymentDeploymentID: (g_struct: AkashDeploymentDeploymentID) => [owner?: CwAccountAddr, dseq?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_I_D = "/akash.deployment.v1beta3.DeploymentID";
/**
 * JSON serialization of `akash.deployment.v1beta3.DeploymentID` - stores owner and sequence number
 */
export type AkashDeploymentDeploymentID = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deployment_id -
 *   - 1: state -
 *   - 2: version -
 *   - 3: created_at -
 */
export declare const destructAkashDeploymentDeployment: (g_struct: AkashDeploymentDeployment) => [deployment_id?: AkashDeploymentDeploymentID, state?: JsonEnumAkashDeploymentDeploymentState, version?: Uint8Array, created_at?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT = "/akash.deployment.v1beta3.Deployment";
/**
 * JSON serialization of `akash.deployment.v1beta3.Deployment` - stores deploymentID, state and version details
 */
export type AkashDeploymentDeployment = {
    deployment_id?: AkashDeploymentDeploymentID | undefined;
    state?: JsonEnumAkashDeploymentDeploymentState | undefined;
    version?: CwBase64 | undefined;
    created_at?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: state -
 */
export declare const destructAkashDeploymentDeploymentFilters: (g_struct: AkashDeploymentDeploymentFilters) => [owner?: CwAccountAddr, dseq?: CwUint64, state?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_FILTERS = "/akash.deployment.v1beta3.DeploymentFilters";
/**
 * JSON serialization of `akash.deployment.v1beta3.DeploymentFilters` - defines filters used to filter deployments
 */
export type AkashDeploymentDeploymentFilters = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
    state?: string | undefined;
};
/**
 * Protobuf enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = 0;
/**
 * JSON enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = "DeploymentStateInvalid";
/**
 * Protobuf enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active = 1;
/**
 * JSON enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active = "DeploymentActive";
/**
 * Protobuf enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export declare const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed = 2;
/**
 * JSON enum value for `akash.deployment.v1beta3.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export declare const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed = "DeploymentClosed";
/**
 * Raw protobuf enum values for `akash.deployment.v1beta3.Deployment.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active}
 *   - {@link XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed}
 */
export type ProtoEnumAkashDeploymentDeploymentState = typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid | typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active | typeof XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed;
/**
 * JSON enum values for `akash.deployment.v1beta3.Deployment.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active}
 *   - {@link SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed}
 */
export type JsonEnumAkashDeploymentDeploymentState = typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid | typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active | typeof SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed;
/**
 * Maps a protobuf enum int value for `akash.deployment.v1beta3.Deployment.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashDeploymentDeploymentState: Record<ProtoEnumAkashDeploymentDeploymentState, JsonEnumAkashDeploymentDeploymentState>;
/**
 * Maps a JSON enum string value for `akash.deployment.v1beta3.Deployment.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashDeploymentDeploymentState: Record<JsonEnumAkashDeploymentDeploymentState, ProtoEnumAkashDeploymentDeploymentState>;
