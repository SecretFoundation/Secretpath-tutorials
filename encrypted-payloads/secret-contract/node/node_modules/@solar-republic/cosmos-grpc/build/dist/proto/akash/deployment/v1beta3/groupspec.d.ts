import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashBasePlacementRequirements, DecodedAkashBasePlacementRequirements } from '../../base/v1beta3/attribute.js';
import type { AkashDeploymentResourceUnit, DecodedAkashDeploymentResourceUnit } from './resourceunit.js';
export type EncodedAkashDeploymentGroupSpec = Encoded<'/akash.deployment.v1beta3.GroupSpec'>;
/**
 * Encodes a `GroupSpec` protobuf message: stores group specifications
 * @param s_name - `name`:
 * @param g_requirements - `requirements`:
 * @param a_resources - `resources`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentGroupSpec: (s_name?: Opt<string>, atu8_requirements?: Opt<Encoded<'/akash.base.v1beta3.PlacementRequirements'>>, a_resources?: Opt<Encoded<'/akash.deployment.v1beta3.ResourceUnit'>[]>) => EncodedAkashDeploymentGroupSpec;
/**
 * A decoded protobuf GroupSpec message
 *
 * Tuple where:
 *   - 0: name -
 *   - 1: requirements -
 *   - 2: resources -
 */
export type DecodedAkashDeploymentGroupSpec = [
    s_name?: string,
    a_requirements?: DecodedAkashBasePlacementRequirements,
    a_resources?: DecodedAkashDeploymentResourceUnit[]
];
/**
 * Decodes a protobuf GroupSpec message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentGroupSpec}
 */
export declare const decodeAkashDeploymentGroupSpec: (atu8_payload: Uint8Array) => DecodedAkashDeploymentGroupSpec;
/**
 * Destructures the fields of a {@link AkashDeploymentGroupSpec} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: name -
 *   - 1: requirements -
 *   - 2: resources -
 */
export declare const destructAkashDeploymentGroupSpec: (g_struct: AkashDeploymentGroupSpec) => [name?: string, requirements?: AkashBasePlacementRequirements, resources?: AkashDeploymentResourceUnit[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_GROUP_SPEC = "/akash.deployment.v1beta3.GroupSpec";
/**
 * JSON serialization of `akash.deployment.v1beta3.GroupSpec` - stores group specifications
 */
export type AkashDeploymentGroupSpec = {
    name?: string | undefined;
    requirements?: AkashBasePlacementRequirements | undefined;
    resources?: AkashDeploymentResourceUnit[] | undefined;
};
