/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashBaseResources } from '../../base/v1beta3/resources.js';
import { decodeCosmosBaseDecCoin } from '../../../cosmos/base/v1beta1/coin.js';
/**
 * Encodes a `ResourceUnit` protobuf message: extends Resources and adds Count along with the Price
 * @param g_resource - `resource`:
 * @param n_count - `count`:
 * @param g_price - `price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentResourceUnit = (atu8_resource, n_count, atu8_price) => Protobuf() // ...
    .b(atu8_resource) // Resources resource = 1
    .v(n_count) // uint32 count = 2
    .b(atu8_price) // DecCoin price = 3
    .o;
/**
 * Decodes a protobuf ResourceUnit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentResourceUnit}
 */
export const decodeAkashDeploymentResourceUnit = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1], [decodeAkashBaseResources, 0, decodeCosmosBaseDecCoin]);
/**
 * Destructures the fields of a {@link AkashDeploymentResourceUnit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: resource -
 *   - 1: count -
 *   - 2: price -
 */
export const destructAkashDeploymentResourceUnit = (g_struct) => [g_struct.resource, g_struct.count, g_struct.price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_RESOURCE_UNIT = '/akash.deployment.v1beta3.ResourceUnit';
//# sourceMappingURL=resourceunit.js.map