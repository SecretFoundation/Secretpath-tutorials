/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashEscrowAccount, DecodedAkashEscrowAccount, AkashEscrowPayment, DecodedAkashEscrowPayment } from './types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
export type EncodedAkashEscrowQueryAccountsRequest = Encoded<'/akash.escrow.v1beta1.QueryAccountsRequest'>;
export type EncodedAkashEscrowQueryAccountsResponse = Encoded<'/akash.escrow.v1beta1.QueryAccountsResponse'>;
export type EncodedAkashEscrowQueryPaymentsRequest = Encoded<'/akash.escrow.v1beta1.QueryPaymentsRequest'>;
export type EncodedAkashEscrowQueryPaymentsResponse = Encoded<'/akash.escrow.v1beta1.QueryPaymentsResponse'>;
/**
 * Buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME Accounts queries all accounts
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_scope -
 * @param s_xid -
 * @param sa_owner -
 * @param s_state -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 *   - 1: pagination - the 'accounts' response property
 */
export declare const queryAkashEscrowAccounts: (z_req: string | ({
    origin: string;
} & RequestInit), s_scope?: Opt<string>, s_xid?: Opt<string>, sa_owner?: Opt<`${string}1${string}`>, s_state?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashEscrowQueryAccountsResponse>>;
/**
 * Buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME Payments queries all payments
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_scope -
 * @param s_xid -
 * @param s_id -
 * @param sa_owner -
 * @param s_state -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: payments - the 'payments' response property
 *   - 1: pagination - the 'payments' response property
 */
export declare const queryAkashEscrowPayments: (z_req: string | ({
    origin: string;
} & RequestInit), s_scope?: Opt<string>, s_xid?: Opt<string>, s_id?: Opt<string>, sa_owner?: Opt<`${string}1${string}`>, s_state?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashEscrowQueryPaymentsResponse>>;
/**
 * Encodes a `QueryAccountsRequest` protobuf message: QueryAccountRequest is request type for the Query/Account RPC method
 * @param s_scope - `scope`:
 * @param s_xid - `xid`:
 * @param sa_owner - `owner`:
 * @param s_state - `state`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowQueryAccountsRequest: (s_scope?: Opt<string>, s_xid?: Opt<string>, sa_owner?: Opt<WeakAccountAddr>, s_state?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashEscrowQueryAccountsRequest;
/**
 * Encodes a `QueryAccountsResponse` protobuf message: QueryProvidersResponse is response type for the Query/Providers RPC method
 * @param a_accounts - `accounts`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowQueryAccountsResponse: (a_accounts?: Opt<Encoded<'/akash.escrow.v1beta1.Account'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashEscrowQueryAccountsResponse;
/**
 * Encodes a `QueryPaymentsRequest` protobuf message: QueryPaymentRequest is request type for the Query/Payment RPC method
 * @param s_scope - `scope`:
 * @param s_xid - `xid`:
 * @param s_id - `id`:
 * @param sa_owner - `owner`:
 * @param s_state - `state`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowQueryPaymentsRequest: (s_scope?: Opt<string>, s_xid?: Opt<string>, s_id?: Opt<string>, sa_owner?: Opt<WeakAccountAddr>, s_state?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashEscrowQueryPaymentsRequest;
/**
 * Encodes a `QueryPaymentsResponse` protobuf message: QueryProvidersResponse is response type for the Query/Providers RPC method
 * @param a_payments - `payments`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowQueryPaymentsResponse: (a_payments?: Opt<Encoded<'/akash.escrow.v1beta1.Payment'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashEscrowQueryPaymentsResponse;
/**
 * A decoded protobuf QueryAccountsRequest message
 *
 * Tuple where:
 *   - 0: scope -
 *   - 1: xid -
 *   - 2: owner -
 *   - 3: state -
 *   - 4: pagination -
 */
export type DecodedAkashEscrowQueryAccountsRequest = [
    s_scope?: string,
    s_xid?: string,
    sa_owner?: CwAccountAddr,
    s_state?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowQueryAccountsRequest}
 */
export declare const decodeAkashEscrowQueryAccountsRequest: (atu8_payload: Uint8Array) => DecodedAkashEscrowQueryAccountsRequest;
/**
 * A decoded protobuf QueryAccounts message
 *
 * Tuple where:
 *   - 0: accounts -
 *   - 1: pagination -
 */
export type DecodedAkashEscrowQueryAccountsResponse = [
    a_accounts?: DecodedAkashEscrowAccount[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryAccounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowQueryAccountsResponse}
 */
export declare const decodeAkashEscrowQueryAccountsResponse: (atu8_payload: Uint8Array) => DecodedAkashEscrowQueryAccountsResponse;
/**
 * A decoded protobuf QueryPaymentsRequest message
 *
 * Tuple where:
 *   - 0: scope -
 *   - 1: xid -
 *   - 2: id -
 *   - 3: owner -
 *   - 4: state -
 *   - 5: pagination -
 */
export type DecodedAkashEscrowQueryPaymentsRequest = [
    s_scope?: string,
    s_xid?: string,
    s_id?: string,
    sa_owner?: CwAccountAddr,
    s_state?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryPaymentsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowQueryPaymentsRequest}
 */
export declare const decodeAkashEscrowQueryPaymentsRequest: (atu8_payload: Uint8Array) => DecodedAkashEscrowQueryPaymentsRequest;
/**
 * A decoded protobuf QueryPayments message
 *
 * Tuple where:
 *   - 0: payments -
 *   - 1: pagination -
 */
export type DecodedAkashEscrowQueryPaymentsResponse = [
    a_payments?: DecodedAkashEscrowPayment[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryPayments message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowQueryPaymentsResponse}
 */
export declare const decodeAkashEscrowQueryPaymentsResponse: (atu8_payload: Uint8Array) => DecodedAkashEscrowQueryPaymentsResponse;
/**
 * Destructures the fields of a {@link AkashEscrowQueryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: scope -
 *   - 1: xid -
 *   - 2: owner -
 *   - 3: state -
 *   - 4: pagination -
 */
export declare const destructAkashEscrowQueryAccountsRequest: (g_struct: AkashEscrowQueryAccountsRequest) => [scope?: string, xid?: string, owner?: CwAccountAddr, state?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_QUERY_ACCOUNTS_REQUEST = "/akash.escrow.v1beta1.QueryAccountsRequest";
/**
 * JSON serialization of `akash.escrow.v1beta1.QueryAccountsRequest` - QueryAccountRequest is request type for the Query/Account RPC method
 */
export type AkashEscrowQueryAccountsRequest = {
    scope?: string | undefined;
    xid?: string | undefined;
    owner?: CwAccountAddr | undefined;
    state?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashEscrowQueryAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 *   - 1: pagination -
 */
export declare const destructAkashEscrowQueryAccountsResponse: (g_struct: AkashEscrowQueryAccountsResponse) => [accounts?: AkashEscrowAccount[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_QUERY_ACCOUNTS_RESPONSE = "/akash.escrow.v1beta1.QueryAccountsResponse";
/**
 * JSON serialization of `akash.escrow.v1beta1.QueryAccountsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export type AkashEscrowQueryAccountsResponse = {
    accounts?: AkashEscrowAccount[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link AkashEscrowQueryPaymentsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: scope -
 *   - 1: xid -
 *   - 2: id -
 *   - 3: owner -
 *   - 4: state -
 *   - 5: pagination -
 */
export declare const destructAkashEscrowQueryPaymentsRequest: (g_struct: AkashEscrowQueryPaymentsRequest) => [scope?: string, xid?: string, id?: string, owner?: CwAccountAddr, state?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_QUERY_PAYMENTS_REQUEST = "/akash.escrow.v1beta1.QueryPaymentsRequest";
/**
 * JSON serialization of `akash.escrow.v1beta1.QueryPaymentsRequest` - QueryPaymentRequest is request type for the Query/Payment RPC method
 */
export type AkashEscrowQueryPaymentsRequest = {
    scope?: string | undefined;
    xid?: string | undefined;
    id?: string | undefined;
    owner?: CwAccountAddr | undefined;
    state?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashEscrowQueryPaymentsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: payments -
 *   - 1: pagination -
 */
export declare const destructAkashEscrowQueryPaymentsResponse: (g_struct: AkashEscrowQueryPaymentsResponse) => [payments?: AkashEscrowPayment[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_QUERY_PAYMENTS_RESPONSE = "/akash.escrow.v1beta1.QueryPaymentsResponse";
/**
 * JSON serialization of `akash.escrow.v1beta1.QueryPaymentsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export type AkashEscrowQueryPaymentsResponse = {
    payments?: AkashEscrowPayment[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
