import type { WeakInt64Str, WeakAccountAddr, SlimCoin, CwInt64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
export type EncodedAkashEscrowAccountID = Encoded<'/akash.escrow.v1beta1.AccountID'>;
export type EncodedAkashEscrowAccount = Encoded<'/akash.escrow.v1beta1.Account'>;
export type EncodedAkashEscrowPayment = Encoded<'/akash.escrow.v1beta1.Payment'>;
/**
 * Encodes a `AccountID` protobuf message: the account identifier
 * @param s_scope - `scope`:
 * @param s_xid - `xid`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowAccountID: (s_scope?: Opt<string>, s_xid?: Opt<string>) => EncodedAkashEscrowAccountID;
/**
 * Encodes a `Account` protobuf message: stores state for an escrow account
 * @param g_id - `id`: unique identifier for this escrow account
 * @param sa_owner - `owner`: bech32 encoded account address of the owner of this escrow account
 * @param xc_state - `state`: current state of this escrow account
 * @param a_balance - `balance`: unspent coins received from the owner's wallet
 * @param a_transferred - `transferred`: total coins spent by this account
 * @param sg_settled_at - `settled_at`: block height at which this account was last settled
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowAccount: (atu8_id?: Opt<Encoded<'/akash.escrow.v1beta1.AccountID'>>, sa_owner?: Opt<WeakAccountAddr>, xc_state?: Opt<ProtoEnumAkashEscrowAccountState>, a_balance?: Opt<SlimCoin>, a_transferred?: Opt<SlimCoin>, sg_settled_at?: Opt<WeakInt64Str>) => EncodedAkashEscrowAccount;
/**
 * Encodes a `Payment` protobuf message: stores state for a payment
 * @param g_account_id - `account_id`:
 * @param si_payment - `payment_id`:
 * @param sa_owner - `owner`:
 * @param xc_state - `state`:
 * @param a_rate - `rate`:
 * @param a_balance - `balance`:
 * @param a_withdrawn - `withdrawn`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashEscrowPayment: (atu8_account_id?: Opt<Encoded<'/akash.escrow.v1beta1.AccountID'>>, si_payment?: Opt<string>, sa_owner?: Opt<WeakAccountAddr>, xc_state?: Opt<ProtoEnumAkashEscrowPaymentState>, a_rate?: Opt<SlimCoin>, a_balance?: Opt<SlimCoin>, a_withdrawn?: Opt<SlimCoin>) => EncodedAkashEscrowPayment;
/**
 * A decoded protobuf AccountID message
 *
 * Tuple where:
 *   - 0: scope -
 *   - 1: xid -
 */
export type DecodedAkashEscrowAccountID = [
    s_scope?: string,
    s_xid?: string
];
/**
 * Decodes a protobuf AccountID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowAccountID}
 */
export declare const decodeAkashEscrowAccountID: (atu8_payload: Uint8Array) => DecodedAkashEscrowAccountID;
/**
 * A decoded protobuf Account message
 *
 * Tuple where:
 *   - 0: id - unique identifier for this escrow account
 *   - 1: owner - bech32 encoded account address of the owner of this escrow account
 *   - 2: state - current state of this escrow account
 *   - 3: balance - unspent coins received from the owner's wallet
 *   - 4: transferred - total coins spent by this account
 *   - 5: settled_at - block height at which this account was last settled
 */
export type DecodedAkashEscrowAccount = [
    a_id?: DecodedAkashEscrowAccountID,
    sa_owner?: CwAccountAddr,
    xc_state?: ProtoEnumAkashEscrowAccountState,
    a_balance?: [
        string,
        string
    ],
    a_transferred?: [
        string,
        string
    ],
    sg_settled_at?: CwInt64
];
/**
 * Decodes a protobuf Account message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowAccount}
 */
export declare const decodeAkashEscrowAccount: (atu8_payload: Uint8Array) => DecodedAkashEscrowAccount;
/**
 * A decoded protobuf Payment message
 *
 * Tuple where:
 *   - 0: account_id -
 *   - 1: payment_id -
 *   - 2: owner -
 *   - 3: state -
 *   - 4: rate -
 *   - 5: balance -
 *   - 6: withdrawn -
 */
export type DecodedAkashEscrowPayment = [
    a_account_id?: DecodedAkashEscrowAccountID,
    si_payment?: string,
    sa_owner?: CwAccountAddr,
    xc_state?: ProtoEnumAkashEscrowPaymentState,
    a_rate?: [
        string,
        string
    ],
    a_balance?: [
        string,
        string
    ],
    a_withdrawn?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf Payment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashEscrowPayment}
 */
export declare const decodeAkashEscrowPayment: (atu8_payload: Uint8Array) => DecodedAkashEscrowPayment;
/**
 * Destructures the fields of a {@link AkashEscrowAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id - unique identifier for this escrow account
 *   - 1: owner - bech32 encoded account address of the owner of this escrow account
 *   - 2: state - current state of this escrow account
 *   - 3: balance - unspent coins received from the owner's wallet
 *   - 4: transferred - total coins spent by this account
 *   - 5: settled_at - block height at which this account was last settled
 */
export declare const destructAkashEscrowAccount: (g_struct: AkashEscrowAccount) => [id?: AkashEscrowAccountID, owner?: CwAccountAddr, state?: JsonEnumAkashEscrowAccountState, balance?: CosmosBaseCoin, transferred?: CosmosBaseCoin, settled_at?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_ACCOUNT = "/akash.escrow.v1beta1.Account";
/**
 * JSON serialization of `akash.escrow.v1beta1.Account` - stores state for an escrow account
 */
export type AkashEscrowAccount = {
    id?: AkashEscrowAccountID | undefined;
    owner?: CwAccountAddr | undefined;
    state?: JsonEnumAkashEscrowAccountState | undefined;
    balance?: CosmosBaseCoin | undefined;
    transferred?: CosmosBaseCoin | undefined;
    settled_at?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashEscrowAccountID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: scope -
 *   - 1: xid -
 */
export declare const destructAkashEscrowAccountID: (g_struct: AkashEscrowAccountID) => [scope?: string, xid?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_ACCOUNT_I_D = "/akash.escrow.v1beta1.AccountID";
/**
 * JSON serialization of `akash.escrow.v1beta1.AccountID` - the account identifier
 */
export type AkashEscrowAccountID = {
    scope?: string | undefined;
    xid?: string | undefined;
};
/**
 * Destructures the fields of a {@link AkashEscrowPayment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account_id -
 *   - 1: payment_id -
 *   - 2: owner -
 *   - 3: state -
 *   - 4: rate -
 *   - 5: balance -
 *   - 6: withdrawn -
 */
export declare const destructAkashEscrowPayment: (g_struct: AkashEscrowPayment) => [account_id?: AkashEscrowAccountID, payment_id?: string, owner?: CwAccountAddr, state?: JsonEnumAkashEscrowPaymentState, rate?: CosmosBaseCoin, balance?: CosmosBaseCoin, withdrawn?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_ESCROW_PAYMENT = "/akash.escrow.v1beta1.Payment";
/**
 * JSON serialization of `akash.escrow.v1beta1.Payment` - stores state for a payment
 */
export type AkashEscrowPayment = {
    account_id?: AkashEscrowAccountID | undefined;
    payment_id?: string | undefined;
    owner?: CwAccountAddr | undefined;
    state?: JsonEnumAkashEscrowPaymentState | undefined;
    rate?: CosmosBaseCoin | undefined;
    balance?: CosmosBaseCoin | undefined;
    withdrawn?: CosmosBaseCoin | undefined;
};
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowAccountState}
 */
export declare const XC_PROTO_AKASH_ESCROW_ACCOUNT_invalid = 0;
/**
 * JSON enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowAccountState}
 */
export declare const SI_JSON_AKASH_ESCROW_ACCOUNT_invalid = "AccountStateInvalid";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowAccountState}
 */
export declare const XC_PROTO_AKASH_ESCROW_ACCOUNT_open = 1;
/**
 * JSON enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowAccountState}
 */
export declare const SI_JSON_AKASH_ESCROW_ACCOUNT_open = "AccountOpen";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowAccountState}
 */
export declare const XC_PROTO_AKASH_ESCROW_ACCOUNT_closed = 2;
/**
 * JSON enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowAccountState}
 */
export declare const SI_JSON_AKASH_ESCROW_ACCOUNT_closed = "AccountClosed";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **overdrawn** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowAccountState}
 */
export declare const XC_PROTO_AKASH_ESCROW_ACCOUNT_overdrawn = 3;
/**
 * JSON enum value for `akash.escrow.v1beta1.Account.State`.
 *
 * **overdrawn** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowAccountState}
 */
export declare const SI_JSON_AKASH_ESCROW_ACCOUNT_overdrawn = "AccountOverdrawn";
/**
 * Raw protobuf enum values for `akash.escrow.v1beta1.Account.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_ESCROW_ACCOUNT_invalid}
 *   - {@link XC_PROTO_AKASH_ESCROW_ACCOUNT_open}
 *   - {@link XC_PROTO_AKASH_ESCROW_ACCOUNT_closed}
 *   - {@link XC_PROTO_AKASH_ESCROW_ACCOUNT_overdrawn}
 */
export type ProtoEnumAkashEscrowAccountState = typeof XC_PROTO_AKASH_ESCROW_ACCOUNT_invalid | typeof XC_PROTO_AKASH_ESCROW_ACCOUNT_open | typeof XC_PROTO_AKASH_ESCROW_ACCOUNT_closed | typeof XC_PROTO_AKASH_ESCROW_ACCOUNT_overdrawn;
/**
 * JSON enum values for `akash.escrow.v1beta1.Account.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_ESCROW_ACCOUNT_invalid}
 *   - {@link SI_JSON_AKASH_ESCROW_ACCOUNT_open}
 *   - {@link SI_JSON_AKASH_ESCROW_ACCOUNT_closed}
 *   - {@link SI_JSON_AKASH_ESCROW_ACCOUNT_overdrawn}
 */
export type JsonEnumAkashEscrowAccountState = typeof SI_JSON_AKASH_ESCROW_ACCOUNT_invalid | typeof SI_JSON_AKASH_ESCROW_ACCOUNT_open | typeof SI_JSON_AKASH_ESCROW_ACCOUNT_closed | typeof SI_JSON_AKASH_ESCROW_ACCOUNT_overdrawn;
/**
 * Maps a protobuf enum int value for `akash.escrow.v1beta1.Account.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashEscrowAccountState: Record<ProtoEnumAkashEscrowAccountState, JsonEnumAkashEscrowAccountState>;
/**
 * Maps a JSON enum string value for `akash.escrow.v1beta1.Account.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashEscrowAccountState: Record<JsonEnumAkashEscrowAccountState, ProtoEnumAkashEscrowAccountState>;
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowPaymentState}
 */
export declare const XC_PROTO_AKASH_ESCROW_PAYMENT_invalid = 0;
/**
 * JSON enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowPaymentState}
 */
export declare const SI_JSON_AKASH_ESCROW_PAYMENT_invalid = "PaymentStateInvalid";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowPaymentState}
 */
export declare const XC_PROTO_AKASH_ESCROW_PAYMENT_open = 1;
/**
 * JSON enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowPaymentState}
 */
export declare const SI_JSON_AKASH_ESCROW_PAYMENT_open = "PaymentOpen";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowPaymentState}
 */
export declare const XC_PROTO_AKASH_ESCROW_PAYMENT_closed = 2;
/**
 * JSON enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowPaymentState}
 */
export declare const SI_JSON_AKASH_ESCROW_PAYMENT_closed = "PaymentClosed";
/**
 * Protobuf enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **overdrawn** -
 *
 * Belongs to enum type {@link ProtoEnumAkashEscrowPaymentState}
 */
export declare const XC_PROTO_AKASH_ESCROW_PAYMENT_overdrawn = 3;
/**
 * JSON enum value for `akash.escrow.v1beta1.Payment.State`.
 *
 * **overdrawn** -
 *
 * Belongs to enum type {@link JsonEnumAkashEscrowPaymentState}
 */
export declare const SI_JSON_AKASH_ESCROW_PAYMENT_overdrawn = "PaymentOverdrawn";
/**
 * Raw protobuf enum values for `akash.escrow.v1beta1.Payment.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_ESCROW_PAYMENT_invalid}
 *   - {@link XC_PROTO_AKASH_ESCROW_PAYMENT_open}
 *   - {@link XC_PROTO_AKASH_ESCROW_PAYMENT_closed}
 *   - {@link XC_PROTO_AKASH_ESCROW_PAYMENT_overdrawn}
 */
export type ProtoEnumAkashEscrowPaymentState = typeof XC_PROTO_AKASH_ESCROW_PAYMENT_invalid | typeof XC_PROTO_AKASH_ESCROW_PAYMENT_open | typeof XC_PROTO_AKASH_ESCROW_PAYMENT_closed | typeof XC_PROTO_AKASH_ESCROW_PAYMENT_overdrawn;
/**
 * JSON enum values for `akash.escrow.v1beta1.Payment.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_ESCROW_PAYMENT_invalid}
 *   - {@link SI_JSON_AKASH_ESCROW_PAYMENT_open}
 *   - {@link SI_JSON_AKASH_ESCROW_PAYMENT_closed}
 *   - {@link SI_JSON_AKASH_ESCROW_PAYMENT_overdrawn}
 */
export type JsonEnumAkashEscrowPaymentState = typeof SI_JSON_AKASH_ESCROW_PAYMENT_invalid | typeof SI_JSON_AKASH_ESCROW_PAYMENT_open | typeof SI_JSON_AKASH_ESCROW_PAYMENT_closed | typeof SI_JSON_AKASH_ESCROW_PAYMENT_overdrawn;
/**
 * Maps a protobuf enum int value for `akash.escrow.v1beta1.Payment.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashEscrowPaymentState: Record<ProtoEnumAkashEscrowPaymentState, JsonEnumAkashEscrowPaymentState>;
/**
 * Maps a JSON enum string value for `akash.escrow.v1beta1.Payment.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashEscrowPaymentState: Record<JsonEnumAkashEscrowPaymentState, ProtoEnumAkashEscrowPaymentState>;
