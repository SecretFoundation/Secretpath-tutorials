import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashDeploymentGroupSpec } from '../../deployment/v1beta2/groupspec.js';
/**
 * Encodes a `OrderID` protobuf message: stores owner and all other seq numbers
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketOrderID = (sa_owner, sg_dseq, n_gseq, n_oseq) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .v(n_gseq) // uint32 gseq = 3
    .v(n_oseq) // uint32 oseq = 4
    .o;
/**
 * Encodes a `Order` protobuf message: stores orderID, state of order and other details
 * @param g_order_id - `order_id`:
 * @param xc_state - `state`:
 * @param g_spec - `spec`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketOrder = (atu8_order_id, xc_state, atu8_spec, sg_created_at) => Protobuf() // ...
    .b(atu8_order_id) // OrderID order_id = 1
    .v(xc_state) // State state = 2
    .b(atu8_spec) // GroupSpec spec = 3
    .g(sg_created_at) // int32 created_at = 4
    .o;
/**
 * Encodes a `OrderFilters` protobuf message: defines flags for order list filter
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketOrderFilters = (sa_owner, sg_dseq, n_gseq, n_oseq, s_state) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .v(n_gseq) // uint32 gseq = 3
    .v(n_oseq) // uint32 oseq = 4
    .s(s_state) // string state = 5
    .o;
/**
 * Decodes a protobuf OrderID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketOrderID}
 */
export const decodeAkashMarketOrderID = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 1, 1]);
/**
 * Decodes a protobuf Order message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketOrder}
 */
export const decodeAkashMarketOrder = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 3], [decodeAkashMarketOrderID, 0, decodeAkashDeploymentGroupSpec]);
/**
 * Decodes a protobuf OrderFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketOrderFilters}
 */
export const decodeAkashMarketOrderFilters = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 1, 1, 5]);
/**
 * Destructures the fields of a {@link AkashMarketOrderID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 */
export const destructAkashMarketOrderID = (g_struct) => [g_struct.owner, g_struct.dseq, g_struct.gseq, g_struct.oseq];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_ORDER_I_D = '/akash.market.v1beta2.OrderID';
/**
 * Destructures the fields of a {@link AkashMarketOrderFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: state -
 */
export const destructAkashMarketOrderFilters = (g_struct) => [g_struct.owner, g_struct.dseq, g_struct.gseq, g_struct.oseq, g_struct.state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_ORDER_FILTERS = '/akash.market.v1beta2.OrderFilters';
/**
 * Destructures the fields of a {@link AkashMarketOrder} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: order_id -
 *   - 1: state -
 *   - 2: spec -
 *   - 3: created_at -
 */
export const destructAkashMarketOrder = (g_struct) => [g_struct.order_id, g_struct.state, g_struct.spec, g_struct.created_at];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_ORDER = '/akash.market.v1beta2.Order';
/**
 * Protobuf enum value for `akash.market.v1beta2.Order.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketOrderState}
 */
export const XC_PROTO_AKASH_MARKET_ORDER_invalid = 0;
/**
 * JSON enum value for `akash.market.v1beta2.Order.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketOrderState}
 */
export const SI_JSON_AKASH_MARKET_ORDER_invalid = 'OrderStateInvalid';
/**
 * Protobuf enum value for `akash.market.v1beta2.Order.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketOrderState}
 */
export const XC_PROTO_AKASH_MARKET_ORDER_open = 1;
/**
 * JSON enum value for `akash.market.v1beta2.Order.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketOrderState}
 */
export const SI_JSON_AKASH_MARKET_ORDER_open = 'OrderOpen';
/**
 * Protobuf enum value for `akash.market.v1beta2.Order.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketOrderState}
 */
export const XC_PROTO_AKASH_MARKET_ORDER_active = 2;
/**
 * JSON enum value for `akash.market.v1beta2.Order.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketOrderState}
 */
export const SI_JSON_AKASH_MARKET_ORDER_active = 'OrderActive';
/**
 * Protobuf enum value for `akash.market.v1beta2.Order.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketOrderState}
 */
export const XC_PROTO_AKASH_MARKET_ORDER_closed = 3;
/**
 * JSON enum value for `akash.market.v1beta2.Order.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketOrderState}
 */
export const SI_JSON_AKASH_MARKET_ORDER_closed = 'OrderClosed';
/**
 * Maps a protobuf enum int value for `akash.market.v1beta2.Order.State` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumAkashMarketOrderState = {
    [XC_PROTO_AKASH_MARKET_ORDER_invalid]: SI_JSON_AKASH_MARKET_ORDER_invalid,
    [XC_PROTO_AKASH_MARKET_ORDER_open]: SI_JSON_AKASH_MARKET_ORDER_open,
    [XC_PROTO_AKASH_MARKET_ORDER_active]: SI_JSON_AKASH_MARKET_ORDER_active,
    [XC_PROTO_AKASH_MARKET_ORDER_closed]: SI_JSON_AKASH_MARKET_ORDER_closed,
};
/**
 * Maps a JSON enum string value for `akash.market.v1beta2.Order.State` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumAkashMarketOrderState = {
    [SI_JSON_AKASH_MARKET_ORDER_invalid]: XC_PROTO_AKASH_MARKET_ORDER_invalid,
    [SI_JSON_AKASH_MARKET_ORDER_open]: XC_PROTO_AKASH_MARKET_ORDER_open,
    [SI_JSON_AKASH_MARKET_ORDER_active]: XC_PROTO_AKASH_MARKET_ORDER_active,
    [SI_JSON_AKASH_MARKET_ORDER_closed]: XC_PROTO_AKASH_MARKET_ORDER_closed,
};
//# sourceMappingURL=order.js.map