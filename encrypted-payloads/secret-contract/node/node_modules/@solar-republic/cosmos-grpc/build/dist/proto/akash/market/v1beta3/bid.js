import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, coin } from '../../../../api/protobuf-writer.js';
import { decodeAkashMarketOrderID } from './order.js';
import { decodeCosmosBaseDecCoin } from '../../../cosmos/base/v1beta1/coin.js';
/**
 * Encodes a `MsgCreateBid` protobuf message: defines an SDK message for creating Bid
 * @param g_order - `order`:
 * @param s_provider - `provider`:
 * @param g_price - `price`:
 * @param a_deposit - `deposit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketMsgCreateBid = (atu8_order, s_provider, atu8_price, a_deposit) => Protobuf() // ...
    .b(atu8_order) // OrderID order = 1
    .s(s_provider) // string provider = 2
    .b(atu8_price) // DecCoin price = 3
    .b(coin(a_deposit)) // Coin deposit = 4
    .o;
/**
 * Encodes a `MsgCreateBidResponse` protobuf message: defines the Msg/CreateBid response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketMsgCreateBidResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgCloseBid` protobuf message: defines an SDK message for closing bid
 * @param g_bid_id - `bid_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketMsgCloseBid = (atu8_bid_id) => Protobuf() // ...
    .b(atu8_bid_id) // BidID bid_id = 1
    .o;
/**
 * Encodes a `MsgCloseBidResponse` protobuf message: defines the Msg/CloseBid response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketMsgCloseBidResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `BidID` protobuf message: stores owner and all other seq numbers A successful bid becomes a Lease(ID).
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @param s_provider - `provider`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketBidID = (sa_owner, sg_dseq, n_gseq, n_oseq, s_provider) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .v(n_gseq) // uint32 gseq = 3
    .v(n_oseq) // uint32 oseq = 4
    .s(s_provider) // string provider = 5
    .o;
/**
 * Encodes a `Bid` protobuf message: stores BidID, state of bid and price
 * @param g_bid_id - `bid_id`:
 * @param xc_state - `state`:
 * @param g_price - `price`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketBid = (atu8_bid_id, xc_state, atu8_price, sg_created_at) => Protobuf() // ...
    .b(atu8_bid_id) // BidID bid_id = 1
    .v(xc_state) // State state = 2
    .b(atu8_price) // DecCoin price = 3
    .g(sg_created_at) // int32 created_at = 4
    .o;
/**
 * Encodes a `BidFilters` protobuf message: defines flags for bid list filter
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @param s_provider - `provider`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketBidFilters = (sa_owner, sg_dseq, n_gseq, n_oseq, s_provider, s_state) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .v(n_gseq) // uint32 gseq = 3
    .v(n_oseq) // uint32 oseq = 4
    .s(s_provider) // string provider = 5
    .s(s_state) // string state = 6
    .o;
/**
 * Decodes a protobuf CreateBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCreateBid}
 */
export const decodeAkashMarketMsgCreateBid = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5, 1, 1], [decodeAkashMarketOrderID, 0, decodeCosmosBaseDecCoin, decode_coin]);
/**
 * Decodes a protobuf CreateBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCreateBidResponse}
 */
export const decodeAkashMarketMsgCreateBidResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf CloseBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCloseBid}
 */
export const decodeAkashMarketMsgCloseBid = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashMarketBidID]);
/**
 * Decodes a protobuf CloseBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCloseBidResponse}
 */
export const decodeAkashMarketMsgCloseBidResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf BidID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBidID}
 */
export const decodeAkashMarketBidID = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 1, 1, 5]);
/**
 * Decodes a protobuf Bid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBid}
 */
export const decodeAkashMarketBid = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 3], [decodeAkashMarketBidID, 0, decodeCosmosBaseDecCoin]);
/**
 * Decodes a protobuf BidFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBidFilters}
 */
export const decodeAkashMarketBidFilters = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 1, 1, 5, 5]);
/**
 * Destructures the fields of a {@link AkashMarketMsgCreateBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: order -
 *   - 1: provider -
 *   - 2: price -
 *   - 3: deposit -
 */
export const destructAkashMarketMsgCreateBid = (g_struct) => [g_struct.order, g_struct.provider, g_struct.price, g_struct.deposit];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CREATE_BID = '/akash.market.v1beta3.MsgCreateBid';
/**
 * Destructures the fields of a {@link AkashMarketMsgCreateBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashMarketMsgCreateBidResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CREATE_BID_RESPONSE = '/akash.market.v1beta3.MsgCreateBidResponse';
/**
 * Destructures the fields of a {@link AkashMarketMsgCloseBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid_id -
 */
export const destructAkashMarketMsgCloseBid = (g_struct) => [g_struct.bid_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CLOSE_BID = '/akash.market.v1beta3.MsgCloseBid';
/**
 * Destructures the fields of a {@link AkashMarketBidID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 */
export const destructAkashMarketBidID = (g_struct) => [g_struct.owner, g_struct.dseq, g_struct.gseq, g_struct.oseq, g_struct.provider];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_BID_I_D = '/akash.market.v1beta3.BidID';
/**
 * Destructures the fields of a {@link AkashMarketMsgCloseBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashMarketMsgCloseBidResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CLOSE_BID_RESPONSE = '/akash.market.v1beta3.MsgCloseBidResponse';
/**
 * Destructures the fields of a {@link AkashMarketBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid_id -
 *   - 1: state -
 *   - 2: price -
 *   - 3: created_at -
 */
export const destructAkashMarketBid = (g_struct) => [g_struct.bid_id, g_struct.state, g_struct.price, g_struct.created_at];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_BID = '/akash.market.v1beta3.Bid';
/**
 * Destructures the fields of a {@link AkashMarketBidFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 *   - 5: state -
 */
export const destructAkashMarketBidFilters = (g_struct) => [g_struct.owner, g_struct.dseq, g_struct.gseq, g_struct.oseq, g_struct.provider, g_struct.state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_BID_FILTERS = '/akash.market.v1beta3.BidFilters';
/**
 * Protobuf enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export const XC_PROTO_AKASH_MARKET_BID_invalid = 0;
/**
 * JSON enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export const SI_JSON_AKASH_MARKET_BID_invalid = 'BidStateInvalid';
/**
 * Protobuf enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export const XC_PROTO_AKASH_MARKET_BID_open = 1;
/**
 * JSON enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export const SI_JSON_AKASH_MARKET_BID_open = 'BidOpen';
/**
 * Protobuf enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export const XC_PROTO_AKASH_MARKET_BID_active = 2;
/**
 * JSON enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export const SI_JSON_AKASH_MARKET_BID_active = 'BidActive';
/**
 * Protobuf enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **lost** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export const XC_PROTO_AKASH_MARKET_BID_lost = 3;
/**
 * JSON enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **lost** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export const SI_JSON_AKASH_MARKET_BID_lost = 'BidLost';
/**
 * Protobuf enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export const XC_PROTO_AKASH_MARKET_BID_closed = 4;
/**
 * JSON enum value for `akash.market.v1beta3.Bid.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export const SI_JSON_AKASH_MARKET_BID_closed = 'BidClosed';
/**
 * Maps a protobuf enum int value for `akash.market.v1beta3.Bid.State` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumAkashMarketBidState = {
    [XC_PROTO_AKASH_MARKET_BID_invalid]: SI_JSON_AKASH_MARKET_BID_invalid,
    [XC_PROTO_AKASH_MARKET_BID_open]: SI_JSON_AKASH_MARKET_BID_open,
    [XC_PROTO_AKASH_MARKET_BID_active]: SI_JSON_AKASH_MARKET_BID_active,
    [XC_PROTO_AKASH_MARKET_BID_lost]: SI_JSON_AKASH_MARKET_BID_lost,
    [XC_PROTO_AKASH_MARKET_BID_closed]: SI_JSON_AKASH_MARKET_BID_closed,
};
/**
 * Maps a JSON enum string value for `akash.market.v1beta3.Bid.State` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumAkashMarketBidState = {
    [SI_JSON_AKASH_MARKET_BID_invalid]: XC_PROTO_AKASH_MARKET_BID_invalid,
    [SI_JSON_AKASH_MARKET_BID_open]: XC_PROTO_AKASH_MARKET_BID_open,
    [SI_JSON_AKASH_MARKET_BID_active]: XC_PROTO_AKASH_MARKET_BID_active,
    [SI_JSON_AKASH_MARKET_BID_lost]: XC_PROTO_AKASH_MARKET_BID_lost,
    [SI_JSON_AKASH_MARKET_BID_closed]: XC_PROTO_AKASH_MARKET_BID_closed,
};
//# sourceMappingURL=bid.js.map