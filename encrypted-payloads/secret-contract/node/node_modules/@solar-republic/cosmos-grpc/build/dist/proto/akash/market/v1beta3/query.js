/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeAkashEscrowAccount, decodeAkashEscrowFractionalPayment } from '../../escrow/v1beta3/types.js';
import { decodeAkashMarketBidFilters, decodeAkashMarketBidID, decodeAkashMarketBid } from './bid.js';
import { decodeAkashMarketLeaseFilters, decodeAkashMarketLeaseID, decodeAkashMarketLease } from './lease.js';
import { decodeAkashMarketOrderFilters, decodeAkashMarketOrder, decodeAkashMarketOrderID } from './order.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
const SR_LCD_AKASH_MARKET_QUERY = '/akash/market/v1beta3/';
/**
 * Queries orders with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: orders - the 'orders' response property
 *   - 1: pagination - the 'orders' response property
 */
export const queryAkashMarketOrders = restful_grpc((g_filters, g_pagination) => [SR_LCD_AKASH_MARKET_QUERY + 'orders/list', {
        filters: g_filters,
        pagination: g_pagination,
    }]);
/**
 * Queries order details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: order - the 'order' response property
 */
export const queryAkashMarketOrder = restful_grpc(g_id => [SR_LCD_AKASH_MARKET_QUERY + 'orders/info', {
        id: g_id,
    }]);
/**
 * Queries bids with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: bids - the 'bids' response property
 *   - 1: pagination - the 'bids' response property
 */
export const queryAkashMarketBids = restful_grpc((g_filters, g_pagination) => [SR_LCD_AKASH_MARKET_QUERY + 'bids/list', {
        filters: g_filters,
        pagination: g_pagination,
    }]);
/**
 * Queries bid details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: bid - the 'bid' response property
 *   - 1: escrow_account - the 'bid' response property
 */
export const queryAkashMarketBid = restful_grpc(g_id => [SR_LCD_AKASH_MARKET_QUERY + 'bids/info', {
        id: g_id,
    }]);
/**
 * Queries leases with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: leases - the 'leases' response property
 *   - 1: pagination - the 'leases' response property
 */
export const queryAkashMarketLeases = restful_grpc((g_filters, g_pagination) => [SR_LCD_AKASH_MARKET_QUERY + 'leases/list', {
        filters: g_filters,
        pagination: g_pagination,
    }]);
/**
 * Queries lease details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: lease - the 'lease' response property
 *   - 1: escrow_payment - the 'lease' response property
 */
export const queryAkashMarketLease = restful_grpc(g_id => [SR_LCD_AKASH_MARKET_QUERY + 'leases/info', {
        id: g_id,
    }]);
/**
 * Encodes a `QueryOrdersRequest` protobuf message: request type for the Query/Orders RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryOrdersRequest = (atu8_filters, atu8_pagination) => Protobuf() // ...
    .b(atu8_filters) // OrderFilters filters = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryOrdersResponse` protobuf message: response type for the Query/Orders RPC method
 * @param a_orders - `orders`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryOrdersResponse = (a_orders, atu8_pagination) => Protobuf() // ...
    .B(a_orders) // Order[] orders = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryOrderRequest` protobuf message: request type for the Query/Order RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryOrderRequest = (atu8_id) => Protobuf() // ...
    .b(atu8_id) // OrderID id = 1
    .o;
/**
 * Encodes a `QueryOrderResponse` protobuf message: response type for the Query/Order RPC method
 * @param g_order - `order`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryOrderResponse = (atu8_order) => Protobuf() // ...
    .b(atu8_order) // Order order = 1
    .o;
/**
 * Encodes a `QueryBidsRequest` protobuf message: request type for the Query/Bids RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryBidsRequest = (atu8_filters, atu8_pagination) => Protobuf() // ...
    .b(atu8_filters) // BidFilters filters = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryBidsResponse` protobuf message: response type for the Query/Bids RPC method
 * @param a_bids - `bids`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryBidsResponse = (a_bids, atu8_pagination) => Protobuf() // ...
    .B(a_bids) // QueryBidResponse[] bids = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryBidRequest` protobuf message: request type for the Query/Bid RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryBidRequest = (atu8_id) => Protobuf() // ...
    .b(atu8_id) // BidID id = 1
    .o;
/**
 * Encodes a `QueryBidResponse` protobuf message: response type for the Query/Bid RPC method
 * @param g_bid - `bid`:
 * @param g_escrow_account - `escrow_account`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryBidResponse = (atu8_bid, atu8_escrow_account) => Protobuf() // ...
    .b(atu8_bid) // Bid bid = 1
    .b(atu8_escrow_account) // Account escrow_account = 2
    .o;
/**
 * Encodes a `QueryLeasesRequest` protobuf message: request type for the Query/Leases RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryLeasesRequest = (atu8_filters, atu8_pagination) => Protobuf() // ...
    .b(atu8_filters) // LeaseFilters filters = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryLeasesResponse` protobuf message: response type for the Query/Leases RPC method
 * @param a_leases - `leases`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryLeasesResponse = (a_leases, atu8_pagination) => Protobuf() // ...
    .B(a_leases) // QueryLeaseResponse[] leases = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryLeaseRequest` protobuf message: request type for the Query/Lease RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryLeaseRequest = (atu8_id) => Protobuf() // ...
    .b(atu8_id) // LeaseID id = 1
    .o;
/**
 * Encodes a `QueryLeaseResponse` protobuf message: response type for the Query/Lease RPC method
 * @param g_lease - `lease`:
 * @param g_escrow_payment - `escrow_payment`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashMarketQueryLeaseResponse = (atu8_lease, atu8_escrow_payment) => Protobuf() // ...
    .b(atu8_lease) // Lease lease = 1
    .b(atu8_escrow_payment) // FractionalPayment escrow_payment = 2
    .o;
/**
 * Decodes a protobuf QueryOrdersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrdersRequest}
 */
export const decodeAkashMarketQueryOrdersRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashMarketOrderFilters, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryOrders message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrdersResponse}
 */
export const decodeAkashMarketQueryOrdersResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeAkashMarketOrder, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryOrderRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrderRequest}
 */
export const decodeAkashMarketQueryOrderRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashMarketOrderID]);
/**
 * Decodes a protobuf QueryOrder message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrderResponse}
 */
export const decodeAkashMarketQueryOrderResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashMarketOrder]);
/**
 * Decodes a protobuf QueryBidsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidsRequest}
 */
export const decodeAkashMarketQueryBidsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashMarketBidFilters, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryBids message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidsResponse}
 */
export const decodeAkashMarketQueryBidsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeAkashMarketQueryBidResponse, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryBidRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidRequest}
 */
export const decodeAkashMarketQueryBidRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashMarketBidID]);
/**
 * Decodes a protobuf QueryBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidResponse}
 */
export const decodeAkashMarketQueryBidResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashMarketBid, decodeAkashEscrowAccount]);
/**
 * Decodes a protobuf QueryLeasesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeasesRequest}
 */
export const decodeAkashMarketQueryLeasesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashMarketLeaseFilters, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryLeases message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeasesResponse}
 */
export const decodeAkashMarketQueryLeasesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeAkashMarketQueryLeaseResponse, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryLeaseRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeaseRequest}
 */
export const decodeAkashMarketQueryLeaseRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashMarketLeaseID]);
/**
 * Decodes a protobuf QueryLease message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeaseResponse}
 */
export const decodeAkashMarketQueryLeaseResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashMarketLease, decodeAkashEscrowFractionalPayment]);
/**
 * Destructures the fields of a {@link AkashMarketQueryOrdersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryOrdersRequest = (g_struct) => [g_struct.filters, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDERS_REQUEST = '/akash.market.v1beta3.QueryOrdersRequest';
/**
 * Destructures the fields of a {@link AkashMarketQueryOrdersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: orders -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryOrdersResponse = (g_struct) => [g_struct.orders, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDERS_RESPONSE = '/akash.market.v1beta3.QueryOrdersResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryOrderRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export const destructAkashMarketQueryOrderRequest = (g_struct) => [g_struct.id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDER_REQUEST = '/akash.market.v1beta3.QueryOrderRequest';
/**
 * Destructures the fields of a {@link AkashMarketQueryOrderResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: order -
 */
export const destructAkashMarketQueryOrderResponse = (g_struct) => [g_struct.order];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDER_RESPONSE = '/akash.market.v1beta3.QueryOrderResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryBidsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryBidsRequest = (g_struct) => [g_struct.filters, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BIDS_REQUEST = '/akash.market.v1beta3.QueryBidsRequest';
/**
 * Destructures the fields of a {@link AkashMarketQueryBidsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bids -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryBidsResponse = (g_struct) => [g_struct.bids, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BIDS_RESPONSE = '/akash.market.v1beta3.QueryBidsResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid -
 *   - 1: escrow_account -
 */
export const destructAkashMarketQueryBidResponse = (g_struct) => [g_struct.bid, g_struct.escrow_account];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BID_RESPONSE = '/akash.market.v1beta3.QueryBidResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryBidRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export const destructAkashMarketQueryBidRequest = (g_struct) => [g_struct.id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BID_REQUEST = '/akash.market.v1beta3.QueryBidRequest';
/**
 * Destructures the fields of a {@link AkashMarketQueryLeasesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryLeasesRequest = (g_struct) => [g_struct.filters, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASES_REQUEST = '/akash.market.v1beta3.QueryLeasesRequest';
/**
 * Destructures the fields of a {@link AkashMarketQueryLeasesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: leases -
 *   - 1: pagination -
 */
export const destructAkashMarketQueryLeasesResponse = (g_struct) => [g_struct.leases, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASES_RESPONSE = '/akash.market.v1beta3.QueryLeasesResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryLeaseResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lease -
 *   - 1: escrow_payment -
 */
export const destructAkashMarketQueryLeaseResponse = (g_struct) => [g_struct.lease, g_struct.escrow_payment];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASE_RESPONSE = '/akash.market.v1beta3.QueryLeaseResponse';
/**
 * Destructures the fields of a {@link AkashMarketQueryLeaseRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export const destructAkashMarketQueryLeaseRequest = (g_struct) => [g_struct.id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASE_REQUEST = '/akash.market.v1beta3.QueryLeaseRequest';
//# sourceMappingURL=query.js.map