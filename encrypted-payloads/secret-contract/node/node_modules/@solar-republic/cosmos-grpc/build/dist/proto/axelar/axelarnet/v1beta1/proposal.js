import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `CallContractsProposal` protobuf message: a gov Content type for calling contracts on other chains
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_contract_calls - `contract_calls`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarAxelarnetCallContractsProposal = (s_title, s_description, a_contract_calls) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_contract_calls) // ContractCall[] contract_calls = 3
    .o;
/**
 * Encodes a `ContractCall` protobuf message:
 * @param s_chain - `chain`:
 * @param sa_contract - `contract_address`:
 * @param atu8_payload - `payload`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarAxelarnetContractCall = (s_chain, sa_contract, atu8_payload) => Protobuf() // ...
    .s(s_chain) // string chain = 1
    .s(sa_contract) // string contract_address = 2
    .b(atu8_payload) // bytes payload = 3
    .o;
/**
 * Decodes a protobuf CallContractsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetCallContractsProposal}
 */
export const decodeAxelarAxelarnetCallContractsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeAxelarAxelarnetContractCall]);
/**
 * Decodes a protobuf ContractCall message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetContractCall}
 */
export const decodeAxelarAxelarnetContractCall = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1]);
/**
 * Destructures the fields of a {@link AxelarAxelarnetCallContractsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: contract_calls -
 */
export const destructAxelarAxelarnetCallContractsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.contract_calls];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CALL_CONTRACTS_PROPOSAL = '/axelar.axelarnet.v1beta1.CallContractsProposal';
/**
 * Destructures the fields of a {@link AxelarAxelarnetContractCall} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: chain -
 *   - 1: contract_address -
 *   - 2: payload -
 */
export const destructAxelarAxelarnetContractCall = (g_struct) => [g_struct.chain, g_struct.contract_address, safe_base64_to_bytes(g_struct.payload)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CONTRACT_CALL = '/axelar.axelarnet.v1beta1.ContractCall';
//# sourceMappingURL=proposal.js.map