import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt, WeakDurationStr } from '../../../../api/types.js';
import type { AxelarAxelarnetFee, DecodedAxelarAxelarnetFee } from './types.js';
import type { AxelarNexusExportedChain, DecodedAxelarNexusExportedChain, AxelarNexusExportedAsset, DecodedAxelarNexusExportedAsset } from '../../nexus/exported/v1beta1/types.js';
export type EncodedAxelarAxelarnetLinkRequest = Encoded<'/axelar.axelarnet.v1beta1.LinkRequest'>;
export type EncodedAxelarAxelarnetLinkResponse = Encoded<'/axelar.axelarnet.v1beta1.LinkResponse'>;
export type EncodedAxelarAxelarnetConfirmDepositRequest = Encoded<'/axelar.axelarnet.v1beta1.ConfirmDepositRequest'>;
export type EncodedAxelarAxelarnetConfirmDepositResponse = Encoded<'/axelar.axelarnet.v1beta1.ConfirmDepositResponse'>;
export type EncodedAxelarAxelarnetExecutePendingTransfersRequest = Encoded<'/axelar.axelarnet.v1beta1.ExecutePendingTransfersRequest'>;
export type EncodedAxelarAxelarnetExecutePendingTransfersResponse = Encoded<'/axelar.axelarnet.v1beta1.ExecutePendingTransfersResponse'>;
export type EncodedAxelarAxelarnetRegisterIBCPathRequest = Encoded<'/axelar.axelarnet.v1beta1.RegisterIBCPathRequest'>;
export type EncodedAxelarAxelarnetRegisterIBCPathResponse = Encoded<'/axelar.axelarnet.v1beta1.RegisterIBCPathResponse'>;
export type EncodedAxelarAxelarnetAddCosmosBasedChainRequest = Encoded<'/axelar.axelarnet.v1beta1.AddCosmosBasedChainRequest'>;
export type EncodedAxelarAxelarnetAddCosmosBasedChainResponse = Encoded<'/axelar.axelarnet.v1beta1.AddCosmosBasedChainResponse'>;
export type EncodedAxelarAxelarnetRegisterAssetRequest = Encoded<'/axelar.axelarnet.v1beta1.RegisterAssetRequest'>;
export type EncodedAxelarAxelarnetRegisterAssetResponse = Encoded<'/axelar.axelarnet.v1beta1.RegisterAssetResponse'>;
export type EncodedAxelarAxelarnetRouteIBCTransfersRequest = Encoded<'/axelar.axelarnet.v1beta1.RouteIBCTransfersRequest'>;
export type EncodedAxelarAxelarnetRouteIBCTransfersResponse = Encoded<'/axelar.axelarnet.v1beta1.RouteIBCTransfersResponse'>;
export type EncodedAxelarAxelarnetRegisterFeeCollectorRequest = Encoded<'/axelar.axelarnet.v1beta1.RegisterFeeCollectorRequest'>;
export type EncodedAxelarAxelarnetRegisterFeeCollectorResponse = Encoded<'/axelar.axelarnet.v1beta1.RegisterFeeCollectorResponse'>;
export type EncodedAxelarAxelarnetRetryIBCTransferRequest = Encoded<'/axelar.axelarnet.v1beta1.RetryIBCTransferRequest'>;
export type EncodedAxelarAxelarnetRetryIBCTransferResponse = Encoded<'/axelar.axelarnet.v1beta1.RetryIBCTransferResponse'>;
export type EncodedAxelarAxelarnetRouteMessageRequest = Encoded<'/axelar.axelarnet.v1beta1.RouteMessageRequest'>;
export type EncodedAxelarAxelarnetRouteMessageResponse = Encoded<'/axelar.axelarnet.v1beta1.RouteMessageResponse'>;
export type EncodedAxelarAxelarnetCallContractRequest = Encoded<'/axelar.axelarnet.v1beta1.CallContractRequest'>;
export type EncodedAxelarAxelarnetCallContractResponse = Encoded<'/axelar.axelarnet.v1beta1.CallContractResponse'>;
/**
 * Encodes a `LinkRequest` protobuf message: MsgLink represents a message to link a cross-chain address to an Axelar address
 * @param sa_sender - `sender`:
 * @param sa_recipient_addr - `recipient_addr`:
 * @param s_recipient_chain - `recipient_chain`:
 * @param s_asset - `asset`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetLinkRequest: (sa_sender?: Opt<WeakAccountAddr>, sa_recipient_addr?: Opt<WeakAccountAddr>, s_recipient_chain?: Opt<string>, s_asset?: Opt<string>) => EncodedAxelarAxelarnetLinkRequest;
/**
 * Encodes a `LinkResponse` protobuf message:
 * @param sa_deposit_addr - `deposit_addr`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetLinkResponse: (sa_deposit_addr?: Opt<WeakAccountAddr>) => EncodedAxelarAxelarnetLinkResponse;
/**
 * Encodes a `ConfirmDepositRequest` protobuf message: MsgConfirmDeposit represents a deposit confirmation message
 * @param sa_sender - `sender`:
 * @param atu8_deposit_address - `deposit_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetConfirmDepositRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_deposit_address?: Opt<Uint8Array>, s_denom?: Opt<string>) => EncodedAxelarAxelarnetConfirmDepositRequest;
/**
 * Encodes a `ConfirmDepositResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetConfirmDepositResponse: () => EncodedAxelarAxelarnetConfirmDepositResponse;
/**
 * Encodes a `ExecutePendingTransfersRequest` protobuf message: MsgExecutePendingTransfers represents a message to trigger transfer all pending transfers
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetExecutePendingTransfersRequest: (sa_sender?: Opt<WeakAccountAddr>) => EncodedAxelarAxelarnetExecutePendingTransfersRequest;
/**
 * Encodes a `ExecutePendingTransfersResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetExecutePendingTransfersResponse: () => EncodedAxelarAxelarnetExecutePendingTransfersResponse;
/**
 * Encodes a `RegisterIBCPathRequest` protobuf message: MSgRegisterIBCPath represents a message to register an IBC tracing path for a cosmos chain
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param s_path - `path`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterIBCPathRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, s_path?: Opt<string>) => EncodedAxelarAxelarnetRegisterIBCPathRequest;
/**
 * Encodes a `RegisterIBCPathResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterIBCPathResponse: () => EncodedAxelarAxelarnetRegisterIBCPathResponse;
/**
 * Encodes a `AddCosmosBasedChainRequest` protobuf message: MsgAddCosmosBasedChain represents a message to register a cosmos based chain to nexus
 * @param sa_sender - `sender`:
 * @param g_chain - `chain`:
 * @param s_addr_prefix - `addr_prefix`:
 * @param a_native_assets - `native_assets`:
 * @param s_cosmos_chain - `cosmos_chain`: TODO: Rename this to `chain` after v1beta1 -> v1 version bump
 * @param s_ibc_path - `ibc_path`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetAddCosmosBasedChainRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_chain?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.Chain'>>, s_addr_prefix?: Opt<string>, a_native_assets?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.Asset'>[]>, s_cosmos_chain?: Opt<string>, s_ibc_path?: Opt<string>) => EncodedAxelarAxelarnetAddCosmosBasedChainRequest;
/**
 * Encodes a `AddCosmosBasedChainResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetAddCosmosBasedChainResponse: () => EncodedAxelarAxelarnetAddCosmosBasedChainResponse;
/**
 * Encodes a `RegisterAssetRequest` protobuf message: represents a message to register an asset to a cosmos based chain
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param g_asset - `asset`:
 * @param atu8_limit - `limit`:
 * @param xt_window - `window`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterAssetRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_asset?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.Asset'>>, atu8_limit?: Opt<Uint8Array>, xt_window?: Opt<number>) => EncodedAxelarAxelarnetRegisterAssetRequest;
/**
 * Encodes a `RegisterAssetResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterAssetResponse: () => EncodedAxelarAxelarnetRegisterAssetResponse;
/**
 * Encodes a `RouteIBCTransfersRequest` protobuf message: represents a message to route pending transfers to cosmos based chains
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRouteIBCTransfersRequest: (sa_sender?: Opt<WeakAccountAddr>) => EncodedAxelarAxelarnetRouteIBCTransfersRequest;
/**
 * Encodes a `RouteIBCTransfersResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRouteIBCTransfersResponse: () => EncodedAxelarAxelarnetRouteIBCTransfersResponse;
/**
 * Encodes a `RegisterFeeCollectorRequest` protobuf message: represents a message to register axelarnet fee collector account
 * @param sa_sender - `sender`:
 * @param atu8_fee_collector - `fee_collector`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterFeeCollectorRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_fee_collector?: Opt<Uint8Array>) => EncodedAxelarAxelarnetRegisterFeeCollectorRequest;
/**
 * Encodes a `RegisterFeeCollectorResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRegisterFeeCollectorResponse: () => EncodedAxelarAxelarnetRegisterFeeCollectorResponse;
/**
 * Encodes a `RetryIBCTransferRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param sg_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRetryIBCTransferRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, sg_id?: Opt<WeakUint64Str>) => EncodedAxelarAxelarnetRetryIBCTransferRequest;
/**
 * Encodes a `RetryIBCTransferResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRetryIBCTransferResponse: () => EncodedAxelarAxelarnetRetryIBCTransferResponse;
/**
 * Encodes a `RouteMessageRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_id - `id`:
 * @param atu8_payload - `payload`:
 * @param atu8_feegranter - `feegranter`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRouteMessageRequest: (sa_sender?: Opt<WeakAccountAddr>, s_id?: Opt<string>, atu8_payload?: Opt<Uint8Array>, atu8_feegranter?: Opt<Uint8Array>) => EncodedAxelarAxelarnetRouteMessageRequest;
/**
 * Encodes a `RouteMessageResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetRouteMessageResponse: () => EncodedAxelarAxelarnetRouteMessageResponse;
/**
 * Encodes a `CallContractRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param sa_contract - `contract_address`:
 * @param atu8_payload - `payload`:
 * @param g_fee - `fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetCallContractRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, sa_contract?: Opt<WeakAccountAddr>, atu8_payload?: Opt<Uint8Array>, atu8_fee?: Opt<Encoded<'/axelar.axelarnet.v1beta1.Fee'>>) => EncodedAxelarAxelarnetCallContractRequest;
/**
 * Encodes a `CallContractResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetCallContractResponse: () => EncodedAxelarAxelarnetCallContractResponse;
/**
 * A decoded protobuf LinkRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: recipient_addr -
 *   - 2: recipient_chain -
 *   - 3: asset -
 */
export type DecodedAxelarAxelarnetLinkRequest = [
    sa_sender?: CwAccountAddr,
    sa_recipient_addr?: CwAccountAddr,
    s_recipient_chain?: string,
    s_asset?: string
];
/**
 * Decodes a protobuf LinkRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetLinkRequest}
 */
export declare const decodeAxelarAxelarnetLinkRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetLinkRequest;
/**
 * A decoded protobuf Link message
 *
 * Alias for: deposit_addr -
 */
export type DecodedAxelarAxelarnetLinkResponse = [
    sa_deposit_addr?: CwAccountAddr
];
/**
 * Decodes a protobuf Link message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetLinkResponse}
 */
export declare const decodeAxelarAxelarnetLinkResponse: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetLinkResponse;
/**
 * A decoded protobuf ConfirmDepositRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 3: deposit_address -
 *   - 4: denom -
 */
export type DecodedAxelarAxelarnetConfirmDepositRequest = [
    sa_sender?: CwAccountAddr,
    w_0?: undefined,
    w_1?: undefined,
    atu8_deposit_address?: Uint8Array,
    s_denom?: string
];
/**
 * Decodes a protobuf ConfirmDepositRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarAxelarnetConfirmDepositRequest}
 */
export declare const decodeAxelarAxelarnetConfirmDepositRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarAxelarnetConfirmDepositRequest;
/**
 * A decoded protobuf ConfirmDeposit message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetConfirmDepositResponse = [];
/**
 * Decodes a protobuf ConfirmDeposit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetConfirmDepositResponse}
 */
export declare const decodeAxelarAxelarnetConfirmDepositResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ExecutePendingTransfersRequest message
 *
 * Alias for: sender -
 */
export type DecodedAxelarAxelarnetExecutePendingTransfersRequest = [
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf ExecutePendingTransfersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetExecutePendingTransfersRequest}
 */
export declare const decodeAxelarAxelarnetExecutePendingTransfersRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetExecutePendingTransfersRequest;
/**
 * A decoded protobuf ExecutePendingTransfers message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetExecutePendingTransfersResponse = [];
/**
 * Decodes a protobuf ExecutePendingTransfers message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetExecutePendingTransfersResponse}
 */
export declare const decodeAxelarAxelarnetExecutePendingTransfersResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RegisterIBCPathRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: path -
 */
export type DecodedAxelarAxelarnetRegisterIBCPathRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    s_path?: string
];
/**
 * Decodes a protobuf RegisterIBCPathRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterIBCPathRequest}
 */
export declare const decodeAxelarAxelarnetRegisterIBCPathRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRegisterIBCPathRequest;
/**
 * A decoded protobuf RegisterIBCPath message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRegisterIBCPathResponse = [];
/**
 * Decodes a protobuf RegisterIBCPath message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterIBCPathResponse}
 */
export declare const decodeAxelarAxelarnetRegisterIBCPathResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf AddCosmosBasedChainRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: addr_prefix -
 *   - 4: native_assets -
 *   - 5: cosmos_chain - TODO: Rename this to `chain` after v1beta1 -> v1 version bump
 *   - 6: ibc_path -
 */
export type DecodedAxelarAxelarnetAddCosmosBasedChainRequest = [
    sa_sender?: CwAccountAddr,
    a_chain?: DecodedAxelarNexusExportedChain,
    s_addr_prefix?: string,
    w_0?: undefined,
    a_native_assets?: DecodedAxelarNexusExportedAsset[],
    s_cosmos_chain?: string,
    s_ibc_path?: string
];
/**
 * Decodes a protobuf AddCosmosBasedChainRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarAxelarnetAddCosmosBasedChainRequest}
 */
export declare const decodeAxelarAxelarnetAddCosmosBasedChainRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarAxelarnetAddCosmosBasedChainRequest;
/**
 * A decoded protobuf AddCosmosBasedChain message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetAddCosmosBasedChainResponse = [];
/**
 * Decodes a protobuf AddCosmosBasedChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetAddCosmosBasedChainResponse}
 */
export declare const decodeAxelarAxelarnetAddCosmosBasedChainResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RegisterAssetRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: asset -
 *   - 3: limit -
 *   - 4: window -
 */
export type DecodedAxelarAxelarnetRegisterAssetRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    a_asset?: DecodedAxelarNexusExportedAsset,
    atu8_limit?: Uint8Array,
    a_window?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf RegisterAssetRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterAssetRequest}
 */
export declare const decodeAxelarAxelarnetRegisterAssetRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRegisterAssetRequest;
/**
 * A decoded protobuf RegisterAsset message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRegisterAssetResponse = [];
/**
 * Decodes a protobuf RegisterAsset message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterAssetResponse}
 */
export declare const decodeAxelarAxelarnetRegisterAssetResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RouteIBCTransfersRequest message
 *
 * Alias for: sender -
 */
export type DecodedAxelarAxelarnetRouteIBCTransfersRequest = [
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf RouteIBCTransfersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRouteIBCTransfersRequest}
 */
export declare const decodeAxelarAxelarnetRouteIBCTransfersRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRouteIBCTransfersRequest;
/**
 * A decoded protobuf RouteIBCTransfers message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRouteIBCTransfersResponse = [];
/**
 * Decodes a protobuf RouteIBCTransfers message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRouteIBCTransfersResponse}
 */
export declare const decodeAxelarAxelarnetRouteIBCTransfersResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RegisterFeeCollectorRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: fee_collector -
 */
export type DecodedAxelarAxelarnetRegisterFeeCollectorRequest = [
    sa_sender?: CwAccountAddr,
    atu8_fee_collector?: Uint8Array
];
/**
 * Decodes a protobuf RegisterFeeCollectorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterFeeCollectorRequest}
 */
export declare const decodeAxelarAxelarnetRegisterFeeCollectorRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRegisterFeeCollectorRequest;
/**
 * A decoded protobuf RegisterFeeCollector message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRegisterFeeCollectorResponse = [];
/**
 * Decodes a protobuf RegisterFeeCollector message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRegisterFeeCollectorResponse}
 */
export declare const decodeAxelarAxelarnetRegisterFeeCollectorResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RetryIBCTransferRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: id -
 */
export type DecodedAxelarAxelarnetRetryIBCTransferRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    sg_id?: CwUint64
];
/**
 * Decodes a protobuf RetryIBCTransferRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRetryIBCTransferRequest}
 */
export declare const decodeAxelarAxelarnetRetryIBCTransferRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRetryIBCTransferRequest;
/**
 * A decoded protobuf RetryIBCTransfer message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRetryIBCTransferResponse = [];
/**
 * Decodes a protobuf RetryIBCTransfer message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRetryIBCTransferResponse}
 */
export declare const decodeAxelarAxelarnetRetryIBCTransferResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RouteMessageRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: id -
 *   - 2: payload -
 *   - 3: feegranter -
 */
export type DecodedAxelarAxelarnetRouteMessageRequest = [
    sa_sender?: CwAccountAddr,
    s_id?: string,
    atu8_payload?: Uint8Array,
    atu8_feegranter?: Uint8Array
];
/**
 * Decodes a protobuf RouteMessageRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRouteMessageRequest}
 */
export declare const decodeAxelarAxelarnetRouteMessageRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetRouteMessageRequest;
/**
 * A decoded protobuf RouteMessage message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetRouteMessageResponse = [];
/**
 * Decodes a protobuf RouteMessage message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetRouteMessageResponse}
 */
export declare const decodeAxelarAxelarnetRouteMessageResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CallContractRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: contract_address -
 *   - 3: payload -
 *   - 4: fee -
 */
export type DecodedAxelarAxelarnetCallContractRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    sa_contract?: CwAccountAddr,
    atu8_payload?: Uint8Array,
    a_fee?: DecodedAxelarAxelarnetFee
];
/**
 * Decodes a protobuf CallContractRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetCallContractRequest}
 */
export declare const decodeAxelarAxelarnetCallContractRequest: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetCallContractRequest;
/**
 * A decoded protobuf CallContract message
 *
 * Tuple where:
 */
export type DecodedAxelarAxelarnetCallContractResponse = [];
/**
 * Decodes a protobuf CallContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetCallContractResponse}
 */
export declare const decodeAxelarAxelarnetCallContractResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link AxelarAxelarnetLinkRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: recipient_addr -
 *   - 2: recipient_chain -
 *   - 3: asset -
 */
export declare const destructAxelarAxelarnetLinkRequest: (g_struct: AxelarAxelarnetLinkRequest) => [sender?: CwBase64, recipient_addr?: CwAccountAddr, recipient_chain?: string, asset?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_LINK_REQUEST = "/axelar.axelarnet.v1beta1.LinkRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.LinkRequest` - MsgLink represents a message to link a cross-chain address to an Axelar address
 */
export type AxelarAxelarnetLinkRequest = {
    sender?: CwBase64 | undefined;
    recipient_addr?: CwAccountAddr | undefined;
    recipient_chain?: string | undefined;
    asset?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetLinkResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deposit_addr -
 */
export declare const destructAxelarAxelarnetLinkResponse: (g_struct: AxelarAxelarnetLinkResponse) => [deposit_addr?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_LINK_RESPONSE = "/axelar.axelarnet.v1beta1.LinkResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.LinkResponse` -
 */
export type AxelarAxelarnetLinkResponse = {
    deposit_addr?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetConfirmDepositRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 3: deposit_address -
 *   - 4: denom -
 */
export declare const destructAxelarAxelarnetConfirmDepositRequest: (g_struct: AxelarAxelarnetConfirmDepositRequest) => [sender?: CwBase64, EMPTY?: void, EMPTY?: void, deposit_address?: Uint8Array, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CONFIRM_DEPOSIT_REQUEST = "/axelar.axelarnet.v1beta1.ConfirmDepositRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.ConfirmDepositRequest` - MsgConfirmDeposit represents a deposit confirmation message
 */
export type AxelarAxelarnetConfirmDepositRequest = {
    sender?: CwBase64 | undefined;
    deposit_address?: CwBase64 | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetConfirmDepositResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetConfirmDepositResponse: (g_struct: AxelarAxelarnetConfirmDepositResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CONFIRM_DEPOSIT_RESPONSE = "/axelar.axelarnet.v1beta1.ConfirmDepositResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.ConfirmDepositResponse` -
 */
export type AxelarAxelarnetConfirmDepositResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetExecutePendingTransfersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 */
export declare const destructAxelarAxelarnetExecutePendingTransfersRequest: (g_struct: AxelarAxelarnetExecutePendingTransfersRequest) => [sender?: CwBase64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_EXECUTE_PENDING_TRANSFERS_REQUEST = "/axelar.axelarnet.v1beta1.ExecutePendingTransfersRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.ExecutePendingTransfersRequest` - MsgExecutePendingTransfers represents a message to trigger transfer all pending transfers
 */
export type AxelarAxelarnetExecutePendingTransfersRequest = {
    sender?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetExecutePendingTransfersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetExecutePendingTransfersResponse: (g_struct: AxelarAxelarnetExecutePendingTransfersResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_EXECUTE_PENDING_TRANSFERS_RESPONSE = "/axelar.axelarnet.v1beta1.ExecutePendingTransfersResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.ExecutePendingTransfersResponse` -
 */
export type AxelarAxelarnetExecutePendingTransfersResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterIBCPathRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: path -
 */
export declare const destructAxelarAxelarnetRegisterIBCPathRequest: (g_struct: AxelarAxelarnetRegisterIBCPathRequest) => [sender?: CwBase64, chain?: string, path?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_I_B_C_PATH_REQUEST = "/axelar.axelarnet.v1beta1.RegisterIBCPathRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterIBCPathRequest` - MSgRegisterIBCPath represents a message to register an IBC tracing path for a cosmos chain
 */
export type AxelarAxelarnetRegisterIBCPathRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    path?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterIBCPathResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRegisterIBCPathResponse: (g_struct: AxelarAxelarnetRegisterIBCPathResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_I_B_C_PATH_RESPONSE = "/axelar.axelarnet.v1beta1.RegisterIBCPathResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterIBCPathResponse` -
 */
export type AxelarAxelarnetRegisterIBCPathResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetAddCosmosBasedChainRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: addr_prefix -
 *   - 4: native_assets -
 *   - 5: cosmos_chain - TODO: Rename this to `chain` after v1beta1 -> v1 version bump
 *   - 6: ibc_path -
 */
export declare const destructAxelarAxelarnetAddCosmosBasedChainRequest: (g_struct: AxelarAxelarnetAddCosmosBasedChainRequest) => [sender?: CwBase64, chain?: AxelarNexusExportedChain, addr_prefix?: string, EMPTY?: void, native_assets?: AxelarNexusExportedAsset[], cosmos_chain?: string, ibc_path?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ADD_COSMOS_BASED_CHAIN_REQUEST = "/axelar.axelarnet.v1beta1.AddCosmosBasedChainRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.AddCosmosBasedChainRequest` - MsgAddCosmosBasedChain represents a message to register a cosmos based chain to nexus
 */
export type AxelarAxelarnetAddCosmosBasedChainRequest = {
    sender?: CwBase64 | undefined;
    chain?: AxelarNexusExportedChain | undefined;
    addr_prefix?: string | undefined;
    native_assets?: AxelarNexusExportedAsset[] | undefined;
    cosmos_chain?: string | undefined;
    ibc_path?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetAddCosmosBasedChainResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetAddCosmosBasedChainResponse: (g_struct: AxelarAxelarnetAddCosmosBasedChainResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ADD_COSMOS_BASED_CHAIN_RESPONSE = "/axelar.axelarnet.v1beta1.AddCosmosBasedChainResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.AddCosmosBasedChainResponse` -
 */
export type AxelarAxelarnetAddCosmosBasedChainResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterAssetRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: asset -
 *   - 3: limit -
 *   - 4: window -
 */
export declare const destructAxelarAxelarnetRegisterAssetRequest: (g_struct: AxelarAxelarnetRegisterAssetRequest) => [sender?: CwBase64, chain?: string, asset?: AxelarNexusExportedAsset, limit?: Uint8Array, window?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_ASSET_REQUEST = "/axelar.axelarnet.v1beta1.RegisterAssetRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterAssetRequest` - represents a message to register an asset to a cosmos based chain
 */
export type AxelarAxelarnetRegisterAssetRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    asset?: AxelarNexusExportedAsset | undefined;
    limit?: CwBase64 | undefined;
    window?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterAssetResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRegisterAssetResponse: (g_struct: AxelarAxelarnetRegisterAssetResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_ASSET_RESPONSE = "/axelar.axelarnet.v1beta1.RegisterAssetResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterAssetResponse` -
 */
export type AxelarAxelarnetRegisterAssetResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRouteIBCTransfersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 */
export declare const destructAxelarAxelarnetRouteIBCTransfersRequest: (g_struct: AxelarAxelarnetRouteIBCTransfersRequest) => [sender?: CwBase64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ROUTE_I_B_C_TRANSFERS_REQUEST = "/axelar.axelarnet.v1beta1.RouteIBCTransfersRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RouteIBCTransfersRequest` - represents a message to route pending transfers to cosmos based chains
 */
export type AxelarAxelarnetRouteIBCTransfersRequest = {
    sender?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRouteIBCTransfersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRouteIBCTransfersResponse: (g_struct: AxelarAxelarnetRouteIBCTransfersResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ROUTE_I_B_C_TRANSFERS_RESPONSE = "/axelar.axelarnet.v1beta1.RouteIBCTransfersResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RouteIBCTransfersResponse` -
 */
export type AxelarAxelarnetRouteIBCTransfersResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterFeeCollectorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: fee_collector -
 */
export declare const destructAxelarAxelarnetRegisterFeeCollectorRequest: (g_struct: AxelarAxelarnetRegisterFeeCollectorRequest) => [sender?: CwBase64, fee_collector?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_FEE_COLLECTOR_REQUEST = "/axelar.axelarnet.v1beta1.RegisterFeeCollectorRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterFeeCollectorRequest` - represents a message to register axelarnet fee collector account
 */
export type AxelarAxelarnetRegisterFeeCollectorRequest = {
    sender?: CwBase64 | undefined;
    fee_collector?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRegisterFeeCollectorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRegisterFeeCollectorResponse: (g_struct: AxelarAxelarnetRegisterFeeCollectorResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_REGISTER_FEE_COLLECTOR_RESPONSE = "/axelar.axelarnet.v1beta1.RegisterFeeCollectorResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RegisterFeeCollectorResponse` -
 */
export type AxelarAxelarnetRegisterFeeCollectorResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRetryIBCTransferRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: id -
 */
export declare const destructAxelarAxelarnetRetryIBCTransferRequest: (g_struct: AxelarAxelarnetRetryIBCTransferRequest) => [sender?: CwBase64, chain?: string, id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_RETRY_I_B_C_TRANSFER_REQUEST = "/axelar.axelarnet.v1beta1.RetryIBCTransferRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RetryIBCTransferRequest` -
 */
export type AxelarAxelarnetRetryIBCTransferRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRetryIBCTransferResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRetryIBCTransferResponse: (g_struct: AxelarAxelarnetRetryIBCTransferResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_RETRY_I_B_C_TRANSFER_RESPONSE = "/axelar.axelarnet.v1beta1.RetryIBCTransferResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RetryIBCTransferResponse` -
 */
export type AxelarAxelarnetRetryIBCTransferResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRouteMessageRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: id -
 *   - 2: payload -
 *   - 3: feegranter -
 */
export declare const destructAxelarAxelarnetRouteMessageRequest: (g_struct: AxelarAxelarnetRouteMessageRequest) => [sender?: CwBase64, id?: string, payload?: Uint8Array, feegranter?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ROUTE_MESSAGE_REQUEST = "/axelar.axelarnet.v1beta1.RouteMessageRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RouteMessageRequest` -
 */
export type AxelarAxelarnetRouteMessageRequest = {
    sender?: CwBase64 | undefined;
    id?: string | undefined;
    payload?: CwBase64 | undefined;
    feegranter?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetRouteMessageResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetRouteMessageResponse: (g_struct: AxelarAxelarnetRouteMessageResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_ROUTE_MESSAGE_RESPONSE = "/axelar.axelarnet.v1beta1.RouteMessageResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.RouteMessageResponse` -
 */
export type AxelarAxelarnetRouteMessageResponse = {};
/**
 * Destructures the fields of a {@link AxelarAxelarnetCallContractRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: contract_address -
 *   - 3: payload -
 *   - 4: fee -
 */
export declare const destructAxelarAxelarnetCallContractRequest: (g_struct: AxelarAxelarnetCallContractRequest) => [sender?: CwBase64, chain?: string, contract_address?: CwAccountAddr, payload?: Uint8Array, fee?: AxelarAxelarnetFee];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CALL_CONTRACT_REQUEST = "/axelar.axelarnet.v1beta1.CallContractRequest";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.CallContractRequest` -
 */
export type AxelarAxelarnetCallContractRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    contract_address?: CwAccountAddr | undefined;
    payload?: CwBase64 | undefined;
    fee?: AxelarAxelarnetFee | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetCallContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarAxelarnetCallContractResponse: (g_struct: AxelarAxelarnetCallContractResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_CALL_CONTRACT_RESPONSE = "/axelar.axelarnet.v1beta1.CallContractResponse";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.CallContractResponse` -
 */
export type AxelarAxelarnetCallContractResponse = {};
