import type { WeakAccountAddr, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarEvmAsset, DecodedAxelarEvmAsset, AxelarEvmTokenDetails, DecodedAxelarEvmTokenDetails } from './types.js';
import type { ProtoEnumAxelarTssExportedKeyType, JsonEnumAxelarTssExportedKeyType } from '../../tss/exported/v1beta1/types.js';
export type EncodedAxelarEvmSetGatewayRequest = Encoded<'/axelar.evm.v1beta1.SetGatewayRequest'>;
export type EncodedAxelarEvmSetGatewayResponse = Encoded<'/axelar.evm.v1beta1.SetGatewayResponse'>;
export type EncodedAxelarEvmConfirmGatewayTxRequest = Encoded<'/axelar.evm.v1beta1.ConfirmGatewayTxRequest'>;
export type EncodedAxelarEvmConfirmGatewayTxResponse = Encoded<'/axelar.evm.v1beta1.ConfirmGatewayTxResponse'>;
export type EncodedAxelarEvmConfirmGatewayTxsRequest = Encoded<'/axelar.evm.v1beta1.ConfirmGatewayTxsRequest'>;
export type EncodedAxelarEvmConfirmGatewayTxsResponse = Encoded<'/axelar.evm.v1beta1.ConfirmGatewayTxsResponse'>;
export type EncodedAxelarEvmConfirmDepositRequest = Encoded<'/axelar.evm.v1beta1.ConfirmDepositRequest'>;
export type EncodedAxelarEvmConfirmDepositResponse = Encoded<'/axelar.evm.v1beta1.ConfirmDepositResponse'>;
export type EncodedAxelarEvmConfirmTokenRequest = Encoded<'/axelar.evm.v1beta1.ConfirmTokenRequest'>;
export type EncodedAxelarEvmConfirmTokenResponse = Encoded<'/axelar.evm.v1beta1.ConfirmTokenResponse'>;
export type EncodedAxelarEvmConfirmTransferKeyRequest = Encoded<'/axelar.evm.v1beta1.ConfirmTransferKeyRequest'>;
export type EncodedAxelarEvmConfirmTransferKeyResponse = Encoded<'/axelar.evm.v1beta1.ConfirmTransferKeyResponse'>;
export type EncodedAxelarEvmLinkRequest = Encoded<'/axelar.evm.v1beta1.LinkRequest'>;
export type EncodedAxelarEvmLinkResponse = Encoded<'/axelar.evm.v1beta1.LinkResponse'>;
export type EncodedAxelarEvmCreateBurnTokensRequest = Encoded<'/axelar.evm.v1beta1.CreateBurnTokensRequest'>;
export type EncodedAxelarEvmCreateBurnTokensResponse = Encoded<'/axelar.evm.v1beta1.CreateBurnTokensResponse'>;
export type EncodedAxelarEvmCreateDeployTokenRequest = Encoded<'/axelar.evm.v1beta1.CreateDeployTokenRequest'>;
export type EncodedAxelarEvmCreateDeployTokenResponse = Encoded<'/axelar.evm.v1beta1.CreateDeployTokenResponse'>;
export type EncodedAxelarEvmCreatePendingTransfersRequest = Encoded<'/axelar.evm.v1beta1.CreatePendingTransfersRequest'>;
export type EncodedAxelarEvmCreatePendingTransfersResponse = Encoded<'/axelar.evm.v1beta1.CreatePendingTransfersResponse'>;
export type EncodedAxelarEvmCreateTransferOwnershipRequest = Encoded<'/axelar.evm.v1beta1.CreateTransferOwnershipRequest'>;
export type EncodedAxelarEvmCreateTransferOwnershipResponse = Encoded<'/axelar.evm.v1beta1.CreateTransferOwnershipResponse'>;
export type EncodedAxelarEvmCreateTransferOperatorshipRequest = Encoded<'/axelar.evm.v1beta1.CreateTransferOperatorshipRequest'>;
export type EncodedAxelarEvmCreateTransferOperatorshipResponse = Encoded<'/axelar.evm.v1beta1.CreateTransferOperatorshipResponse'>;
export type EncodedAxelarEvmSignCommandsRequest = Encoded<'/axelar.evm.v1beta1.SignCommandsRequest'>;
export type EncodedAxelarEvmSignCommandsResponse = Encoded<'/axelar.evm.v1beta1.SignCommandsResponse'>;
export type EncodedAxelarEvmAddChainRequest = Encoded<'/axelar.evm.v1beta1.AddChainRequest'>;
export type EncodedAxelarEvmAddChainResponse = Encoded<'/axelar.evm.v1beta1.AddChainResponse'>;
export type EncodedAxelarEvmRetryFailedEventRequest = Encoded<'/axelar.evm.v1beta1.RetryFailedEventRequest'>;
export type EncodedAxelarEvmRetryFailedEventResponse = Encoded<'/axelar.evm.v1beta1.RetryFailedEventResponse'>;
/**
 * Encodes a `SetGatewayRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param atu8_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmSetGatewayRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_address?: Opt<Uint8Array>) => EncodedAxelarEvmSetGatewayRequest;
/**
 * Encodes a `SetGatewayResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmSetGatewayResponse: () => EncodedAxelarEvmSetGatewayResponse;
/**
 * Encodes a `ConfirmGatewayTxRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param atu8_tx_id - `tx_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmGatewayTxRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_tx_id?: Opt<Uint8Array>) => EncodedAxelarEvmConfirmGatewayTxRequest;
/**
 * Encodes a `ConfirmGatewayTxResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmGatewayTxResponse: () => EncodedAxelarEvmConfirmGatewayTxResponse;
/**
 * Encodes a `ConfirmGatewayTxsRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param a_tx_ids - `tx_ids`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmGatewayTxsRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, a_tx_ids?: Opt<Uint8Array[]>) => EncodedAxelarEvmConfirmGatewayTxsRequest;
/**
 * Encodes a `ConfirmGatewayTxsResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmGatewayTxsResponse: () => EncodedAxelarEvmConfirmGatewayTxsResponse;
/**
 * Encodes a `ConfirmDepositRequest` protobuf message: MsgConfirmDeposit represents an erc20 deposit confirmation message
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param atu8_tx_id - `tx_id`:
 * @param atu8_amount - `amount`:
 * @param atu8_burner_address - `burner_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmDepositRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_tx_id?: Opt<Uint8Array>, atu8_amount?: Opt<Uint8Array>, atu8_burner_address?: Opt<Uint8Array>) => EncodedAxelarEvmConfirmDepositRequest;
/**
 * Encodes a `ConfirmDepositResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmDepositResponse: () => EncodedAxelarEvmConfirmDepositResponse;
/**
 * Encodes a `ConfirmTokenRequest` protobuf message: MsgConfirmToken represents a token deploy confirmation message
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param atu8_tx_id - `tx_id`:
 * @param g_asset - `asset`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmTokenRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_tx_id?: Opt<Uint8Array>, atu8_asset?: Opt<Encoded<'/axelar.evm.v1beta1.Asset'>>) => EncodedAxelarEvmConfirmTokenRequest;
/**
 * Encodes a `ConfirmTokenResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmTokenResponse: () => EncodedAxelarEvmConfirmTokenResponse;
/**
 * Encodes a `ConfirmTransferKeyRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param atu8_tx_id - `tx_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmTransferKeyRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_tx_id?: Opt<Uint8Array>) => EncodedAxelarEvmConfirmTransferKeyRequest;
/**
 * Encodes a `ConfirmTransferKeyResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmConfirmTransferKeyResponse: () => EncodedAxelarEvmConfirmTransferKeyResponse;
/**
 * Encodes a `LinkRequest` protobuf message: MsgLink represents the message that links a cross chain address to a burner address
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param sa_recipient_addr - `recipient_addr`:
 * @param s_asset - `asset`:
 * @param s_recipient_chain - `recipient_chain`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmLinkRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, sa_recipient_addr?: Opt<WeakAccountAddr>, s_asset?: Opt<string>, s_recipient_chain?: Opt<string>) => EncodedAxelarEvmLinkRequest;
/**
 * Encodes a `LinkResponse` protobuf message:
 * @param sa_deposit_addr - `deposit_addr`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmLinkResponse: (sa_deposit_addr?: Opt<WeakAccountAddr>) => EncodedAxelarEvmLinkResponse;
/**
 * Encodes a `CreateBurnTokensRequest` protobuf message: represents the message to create commands to burn tokens with AxelarGateway
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateBurnTokensRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>) => EncodedAxelarEvmCreateBurnTokensRequest;
/**
 * Encodes a `CreateBurnTokensResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateBurnTokensResponse: () => EncodedAxelarEvmCreateBurnTokensResponse;
/**
 * Encodes a `CreateDeployTokenRequest` protobuf message: represents the message to create a deploy token command for AxelarGateway
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param g_asset - `asset`:
 * @param g_token_details - `token_details`:
 * @param atu8_address - `address`:
 * @param s_daily_mint_limit - `daily_mint_limit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateDeployTokenRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, atu8_asset?: Opt<Encoded<'/axelar.evm.v1beta1.Asset'>>, atu8_token_details?: Opt<Encoded<'/axelar.evm.v1beta1.TokenDetails'>>, atu8_address?: Opt<Uint8Array>, s_daily_mint_limit?: Opt<string>) => EncodedAxelarEvmCreateDeployTokenRequest;
/**
 * Encodes a `CreateDeployTokenResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateDeployTokenResponse: () => EncodedAxelarEvmCreateDeployTokenResponse;
/**
 * Encodes a `CreatePendingTransfersRequest` protobuf message: represents a message to trigger the creation of commands handling all pending transfers
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreatePendingTransfersRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>) => EncodedAxelarEvmCreatePendingTransfersRequest;
/**
 * Encodes a `CreatePendingTransfersResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreatePendingTransfersResponse: () => EncodedAxelarEvmCreatePendingTransfersResponse;
/**
 * Encodes a `CreateTransferOwnershipRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param si_key - `key_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateTransferOwnershipRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, si_key?: Opt<string>) => EncodedAxelarEvmCreateTransferOwnershipRequest;
/**
 * Encodes a `CreateTransferOwnershipResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateTransferOwnershipResponse: () => EncodedAxelarEvmCreateTransferOwnershipResponse;
/**
 * Encodes a `CreateTransferOperatorshipRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param si_key - `key_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateTransferOperatorshipRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, si_key?: Opt<string>) => EncodedAxelarEvmCreateTransferOperatorshipRequest;
/**
 * Encodes a `CreateTransferOperatorshipResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmCreateTransferOperatorshipResponse: () => EncodedAxelarEvmCreateTransferOperatorshipResponse;
/**
 * Encodes a `SignCommandsRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmSignCommandsRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>) => EncodedAxelarEvmSignCommandsRequest;
/**
 * Encodes a `SignCommandsResponse` protobuf message:
 * @param atu8_batched_commands_id - `batched_commands_id`:
 * @param n_command_count - `command_count`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmSignCommandsResponse: (atu8_batched_commands_id?: Opt<Uint8Array>, n_command_count?: Opt<number>) => EncodedAxelarEvmSignCommandsResponse;
/**
 * Encodes a `AddChainRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_name - `name`:
 * @param xc_key_type - `key_type`:
 * @param atu8_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmAddChainRequest: (sa_sender?: Opt<WeakAccountAddr>, s_name?: Opt<string>, xc_key_type?: Opt<ProtoEnumAxelarTssExportedKeyType>, atu8_params?: Opt<Uint8Array>) => EncodedAxelarEvmAddChainRequest;
/**
 * Encodes a `AddChainResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmAddChainResponse: () => EncodedAxelarEvmAddChainResponse;
/**
 * Encodes a `RetryFailedEventRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param si_event - `event_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmRetryFailedEventRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, si_event?: Opt<string>) => EncodedAxelarEvmRetryFailedEventRequest;
/**
 * Encodes a `RetryFailedEventResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarEvmRetryFailedEventResponse: () => EncodedAxelarEvmRetryFailedEventResponse;
/**
 * A decoded protobuf SetGatewayRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: address -
 */
export type DecodedAxelarEvmSetGatewayRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    atu8_address?: Uint8Array
];
/**
 * Decodes a protobuf SetGatewayRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmSetGatewayRequest}
 */
export declare const decodeAxelarEvmSetGatewayRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmSetGatewayRequest;
/**
 * A decoded protobuf SetGateway message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmSetGatewayResponse = [];
/**
 * Decodes a protobuf SetGateway message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmSetGatewayResponse}
 */
export declare const decodeAxelarEvmSetGatewayResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ConfirmGatewayTxRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 */
export type DecodedAxelarEvmConfirmGatewayTxRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    atu8_tx_id?: Uint8Array
];
/**
 * Decodes a protobuf ConfirmGatewayTxRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmGatewayTxRequest}
 */
export declare const decodeAxelarEvmConfirmGatewayTxRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmConfirmGatewayTxRequest;
/**
 * A decoded protobuf ConfirmGatewayTx message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmConfirmGatewayTxResponse = [];
/**
 * Decodes a protobuf ConfirmGatewayTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmGatewayTxResponse}
 */
export declare const decodeAxelarEvmConfirmGatewayTxResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ConfirmGatewayTxsRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_ids -
 */
export type DecodedAxelarEvmConfirmGatewayTxsRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    a_tx_ids?: Uint8Array[]
];
/**
 * Decodes a protobuf ConfirmGatewayTxsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmGatewayTxsRequest}
 */
export declare const decodeAxelarEvmConfirmGatewayTxsRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmConfirmGatewayTxsRequest;
/**
 * A decoded protobuf ConfirmGatewayTxs message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmConfirmGatewayTxsResponse = [];
/**
 * Decodes a protobuf ConfirmGatewayTxs message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmGatewayTxsResponse}
 */
export declare const decodeAxelarEvmConfirmGatewayTxsResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ConfirmDepositRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 *   - 3: amount -
 *   - 4: burner_address -
 */
export type DecodedAxelarEvmConfirmDepositRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    atu8_tx_id?: Uint8Array,
    atu8_amount?: Uint8Array,
    atu8_burner_address?: Uint8Array
];
/**
 * Decodes a protobuf ConfirmDepositRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmDepositRequest}
 */
export declare const decodeAxelarEvmConfirmDepositRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmConfirmDepositRequest;
/**
 * A decoded protobuf ConfirmDeposit message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmConfirmDepositResponse = [];
/**
 * Decodes a protobuf ConfirmDeposit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmDepositResponse}
 */
export declare const decodeAxelarEvmConfirmDepositResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ConfirmTokenRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 *   - 3: asset -
 */
export type DecodedAxelarEvmConfirmTokenRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    atu8_tx_id?: Uint8Array,
    a_asset?: DecodedAxelarEvmAsset
];
/**
 * Decodes a protobuf ConfirmTokenRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmTokenRequest}
 */
export declare const decodeAxelarEvmConfirmTokenRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmConfirmTokenRequest;
/**
 * A decoded protobuf ConfirmToken message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmConfirmTokenResponse = [];
/**
 * Decodes a protobuf ConfirmToken message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmTokenResponse}
 */
export declare const decodeAxelarEvmConfirmTokenResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ConfirmTransferKeyRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 */
export type DecodedAxelarEvmConfirmTransferKeyRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    atu8_tx_id?: Uint8Array
];
/**
 * Decodes a protobuf ConfirmTransferKeyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmTransferKeyRequest}
 */
export declare const decodeAxelarEvmConfirmTransferKeyRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmConfirmTransferKeyRequest;
/**
 * A decoded protobuf ConfirmTransferKey message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmConfirmTransferKeyResponse = [];
/**
 * Decodes a protobuf ConfirmTransferKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmConfirmTransferKeyResponse}
 */
export declare const decodeAxelarEvmConfirmTransferKeyResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf LinkRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: recipient_addr -
 *   - 3: asset -
 *   - 4: recipient_chain -
 */
export type DecodedAxelarEvmLinkRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    sa_recipient_addr?: CwAccountAddr,
    s_asset?: string,
    s_recipient_chain?: string
];
/**
 * Decodes a protobuf LinkRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmLinkRequest}
 */
export declare const decodeAxelarEvmLinkRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmLinkRequest;
/**
 * A decoded protobuf Link message
 *
 * Alias for: deposit_addr -
 */
export type DecodedAxelarEvmLinkResponse = [
    sa_deposit_addr?: CwAccountAddr
];
/**
 * Decodes a protobuf Link message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmLinkResponse}
 */
export declare const decodeAxelarEvmLinkResponse: (atu8_payload: Uint8Array) => DecodedAxelarEvmLinkResponse;
/**
 * A decoded protobuf CreateBurnTokensRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export type DecodedAxelarEvmCreateBurnTokensRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string
];
/**
 * Decodes a protobuf CreateBurnTokensRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateBurnTokensRequest}
 */
export declare const decodeAxelarEvmCreateBurnTokensRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmCreateBurnTokensRequest;
/**
 * A decoded protobuf CreateBurnTokens message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmCreateBurnTokensResponse = [];
/**
 * Decodes a protobuf CreateBurnTokens message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateBurnTokensResponse}
 */
export declare const decodeAxelarEvmCreateBurnTokensResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CreateDeployTokenRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: asset -
 *   - 3: token_details -
 *   - 5: address -
 *   - 6: daily_mint_limit -
 */
export type DecodedAxelarEvmCreateDeployTokenRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    a_asset?: DecodedAxelarEvmAsset,
    a_token_details?: DecodedAxelarEvmTokenDetails,
    w_0?: undefined,
    atu8_address?: Uint8Array,
    s_daily_mint_limit?: string
];
/**
 * Decodes a protobuf CreateDeployTokenRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarEvmCreateDeployTokenRequest}
 */
export declare const decodeAxelarEvmCreateDeployTokenRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarEvmCreateDeployTokenRequest;
/**
 * A decoded protobuf CreateDeployToken message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmCreateDeployTokenResponse = [];
/**
 * Decodes a protobuf CreateDeployToken message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateDeployTokenResponse}
 */
export declare const decodeAxelarEvmCreateDeployTokenResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CreatePendingTransfersRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export type DecodedAxelarEvmCreatePendingTransfersRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string
];
/**
 * Decodes a protobuf CreatePendingTransfersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreatePendingTransfersRequest}
 */
export declare const decodeAxelarEvmCreatePendingTransfersRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmCreatePendingTransfersRequest;
/**
 * A decoded protobuf CreatePendingTransfers message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmCreatePendingTransfersResponse = [];
/**
 * Decodes a protobuf CreatePendingTransfers message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreatePendingTransfersResponse}
 */
export declare const decodeAxelarEvmCreatePendingTransfersResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CreateTransferOwnershipRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export type DecodedAxelarEvmCreateTransferOwnershipRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    si_key?: string
];
/**
 * Decodes a protobuf CreateTransferOwnershipRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateTransferOwnershipRequest}
 */
export declare const decodeAxelarEvmCreateTransferOwnershipRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmCreateTransferOwnershipRequest;
/**
 * A decoded protobuf CreateTransferOwnership message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmCreateTransferOwnershipResponse = [];
/**
 * Decodes a protobuf CreateTransferOwnership message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateTransferOwnershipResponse}
 */
export declare const decodeAxelarEvmCreateTransferOwnershipResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CreateTransferOperatorshipRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export type DecodedAxelarEvmCreateTransferOperatorshipRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    si_key?: string
];
/**
 * Decodes a protobuf CreateTransferOperatorshipRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateTransferOperatorshipRequest}
 */
export declare const decodeAxelarEvmCreateTransferOperatorshipRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmCreateTransferOperatorshipRequest;
/**
 * A decoded protobuf CreateTransferOperatorship message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmCreateTransferOperatorshipResponse = [];
/**
 * Decodes a protobuf CreateTransferOperatorship message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmCreateTransferOperatorshipResponse}
 */
export declare const decodeAxelarEvmCreateTransferOperatorshipResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SignCommandsRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export type DecodedAxelarEvmSignCommandsRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string
];
/**
 * Decodes a protobuf SignCommandsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmSignCommandsRequest}
 */
export declare const decodeAxelarEvmSignCommandsRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmSignCommandsRequest;
/**
 * A decoded protobuf SignCommands message
 *
 * Tuple where:
 *   - 0: batched_commands_id -
 *   - 1: command_count -
 */
export type DecodedAxelarEvmSignCommandsResponse = [
    atu8_batched_commands_id?: Uint8Array,
    n_command_count?: number
];
/**
 * Decodes a protobuf SignCommands message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmSignCommandsResponse}
 */
export declare const decodeAxelarEvmSignCommandsResponse: (atu8_payload: Uint8Array) => DecodedAxelarEvmSignCommandsResponse;
/**
 * A decoded protobuf AddChainRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: name -
 *   - 3: key_type -
 *   - 4: params -
 */
export type DecodedAxelarEvmAddChainRequest = [
    sa_sender?: CwAccountAddr,
    s_name?: string,
    w_0?: undefined,
    xc_key_type?: ProtoEnumAxelarTssExportedKeyType,
    atu8_params?: Uint8Array
];
/**
 * Decodes a protobuf AddChainRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarEvmAddChainRequest}
 */
export declare const decodeAxelarEvmAddChainRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarEvmAddChainRequest;
/**
 * A decoded protobuf AddChain message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmAddChainResponse = [];
/**
 * Decodes a protobuf AddChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmAddChainResponse}
 */
export declare const decodeAxelarEvmAddChainResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RetryFailedEventRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: event_id -
 */
export type DecodedAxelarEvmRetryFailedEventRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    si_event?: string
];
/**
 * Decodes a protobuf RetryFailedEventRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmRetryFailedEventRequest}
 */
export declare const decodeAxelarEvmRetryFailedEventRequest: (atu8_payload: Uint8Array) => DecodedAxelarEvmRetryFailedEventRequest;
/**
 * A decoded protobuf RetryFailedEvent message
 *
 * Tuple where:
 */
export type DecodedAxelarEvmRetryFailedEventResponse = [];
/**
 * Decodes a protobuf RetryFailedEvent message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarEvmRetryFailedEventResponse}
 */
export declare const decodeAxelarEvmRetryFailedEventResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link AxelarEvmSetGatewayRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: address -
 */
export declare const destructAxelarEvmSetGatewayRequest: (g_struct: AxelarEvmSetGatewayRequest) => [sender?: CwBase64, chain?: string, address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_SET_GATEWAY_REQUEST = "/axelar.evm.v1beta1.SetGatewayRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.SetGatewayRequest` -
 */
export type AxelarEvmSetGatewayRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmSetGatewayResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmSetGatewayResponse: (g_struct: AxelarEvmSetGatewayResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_SET_GATEWAY_RESPONSE = "/axelar.evm.v1beta1.SetGatewayResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.SetGatewayResponse` -
 */
export type AxelarEvmSetGatewayResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmGatewayTxRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 */
export declare const destructAxelarEvmConfirmGatewayTxRequest: (g_struct: AxelarEvmConfirmGatewayTxRequest) => [sender?: CwBase64, chain?: string, tx_id?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_GATEWAY_TX_REQUEST = "/axelar.evm.v1beta1.ConfirmGatewayTxRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmGatewayTxRequest` -
 */
export type AxelarEvmConfirmGatewayTxRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    tx_id?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmGatewayTxResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmConfirmGatewayTxResponse: (g_struct: AxelarEvmConfirmGatewayTxResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_GATEWAY_TX_RESPONSE = "/axelar.evm.v1beta1.ConfirmGatewayTxResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmGatewayTxResponse` -
 */
export type AxelarEvmConfirmGatewayTxResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmGatewayTxsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_ids -
 */
export declare const destructAxelarEvmConfirmGatewayTxsRequest: (g_struct: AxelarEvmConfirmGatewayTxsRequest) => [sender?: CwBase64, chain?: string, tx_ids?: Uint8Array[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_GATEWAY_TXS_REQUEST = "/axelar.evm.v1beta1.ConfirmGatewayTxsRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmGatewayTxsRequest` -
 */
export type AxelarEvmConfirmGatewayTxsRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    tx_ids?: CwBase64[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmGatewayTxsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmConfirmGatewayTxsResponse: (g_struct: AxelarEvmConfirmGatewayTxsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_GATEWAY_TXS_RESPONSE = "/axelar.evm.v1beta1.ConfirmGatewayTxsResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmGatewayTxsResponse` -
 */
export type AxelarEvmConfirmGatewayTxsResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmDepositRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 *   - 3: amount -
 *   - 4: burner_address -
 */
export declare const destructAxelarEvmConfirmDepositRequest: (g_struct: AxelarEvmConfirmDepositRequest) => [sender?: CwBase64, chain?: string, tx_id?: Uint8Array, amount?: Uint8Array, burner_address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_DEPOSIT_REQUEST = "/axelar.evm.v1beta1.ConfirmDepositRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmDepositRequest` - MsgConfirmDeposit represents an erc20 deposit confirmation message
 */
export type AxelarEvmConfirmDepositRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    tx_id?: CwBase64 | undefined;
    amount?: CwBase64 | undefined;
    burner_address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmDepositResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmConfirmDepositResponse: (g_struct: AxelarEvmConfirmDepositResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_DEPOSIT_RESPONSE = "/axelar.evm.v1beta1.ConfirmDepositResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmDepositResponse` -
 */
export type AxelarEvmConfirmDepositResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmTokenRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 *   - 3: asset -
 */
export declare const destructAxelarEvmConfirmTokenRequest: (g_struct: AxelarEvmConfirmTokenRequest) => [sender?: CwBase64, chain?: string, tx_id?: Uint8Array, asset?: AxelarEvmAsset];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_TOKEN_REQUEST = "/axelar.evm.v1beta1.ConfirmTokenRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmTokenRequest` - MsgConfirmToken represents a token deploy confirmation message
 */
export type AxelarEvmConfirmTokenRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    tx_id?: CwBase64 | undefined;
    asset?: AxelarEvmAsset | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmTokenResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmConfirmTokenResponse: (g_struct: AxelarEvmConfirmTokenResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_TOKEN_RESPONSE = "/axelar.evm.v1beta1.ConfirmTokenResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmTokenResponse` -
 */
export type AxelarEvmConfirmTokenResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmTransferKeyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: tx_id -
 */
export declare const destructAxelarEvmConfirmTransferKeyRequest: (g_struct: AxelarEvmConfirmTransferKeyRequest) => [sender?: CwBase64, chain?: string, tx_id?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_TRANSFER_KEY_REQUEST = "/axelar.evm.v1beta1.ConfirmTransferKeyRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmTransferKeyRequest` -
 */
export type AxelarEvmConfirmTransferKeyRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    tx_id?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmConfirmTransferKeyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmConfirmTransferKeyResponse: (g_struct: AxelarEvmConfirmTransferKeyResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CONFIRM_TRANSFER_KEY_RESPONSE = "/axelar.evm.v1beta1.ConfirmTransferKeyResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.ConfirmTransferKeyResponse` -
 */
export type AxelarEvmConfirmTransferKeyResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmLinkRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: recipient_addr -
 *   - 3: asset -
 *   - 4: recipient_chain -
 */
export declare const destructAxelarEvmLinkRequest: (g_struct: AxelarEvmLinkRequest) => [sender?: CwBase64, chain?: string, recipient_addr?: CwAccountAddr, asset?: string, recipient_chain?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_LINK_REQUEST = "/axelar.evm.v1beta1.LinkRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.LinkRequest` - MsgLink represents the message that links a cross chain address to a burner address
 */
export type AxelarEvmLinkRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    recipient_addr?: CwAccountAddr | undefined;
    asset?: string | undefined;
    recipient_chain?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmLinkResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deposit_addr -
 */
export declare const destructAxelarEvmLinkResponse: (g_struct: AxelarEvmLinkResponse) => [deposit_addr?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_LINK_RESPONSE = "/axelar.evm.v1beta1.LinkResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.LinkResponse` -
 */
export type AxelarEvmLinkResponse = {
    deposit_addr?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreateBurnTokensRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export declare const destructAxelarEvmCreateBurnTokensRequest: (g_struct: AxelarEvmCreateBurnTokensRequest) => [sender?: CwBase64, chain?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_BURN_TOKENS_REQUEST = "/axelar.evm.v1beta1.CreateBurnTokensRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateBurnTokensRequest` - represents the message to create commands to burn tokens with AxelarGateway
 */
export type AxelarEvmCreateBurnTokensRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreateBurnTokensResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmCreateBurnTokensResponse: (g_struct: AxelarEvmCreateBurnTokensResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_BURN_TOKENS_RESPONSE = "/axelar.evm.v1beta1.CreateBurnTokensResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateBurnTokensResponse` -
 */
export type AxelarEvmCreateBurnTokensResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmCreateDeployTokenRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: asset -
 *   - 3: token_details -
 *   - 5: address -
 *   - 6: daily_mint_limit -
 */
export declare const destructAxelarEvmCreateDeployTokenRequest: (g_struct: AxelarEvmCreateDeployTokenRequest) => [sender?: CwBase64, chain?: string, asset?: AxelarEvmAsset, token_details?: AxelarEvmTokenDetails, EMPTY?: void, address?: Uint8Array, daily_mint_limit?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_DEPLOY_TOKEN_REQUEST = "/axelar.evm.v1beta1.CreateDeployTokenRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateDeployTokenRequest` - represents the message to create a deploy token command for AxelarGateway
 */
export type AxelarEvmCreateDeployTokenRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    asset?: AxelarEvmAsset | undefined;
    token_details?: AxelarEvmTokenDetails | undefined;
    address?: CwBase64 | undefined;
    daily_mint_limit?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreateDeployTokenResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmCreateDeployTokenResponse: (g_struct: AxelarEvmCreateDeployTokenResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_DEPLOY_TOKEN_RESPONSE = "/axelar.evm.v1beta1.CreateDeployTokenResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateDeployTokenResponse` -
 */
export type AxelarEvmCreateDeployTokenResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmCreatePendingTransfersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export declare const destructAxelarEvmCreatePendingTransfersRequest: (g_struct: AxelarEvmCreatePendingTransfersRequest) => [sender?: CwBase64, chain?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_PENDING_TRANSFERS_REQUEST = "/axelar.evm.v1beta1.CreatePendingTransfersRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreatePendingTransfersRequest` - represents a message to trigger the creation of commands handling all pending transfers
 */
export type AxelarEvmCreatePendingTransfersRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreatePendingTransfersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmCreatePendingTransfersResponse: (g_struct: AxelarEvmCreatePendingTransfersResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_PENDING_TRANSFERS_RESPONSE = "/axelar.evm.v1beta1.CreatePendingTransfersResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreatePendingTransfersResponse` -
 */
export type AxelarEvmCreatePendingTransfersResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmCreateTransferOwnershipRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export declare const destructAxelarEvmCreateTransferOwnershipRequest: (g_struct: AxelarEvmCreateTransferOwnershipRequest) => [sender?: CwBase64, chain?: string, key_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_TRANSFER_OWNERSHIP_REQUEST = "/axelar.evm.v1beta1.CreateTransferOwnershipRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateTransferOwnershipRequest` -
 */
export type AxelarEvmCreateTransferOwnershipRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    key_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreateTransferOwnershipResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmCreateTransferOwnershipResponse: (g_struct: AxelarEvmCreateTransferOwnershipResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_TRANSFER_OWNERSHIP_RESPONSE = "/axelar.evm.v1beta1.CreateTransferOwnershipResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateTransferOwnershipResponse` -
 */
export type AxelarEvmCreateTransferOwnershipResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmCreateTransferOperatorshipRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export declare const destructAxelarEvmCreateTransferOperatorshipRequest: (g_struct: AxelarEvmCreateTransferOperatorshipRequest) => [sender?: CwBase64, chain?: string, key_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_TRANSFER_OPERATORSHIP_REQUEST = "/axelar.evm.v1beta1.CreateTransferOperatorshipRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateTransferOperatorshipRequest` -
 */
export type AxelarEvmCreateTransferOperatorshipRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    key_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmCreateTransferOperatorshipResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmCreateTransferOperatorshipResponse: (g_struct: AxelarEvmCreateTransferOperatorshipResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_CREATE_TRANSFER_OPERATORSHIP_RESPONSE = "/axelar.evm.v1beta1.CreateTransferOperatorshipResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.CreateTransferOperatorshipResponse` -
 */
export type AxelarEvmCreateTransferOperatorshipResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmSignCommandsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 */
export declare const destructAxelarEvmSignCommandsRequest: (g_struct: AxelarEvmSignCommandsRequest) => [sender?: CwBase64, chain?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_SIGN_COMMANDS_REQUEST = "/axelar.evm.v1beta1.SignCommandsRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.SignCommandsRequest` -
 */
export type AxelarEvmSignCommandsRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmSignCommandsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: batched_commands_id -
 *   - 1: command_count -
 */
export declare const destructAxelarEvmSignCommandsResponse: (g_struct: AxelarEvmSignCommandsResponse) => [batched_commands_id?: Uint8Array, command_count?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_SIGN_COMMANDS_RESPONSE = "/axelar.evm.v1beta1.SignCommandsResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.SignCommandsResponse` -
 */
export type AxelarEvmSignCommandsResponse = {
    batched_commands_id?: CwBase64 | undefined;
    command_count?: number | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmAddChainRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: name -
 *   - 3: key_type -
 *   - 4: params -
 */
export declare const destructAxelarEvmAddChainRequest: (g_struct: AxelarEvmAddChainRequest) => [sender?: CwBase64, name?: string, EMPTY?: void, key_type?: JsonEnumAxelarTssExportedKeyType, params?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_ADD_CHAIN_REQUEST = "/axelar.evm.v1beta1.AddChainRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.AddChainRequest` -
 */
export type AxelarEvmAddChainRequest = {
    sender?: CwBase64 | undefined;
    name?: string | undefined;
    key_type?: JsonEnumAxelarTssExportedKeyType | undefined;
    params?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmAddChainResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmAddChainResponse: (g_struct: AxelarEvmAddChainResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_ADD_CHAIN_RESPONSE = "/axelar.evm.v1beta1.AddChainResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.AddChainResponse` -
 */
export type AxelarEvmAddChainResponse = {};
/**
 * Destructures the fields of a {@link AxelarEvmRetryFailedEventRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: event_id -
 */
export declare const destructAxelarEvmRetryFailedEventRequest: (g_struct: AxelarEvmRetryFailedEventRequest) => [sender?: CwBase64, chain?: string, event_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_RETRY_FAILED_EVENT_REQUEST = "/axelar.evm.v1beta1.RetryFailedEventRequest";
/**
 * JSON serialization of `axelar.evm.v1beta1.RetryFailedEventRequest` -
 */
export type AxelarEvmRetryFailedEventRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    event_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarEvmRetryFailedEventResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarEvmRetryFailedEventResponse: (g_struct: AxelarEvmRetryFailedEventResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_EVM_RETRY_FAILED_EVENT_RESPONSE = "/axelar.evm.v1beta1.RetryFailedEventResponse";
/**
 * JSON serialization of `axelar.evm.v1beta1.RetryFailedEventResponse` -
 */
export type AxelarEvmRetryFailedEventResponse = {};
