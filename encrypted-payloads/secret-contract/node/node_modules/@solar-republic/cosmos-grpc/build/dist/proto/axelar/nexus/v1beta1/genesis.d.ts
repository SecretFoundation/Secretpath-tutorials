import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarNexusExportedChain, DecodedAxelarNexusExportedChain, AxelarNexusExportedCrossChainTransfer, DecodedAxelarNexusExportedCrossChainTransfer, AxelarNexusExportedTransferFee, DecodedAxelarNexusExportedTransferFee, AxelarNexusExportedFeeInfo, DecodedAxelarNexusExportedFeeInfo, AxelarNexusExportedGeneralMessage, DecodedAxelarNexusExportedGeneralMessage } from '../exported/v1beta1/types.js';
import type { AxelarNexusParams, DecodedAxelarNexusParams } from './params.js';
import type { AxelarNexusChainState, DecodedAxelarNexusChainState, AxelarNexusLinkedAddresses, DecodedAxelarNexusLinkedAddresses, AxelarNexusRateLimit, DecodedAxelarNexusRateLimit, AxelarNexusTransferEpoch, DecodedAxelarNexusTransferEpoch } from './types.js';
export type EncodedAxelarNexusGenesisState = Encoded<'/axelar.nexus.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: represents the genesis state
 * @param g_params - `params`:
 * @param sg_nonce - `nonce`:
 * @param a_chains - `chains`:
 * @param a_chain_states - `chain_states`:
 * @param a_linked_addresses - `linked_addresses`:
 * @param a_transfers - `transfers`:
 * @param g_fee - `fee`:
 * @param a_fee_infos - `fee_infos`:
 * @param a_rate_limits - `rate_limits`:
 * @param a_transfer_epochs - `transfer_epochs`:
 * @param a_messages - `messages`:
 * @param sg_message_nonce - `message_nonce`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarNexusGenesisState: (atu8_params?: Opt<Encoded<'/axelar.nexus.v1beta1.Params'>>, sg_nonce?: Opt<WeakUint64Str>, a_chains?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.Chain'>[]>, a_chain_states?: Opt<Encoded<'/axelar.nexus.v1beta1.ChainState'>[]>, a_linked_addresses?: Opt<Encoded<'/axelar.nexus.v1beta1.LinkedAddresses'>[]>, a_transfers?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.CrossChainTransfer'>[]>, atu8_fee?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.TransferFee'>>, a_fee_infos?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.FeeInfo'>[]>, a_rate_limits?: Opt<Encoded<'/axelar.nexus.v1beta1.RateLimit'>[]>, a_transfer_epochs?: Opt<Encoded<'/axelar.nexus.v1beta1.TransferEpoch'>[]>, a_messages?: Opt<Encoded<'/axelar.nexus.exported.v1beta1.GeneralMessage'>[]>, sg_message_nonce?: Opt<WeakUint64Str>) => EncodedAxelarNexusGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: params -
 *   - 1: nonce -
 *   - 2: chains -
 *   - 3: chain_states -
 *   - 4: linked_addresses -
 *   - 5: transfers -
 *   - 6: fee -
 *   - 7: fee_infos -
 *   - 8: rate_limits -
 *   - 9: transfer_epochs -
 *   - 10: messages -
 *   - 11: message_nonce -
 */
export type DecodedAxelarNexusGenesisState = [
    a_params?: DecodedAxelarNexusParams,
    sg_nonce?: CwUint64,
    a_chains?: DecodedAxelarNexusExportedChain[],
    a_chain_states?: DecodedAxelarNexusChainState[],
    a_linked_addresses?: DecodedAxelarNexusLinkedAddresses[],
    a_transfers?: DecodedAxelarNexusExportedCrossChainTransfer[],
    a_fee?: DecodedAxelarNexusExportedTransferFee,
    a_fee_infos?: DecodedAxelarNexusExportedFeeInfo[],
    a_rate_limits?: DecodedAxelarNexusRateLimit[],
    a_transfer_epochs?: DecodedAxelarNexusTransferEpoch[],
    a_messages?: DecodedAxelarNexusExportedGeneralMessage[],
    sg_message_nonce?: CwUint64
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusGenesisState}
 */
export declare const decodeAxelarNexusGenesisState: (atu8_payload: Uint8Array) => DecodedAxelarNexusGenesisState;
/**
 * Destructures the fields of a {@link AxelarNexusGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: nonce -
 *   - 2: chains -
 *   - 3: chain_states -
 *   - 4: linked_addresses -
 *   - 5: transfers -
 *   - 6: fee -
 *   - 7: fee_infos -
 *   - 8: rate_limits -
 *   - 9: transfer_epochs -
 *   - 10: messages -
 *   - 11: message_nonce -
 */
export declare const destructAxelarNexusGenesisState: (g_struct: AxelarNexusGenesisState) => [params?: AxelarNexusParams, nonce?: CwUint64, chains?: AxelarNexusExportedChain[], chain_states?: AxelarNexusChainState[], linked_addresses?: AxelarNexusLinkedAddresses[], transfers?: AxelarNexusExportedCrossChainTransfer[], fee?: AxelarNexusExportedTransferFee, fee_infos?: AxelarNexusExportedFeeInfo[], rate_limits?: AxelarNexusRateLimit[], transfer_epochs?: AxelarNexusTransferEpoch[], messages?: AxelarNexusExportedGeneralMessage[], message_nonce?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_NEXUS_GENESIS_STATE = "/axelar.nexus.v1beta1.GenesisState";
/**
 * JSON serialization of `axelar.nexus.v1beta1.GenesisState` - represents the genesis state
 */
export type AxelarNexusGenesisState = {
    params?: AxelarNexusParams | undefined;
    nonce?: CwUint64 | undefined;
    chains?: AxelarNexusExportedChain[] | undefined;
    chain_states?: AxelarNexusChainState[] | undefined;
    linked_addresses?: AxelarNexusLinkedAddresses[] | undefined;
    transfers?: AxelarNexusExportedCrossChainTransfer[] | undefined;
    fee?: AxelarNexusExportedTransferFee | undefined;
    fee_infos?: AxelarNexusExportedFeeInfo[] | undefined;
    rate_limits?: AxelarNexusRateLimit[] | undefined;
    transfer_epochs?: AxelarNexusTransferEpoch[] | undefined;
    messages?: AxelarNexusExportedGeneralMessage[] | undefined;
    message_nonce?: CwUint64 | undefined;
};
