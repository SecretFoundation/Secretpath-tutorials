import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarPermissionParams, DecodedAxelarPermissionParams } from './params.js';
import type { AxelarPermissionGovAccount, DecodedAxelarPermissionGovAccount } from './types.js';
import type { CosmosCryptoMultisigLegacyAminoPubKey, DecodedCosmosCryptoMultisigLegacyAminoPubKey } from '../../../cosmos/crypto/multisig/keys.js';
export type EncodedAxelarPermissionGenesisState = Encoded<'/axelar.permission.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: represents the genesis state
 * @param g_params - `params`:
 * @param g_governance_key - `governance_key`:
 * @param a_gov_accounts - `gov_accounts`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarPermissionGenesisState: (atu8_params?: Opt<Encoded<'/axelar.permission.v1beta1.Params'>>, atu8_governance_key?: Opt<Encoded<'/cosmos.crypto.multisig.LegacyAminoPubKey'>>, a_gov_accounts?: Opt<Encoded<'/axelar.permission.v1beta1.GovAccount'>[]>) => EncodedAxelarPermissionGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: params -
 *   - 1: governance_key -
 *   - 2: gov_accounts -
 */
export type DecodedAxelarPermissionGenesisState = [
    a_params?: DecodedAxelarPermissionParams,
    a_governance_key?: DecodedCosmosCryptoMultisigLegacyAminoPubKey,
    a_gov_accounts?: DecodedAxelarPermissionGovAccount[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarPermissionGenesisState}
 */
export declare const decodeAxelarPermissionGenesisState: (atu8_payload: Uint8Array) => DecodedAxelarPermissionGenesisState;
/**
 * Destructures the fields of a {@link AxelarPermissionGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: governance_key -
 *   - 2: gov_accounts -
 */
export declare const destructAxelarPermissionGenesisState: (g_struct: AxelarPermissionGenesisState) => [params?: AxelarPermissionParams, governance_key?: CosmosCryptoMultisigLegacyAminoPubKey, gov_accounts?: AxelarPermissionGovAccount[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_PERMISSION_GENESIS_STATE = "/axelar.permission.v1beta1.GenesisState";
/**
 * JSON serialization of `axelar.permission.v1beta1.GenesisState` - represents the genesis state
 */
export type AxelarPermissionGenesisState = {
    params?: AxelarPermissionParams | undefined;
    governance_key?: CosmosCryptoMultisigLegacyAminoPubKey | undefined;
    gov_accounts?: AxelarPermissionGovAccount[] | undefined;
};
