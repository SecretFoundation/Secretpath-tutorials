import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { ProtoEnumAxelarPermissionExportedRole, JsonEnumAxelarPermissionExportedRole } from '../exported/v1beta1/types.js';
export type EncodedAxelarPermissionGovAccount = Encoded<'/axelar.permission.v1beta1.GovAccount'>;
/**
 * Encodes a `GovAccount` protobuf message:
 * @param atu8_address - `address`:
 * @param xc_role - `role`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarPermissionGovAccount: (atu8_address?: Opt<Uint8Array>, xc_role?: Opt<ProtoEnumAxelarPermissionExportedRole>) => EncodedAxelarPermissionGovAccount;
/**
 * A decoded protobuf GovAccount message
 *
 * Tuple where:
 *   - 0: address -
 *   - 1: role -
 */
export type DecodedAxelarPermissionGovAccount = [
    atu8_address?: Uint8Array,
    xc_role?: ProtoEnumAxelarPermissionExportedRole
];
/**
 * Decodes a protobuf GovAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarPermissionGovAccount}
 */
export declare const decodeAxelarPermissionGovAccount: (atu8_payload: Uint8Array) => DecodedAxelarPermissionGovAccount;
/**
 * Destructures the fields of a {@link AxelarPermissionGovAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 *   - 1: role -
 */
export declare const destructAxelarPermissionGovAccount: (g_struct: AxelarPermissionGovAccount) => [address?: Uint8Array, role?: JsonEnumAxelarPermissionExportedRole];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_PERMISSION_GOV_ACCOUNT = "/axelar.permission.v1beta1.GovAccount";
/**
 * JSON serialization of `axelar.permission.v1beta1.GovAccount` -
 */
export type AxelarPermissionGovAccount = {
    address?: CwBase64 | undefined;
    role?: JsonEnumAxelarPermissionExportedRole | undefined;
};
