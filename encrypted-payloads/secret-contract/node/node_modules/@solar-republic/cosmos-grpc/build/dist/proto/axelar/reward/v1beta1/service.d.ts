/// <reference types="node" />
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarRewardInflationRateResponse, AxelarRewardParamsResponse } from './query.js';
import type { AxelarRewardRefundMsgResponse } from './tx.js';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param atu8_inner_message -
 * @returns a tuple where:
 *   - 0: data - the 'data' response property
 *   - 1: log - the 'data' response property
 */
export declare const submitAxelarRewardRefundMsg: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, atu8_inner_message?: Opt<Encoded<"Refundable">>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarRewardRefundMsgResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_validator -
 * @returns a tuple where:
 *   - 0: inflation_rate - the 'inflation_rate' response property
 */
export declare const queryAxelarRewardInflationRate: (z_req: string | ({
    origin: string;
} & RequestInit), s_validator?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarRewardInflationRateResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryAxelarRewardParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarRewardParamsResponse>>;
