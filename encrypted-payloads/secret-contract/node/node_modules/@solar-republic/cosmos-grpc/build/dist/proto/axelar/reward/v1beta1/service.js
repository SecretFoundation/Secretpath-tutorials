import { bech32_decode } from '@solar-republic/crypto';
import { restful_grpc } from '../../../../api/transport.js';
import { safe_bytes_to_base64 } from '../../../../api/util.js';
const SR_LCD_AXELAR_REWARD_MSGSERVICE = '/axelar/reward/refund_message';
const SR_LCD_AXELAR_REWARD_QUERYSERVICE = '/axelar/reward/v1beta1/';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param atu8_inner_message -
 * @returns a tuple where:
 *   - 0: data - the 'data' response property
 *   - 1: log - the 'data' response property
 */
export const submitAxelarRewardRefundMsg = restful_grpc((sa_sender, atu8_inner_message) => [SR_LCD_AXELAR_REWARD_MSGSERVICE, {
        sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
        inner_message: safe_bytes_to_base64(atu8_inner_message),
    }], 1);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_validator -
 * @returns a tuple where:
 *   - 0: inflation_rate - the 'inflation_rate' response property
 */
export const queryAxelarRewardInflationRate = restful_grpc(s_validator => [SR_LCD_AXELAR_REWARD_QUERYSERVICE + 'inflation_rate/' + s_validator]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryAxelarRewardParams = restful_grpc(() => [SR_LCD_AXELAR_REWARD_QUERYSERVICE + 'params']);
//# sourceMappingURL=service.js.map