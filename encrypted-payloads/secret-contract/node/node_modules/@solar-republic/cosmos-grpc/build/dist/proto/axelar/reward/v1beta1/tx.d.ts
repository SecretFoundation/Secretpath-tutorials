import type { WeakAccountAddr, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
export type EncodedAxelarRewardRefundMsgRequest = Encoded<'/axelar.reward.v1beta1.RefundMsgRequest'>;
export type EncodedAxelarRewardRefundMsgResponse = Encoded<'/axelar.reward.v1beta1.RefundMsgResponse'>;
/**
 * Encodes a `RefundMsgRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param atu8_inner_message - `inner_message`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarRewardRefundMsgRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_inner_message?: Opt<Encoded<'Refundable'>>) => EncodedAxelarRewardRefundMsgRequest;
/**
 * Encodes a `RefundMsgResponse` protobuf message:
 * @param atu8_data - `data`:
 * @param s_log - `log`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarRewardRefundMsgResponse: (atu8_data?: Opt<Uint8Array>, s_log?: Opt<string>) => EncodedAxelarRewardRefundMsgResponse;
/**
 * A decoded protobuf RefundMsgRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: inner_message -
 */
export type DecodedAxelarRewardRefundMsgRequest = [
    sa_sender?: CwAccountAddr,
    a_inner_message?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf RefundMsgRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarRewardRefundMsgRequest}
 */
export declare const decodeAxelarRewardRefundMsgRequest: (atu8_payload: Uint8Array) => DecodedAxelarRewardRefundMsgRequest;
/**
 * A decoded protobuf RefundMsg message
 *
 * Tuple where:
 *   - 0: data -
 *   - 1: log -
 */
export type DecodedAxelarRewardRefundMsgResponse = [
    atu8_data?: Uint8Array,
    s_log?: string
];
/**
 * Decodes a protobuf RefundMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarRewardRefundMsgResponse}
 */
export declare const decodeAxelarRewardRefundMsgResponse: (atu8_payload: Uint8Array) => DecodedAxelarRewardRefundMsgResponse;
/**
 * Destructures the fields of a {@link AxelarRewardRefundMsgRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: inner_message -
 */
export declare const destructAxelarRewardRefundMsgRequest: (g_struct: AxelarRewardRefundMsgRequest) => [sender?: CwBase64, inner_message?: JsonAny<string>];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_REWARD_REFUND_MSG_REQUEST = "/axelar.reward.v1beta1.RefundMsgRequest";
/**
 * JSON serialization of `axelar.reward.v1beta1.RefundMsgRequest` -
 */
export type AxelarRewardRefundMsgRequest = {
    sender?: CwBase64 | undefined;
    inner_message?: JsonAny<string> | undefined;
};
/**
 * Destructures the fields of a {@link AxelarRewardRefundMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 *   - 1: log -
 */
export declare const destructAxelarRewardRefundMsgResponse: (g_struct: AxelarRewardRefundMsgResponse) => [data?: Uint8Array, log?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_REWARD_REFUND_MSG_RESPONSE = "/axelar.reward.v1beta1.RefundMsgResponse";
/**
 * JSON serialization of `axelar.reward.v1beta1.RefundMsgResponse` -
 */
export type AxelarRewardRefundMsgResponse = {
    data?: CwBase64 | undefined;
    log?: string | undefined;
};
