import type { WeakInt64Str, CwInt64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedAxelarSnapshotParams = Encoded<'/axelar.snapshot.v1beta1.Params'>;
/**
 * Encodes a `Params` protobuf message: represent the genesis parameters for the module
 * @param sg_min_proxy_balance - `min_proxy_balance`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarSnapshotParams: (sg_min_proxy_balance?: Opt<WeakInt64Str>) => EncodedAxelarSnapshotParams;
/**
 * A decoded protobuf Params message
 *
 * Alias for: min_proxy_balance -
 */
export type DecodedAxelarSnapshotParams = [
    sg_min_proxy_balance?: CwInt64
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarSnapshotParams}
 */
export declare const decodeAxelarSnapshotParams: (atu8_payload: Uint8Array) => DecodedAxelarSnapshotParams;
/**
 * Destructures the fields of a {@link AxelarSnapshotParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: min_proxy_balance -
 */
export declare const destructAxelarSnapshotParams: (g_struct: AxelarSnapshotParams) => [min_proxy_balance?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_SNAPSHOT_PARAMS = "/axelar.snapshot.v1beta1.Params";
/**
 * JSON serialization of `axelar.snapshot.v1beta1.Params` - represent the genesis parameters for the module
 */
export type AxelarSnapshotParams = {
    min_proxy_balance?: CwInt64 | undefined;
};
