import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
/**
 * Encodes a `KeyPresenceRequest` protobuf message: Key presence check types
 * @param s_key_uid - `key_uid`:
 * @param atu8_pub_key - `pub_key`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarTssTofndKeyPresenceRequest = (s_key_uid, atu8_pub_key) => Protobuf() // ...
    .s(s_key_uid) // string key_uid = 1
    .b(atu8_pub_key) // bytes pub_key = 2
    .o;
/**
 * Encodes a `KeyPresenceResponse` protobuf message:
 * @param xc_response - `response`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarTssTofndKeyPresenceResponse = (xc_response) => Protobuf() // ...
    .v(xc_response) // Response response = 1
    .o;
/**
 * Decodes a protobuf KeyPresenceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssTofndKeyPresenceRequest}
 */
export const decodeAxelarTssTofndKeyPresenceRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf KeyPresence message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssTofndKeyPresenceResponse}
 */
export const decodeAxelarTssTofndKeyPresenceResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link AxelarTssTofndKeyPresenceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key_uid -
 *   - 1: pub_key -
 */
export const destructAxelarTssTofndKeyPresenceRequest = (g_struct) => [g_struct.key_uid, safe_base64_to_bytes(g_struct.pub_key)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_TSS_TOFND_KEY_PRESENCE_REQUEST = '/axelar.tss.tofnd.v1beta1.KeyPresenceRequest';
/**
 * Destructures the fields of a {@link AxelarTssTofndKeyPresenceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: response -
 */
export const destructAxelarTssTofndKeyPresenceResponse = (g_struct) => [g_struct.response];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE = '/axelar.tss.tofnd.v1beta1.KeyPresenceResponse';
/**
 * Protobuf enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_UNSPECIFIED** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED = 0;
/**
 * JSON enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_UNSPECIFIED** -
 *
 * Belongs to enum type {@link JsonEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED = 'RESPONSE_UNSPECIFIED';
/**
 * Protobuf enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_PRESENT** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT = 1;
/**
 * JSON enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_PRESENT** -
 *
 * Belongs to enum type {@link JsonEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT = 'RESPONSE_PRESENT';
/**
 * Protobuf enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_ABSENT** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT = 2;
/**
 * JSON enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_ABSENT** -
 *
 * Belongs to enum type {@link JsonEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT = 'RESPONSE_ABSENT';
/**
 * Protobuf enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_FAIL** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL = 3;
/**
 * JSON enum value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response`.
 *
 * **RESPONSE_FAIL** -
 *
 * Belongs to enum type {@link JsonEnumAxelarTssTofndKeyPresenceResponseResponse}
 */
export const SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL = 'RESPONSE_FAIL';
/**
 * Maps a protobuf enum int value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumAxelarTssTofndKeyPresenceResponseResponse = {
    [XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED]: SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED,
    [XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT]: SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT,
    [XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT]: SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT,
    [XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL]: SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL,
};
/**
 * Maps a JSON enum string value for `axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumAxelarTssTofndKeyPresenceResponseResponse = {
    [SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED]: XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_UNSPECIFIED,
    [SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT]: XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_PRESENT,
    [SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT]: XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_ABSENT,
    [SI_JSON_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL]: XC_PROTO_AXELAR_TSS_TOFND_KEY_PRESENCE_RESPONSE_RESPONSE_FAIL,
};
//# sourceMappingURL=common.js.map