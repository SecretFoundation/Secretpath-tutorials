/// <reference types="node" />
import type { Opt } from '../../../../api/types.js';
import type { AxelarTssParamsResponse } from './query.js';
import type { AxelarTssHeartBeatResponse } from './tx.js';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param a_key_ids -
 * @returns an empty tuple
 */
export declare const submitAxelarTssHeartBeat: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, a_key_ids?: Opt<string[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarTssHeartBeatResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryAxelarTssParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarTssParamsResponse>>;
