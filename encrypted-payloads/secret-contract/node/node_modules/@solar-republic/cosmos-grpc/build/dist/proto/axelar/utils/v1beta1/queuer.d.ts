import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedAxelarUtilsQueueState = Encoded<'/axelar.utils.v1beta1.QueueState'>;
export type EncodedAxelarUtilsQueueStateItemsEntry = Encoded<'/axelar.utils.v1beta1.QueueState.ItemsEntry'>;
export type EncodedAxelarUtilsQueueStateItem = Encoded<'/axelar.utils.v1beta1.QueueState.Item'>;
/**
 * Encodes a `QueueState` protobuf message:
 * @param a_items - `items`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarUtilsQueueState: (a_items?: Opt<Encoded<'/axelar.utils.v1beta1.QueueState.ItemsEntry'>[]>) => EncodedAxelarUtilsQueueState;
/**
 * Encodes a `ItemsEntry` protobuf message:
 * @param s_key - `key`:
 * @param g_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarUtilsQueueStateItemsEntry: (s_key?: Opt<string>, atu8_value?: Opt<Encoded<'/axelar.utils.v1beta1.QueueState.Item'>>) => EncodedAxelarUtilsQueueStateItemsEntry;
/**
 * Encodes a `Item` protobuf message:
 * @param atu8_key - `key`:
 * @param atu8_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarUtilsQueueStateItem: (atu8_key?: Opt<Uint8Array>, atu8_value?: Opt<Uint8Array>) => EncodedAxelarUtilsQueueStateItem;
/**
 * A decoded protobuf QueueState message
 *
 * Alias for: items -
 */
export type DecodedAxelarUtilsQueueState = [
    a_items?: DecodedAxelarUtilsQueueStateItemsEntry[]
];
/**
 * Decodes a protobuf QueueState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarUtilsQueueState}
 */
export declare const decodeAxelarUtilsQueueState: (atu8_payload: Uint8Array) => DecodedAxelarUtilsQueueState;
/**
 * A decoded protobuf ItemsEntry message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export type DecodedAxelarUtilsQueueStateItemsEntry = [
    s_key?: string,
    a_value?: DecodedAxelarUtilsQueueStateItem
];
/**
 * Decodes a protobuf ItemsEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarUtilsQueueStateItemsEntry}
 */
export declare const decodeAxelarUtilsQueueStateItemsEntry: (atu8_payload: Uint8Array) => DecodedAxelarUtilsQueueStateItemsEntry;
/**
 * A decoded protobuf Item message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export type DecodedAxelarUtilsQueueStateItem = [
    atu8_key?: Uint8Array,
    atu8_value?: Uint8Array
];
/**
 * Decodes a protobuf Item message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarUtilsQueueStateItem}
 */
export declare const decodeAxelarUtilsQueueStateItem: (atu8_payload: Uint8Array) => DecodedAxelarUtilsQueueStateItem;
/**
 * Destructures the fields of a {@link AxelarUtilsQueueState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: items -
 */
export declare const destructAxelarUtilsQueueState: (g_struct: AxelarUtilsQueueState) => [items?: AxelarUtilsQueueStateItemsEntry[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_UTILS_QUEUE_STATE = "/axelar.utils.v1beta1.QueueState";
/**
 * JSON serialization of `axelar.utils.v1beta1.QueueState` -
 */
export type AxelarUtilsQueueState = {
    items?: AxelarUtilsQueueStateItemsEntry[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarUtilsQueueStateItemsEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export declare const destructAxelarUtilsQueueStateItemsEntry: (g_struct: AxelarUtilsQueueStateItemsEntry) => [key?: string, value?: AxelarUtilsQueueStateItem];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_UTILS_QUEUE_STATE_ITEMS_ENTRY = "/axelar.utils.v1beta1.QueueState.ItemsEntry";
/**
 * JSON serialization of `axelar.utils.v1beta1.QueueState.ItemsEntry` -
 */
export type AxelarUtilsQueueStateItemsEntry = {
    key?: string | undefined;
    value?: AxelarUtilsQueueStateItem | undefined;
};
/**
 * Destructures the fields of a {@link AxelarUtilsQueueStateItem} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export declare const destructAxelarUtilsQueueStateItem: (g_struct: AxelarUtilsQueueStateItem) => [key?: Uint8Array, value?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_UTILS_QUEUE_STATE_ITEM = "/axelar.utils.v1beta1.QueueState.Item";
/**
 * JSON serialization of `axelar.utils.v1beta1.QueueState.Item` -
 */
export type AxelarUtilsQueueStateItem = {
    key?: CwBase64 | undefined;
    value?: CwBase64 | undefined;
};
