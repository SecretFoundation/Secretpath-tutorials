import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf, map } from '../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
import { decodeAxelarSnapshotExportedSnapshot } from '../../../snapshot/exported/v1beta1/types.js';
import { decodeAxelarUtilsThreshold } from '../../../utils/v1beta1/threshold.js';
import { decodeGoogleProtobufAny } from '../../../../google/protobuf/any.js';
/**
 * Encodes a `PollMetadata` protobuf message: represents a poll with write-in voting, i.e. the result of the vote can have any data type
 * @param sg_expires_at - `expires_at`:
 * @param atu8_result - `result`:
 * @param g_voting_threshold - `voting_threshold`:
 * @param xc_state - `state`:
 * @param sg_min_voter_count - `min_voter_count`:
 * @param s_reward_pool_name - `reward_pool_name`:
 * @param sg_grace_period - `grace_period`:
 * @param sg_completed_at - `completed_at`:
 * @param sg_id - `id`:
 * @param g_snapshot - `snapshot`:
 * @param s_module - `module`:
 * @param atu8_module_metadata - `module_metadata`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarVoteExportedPollMetadata = (sg_expires_at, atu8_result, atu8_voting_threshold, xc_state, sg_min_voter_count, s_reward_pool_name, sg_grace_period, sg_completed_at, sg_id, atu8_snapshot, s_module, atu8_module_metadata) => Protobuf() // ...
    .g(sg_expires_at, 3) // int32 expires_at = 3
    .b(atu8_result, 4) // Any result = 4
    .b(atu8_voting_threshold, 5) // Threshold voting_threshold = 5
    .v(xc_state, 6) // PollState state = 6
    .g(sg_min_voter_count, 7) // int32 min_voter_count = 7
    .s(s_reward_pool_name, 10) // string reward_pool_name = 10
    .g(sg_grace_period, 11) // int32 grace_period = 11
    .g(sg_completed_at, 12) // int32 completed_at = 12
    .g(sg_id, 13) // uint64 id = 13
    .b(atu8_snapshot, 15) // Snapshot snapshot = 15
    .s(s_module, 16) // string module = 16
    .b(atu8_module_metadata, 17) // Any module_metadata = 17
    .o;
/**
 * Encodes a `PollKey` protobuf message: represents the key data for a poll
 * @param s_module - `module`:
 * @param s_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarVoteExportedPollKey = (s_module, s_id) => Protobuf() // ...
    .s(s_module) // string module = 1
    .s(s_id) // string id = 2
    .o;
/**
 * Encodes a `PollParticipants` protobuf message: should be embedded in poll events in other modules
 * @param sg_poll_id - `poll_id`:
 * @param a_participants - `participants`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarVoteExportedPollParticipants = (sg_poll_id, a_participants) => Protobuf() // ...
    .g(sg_poll_id) // uint64 poll_id = 1
    .B(a_participants) // bytes[] participants = 2
    .o;
/**
 * Decodes a protobuf PollMetadata message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarVoteExportedPollMetadata}
 */
export const decodeAxelarVoteExportedPollMetadata = ((atu8_payload, [, , sg_expires_at, a_result, a_voting_threshold, xc_state, sg_min_voter_count, , , s_reward_pool_name, sg_grace_period, sg_completed_at, sg_id, , a_snapshot, s_module, a_module_metadata] = decode_protobuf(atu8_payload, [0, 0, 3, 1, 1, 1, 3, 0, 0, 5, 3, 3, 3, 0, 1, 5, 1], [0, 0, 0, decodeGoogleProtobufAny, decodeAxelarUtilsThreshold, 0, 0, 0, 0, 0, 0, 0, 0, 0, decodeAxelarSnapshotExportedSnapshot, 0, decodeGoogleProtobufAny])) => [__UNDEFINED, __UNDEFINED, sg_expires_at, a_result, a_voting_threshold, xc_state, sg_min_voter_count, __UNDEFINED, __UNDEFINED, s_reward_pool_name, sg_grace_period, sg_completed_at, sg_id, __UNDEFINED, a_snapshot, s_module, a_module_metadata]);
/**
 * Decodes a protobuf PollKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarVoteExportedPollKey}
 */
export const decodeAxelarVoteExportedPollKey = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf PollParticipants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarVoteExportedPollParticipants}
 */
export const decodeAxelarVoteExportedPollParticipants = (atu8_payload) => decode_protobuf(atu8_payload, [3, 0]);
/**
 * Destructures the fields of a {@link AxelarVoteExportedPollMetadata} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 2: expires_at -
 *   - 3: result -
 *   - 4: voting_threshold -
 *   - 5: state -
 *   - 6: min_voter_count -
 *   - 9: reward_pool_name -
 *   - 10: grace_period -
 *   - 11: completed_at -
 *   - 12: id -
 *   - 14: snapshot -
 *   - 15: module -
 *   - 16: module_metadata -
 */
export const destructAxelarVoteExportedPollMetadata = (g_struct) => [__UNDEFINED, __UNDEFINED, g_struct.expires_at, g_struct.result, g_struct.voting_threshold, g_struct.state, g_struct.min_voter_count, __UNDEFINED, __UNDEFINED, g_struct.reward_pool_name, g_struct.grace_period, g_struct.completed_at, g_struct.id, __UNDEFINED, g_struct.snapshot, g_struct.module, g_struct.module_metadata];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_VOTE_EXPORTED_POLL_METADATA = '/axelar.vote.exported.v1beta1.PollMetadata';
/**
 * Destructures the fields of a {@link AxelarVoteExportedPollKey} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: module -
 *   - 1: id -
 */
export const destructAxelarVoteExportedPollKey = (g_struct) => [g_struct.module, g_struct.id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_VOTE_EXPORTED_POLL_KEY = '/axelar.vote.exported.v1beta1.PollKey';
/**
 * Destructures the fields of a {@link AxelarVoteExportedPollParticipants} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: poll_id -
 *   - 1: participants -
 */
export const destructAxelarVoteExportedPollParticipants = (g_struct) => [g_struct.poll_id, map(g_struct.participants, safe_base64_to_bytes)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_VOTE_EXPORTED_POLL_PARTICIPANTS = '/axelar.vote.exported.v1beta1.PollParticipants';
/**
 * Protobuf enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_UNSPECIFIED** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarVoteExportedPollState}
 */
export const XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED = 0;
/**
 * JSON enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_UNSPECIFIED** -
 *
 * Belongs to enum type {@link JsonEnumAxelarVoteExportedPollState}
 */
export const SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED = 'NonExistent';
/**
 * Protobuf enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_PENDING** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarVoteExportedPollState}
 */
export const XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING = 1;
/**
 * JSON enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_PENDING** -
 *
 * Belongs to enum type {@link JsonEnumAxelarVoteExportedPollState}
 */
export const SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING = 'Pending';
/**
 * Protobuf enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_COMPLETED** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarVoteExportedPollState}
 */
export const XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED = 2;
/**
 * JSON enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_COMPLETED** -
 *
 * Belongs to enum type {@link JsonEnumAxelarVoteExportedPollState}
 */
export const SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED = 'Completed';
/**
 * Protobuf enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_FAILED** -
 *
 * Belongs to enum type {@link ProtoEnumAxelarVoteExportedPollState}
 */
export const XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED = 3;
/**
 * JSON enum value for `axelar.vote.exported.v1beta1.PollState`.
 *
 * **POLL_STATE_FAILED** -
 *
 * Belongs to enum type {@link JsonEnumAxelarVoteExportedPollState}
 */
export const SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED = 'Failed';
/**
 * Maps a protobuf enum int value for `axelar.vote.exported.v1beta1.PollState` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumAxelarVoteExportedPollState = {
    [XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED]: SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED,
    [XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING]: SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING,
    [XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED]: SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED,
    [XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED]: SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED,
};
/**
 * Maps a JSON enum string value for `axelar.vote.exported.v1beta1.PollState` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumAxelarVoteExportedPollState = {
    [SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED]: XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_UNSPECIFIED,
    [SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING]: XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_PENDING,
    [SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED]: XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_COMPLETED,
    [SI_JSON_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED]: XC_PROTO_AXELAR_VOTE_EXPORTED_POLL_STATE_FAILED,
};
//# sourceMappingURL=types.js.map