import { bech32_decode } from '@solar-republic/crypto';
import { restful_grpc } from '../../../../api/transport.js';
import { safe_bytes_to_base64 } from '../../../../api/util.js';
const SR_LCD_AXELAR_VOTE_MSGSERVICE = '/axelar/vote/vote';
const SR_LCD_AXELAR_VOTE_QUERYSERVICE = '/axelar/vote/v1beta1/params';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_poll_id -
 * @param atu8_vote -
 * @returns a tuple where:
 *   - 0: log - the 'log' response property
 */
export const submitAxelarVoteVote = restful_grpc((sa_sender, sg_poll_id, atu8_vote) => [SR_LCD_AXELAR_VOTE_MSGSERVICE, {
        sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
        poll_id: sg_poll_id,
        vote: safe_bytes_to_base64(atu8_vote),
    }], 1);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryAxelarVoteParams = restful_grpc(() => [SR_LCD_AXELAR_VOTE_QUERYSERVICE]);
//# sourceMappingURL=service.js.map