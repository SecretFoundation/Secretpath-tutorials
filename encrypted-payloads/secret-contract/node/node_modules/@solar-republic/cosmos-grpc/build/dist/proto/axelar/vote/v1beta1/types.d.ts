import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
export type EncodedAxelarVoteTalliedVote = Encoded<'/axelar.vote.v1beta1.TalliedVote'>;
export type EncodedAxelarVoteTalliedVoteIsVoterLateEntry = Encoded<'/axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry'>;
/**
 * Encodes a `TalliedVote` protobuf message: represents a vote for a poll with the accumulated stake of all validators voting for the same data
 * @param atu8_tally - `tally`:
 * @param atu8_data - `data`:
 * @param sg_poll_id - `poll_id`:
 * @param a_is_voter_lates - `is_voter_late`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarVoteTalliedVote: (atu8_tally?: Opt<Uint8Array>, atu8_data?: Opt<Encoded<'github.com/cosmos/codec/ProtoMarshaler'>>, sg_poll_id?: Opt<WeakUint64Str>, a_is_voter_lates?: Opt<Encoded<'/axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry'>[]>) => EncodedAxelarVoteTalliedVote;
/**
 * Encodes a `IsVoterLateEntry` protobuf message:
 * @param s_key - `key`:
 * @param b_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarVoteTalliedVoteIsVoterLateEntry: (s_key?: Opt<string>, b_value?: Opt<boolean | 0 | 1>) => EncodedAxelarVoteTalliedVoteIsVoterLateEntry;
/**
 * A decoded protobuf TalliedVote message
 *
 * Tuple where:
 *   - 0: tally -
 *   - 2: data -
 *   - 3: poll_id -
 *   - 4: is_voter_late -
 */
export type DecodedAxelarVoteTalliedVote = [
    atu8_tally?: Uint8Array,
    w_0?: undefined,
    a_data?: DecodedGoogleProtobufAny,
    sg_poll_id?: CwUint64,
    a_is_voter_late?: DecodedAxelarVoteTalliedVoteIsVoterLateEntry[]
];
/**
 * Decodes a protobuf TalliedVote message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarVoteTalliedVote}
 */
export declare const decodeAxelarVoteTalliedVote: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarVoteTalliedVote;
/**
 * A decoded protobuf IsVoterLateEntry message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export type DecodedAxelarVoteTalliedVoteIsVoterLateEntry = [
    s_key?: string,
    b_value?: 0 | 1
];
/**
 * Decodes a protobuf IsVoterLateEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarVoteTalliedVoteIsVoterLateEntry}
 */
export declare const decodeAxelarVoteTalliedVoteIsVoterLateEntry: (atu8_payload: Uint8Array) => DecodedAxelarVoteTalliedVoteIsVoterLateEntry;
/**
 * Destructures the fields of a {@link AxelarVoteTalliedVote} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tally -
 *   - 2: data -
 *   - 3: poll_id -
 *   - 4: is_voter_late -
 */
export declare const destructAxelarVoteTalliedVote: (g_struct: AxelarVoteTalliedVote) => [tally?: Uint8Array, EMPTY?: void, data?: JsonAny<string>, poll_id?: CwUint64, is_voter_late?: AxelarVoteTalliedVoteIsVoterLateEntry[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_VOTE_TALLIED_VOTE = "/axelar.vote.v1beta1.TalliedVote";
/**
 * JSON serialization of `axelar.vote.v1beta1.TalliedVote` - represents a vote for a poll with the accumulated stake of all validators voting for the same data
 */
export type AxelarVoteTalliedVote = {
    tally?: CwBase64 | undefined;
    data?: JsonAny<string> | undefined;
    poll_id?: CwUint64 | undefined;
    is_voter_late?: AxelarVoteTalliedVoteIsVoterLateEntry[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarVoteTalliedVoteIsVoterLateEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export declare const destructAxelarVoteTalliedVoteIsVoterLateEntry: (g_struct: AxelarVoteTalliedVoteIsVoterLateEntry) => [key?: string, value?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_VOTE_TALLIED_VOTE_IS_VOTER_LATE_ENTRY = "/axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry";
/**
 * JSON serialization of `axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry` -
 */
export type AxelarVoteTalliedVoteIsVoterLateEntry = {
    key?: string | undefined;
    value?: boolean | undefined;
};
