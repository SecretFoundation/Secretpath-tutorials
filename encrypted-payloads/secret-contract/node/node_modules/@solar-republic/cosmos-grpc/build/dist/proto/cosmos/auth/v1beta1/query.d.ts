/// <reference types="node" />
import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, CwInt64, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosAuthBaseAccount, CosmosAuthParams, DecodedCosmosAuthParams, CosmosAuthModuleAccount, DecodedCosmosAuthBaseAccount } from './auth.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
export type EncodedCosmosAuthQueryAccountsRequest = Encoded<'/cosmos.auth.v1beta1.QueryAccountsRequest'>;
export type EncodedCosmosAuthQueryAccountsResponse = Encoded<'/cosmos.auth.v1beta1.QueryAccountsResponse'>;
export type EncodedCosmosAuthQueryAccountRequest = Encoded<'/cosmos.auth.v1beta1.QueryAccountRequest'>;
export type EncodedCosmosAuthQueryAccountResponse = Encoded<'/cosmos.auth.v1beta1.QueryAccountResponse'>;
export type EncodedCosmosAuthQueryParamsRequest = Encoded<'/cosmos.auth.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosAuthQueryParamsResponse = Encoded<'/cosmos.auth.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosAuthQueryModuleAccountsRequest = Encoded<'/cosmos.auth.v1beta1.QueryModuleAccountsRequest'>;
export type EncodedCosmosAuthQueryModuleAccountsResponse = Encoded<'/cosmos.auth.v1beta1.QueryModuleAccountsResponse'>;
export type EncodedCosmosAuthQueryModuleAccountByNameRequest = Encoded<'/cosmos.auth.v1beta1.QueryModuleAccountByNameRequest'>;
export type EncodedCosmosAuthQueryModuleAccountByNameResponse = Encoded<'/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse'>;
export type EncodedCosmosAuthBech32PrefixRequest = Encoded<'/cosmos.auth.v1beta1.Bech32PrefixRequest'>;
export type EncodedCosmosAuthBech32PrefixResponse = Encoded<'/cosmos.auth.v1beta1.Bech32PrefixResponse'>;
export type EncodedCosmosAuthAddressBytesToStringRequest = Encoded<'/cosmos.auth.v1beta1.AddressBytesToStringRequest'>;
export type EncodedCosmosAuthAddressBytesToStringResponse = Encoded<'/cosmos.auth.v1beta1.AddressBytesToStringResponse'>;
export type EncodedCosmosAuthAddressStringToBytesRequest = Encoded<'/cosmos.auth.v1beta1.AddressStringToBytesRequest'>;
export type EncodedCosmosAuthAddressStringToBytesResponse = Encoded<'/cosmos.auth.v1beta1.AddressStringToBytesResponse'>;
export type EncodedCosmosAuthQueryAccountAddressByIDRequest = Encoded<'/cosmos.auth.v1beta1.QueryAccountAddressByIDRequest'>;
export type EncodedCosmosAuthQueryAccountAddressByIDResponse = Encoded<'/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse'>;
export type EncodedCosmosAuthQueryAccountInfoRequest = Encoded<'/cosmos.auth.v1beta1.QueryAccountInfoRequest'>;
export type EncodedCosmosAuthQueryAccountInfoResponse = Encoded<'/cosmos.auth.v1beta1.QueryAccountInfoResponse'>;
/**
 * Returns all the existing accounts. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set. Since: cosmos-sdk 0.43
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: accounts - the existing accounts
 *   - 1: pagination - the existing accounts
 */
export declare const queryCosmosAuthAccounts: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryAccountsResponse>>;
/**
 * Returns account details based on address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - defines the address to query for.
 * @returns a tuple where:
 *   - 0: account - defines the account of the corresponding address.
 */
export declare const queryCosmosAuthAccount: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryAccountResponse>>;
/**
 * Returns account address based on account number. Since: cosmos-sdk 0.46.2
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_id - Deprecated, use account_id instead id is the account number of the address to be queried. This field should have been an uint64 (like all account numbers), and will be updated to uint64 in a future version of the auth query.
 * @param sg_account_id - the account number of the address to be queried. Since: cosmos-sdk 0.47
 * @returns a tuple where:
 *   - 0: account_address - the 'account_address' response property
 */
export declare const queryCosmosAuthAccountAddressByID: (z_req: string | ({
    origin: string;
} & RequestInit), sg_id?: Opt<`${bigint}`>, sg_account_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryAccountAddressByIDResponse>>;
/**
 * Queries all parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryCosmosAuthParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryParamsResponse>>;
/**
 * Returns all the existing module accounts. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 */
export declare const queryCosmosAuthModuleAccounts: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryModuleAccountsResponse>>;
/**
 * Returns the module account info by module name
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_name -
 * @returns a tuple where:
 *   - 0: account - the 'account' response property
 */
export declare const queryCosmosAuthModuleAccountByName: (z_req: string | ({
    origin: string;
} & RequestInit), s_name?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryModuleAccountByNameResponse>>;
/**
 * Queries bech32Prefix Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: bech32_prefix - the 'bech32_prefix' response property
 */
export declare const queryCosmosAuthBech32Prefix: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthBech32PrefixResponse>>;
/**
 * Converts Account Address bytes to string Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param atu8_address_bytes -
 * @returns a tuple where:
 *   - 0: address_string - the 'address_string' response property
 */
export declare const queryCosmosAuthAddressBytesToString: (z_req: string | ({
    origin: string;
} & RequestInit), atu8_address_bytes?: Opt<Uint8Array>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthAddressBytesToStringResponse>>;
/**
 * Converts Address string to bytes Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_address_string -
 * @returns a tuple where:
 *   - 0: address_bytes - the 'address_bytes' response property
 */
export declare const queryCosmosAuthAddressStringToBytes: (z_req: string | ({
    origin: string;
} & RequestInit), s_address_string?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthAddressStringToBytesResponse>>;
/**
 * Queries account info which is common to all account types. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the account address string.
 * @returns a tuple where:
 *   - 0: info - the account info which is represented by BaseAccount.
 */
export declare const queryCosmosAuthAccountInfo: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthQueryAccountInfoResponse>>;
/**
 * Encodes a `QueryAccountsRequest` protobuf message: the request type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosAuthQueryAccountsRequest;
/**
 * Encodes a `QueryAccountsResponse` protobuf message: the response type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 * @param a_accounts - `accounts`: the existing accounts
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountsResponse: (a_accounts?: Opt<Encoded<'cosmos.auth.v1beta1.AccountI'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosAuthQueryAccountsResponse;
/**
 * Encodes a `QueryAccountRequest` protobuf message: the request type for the Query/Account RPC method.
 * @param sa_address - `address`: defines the address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountRequest: (sa_address?: Opt<WeakAccountAddr>) => EncodedCosmosAuthQueryAccountRequest;
/**
 * Encodes a `QueryAccountResponse` protobuf message: the response type for the Query/Account RPC method.
 * @param atu8_account - `account`: defines the account of the corresponding address.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountResponse: (atu8_account?: Opt<Encoded<'cosmos.auth.v1beta1.AccountI'>>) => EncodedCosmosAuthQueryAccountResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryParamsRequest: () => EncodedCosmosAuthQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryParamsResponse: (atu8_params?: Opt<Encoded<'/cosmos.auth.v1beta1.Params'>>) => EncodedCosmosAuthQueryParamsResponse;
/**
 * Encodes a `QueryModuleAccountsRequest` protobuf message: the request type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryModuleAccountsRequest: () => EncodedCosmosAuthQueryModuleAccountsRequest;
/**
 * Encodes a `QueryModuleAccountsResponse` protobuf message: the response type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 * @param a_accounts - `accounts`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryModuleAccountsResponse: (a_accounts?: Opt<Encoded<'cosmos.auth.v1beta1.ModuleAccountI'>[]>) => EncodedCosmosAuthQueryModuleAccountsResponse;
/**
 * Encodes a `QueryModuleAccountByNameRequest` protobuf message: the request type for the Query/ModuleAccountByName RPC method.
 * @param s_name - `name`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryModuleAccountByNameRequest: (s_name?: Opt<string>) => EncodedCosmosAuthQueryModuleAccountByNameRequest;
/**
 * Encodes a `QueryModuleAccountByNameResponse` protobuf message: the response type for the Query/ModuleAccountByName RPC method.
 * @param atu8_account - `account`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryModuleAccountByNameResponse: (atu8_account?: Opt<Encoded<'cosmos.auth.v1beta1.ModuleAccountI'>>) => EncodedCosmosAuthQueryModuleAccountByNameResponse;
/**
 * Encodes a `Bech32PrefixRequest` protobuf message: the request type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthBech32PrefixRequest: () => EncodedCosmosAuthBech32PrefixRequest;
/**
 * Encodes a `Bech32PrefixResponse` protobuf message: the response type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 * @param s_bech32_prefix - `bech32_prefix`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthBech32PrefixResponse: (s_bech32_prefix?: Opt<string>) => EncodedCosmosAuthBech32PrefixResponse;
/**
 * Encodes a `AddressBytesToStringRequest` protobuf message: the request type for AddressString rpc method. Since: cosmos-sdk 0.46
 * @param atu8_address_bytes - `address_bytes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthAddressBytesToStringRequest: (atu8_address_bytes?: Opt<Uint8Array>) => EncodedCosmosAuthAddressBytesToStringRequest;
/**
 * Encodes a `AddressBytesToStringResponse` protobuf message: the response type for AddressString rpc method. Since: cosmos-sdk 0.46
 * @param s_address_string - `address_string`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthAddressBytesToStringResponse: (s_address_string?: Opt<string>) => EncodedCosmosAuthAddressBytesToStringResponse;
/**
 * Encodes a `AddressStringToBytesRequest` protobuf message: the request type for AccountBytes rpc method. Since: cosmos-sdk 0.46
 * @param s_address_string - `address_string`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthAddressStringToBytesRequest: (s_address_string?: Opt<string>) => EncodedCosmosAuthAddressStringToBytesRequest;
/**
 * Encodes a `AddressStringToBytesResponse` protobuf message: the response type for AddressBytes rpc method. Since: cosmos-sdk 0.46
 * @param atu8_address_bytes - `address_bytes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthAddressStringToBytesResponse: (atu8_address_bytes?: Opt<Uint8Array>) => EncodedCosmosAuthAddressStringToBytesResponse;
/**
 * Encodes a `QueryAccountAddressByIDRequest` protobuf message: the request type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 * @param sg_id - `id`: Deprecated, use account_id instead id is the account number of the address to be queried. This field should have been an uint64 (like all account numbers), and will be updated to uint64 in a future version of the auth query.
 * @param sg_account_id - `account_id`: the account number of the address to be queried. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountAddressByIDRequest: (sg_id?: Opt<WeakInt64Str>, sg_account_id?: Opt<WeakUint64Str>) => EncodedCosmosAuthQueryAccountAddressByIDRequest;
/**
 * Encodes a `QueryAccountAddressByIDResponse` protobuf message: the response type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 * @param sa_account - `account_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountAddressByIDResponse: (sa_account?: Opt<WeakAccountAddr>) => EncodedCosmosAuthQueryAccountAddressByIDResponse;
/**
 * Encodes a `QueryAccountInfoRequest` protobuf message: the Query/AccountInfo request type. Since: cosmos-sdk 0.47
 * @param sa_address - `address`: the account address string.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountInfoRequest: (sa_address?: Opt<WeakAccountAddr>) => EncodedCosmosAuthQueryAccountInfoRequest;
/**
 * Encodes a `QueryAccountInfoResponse` protobuf message: the Query/AccountInfo response type. Since: cosmos-sdk 0.47
 * @param g_info - `info`: the account info which is represented by BaseAccount.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthQueryAccountInfoResponse: (atu8_info?: Opt<Encoded<'/cosmos.auth.v1beta1.BaseAccount'>>) => EncodedCosmosAuthQueryAccountInfoResponse;
/**
 * A decoded protobuf QueryAccountsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosAuthQueryAccountsRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountsRequest}
 */
export declare const decodeCosmosAuthQueryAccountsRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountsRequest;
/**
 * A decoded protobuf QueryAccounts message
 *
 * Tuple where:
 *   - 0: accounts - the existing accounts
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosAuthQueryAccountsResponse = [
    a_accounts?: DecodedGoogleProtobufAny[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryAccounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountsResponse}
 */
export declare const decodeCosmosAuthQueryAccountsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountsResponse;
/**
 * A decoded protobuf QueryAccountRequest message
 *
 * Alias for: address - defines the address to query for.
 */
export type DecodedCosmosAuthQueryAccountRequest = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountRequest}
 */
export declare const decodeCosmosAuthQueryAccountRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountRequest;
/**
 * A decoded protobuf QueryAccount message
 *
 * Alias for: account - defines the account of the corresponding address.
 */
export type DecodedCosmosAuthQueryAccountResponse = [
    a_account?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountResponse}
 */
export declare const decodeCosmosAuthQueryAccountResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosAuthQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryParamsRequest}
 */
export declare const decodeCosmosAuthQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedCosmosAuthQueryParamsResponse = [
    a_params?: DecodedCosmosAuthParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryParamsResponse}
 */
export declare const decodeCosmosAuthQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryParamsResponse;
/**
 * A decoded protobuf QueryModuleAccountsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosAuthQueryModuleAccountsRequest = [];
/**
 * Decodes a protobuf QueryModuleAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryModuleAccountsRequest}
 */
export declare const decodeCosmosAuthQueryModuleAccountsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryModuleAccounts message
 *
 * Alias for: accounts -
 */
export type DecodedCosmosAuthQueryModuleAccountsResponse = [
    a_accounts?: DecodedGoogleProtobufAny[]
];
/**
 * Decodes a protobuf QueryModuleAccounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryModuleAccountsResponse}
 */
export declare const decodeCosmosAuthQueryModuleAccountsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryModuleAccountsResponse;
/**
 * A decoded protobuf QueryModuleAccountByNameRequest message
 *
 * Alias for: name -
 */
export type DecodedCosmosAuthQueryModuleAccountByNameRequest = [
    s_name?: string
];
/**
 * Decodes a protobuf QueryModuleAccountByNameRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryModuleAccountByNameRequest}
 */
export declare const decodeCosmosAuthQueryModuleAccountByNameRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryModuleAccountByNameRequest;
/**
 * A decoded protobuf QueryModuleAccountByName message
 *
 * Alias for: account -
 */
export type DecodedCosmosAuthQueryModuleAccountByNameResponse = [
    a_account?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryModuleAccountByName message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryModuleAccountByNameResponse}
 */
export declare const decodeCosmosAuthQueryModuleAccountByNameResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryModuleAccountByNameResponse;
/**
 * A decoded protobuf Bech32PrefixRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosAuthBech32PrefixRequest = [];
/**
 * Decodes a protobuf Bech32PrefixRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthBech32PrefixRequest}
 */
export declare const decodeCosmosAuthBech32PrefixRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Bech32Prefix message
 *
 * Alias for: bech32_prefix -
 */
export type DecodedCosmosAuthBech32PrefixResponse = [
    s_bech32_prefix?: string
];
/**
 * Decodes a protobuf Bech32Prefix message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthBech32PrefixResponse}
 */
export declare const decodeCosmosAuthBech32PrefixResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthBech32PrefixResponse;
/**
 * A decoded protobuf AddressBytesToStringRequest message
 *
 * Alias for: address_bytes -
 */
export type DecodedCosmosAuthAddressBytesToStringRequest = [
    atu8_address_bytes?: Uint8Array
];
/**
 * Decodes a protobuf AddressBytesToStringRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthAddressBytesToStringRequest}
 */
export declare const decodeCosmosAuthAddressBytesToStringRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthAddressBytesToStringRequest;
/**
 * A decoded protobuf AddressBytesToString message
 *
 * Alias for: address_string -
 */
export type DecodedCosmosAuthAddressBytesToStringResponse = [
    s_address_string?: string
];
/**
 * Decodes a protobuf AddressBytesToString message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthAddressBytesToStringResponse}
 */
export declare const decodeCosmosAuthAddressBytesToStringResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthAddressBytesToStringResponse;
/**
 * A decoded protobuf AddressStringToBytesRequest message
 *
 * Alias for: address_string -
 */
export type DecodedCosmosAuthAddressStringToBytesRequest = [
    s_address_string?: string
];
/**
 * Decodes a protobuf AddressStringToBytesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthAddressStringToBytesRequest}
 */
export declare const decodeCosmosAuthAddressStringToBytesRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthAddressStringToBytesRequest;
/**
 * A decoded protobuf AddressStringToBytes message
 *
 * Alias for: address_bytes -
 */
export type DecodedCosmosAuthAddressStringToBytesResponse = [
    atu8_address_bytes?: Uint8Array
];
/**
 * Decodes a protobuf AddressStringToBytes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthAddressStringToBytesResponse}
 */
export declare const decodeCosmosAuthAddressStringToBytesResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthAddressStringToBytesResponse;
/**
 * A decoded protobuf QueryAccountAddressByIDRequest message
 *
 * Tuple where:
 *   - 0: id - Deprecated, use account_id instead id is the account number of the address to be queried. This field should have been an uint64 (like all account numbers), and will be updated to uint64 in a future version of the auth query.
 *   - 1: account_id - the account number of the address to be queried. Since: cosmos-sdk 0.47
 */
export type DecodedCosmosAuthQueryAccountAddressByIDRequest = [
    sg_id?: CwInt64,
    sg_account_id?: CwUint64
];
/**
 * Decodes a protobuf QueryAccountAddressByIDRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountAddressByIDRequest}
 */
export declare const decodeCosmosAuthQueryAccountAddressByIDRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountAddressByIDRequest;
/**
 * A decoded protobuf QueryAccountAddressByID message
 *
 * Alias for: account_address -
 */
export type DecodedCosmosAuthQueryAccountAddressByIDResponse = [
    sa_account?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryAccountAddressByID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountAddressByIDResponse}
 */
export declare const decodeCosmosAuthQueryAccountAddressByIDResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountAddressByIDResponse;
/**
 * A decoded protobuf QueryAccountInfoRequest message
 *
 * Alias for: address - the account address string.
 */
export type DecodedCosmosAuthQueryAccountInfoRequest = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryAccountInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountInfoRequest}
 */
export declare const decodeCosmosAuthQueryAccountInfoRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountInfoRequest;
/**
 * A decoded protobuf QueryAccountInfo message
 *
 * Alias for: info - the account info which is represented by BaseAccount.
 */
export type DecodedCosmosAuthQueryAccountInfoResponse = [
    a_info?: DecodedCosmosAuthBaseAccount
];
/**
 * Decodes a protobuf QueryAccountInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthQueryAccountInfoResponse}
 */
export declare const decodeCosmosAuthQueryAccountInfoResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthQueryAccountInfoResponse;
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosAuthQueryAccountsRequest: (g_struct: CosmosAuthQueryAccountsRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNTS_REQUEST = "/cosmos.auth.v1beta1.QueryAccountsRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountsRequest` - the request type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 */
export type CosmosAuthQueryAccountsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts - the existing accounts
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosAuthQueryAccountsResponse: (g_struct: CosmosAuthQueryAccountsResponse) => [accounts?: JsonAny<string, CosmosAuthBaseAccount>[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNTS_RESPONSE = "/cosmos.auth.v1beta1.QueryAccountsResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountsResponse` - the response type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 */
export type CosmosAuthQueryAccountsResponse = {
    accounts?: JsonAny<string, CosmosAuthBaseAccount>[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - defines the address to query for.
 */
export declare const destructCosmosAuthQueryAccountRequest: (g_struct: CosmosAuthQueryAccountRequest) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_REQUEST = "/cosmos.auth.v1beta1.QueryAccountRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountRequest` - the request type for the Query/Account RPC method.
 */
export type CosmosAuthQueryAccountRequest = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account - defines the account of the corresponding address.
 */
export declare const destructCosmosAuthQueryAccountResponse: (g_struct: CosmosAuthQueryAccountResponse) => [account?: JsonAny<string, CosmosAuthBaseAccount>];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_RESPONSE = "/cosmos.auth.v1beta1.QueryAccountResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountResponse` - the response type for the Query/Account RPC method.
 */
export type CosmosAuthQueryAccountResponse = {
    account?: JsonAny<string, CosmosAuthBaseAccount> | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAuthQueryParamsRequest: (g_struct: CosmosAuthQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_PARAMS_REQUEST = "/cosmos.auth.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type CosmosAuthQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosAuthQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructCosmosAuthQueryParamsResponse: (g_struct: CosmosAuthQueryParamsResponse) => [params?: CosmosAuthParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_PARAMS_RESPONSE = "/cosmos.auth.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type CosmosAuthQueryParamsResponse = {
    params?: CosmosAuthParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryModuleAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAuthQueryModuleAccountsRequest: (g_struct: CosmosAuthQueryModuleAccountsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_MODULE_ACCOUNTS_REQUEST = "/cosmos.auth.v1beta1.QueryModuleAccountsRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryModuleAccountsRequest` - the request type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthQueryModuleAccountsRequest = {};
/**
 * Destructures the fields of a {@link CosmosAuthQueryModuleAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 */
export declare const destructCosmosAuthQueryModuleAccountsResponse: (g_struct: CosmosAuthQueryModuleAccountsResponse) => [accounts?: JsonAny<string, CosmosAuthModuleAccount>[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_MODULE_ACCOUNTS_RESPONSE = "/cosmos.auth.v1beta1.QueryModuleAccountsResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryModuleAccountsResponse` - the response type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthQueryModuleAccountsResponse = {
    accounts?: JsonAny<string, CosmosAuthModuleAccount>[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryModuleAccountByNameRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: name -
 */
export declare const destructCosmosAuthQueryModuleAccountByNameRequest: (g_struct: CosmosAuthQueryModuleAccountByNameRequest) => [name?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_MODULE_ACCOUNT_BY_NAME_REQUEST = "/cosmos.auth.v1beta1.QueryModuleAccountByNameRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryModuleAccountByNameRequest` - the request type for the Query/ModuleAccountByName RPC method.
 */
export type CosmosAuthQueryModuleAccountByNameRequest = {
    name?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryModuleAccountByNameResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account -
 */
export declare const destructCosmosAuthQueryModuleAccountByNameResponse: (g_struct: CosmosAuthQueryModuleAccountByNameResponse) => [account?: JsonAny<string, CosmosAuthModuleAccount>];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_MODULE_ACCOUNT_BY_NAME_RESPONSE = "/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryModuleAccountByNameResponse` - the response type for the Query/ModuleAccountByName RPC method.
 */
export type CosmosAuthQueryModuleAccountByNameResponse = {
    account?: JsonAny<string, CosmosAuthModuleAccount> | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthBech32PrefixRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAuthBech32PrefixRequest: (g_struct: CosmosAuthBech32PrefixRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_BECH32_PREFIX_REQUEST = "/cosmos.auth.v1beta1.Bech32PrefixRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.Bech32PrefixRequest` - the request type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthBech32PrefixRequest = {};
/**
 * Destructures the fields of a {@link CosmosAuthBech32PrefixResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bech32_prefix -
 */
export declare const destructCosmosAuthBech32PrefixResponse: (g_struct: CosmosAuthBech32PrefixResponse) => [bech32_prefix?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_BECH32_PREFIX_RESPONSE = "/cosmos.auth.v1beta1.Bech32PrefixResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.Bech32PrefixResponse` - the response type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthBech32PrefixResponse = {
    bech32_prefix?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthAddressBytesToStringRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address_bytes -
 */
export declare const destructCosmosAuthAddressBytesToStringRequest: (g_struct: CosmosAuthAddressBytesToStringRequest) => [address_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_ADDRESS_BYTES_TO_STRING_REQUEST = "/cosmos.auth.v1beta1.AddressBytesToStringRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.AddressBytesToStringRequest` - the request type for AddressString rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthAddressBytesToStringRequest = {
    address_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthAddressBytesToStringResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address_string -
 */
export declare const destructCosmosAuthAddressBytesToStringResponse: (g_struct: CosmosAuthAddressBytesToStringResponse) => [address_string?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_ADDRESS_BYTES_TO_STRING_RESPONSE = "/cosmos.auth.v1beta1.AddressBytesToStringResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.AddressBytesToStringResponse` - the response type for AddressString rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthAddressBytesToStringResponse = {
    address_string?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthAddressStringToBytesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address_string -
 */
export declare const destructCosmosAuthAddressStringToBytesRequest: (g_struct: CosmosAuthAddressStringToBytesRequest) => [address_string?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_ADDRESS_STRING_TO_BYTES_REQUEST = "/cosmos.auth.v1beta1.AddressStringToBytesRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.AddressStringToBytesRequest` - the request type for AccountBytes rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthAddressStringToBytesRequest = {
    address_string?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthAddressStringToBytesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address_bytes -
 */
export declare const destructCosmosAuthAddressStringToBytesResponse: (g_struct: CosmosAuthAddressStringToBytesResponse) => [address_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_ADDRESS_STRING_TO_BYTES_RESPONSE = "/cosmos.auth.v1beta1.AddressStringToBytesResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.AddressStringToBytesResponse` - the response type for AddressBytes rpc method. Since: cosmos-sdk 0.46
 */
export type CosmosAuthAddressStringToBytesResponse = {
    address_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountAddressByIDRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id - Deprecated, use account_id instead id is the account number of the address to be queried. This field should have been an uint64 (like all account numbers), and will be updated to uint64 in a future version of the auth query.
 *   - 1: account_id - the account number of the address to be queried. Since: cosmos-sdk 0.47
 */
export declare const destructCosmosAuthQueryAccountAddressByIDRequest: (g_struct: CosmosAuthQueryAccountAddressByIDRequest) => [id?: CwInt64, account_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_ADDRESS_BY_I_D_REQUEST = "/cosmos.auth.v1beta1.QueryAccountAddressByIDRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountAddressByIDRequest` - the request type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 */
export type CosmosAuthQueryAccountAddressByIDRequest = {
    id?: CwInt64 | undefined;
    account_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountAddressByIDResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account_address -
 */
export declare const destructCosmosAuthQueryAccountAddressByIDResponse: (g_struct: CosmosAuthQueryAccountAddressByIDResponse) => [account_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_ADDRESS_BY_I_D_RESPONSE = "/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountAddressByIDResponse` - the response type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 */
export type CosmosAuthQueryAccountAddressByIDResponse = {
    account_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the account address string.
 */
export declare const destructCosmosAuthQueryAccountInfoRequest: (g_struct: CosmosAuthQueryAccountInfoRequest) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_INFO_REQUEST = "/cosmos.auth.v1beta1.QueryAccountInfoRequest";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountInfoRequest` - the Query/AccountInfo request type. Since: cosmos-sdk 0.47
 */
export type CosmosAuthQueryAccountInfoRequest = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthQueryAccountInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: info - the account info which is represented by BaseAccount.
 */
export declare const destructCosmosAuthQueryAccountInfoResponse: (g_struct: CosmosAuthQueryAccountInfoResponse) => [info?: CosmosAuthBaseAccount];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTH_QUERY_ACCOUNT_INFO_RESPONSE = "/cosmos.auth.v1beta1.QueryAccountInfoResponse";
/**
 * JSON serialization of `cosmos.auth.v1beta1.QueryAccountInfoResponse` - the Query/AccountInfo response type. Since: cosmos-sdk 0.47
 */
export type CosmosAuthQueryAccountInfoResponse = {
    info?: CosmosAuthBaseAccount | undefined;
};
