import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt, WeakTimestampStr } from '../../../../api/types.js';
import type { CosmosBankSendAuthorization } from '../../bank/v1beta1/authz.js';
import type { CosmosStakingStakeAuthorization } from '../../staking/v1beta1/authz.js';
import type { CosmwasmWasmStoreCodeAuthorization, CosmwasmWasmContractExecutionAuthorization, CosmwasmWasmContractMigrationAuthorization } from '../../../cosmwasm/wasm/v1/authz.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { IbcApplicationsTransferTransferAuthorization } from '../../../ibc/applications/transfer/v1/authz.js';
export type AnyCosmosAuthzGenericAuthorization = Encoded<'cosmos.authz.v1beta1.Authorization'>;
export type EncodedCosmosAuthzGenericAuthorization = Encoded<'/cosmos.authz.v1beta1.GenericAuthorization' | 'cosmos.authz.v1beta1.Authorization'>;
export type EncodedCosmosAuthzGrant = Encoded<'/cosmos.authz.v1beta1.Grant'>;
export type EncodedCosmosAuthzGrantAuthorization = Encoded<'/cosmos.authz.v1beta1.GrantAuthorization'>;
export type EncodedCosmosAuthzGrantQueueItem = Encoded<'/cosmos.authz.v1beta1.GrantQueueItem'>;
/**
 * Encodes a `GenericAuthorization` protobuf message wrapped in the `Any` container: gives the grantee unrestricted permissions to execute the provided method on behalf of the granter's account.
 * @param s_msg - `msg`: Msg, identified by it's type URL, to grant unrestricted permissions to execute
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export declare const anyGenericAuthorization: (s_msg?: Opt<string>) => AnyCosmosAuthzGenericAuthorization;
/**
 * Encodes a `GenericAuthorization` protobuf message: gives the grantee unrestricted permissions to execute the provided method on behalf of the granter's account.
 * @param s_msg - `msg`: Msg, identified by it's type URL, to grant unrestricted permissions to execute
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzGenericAuthorization: (s_msg?: Opt<string>) => EncodedCosmosAuthzGenericAuthorization;
/**
 * Encodes a `Grant` protobuf message: gives permissions to execute the provide method with expiration time.
 * @param atu8_authorization - `authorization`:
 * @param xt_expiration - `expiration`: time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzGrant: (atu8_authorization?: Opt<Encoded<'cosmos.authz.v1beta1.Authorization'>>, xt_expiration?: Opt<number>) => EncodedCosmosAuthzGrant;
/**
 * Encodes a `GrantAuthorization` protobuf message: extends a grant with both the addresses of the grantee and granter. It is used in genesis.proto and query.proto
 * @param sa_granter - `granter`:
 * @param sa_grantee - `grantee`:
 * @param atu8_authorization - `authorization`:
 * @param xt_expiration - `expiration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzGrantAuthorization: (sa_granter?: Opt<WeakAccountAddr>, sa_grantee?: Opt<WeakAccountAddr>, atu8_authorization?: Opt<Encoded<'cosmos.authz.v1beta1.Authorization'>>, xt_expiration?: Opt<number>) => EncodedCosmosAuthzGrantAuthorization;
/**
 * Encodes a `GrantQueueItem` protobuf message: contains the list of TypeURL of a sdk.Msg.
 * @param a_msg_type_urls - `msg_type_urls`: contains the list of TypeURL of a sdk.Msg.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzGrantQueueItem: (a_msg_type_urls?: Opt<string[]>) => EncodedCosmosAuthzGrantQueueItem;
/**
 * A decoded protobuf GenericAuthorization message
 *
 * Alias for: msg - Msg, identified by it's type URL, to grant unrestricted permissions to execute
 */
export type DecodedCosmosAuthzGenericAuthorization = [
    s_msg?: string
];
/**
 * Decodes a protobuf GenericAuthorization message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzGenericAuthorization}
 */
export declare const decodeCosmosAuthzGenericAuthorization: (atu8_payload: Uint8Array) => DecodedCosmosAuthzGenericAuthorization;
/**
 * A decoded protobuf Grant message
 *
 * Tuple where:
 *   - 0: authorization -
 *   - 1: expiration - time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)
 */
export type DecodedCosmosAuthzGrant = [
    a_authorization?: DecodedGoogleProtobufAny,
    a_expiration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf Grant message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzGrant}
 */
export declare const decodeCosmosAuthzGrant: (atu8_payload: Uint8Array) => DecodedCosmosAuthzGrant;
/**
 * A decoded protobuf GrantAuthorization message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: authorization -
 *   - 3: expiration -
 */
export type DecodedCosmosAuthzGrantAuthorization = [
    sa_granter?: CwAccountAddr,
    sa_grantee?: CwAccountAddr,
    a_authorization?: DecodedGoogleProtobufAny,
    a_expiration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf GrantAuthorization message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzGrantAuthorization}
 */
export declare const decodeCosmosAuthzGrantAuthorization: (atu8_payload: Uint8Array) => DecodedCosmosAuthzGrantAuthorization;
/**
 * A decoded protobuf GrantQueueItem message
 *
 * Alias for: msg_type_urls - contains the list of TypeURL of a sdk.Msg.
 */
export type DecodedCosmosAuthzGrantQueueItem = [
    a_msg_type_urls?: string[]
];
/**
 * Decodes a protobuf GrantQueueItem message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzGrantQueueItem}
 */
export declare const decodeCosmosAuthzGrantQueueItem: (atu8_payload: Uint8Array) => DecodedCosmosAuthzGrantQueueItem;
/**
 * Destructures the fields of a {@link CosmosAuthzGrant} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authorization -
 *   - 1: expiration - time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)
 */
export declare const destructCosmosAuthzGrant: (g_struct: CosmosAuthzGrant) => [authorization?: JsonAny<string, CosmosBankSendAuthorization | CosmosStakingStakeAuthorization | CosmwasmWasmStoreCodeAuthorization | CosmwasmWasmContractExecutionAuthorization | CosmwasmWasmContractMigrationAuthorization | IbcApplicationsTransferTransferAuthorization | CosmosAuthzGenericAuthorization>, expiration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_GRANT = "/cosmos.authz.v1beta1.Grant";
/**
 * JSON serialization of `cosmos.authz.v1beta1.Grant` - gives permissions to execute the provide method with expiration time.
 */
export type CosmosAuthzGrant = {
    authorization?: JsonAny<string, CosmosBankSendAuthorization | CosmosStakingStakeAuthorization | CosmosAuthzGenericAuthorization | IbcApplicationsTransferTransferAuthorization | CosmwasmWasmStoreCodeAuthorization | CosmwasmWasmContractExecutionAuthorization | CosmwasmWasmContractMigrationAuthorization> | undefined;
    expiration?: WeakTimestampStr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzGrantAuthorization} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: authorization -
 *   - 3: expiration -
 */
export declare const destructCosmosAuthzGrantAuthorization: (g_struct: CosmosAuthzGrantAuthorization) => [granter?: CwAccountAddr, grantee?: CwAccountAddr, authorization?: JsonAny<string, CosmosBankSendAuthorization | CosmosStakingStakeAuthorization | CosmwasmWasmStoreCodeAuthorization | CosmwasmWasmContractExecutionAuthorization | CosmwasmWasmContractMigrationAuthorization | IbcApplicationsTransferTransferAuthorization | CosmosAuthzGenericAuthorization>, expiration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_GRANT_AUTHORIZATION = "/cosmos.authz.v1beta1.GrantAuthorization";
/**
 * JSON serialization of `cosmos.authz.v1beta1.GrantAuthorization` - extends a grant with both the addresses of the grantee and granter. It is used in genesis.proto and query.proto
 */
export type CosmosAuthzGrantAuthorization = {
    granter?: CwAccountAddr | undefined;
    grantee?: CwAccountAddr | undefined;
    authorization?: JsonAny<string, CosmosBankSendAuthorization | CosmosStakingStakeAuthorization | CosmosAuthzGenericAuthorization | IbcApplicationsTransferTransferAuthorization | CosmwasmWasmStoreCodeAuthorization | CosmwasmWasmContractExecutionAuthorization | CosmwasmWasmContractMigrationAuthorization> | undefined;
    expiration?: WeakTimestampStr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzGenericAuthorization} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: msg - Msg, identified by it's type URL, to grant unrestricted permissions to execute
 */
export declare const destructCosmosAuthzGenericAuthorization: (g_struct: CosmosAuthzGenericAuthorization) => [msg?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_GENERIC_AUTHORIZATION = "/cosmos.authz.v1beta1.GenericAuthorization";
/**
 * JSON serialization of `cosmos.authz.v1beta1.GenericAuthorization` - gives the grantee unrestricted permissions to execute the provided method on behalf of the granter's account.
 */
export type CosmosAuthzGenericAuthorization = {
    msg?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzGrantQueueItem} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: msg_type_urls - contains the list of TypeURL of a sdk.Msg.
 */
export declare const destructCosmosAuthzGrantQueueItem: (g_struct: CosmosAuthzGrantQueueItem) => [msg_type_urls?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_GRANT_QUEUE_ITEM = "/cosmos.authz.v1beta1.GrantQueueItem";
/**
 * JSON serialization of `cosmos.authz.v1beta1.GrantQueueItem` - contains the list of TypeURL of a sdk.Msg.
 */
export type CosmosAuthzGrantQueueItem = {
    msg_type_urls?: string[] | undefined;
};
