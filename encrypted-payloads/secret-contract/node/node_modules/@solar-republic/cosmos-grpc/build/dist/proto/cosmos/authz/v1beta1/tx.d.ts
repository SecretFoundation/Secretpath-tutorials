import type { WeakAccountAddr, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosAuthzGrant, DecodedCosmosAuthzGrant } from './authz.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
export type EncodedCosmosAuthzMsgGrant = Encoded<'/cosmos.authz.v1beta1.MsgGrant'>;
export type EncodedCosmosAuthzMsgGrantResponse = Encoded<'/cosmos.authz.v1beta1.MsgGrantResponse'>;
export type EncodedCosmosAuthzMsgExec = Encoded<'/cosmos.authz.v1beta1.MsgExec'>;
export type EncodedCosmosAuthzMsgExecResponse = Encoded<'/cosmos.authz.v1beta1.MsgExecResponse'>;
export type EncodedCosmosAuthzMsgRevoke = Encoded<'/cosmos.authz.v1beta1.MsgRevoke'>;
export type EncodedCosmosAuthzMsgRevokeResponse = Encoded<'/cosmos.authz.v1beta1.MsgRevokeResponse'>;
/**
 * Encodes a `MsgGrant` protobuf message: a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time.
 * @param sa_granter - `granter`:
 * @param sa_grantee - `grantee`:
 * @param g_grant - `grant`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgGrant: (sa_granter?: Opt<WeakAccountAddr>, sa_grantee?: Opt<WeakAccountAddr>, atu8_grant?: Opt<Encoded<'/cosmos.authz.v1beta1.Grant'>>) => EncodedCosmosAuthzMsgGrant;
/**
 * Encodes a `MsgGrantResponse` protobuf message: defines the Msg/MsgGrant response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgGrantResponse: () => EncodedCosmosAuthzMsgGrantResponse;
/**
 * Encodes a `MsgExec` protobuf message: attempts to execute the provided messages using authorizations granted to the grantee. Each message should have only one signer corresponding to the granter of the authorization.
 * @param sa_grantee - `grantee`:
 * @param a_msgs - `msgs`: Execute Msg. The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg)) triple and validate it.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgExec: (sa_grantee?: Opt<WeakAccountAddr>, a_msgs?: Opt<Encoded<'cosmos.base.v1beta1.Msg'>[]>) => EncodedCosmosAuthzMsgExec;
/**
 * Encodes a `MsgExecResponse` protobuf message: defines the Msg/MsgExecResponse response type.
 * @param a_results - `results`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgExecResponse: (a_results?: Opt<Uint8Array[]>) => EncodedCosmosAuthzMsgExecResponse;
/**
 * Encodes a `MsgRevoke` protobuf message: revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee.
 * @param sa_granter - `granter`:
 * @param sa_grantee - `grantee`:
 * @param s_msg_type_url - `msg_type_url`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgRevoke: (sa_granter?: Opt<WeakAccountAddr>, sa_grantee?: Opt<WeakAccountAddr>, s_msg_type_url?: Opt<string>) => EncodedCosmosAuthzMsgRevoke;
/**
 * Encodes a `MsgRevokeResponse` protobuf message: defines the Msg/MsgRevokeResponse response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzMsgRevokeResponse: () => EncodedCosmosAuthzMsgRevokeResponse;
/**
 * A decoded protobuf Grant message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: grant -
 */
export type DecodedCosmosAuthzMsgGrant = [
    sa_granter?: CwAccountAddr,
    sa_grantee?: CwAccountAddr,
    a_grant?: DecodedCosmosAuthzGrant
];
/**
 * Decodes a protobuf Grant message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgGrant}
 */
export declare const decodeCosmosAuthzMsgGrant: (atu8_payload: Uint8Array) => DecodedCosmosAuthzMsgGrant;
/**
 * A decoded protobuf Grant message
 *
 * Tuple where:
 */
export type DecodedCosmosAuthzMsgGrantResponse = [];
/**
 * Decodes a protobuf Grant message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgGrantResponse}
 */
export declare const decodeCosmosAuthzMsgGrantResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Exec message
 *
 * Tuple where:
 *   - 0: grantee -
 *   - 1: msgs - Execute Msg. The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg)) triple and validate it.
 */
export type DecodedCosmosAuthzMsgExec = [
    sa_grantee?: CwAccountAddr,
    a_msgs?: DecodedGoogleProtobufAny[]
];
/**
 * Decodes a protobuf Exec message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgExec}
 */
export declare const decodeCosmosAuthzMsgExec: (atu8_payload: Uint8Array) => DecodedCosmosAuthzMsgExec;
/**
 * A decoded protobuf Exec message
 *
 * Alias for: results -
 */
export type DecodedCosmosAuthzMsgExecResponse = [
    a_results?: Uint8Array[]
];
/**
 * Decodes a protobuf Exec message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgExecResponse}
 */
export declare const decodeCosmosAuthzMsgExecResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthzMsgExecResponse;
/**
 * A decoded protobuf Revoke message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: msg_type_url -
 */
export type DecodedCosmosAuthzMsgRevoke = [
    sa_granter?: CwAccountAddr,
    sa_grantee?: CwAccountAddr,
    s_msg_type_url?: string
];
/**
 * Decodes a protobuf Revoke message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgRevoke}
 */
export declare const decodeCosmosAuthzMsgRevoke: (atu8_payload: Uint8Array) => DecodedCosmosAuthzMsgRevoke;
/**
 * A decoded protobuf Revoke message
 *
 * Tuple where:
 */
export type DecodedCosmosAuthzMsgRevokeResponse = [];
/**
 * Decodes a protobuf Revoke message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzMsgRevokeResponse}
 */
export declare const decodeCosmosAuthzMsgRevokeResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link CosmosAuthzMsgGrant} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: grant -
 */
export declare const destructCosmosAuthzMsgGrant: (g_struct: CosmosAuthzMsgGrant) => [granter?: CwAccountAddr, grantee?: CwAccountAddr, grant?: CosmosAuthzGrant];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_GRANT = "/cosmos.authz.v1beta1.MsgGrant";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgGrant` - a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time.
 */
export type CosmosAuthzMsgGrant = {
    granter?: CwAccountAddr | undefined;
    grantee?: CwAccountAddr | undefined;
    grant?: CosmosAuthzGrant | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzMsgGrantResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAuthzMsgGrantResponse: (g_struct: CosmosAuthzMsgGrantResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_GRANT_RESPONSE = "/cosmos.authz.v1beta1.MsgGrantResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgGrantResponse` - defines the Msg/MsgGrant response type.
 */
export type CosmosAuthzMsgGrantResponse = {};
/**
 * Destructures the fields of a {@link CosmosAuthzMsgExec} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grantee -
 *   - 1: msgs - Execute Msg. The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg)) triple and validate it.
 */
export declare const destructCosmosAuthzMsgExec: (g_struct: CosmosAuthzMsgExec) => [grantee?: CwAccountAddr, msgs?: JsonAny<string>[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_EXEC = "/cosmos.authz.v1beta1.MsgExec";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgExec` - attempts to execute the provided messages using authorizations granted to the grantee. Each message should have only one signer corresponding to the granter of the authorization.
 */
export type CosmosAuthzMsgExec = {
    grantee?: CwAccountAddr | undefined;
    msgs?: JsonAny<string>[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzMsgExecResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: results -
 */
export declare const destructCosmosAuthzMsgExecResponse: (g_struct: CosmosAuthzMsgExecResponse) => [results?: Uint8Array[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_EXEC_RESPONSE = "/cosmos.authz.v1beta1.MsgExecResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgExecResponse` - defines the Msg/MsgExecResponse response type.
 */
export type CosmosAuthzMsgExecResponse = {
    results?: CwBase64[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzMsgRevoke} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: msg_type_url -
 */
export declare const destructCosmosAuthzMsgRevoke: (g_struct: CosmosAuthzMsgRevoke) => [granter?: CwAccountAddr, grantee?: CwAccountAddr, msg_type_url?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_REVOKE = "/cosmos.authz.v1beta1.MsgRevoke";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgRevoke` - revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee.
 */
export type CosmosAuthzMsgRevoke = {
    granter?: CwAccountAddr | undefined;
    grantee?: CwAccountAddr | undefined;
    msg_type_url?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzMsgRevokeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAuthzMsgRevokeResponse: (g_struct: CosmosAuthzMsgRevokeResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_MSG_REVOKE_RESPONSE = "/cosmos.authz.v1beta1.MsgRevokeResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.MsgRevokeResponse` - defines the Msg/MsgRevokeResponse response type.
 */
export type CosmosAuthzMsgRevokeResponse = {};
