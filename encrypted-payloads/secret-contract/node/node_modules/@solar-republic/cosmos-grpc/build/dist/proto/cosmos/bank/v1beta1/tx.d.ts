import type { WeakAccountAddr, SlimCoin, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBankInput, DecodedCosmosBankInput, CosmosBankOutput, DecodedCosmosBankOutput, CosmosBankParams, DecodedCosmosBankParams, CosmosBankSendEnabled, DecodedCosmosBankSendEnabled } from './bank.js';
import type { CosmosBaseCoin } from '../../base/v1beta1/coin.js';
export type EncodedCosmosBankMsgSend = Encoded<'/cosmos.bank.v1beta1.MsgSend'>;
export type EncodedCosmosBankMsgSendResponse = Encoded<'/cosmos.bank.v1beta1.MsgSendResponse'>;
export type EncodedCosmosBankMsgMultiSend = Encoded<'/cosmos.bank.v1beta1.MsgMultiSend'>;
export type EncodedCosmosBankMsgMultiSendResponse = Encoded<'/cosmos.bank.v1beta1.MsgMultiSendResponse'>;
export type EncodedCosmosBankMsgUpdateParams = Encoded<'/cosmos.bank.v1beta1.MsgUpdateParams'>;
export type EncodedCosmosBankMsgUpdateParamsResponse = Encoded<'/cosmos.bank.v1beta1.MsgUpdateParamsResponse'>;
export type EncodedCosmosBankMsgSetSendEnabled = Encoded<'/cosmos.bank.v1beta1.MsgSetSendEnabled'>;
export type EncodedCosmosBankMsgSetSendEnabledResponse = Encoded<'/cosmos.bank.v1beta1.MsgSetSendEnabledResponse'>;
export type EncodedCosmosBankMsgBurn = Encoded<'/cosmos.bank.v1beta1.MsgBurn'>;
export type EncodedCosmosBankMsgBurnResponse = Encoded<'/cosmos.bank.v1beta1.MsgBurnResponse'>;
/**
 * Encodes a `MsgSend` protobuf message: represents a message to send coins from one account to another.
 * @param sa_from - `from_address`:
 * @param sa_to - `to_address`:
 * @param a_amounts - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgSend: (sa_from?: Opt<WeakAccountAddr>, sa_to?: Opt<WeakAccountAddr>, a_amounts?: Opt<SlimCoin[]>) => EncodedCosmosBankMsgSend;
/**
 * Encodes a `MsgSendResponse` protobuf message: defines the Msg/Send response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgSendResponse: () => EncodedCosmosBankMsgSendResponse;
/**
 * Encodes a `MsgMultiSend` protobuf message: represents an arbitrary multi-in, multi-out send message.
 * @param a_inputs - `inputs`: Inputs, despite being `repeated`, only allows one sender input. This is checked in MsgMultiSend's ValidateBasic.
 * @param a_outputs - `outputs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgMultiSend: (a_inputs?: Opt<Encoded<'/cosmos.bank.v1beta1.Input'>[]>, a_outputs?: Opt<Encoded<'/cosmos.bank.v1beta1.Output'>[]>) => EncodedCosmosBankMsgMultiSend;
/**
 * Encodes a `MsgMultiSendResponse` protobuf message: defines the Msg/MultiSend response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgMultiSendResponse: () => EncodedCosmosBankMsgMultiSendResponse;
/**
 * Encodes a `MsgUpdateParams` protobuf message: the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param g_params - `params`: defines the x/bank parameters to update. NOTE: All parameters must be supplied.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgUpdateParams: (s_authority?: Opt<string>, atu8_params?: Opt<Encoded<'/cosmos.bank.v1beta1.Params'>>) => EncodedCosmosBankMsgUpdateParams;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgUpdateParamsResponse: () => EncodedCosmosBankMsgUpdateParamsResponse;
/**
 * Encodes a `MsgSetSendEnabled` protobuf message: the Msg/SetSendEnabled request type. Only entries to add/update/delete need to be included. Existing SendEnabled entries that are not included in this message are left unchanged. Since: cosmos-sdk 0.47
 * @param s_authority - `authority`: the address that controls the module.
 * @param a_send_enableds - `send_enabled`: the list of entries to add or update.
 * @param a_use_default_fors - `use_default_for`: a list of denoms that should use the params.default_send_enabled value. Denoms listed here will have their SendEnabled entries deleted. If a denom is included that doesn't have a SendEnabled entry, it will be ignored.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgSetSendEnabled: (s_authority?: Opt<string>, a_send_enableds?: Opt<Encoded<'/cosmos.bank.v1beta1.SendEnabled'>[]>, a_use_default_fors?: Opt<string[]>) => EncodedCosmosBankMsgSetSendEnabled;
/**
 * Encodes a `MsgSetSendEnabledResponse` protobuf message: defines the Msg/SetSendEnabled response type. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgSetSendEnabledResponse: () => EncodedCosmosBankMsgSetSendEnabledResponse;
/**
 * Encodes a `MsgBurn` protobuf message: defines a message for burning coins. Since: cosmos-sdk 0.51
 * @param sa_from - `from_address`:
 * @param a_amounts - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgBurn: (sa_from?: Opt<WeakAccountAddr>, a_amounts?: Opt<SlimCoin[]>) => EncodedCosmosBankMsgBurn;
/**
 * Encodes a `MsgBurnResponse` protobuf message: defines the Msg/Burn response type. Since: cosmos-sdk 0.51
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankMsgBurnResponse: () => EncodedCosmosBankMsgBurnResponse;
/**
 * A decoded protobuf Send message
 *
 * Tuple where:
 *   - 0: from_address -
 *   - 1: to_address -
 *   - 2: amount -
 */
export type DecodedCosmosBankMsgSend = [
    sa_from?: CwAccountAddr,
    sa_to?: CwAccountAddr,
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf Send message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgSend}
 */
export declare const decodeCosmosBankMsgSend: (atu8_payload: Uint8Array) => DecodedCosmosBankMsgSend;
/**
 * A decoded protobuf Send message
 *
 * Tuple where:
 */
export type DecodedCosmosBankMsgSendResponse = [];
/**
 * Decodes a protobuf Send message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgSendResponse}
 */
export declare const decodeCosmosBankMsgSendResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf MultiSend message
 *
 * Tuple where:
 *   - 0: inputs - Inputs, despite being `repeated`, only allows one sender input. This is checked in MsgMultiSend's ValidateBasic.
 *   - 1: outputs -
 */
export type DecodedCosmosBankMsgMultiSend = [
    a_inputs?: DecodedCosmosBankInput[],
    a_outputs?: DecodedCosmosBankOutput[]
];
/**
 * Decodes a protobuf MultiSend message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgMultiSend}
 */
export declare const decodeCosmosBankMsgMultiSend: (atu8_payload: Uint8Array) => DecodedCosmosBankMsgMultiSend;
/**
 * A decoded protobuf MultiSend message
 *
 * Tuple where:
 */
export type DecodedCosmosBankMsgMultiSendResponse = [];
/**
 * Decodes a protobuf MultiSend message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgMultiSendResponse}
 */
export declare const decodeCosmosBankMsgMultiSendResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/bank parameters to update. NOTE: All parameters must be supplied.
 */
export type DecodedCosmosBankMsgUpdateParams = [
    s_authority?: string,
    a_params?: DecodedCosmosBankParams
];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgUpdateParams}
 */
export declare const decodeCosmosBankMsgUpdateParams: (atu8_payload: Uint8Array) => DecodedCosmosBankMsgUpdateParams;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 */
export type DecodedCosmosBankMsgUpdateParamsResponse = [];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgUpdateParamsResponse}
 */
export declare const decodeCosmosBankMsgUpdateParamsResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SetSendEnabled message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module.
 *   - 1: send_enabled - the list of entries to add or update.
 *   - 2: use_default_for - a list of denoms that should use the params.default_send_enabled value. Denoms listed here will have their SendEnabled entries deleted. If a denom is included that doesn't have a SendEnabled entry, it will be ignored.
 */
export type DecodedCosmosBankMsgSetSendEnabled = [
    s_authority?: string,
    a_send_enabled?: DecodedCosmosBankSendEnabled[],
    a_use_default_fors?: string[]
];
/**
 * Decodes a protobuf SetSendEnabled message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgSetSendEnabled}
 */
export declare const decodeCosmosBankMsgSetSendEnabled: (atu8_payload: Uint8Array) => DecodedCosmosBankMsgSetSendEnabled;
/**
 * A decoded protobuf SetSendEnabled message
 *
 * Tuple where:
 */
export type DecodedCosmosBankMsgSetSendEnabledResponse = [];
/**
 * Decodes a protobuf SetSendEnabled message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgSetSendEnabledResponse}
 */
export declare const decodeCosmosBankMsgSetSendEnabledResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Burn message
 *
 * Tuple where:
 *   - 0: from_address -
 *   - 1: amount -
 */
export type DecodedCosmosBankMsgBurn = [
    sa_from?: CwAccountAddr,
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf Burn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgBurn}
 */
export declare const decodeCosmosBankMsgBurn: (atu8_payload: Uint8Array) => DecodedCosmosBankMsgBurn;
/**
 * A decoded protobuf Burn message
 *
 * Tuple where:
 */
export type DecodedCosmosBankMsgBurnResponse = [];
/**
 * Decodes a protobuf Burn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankMsgBurnResponse}
 */
export declare const decodeCosmosBankMsgBurnResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link CosmosBankMsgSend} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: from_address -
 *   - 1: to_address -
 *   - 2: amount -
 */
export declare const destructCosmosBankMsgSend: (g_struct: CosmosBankMsgSend) => [from_address?: CwAccountAddr, to_address?: CwAccountAddr, amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_SEND = "/cosmos.bank.v1beta1.MsgSend";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgSend` - represents a message to send coins from one account to another.
 */
export type CosmosBankMsgSend = {
    from_address?: CwAccountAddr | undefined;
    to_address?: CwAccountAddr | undefined;
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankMsgSendResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankMsgSendResponse: (g_struct: CosmosBankMsgSendResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_SEND_RESPONSE = "/cosmos.bank.v1beta1.MsgSendResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgSendResponse` - defines the Msg/Send response type.
 */
export type CosmosBankMsgSendResponse = {};
/**
 * Destructures the fields of a {@link CosmosBankMsgMultiSend} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inputs - Inputs, despite being `repeated`, only allows one sender input. This is checked in MsgMultiSend's ValidateBasic.
 *   - 1: outputs -
 */
export declare const destructCosmosBankMsgMultiSend: (g_struct: CosmosBankMsgMultiSend) => [inputs?: CosmosBankInput[], outputs?: CosmosBankOutput[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_MULTI_SEND = "/cosmos.bank.v1beta1.MsgMultiSend";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgMultiSend` - represents an arbitrary multi-in, multi-out send message.
 */
export type CosmosBankMsgMultiSend = {
    inputs?: CosmosBankInput[] | undefined;
    outputs?: CosmosBankOutput[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankMsgMultiSendResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankMsgMultiSendResponse: (g_struct: CosmosBankMsgMultiSendResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_MULTI_SEND_RESPONSE = "/cosmos.bank.v1beta1.MsgMultiSendResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgMultiSendResponse` - defines the Msg/MultiSend response type.
 */
export type CosmosBankMsgMultiSendResponse = {};
/**
 * Destructures the fields of a {@link CosmosBankMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/bank parameters to update. NOTE: All parameters must be supplied.
 */
export declare const destructCosmosBankMsgUpdateParams: (g_struct: CosmosBankMsgUpdateParams) => [authority?: string, params?: CosmosBankParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_UPDATE_PARAMS = "/cosmos.bank.v1beta1.MsgUpdateParams";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export type CosmosBankMsgUpdateParams = {
    authority?: string | undefined;
    params?: CosmosBankParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankMsgUpdateParamsResponse: (g_struct: CosmosBankMsgUpdateParamsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_UPDATE_PARAMS_RESPONSE = "/cosmos.bank.v1beta1.MsgUpdateParamsResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export type CosmosBankMsgUpdateParamsResponse = {};
/**
 * Destructures the fields of a {@link CosmosBankMsgSetSendEnabled} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module.
 *   - 1: send_enabled - the list of entries to add or update.
 *   - 2: use_default_for - a list of denoms that should use the params.default_send_enabled value. Denoms listed here will have their SendEnabled entries deleted. If a denom is included that doesn't have a SendEnabled entry, it will be ignored.
 */
export declare const destructCosmosBankMsgSetSendEnabled: (g_struct: CosmosBankMsgSetSendEnabled) => [authority?: string, send_enabled?: CosmosBankSendEnabled[], use_default_for?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_SET_SEND_ENABLED = "/cosmos.bank.v1beta1.MsgSetSendEnabled";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgSetSendEnabled` - the Msg/SetSendEnabled request type. Only entries to add/update/delete need to be included. Existing SendEnabled entries that are not included in this message are left unchanged. Since: cosmos-sdk 0.47
 */
export type CosmosBankMsgSetSendEnabled = {
    authority?: string | undefined;
    send_enabled?: CosmosBankSendEnabled[] | undefined;
    use_default_for?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankMsgSetSendEnabledResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankMsgSetSendEnabledResponse: (g_struct: CosmosBankMsgSetSendEnabledResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_SET_SEND_ENABLED_RESPONSE = "/cosmos.bank.v1beta1.MsgSetSendEnabledResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgSetSendEnabledResponse` - defines the Msg/SetSendEnabled response type. Since: cosmos-sdk 0.47
 */
export type CosmosBankMsgSetSendEnabledResponse = {};
/**
 * Destructures the fields of a {@link CosmosBankMsgBurn} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: from_address -
 *   - 1: amount -
 */
export declare const destructCosmosBankMsgBurn: (g_struct: CosmosBankMsgBurn) => [from_address?: CwAccountAddr, amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_BURN = "/cosmos.bank.v1beta1.MsgBurn";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgBurn` - defines a message for burning coins. Since: cosmos-sdk 0.51
 */
export type CosmosBankMsgBurn = {
    from_address?: CwAccountAddr | undefined;
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankMsgBurnResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankMsgBurnResponse: (g_struct: CosmosBankMsgBurnResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_MSG_BURN_RESPONSE = "/cosmos.bank.v1beta1.MsgBurnResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.MsgBurnResponse` - defines the Msg/Burn response type. Since: cosmos-sdk 0.51
 */
export type CosmosBankMsgBurnResponse = {};
