import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedCosmosCircuitModuleModule = Encoded<'/cosmos.circuit.module.v1.Module'>;
/**
 * Encodes a `Module` protobuf message: the config object of the circuit module.
 * @param s_authority - `authority`: defines the custom module authority. If not set, defaults to the governance module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitModuleModule: (s_authority?: Opt<string>) => EncodedCosmosCircuitModuleModule;
/**
 * A decoded protobuf Module message
 *
 * Alias for: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export type DecodedCosmosCircuitModuleModule = [
    s_authority?: string
];
/**
 * Decodes a protobuf Module message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitModuleModule}
 */
export declare const decodeCosmosCircuitModuleModule: (atu8_payload: Uint8Array) => DecodedCosmosCircuitModuleModule;
/**
 * Destructures the fields of a {@link CosmosCircuitModuleModule} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export declare const destructCosmosCircuitModuleModule: (g_struct: CosmosCircuitModuleModule) => [authority?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_MODULE_MODULE = "/cosmos.circuit.module.v1.Module";
/**
 * JSON serialization of `cosmos.circuit.module.v1.Module` - the config object of the circuit module.
 */
export type CosmosCircuitModuleModule = {
    authority?: string | undefined;
};
