/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosCircuitPermissions, DecodedCosmosCircuitPermissions, CosmosCircuitGenesisAccountPermissions, DecodedCosmosCircuitGenesisAccountPermissions } from './types.js';
export type EncodedCosmosCircuitQueryAccountRequest = Encoded<'/cosmos.circuit.v1.QueryAccountRequest'>;
export type EncodedCosmosCircuitAccountResponse = Encoded<'/cosmos.circuit.v1.AccountResponse'>;
export type EncodedCosmosCircuitQueryAccountsRequest = Encoded<'/cosmos.circuit.v1.QueryAccountsRequest'>;
export type EncodedCosmosCircuitAccountsResponse = Encoded<'/cosmos.circuit.v1.AccountsResponse'>;
export type EncodedCosmosCircuitQueryDisabledListRequest = Encoded<'/cosmos.circuit.v1.QueryDisabledListRequest'>;
export type EncodedCosmosCircuitDisabledListResponse = Encoded<'/cosmos.circuit.v1.DisabledListResponse'>;
/**
 * Returns account permissions.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @returns a tuple where:
 *   - 0: permission - the 'permission' response property
 */
export declare const queryCosmosCircuitAccount: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosCircuitAccountResponse>>;
/**
 * Account returns account permissions.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 *   - 1: pagination - the 'accounts' response property
 */
export declare const queryCosmosCircuitAccounts: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosCircuitAccountsResponse>>;
/**
 * Returns a list of disabled message urls
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: disabled_list - the 'disabled_list' response property
 */
export declare const queryCosmosCircuitDisabledList: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosCircuitDisabledListResponse>>;
/**
 * Encodes a `QueryAccountRequest` protobuf message: the request type for the Query/Account RPC method.
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitQueryAccountRequest: (sa_address?: Opt<WeakAccountAddr>) => EncodedCosmosCircuitQueryAccountRequest;
/**
 * Encodes a `AccountResponse` protobuf message: the response type for the Query/Account RPC method.
 * @param g_permission - `permission`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitAccountResponse: (atu8_permission?: Opt<Encoded<'/cosmos.circuit.v1.Permissions'>>) => EncodedCosmosCircuitAccountResponse;
/**
 * Encodes a `QueryAccountsRequest` protobuf message: the request type for the Query/Accounts RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitQueryAccountsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosCircuitQueryAccountsRequest;
/**
 * Encodes a `AccountsResponse` protobuf message: the response type for the Query/Accounts RPC method.
 * @param a_accounts - `accounts`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitAccountsResponse: (a_accounts?: Opt<Encoded<'/cosmos.circuit.v1.GenesisAccountPermissions'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosCircuitAccountsResponse;
/**
 * Encodes a `QueryDisabledListRequest` protobuf message: QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitQueryDisabledListRequest: () => EncodedCosmosCircuitQueryDisabledListRequest;
/**
 * Encodes a `DisabledListResponse` protobuf message: the response type for the Query/DisabledList RPC method.
 * @param a_disabled_lists - `disabled_list`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCircuitDisabledListResponse: (a_disabled_lists?: Opt<string[]>) => EncodedCosmosCircuitDisabledListResponse;
/**
 * A decoded protobuf QueryAccountRequest message
 *
 * Alias for: address -
 */
export type DecodedCosmosCircuitQueryAccountRequest = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryAccountRequest}
 */
export declare const decodeCosmosCircuitQueryAccountRequest: (atu8_payload: Uint8Array) => DecodedCosmosCircuitQueryAccountRequest;
/**
 * A decoded protobuf Account message
 *
 * Alias for: permission -
 */
export type DecodedCosmosCircuitAccountResponse = [
    a_permission?: DecodedCosmosCircuitPermissions
];
/**
 * Decodes a protobuf Account message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitAccountResponse}
 */
export declare const decodeCosmosCircuitAccountResponse: (atu8_payload: Uint8Array) => DecodedCosmosCircuitAccountResponse;
/**
 * A decoded protobuf QueryAccountsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosCircuitQueryAccountsRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryAccountsRequest}
 */
export declare const decodeCosmosCircuitQueryAccountsRequest: (atu8_payload: Uint8Array) => DecodedCosmosCircuitQueryAccountsRequest;
/**
 * A decoded protobuf Accounts message
 *
 * Tuple where:
 *   - 0: accounts -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosCircuitAccountsResponse = [
    a_accounts?: DecodedCosmosCircuitGenesisAccountPermissions[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf Accounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitAccountsResponse}
 */
export declare const decodeCosmosCircuitAccountsResponse: (atu8_payload: Uint8Array) => DecodedCosmosCircuitAccountsResponse;
/**
 * A decoded protobuf QueryDisabledListRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosCircuitQueryDisabledListRequest = [];
/**
 * Decodes a protobuf QueryDisabledListRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryDisabledListRequest}
 */
export declare const decodeCosmosCircuitQueryDisabledListRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf DisabledList message
 *
 * Alias for: disabled_list -
 */
export type DecodedCosmosCircuitDisabledListResponse = [
    a_disabled_lists?: string[]
];
/**
 * Decodes a protobuf DisabledList message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitDisabledListResponse}
 */
export declare const decodeCosmosCircuitDisabledListResponse: (atu8_payload: Uint8Array) => DecodedCosmosCircuitDisabledListResponse;
/**
 * Destructures the fields of a {@link CosmosCircuitQueryAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export declare const destructCosmosCircuitQueryAccountRequest: (g_struct: CosmosCircuitQueryAccountRequest) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_ACCOUNT_REQUEST = "/cosmos.circuit.v1.QueryAccountRequest";
/**
 * JSON serialization of `cosmos.circuit.v1.QueryAccountRequest` - the request type for the Query/Account RPC method.
 */
export type CosmosCircuitQueryAccountRequest = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosCircuitAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: permission -
 */
export declare const destructCosmosCircuitAccountResponse: (g_struct: CosmosCircuitAccountResponse) => [permission?: CosmosCircuitPermissions];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_ACCOUNT_RESPONSE = "/cosmos.circuit.v1.AccountResponse";
/**
 * JSON serialization of `cosmos.circuit.v1.AccountResponse` - the response type for the Query/Account RPC method.
 */
export type CosmosCircuitAccountResponse = {
    permission?: CosmosCircuitPermissions | undefined;
};
/**
 * Destructures the fields of a {@link CosmosCircuitQueryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosCircuitQueryAccountsRequest: (g_struct: CosmosCircuitQueryAccountsRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_ACCOUNTS_REQUEST = "/cosmos.circuit.v1.QueryAccountsRequest";
/**
 * JSON serialization of `cosmos.circuit.v1.QueryAccountsRequest` - the request type for the Query/Accounts RPC method.
 */
export type CosmosCircuitQueryAccountsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosCircuitAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosCircuitAccountsResponse: (g_struct: CosmosCircuitAccountsResponse) => [accounts?: CosmosCircuitGenesisAccountPermissions[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_ACCOUNTS_RESPONSE = "/cosmos.circuit.v1.AccountsResponse";
/**
 * JSON serialization of `cosmos.circuit.v1.AccountsResponse` - the response type for the Query/Accounts RPC method.
 */
export type CosmosCircuitAccountsResponse = {
    accounts?: CosmosCircuitGenesisAccountPermissions[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosCircuitQueryDisabledListRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosCircuitQueryDisabledListRequest: (g_struct: CosmosCircuitQueryDisabledListRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_DISABLED_LIST_REQUEST = "/cosmos.circuit.v1.QueryDisabledListRequest";
/**
 * JSON serialization of `cosmos.circuit.v1.QueryDisabledListRequest` - QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 */
export type CosmosCircuitQueryDisabledListRequest = {};
/**
 * Destructures the fields of a {@link CosmosCircuitDisabledListResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: disabled_list -
 */
export declare const destructCosmosCircuitDisabledListResponse: (g_struct: CosmosCircuitDisabledListResponse) => [disabled_list?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_DISABLED_LIST_RESPONSE = "/cosmos.circuit.v1.DisabledListResponse";
/**
 * JSON serialization of `cosmos.circuit.v1.DisabledListResponse` - the response type for the Query/DisabledList RPC method.
 */
export type CosmosCircuitDisabledListResponse = {
    disabled_list?: string[] | undefined;
};
