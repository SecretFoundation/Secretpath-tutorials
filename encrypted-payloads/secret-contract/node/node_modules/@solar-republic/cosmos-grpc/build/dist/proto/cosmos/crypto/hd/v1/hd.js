/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
/**
 * Encodes a `BIP44Params` protobuf message: used as path field in ledger item in Record.
 * @param n_purpose - `purpose`: a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
 * @param n_coin_type - `coin_type`: a constant that improves privacy
 * @param n_account - `account`: splits the key space into independent user identities
 * @param b_change - `change`: a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal chain.
 * @param n_address_index - `address_index`: used as child index in BIP32 derivation
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoHdBIP44Params = (n_purpose, n_coin_type, n_account, b_change, n_address_index) => Protobuf() // ...
    .v(n_purpose) // uint32 purpose = 1
    .v(n_coin_type) // uint32 coin_type = 2
    .v(n_account) // uint32 account = 3
    .v(b_change) // boolean change = 4
    .v(n_address_index) // uint32 address_index = 5
    .o;
/**
 * Decodes a protobuf BIP44Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoHdBIP44Params}
 */
export const decodeCosmosCryptoHdBIP44Params = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 1, 1]);
/**
 * Destructures the fields of a {@link CosmosCryptoHdBIP44Params} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: purpose - a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
 *   - 1: coin_type - a constant that improves privacy
 *   - 2: account - splits the key space into independent user identities
 *   - 3: change - a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal chain.
 *   - 4: address_index - used as child index in BIP32 derivation
 */
export const destructCosmosCryptoHdBIP44Params = (g_struct) => [g_struct.purpose, g_struct.coin_type, g_struct.account, g_struct.change, g_struct.address_index];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_HD_B_I_P44_PARAMS = '/cosmos.crypto.hd.v1.BIP44Params';
//# sourceMappingURL=hd.js.map