/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeGoogleProtobufAny } from '../../../google/protobuf/any.js';
/**
 * Encodes a `LegacyAminoPubKey` protobuf message: specifies a public key type which nests multiple public keys and a threshold, it uses legacy amino address rules.
 * @param n_threshold - `threshold`:
 * @param a_public_keys - `public_keys`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoMultisigLegacyAminoPubKey = (n_threshold, a_public_keys) => Protobuf() // ...
    .v(n_threshold) // uint32 threshold = 1
    .B(a_public_keys) // Any[] public_keys = 2
    .o;
/**
 * Decodes a protobuf LegacyAminoPubKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoMultisigLegacyAminoPubKey}
 */
export const decodeCosmosCryptoMultisigLegacyAminoPubKey = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0], [0, decodeGoogleProtobufAny]);
/**
 * Destructures the fields of a {@link CosmosCryptoMultisigLegacyAminoPubKey} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: threshold -
 *   - 1: public_keys -
 */
export const destructCosmosCryptoMultisigLegacyAminoPubKey = (g_struct) => [g_struct.threshold, g_struct.public_keys];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_MULTISIG_LEGACY_AMINO_PUB_KEY = '/cosmos.crypto.multisig.LegacyAminoPubKey';
//# sourceMappingURL=keys.js.map