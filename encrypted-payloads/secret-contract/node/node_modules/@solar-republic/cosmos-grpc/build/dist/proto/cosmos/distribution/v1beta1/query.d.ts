/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, WeakValidatorAddr, CwUint64, CwAccountAddr, CwValidatorAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosBaseDecCoin, DecodedCosmosBaseDecCoin } from '../../base/v1beta1/coin.js';
import type { CosmosDistributionParams, DecodedCosmosDistributionParams, CosmosDistributionValidatorOutstandingRewards, DecodedCosmosDistributionValidatorOutstandingRewards, CosmosDistributionValidatorAccumulatedCommission, DecodedCosmosDistributionValidatorAccumulatedCommission, CosmosDistributionValidatorSlashEvent, DecodedCosmosDistributionValidatorSlashEvent, CosmosDistributionDelegationDelegatorReward, DecodedCosmosDistributionDelegationDelegatorReward } from './distribution.js';
export type EncodedCosmosDistributionQueryParamsRequest = Encoded<'/cosmos.distribution.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosDistributionQueryParamsResponse = Encoded<'/cosmos.distribution.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosDistributionQueryValidatorDistributionInfoRequest = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest'>;
export type EncodedCosmosDistributionQueryValidatorDistributionInfoResponse = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse'>;
export type EncodedCosmosDistributionQueryValidatorOutstandingRewardsRequest = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest'>;
export type EncodedCosmosDistributionQueryValidatorOutstandingRewardsResponse = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse'>;
export type EncodedCosmosDistributionQueryValidatorCommissionRequest = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorCommissionRequest'>;
export type EncodedCosmosDistributionQueryValidatorCommissionResponse = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse'>;
export type EncodedCosmosDistributionQueryValidatorSlashesRequest = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorSlashesRequest'>;
export type EncodedCosmosDistributionQueryValidatorSlashesResponse = Encoded<'/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse'>;
export type EncodedCosmosDistributionQueryDelegationRewardsRequest = Encoded<'/cosmos.distribution.v1beta1.QueryDelegationRewardsRequest'>;
export type EncodedCosmosDistributionQueryDelegationRewardsResponse = Encoded<'/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse'>;
export type EncodedCosmosDistributionQueryDelegationTotalRewardsRequest = Encoded<'/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest'>;
export type EncodedCosmosDistributionQueryDelegationTotalRewardsResponse = Encoded<'/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse'>;
export type EncodedCosmosDistributionQueryDelegatorValidatorsRequest = Encoded<'/cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest'>;
export type EncodedCosmosDistributionQueryDelegatorValidatorsResponse = Encoded<'/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse'>;
export type EncodedCosmosDistributionQueryDelegatorWithdrawAddressRequest = Encoded<'/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest'>;
export type EncodedCosmosDistributionQueryDelegatorWithdrawAddressResponse = Encoded<'/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse'>;
export type EncodedCosmosDistributionQueryCommunityPoolRequest = Encoded<'/cosmos.distribution.v1beta1.QueryCommunityPoolRequest'>;
export type EncodedCosmosDistributionQueryCommunityPoolResponse = Encoded<'/cosmos.distribution.v1beta1.QueryCommunityPoolResponse'>;
/**
 * Queries params of the distribution module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryCosmosDistributionParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryParamsResponse>>;
/**
 * Queries validator commission and self-delegation rewards for validator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator - defines the validator address to query for.
 * @returns a tuple where:
 *   - 0: operator_address - defines the validator operator address.
 *   - 1: self_bond_rewards - defines the validator operator address.
 *   - 2: commission - defines the validator operator address.
 */
export declare const queryCosmosDistributionValidatorDistributionInfo: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryValidatorDistributionInfoResponse>>;
/**
 * Queries rewards of a validator address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator - defines the validator address to query for.
 * @returns a tuple where:
 *   - 0: rewards - the 'rewards' response property
 */
export declare const queryCosmosDistributionValidatorOutstandingRewards: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryValidatorOutstandingRewardsResponse>>;
/**
 * Queries accumulated commission for a validator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator - defines the validator address to query for.
 * @returns a tuple where:
 *   - 0: commission - defines the commission the validator received.
 */
export declare const queryCosmosDistributionValidatorCommission: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryValidatorCommissionResponse>>;
/**
 * Queries slash events of a validator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator - defines the validator address to query for.
 * @param sg_starting_height - defines the optional starting height to query the slashes.
 * @param sg_ending_height - starting_height defines the optional ending height to query the slashes.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: slashes - defines the slashes the validator received.
 *   - 1: pagination - defines the slashes the validator received.
 */
export declare const queryCosmosDistributionValidatorSlashes: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>, sg_starting_height?: Opt<`${bigint}`>, sg_ending_height?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryValidatorSlashesResponse>>;
/**
 * Queries the total rewards accrued by a delegation.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator - defines the delegator address to query for.
 * @param sa_validator - defines the validator address to query for.
 * @returns a tuple where:
 *   - 0: rewards - defines the rewards accrued by a delegation.
 */
export declare const queryCosmosDistributionDelegationRewards: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>, sa_validator?: Opt<`${string}valoper1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryDelegationRewardsResponse>>;
/**
 * Queries the total rewards accrued by each validator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator - defines the delegator address to query for.
 * @returns a tuple where:
 *   - 0: rewards - defines all the rewards accrued by a delegator.
 *   - 1: total - defines all the rewards accrued by a delegator.
 */
export declare const queryCosmosDistributionDelegationTotalRewards: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryDelegationTotalRewardsResponse>>;
/**
 * Queries the validators of a delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator - defines the delegator address to query for.
 * @returns a tuple where:
 *   - 0: validators - defines the validators a delegator is delegating for.
 */
export declare const queryCosmosDistributionDelegatorValidators: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryDelegatorValidatorsResponse>>;
/**
 * Queries withdraw address of a delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator - defines the delegator address to query for.
 * @returns a tuple where:
 *   - 0: withdraw_address - defines the delegator address to query for.
 */
export declare const queryCosmosDistributionDelegatorWithdrawAddress: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryDelegatorWithdrawAddressResponse>>;
/**
 * Queries the community pool coins. Deprecated: Prefer to use x/protocolpool module's CommunityPool rpc method. Since: cosmos-sdk 0.50
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: pool - defines community pool's coins.
 */
export declare const queryCosmosDistributionCommunityPool: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosDistributionQueryCommunityPoolResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryParamsRequest: () => EncodedCosmosDistributionQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryParamsResponse: (atu8_params?: Opt<Encoded<'/cosmos.distribution.v1beta1.Params'>>) => EncodedCosmosDistributionQueryParamsResponse;
/**
 * Encodes a `QueryValidatorDistributionInfoRequest` protobuf message: the request type for the Query/ValidatorDistributionInfo RPC method.
 * @param sa_validator - `validator_address`: defines the validator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorDistributionInfoRequest: (sa_validator?: Opt<WeakValidatorAddr>) => EncodedCosmosDistributionQueryValidatorDistributionInfoRequest;
/**
 * Encodes a `QueryValidatorDistributionInfoResponse` protobuf message: the response type for the Query/ValidatorDistributionInfo RPC method.
 * @param sa_operator - `operator_address`: defines the validator operator address.
 * @param a_self_bond_rewards - `self_bond_rewards`: defines the self delegations rewards.
 * @param a_commissions - `commission`: defines the commission the validator received.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorDistributionInfoResponse: (sa_operator?: Opt<WeakAccountAddr>, a_self_bond_rewards?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>, a_commissions?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>) => EncodedCosmosDistributionQueryValidatorDistributionInfoResponse;
/**
 * Encodes a `QueryValidatorOutstandingRewardsRequest` protobuf message: the request type for the Query/ValidatorOutstandingRewards RPC method.
 * @param sa_validator - `validator_address`: defines the validator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorOutstandingRewardsRequest: (sa_validator?: Opt<WeakValidatorAddr>) => EncodedCosmosDistributionQueryValidatorOutstandingRewardsRequest;
/**
 * Encodes a `QueryValidatorOutstandingRewardsResponse` protobuf message: the response type for the Query/ValidatorOutstandingRewards RPC method.
 * @param g_rewards - `rewards`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorOutstandingRewardsResponse: (atu8_rewards?: Opt<Encoded<'/cosmos.distribution.v1beta1.ValidatorOutstandingRewards'>>) => EncodedCosmosDistributionQueryValidatorOutstandingRewardsResponse;
/**
 * Encodes a `QueryValidatorCommissionRequest` protobuf message: the request type for the Query/ValidatorCommission RPC method
 * @param sa_validator - `validator_address`: defines the validator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorCommissionRequest: (sa_validator?: Opt<WeakValidatorAddr>) => EncodedCosmosDistributionQueryValidatorCommissionRequest;
/**
 * Encodes a `QueryValidatorCommissionResponse` protobuf message: the response type for the Query/ValidatorCommission RPC method
 * @param g_commission - `commission`: defines the commission the validator received.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorCommissionResponse: (atu8_commission?: Opt<Encoded<'/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission'>>) => EncodedCosmosDistributionQueryValidatorCommissionResponse;
/**
 * Encodes a `QueryValidatorSlashesRequest` protobuf message: the request type for the Query/ValidatorSlashes RPC method
 * @param sa_validator - `validator_address`: defines the validator address to query for.
 * @param sg_starting_height - `starting_height`: defines the optional starting height to query the slashes.
 * @param sg_ending_height - `ending_height`: starting_height defines the optional ending height to query the slashes.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorSlashesRequest: (sa_validator?: Opt<WeakValidatorAddr>, sg_starting_height?: Opt<WeakUint64Str>, sg_ending_height?: Opt<WeakUint64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosDistributionQueryValidatorSlashesRequest;
/**
 * Encodes a `QueryValidatorSlashesResponse` protobuf message: the response type for the Query/ValidatorSlashes RPC method.
 * @param a_slashes - `slashes`: defines the slashes the validator received.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryValidatorSlashesResponse: (a_slashes?: Opt<Encoded<'/cosmos.distribution.v1beta1.ValidatorSlashEvent'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosDistributionQueryValidatorSlashesResponse;
/**
 * Encodes a `QueryDelegationRewardsRequest` protobuf message: the request type for the Query/DelegationRewards RPC method.
 * @param sa_delegator - `delegator_address`: defines the delegator address to query for.
 * @param sa_validator - `validator_address`: defines the validator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegationRewardsRequest: (sa_delegator?: Opt<WeakAccountAddr>, sa_validator?: Opt<WeakValidatorAddr>) => EncodedCosmosDistributionQueryDelegationRewardsRequest;
/**
 * Encodes a `QueryDelegationRewardsResponse` protobuf message: the response type for the Query/DelegationRewards RPC method.
 * @param a_rewards - `rewards`: defines the rewards accrued by a delegation.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegationRewardsResponse: (a_rewards?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>) => EncodedCosmosDistributionQueryDelegationRewardsResponse;
/**
 * Encodes a `QueryDelegationTotalRewardsRequest` protobuf message: the request type for the Query/DelegationTotalRewards RPC method.
 * @param sa_delegator - `delegator_address`: defines the delegator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegationTotalRewardsRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedCosmosDistributionQueryDelegationTotalRewardsRequest;
/**
 * Encodes a `QueryDelegationTotalRewardsResponse` protobuf message: the response type for the Query/DelegationTotalRewards RPC method.
 * @param a_rewards - `rewards`: defines all the rewards accrued by a delegator.
 * @param a_totals - `total`: defines the sum of all the rewards.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegationTotalRewardsResponse: (a_rewards?: Opt<Encoded<'/cosmos.distribution.v1beta1.DelegationDelegatorReward'>[]>, a_totals?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>) => EncodedCosmosDistributionQueryDelegationTotalRewardsResponse;
/**
 * Encodes a `QueryDelegatorValidatorsRequest` protobuf message: the request type for the Query/DelegatorValidators RPC method.
 * @param sa_delegator - `delegator_address`: defines the delegator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegatorValidatorsRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedCosmosDistributionQueryDelegatorValidatorsRequest;
/**
 * Encodes a `QueryDelegatorValidatorsResponse` protobuf message: the response type for the Query/DelegatorValidators RPC method.
 * @param a_validators - `validators`: defines the validators a delegator is delegating for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegatorValidatorsResponse: (a_validators?: Opt<string[]>) => EncodedCosmosDistributionQueryDelegatorValidatorsResponse;
/**
 * Encodes a `QueryDelegatorWithdrawAddressRequest` protobuf message: the request type for the Query/DelegatorWithdrawAddress RPC method.
 * @param sa_delegator - `delegator_address`: defines the delegator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegatorWithdrawAddressRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedCosmosDistributionQueryDelegatorWithdrawAddressRequest;
/**
 * Encodes a `QueryDelegatorWithdrawAddressResponse` protobuf message: the response type for the Query/DelegatorWithdrawAddress RPC method.
 * @param sa_withdraw - `withdraw_address`: defines the delegator address to query for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryDelegatorWithdrawAddressResponse: (sa_withdraw?: Opt<WeakAccountAddr>) => EncodedCosmosDistributionQueryDelegatorWithdrawAddressResponse;
/**
 * Encodes a `QueryCommunityPoolRequest` protobuf message: the request type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryCommunityPoolRequest: () => EncodedCosmosDistributionQueryCommunityPoolRequest;
/**
 * Encodes a `QueryCommunityPoolResponse` protobuf message: the response type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 * @param a_pools - `pool`: defines community pool's coins.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosDistributionQueryCommunityPoolResponse: (a_pools?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>) => EncodedCosmosDistributionQueryCommunityPoolResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosDistributionQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryParamsRequest}
 */
export declare const decodeCosmosDistributionQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedCosmosDistributionQueryParamsResponse = [
    a_params?: DecodedCosmosDistributionParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryParamsResponse}
 */
export declare const decodeCosmosDistributionQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryParamsResponse;
/**
 * A decoded protobuf QueryValidatorDistributionInfoRequest message
 *
 * Alias for: validator_address - defines the validator address to query for.
 */
export type DecodedCosmosDistributionQueryValidatorDistributionInfoRequest = [
    sa_validator?: CwValidatorAddr
];
/**
 * Decodes a protobuf QueryValidatorDistributionInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorDistributionInfoRequest}
 */
export declare const decodeCosmosDistributionQueryValidatorDistributionInfoRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorDistributionInfoRequest;
/**
 * A decoded protobuf QueryValidatorDistributionInfo message
 *
 * Tuple where:
 *   - 0: operator_address - defines the validator operator address.
 *   - 1: self_bond_rewards - defines the self delegations rewards.
 *   - 2: commission - defines the commission the validator received.
 */
export type DecodedCosmosDistributionQueryValidatorDistributionInfoResponse = [
    sa_operator?: CwAccountAddr,
    a_self_bond_rewards?: DecodedCosmosBaseDecCoin[],
    a_commission?: DecodedCosmosBaseDecCoin[]
];
/**
 * Decodes a protobuf QueryValidatorDistributionInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorDistributionInfoResponse}
 */
export declare const decodeCosmosDistributionQueryValidatorDistributionInfoResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorDistributionInfoResponse;
/**
 * A decoded protobuf QueryValidatorOutstandingRewardsRequest message
 *
 * Alias for: validator_address - defines the validator address to query for.
 */
export type DecodedCosmosDistributionQueryValidatorOutstandingRewardsRequest = [
    sa_validator?: CwValidatorAddr
];
/**
 * Decodes a protobuf QueryValidatorOutstandingRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorOutstandingRewardsRequest}
 */
export declare const decodeCosmosDistributionQueryValidatorOutstandingRewardsRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorOutstandingRewardsRequest;
/**
 * A decoded protobuf QueryValidatorOutstandingRewards message
 *
 * Alias for: rewards -
 */
export type DecodedCosmosDistributionQueryValidatorOutstandingRewardsResponse = [
    a_rewards?: DecodedCosmosDistributionValidatorOutstandingRewards
];
/**
 * Decodes a protobuf QueryValidatorOutstandingRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorOutstandingRewardsResponse}
 */
export declare const decodeCosmosDistributionQueryValidatorOutstandingRewardsResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorOutstandingRewardsResponse;
/**
 * A decoded protobuf QueryValidatorCommissionRequest message
 *
 * Alias for: validator_address - defines the validator address to query for.
 */
export type DecodedCosmosDistributionQueryValidatorCommissionRequest = [
    sa_validator?: CwValidatorAddr
];
/**
 * Decodes a protobuf QueryValidatorCommissionRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorCommissionRequest}
 */
export declare const decodeCosmosDistributionQueryValidatorCommissionRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorCommissionRequest;
/**
 * A decoded protobuf QueryValidatorCommission message
 *
 * Alias for: commission - defines the commission the validator received.
 */
export type DecodedCosmosDistributionQueryValidatorCommissionResponse = [
    a_commission?: DecodedCosmosDistributionValidatorAccumulatedCommission
];
/**
 * Decodes a protobuf QueryValidatorCommission message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorCommissionResponse}
 */
export declare const decodeCosmosDistributionQueryValidatorCommissionResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorCommissionResponse;
/**
 * A decoded protobuf QueryValidatorSlashesRequest message
 *
 * Tuple where:
 *   - 0: validator_address - defines the validator address to query for.
 *   - 1: starting_height - defines the optional starting height to query the slashes.
 *   - 2: ending_height - starting_height defines the optional ending height to query the slashes.
 *   - 3: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosDistributionQueryValidatorSlashesRequest = [
    sa_validator?: CwValidatorAddr,
    sg_starting_height?: CwUint64,
    sg_ending_height?: CwUint64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryValidatorSlashesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorSlashesRequest}
 */
export declare const decodeCosmosDistributionQueryValidatorSlashesRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorSlashesRequest;
/**
 * A decoded protobuf QueryValidatorSlashes message
 *
 * Tuple where:
 *   - 0: slashes - defines the slashes the validator received.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosDistributionQueryValidatorSlashesResponse = [
    a_slashes?: DecodedCosmosDistributionValidatorSlashEvent[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryValidatorSlashes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryValidatorSlashesResponse}
 */
export declare const decodeCosmosDistributionQueryValidatorSlashesResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryValidatorSlashesResponse;
/**
 * A decoded protobuf QueryDelegationRewardsRequest message
 *
 * Tuple where:
 *   - 0: delegator_address - defines the delegator address to query for.
 *   - 1: validator_address - defines the validator address to query for.
 */
export type DecodedCosmosDistributionQueryDelegationRewardsRequest = [
    sa_delegator?: CwAccountAddr,
    sa_validator?: CwValidatorAddr
];
/**
 * Decodes a protobuf QueryDelegationRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegationRewardsRequest}
 */
export declare const decodeCosmosDistributionQueryDelegationRewardsRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegationRewardsRequest;
/**
 * A decoded protobuf QueryDelegationRewards message
 *
 * Alias for: rewards - defines the rewards accrued by a delegation.
 */
export type DecodedCosmosDistributionQueryDelegationRewardsResponse = [
    a_rewards?: DecodedCosmosBaseDecCoin[]
];
/**
 * Decodes a protobuf QueryDelegationRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegationRewardsResponse}
 */
export declare const decodeCosmosDistributionQueryDelegationRewardsResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegationRewardsResponse;
/**
 * A decoded protobuf QueryDelegationTotalRewardsRequest message
 *
 * Alias for: delegator_address - defines the delegator address to query for.
 */
export type DecodedCosmosDistributionQueryDelegationTotalRewardsRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryDelegationTotalRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegationTotalRewardsRequest}
 */
export declare const decodeCosmosDistributionQueryDelegationTotalRewardsRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegationTotalRewardsRequest;
/**
 * A decoded protobuf QueryDelegationTotalRewards message
 *
 * Tuple where:
 *   - 0: rewards - defines all the rewards accrued by a delegator.
 *   - 1: total - defines the sum of all the rewards.
 */
export type DecodedCosmosDistributionQueryDelegationTotalRewardsResponse = [
    a_rewards?: DecodedCosmosDistributionDelegationDelegatorReward[],
    a_total?: DecodedCosmosBaseDecCoin[]
];
/**
 * Decodes a protobuf QueryDelegationTotalRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegationTotalRewardsResponse}
 */
export declare const decodeCosmosDistributionQueryDelegationTotalRewardsResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegationTotalRewardsResponse;
/**
 * A decoded protobuf QueryDelegatorValidatorsRequest message
 *
 * Alias for: delegator_address - defines the delegator address to query for.
 */
export type DecodedCosmosDistributionQueryDelegatorValidatorsRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryDelegatorValidatorsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegatorValidatorsRequest}
 */
export declare const decodeCosmosDistributionQueryDelegatorValidatorsRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegatorValidatorsRequest;
/**
 * A decoded protobuf QueryDelegatorValidators message
 *
 * Alias for: validators - defines the validators a delegator is delegating for.
 */
export type DecodedCosmosDistributionQueryDelegatorValidatorsResponse = [
    a_validators?: string[]
];
/**
 * Decodes a protobuf QueryDelegatorValidators message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegatorValidatorsResponse}
 */
export declare const decodeCosmosDistributionQueryDelegatorValidatorsResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegatorValidatorsResponse;
/**
 * A decoded protobuf QueryDelegatorWithdrawAddressRequest message
 *
 * Alias for: delegator_address - defines the delegator address to query for.
 */
export type DecodedCosmosDistributionQueryDelegatorWithdrawAddressRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryDelegatorWithdrawAddressRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegatorWithdrawAddressRequest}
 */
export declare const decodeCosmosDistributionQueryDelegatorWithdrawAddressRequest: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegatorWithdrawAddressRequest;
/**
 * A decoded protobuf QueryDelegatorWithdrawAddress message
 *
 * Alias for: withdraw_address - defines the delegator address to query for.
 */
export type DecodedCosmosDistributionQueryDelegatorWithdrawAddressResponse = [
    sa_withdraw?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryDelegatorWithdrawAddress message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryDelegatorWithdrawAddressResponse}
 */
export declare const decodeCosmosDistributionQueryDelegatorWithdrawAddressResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryDelegatorWithdrawAddressResponse;
/**
 * A decoded protobuf QueryCommunityPoolRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosDistributionQueryCommunityPoolRequest = [];
/**
 * Decodes a protobuf QueryCommunityPoolRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryCommunityPoolRequest}
 */
export declare const decodeCosmosDistributionQueryCommunityPoolRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryCommunityPool message
 *
 * Alias for: pool - defines community pool's coins.
 */
export type DecodedCosmosDistributionQueryCommunityPoolResponse = [
    a_pool?: DecodedCosmosBaseDecCoin[]
];
/**
 * Decodes a protobuf QueryCommunityPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosDistributionQueryCommunityPoolResponse}
 */
export declare const decodeCosmosDistributionQueryCommunityPoolResponse: (atu8_payload: Uint8Array) => DecodedCosmosDistributionQueryCommunityPoolResponse;
/**
 * Destructures the fields of a {@link CosmosDistributionQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosDistributionQueryParamsRequest: (g_struct: CosmosDistributionQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_PARAMS_REQUEST = "/cosmos.distribution.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type CosmosDistributionQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructCosmosDistributionQueryParamsResponse: (g_struct: CosmosDistributionQueryParamsResponse) => [params?: CosmosDistributionParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_PARAMS_RESPONSE = "/cosmos.distribution.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type CosmosDistributionQueryParamsResponse = {
    params?: CosmosDistributionParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorDistributionInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address - defines the validator address to query for.
 */
export declare const destructCosmosDistributionQueryValidatorDistributionInfoRequest: (g_struct: CosmosDistributionQueryValidatorDistributionInfoRequest) => [validator_address?: CwValidatorAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_DISTRIBUTION_INFO_REQUEST = "/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest` - the request type for the Query/ValidatorDistributionInfo RPC method.
 */
export type CosmosDistributionQueryValidatorDistributionInfoRequest = {
    validator_address?: CwValidatorAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorDistributionInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: operator_address - defines the validator operator address.
 *   - 1: self_bond_rewards - defines the self delegations rewards.
 *   - 2: commission - defines the commission the validator received.
 */
export declare const destructCosmosDistributionQueryValidatorDistributionInfoResponse: (g_struct: CosmosDistributionQueryValidatorDistributionInfoResponse) => [operator_address?: CwAccountAddr, self_bond_rewards?: CosmosBaseDecCoin[], commission?: CosmosBaseDecCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_DISTRIBUTION_INFO_RESPONSE = "/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse` - the response type for the Query/ValidatorDistributionInfo RPC method.
 */
export type CosmosDistributionQueryValidatorDistributionInfoResponse = {
    operator_address?: CwAccountAddr | undefined;
    self_bond_rewards?: CosmosBaseDecCoin[] | undefined;
    commission?: CosmosBaseDecCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorOutstandingRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address - defines the validator address to query for.
 */
export declare const destructCosmosDistributionQueryValidatorOutstandingRewardsRequest: (g_struct: CosmosDistributionQueryValidatorOutstandingRewardsRequest) => [validator_address?: CwValidatorAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_OUTSTANDING_REWARDS_REQUEST = "/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest` - the request type for the Query/ValidatorOutstandingRewards RPC method.
 */
export type CosmosDistributionQueryValidatorOutstandingRewardsRequest = {
    validator_address?: CwValidatorAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorOutstandingRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: rewards -
 */
export declare const destructCosmosDistributionQueryValidatorOutstandingRewardsResponse: (g_struct: CosmosDistributionQueryValidatorOutstandingRewardsResponse) => [rewards?: CosmosDistributionValidatorOutstandingRewards];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_OUTSTANDING_REWARDS_RESPONSE = "/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse` - the response type for the Query/ValidatorOutstandingRewards RPC method.
 */
export type CosmosDistributionQueryValidatorOutstandingRewardsResponse = {
    rewards?: CosmosDistributionValidatorOutstandingRewards | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorCommissionRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address - defines the validator address to query for.
 */
export declare const destructCosmosDistributionQueryValidatorCommissionRequest: (g_struct: CosmosDistributionQueryValidatorCommissionRequest) => [validator_address?: CwValidatorAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_COMMISSION_REQUEST = "/cosmos.distribution.v1beta1.QueryValidatorCommissionRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorCommissionRequest` - the request type for the Query/ValidatorCommission RPC method
 */
export type CosmosDistributionQueryValidatorCommissionRequest = {
    validator_address?: CwValidatorAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorCommissionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: commission - defines the commission the validator received.
 */
export declare const destructCosmosDistributionQueryValidatorCommissionResponse: (g_struct: CosmosDistributionQueryValidatorCommissionResponse) => [commission?: CosmosDistributionValidatorAccumulatedCommission];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_COMMISSION_RESPONSE = "/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorCommissionResponse` - the response type for the Query/ValidatorCommission RPC method
 */
export type CosmosDistributionQueryValidatorCommissionResponse = {
    commission?: CosmosDistributionValidatorAccumulatedCommission | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorSlashesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address - defines the validator address to query for.
 *   - 1: starting_height - defines the optional starting height to query the slashes.
 *   - 2: ending_height - starting_height defines the optional ending height to query the slashes.
 *   - 3: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosDistributionQueryValidatorSlashesRequest: (g_struct: CosmosDistributionQueryValidatorSlashesRequest) => [validator_address?: CwValidatorAddr, starting_height?: CwUint64, ending_height?: CwUint64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_SLASHES_REQUEST = "/cosmos.distribution.v1beta1.QueryValidatorSlashesRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorSlashesRequest` - the request type for the Query/ValidatorSlashes RPC method
 */
export type CosmosDistributionQueryValidatorSlashesRequest = {
    validator_address?: CwValidatorAddr | undefined;
    starting_height?: CwUint64 | undefined;
    ending_height?: CwUint64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryValidatorSlashesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: slashes - defines the slashes the validator received.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosDistributionQueryValidatorSlashesResponse: (g_struct: CosmosDistributionQueryValidatorSlashesResponse) => [slashes?: CosmosDistributionValidatorSlashEvent[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_VALIDATOR_SLASHES_RESPONSE = "/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryValidatorSlashesResponse` - the response type for the Query/ValidatorSlashes RPC method.
 */
export type CosmosDistributionQueryValidatorSlashesResponse = {
    slashes?: CosmosDistributionValidatorSlashEvent[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegationRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address - defines the delegator address to query for.
 *   - 1: validator_address - defines the validator address to query for.
 */
export declare const destructCosmosDistributionQueryDelegationRewardsRequest: (g_struct: CosmosDistributionQueryDelegationRewardsRequest) => [delegator_address?: CwAccountAddr, validator_address?: CwValidatorAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATION_REWARDS_REQUEST = "/cosmos.distribution.v1beta1.QueryDelegationRewardsRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegationRewardsRequest` - the request type for the Query/DelegationRewards RPC method.
 */
export type CosmosDistributionQueryDelegationRewardsRequest = {
    delegator_address?: CwAccountAddr | undefined;
    validator_address?: CwValidatorAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegationRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: rewards - defines the rewards accrued by a delegation.
 */
export declare const destructCosmosDistributionQueryDelegationRewardsResponse: (g_struct: CosmosDistributionQueryDelegationRewardsResponse) => [rewards?: CosmosBaseDecCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATION_REWARDS_RESPONSE = "/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegationRewardsResponse` - the response type for the Query/DelegationRewards RPC method.
 */
export type CosmosDistributionQueryDelegationRewardsResponse = {
    rewards?: CosmosBaseDecCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegationTotalRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address - defines the delegator address to query for.
 */
export declare const destructCosmosDistributionQueryDelegationTotalRewardsRequest: (g_struct: CosmosDistributionQueryDelegationTotalRewardsRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATION_TOTAL_REWARDS_REQUEST = "/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest` - the request type for the Query/DelegationTotalRewards RPC method.
 */
export type CosmosDistributionQueryDelegationTotalRewardsRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegationTotalRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: rewards - defines all the rewards accrued by a delegator.
 *   - 1: total - defines the sum of all the rewards.
 */
export declare const destructCosmosDistributionQueryDelegationTotalRewardsResponse: (g_struct: CosmosDistributionQueryDelegationTotalRewardsResponse) => [rewards?: CosmosDistributionDelegationDelegatorReward[], total?: CosmosBaseDecCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATION_TOTAL_REWARDS_RESPONSE = "/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse` - the response type for the Query/DelegationTotalRewards RPC method.
 */
export type CosmosDistributionQueryDelegationTotalRewardsResponse = {
    rewards?: CosmosDistributionDelegationDelegatorReward[] | undefined;
    total?: CosmosBaseDecCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegatorValidatorsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address - defines the delegator address to query for.
 */
export declare const destructCosmosDistributionQueryDelegatorValidatorsRequest: (g_struct: CosmosDistributionQueryDelegatorValidatorsRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATOR_VALIDATORS_REQUEST = "/cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest` - the request type for the Query/DelegatorValidators RPC method.
 */
export type CosmosDistributionQueryDelegatorValidatorsRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegatorValidatorsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validators - defines the validators a delegator is delegating for.
 */
export declare const destructCosmosDistributionQueryDelegatorValidatorsResponse: (g_struct: CosmosDistributionQueryDelegatorValidatorsResponse) => [validators?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATOR_VALIDATORS_RESPONSE = "/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse` - the response type for the Query/DelegatorValidators RPC method.
 */
export type CosmosDistributionQueryDelegatorValidatorsResponse = {
    validators?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegatorWithdrawAddressRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address - defines the delegator address to query for.
 */
export declare const destructCosmosDistributionQueryDelegatorWithdrawAddressRequest: (g_struct: CosmosDistributionQueryDelegatorWithdrawAddressRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATOR_WITHDRAW_ADDRESS_REQUEST = "/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest` - the request type for the Query/DelegatorWithdrawAddress RPC method.
 */
export type CosmosDistributionQueryDelegatorWithdrawAddressRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryDelegatorWithdrawAddressResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: withdraw_address - defines the delegator address to query for.
 */
export declare const destructCosmosDistributionQueryDelegatorWithdrawAddressResponse: (g_struct: CosmosDistributionQueryDelegatorWithdrawAddressResponse) => [withdraw_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_DELEGATOR_WITHDRAW_ADDRESS_RESPONSE = "/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse` - the response type for the Query/DelegatorWithdrawAddress RPC method.
 */
export type CosmosDistributionQueryDelegatorWithdrawAddressResponse = {
    withdraw_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryCommunityPoolRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosDistributionQueryCommunityPoolRequest: (g_struct: CosmosDistributionQueryCommunityPoolRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_COMMUNITY_POOL_REQUEST = "/cosmos.distribution.v1beta1.QueryCommunityPoolRequest";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryCommunityPoolRequest` - the request type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 */
export type CosmosDistributionQueryCommunityPoolRequest = {};
/**
 * Destructures the fields of a {@link CosmosDistributionQueryCommunityPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool - defines community pool's coins.
 */
export declare const destructCosmosDistributionQueryCommunityPoolResponse: (g_struct: CosmosDistributionQueryCommunityPoolResponse) => [pool?: CosmosBaseDecCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_DISTRIBUTION_QUERY_COMMUNITY_POOL_RESPONSE = "/cosmos.distribution.v1beta1.QueryCommunityPoolResponse";
/**
 * JSON serialization of `cosmos.distribution.v1beta1.QueryCommunityPoolResponse` - the response type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 */
export type CosmosDistributionQueryCommunityPoolResponse = {
    pool?: CosmosBaseDecCoin[] | undefined;
};
