/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosFeegrantGrant, DecodedCosmosFeegrantGrant } from './feegrant.js';
export type EncodedCosmosFeegrantQueryAllowanceRequest = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowanceRequest'>;
export type EncodedCosmosFeegrantQueryAllowanceResponse = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowanceResponse'>;
export type EncodedCosmosFeegrantQueryAllowancesRequest = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowancesRequest'>;
export type EncodedCosmosFeegrantQueryAllowancesResponse = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowancesResponse'>;
export type EncodedCosmosFeegrantQueryAllowancesByGranterRequest = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest'>;
export type EncodedCosmosFeegrantQueryAllowancesByGranterResponse = Encoded<'/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse'>;
/**
 * Returns granted allwance to the grantee by the granter.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter - the address of the user granting an allowance of their funds.
 * @param sa_grantee - the address of the user being granted an allowance of another user's funds.
 * @returns a tuple where:
 *   - 0: allowance - a allowance granted for grantee by granter.
 */
export declare const queryCosmosFeegrantAllowance: (z_req: string | ({
    origin: string;
} & RequestInit), sa_granter?: Opt<`${string}1${string}`>, sa_grantee?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosFeegrantQueryAllowanceResponse>>;
/**
 * Returns all the grants for the given grantee address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_grantee -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: allowances - allowance's granted for grantee by granter.
 *   - 1: pagination - allowance's granted for grantee by granter.
 */
export declare const queryCosmosFeegrantAllowances: (z_req: string | ({
    origin: string;
} & RequestInit), sa_grantee?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosFeegrantQueryAllowancesResponse>>;
/**
 * Returns all the grants given by an address Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: allowances - that have been issued by the granter.
 *   - 1: pagination - that have been issued by the granter.
 */
export declare const queryCosmosFeegrantAllowancesByGranter: (z_req: string | ({
    origin: string;
} & RequestInit), sa_granter?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosFeegrantQueryAllowancesByGranterResponse>>;
/**
 * Encodes a `QueryAllowanceRequest` protobuf message: the request type for the Query/Allowance RPC method.
 * @param sa_granter - `granter`: the address of the user granting an allowance of their funds.
 * @param sa_grantee - `grantee`: the address of the user being granted an allowance of another user's funds.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowanceRequest: (sa_granter?: Opt<WeakAccountAddr>, sa_grantee?: Opt<WeakAccountAddr>) => EncodedCosmosFeegrantQueryAllowanceRequest;
/**
 * Encodes a `QueryAllowanceResponse` protobuf message: the response type for the Query/Allowance RPC method.
 * @param g_allowance - `allowance`: a allowance granted for grantee by granter.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowanceResponse: (atu8_allowance?: Opt<Encoded<'/cosmos.feegrant.v1beta1.Grant'>>) => EncodedCosmosFeegrantQueryAllowanceResponse;
/**
 * Encodes a `QueryAllowancesRequest` protobuf message: the request type for the Query/Allowances RPC method.
 * @param sa_grantee - `grantee`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowancesRequest: (sa_grantee?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosFeegrantQueryAllowancesRequest;
/**
 * Encodes a `QueryAllowancesResponse` protobuf message: the response type for the Query/Allowances RPC method.
 * @param a_allowances - `allowances`: allowance's granted for grantee by granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowancesResponse: (a_allowances?: Opt<Encoded<'/cosmos.feegrant.v1beta1.Grant'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosFeegrantQueryAllowancesResponse;
/**
 * Encodes a `QueryAllowancesByGranterRequest` protobuf message: the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 * @param sa_granter - `granter`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowancesByGranterRequest: (sa_granter?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosFeegrantQueryAllowancesByGranterRequest;
/**
 * Encodes a `QueryAllowancesByGranterResponse` protobuf message: the response type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 * @param a_allowances - `allowances`: that have been issued by the granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantQueryAllowancesByGranterResponse: (a_allowances?: Opt<Encoded<'/cosmos.feegrant.v1beta1.Grant'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosFeegrantQueryAllowancesByGranterResponse;
/**
 * A decoded protobuf QueryAllowanceRequest message
 *
 * Tuple where:
 *   - 0: granter - the address of the user granting an allowance of their funds.
 *   - 1: grantee - the address of the user being granted an allowance of another user's funds.
 */
export type DecodedCosmosFeegrantQueryAllowanceRequest = [
    sa_granter?: CwAccountAddr,
    sa_grantee?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryAllowanceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowanceRequest}
 */
export declare const decodeCosmosFeegrantQueryAllowanceRequest: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowanceRequest;
/**
 * A decoded protobuf QueryAllowance message
 *
 * Alias for: allowance - a allowance granted for grantee by granter.
 */
export type DecodedCosmosFeegrantQueryAllowanceResponse = [
    a_allowance?: DecodedCosmosFeegrantGrant
];
/**
 * Decodes a protobuf QueryAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowanceResponse}
 */
export declare const decodeCosmosFeegrantQueryAllowanceResponse: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowanceResponse;
/**
 * A decoded protobuf QueryAllowancesRequest message
 *
 * Tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export type DecodedCosmosFeegrantQueryAllowancesRequest = [
    sa_grantee?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAllowancesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesRequest}
 */
export declare const decodeCosmosFeegrantQueryAllowancesRequest: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowancesRequest;
/**
 * A decoded protobuf QueryAllowances message
 *
 * Tuple where:
 *   - 0: allowances - allowance's granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export type DecodedCosmosFeegrantQueryAllowancesResponse = [
    a_allowances?: DecodedCosmosFeegrantGrant[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryAllowances message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesResponse}
 */
export declare const decodeCosmosFeegrantQueryAllowancesResponse: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowancesResponse;
/**
 * A decoded protobuf QueryAllowancesByGranterRequest message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export type DecodedCosmosFeegrantQueryAllowancesByGranterRequest = [
    sa_granter?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAllowancesByGranterRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesByGranterRequest}
 */
export declare const decodeCosmosFeegrantQueryAllowancesByGranterRequest: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowancesByGranterRequest;
/**
 * A decoded protobuf QueryAllowancesByGranter message
 *
 * Tuple where:
 *   - 0: allowances - that have been issued by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export type DecodedCosmosFeegrantQueryAllowancesByGranterResponse = [
    a_allowances?: DecodedCosmosFeegrantGrant[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryAllowancesByGranter message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesByGranterResponse}
 */
export declare const decodeCosmosFeegrantQueryAllowancesByGranterResponse: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantQueryAllowancesByGranterResponse;
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowanceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter - the address of the user granting an allowance of their funds.
 *   - 1: grantee - the address of the user being granted an allowance of another user's funds.
 */
export declare const destructCosmosFeegrantQueryAllowanceRequest: (g_struct: CosmosFeegrantQueryAllowanceRequest) => [granter?: CwAccountAddr, grantee?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCE_REQUEST = "/cosmos.feegrant.v1beta1.QueryAllowanceRequest";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowanceRequest` - the request type for the Query/Allowance RPC method.
 */
export type CosmosFeegrantQueryAllowanceRequest = {
    granter?: CwAccountAddr | undefined;
    grantee?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowance - a allowance granted for grantee by granter.
 */
export declare const destructCosmosFeegrantQueryAllowanceResponse: (g_struct: CosmosFeegrantQueryAllowanceResponse) => [allowance?: CosmosFeegrantGrant];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCE_RESPONSE = "/cosmos.feegrant.v1beta1.QueryAllowanceResponse";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowanceResponse` - the response type for the Query/Allowance RPC method.
 */
export type CosmosFeegrantQueryAllowanceResponse = {
    allowance?: CosmosFeegrantGrant | undefined;
};
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export declare const destructCosmosFeegrantQueryAllowancesRequest: (g_struct: CosmosFeegrantQueryAllowancesRequest) => [grantee?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_REQUEST = "/cosmos.feegrant.v1beta1.QueryAllowancesRequest";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowancesRequest` - the request type for the Query/Allowances RPC method.
 */
export type CosmosFeegrantQueryAllowancesRequest = {
    grantee?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowances - allowance's granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export declare const destructCosmosFeegrantQueryAllowancesResponse: (g_struct: CosmosFeegrantQueryAllowancesResponse) => [allowances?: CosmosFeegrantGrant[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_RESPONSE = "/cosmos.feegrant.v1beta1.QueryAllowancesResponse";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowancesResponse` - the response type for the Query/Allowances RPC method.
 */
export type CosmosFeegrantQueryAllowancesResponse = {
    allowances?: CosmosFeegrantGrant[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesByGranterRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export declare const destructCosmosFeegrantQueryAllowancesByGranterRequest: (g_struct: CosmosFeegrantQueryAllowancesByGranterRequest) => [granter?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_BY_GRANTER_REQUEST = "/cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest` - the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 */
export type CosmosFeegrantQueryAllowancesByGranterRequest = {
    granter?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesByGranterResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowances - that have been issued by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export declare const destructCosmosFeegrantQueryAllowancesByGranterResponse: (g_struct: CosmosFeegrantQueryAllowancesByGranterResponse) => [allowances?: CosmosFeegrantGrant[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_BY_GRANTER_RESPONSE = "/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse` - the response type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 */
export type CosmosFeegrantQueryAllowancesByGranterResponse = {
    allowances?: CosmosFeegrantGrant[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
