import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf, map } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the raw genesis transaction in JSON.
 * @param a_gen_txs - `gen_txs`: defines the genesis transactions.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosGenutilGenesisState = (a_gen_txs) => Protobuf() // ...
    .B(a_gen_txs) // bytes[] gen_txs = 1
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGenutilGenesisState}
 */
export const decodeCosmosGenutilGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [0]);
/**
 * Destructures the fields of a {@link CosmosGenutilGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: gen_txs - defines the genesis transactions.
 */
export const destructCosmosGenutilGenesisState = (g_struct) => [map(g_struct.gen_txs, safe_base64_to_bytes)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_GENUTIL_GENESIS_STATE = '/cosmos.genutil.v1beta1.GenesisState';
//# sourceMappingURL=genesis.js.map