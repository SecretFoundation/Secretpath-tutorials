import type { WeakUint64Str, WeakAccountAddr, SlimCoin, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt, WeakTimestampStr } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../base/v1beta1/coin.js';
import type { CosmosDistributionCommunityPoolSpendProposal, CosmosDistributionCommunityPoolSpendProposalWithDeposit } from '../../distribution/v1beta1/distribution.js';
import type { ProtoEnumCosmosGovVoteOption, JsonEnumCosmosGovVoteOption, CosmosGovWeightedVoteOption, DecodedCosmosGovWeightedVoteOption, CosmosGovParams, DecodedCosmosGovParams } from './gov.js';
import type { CosmosGovTextProposal } from '../v1beta1/gov.js';
import type { CosmosParamsParameterChangeProposal } from '../../params/v1beta1/params.js';
import type { CosmosUpgradeSoftwareUpgradeProposal, CosmosUpgradeCancelSoftwareUpgradeProposal } from '../../upgrade/v1beta1/upgrade.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { IbcCoreClientClientUpdateProposal, IbcCoreClientUpgradeProposal } from '../../../ibc/core/client/v1/client.js';
import type { OsmosisGammReplaceMigrationRecordsProposal, OsmosisGammUpdateMigrationRecordsProposal, OsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal, OsmosisGammSetScalingFactorControllerProposal } from '../../../osmosis/gamm/v1beta1/gov.js';
import type { OsmosisPoolincentivesReplacePoolIncentivesProposal, OsmosisPoolincentivesUpdatePoolIncentivesProposal } from '../../../osmosis/pool-incentives/v1beta1/gov.js';
import type { OsmosisProtorevSetProtoRevEnabledProposal, OsmosisProtorevSetProtoRevAdminAccountProposal } from '../../../osmosis/protorev/v1beta1/gov.js';
import type { OsmosisSuperfluidSetSuperfluidAssetsProposal, OsmosisSuperfluidRemoveSuperfluidAssetsProposal, OsmosisSuperfluidUpdateUnpoolWhiteListProposal } from '../../../osmosis/superfluid/v1beta1/gov.js';
import type { OsmosisTxfeesUpdateFeeTokenProposal } from '../../../osmosis/txfees/v1beta1/gov.js';
export type EncodedCosmosGovMsgSubmitProposal = Encoded<'/cosmos.gov.v1.MsgSubmitProposal'>;
export type EncodedCosmosGovMsgSubmitProposalResponse = Encoded<'/cosmos.gov.v1.MsgSubmitProposalResponse'>;
export type EncodedCosmosGovMsgExecLegacyContent = Encoded<'/cosmos.gov.v1.MsgExecLegacyContent'>;
export type EncodedCosmosGovMsgExecLegacyContentResponse = Encoded<'/cosmos.gov.v1.MsgExecLegacyContentResponse'>;
export type EncodedCosmosGovMsgVote = Encoded<'/cosmos.gov.v1.MsgVote'>;
export type EncodedCosmosGovMsgVoteResponse = Encoded<'/cosmos.gov.v1.MsgVoteResponse'>;
export type EncodedCosmosGovMsgVoteWeighted = Encoded<'/cosmos.gov.v1.MsgVoteWeighted'>;
export type EncodedCosmosGovMsgVoteWeightedResponse = Encoded<'/cosmos.gov.v1.MsgVoteWeightedResponse'>;
export type EncodedCosmosGovMsgDeposit = Encoded<'/cosmos.gov.v1.MsgDeposit'>;
export type EncodedCosmosGovMsgDepositResponse = Encoded<'/cosmos.gov.v1.MsgDepositResponse'>;
export type EncodedCosmosGovMsgUpdateParams = Encoded<'/cosmos.gov.v1.MsgUpdateParams'>;
export type EncodedCosmosGovMsgUpdateParamsResponse = Encoded<'/cosmos.gov.v1.MsgUpdateParamsResponse'>;
export type EncodedCosmosGovMsgCancelProposal = Encoded<'/cosmos.gov.v1.MsgCancelProposal'>;
export type EncodedCosmosGovMsgCancelProposalResponse = Encoded<'/cosmos.gov.v1.MsgCancelProposalResponse'>;
/**
 * Encodes a `MsgSubmitProposal` protobuf message: defines an sdk.Msg type that supports submitting arbitrary proposal Content.
 * @param a_messages - `messages`: the arbitrary messages to be executed if proposal passes.
 * @param a_initial_deposits - `initial_deposit`: the deposit value that must be paid at proposal submission.
 * @param s_proposer - `proposer`: the account address of the proposer.
 * @param s_metadata - `metadata`: any arbitrary metadata attached to the proposal.
 * @param s_title - `title`: the title of the proposal. Since: cosmos-sdk 0.47
 * @param s_summary - `summary`: the summary of the proposal Since: cosmos-sdk 0.47
 * @param b_expedited - `expedited`: defines if the proposal is expedited or not Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgSubmitProposal: (a_messages?: Opt<Uint8Array[]>, a_initial_deposits?: Opt<SlimCoin[]>, s_proposer?: Opt<string>, s_metadata?: Opt<string>, s_title?: Opt<string>, s_summary?: Opt<string>, b_expedited?: Opt<boolean | 0 | 1>) => EncodedCosmosGovMsgSubmitProposal;
/**
 * Encodes a `MsgSubmitProposalResponse` protobuf message: defines the Msg/SubmitProposal response type.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgSubmitProposalResponse: (sg_proposal_id?: Opt<WeakUint64Str>) => EncodedCosmosGovMsgSubmitProposalResponse;
/**
 * Encodes a `MsgExecLegacyContent` protobuf message: used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 * @param atu8_content - `content`: the proposal's content.
 * @param s_authority - `authority`: must be the gov module address.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgExecLegacyContent: (atu8_content?: Opt<Encoded<'cosmos.gov.v1beta1.Content'>>, s_authority?: Opt<string>) => EncodedCosmosGovMsgExecLegacyContent;
/**
 * Encodes a `MsgExecLegacyContentResponse` protobuf message: defines the Msg/ExecLegacyContent response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgExecLegacyContentResponse: () => EncodedCosmosGovMsgExecLegacyContentResponse;
/**
 * Encodes a `MsgVote` protobuf message: defines a message to cast a vote.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param sa_voter - `voter`: the voter address for the proposal.
 * @param xc_option - `option`: defines the vote option.
 * @param s_metadata - `metadata`: any arbitrary metadata attached to the Vote.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgVote: (sg_proposal_id?: Opt<WeakUint64Str>, sa_voter?: Opt<WeakAccountAddr>, xc_option?: Opt<ProtoEnumCosmosGovVoteOption>, s_metadata?: Opt<string>) => EncodedCosmosGovMsgVote;
/**
 * Encodes a `MsgVoteResponse` protobuf message: defines the Msg/Vote response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgVoteResponse: () => EncodedCosmosGovMsgVoteResponse;
/**
 * Encodes a `MsgVoteWeighted` protobuf message: defines a message to cast a vote.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param sa_voter - `voter`: the voter address for the proposal.
 * @param a_options - `options`: defines the weighted vote options.
 * @param s_metadata - `metadata`: any arbitrary metadata attached to the VoteWeighted.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgVoteWeighted: (sg_proposal_id?: Opt<WeakUint64Str>, sa_voter?: Opt<WeakAccountAddr>, a_options?: Opt<Encoded<'/cosmos.gov.v1.WeightedVoteOption'>[]>, s_metadata?: Opt<string>) => EncodedCosmosGovMsgVoteWeighted;
/**
 * Encodes a `MsgVoteWeightedResponse` protobuf message: defines the Msg/VoteWeighted response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgVoteWeightedResponse: () => EncodedCosmosGovMsgVoteWeightedResponse;
/**
 * Encodes a `MsgDeposit` protobuf message: defines a message to submit a deposit to an existing proposal.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param sa_depositor - `depositor`: defines the deposit addresses from the proposals.
 * @param a_amounts - `amount`: to be deposited by depositor.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgDeposit: (sg_proposal_id?: Opt<WeakUint64Str>, sa_depositor?: Opt<WeakAccountAddr>, a_amounts?: Opt<SlimCoin[]>) => EncodedCosmosGovMsgDeposit;
/**
 * Encodes a `MsgDepositResponse` protobuf message: defines the Msg/Deposit response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgDepositResponse: () => EncodedCosmosGovMsgDepositResponse;
/**
 * Encodes a `MsgUpdateParams` protobuf message: the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param g_params - `params`: defines the x/gov parameters to update. NOTE: All parameters must be supplied.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgUpdateParams: (s_authority?: Opt<string>, atu8_params?: Opt<Encoded<'/cosmos.gov.v1.Params'>>) => EncodedCosmosGovMsgUpdateParams;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgUpdateParamsResponse: () => EncodedCosmosGovMsgUpdateParamsResponse;
/**
 * Encodes a `MsgCancelProposal` protobuf message: the Msg/CancelProposal request type. Since: cosmos-sdk 0.50
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param s_proposer - `proposer`: the account address of the proposer.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgCancelProposal: (sg_proposal_id?: Opt<WeakUint64Str>, s_proposer?: Opt<string>) => EncodedCosmosGovMsgCancelProposal;
/**
 * Encodes a `MsgCancelProposalResponse` protobuf message: defines the response structure for executing a MsgCancelProposal message. Since: cosmos-sdk 0.50
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param xt_canceled_time - `canceled_time`: the time when proposal is canceled.
 * @param sg_canceled_height - `canceled_height`: defines the block height at which the proposal is canceled.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovMsgCancelProposalResponse: (sg_proposal_id?: Opt<WeakUint64Str>, xt_canceled_time?: Opt<number>, sg_canceled_height?: Opt<WeakUint64Str>) => EncodedCosmosGovMsgCancelProposalResponse;
/**
 * A decoded protobuf SubmitProposal message
 *
 * Tuple where:
 *   - 0: messages - the arbitrary messages to be executed if proposal passes.
 *   - 1: initial_deposit - the deposit value that must be paid at proposal submission.
 *   - 2: proposer - the account address of the proposer.
 *   - 3: metadata - any arbitrary metadata attached to the proposal.
 *   - 4: title - the title of the proposal. Since: cosmos-sdk 0.47
 *   - 5: summary - the summary of the proposal Since: cosmos-sdk 0.47
 *   - 6: expedited - defines if the proposal is expedited or not Since: cosmos-sdk 0.50
 */
export type DecodedCosmosGovMsgSubmitProposal = [
    a_messages?: DecodedGoogleProtobufAny[],
    a_initial_deposit?: [
        string,
        string
    ][],
    s_proposer?: string,
    s_metadata?: string,
    s_title?: string,
    s_summary?: string,
    b_expedited?: 0 | 1
];
/**
 * Decodes a protobuf SubmitProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgSubmitProposal}
 */
export declare const decodeCosmosGovMsgSubmitProposal: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgSubmitProposal;
/**
 * A decoded protobuf SubmitProposal message
 *
 * Alias for: proposal_id - defines the unique id of the proposal.
 */
export type DecodedCosmosGovMsgSubmitProposalResponse = [
    sg_proposal_id?: CwUint64
];
/**
 * Decodes a protobuf SubmitProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgSubmitProposalResponse}
 */
export declare const decodeCosmosGovMsgSubmitProposalResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgSubmitProposalResponse;
/**
 * A decoded protobuf ExecLegacyContent message
 *
 * Tuple where:
 *   - 0: content - the proposal's content.
 *   - 1: authority - must be the gov module address.
 */
export type DecodedCosmosGovMsgExecLegacyContent = [
    a_content?: DecodedGoogleProtobufAny,
    s_authority?: string
];
/**
 * Decodes a protobuf ExecLegacyContent message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgExecLegacyContent}
 */
export declare const decodeCosmosGovMsgExecLegacyContent: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgExecLegacyContent;
/**
 * A decoded protobuf ExecLegacyContent message
 *
 * Tuple where:
 */
export type DecodedCosmosGovMsgExecLegacyContentResponse = [];
/**
 * Decodes a protobuf ExecLegacyContent message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgExecLegacyContentResponse}
 */
export declare const decodeCosmosGovMsgExecLegacyContentResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Vote message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - the voter address for the proposal.
 *   - 2: option - defines the vote option.
 *   - 3: metadata - any arbitrary metadata attached to the Vote.
 */
export type DecodedCosmosGovMsgVote = [
    sg_proposal_id?: CwUint64,
    sa_voter?: CwAccountAddr,
    xc_option?: ProtoEnumCosmosGovVoteOption,
    s_metadata?: string
];
/**
 * Decodes a protobuf Vote message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgVote}
 */
export declare const decodeCosmosGovMsgVote: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgVote;
/**
 * A decoded protobuf Vote message
 *
 * Tuple where:
 */
export type DecodedCosmosGovMsgVoteResponse = [];
/**
 * Decodes a protobuf Vote message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgVoteResponse}
 */
export declare const decodeCosmosGovMsgVoteResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf VoteWeighted message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - the voter address for the proposal.
 *   - 2: options - defines the weighted vote options.
 *   - 3: metadata - any arbitrary metadata attached to the VoteWeighted.
 */
export type DecodedCosmosGovMsgVoteWeighted = [
    sg_proposal_id?: CwUint64,
    sa_voter?: CwAccountAddr,
    a_options?: DecodedCosmosGovWeightedVoteOption[],
    s_metadata?: string
];
/**
 * Decodes a protobuf VoteWeighted message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgVoteWeighted}
 */
export declare const decodeCosmosGovMsgVoteWeighted: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgVoteWeighted;
/**
 * A decoded protobuf VoteWeighted message
 *
 * Tuple where:
 */
export type DecodedCosmosGovMsgVoteWeightedResponse = [];
/**
 * Decodes a protobuf VoteWeighted message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgVoteWeightedResponse}
 */
export declare const decodeCosmosGovMsgVoteWeightedResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Deposit message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: depositor - defines the deposit addresses from the proposals.
 *   - 2: amount - to be deposited by depositor.
 */
export type DecodedCosmosGovMsgDeposit = [
    sg_proposal_id?: CwUint64,
    sa_depositor?: CwAccountAddr,
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf Deposit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgDeposit}
 */
export declare const decodeCosmosGovMsgDeposit: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgDeposit;
/**
 * A decoded protobuf Deposit message
 *
 * Tuple where:
 */
export type DecodedCosmosGovMsgDepositResponse = [];
/**
 * Decodes a protobuf Deposit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgDepositResponse}
 */
export declare const decodeCosmosGovMsgDepositResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/gov parameters to update. NOTE: All parameters must be supplied.
 */
export type DecodedCosmosGovMsgUpdateParams = [
    s_authority?: string,
    a_params?: DecodedCosmosGovParams
];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgUpdateParams}
 */
export declare const decodeCosmosGovMsgUpdateParams: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgUpdateParams;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 */
export type DecodedCosmosGovMsgUpdateParamsResponse = [];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgUpdateParamsResponse}
 */
export declare const decodeCosmosGovMsgUpdateParamsResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CancelProposal message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: proposer - the account address of the proposer.
 */
export type DecodedCosmosGovMsgCancelProposal = [
    sg_proposal_id?: CwUint64,
    s_proposer?: string
];
/**
 * Decodes a protobuf CancelProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgCancelProposal}
 */
export declare const decodeCosmosGovMsgCancelProposal: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgCancelProposal;
/**
 * A decoded protobuf CancelProposal message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: canceled_time - the time when proposal is canceled.
 *   - 2: canceled_height - defines the block height at which the proposal is canceled.
 */
export type DecodedCosmosGovMsgCancelProposalResponse = [
    sg_proposal_id?: CwUint64,
    a_canceled_time?: [
        string,
        number
    ],
    sg_canceled_height?: CwUint64
];
/**
 * Decodes a protobuf CancelProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovMsgCancelProposalResponse}
 */
export declare const decodeCosmosGovMsgCancelProposalResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovMsgCancelProposalResponse;
/**
 * Destructures the fields of a {@link CosmosGovMsgSubmitProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: messages - the arbitrary messages to be executed if proposal passes.
 *   - 1: initial_deposit - the deposit value that must be paid at proposal submission.
 *   - 2: proposer - the account address of the proposer.
 *   - 3: metadata - any arbitrary metadata attached to the proposal.
 *   - 4: title - the title of the proposal. Since: cosmos-sdk 0.47
 *   - 5: summary - the summary of the proposal Since: cosmos-sdk 0.47
 *   - 6: expedited - defines if the proposal is expedited or not Since: cosmos-sdk 0.50
 */
export declare const destructCosmosGovMsgSubmitProposal: (g_struct: CosmosGovMsgSubmitProposal) => [messages?: JsonAny[], initial_deposit?: CosmosBaseCoin[], proposer?: string, metadata?: string, title?: string, summary?: string, expedited?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_SUBMIT_PROPOSAL = "/cosmos.gov.v1.MsgSubmitProposal";
/**
 * JSON serialization of `cosmos.gov.v1.MsgSubmitProposal` - defines an sdk.Msg type that supports submitting arbitrary proposal Content.
 */
export type CosmosGovMsgSubmitProposal = {
    messages?: JsonAny[] | undefined;
    initial_deposit?: CosmosBaseCoin[] | undefined;
    proposer?: string | undefined;
    metadata?: string | undefined;
    title?: string | undefined;
    summary?: string | undefined;
    expedited?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgSubmitProposalResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 */
export declare const destructCosmosGovMsgSubmitProposalResponse: (g_struct: CosmosGovMsgSubmitProposalResponse) => [proposal_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_SUBMIT_PROPOSAL_RESPONSE = "/cosmos.gov.v1.MsgSubmitProposalResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgSubmitProposalResponse` - defines the Msg/SubmitProposal response type.
 */
export type CosmosGovMsgSubmitProposalResponse = {
    proposal_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgExecLegacyContent} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: content - the proposal's content.
 *   - 1: authority - must be the gov module address.
 */
export declare const destructCosmosGovMsgExecLegacyContent: (g_struct: CosmosGovMsgExecLegacyContent) => [content?: JsonAny<string, CosmosDistributionCommunityPoolSpendProposal | CosmosDistributionCommunityPoolSpendProposalWithDeposit | CosmosParamsParameterChangeProposal | CosmosUpgradeSoftwareUpgradeProposal | CosmosUpgradeCancelSoftwareUpgradeProposal | IbcCoreClientClientUpdateProposal | IbcCoreClientUpgradeProposal | OsmosisGammReplaceMigrationRecordsProposal | OsmosisGammUpdateMigrationRecordsProposal | OsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal | OsmosisGammSetScalingFactorControllerProposal | OsmosisPoolincentivesReplacePoolIncentivesProposal | OsmosisPoolincentivesUpdatePoolIncentivesProposal | OsmosisProtorevSetProtoRevEnabledProposal | OsmosisProtorevSetProtoRevAdminAccountProposal | OsmosisSuperfluidSetSuperfluidAssetsProposal | OsmosisSuperfluidRemoveSuperfluidAssetsProposal | OsmosisSuperfluidUpdateUnpoolWhiteListProposal | OsmosisTxfeesUpdateFeeTokenProposal | CosmosGovTextProposal>, authority?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_EXEC_LEGACY_CONTENT = "/cosmos.gov.v1.MsgExecLegacyContent";
/**
 * JSON serialization of `cosmos.gov.v1.MsgExecLegacyContent` - used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 */
export type CosmosGovMsgExecLegacyContent = {
    content?: JsonAny<string, CosmosUpgradeSoftwareUpgradeProposal | CosmosUpgradeCancelSoftwareUpgradeProposal | CosmosDistributionCommunityPoolSpendProposal | CosmosDistributionCommunityPoolSpendProposalWithDeposit | CosmosParamsParameterChangeProposal | CosmosGovTextProposal | IbcCoreClientClientUpdateProposal | IbcCoreClientUpgradeProposal | OsmosisProtorevSetProtoRevEnabledProposal | OsmosisProtorevSetProtoRevAdminAccountProposal | OsmosisGammReplaceMigrationRecordsProposal | OsmosisGammUpdateMigrationRecordsProposal | OsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal | OsmosisGammSetScalingFactorControllerProposal | OsmosisSuperfluidSetSuperfluidAssetsProposal | OsmosisSuperfluidRemoveSuperfluidAssetsProposal | OsmosisSuperfluidUpdateUnpoolWhiteListProposal | OsmosisTxfeesUpdateFeeTokenProposal | OsmosisPoolincentivesReplacePoolIncentivesProposal | OsmosisPoolincentivesUpdatePoolIncentivesProposal> | undefined;
    authority?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgExecLegacyContentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosGovMsgExecLegacyContentResponse: (g_struct: CosmosGovMsgExecLegacyContentResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_EXEC_LEGACY_CONTENT_RESPONSE = "/cosmos.gov.v1.MsgExecLegacyContentResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgExecLegacyContentResponse` - defines the Msg/ExecLegacyContent response type.
 */
export type CosmosGovMsgExecLegacyContentResponse = {};
/**
 * Destructures the fields of a {@link CosmosGovMsgVote} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - the voter address for the proposal.
 *   - 2: option - defines the vote option.
 *   - 3: metadata - any arbitrary metadata attached to the Vote.
 */
export declare const destructCosmosGovMsgVote: (g_struct: CosmosGovMsgVote) => [proposal_id?: CwUint64, voter?: CwAccountAddr, option?: JsonEnumCosmosGovVoteOption, metadata?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_VOTE = "/cosmos.gov.v1.MsgVote";
/**
 * JSON serialization of `cosmos.gov.v1.MsgVote` - defines a message to cast a vote.
 */
export type CosmosGovMsgVote = {
    proposal_id?: CwUint64 | undefined;
    voter?: CwAccountAddr | undefined;
    option?: JsonEnumCosmosGovVoteOption | undefined;
    metadata?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgVoteResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosGovMsgVoteResponse: (g_struct: CosmosGovMsgVoteResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_VOTE_RESPONSE = "/cosmos.gov.v1.MsgVoteResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgVoteResponse` - defines the Msg/Vote response type.
 */
export type CosmosGovMsgVoteResponse = {};
/**
 * Destructures the fields of a {@link CosmosGovMsgVoteWeighted} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - the voter address for the proposal.
 *   - 2: options - defines the weighted vote options.
 *   - 3: metadata - any arbitrary metadata attached to the VoteWeighted.
 */
export declare const destructCosmosGovMsgVoteWeighted: (g_struct: CosmosGovMsgVoteWeighted) => [proposal_id?: CwUint64, voter?: CwAccountAddr, options?: CosmosGovWeightedVoteOption[], metadata?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_VOTE_WEIGHTED = "/cosmos.gov.v1.MsgVoteWeighted";
/**
 * JSON serialization of `cosmos.gov.v1.MsgVoteWeighted` - defines a message to cast a vote.
 */
export type CosmosGovMsgVoteWeighted = {
    proposal_id?: CwUint64 | undefined;
    voter?: CwAccountAddr | undefined;
    options?: CosmosGovWeightedVoteOption[] | undefined;
    metadata?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgVoteWeightedResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosGovMsgVoteWeightedResponse: (g_struct: CosmosGovMsgVoteWeightedResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_VOTE_WEIGHTED_RESPONSE = "/cosmos.gov.v1.MsgVoteWeightedResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgVoteWeightedResponse` - defines the Msg/VoteWeighted response type.
 */
export type CosmosGovMsgVoteWeightedResponse = {};
/**
 * Destructures the fields of a {@link CosmosGovMsgDeposit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: depositor - defines the deposit addresses from the proposals.
 *   - 2: amount - to be deposited by depositor.
 */
export declare const destructCosmosGovMsgDeposit: (g_struct: CosmosGovMsgDeposit) => [proposal_id?: CwUint64, depositor?: CwAccountAddr, amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_DEPOSIT = "/cosmos.gov.v1.MsgDeposit";
/**
 * JSON serialization of `cosmos.gov.v1.MsgDeposit` - defines a message to submit a deposit to an existing proposal.
 */
export type CosmosGovMsgDeposit = {
    proposal_id?: CwUint64 | undefined;
    depositor?: CwAccountAddr | undefined;
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgDepositResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosGovMsgDepositResponse: (g_struct: CosmosGovMsgDepositResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_DEPOSIT_RESPONSE = "/cosmos.gov.v1.MsgDepositResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgDepositResponse` - defines the Msg/Deposit response type.
 */
export type CosmosGovMsgDepositResponse = {};
/**
 * Destructures the fields of a {@link CosmosGovMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/gov parameters to update. NOTE: All parameters must be supplied.
 */
export declare const destructCosmosGovMsgUpdateParams: (g_struct: CosmosGovMsgUpdateParams) => [authority?: string, params?: CosmosGovParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_UPDATE_PARAMS = "/cosmos.gov.v1.MsgUpdateParams";
/**
 * JSON serialization of `cosmos.gov.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export type CosmosGovMsgUpdateParams = {
    authority?: string | undefined;
    params?: CosmosGovParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosGovMsgUpdateParamsResponse: (g_struct: CosmosGovMsgUpdateParamsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_UPDATE_PARAMS_RESPONSE = "/cosmos.gov.v1.MsgUpdateParamsResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export type CosmosGovMsgUpdateParamsResponse = {};
/**
 * Destructures the fields of a {@link CosmosGovMsgCancelProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: proposer - the account address of the proposer.
 */
export declare const destructCosmosGovMsgCancelProposal: (g_struct: CosmosGovMsgCancelProposal) => [proposal_id?: CwUint64, proposer?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_CANCEL_PROPOSAL = "/cosmos.gov.v1.MsgCancelProposal";
/**
 * JSON serialization of `cosmos.gov.v1.MsgCancelProposal` - the Msg/CancelProposal request type. Since: cosmos-sdk 0.50
 */
export type CosmosGovMsgCancelProposal = {
    proposal_id?: CwUint64 | undefined;
    proposer?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovMsgCancelProposalResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: canceled_time - the time when proposal is canceled.
 *   - 2: canceled_height - defines the block height at which the proposal is canceled.
 */
export declare const destructCosmosGovMsgCancelProposalResponse: (g_struct: CosmosGovMsgCancelProposalResponse) => [proposal_id?: CwUint64, canceled_time?: number, canceled_height?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_MSG_CANCEL_PROPOSAL_RESPONSE = "/cosmos.gov.v1.MsgCancelProposalResponse";
/**
 * JSON serialization of `cosmos.gov.v1.MsgCancelProposalResponse` - defines the response structure for executing a MsgCancelProposal message. Since: cosmos-sdk 0.50
 */
export type CosmosGovMsgCancelProposalResponse = {
    proposal_id?: CwUint64 | undefined;
    canceled_time?: WeakTimestampStr | undefined;
    canceled_height?: CwUint64 | undefined;
};
