/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosGovProposal, DecodedCosmosGovProposal, ProtoEnumCosmosGovProposalStatus, JsonEnumCosmosGovProposalStatus, CosmosGovVote, DecodedCosmosGovVote, CosmosGovVotingParams, DecodedCosmosGovVotingParams, CosmosGovDepositParams, DecodedCosmosGovDepositParams, CosmosGovTallyParams, DecodedCosmosGovTallyParams, CosmosGovDeposit, DecodedCosmosGovDeposit, CosmosGovTallyResult, DecodedCosmosGovTallyResult } from './gov.js';
export type EncodedCosmosGovQueryProposalRequest = Encoded<'/cosmos.gov.v1beta1.QueryProposalRequest'>;
export type EncodedCosmosGovQueryProposalResponse = Encoded<'/cosmos.gov.v1beta1.QueryProposalResponse'>;
export type EncodedCosmosGovQueryProposalsRequest = Encoded<'/cosmos.gov.v1beta1.QueryProposalsRequest'>;
export type EncodedCosmosGovQueryProposalsResponse = Encoded<'/cosmos.gov.v1beta1.QueryProposalsResponse'>;
export type EncodedCosmosGovQueryVoteRequest = Encoded<'/cosmos.gov.v1beta1.QueryVoteRequest'>;
export type EncodedCosmosGovQueryVoteResponse = Encoded<'/cosmos.gov.v1beta1.QueryVoteResponse'>;
export type EncodedCosmosGovQueryVotesRequest = Encoded<'/cosmos.gov.v1beta1.QueryVotesRequest'>;
export type EncodedCosmosGovQueryVotesResponse = Encoded<'/cosmos.gov.v1beta1.QueryVotesResponse'>;
export type EncodedCosmosGovQueryParamsRequest = Encoded<'/cosmos.gov.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosGovQueryParamsResponse = Encoded<'/cosmos.gov.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosGovQueryDepositRequest = Encoded<'/cosmos.gov.v1beta1.QueryDepositRequest'>;
export type EncodedCosmosGovQueryDepositResponse = Encoded<'/cosmos.gov.v1beta1.QueryDepositResponse'>;
export type EncodedCosmosGovQueryDepositsRequest = Encoded<'/cosmos.gov.v1beta1.QueryDepositsRequest'>;
export type EncodedCosmosGovQueryDepositsResponse = Encoded<'/cosmos.gov.v1beta1.QueryDepositsResponse'>;
export type EncodedCosmosGovQueryTallyResultRequest = Encoded<'/cosmos.gov.v1beta1.QueryTallyResultRequest'>;
export type EncodedCosmosGovQueryTallyResultResponse = Encoded<'/cosmos.gov.v1beta1.QueryTallyResultResponse'>;
/**
 * Queries proposal details based on ProposalID.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @returns a tuple where:
 *   - 0: proposal - the 'proposal' response property
 */
export declare const queryCosmosGovProposal: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryProposalResponse>>;
/**
 * Queries all proposals based on given status.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param xc_proposal_status - defines the status of the proposals.
 * @param sa_voter - defines the voter address for the proposals.
 * @param sa_depositor - defines the deposit addresses from the proposals.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: proposals - defines all the requested governance proposals.
 *   - 1: pagination - defines all the requested governance proposals.
 */
export declare const queryCosmosGovProposals: (z_req: string | ({
    origin: string;
} & RequestInit), xc_proposal_status?: Opt<ProtoEnumCosmosGovProposalStatus>, sa_voter?: Opt<`${string}1${string}`>, sa_depositor?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryProposalsResponse>>;
/**
 * Queries voted information based on proposalID, voterAddr. Due to how we handle state, this query would error for proposals that has already been finished.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @param sa_voter - defines the voter address for the proposals.
 * @returns a tuple where:
 *   - 0: vote - defines the queried vote.
 */
export declare const queryCosmosGovVote: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>, sa_voter?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryVoteResponse>>;
/**
 * Queries votes of a given proposal.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: votes - defines the queried votes.
 *   - 1: pagination - defines the queried votes.
 */
export declare const queryCosmosGovVotes: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryVotesResponse>>;
/**
 * Queries all parameters of the gov module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_params_type - defines which parameters to query for, can be one of "voting", "tallying" or "deposit".
 * @returns a tuple where:
 *   - 0: voting_params - defines the parameters related to voting.
 *   - 1: deposit_params - defines the parameters related to voting.
 *   - 2: tally_params - defines the parameters related to voting.
 */
export declare const queryCosmosGovParams: (z_req: string | ({
    origin: string;
} & RequestInit), s_params_type?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryParamsResponse>>;
/**
 * Queries single deposit information based on proposalID, depositor address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @param sa_depositor - defines the deposit addresses from the proposals.
 * @returns a tuple where:
 *   - 0: deposit - defines the requested deposit.
 */
export declare const queryCosmosGovDeposit: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>, sa_depositor?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryDepositResponse>>;
/**
 * Queries all deposits of a single proposal.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: deposits - defines the requested deposits.
 *   - 1: pagination - defines the requested deposits.
 */
export declare const queryCosmosGovDeposits: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryDepositsResponse>>;
/**
 * Queries the tally of a proposal vote.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_proposal_id - defines the unique id of the proposal.
 * @returns a tuple where:
 *   - 0: tally - defines the requested tally.
 */
export declare const queryCosmosGovTallyResult: (z_req: string | ({
    origin: string;
} & RequestInit), sg_proposal_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosGovQueryTallyResultResponse>>;
/**
 * Encodes a `QueryProposalRequest` protobuf message: the request type for the Query/Proposal RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryProposalRequest: (sg_proposal_id?: Opt<WeakUint64Str>) => EncodedCosmosGovQueryProposalRequest;
/**
 * Encodes a `QueryProposalResponse` protobuf message: the response type for the Query/Proposal RPC method.
 * @param g_proposal - `proposal`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryProposalResponse: (atu8_proposal?: Opt<Encoded<'/cosmos.gov.v1beta1.Proposal'>>) => EncodedCosmosGovQueryProposalResponse;
/**
 * Encodes a `QueryProposalsRequest` protobuf message: the request type for the Query/Proposals RPC method.
 * @param xc_proposal_status - `proposal_status`: defines the status of the proposals.
 * @param sa_voter - `voter`: defines the voter address for the proposals.
 * @param sa_depositor - `depositor`: defines the deposit addresses from the proposals.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryProposalsRequest: (xc_proposal_status?: Opt<ProtoEnumCosmosGovProposalStatus>, sa_voter?: Opt<WeakAccountAddr>, sa_depositor?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosGovQueryProposalsRequest;
/**
 * Encodes a `QueryProposalsResponse` protobuf message: the response type for the Query/Proposals RPC method.
 * @param a_proposals - `proposals`: defines all the requested governance proposals.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryProposalsResponse: (a_proposals?: Opt<Encoded<'/cosmos.gov.v1beta1.Proposal'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosGovQueryProposalsResponse;
/**
 * Encodes a `QueryVoteRequest` protobuf message: the request type for the Query/Vote RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param sa_voter - `voter`: defines the voter address for the proposals.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryVoteRequest: (sg_proposal_id?: Opt<WeakUint64Str>, sa_voter?: Opt<WeakAccountAddr>) => EncodedCosmosGovQueryVoteRequest;
/**
 * Encodes a `QueryVoteResponse` protobuf message: the response type for the Query/Vote RPC method.
 * @param g_vote - `vote`: defines the queried vote.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryVoteResponse: (atu8_vote?: Opt<Encoded<'/cosmos.gov.v1beta1.Vote'>>) => EncodedCosmosGovQueryVoteResponse;
/**
 * Encodes a `QueryVotesRequest` protobuf message: the request type for the Query/Votes RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryVotesRequest: (sg_proposal_id?: Opt<WeakUint64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosGovQueryVotesRequest;
/**
 * Encodes a `QueryVotesResponse` protobuf message: the response type for the Query/Votes RPC method.
 * @param a_votes - `votes`: defines the queried votes.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryVotesResponse: (a_votes?: Opt<Encoded<'/cosmos.gov.v1beta1.Vote'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosGovQueryVotesResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @param s_params_type - `params_type`: defines which parameters to query for, can be one of "voting", "tallying" or "deposit".
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryParamsRequest: (s_params_type?: Opt<string>) => EncodedCosmosGovQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_voting_params - `voting_params`: defines the parameters related to voting.
 * @param g_deposit_params - `deposit_params`: defines the parameters related to deposit.
 * @param g_tally_params - `tally_params`: defines the parameters related to tally.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryParamsResponse: (atu8_voting_params?: Opt<Encoded<'/cosmos.gov.v1beta1.VotingParams'>>, atu8_deposit_params?: Opt<Encoded<'/cosmos.gov.v1beta1.DepositParams'>>, atu8_tally_params?: Opt<Encoded<'/cosmos.gov.v1beta1.TallyParams'>>) => EncodedCosmosGovQueryParamsResponse;
/**
 * Encodes a `QueryDepositRequest` protobuf message: the request type for the Query/Deposit RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param sa_depositor - `depositor`: defines the deposit addresses from the proposals.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryDepositRequest: (sg_proposal_id?: Opt<WeakUint64Str>, sa_depositor?: Opt<WeakAccountAddr>) => EncodedCosmosGovQueryDepositRequest;
/**
 * Encodes a `QueryDepositResponse` protobuf message: the response type for the Query/Deposit RPC method.
 * @param g_deposit - `deposit`: defines the requested deposit.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryDepositResponse: (atu8_deposit?: Opt<Encoded<'/cosmos.gov.v1beta1.Deposit'>>) => EncodedCosmosGovQueryDepositResponse;
/**
 * Encodes a `QueryDepositsRequest` protobuf message: the request type for the Query/Deposits RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryDepositsRequest: (sg_proposal_id?: Opt<WeakUint64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosGovQueryDepositsRequest;
/**
 * Encodes a `QueryDepositsResponse` protobuf message: the response type for the Query/Deposits RPC method.
 * @param a_deposits - `deposits`: defines the requested deposits.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryDepositsResponse: (a_deposits?: Opt<Encoded<'/cosmos.gov.v1beta1.Deposit'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosGovQueryDepositsResponse;
/**
 * Encodes a `QueryTallyResultRequest` protobuf message: the request type for the Query/Tally RPC method.
 * @param sg_proposal_id - `proposal_id`: defines the unique id of the proposal.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryTallyResultRequest: (sg_proposal_id?: Opt<WeakUint64Str>) => EncodedCosmosGovQueryTallyResultRequest;
/**
 * Encodes a `QueryTallyResultResponse` protobuf message: the response type for the Query/Tally RPC method.
 * @param g_tally - `tally`: defines the requested tally.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosGovQueryTallyResultResponse: (atu8_tally?: Opt<Encoded<'/cosmos.gov.v1beta1.TallyResult'>>) => EncodedCosmosGovQueryTallyResultResponse;
/**
 * A decoded protobuf QueryProposalRequest message
 *
 * Alias for: proposal_id - defines the unique id of the proposal.
 */
export type DecodedCosmosGovQueryProposalRequest = [
    sg_proposal_id?: CwUint64
];
/**
 * Decodes a protobuf QueryProposalRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryProposalRequest}
 */
export declare const decodeCosmosGovQueryProposalRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryProposalRequest;
/**
 * A decoded protobuf QueryProposal message
 *
 * Alias for: proposal -
 */
export type DecodedCosmosGovQueryProposalResponse = [
    a_proposal?: DecodedCosmosGovProposal
];
/**
 * Decodes a protobuf QueryProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryProposalResponse}
 */
export declare const decodeCosmosGovQueryProposalResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryProposalResponse;
/**
 * A decoded protobuf QueryProposalsRequest message
 *
 * Tuple where:
 *   - 0: proposal_status - defines the status of the proposals.
 *   - 1: voter - defines the voter address for the proposals.
 *   - 2: depositor - defines the deposit addresses from the proposals.
 *   - 3: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosGovQueryProposalsRequest = [
    xc_proposal_status?: ProtoEnumCosmosGovProposalStatus,
    sa_voter?: CwAccountAddr,
    sa_depositor?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryProposalsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryProposalsRequest}
 */
export declare const decodeCosmosGovQueryProposalsRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryProposalsRequest;
/**
 * A decoded protobuf QueryProposals message
 *
 * Tuple where:
 *   - 0: proposals - defines all the requested governance proposals.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosGovQueryProposalsResponse = [
    a_proposals?: DecodedCosmosGovProposal[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryProposals message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryProposalsResponse}
 */
export declare const decodeCosmosGovQueryProposalsResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryProposalsResponse;
/**
 * A decoded protobuf QueryVoteRequest message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - defines the voter address for the proposals.
 */
export type DecodedCosmosGovQueryVoteRequest = [
    sg_proposal_id?: CwUint64,
    sa_voter?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryVoteRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryVoteRequest}
 */
export declare const decodeCosmosGovQueryVoteRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryVoteRequest;
/**
 * A decoded protobuf QueryVote message
 *
 * Alias for: vote - defines the queried vote.
 */
export type DecodedCosmosGovQueryVoteResponse = [
    a_vote?: DecodedCosmosGovVote
];
/**
 * Decodes a protobuf QueryVote message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryVoteResponse}
 */
export declare const decodeCosmosGovQueryVoteResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryVoteResponse;
/**
 * A decoded protobuf QueryVotesRequest message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosGovQueryVotesRequest = [
    sg_proposal_id?: CwUint64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryVotesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryVotesRequest}
 */
export declare const decodeCosmosGovQueryVotesRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryVotesRequest;
/**
 * A decoded protobuf QueryVotes message
 *
 * Tuple where:
 *   - 0: votes - defines the queried votes.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosGovQueryVotesResponse = [
    a_votes?: DecodedCosmosGovVote[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryVotes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryVotesResponse}
 */
export declare const decodeCosmosGovQueryVotesResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryVotesResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Alias for: params_type - defines which parameters to query for, can be one of "voting", "tallying" or "deposit".
 */
export type DecodedCosmosGovQueryParamsRequest = [
    s_params_type?: string
];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryParamsRequest}
 */
export declare const decodeCosmosGovQueryParamsRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryParamsRequest;
/**
 * A decoded protobuf QueryParams message
 *
 * Tuple where:
 *   - 0: voting_params - defines the parameters related to voting.
 *   - 1: deposit_params - defines the parameters related to deposit.
 *   - 2: tally_params - defines the parameters related to tally.
 */
export type DecodedCosmosGovQueryParamsResponse = [
    a_voting_params?: DecodedCosmosGovVotingParams,
    a_deposit_params?: DecodedCosmosGovDepositParams,
    a_tally_params?: DecodedCosmosGovTallyParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryParamsResponse}
 */
export declare const decodeCosmosGovQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryParamsResponse;
/**
 * A decoded protobuf QueryDepositRequest message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: depositor - defines the deposit addresses from the proposals.
 */
export type DecodedCosmosGovQueryDepositRequest = [
    sg_proposal_id?: CwUint64,
    sa_depositor?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryDepositRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryDepositRequest}
 */
export declare const decodeCosmosGovQueryDepositRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryDepositRequest;
/**
 * A decoded protobuf QueryDeposit message
 *
 * Alias for: deposit - defines the requested deposit.
 */
export type DecodedCosmosGovQueryDepositResponse = [
    a_deposit?: DecodedCosmosGovDeposit
];
/**
 * Decodes a protobuf QueryDeposit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryDepositResponse}
 */
export declare const decodeCosmosGovQueryDepositResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryDepositResponse;
/**
 * A decoded protobuf QueryDepositsRequest message
 *
 * Tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosGovQueryDepositsRequest = [
    sg_proposal_id?: CwUint64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryDepositsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryDepositsRequest}
 */
export declare const decodeCosmosGovQueryDepositsRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryDepositsRequest;
/**
 * A decoded protobuf QueryDeposits message
 *
 * Tuple where:
 *   - 0: deposits - defines the requested deposits.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosGovQueryDepositsResponse = [
    a_deposits?: DecodedCosmosGovDeposit[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryDeposits message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryDepositsResponse}
 */
export declare const decodeCosmosGovQueryDepositsResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryDepositsResponse;
/**
 * A decoded protobuf QueryTallyResultRequest message
 *
 * Alias for: proposal_id - defines the unique id of the proposal.
 */
export type DecodedCosmosGovQueryTallyResultRequest = [
    sg_proposal_id?: CwUint64
];
/**
 * Decodes a protobuf QueryTallyResultRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryTallyResultRequest}
 */
export declare const decodeCosmosGovQueryTallyResultRequest: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryTallyResultRequest;
/**
 * A decoded protobuf QueryTallyResult message
 *
 * Alias for: tally - defines the requested tally.
 */
export type DecodedCosmosGovQueryTallyResultResponse = [
    a_tally?: DecodedCosmosGovTallyResult
];
/**
 * Decodes a protobuf QueryTallyResult message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovQueryTallyResultResponse}
 */
export declare const decodeCosmosGovQueryTallyResultResponse: (atu8_payload: Uint8Array) => DecodedCosmosGovQueryTallyResultResponse;
/**
 * Destructures the fields of a {@link CosmosGovQueryProposalRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 */
export declare const destructCosmosGovQueryProposalRequest: (g_struct: CosmosGovQueryProposalRequest) => [proposal_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PROPOSAL_REQUEST = "/cosmos.gov.v1beta1.QueryProposalRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryProposalRequest` - the request type for the Query/Proposal RPC method.
 */
export type CosmosGovQueryProposalRequest = {
    proposal_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryProposalResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal -
 */
export declare const destructCosmosGovQueryProposalResponse: (g_struct: CosmosGovQueryProposalResponse) => [proposal?: CosmosGovProposal];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PROPOSAL_RESPONSE = "/cosmos.gov.v1beta1.QueryProposalResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryProposalResponse` - the response type for the Query/Proposal RPC method.
 */
export type CosmosGovQueryProposalResponse = {
    proposal?: CosmosGovProposal | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryProposalsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_status - defines the status of the proposals.
 *   - 1: voter - defines the voter address for the proposals.
 *   - 2: depositor - defines the deposit addresses from the proposals.
 *   - 3: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosGovQueryProposalsRequest: (g_struct: CosmosGovQueryProposalsRequest) => [proposal_status?: JsonEnumCosmosGovProposalStatus, voter?: CwAccountAddr, depositor?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PROPOSALS_REQUEST = "/cosmos.gov.v1beta1.QueryProposalsRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryProposalsRequest` - the request type for the Query/Proposals RPC method.
 */
export type CosmosGovQueryProposalsRequest = {
    proposal_status?: JsonEnumCosmosGovProposalStatus | undefined;
    voter?: CwAccountAddr | undefined;
    depositor?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryProposalsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposals - defines all the requested governance proposals.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosGovQueryProposalsResponse: (g_struct: CosmosGovQueryProposalsResponse) => [proposals?: CosmosGovProposal[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PROPOSALS_RESPONSE = "/cosmos.gov.v1beta1.QueryProposalsResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryProposalsResponse` - the response type for the Query/Proposals RPC method.
 */
export type CosmosGovQueryProposalsResponse = {
    proposals?: CosmosGovProposal[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryVoteRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: voter - defines the voter address for the proposals.
 */
export declare const destructCosmosGovQueryVoteRequest: (g_struct: CosmosGovQueryVoteRequest) => [proposal_id?: CwUint64, voter?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_VOTE_REQUEST = "/cosmos.gov.v1beta1.QueryVoteRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryVoteRequest` - the request type for the Query/Vote RPC method.
 */
export type CosmosGovQueryVoteRequest = {
    proposal_id?: CwUint64 | undefined;
    voter?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryVoteResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: vote - defines the queried vote.
 */
export declare const destructCosmosGovQueryVoteResponse: (g_struct: CosmosGovQueryVoteResponse) => [vote?: CosmosGovVote];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_VOTE_RESPONSE = "/cosmos.gov.v1beta1.QueryVoteResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryVoteResponse` - the response type for the Query/Vote RPC method.
 */
export type CosmosGovQueryVoteResponse = {
    vote?: CosmosGovVote | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryVotesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosGovQueryVotesRequest: (g_struct: CosmosGovQueryVotesRequest) => [proposal_id?: CwUint64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_VOTES_REQUEST = "/cosmos.gov.v1beta1.QueryVotesRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryVotesRequest` - the request type for the Query/Votes RPC method.
 */
export type CosmosGovQueryVotesRequest = {
    proposal_id?: CwUint64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryVotesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: votes - defines the queried votes.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosGovQueryVotesResponse: (g_struct: CosmosGovQueryVotesResponse) => [votes?: CosmosGovVote[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_VOTES_RESPONSE = "/cosmos.gov.v1beta1.QueryVotesResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryVotesResponse` - the response type for the Query/Votes RPC method.
 */
export type CosmosGovQueryVotesResponse = {
    votes?: CosmosGovVote[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params_type - defines which parameters to query for, can be one of "voting", "tallying" or "deposit".
 */
export declare const destructCosmosGovQueryParamsRequest: (g_struct: CosmosGovQueryParamsRequest) => [params_type?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PARAMS_REQUEST = "/cosmos.gov.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type CosmosGovQueryParamsRequest = {
    params_type?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: voting_params - defines the parameters related to voting.
 *   - 1: deposit_params - defines the parameters related to deposit.
 *   - 2: tally_params - defines the parameters related to tally.
 */
export declare const destructCosmosGovQueryParamsResponse: (g_struct: CosmosGovQueryParamsResponse) => [voting_params?: CosmosGovVotingParams, deposit_params?: CosmosGovDepositParams, tally_params?: CosmosGovTallyParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_PARAMS_RESPONSE = "/cosmos.gov.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type CosmosGovQueryParamsResponse = {
    voting_params?: CosmosGovVotingParams | undefined;
    deposit_params?: CosmosGovDepositParams | undefined;
    tally_params?: CosmosGovTallyParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryDepositRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: depositor - defines the deposit addresses from the proposals.
 */
export declare const destructCosmosGovQueryDepositRequest: (g_struct: CosmosGovQueryDepositRequest) => [proposal_id?: CwUint64, depositor?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_DEPOSIT_REQUEST = "/cosmos.gov.v1beta1.QueryDepositRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryDepositRequest` - the request type for the Query/Deposit RPC method.
 */
export type CosmosGovQueryDepositRequest = {
    proposal_id?: CwUint64 | undefined;
    depositor?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryDepositResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deposit - defines the requested deposit.
 */
export declare const destructCosmosGovQueryDepositResponse: (g_struct: CosmosGovQueryDepositResponse) => [deposit?: CosmosGovDeposit];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_DEPOSIT_RESPONSE = "/cosmos.gov.v1beta1.QueryDepositResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryDepositResponse` - the response type for the Query/Deposit RPC method.
 */
export type CosmosGovQueryDepositResponse = {
    deposit?: CosmosGovDeposit | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryDepositsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosGovQueryDepositsRequest: (g_struct: CosmosGovQueryDepositsRequest) => [proposal_id?: CwUint64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_DEPOSITS_REQUEST = "/cosmos.gov.v1beta1.QueryDepositsRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryDepositsRequest` - the request type for the Query/Deposits RPC method.
 */
export type CosmosGovQueryDepositsRequest = {
    proposal_id?: CwUint64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryDepositsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deposits - defines the requested deposits.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosGovQueryDepositsResponse: (g_struct: CosmosGovQueryDepositsResponse) => [deposits?: CosmosGovDeposit[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_DEPOSITS_RESPONSE = "/cosmos.gov.v1beta1.QueryDepositsResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryDepositsResponse` - the response type for the Query/Deposits RPC method.
 */
export type CosmosGovQueryDepositsResponse = {
    deposits?: CosmosGovDeposit[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryTallyResultRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: proposal_id - defines the unique id of the proposal.
 */
export declare const destructCosmosGovQueryTallyResultRequest: (g_struct: CosmosGovQueryTallyResultRequest) => [proposal_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_TALLY_RESULT_REQUEST = "/cosmos.gov.v1beta1.QueryTallyResultRequest";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryTallyResultRequest` - the request type for the Query/Tally RPC method.
 */
export type CosmosGovQueryTallyResultRequest = {
    proposal_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosGovQueryTallyResultResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tally - defines the requested tally.
 */
export declare const destructCosmosGovQueryTallyResultResponse: (g_struct: CosmosGovQueryTallyResultResponse) => [tally?: CosmosGovTallyResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_GOV_QUERY_TALLY_RESULT_RESPONSE = "/cosmos.gov.v1beta1.QueryTallyResultResponse";
/**
 * JSON serialization of `cosmos.gov.v1beta1.QueryTallyResultResponse` - the response type for the Query/Tally RPC method.
 */
export type CosmosGovQueryTallyResultResponse = {
    tally?: CosmosGovTallyResult | undefined;
};
