import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedCosmosMintModuleModule = Encoded<'/cosmos.mint.module.v1.Module'>;
/**
 * Encodes a `Module` protobuf message: the config object of the mint module.
 * @param s_fee_collector_name - `fee_collector_name`:
 * @param s_authority - `authority`: defines the custom module authority. If not set, defaults to the governance module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintModuleModule: (s_fee_collector_name?: Opt<string>, s_authority?: Opt<string>) => EncodedCosmosMintModuleModule;
/**
 * A decoded protobuf Module message
 *
 * Tuple where:
 *   - 0: fee_collector_name -
 *   - 1: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export type DecodedCosmosMintModuleModule = [
    s_fee_collector_name?: string,
    s_authority?: string
];
/**
 * Decodes a protobuf Module message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintModuleModule}
 */
export declare const decodeCosmosMintModuleModule: (atu8_payload: Uint8Array) => DecodedCosmosMintModuleModule;
/**
 * Destructures the fields of a {@link CosmosMintModuleModule} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_collector_name -
 *   - 1: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export declare const destructCosmosMintModuleModule: (g_struct: CosmosMintModuleModule) => [fee_collector_name?: string, authority?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_MODULE_MODULE = "/cosmos.mint.module.v1.Module";
/**
 * JSON serialization of `cosmos.mint.module.v1.Module` - the config object of the mint module.
 */
export type CosmosMintModuleModule = {
    fee_collector_name?: string | undefined;
    authority?: string | undefined;
};
