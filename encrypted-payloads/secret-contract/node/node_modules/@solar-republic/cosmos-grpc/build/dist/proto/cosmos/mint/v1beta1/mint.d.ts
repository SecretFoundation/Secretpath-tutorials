import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedCosmosMintMinter = Encoded<'/cosmos.mint.v1beta1.Minter'>;
export type EncodedCosmosMintParams = Encoded<'/cosmos.mint.v1beta1.Params'>;
/**
 * Encodes a `Minter` protobuf message: represents the minting state.
 * @param s_inflation - `inflation`: current annual inflation rate
 * @param s_annual_provisions - `annual_provisions`: current annual expected provisions
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintMinter: (s_inflation?: Opt<string>, s_annual_provisions?: Opt<string>) => EncodedCosmosMintMinter;
/**
 * Encodes a `Params` protobuf message: defines the parameters for the x/mint module.
 * @param s_mint_denom - `mint_denom`: type of coin to mint
 * @param s_inflation_rate_change - `inflation_rate_change`: maximum annual change in inflation rate
 * @param s_inflation_max - `inflation_max`: maximum inflation rate
 * @param s_inflation_min - `inflation_min`: minimum inflation rate
 * @param s_goal_bonded - `goal_bonded`: goal of percent bonded atoms
 * @param sg_blocks_per_year - `blocks_per_year`: expected blocks per year
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintParams: (s_mint_denom?: Opt<string>, s_inflation_rate_change?: Opt<string>, s_inflation_max?: Opt<string>, s_inflation_min?: Opt<string>, s_goal_bonded?: Opt<string>, sg_blocks_per_year?: Opt<WeakUint64Str>) => EncodedCosmosMintParams;
/**
 * A decoded protobuf Minter message
 *
 * Tuple where:
 *   - 0: inflation - current annual inflation rate
 *   - 1: annual_provisions - current annual expected provisions
 */
export type DecodedCosmosMintMinter = [
    s_inflation?: string,
    s_annual_provisions?: string
];
/**
 * Decodes a protobuf Minter message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintMinter}
 */
export declare const decodeCosmosMintMinter: (atu8_payload: Uint8Array) => DecodedCosmosMintMinter;
/**
 * A decoded protobuf Params message
 *
 * Tuple where:
 *   - 0: mint_denom - type of coin to mint
 *   - 1: inflation_rate_change - maximum annual change in inflation rate
 *   - 2: inflation_max - maximum inflation rate
 *   - 3: inflation_min - minimum inflation rate
 *   - 4: goal_bonded - goal of percent bonded atoms
 *   - 5: blocks_per_year - expected blocks per year
 */
export type DecodedCosmosMintParams = [
    s_mint_denom?: string,
    s_inflation_rate_change?: string,
    s_inflation_max?: string,
    s_inflation_min?: string,
    s_goal_bonded?: string,
    sg_blocks_per_year?: CwUint64
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintParams}
 */
export declare const decodeCosmosMintParams: (atu8_payload: Uint8Array) => DecodedCosmosMintParams;
/**
 * Destructures the fields of a {@link CosmosMintParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: mint_denom - type of coin to mint
 *   - 1: inflation_rate_change - maximum annual change in inflation rate
 *   - 2: inflation_max - maximum inflation rate
 *   - 3: inflation_min - minimum inflation rate
 *   - 4: goal_bonded - goal of percent bonded atoms
 *   - 5: blocks_per_year - expected blocks per year
 */
export declare const destructCosmosMintParams: (g_struct: CosmosMintParams) => [mint_denom?: string, inflation_rate_change?: string, inflation_max?: string, inflation_min?: string, goal_bonded?: string, blocks_per_year?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_PARAMS = "/cosmos.mint.v1beta1.Params";
/**
 * JSON serialization of `cosmos.mint.v1beta1.Params` - defines the parameters for the x/mint module.
 */
export type CosmosMintParams = {
    mint_denom?: string | undefined;
    inflation_rate_change?: string | undefined;
    inflation_max?: string | undefined;
    inflation_min?: string | undefined;
    goal_bonded?: string | undefined;
    blocks_per_year?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosMintMinter} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inflation - current annual inflation rate
 *   - 1: annual_provisions - current annual expected provisions
 */
export declare const destructCosmosMintMinter: (g_struct: CosmosMintMinter) => [inflation?: string, annual_provisions?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_MINTER = "/cosmos.mint.v1beta1.Minter";
/**
 * JSON serialization of `cosmos.mint.v1beta1.Minter` - represents the minting state.
 */
export type CosmosMintMinter = {
    inflation?: string | undefined;
    annual_provisions?: string | undefined;
};
