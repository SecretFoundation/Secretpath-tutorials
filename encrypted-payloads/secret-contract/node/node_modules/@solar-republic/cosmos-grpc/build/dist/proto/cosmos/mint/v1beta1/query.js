import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeCosmosMintParams } from './mint.js';
const SR_LCD_COSMOS_MINT_QUERY = '/cosmos/mint/v1beta1/';
/**
 * Returns the total set of minting parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryCosmosMintParams = restful_grpc(() => [SR_LCD_COSMOS_MINT_QUERY + 'params']);
/**
 * Returns the current minting inflation value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export const queryCosmosMintInflation = restful_grpc(() => [SR_LCD_COSMOS_MINT_QUERY + 'inflation']);
/**
 * Current minting annual provisions value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export const queryCosmosMintAnnualProvisions = restful_grpc(() => [SR_LCD_COSMOS_MINT_QUERY + 'annual_provisions']);
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `QueryInflationRequest` protobuf message: the request type for the Query/Inflation RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryInflationRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryInflationResponse` protobuf message: the response type for the Query/Inflation RPC method.
 * @param atu8_inflation - `inflation`: the current minting inflation value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryInflationResponse = (atu8_inflation) => Protobuf() // ...
    .b(atu8_inflation) // bytes inflation = 1
    .o;
/**
 * Encodes a `QueryAnnualProvisionsRequest` protobuf message: the request type for the Query/AnnualProvisions RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryAnnualProvisionsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryAnnualProvisionsResponse` protobuf message: the response type for the Query/AnnualProvisions RPC method.
 * @param atu8_annual_provisions - `annual_provisions`: the current minting annual provisions value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosMintQueryAnnualProvisionsResponse = (atu8_annual_provisions) => Protobuf() // ...
    .b(atu8_annual_provisions) // bytes annual_provisions = 1
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryParamsRequest}
 */
export const decodeCosmosMintQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryParamsResponse}
 */
export const decodeCosmosMintQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosMintParams]);
/**
 * Decodes a protobuf QueryInflationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryInflationRequest}
 */
export const decodeCosmosMintQueryInflationRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryInflation message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryInflationResponse}
 */
export const decodeCosmosMintQueryInflationResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf QueryAnnualProvisionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryAnnualProvisionsRequest}
 */
export const decodeCosmosMintQueryAnnualProvisionsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryAnnualProvisions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryAnnualProvisionsResponse}
 */
export const decodeCosmosMintQueryAnnualProvisionsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link CosmosMintQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosMintQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_PARAMS_REQUEST = '/cosmos.mint.v1beta1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link CosmosMintQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructCosmosMintQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_PARAMS_RESPONSE = '/cosmos.mint.v1beta1.QueryParamsResponse';
/**
 * Destructures the fields of a {@link CosmosMintQueryInflationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosMintQueryInflationRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_INFLATION_REQUEST = '/cosmos.mint.v1beta1.QueryInflationRequest';
/**
 * Destructures the fields of a {@link CosmosMintQueryInflationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export const destructCosmosMintQueryInflationResponse = (g_struct) => [safe_base64_to_bytes(g_struct.inflation)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_INFLATION_RESPONSE = '/cosmos.mint.v1beta1.QueryInflationResponse';
/**
 * Destructures the fields of a {@link CosmosMintQueryAnnualProvisionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosMintQueryAnnualProvisionsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_ANNUAL_PROVISIONS_REQUEST = '/cosmos.mint.v1beta1.QueryAnnualProvisionsRequest';
/**
 * Destructures the fields of a {@link CosmosMintQueryAnnualProvisionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export const destructCosmosMintQueryAnnualProvisionsResponse = (g_struct) => [safe_base64_to_bytes(g_struct.annual_provisions)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_ANNUAL_PROVISIONS_RESPONSE = '/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse';
//# sourceMappingURL=query.js.map