/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf, any } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `ParameterChangeProposal` protobuf message wrapped in the `Any` container: defines a proposal to change one or more parameters.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_changes - `changes`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyParameterChangeProposal = (s_title, s_description, a_changes) => any('/cosmos.params.v1beta1.ParameterChangeProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_changes) // ParamChange[] changes = 3
    .o);
/**
 * Encodes a `ParameterChangeProposal` protobuf message: defines a proposal to change one or more parameters.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_changes - `changes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosParamsParameterChangeProposal = (s_title, s_description, a_changes) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_changes) // ParamChange[] changes = 3
    .o;
/**
 * Encodes a `ParamChange` protobuf message: defines an individual parameter change, for use in ParameterChangeProposal.
 * @param s_subspace - `subspace`:
 * @param s_key - `key`:
 * @param s_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosParamsParamChange = (s_subspace, s_key, s_value) => Protobuf() // ...
    .s(s_subspace) // string subspace = 1
    .s(s_key) // string key = 2
    .s(s_value) // string value = 3
    .o;
/**
 * Decodes a protobuf ParameterChangeProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosParamsParameterChangeProposal}
 */
export const decodeCosmosParamsParameterChangeProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeCosmosParamsParamChange]);
/**
 * Decodes a protobuf ParamChange message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosParamsParamChange}
 */
export const decodeCosmosParamsParamChange = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Destructures the fields of a {@link CosmosParamsParamChange} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: subspace -
 *   - 1: key -
 *   - 2: value -
 */
export const destructCosmosParamsParamChange = (g_struct) => [g_struct.subspace, g_struct.key, g_struct.value];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_PARAMS_PARAM_CHANGE = '/cosmos.params.v1beta1.ParamChange';
/**
 * Destructures the fields of a {@link CosmosParamsParameterChangeProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: changes -
 */
export const destructCosmosParamsParameterChangeProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.changes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_PARAMS_PARAMETER_CHANGE_PROPOSAL = '/cosmos.params.v1beta1.ParameterChangeProposal';
//# sourceMappingURL=params.js.map