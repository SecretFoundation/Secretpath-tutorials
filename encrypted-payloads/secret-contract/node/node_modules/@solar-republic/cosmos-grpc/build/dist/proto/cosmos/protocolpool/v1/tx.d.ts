import type { WeakAccountAddr, SlimCoin, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../base/v1beta1/coin.js';
export type EncodedCosmosProtocolpoolMsgFundCommunityPool = Encoded<'/cosmos.protocolpool.v1.MsgFundCommunityPool'>;
export type EncodedCosmosProtocolpoolMsgFundCommunityPoolResponse = Encoded<'/cosmos.protocolpool.v1.MsgFundCommunityPoolResponse'>;
export type EncodedCosmosProtocolpoolMsgCommunityPoolSpend = Encoded<'/cosmos.protocolpool.v1.MsgCommunityPoolSpend'>;
export type EncodedCosmosProtocolpoolMsgCommunityPoolSpendResponse = Encoded<'/cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse'>;
/**
 * Encodes a `MsgFundCommunityPool` protobuf message: allows an account to directly fund the community pool.
 * @param a_amounts - `amount`:
 * @param sa_depositor - `depositor`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosProtocolpoolMsgFundCommunityPool: (a_amounts?: Opt<SlimCoin[]>, sa_depositor?: Opt<WeakAccountAddr>) => EncodedCosmosProtocolpoolMsgFundCommunityPool;
/**
 * Encodes a `MsgFundCommunityPoolResponse` protobuf message: defines the Msg/FundCommunityPool response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosProtocolpoolMsgFundCommunityPoolResponse: () => EncodedCosmosProtocolpoolMsgFundCommunityPoolResponse;
/**
 * Encodes a `MsgCommunityPoolSpend` protobuf message: defines a message for sending tokens from the community pool to another account. This message is typically executed via a governance proposal with the governance module being the executing authority. Since: cosmos-sdk 0.50
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param sa_recipient - `recipient`:
 * @param a_amounts - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosProtocolpoolMsgCommunityPoolSpend: (s_authority?: Opt<string>, sa_recipient?: Opt<WeakAccountAddr>, a_amounts?: Opt<SlimCoin[]>) => EncodedCosmosProtocolpoolMsgCommunityPoolSpend;
/**
 * Encodes a `MsgCommunityPoolSpendResponse` protobuf message: defines the response to executing a MsgCommunityPoolSpend message. Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosProtocolpoolMsgCommunityPoolSpendResponse: () => EncodedCosmosProtocolpoolMsgCommunityPoolSpendResponse;
/**
 * A decoded protobuf FundCommunityPool message
 *
 * Tuple where:
 *   - 0: amount -
 *   - 1: depositor -
 */
export type DecodedCosmosProtocolpoolMsgFundCommunityPool = [
    a_amount?: [
        string,
        string
    ][],
    sa_depositor?: CwAccountAddr
];
/**
 * Decodes a protobuf FundCommunityPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosProtocolpoolMsgFundCommunityPool}
 */
export declare const decodeCosmosProtocolpoolMsgFundCommunityPool: (atu8_payload: Uint8Array) => DecodedCosmosProtocolpoolMsgFundCommunityPool;
/**
 * A decoded protobuf FundCommunityPool message
 *
 * Tuple where:
 */
export type DecodedCosmosProtocolpoolMsgFundCommunityPoolResponse = [];
/**
 * Decodes a protobuf FundCommunityPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosProtocolpoolMsgFundCommunityPoolResponse}
 */
export declare const decodeCosmosProtocolpoolMsgFundCommunityPoolResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CommunityPoolSpend message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: recipient -
 *   - 2: amount -
 */
export type DecodedCosmosProtocolpoolMsgCommunityPoolSpend = [
    s_authority?: string,
    sa_recipient?: CwAccountAddr,
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf CommunityPoolSpend message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosProtocolpoolMsgCommunityPoolSpend}
 */
export declare const decodeCosmosProtocolpoolMsgCommunityPoolSpend: (atu8_payload: Uint8Array) => DecodedCosmosProtocolpoolMsgCommunityPoolSpend;
/**
 * A decoded protobuf CommunityPoolSpend message
 *
 * Tuple where:
 */
export type DecodedCosmosProtocolpoolMsgCommunityPoolSpendResponse = [];
/**
 * Decodes a protobuf CommunityPoolSpend message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosProtocolpoolMsgCommunityPoolSpendResponse}
 */
export declare const decodeCosmosProtocolpoolMsgCommunityPoolSpendResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link CosmosProtocolpoolMsgFundCommunityPool} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount -
 *   - 1: depositor -
 */
export declare const destructCosmosProtocolpoolMsgFundCommunityPool: (g_struct: CosmosProtocolpoolMsgFundCommunityPool) => [amount?: CosmosBaseCoin[], depositor?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_PROTOCOLPOOL_MSG_FUND_COMMUNITY_POOL = "/cosmos.protocolpool.v1.MsgFundCommunityPool";
/**
 * JSON serialization of `cosmos.protocolpool.v1.MsgFundCommunityPool` - allows an account to directly fund the community pool.
 */
export type CosmosProtocolpoolMsgFundCommunityPool = {
    amount?: CosmosBaseCoin[] | undefined;
    depositor?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosProtocolpoolMsgFundCommunityPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosProtocolpoolMsgFundCommunityPoolResponse: (g_struct: CosmosProtocolpoolMsgFundCommunityPoolResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_PROTOCOLPOOL_MSG_FUND_COMMUNITY_POOL_RESPONSE = "/cosmos.protocolpool.v1.MsgFundCommunityPoolResponse";
/**
 * JSON serialization of `cosmos.protocolpool.v1.MsgFundCommunityPoolResponse` - defines the Msg/FundCommunityPool response type.
 */
export type CosmosProtocolpoolMsgFundCommunityPoolResponse = {};
/**
 * Destructures the fields of a {@link CosmosProtocolpoolMsgCommunityPoolSpend} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: recipient -
 *   - 2: amount -
 */
export declare const destructCosmosProtocolpoolMsgCommunityPoolSpend: (g_struct: CosmosProtocolpoolMsgCommunityPoolSpend) => [authority?: string, recipient?: CwAccountAddr, amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_PROTOCOLPOOL_MSG_COMMUNITY_POOL_SPEND = "/cosmos.protocolpool.v1.MsgCommunityPoolSpend";
/**
 * JSON serialization of `cosmos.protocolpool.v1.MsgCommunityPoolSpend` - defines a message for sending tokens from the community pool to another account. This message is typically executed via a governance proposal with the governance module being the executing authority. Since: cosmos-sdk 0.50
 */
export type CosmosProtocolpoolMsgCommunityPoolSpend = {
    authority?: string | undefined;
    recipient?: CwAccountAddr | undefined;
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosProtocolpoolMsgCommunityPoolSpendResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosProtocolpoolMsgCommunityPoolSpendResponse: (g_struct: CosmosProtocolpoolMsgCommunityPoolSpendResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_PROTOCOLPOOL_MSG_COMMUNITY_POOL_SPEND_RESPONSE = "/cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse";
/**
 * JSON serialization of `cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse` - defines the response to executing a MsgCommunityPoolSpend message. Since: cosmos-sdk 0.50
 */
export type CosmosProtocolpoolMsgCommunityPoolSpendResponse = {};
