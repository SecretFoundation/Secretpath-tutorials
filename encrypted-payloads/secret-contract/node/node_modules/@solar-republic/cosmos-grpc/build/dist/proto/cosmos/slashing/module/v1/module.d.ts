import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedCosmosSlashingModuleModule = Encoded<'/cosmos.slashing.module.v1.Module'>;
/**
 * Encodes a `Module` protobuf message: the config object of the slashing module.
 * @param s_authority - `authority`: defines the custom module authority. If not set, defaults to the governance module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingModuleModule: (s_authority?: Opt<string>) => EncodedCosmosSlashingModuleModule;
/**
 * A decoded protobuf Module message
 *
 * Alias for: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export type DecodedCosmosSlashingModuleModule = [
    s_authority?: string
];
/**
 * Decodes a protobuf Module message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingModuleModule}
 */
export declare const decodeCosmosSlashingModuleModule: (atu8_payload: Uint8Array) => DecodedCosmosSlashingModuleModule;
/**
 * Destructures the fields of a {@link CosmosSlashingModuleModule} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - defines the custom module authority. If not set, defaults to the governance module.
 */
export declare const destructCosmosSlashingModuleModule: (g_struct: CosmosSlashingModuleModule) => [authority?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_MODULE_MODULE = "/cosmos.slashing.module.v1.Module";
/**
 * JSON serialization of `cosmos.slashing.module.v1.Module` - the config object of the slashing module.
 */
export type CosmosSlashingModuleModule = {
    authority?: string | undefined;
};
