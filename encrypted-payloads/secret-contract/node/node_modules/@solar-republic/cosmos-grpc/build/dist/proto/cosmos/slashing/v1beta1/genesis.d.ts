import type { WeakInt64Str, WeakAccountAddr, CwInt64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosSlashingParams, DecodedCosmosSlashingParams, CosmosSlashingValidatorSigningInfo, DecodedCosmosSlashingValidatorSigningInfo } from './slashing.js';
export type EncodedCosmosSlashingGenesisState = Encoded<'/cosmos.slashing.v1beta1.GenesisState'>;
export type EncodedCosmosSlashingSigningInfo = Encoded<'/cosmos.slashing.v1beta1.SigningInfo'>;
export type EncodedCosmosSlashingValidatorMissedBlocks = Encoded<'/cosmos.slashing.v1beta1.ValidatorMissedBlocks'>;
export type EncodedCosmosSlashingMissedBlock = Encoded<'/cosmos.slashing.v1beta1.MissedBlock'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the slashing module's genesis state.
 * @param g_params - `params`: defines all the parameters of the module.
 * @param a_signing_infos - `signing_infos`: represents a map between validator addresses and their signing infos.
 * @param a_missed_blocks - `missed_blocks`: represents a map between validator addresses and their missed blocks.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingGenesisState: (atu8_params?: Opt<Encoded<'/cosmos.slashing.v1beta1.Params'>>, a_signing_infos?: Opt<Encoded<'/cosmos.slashing.v1beta1.SigningInfo'>[]>, a_missed_blocks?: Opt<Encoded<'/cosmos.slashing.v1beta1.ValidatorMissedBlocks'>[]>) => EncodedCosmosSlashingGenesisState;
/**
 * Encodes a `SigningInfo` protobuf message: stores validator signing info of corresponding address.
 * @param sa_address - `address`: the validator address.
 * @param g_validator_signing_info - `validator_signing_info`: represents the signing info of this validator.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingSigningInfo: (sa_address?: Opt<WeakAccountAddr>, atu8_validator_signing_info?: Opt<Encoded<'/cosmos.slashing.v1beta1.ValidatorSigningInfo'>>) => EncodedCosmosSlashingSigningInfo;
/**
 * Encodes a `ValidatorMissedBlocks` protobuf message: contains array of missed blocks of corresponding address.
 * @param sa_address - `address`: the validator address.
 * @param a_missed_blocks - `missed_blocks`: an array of missed blocks by the validator.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingValidatorMissedBlocks: (sa_address?: Opt<WeakAccountAddr>, a_missed_blocks?: Opt<Encoded<'/cosmos.slashing.v1beta1.MissedBlock'>[]>) => EncodedCosmosSlashingValidatorMissedBlocks;
/**
 * Encodes a `MissedBlock` protobuf message: contains height and missed status as boolean.
 * @param sg_index - `index`: the height at which the block was missed.
 * @param b_missed - `missed`: the missed status.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingMissedBlock: (sg_index?: Opt<WeakInt64Str>, b_missed?: Opt<boolean | 0 | 1>) => EncodedCosmosSlashingMissedBlock;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: params - defines all the parameters of the module.
 *   - 1: signing_infos - represents a map between validator addresses and their signing infos.
 *   - 2: missed_blocks - represents a map between validator addresses and their missed blocks.
 */
export type DecodedCosmosSlashingGenesisState = [
    a_params?: DecodedCosmosSlashingParams,
    a_signing_infos?: DecodedCosmosSlashingSigningInfo[],
    a_missed_blocks?: DecodedCosmosSlashingValidatorMissedBlocks[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingGenesisState}
 */
export declare const decodeCosmosSlashingGenesisState: (atu8_payload: Uint8Array) => DecodedCosmosSlashingGenesisState;
/**
 * A decoded protobuf SigningInfo message
 *
 * Tuple where:
 *   - 0: address - the validator address.
 *   - 1: validator_signing_info - represents the signing info of this validator.
 */
export type DecodedCosmosSlashingSigningInfo = [
    sa_address?: CwAccountAddr,
    a_validator_signing_info?: DecodedCosmosSlashingValidatorSigningInfo
];
/**
 * Decodes a protobuf SigningInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingSigningInfo}
 */
export declare const decodeCosmosSlashingSigningInfo: (atu8_payload: Uint8Array) => DecodedCosmosSlashingSigningInfo;
/**
 * A decoded protobuf ValidatorMissedBlocks message
 *
 * Tuple where:
 *   - 0: address - the validator address.
 *   - 1: missed_blocks - an array of missed blocks by the validator.
 */
export type DecodedCosmosSlashingValidatorMissedBlocks = [
    sa_address?: CwAccountAddr,
    a_missed_blocks?: DecodedCosmosSlashingMissedBlock[]
];
/**
 * Decodes a protobuf ValidatorMissedBlocks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingValidatorMissedBlocks}
 */
export declare const decodeCosmosSlashingValidatorMissedBlocks: (atu8_payload: Uint8Array) => DecodedCosmosSlashingValidatorMissedBlocks;
/**
 * A decoded protobuf MissedBlock message
 *
 * Tuple where:
 *   - 0: index - the height at which the block was missed.
 *   - 1: missed - the missed status.
 */
export type DecodedCosmosSlashingMissedBlock = [
    sg_index?: CwInt64,
    b_missed?: 0 | 1
];
/**
 * Decodes a protobuf MissedBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingMissedBlock}
 */
export declare const decodeCosmosSlashingMissedBlock: (atu8_payload: Uint8Array) => DecodedCosmosSlashingMissedBlock;
/**
 * Destructures the fields of a {@link CosmosSlashingGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines all the parameters of the module.
 *   - 1: signing_infos - represents a map between validator addresses and their signing infos.
 *   - 2: missed_blocks - represents a map between validator addresses and their missed blocks.
 */
export declare const destructCosmosSlashingGenesisState: (g_struct: CosmosSlashingGenesisState) => [params?: CosmosSlashingParams, signing_infos?: CosmosSlashingSigningInfo[], missed_blocks?: CosmosSlashingValidatorMissedBlocks[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_GENESIS_STATE = "/cosmos.slashing.v1beta1.GenesisState";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.GenesisState` - defines the slashing module's genesis state.
 */
export type CosmosSlashingGenesisState = {
    params?: CosmosSlashingParams | undefined;
    signing_infos?: CosmosSlashingSigningInfo[] | undefined;
    missed_blocks?: CosmosSlashingValidatorMissedBlocks[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingSigningInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the validator address.
 *   - 1: validator_signing_info - represents the signing info of this validator.
 */
export declare const destructCosmosSlashingSigningInfo: (g_struct: CosmosSlashingSigningInfo) => [address?: CwAccountAddr, validator_signing_info?: CosmosSlashingValidatorSigningInfo];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_SIGNING_INFO = "/cosmos.slashing.v1beta1.SigningInfo";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.SigningInfo` - stores validator signing info of corresponding address.
 */
export type CosmosSlashingSigningInfo = {
    address?: CwAccountAddr | undefined;
    validator_signing_info?: CosmosSlashingValidatorSigningInfo | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingValidatorMissedBlocks} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the validator address.
 *   - 1: missed_blocks - an array of missed blocks by the validator.
 */
export declare const destructCosmosSlashingValidatorMissedBlocks: (g_struct: CosmosSlashingValidatorMissedBlocks) => [address?: CwAccountAddr, missed_blocks?: CosmosSlashingMissedBlock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_VALIDATOR_MISSED_BLOCKS = "/cosmos.slashing.v1beta1.ValidatorMissedBlocks";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.ValidatorMissedBlocks` - contains array of missed blocks of corresponding address.
 */
export type CosmosSlashingValidatorMissedBlocks = {
    address?: CwAccountAddr | undefined;
    missed_blocks?: CosmosSlashingMissedBlock[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingMissedBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: index - the height at which the block was missed.
 *   - 1: missed - the missed status.
 */
export declare const destructCosmosSlashingMissedBlock: (g_struct: CosmosSlashingMissedBlock) => [index?: CwInt64, missed?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_MISSED_BLOCK = "/cosmos.slashing.v1beta1.MissedBlock";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.MissedBlock` - contains height and missed status as boolean.
 */
export type CosmosSlashingMissedBlock = {
    index?: CwInt64 | undefined;
    missed?: boolean | undefined;
};
