import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, any, coin } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `StakeAuthorization` protobuf message wrapped in the `Any` container: defines authorization for delegate/undelegate/redelegate. Since: cosmos-sdk 0.43
 * @param a_max_tokens - `max_tokens`: specifies the maximum amount of tokens can be delegate to a validator. If it is empty, there is no spend limit and any amount of coins can be delegated.
 * @param g_allow_list - `allow_list`: specifies list of validator addresses to whom grantee can delegate tokens on behalf of granter's account.
 * @param g_deny_list - `deny_list`: specifies list of validator addresses to whom grantee can not delegate tokens.
 * @param xc_authorization_type - `authorization_type`: defines one of AuthorizationType.
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyStakeAuthorization = (a_max_tokens, atu8_allow_list, atu8_deny_list, xc_authorization_type) => any('/cosmos.staking.v1beta1.StakeAuthorization', Protobuf() // ...
    .b(coin(a_max_tokens)) // Coin max_tokens = 1
    .b(atu8_allow_list) // Validators allow_list = 2
    .b(atu8_deny_list) // Validators deny_list = 3
    .v(xc_authorization_type) // AuthorizationType authorization_type = 4
    .o);
/**
 * Encodes a `StakeAuthorization` protobuf message: defines authorization for delegate/undelegate/redelegate. Since: cosmos-sdk 0.43
 * @param a_max_tokens - `max_tokens`: specifies the maximum amount of tokens can be delegate to a validator. If it is empty, there is no spend limit and any amount of coins can be delegated.
 * @param g_allow_list - `allow_list`: specifies list of validator addresses to whom grantee can delegate tokens on behalf of granter's account.
 * @param g_deny_list - `deny_list`: specifies list of validator addresses to whom grantee can not delegate tokens.
 * @param xc_authorization_type - `authorization_type`: defines one of AuthorizationType.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStakingStakeAuthorization = (a_max_tokens, atu8_allow_list, atu8_deny_list, xc_authorization_type) => Protobuf() // ...
    .b(coin(a_max_tokens)) // Coin max_tokens = 1
    .b(atu8_allow_list) // Validators allow_list = 2
    .b(atu8_deny_list) // Validators deny_list = 3
    .v(xc_authorization_type) // AuthorizationType authorization_type = 4
    .o;
/**
 * Encodes a `Validators` protobuf message:
 * @param a_addresses - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStakingStakeAuthorizationValidators = (a_addresses) => Protobuf() // ...
    .S(a_addresses) // string[] address = 1
    .o;
/**
 * Decodes a protobuf StakeAuthorization message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStakingStakeAuthorization}
 */
export const decodeCosmosStakingStakeAuthorization = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 1], [decode_coin, decodeCosmosStakingStakeAuthorizationValidators, decodeCosmosStakingStakeAuthorizationValidators]);
/**
 * Decodes a protobuf Validators message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStakingStakeAuthorizationValidators}
 */
export const decodeCosmosStakingStakeAuthorizationValidators = (atu8_payload) => decode_protobuf(atu8_payload, [4]);
/**
 * Destructures the fields of a {@link CosmosStakingStakeAuthorization} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: max_tokens - specifies the maximum amount of tokens can be delegate to a validator. If it is empty, there is no spend limit and any amount of coins can be delegated.
 *   - 1: allow_list - specifies list of validator addresses to whom grantee can delegate tokens on behalf of granter's account.
 *   - 2: deny_list - specifies list of validator addresses to whom grantee can not delegate tokens.
 *   - 3: authorization_type - defines one of AuthorizationType.
 */
export const destructCosmosStakingStakeAuthorization = (g_struct) => [g_struct.max_tokens, g_struct.allow_list, g_struct.deny_list, g_struct.authorization_type];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STAKING_STAKE_AUTHORIZATION = '/cosmos.staking.v1beta1.StakeAuthorization';
/**
 * Destructures the fields of a {@link CosmosStakingStakeAuthorizationValidators} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export const destructCosmosStakingStakeAuthorizationValidators = (g_struct) => [g_struct.address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STAKING_STAKE_AUTHORIZATION_VALIDATORS = '/cosmos.staking.v1beta1.StakeAuthorization.Validators';
/**
 * Protobuf enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_UNSPECIFIED** - specifies an unknown authorization type
 *
 * Belongs to enum type {@link ProtoEnumCosmosStakingAuthorizationType}
 */
export const XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED = 0;
/**
 * JSON enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_UNSPECIFIED** - specifies an unknown authorization type
 *
 * Belongs to enum type {@link JsonEnumCosmosStakingAuthorizationType}
 */
export const SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED = 'AUTHORIZATION_TYPE_UNSPECIFIED';
/**
 * Protobuf enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_DELEGATE** - defines an authorization type for Msg/Delegate
 *
 * Belongs to enum type {@link ProtoEnumCosmosStakingAuthorizationType}
 */
export const XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE = 1;
/**
 * JSON enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_DELEGATE** - defines an authorization type for Msg/Delegate
 *
 * Belongs to enum type {@link JsonEnumCosmosStakingAuthorizationType}
 */
export const SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE = 'AUTHORIZATION_TYPE_DELEGATE';
/**
 * Protobuf enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_UNDELEGATE** - defines an authorization type for Msg/Undelegate
 *
 * Belongs to enum type {@link ProtoEnumCosmosStakingAuthorizationType}
 */
export const XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE = 2;
/**
 * JSON enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_UNDELEGATE** - defines an authorization type for Msg/Undelegate
 *
 * Belongs to enum type {@link JsonEnumCosmosStakingAuthorizationType}
 */
export const SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE = 'AUTHORIZATION_TYPE_UNDELEGATE';
/**
 * Protobuf enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_REDELEGATE** - defines an authorization type for Msg/BeginRedelegate
 *
 * Belongs to enum type {@link ProtoEnumCosmosStakingAuthorizationType}
 */
export const XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE = 3;
/**
 * JSON enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_REDELEGATE** - defines an authorization type for Msg/BeginRedelegate
 *
 * Belongs to enum type {@link JsonEnumCosmosStakingAuthorizationType}
 */
export const SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE = 'AUTHORIZATION_TYPE_REDELEGATE';
/**
 * Protobuf enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION** - defines an authorization type for Msg/MsgCancelUnbondingDelegation
 *
 * Belongs to enum type {@link ProtoEnumCosmosStakingAuthorizationType}
 */
export const XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION = 4;
/**
 * JSON enum value for `cosmos.staking.v1beta1.AuthorizationType`.
 *
 * **AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION** - defines an authorization type for Msg/MsgCancelUnbondingDelegation
 *
 * Belongs to enum type {@link JsonEnumCosmosStakingAuthorizationType}
 */
export const SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION = 'AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION';
/**
 * Maps a protobuf enum int value for `cosmos.staking.v1beta1.AuthorizationType` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumCosmosStakingAuthorizationType = {
    [XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED]: SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED,
    [XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE]: SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE,
    [XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE]: SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE,
    [XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE]: SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE,
    [XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION]: SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION,
};
/**
 * Maps a JSON enum string value for `cosmos.staking.v1beta1.AuthorizationType` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumCosmosStakingAuthorizationType = {
    [SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED]: XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNSPECIFIED,
    [SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE]: XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_DELEGATE,
    [SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE]: XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_UNDELEGATE,
    [SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE]: XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_REDELEGATE,
    [SI_JSON_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION]: XC_PROTO_COSMOS_STAKING_AUTHORIZATION_TYPE_CANCEL_UNBONDING_DELEGATION,
};
//# sourceMappingURL=authz.js.map