import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeCosmosStakingParams, decodeCosmosStakingValidator, decodeCosmosStakingDelegation, decodeCosmosStakingUnbondingDelegation, decodeCosmosStakingRedelegation } from './staking.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the staking module's genesis state.
 * @param g_params - `params`: defines all the parameters of related to deposit.
 * @param atu8_last_total_power - `last_total_power`: tracks the total amounts of bonded tokens recorded during the previous end block.
 * @param a_last_validator_powers - `last_validator_powers`: a special index that provides a historical list of the last-block's bonded validators.
 * @param a_validators - `validators`: defines the validator set at genesis.
 * @param a_delegations - `delegations`: defines the delegations active at genesis.
 * @param a_unbonding_delegations - `unbonding_delegations`: defines the unbonding delegations active at genesis.
 * @param a_redelegations - `redelegations`: defines the redelegations active at genesis.
 * @param b_exported - `exported`: defines a bool to identify whether the chain dealing with exported or initialized genesis.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStakingGenesisState = (atu8_params, atu8_last_total_power, a_last_validator_powers, a_validators, a_delegations, a_unbonding_delegations, a_redelegations, b_exported) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .b(atu8_last_total_power) // bytes last_total_power = 2
    .B(a_last_validator_powers) // LastValidatorPower[] last_validator_powers = 3
    .B(a_validators) // Validator[] validators = 4
    .B(a_delegations) // Delegation[] delegations = 5
    .B(a_unbonding_delegations) // UnbondingDelegation[] unbonding_delegations = 6
    .B(a_redelegations) // Redelegation[] redelegations = 7
    .v(b_exported) // boolean exported = 8
    .o;
/**
 * Encodes a `LastValidatorPower` protobuf message: required for validator set update logic.
 * @param sa_address - `address`: the address of the validator.
 * @param sg_power - `power`: defines the power of the validator.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStakingLastValidatorPower = (sa_address, sg_power) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .g(sg_power) // int32 power = 2
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStakingGenesisState}
 */
export const decodeCosmosStakingGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 0, 0, 0, 0, 0, 1], [decodeCosmosStakingParams, 0, decodeCosmosStakingLastValidatorPower, decodeCosmosStakingValidator, decodeCosmosStakingDelegation, decodeCosmosStakingUnbondingDelegation, decodeCosmosStakingRedelegation]);
/**
 * Decodes a protobuf LastValidatorPower message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStakingLastValidatorPower}
 */
export const decodeCosmosStakingLastValidatorPower = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Destructures the fields of a {@link CosmosStakingGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines all the parameters of related to deposit.
 *   - 1: last_total_power - tracks the total amounts of bonded tokens recorded during the previous end block.
 *   - 2: last_validator_powers - a special index that provides a historical list of the last-block's bonded validators.
 *   - 3: validators - defines the validator set at genesis.
 *   - 4: delegations - defines the delegations active at genesis.
 *   - 5: unbonding_delegations - defines the unbonding delegations active at genesis.
 *   - 6: redelegations - defines the redelegations active at genesis.
 *   - 7: exported - defines a bool to identify whether the chain dealing with exported or initialized genesis.
 */
export const destructCosmosStakingGenesisState = (g_struct) => [g_struct.params, safe_base64_to_bytes(g_struct.last_total_power), g_struct.last_validator_powers, g_struct.validators, g_struct.delegations, g_struct.unbonding_delegations, g_struct.redelegations, g_struct.exported];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STAKING_GENESIS_STATE = '/cosmos.staking.v1beta1.GenesisState';
/**
 * Destructures the fields of a {@link CosmosStakingLastValidatorPower} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the validator.
 *   - 1: power - defines the power of the validator.
 */
export const destructCosmosStakingLastValidatorPower = (g_struct) => [g_struct.address, g_struct.power];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STAKING_LAST_VALIDATOR_POWER = '/cosmos.staking.v1beta1.LastValidatorPower';
//# sourceMappingURL=genesis.js.map