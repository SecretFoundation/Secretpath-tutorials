import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { decodeCosmosStoreStoreKVPair } from '../../v1beta1/listening.js';
import { decodeTendermintAbciRequestFinalizeBlock, decodeTendermintAbciResponseFinalizeBlock, decodeTendermintAbciResponseCommit } from '../../../../tendermint/abci/types.js';
/**
 * Encodes a `ListenFinalizeBlockRequest` protobuf message: ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 * @param g_req - `req`:
 * @param g_res - `res`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreStreamingAbciListenFinalizeBlockRequest = (atu8_req, atu8_res) => Protobuf() // ...
    .b(atu8_req) // RequestFinalizeBlock req = 1
    .b(atu8_res) // ResponseFinalizeBlock res = 2
    .o;
/**
 * Encodes a `ListenFinalizeBlockResponse` protobuf message: ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreStreamingAbciListenFinalizeBlockResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ListenCommitRequest` protobuf message: the request type for the ListenCommit RPC method
 * @param sg_block_height - `block_height`: explicitly pass in block height as ResponseCommit does not contain this info
 * @param g_res - `res`:
 * @param a_change_sets - `change_set`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreStreamingAbciListenCommitRequest = (sg_block_height, atu8_res, a_change_sets) => Protobuf() // ...
    .g(sg_block_height) // int32 block_height = 1
    .b(atu8_res) // ResponseCommit res = 2
    .B(a_change_sets) // StoreKVPair[] change_set = 3
    .o;
/**
 * Encodes a `ListenCommitResponse` protobuf message: the response type for the ListenCommit RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreStreamingAbciListenCommitResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf ListenFinalizeBlockRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenFinalizeBlockRequest}
 */
export const decodeCosmosStoreStreamingAbciListenFinalizeBlockRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeTendermintAbciRequestFinalizeBlock, decodeTendermintAbciResponseFinalizeBlock]);
/**
 * Decodes a protobuf ListenFinalizeBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenFinalizeBlockResponse}
 */
export const decodeCosmosStoreStreamingAbciListenFinalizeBlockResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf ListenCommitRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenCommitRequest}
 */
export const decodeCosmosStoreStreamingAbciListenCommitRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1, 0], [0, decodeTendermintAbciResponseCommit, decodeCosmosStoreStoreKVPair]);
/**
 * Decodes a protobuf ListenCommit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenCommitResponse}
 */
export const decodeCosmosStoreStreamingAbciListenCommitResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenFinalizeBlockRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: req -
 *   - 1: res -
 */
export const destructCosmosStoreStreamingAbciListenFinalizeBlockRequest = (g_struct) => [g_struct.req, g_struct.res];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_FINALIZE_BLOCK_REQUEST = '/cosmos.store.streaming.abci.ListenFinalizeBlockRequest';
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenFinalizeBlockResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosStoreStreamingAbciListenFinalizeBlockResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_FINALIZE_BLOCK_RESPONSE = '/cosmos.store.streaming.abci.ListenFinalizeBlockResponse';
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenCommitRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: block_height - explicitly pass in block height as ResponseCommit does not contain this info
 *   - 1: res -
 *   - 2: change_set -
 */
export const destructCosmosStoreStreamingAbciListenCommitRequest = (g_struct) => [g_struct.block_height, g_struct.res, g_struct.change_set];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_COMMIT_REQUEST = '/cosmos.store.streaming.abci.ListenCommitRequest';
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenCommitResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosStoreStreamingAbciListenCommitResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_COMMIT_RESPONSE = '/cosmos.store.streaming.abci.ListenCommitResponse';
//# sourceMappingURL=grpc.js.map