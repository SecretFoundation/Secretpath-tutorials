import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeTendermintAbciResponseCommit, decodeTendermintAbciRequestFinalizeBlock, decodeTendermintAbciResponseFinalizeBlock } from '../../../tendermint/abci/types.js';
/**
 * Encodes a `StoreKVPair` protobuf message: a KVStore KVPair used for listening to state changes (Sets and Deletes) It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and Deletes Since: cosmos-sdk 0.43
 * @param s_store_key - `store_key`:
 * @param b_delete - `delete`:
 * @param atu8_key - `key`:
 * @param atu8_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreStoreKVPair = (s_store_key, b_delete, atu8_key, atu8_value) => Protobuf() // ...
    .s(s_store_key) // string store_key = 1
    .v(b_delete) // boolean delete = 2
    .b(atu8_key) // bytes key = 3
    .b(atu8_value) // bytes value = 4
    .o;
/**
 * Encodes a `BlockMetadata` protobuf message: contains all the abci event data of a block the file streamer dump them into files together with the state changes.
 * @param g_response_commit - `response_commit`:
 * @param g_request_finalize_block - `request_finalize_block`:
 * @param g_response_finalize_block - `response_finalize_block`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreBlockMetadata = (atu8_response_commit, atu8_request_finalize_block, atu8_response_finalize_block) => Protobuf() // ...
    .b(atu8_response_commit, 6) // ResponseCommit response_commit = 6
    .b(atu8_request_finalize_block, 7) // RequestFinalizeBlock request_finalize_block = 7
    .b(atu8_response_finalize_block, 8) // ResponseFinalizeBlock response_finalize_block = 8
    .o;
/**
 * Decodes a protobuf StoreKVPair message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStoreKVPair}
 */
export const decodeCosmosStoreStoreKVPair = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1, 1, 1]);
/**
 * Decodes a protobuf BlockMetadata message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmosStoreBlockMetadata}
 */
export const decodeCosmosStoreBlockMetadata = ((atu8_payload, [, , , , , a_response_commit, a_request_finalize_block, a_response_finalize_block] = decode_protobuf(atu8_payload, [0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, decodeTendermintAbciResponseCommit, decodeTendermintAbciRequestFinalizeBlock, decodeTendermintAbciResponseFinalizeBlock])) => [__UNDEFINED, __UNDEFINED, __UNDEFINED, __UNDEFINED, __UNDEFINED, a_response_commit, a_request_finalize_block, a_response_finalize_block]);
/**
 * Destructures the fields of a {@link CosmosStoreStoreKVPair} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: store_key -
 *   - 1: delete -
 *   - 2: key -
 *   - 3: value -
 */
export const destructCosmosStoreStoreKVPair = (g_struct) => [g_struct.store_key, g_struct.delete, safe_base64_to_bytes(g_struct.key), safe_base64_to_bytes(g_struct.value)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_STORE_K_V_PAIR = '/cosmos.store.v1beta1.StoreKVPair';
/**
 * Destructures the fields of a {@link CosmosStoreBlockMetadata} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 5: response_commit -
 *   - 6: request_finalize_block -
 *   - 7: response_finalize_block -
 */
export const destructCosmosStoreBlockMetadata = (g_struct) => [__UNDEFINED, __UNDEFINED, __UNDEFINED, __UNDEFINED, __UNDEFINED, g_struct.response_commit, g_struct.request_finalize_block, g_struct.response_finalize_block];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_BLOCK_METADATA = '/cosmos.store.v1beta1.BlockMetadata';
//# sourceMappingURL=listening.js.map