import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmwasmWasmParams, DecodedCosmwasmWasmParams, CosmwasmWasmCodeInfo, DecodedCosmwasmWasmCodeInfo, CosmwasmWasmContractInfo, DecodedCosmwasmWasmContractInfo, CosmwasmWasmModel, DecodedCosmwasmWasmModel, CosmwasmWasmContractCodeHistoryEntry, DecodedCosmwasmWasmContractCodeHistoryEntry } from './types.js';
export type EncodedCosmwasmWasmGenesisState = Encoded<'/cosmwasm.wasm.v1.GenesisState'>;
export type EncodedCosmwasmWasmCode = Encoded<'/cosmwasm.wasm.v1.Code'>;
export type EncodedCosmwasmWasmContract = Encoded<'/cosmwasm.wasm.v1.Contract'>;
export type EncodedCosmwasmWasmSequence = Encoded<'/cosmwasm.wasm.v1.Sequence'>;
/**
 * Encodes a `GenesisState` protobuf message: - genesis state of x/wasm
 * @param g_params - `params`:
 * @param a_codes - `codes`:
 * @param a_contracts - `contracts`:
 * @param a_sequences - `sequences`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmwasmWasmGenesisState: (atu8_params?: Opt<Encoded<'/cosmwasm.wasm.v1.Params'>>, a_codes?: Opt<Encoded<'/cosmwasm.wasm.v1.Code'>[]>, a_contracts?: Opt<Encoded<'/cosmwasm.wasm.v1.Contract'>[]>, a_sequences?: Opt<Encoded<'/cosmwasm.wasm.v1.Sequence'>[]>) => EncodedCosmwasmWasmGenesisState;
/**
 * Encodes a `Code` protobuf message: struct encompasses CodeInfo and CodeBytes
 * @param sg_code_id - `code_id`:
 * @param g_code_info - `code_info`:
 * @param atu8_code_bytes - `code_bytes`:
 * @param b_pinned - `pinned`: Pinned to wasmvm cache
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmwasmWasmCode: (sg_code_id?: Opt<WeakUint64Str>, atu8_code_info?: Opt<Encoded<'/cosmwasm.wasm.v1.CodeInfo'>>, atu8_code_bytes?: Opt<Uint8Array>, b_pinned?: Opt<boolean | 0 | 1>) => EncodedCosmwasmWasmCode;
/**
 * Encodes a `Contract` protobuf message: struct encompasses ContractAddress, ContractInfo, and ContractState
 * @param sa_contract - `contract_address`:
 * @param g_contract_info - `contract_info`:
 * @param a_contract_states - `contract_state`:
 * @param a_contract_code_historys - `contract_code_history`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmwasmWasmContract: (sa_contract?: Opt<WeakAccountAddr>, atu8_contract_info?: Opt<Encoded<'/cosmwasm.wasm.v1.ContractInfo'>>, a_contract_states?: Opt<Encoded<'/cosmwasm.wasm.v1.Model'>[]>, a_contract_code_historys?: Opt<Encoded<'/cosmwasm.wasm.v1.ContractCodeHistoryEntry'>[]>) => EncodedCosmwasmWasmContract;
/**
 * Encodes a `Sequence` protobuf message: key and value of an id generation counter
 * @param atu8_id_key - `id_key`:
 * @param sg_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmwasmWasmSequence: (atu8_id_key?: Opt<Uint8Array>, sg_value?: Opt<WeakUint64Str>) => EncodedCosmwasmWasmSequence;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: params -
 *   - 1: codes -
 *   - 2: contracts -
 *   - 3: sequences -
 */
export type DecodedCosmwasmWasmGenesisState = [
    a_params?: DecodedCosmwasmWasmParams,
    a_codes?: DecodedCosmwasmWasmCode[],
    a_contracts?: DecodedCosmwasmWasmContract[],
    a_sequences?: DecodedCosmwasmWasmSequence[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmGenesisState}
 */
export declare const decodeCosmwasmWasmGenesisState: (atu8_payload: Uint8Array) => DecodedCosmwasmWasmGenesisState;
/**
 * A decoded protobuf Code message
 *
 * Tuple where:
 *   - 0: code_id -
 *   - 1: code_info -
 *   - 2: code_bytes -
 *   - 3: pinned - Pinned to wasmvm cache
 */
export type DecodedCosmwasmWasmCode = [
    sg_code_id?: CwUint64,
    a_code_info?: DecodedCosmwasmWasmCodeInfo,
    atu8_code_bytes?: Uint8Array,
    b_pinned?: 0 | 1
];
/**
 * Decodes a protobuf Code message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmCode}
 */
export declare const decodeCosmwasmWasmCode: (atu8_payload: Uint8Array) => DecodedCosmwasmWasmCode;
/**
 * A decoded protobuf Contract message
 *
 * Tuple where:
 *   - 0: contract_address -
 *   - 1: contract_info -
 *   - 2: contract_state -
 *   - 3: contract_code_history -
 */
export type DecodedCosmwasmWasmContract = [
    sa_contract?: CwAccountAddr,
    a_contract_info?: DecodedCosmwasmWasmContractInfo,
    a_contract_state?: DecodedCosmwasmWasmModel[],
    a_contract_code_history?: DecodedCosmwasmWasmContractCodeHistoryEntry[]
];
/**
 * Decodes a protobuf Contract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmContract}
 */
export declare const decodeCosmwasmWasmContract: (atu8_payload: Uint8Array) => DecodedCosmwasmWasmContract;
/**
 * A decoded protobuf Sequence message
 *
 * Tuple where:
 *   - 0: id_key -
 *   - 1: value -
 */
export type DecodedCosmwasmWasmSequence = [
    atu8_id_key?: Uint8Array,
    sg_value?: CwUint64
];
/**
 * Decodes a protobuf Sequence message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmSequence}
 */
export declare const decodeCosmwasmWasmSequence: (atu8_payload: Uint8Array) => DecodedCosmwasmWasmSequence;
/**
 * Destructures the fields of a {@link CosmwasmWasmGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: codes -
 *   - 2: contracts -
 *   - 3: sequences -
 */
export declare const destructCosmwasmWasmGenesisState: (g_struct: CosmwasmWasmGenesisState) => [params?: CosmwasmWasmParams, codes?: CosmwasmWasmCode[], contracts?: CosmwasmWasmContract[], sequences?: CosmwasmWasmSequence[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMWASM_WASM_GENESIS_STATE = "/cosmwasm.wasm.v1.GenesisState";
/**
 * JSON serialization of `cosmwasm.wasm.v1.GenesisState` - - genesis state of x/wasm
 */
export type CosmwasmWasmGenesisState = {
    params?: CosmwasmWasmParams | undefined;
    codes?: CosmwasmWasmCode[] | undefined;
    contracts?: CosmwasmWasmContract[] | undefined;
    sequences?: CosmwasmWasmSequence[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmwasmWasmCode} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: code_info -
 *   - 2: code_bytes -
 *   - 3: pinned - Pinned to wasmvm cache
 */
export declare const destructCosmwasmWasmCode: (g_struct: CosmwasmWasmCode) => [code_id?: CwUint64, code_info?: CosmwasmWasmCodeInfo, code_bytes?: Uint8Array, pinned?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMWASM_WASM_CODE = "/cosmwasm.wasm.v1.Code";
/**
 * JSON serialization of `cosmwasm.wasm.v1.Code` - struct encompasses CodeInfo and CodeBytes
 */
export type CosmwasmWasmCode = {
    code_id?: CwUint64 | undefined;
    code_info?: CosmwasmWasmCodeInfo | undefined;
    code_bytes?: CwBase64 | undefined;
    pinned?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link CosmwasmWasmContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address -
 *   - 1: contract_info -
 *   - 2: contract_state -
 *   - 3: contract_code_history -
 */
export declare const destructCosmwasmWasmContract: (g_struct: CosmwasmWasmContract) => [contract_address?: CwAccountAddr, contract_info?: CosmwasmWasmContractInfo, contract_state?: CosmwasmWasmModel[], contract_code_history?: CosmwasmWasmContractCodeHistoryEntry[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMWASM_WASM_CONTRACT = "/cosmwasm.wasm.v1.Contract";
/**
 * JSON serialization of `cosmwasm.wasm.v1.Contract` - struct encompasses ContractAddress, ContractInfo, and ContractState
 */
export type CosmwasmWasmContract = {
    contract_address?: CwAccountAddr | undefined;
    contract_info?: CosmwasmWasmContractInfo | undefined;
    contract_state?: CosmwasmWasmModel[] | undefined;
    contract_code_history?: CosmwasmWasmContractCodeHistoryEntry[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmwasmWasmSequence} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id_key -
 *   - 1: value -
 */
export declare const destructCosmwasmWasmSequence: (g_struct: CosmwasmWasmSequence) => [id_key?: Uint8Array, value?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMWASM_WASM_SEQUENCE = "/cosmwasm.wasm.v1.Sequence";
/**
 * JSON serialization of `cosmwasm.wasm.v1.Sequence` - key and value of an id generation counter
 */
export type CosmwasmWasmSequence = {
    id_key?: CwBase64 | undefined;
    value?: CwUint64 | undefined;
};
