import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { safe_bytes_to_base64, safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import { decodeCosmwasmWasmContractInfo, decodeCosmwasmWasmContractCodeHistoryEntry, decodeCosmwasmWasmModel, decodeCosmwasmWasmAccessConfig, decodeCosmwasmWasmParams } from './types.js';
const SR_LCD_COSMWASM_WASM_QUERY = '/cosmwasm/wasm/v1/co';
/**
 * Gets the contract meta data
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address of the contract to query
 * @returns a tuple where:
 *   - 0: address - the address of the contract
 *   - 1: contract_info - the address of the contract
 */
export const queryCosmwasmWasmContractInfo = restful_grpc(sa_address => [SR_LCD_COSMWASM_WASM_QUERY + 'ntract/' + sa_address]);
/**
 * Gets the contract code history
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address of the contract to query
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: entries - the 'entries' response property
 *   - 1: pagination - the 'entries' response property
 */
export const queryCosmwasmWasmContractHistory = restful_grpc((sa_address, g_pagination) => [SR_LCD_COSMWASM_WASM_QUERY + 'ntract/' + sa_address + '/history', {
        pagination: g_pagination,
    }]);
/**
 * Lists all smart contracts for a code id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_code_id -
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: contracts - a set of contract addresses
 *   - 1: pagination - a set of contract addresses
 */
export const queryCosmwasmWasmContractsByCode = restful_grpc((sg_code_id, g_pagination) => [SR_LCD_COSMWASM_WASM_QUERY + 'de/' + sg_code_id + '/contracts', {
        pagination: g_pagination,
    }]);
/**
 * Gets all raw store data for a single contract
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address of the contract
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: models - the 'models' response property
 *   - 1: pagination - the 'models' response property
 */
export const queryCosmwasmWasmAllContractState = restful_grpc((sa_address, g_pagination) => [SR_LCD_COSMWASM_WASM_QUERY + 'ntract/' + sa_address + '/state', {
        pagination: g_pagination,
    }]);
/**
 * Gets single key from the raw store data of a contract
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address of the contract
 * @param atu8_query_data -
 * @returns a tuple where:
 *   - 0: data - Data contains the raw store data
 */
export const queryCosmwasmWasmRawContractState = restful_grpc((sa_address, atu8_query_data) => [SR_LCD_COSMWASM_WASM_QUERY + 'ntract/' + sa_address + '/raw/' + safe_bytes_to_base64(atu8_query_data)]);
/**
 * Get smart query result from the contract
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address of the contract
 * @param atu8_query_data - QueryData contains the query data passed to the contract
 * @returns a tuple where:
 *   - 0: data - Data contains the json data returned from the smart contract
 */
export const queryCosmwasmWasmSmartContractState = restful_grpc((sa_address, atu8_query_data) => [SR_LCD_COSMWASM_WASM_QUERY + 'ntract/' + sa_address + '/smart/' + safe_bytes_to_base64(atu8_query_data)]);
/**
 * Gets the binary code and metadata for a singe wasm code
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_code_id -
 * @returns a tuple where:
 *   - 0: code_info - the 'code_info' response property
 *   - 1: data - the 'code_info' response property
 */
export const queryCosmwasmWasmCode = restful_grpc(sg_code_id => [SR_LCD_COSMWASM_WASM_QUERY + 'de/' + sg_code_id]);
/**
 * Gets the metadata for all stored wasm codes
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: code_infos - the 'code_infos' response property
 *   - 1: pagination - the 'code_infos' response property
 */
export const queryCosmwasmWasmCodes = restful_grpc(g_pagination => [SR_LCD_COSMWASM_WASM_QUERY + 'de', {
        pagination: g_pagination,
    }]);
/**
 * Gets the pinned code ids
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: code_ids - the 'code_ids' response property
 *   - 1: pagination - the 'code_ids' response property
 */
export const queryCosmwasmWasmPinnedCodes = restful_grpc(g_pagination => [SR_LCD_COSMWASM_WASM_QUERY + 'des/pinned', {
        pagination: g_pagination,
    }]);
/**
 * Gets the module params
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryCosmwasmWasmParams = restful_grpc(() => [SR_LCD_COSMWASM_WASM_QUERY + 'des/params']);
/**
 * Gets the contracts by creator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_creator - CreatorAddress is the address of contract creator
 * @param g_pagination - Pagination defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: contract_addresses - ContractAddresses result set
 *   - 1: pagination - ContractAddresses result set
 */
export const queryCosmwasmWasmContractsByCreator = restful_grpc((sa_creator, g_pagination) => [SR_LCD_COSMWASM_WASM_QUERY + 'ntracts/creator/' + sa_creator, {
        pagination: g_pagination,
    }]);
/**
 * Encodes a `QueryContractInfoRequest` protobuf message: the request type for the Query/ContractInfo RPC method
 * @param sa_address - `address`: the address of the contract to query
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractInfoRequest = (sa_address) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .o;
/**
 * Encodes a `QueryContractInfoResponse` protobuf message: the response type for the Query/ContractInfo RPC method
 * @param sa_address - `address`: the address of the contract
 * @param g_contract_info - `contract_info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractInfoResponse = (sa_address, atu8_contract_info) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_contract_info) // ContractInfo contract_info = 2
    .o;
/**
 * Encodes a `QueryContractHistoryRequest` protobuf message: the request type for the Query/ContractHistory RPC method
 * @param sa_address - `address`: the address of the contract to query
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractHistoryRequest = (sa_address, atu8_pagination) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryContractHistoryResponse` protobuf message: the response type for the Query/ContractHistory RPC method
 * @param a_entries - `entries`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractHistoryResponse = (a_entries, atu8_pagination) => Protobuf() // ...
    .B(a_entries) // ContractCodeHistoryEntry[] entries = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryContractsByCodeRequest` protobuf message: the request type for the Query/ContractsByCode RPC method
 * @param sg_code_id - `code_id`:
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractsByCodeRequest = (sg_code_id, atu8_pagination) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryContractsByCodeResponse` protobuf message: the response type for the Query/ContractsByCode RPC method
 * @param a_contracts - `contracts`: a set of contract addresses
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractsByCodeResponse = (a_contracts, atu8_pagination) => Protobuf() // ...
    .S(a_contracts) // string[] contracts = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryAllContractStateRequest` protobuf message: the request type for the Query/AllContractState RPC method
 * @param sa_address - `address`: the address of the contract
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryAllContractStateRequest = (sa_address, atu8_pagination) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryAllContractStateResponse` protobuf message: the response type for the Query/AllContractState RPC method
 * @param a_models - `models`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryAllContractStateResponse = (a_models, atu8_pagination) => Protobuf() // ...
    .B(a_models) // Model[] models = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryRawContractStateRequest` protobuf message: the request type for the Query/RawContractState RPC method
 * @param sa_address - `address`: the address of the contract
 * @param atu8_query_data - `query_data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryRawContractStateRequest = (sa_address, atu8_query_data) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_query_data) // bytes query_data = 2
    .o;
/**
 * Encodes a `QueryRawContractStateResponse` protobuf message: the response type for the Query/RawContractState RPC method
 * @param atu8_data - `data`: Data contains the raw store data
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryRawContractStateResponse = (atu8_data) => Protobuf() // ...
    .b(atu8_data) // bytes data = 1
    .o;
/**
 * Encodes a `QuerySmartContractStateRequest` protobuf message: the request type for the Query/SmartContractState RPC method
 * @param sa_address - `address`: the address of the contract
 * @param atu8_query_data - `query_data`: QueryData contains the query data passed to the contract
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQuerySmartContractStateRequest = (sa_address, atu8_query_data) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_query_data) // bytes query_data = 2
    .o;
/**
 * Encodes a `QuerySmartContractStateResponse` protobuf message: the response type for the Query/SmartContractState RPC method
 * @param atu8_data - `data`: Data contains the json data returned from the smart contract
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQuerySmartContractStateResponse = (atu8_data) => Protobuf() // ...
    .b(atu8_data) // bytes data = 1
    .o;
/**
 * Encodes a `QueryCodeRequest` protobuf message: the request type for the Query/Code RPC method
 * @param sg_code_id - `code_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryCodeRequest = (sg_code_id) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .o;
/**
 * Encodes a `CodeInfoResponse` protobuf message: contains code meta data from CodeInfo
 * @param sg_code_id - `code_id`:
 * @param sa_creator - `creator`:
 * @param atu8_data_hash - `data_hash`:
 * @param g_instantiate_permission - `instantiate_permission`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmCodeInfoResponse = (sg_code_id, sa_creator, atu8_data_hash, atu8_instantiate_permission) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .s(sa_creator) // string creator = 2
    .b(atu8_data_hash) // bytes data_hash = 3
    .b(atu8_instantiate_permission, 6) // AccessConfig instantiate_permission = 6
    .o;
/**
 * Encodes a `QueryCodeResponse` protobuf message: the response type for the Query/Code RPC method
 * @param g_code_info - `code_info`:
 * @param atu8_data - `data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryCodeResponse = (atu8_code_info, atu8_data) => Protobuf() // ...
    .b(atu8_code_info) // CodeInfoResponse code_info = 1
    .b(atu8_data) // bytes data = 2
    .o;
/**
 * Encodes a `QueryCodesRequest` protobuf message: the request type for the Query/Codes RPC method
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryCodesRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `QueryCodesResponse` protobuf message: the response type for the Query/Codes RPC method
 * @param a_code_infos - `code_infos`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryCodesResponse = (a_code_infos, atu8_pagination) => Protobuf() // ...
    .B(a_code_infos) // CodeInfoResponse[] code_infos = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryPinnedCodesRequest` protobuf message: the request type for the Query/PinnedCodes RPC method
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryPinnedCodesRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination, 2) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryPinnedCodesResponse` protobuf message: the response type for the Query/PinnedCodes RPC method
 * @param a_code_ids - `code_ids`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryPinnedCodesResponse = (a_code_ids, atu8_pagination) => Protobuf() // ...
    .G(a_code_ids) // uint64[] code_ids = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `QueryContractsByCreatorRequest` protobuf message: the request type for the Query/ContractsByCreator RPC method.
 * @param sa_creator - `creator_address`: CreatorAddress is the address of contract creator
 * @param g_pagination - `pagination`: Pagination defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractsByCreatorRequest = (sa_creator, atu8_pagination) => Protobuf() // ...
    .s(sa_creator) // string creator_address = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryContractsByCreatorResponse` protobuf message: the response type for the Query/ContractsByCreator RPC method.
 * @param a_contract_addresses - `contract_addresses`: ContractAddresses result set
 * @param g_pagination - `pagination`: Pagination defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmwasmWasmQueryContractsByCreatorResponse = (a_contract_addresses, atu8_pagination) => Protobuf() // ...
    .S(a_contract_addresses) // string[] contract_addresses = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Decodes a protobuf QueryContractInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractInfoRequest}
 */
export const decodeCosmwasmWasmQueryContractInfoRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryContractInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractInfoResponse}
 */
export const decodeCosmwasmWasmQueryContractInfoResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmwasmWasmContractInfo]);
/**
 * Decodes a protobuf QueryContractHistoryRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractHistoryRequest}
 */
export const decodeCosmwasmWasmQueryContractHistoryRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryContractHistory message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractHistoryResponse}
 */
export const decodeCosmwasmWasmQueryContractHistoryResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmwasmWasmContractCodeHistoryEntry, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryContractsByCodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractsByCodeRequest}
 */
export const decodeCosmwasmWasmQueryContractsByCodeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryContractsByCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractsByCodeResponse}
 */
export const decodeCosmwasmWasmQueryContractsByCodeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [4, 1], [0, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryAllContractStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryAllContractStateRequest}
 */
export const decodeCosmwasmWasmQueryAllContractStateRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryAllContractState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryAllContractStateResponse}
 */
export const decodeCosmwasmWasmQueryAllContractStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmwasmWasmModel, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryRawContractStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryRawContractStateRequest}
 */
export const decodeCosmwasmWasmQueryRawContractStateRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf QueryRawContractState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryRawContractStateResponse}
 */
export const decodeCosmwasmWasmQueryRawContractStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf QuerySmartContractStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQuerySmartContractStateRequest}
 */
export const decodeCosmwasmWasmQuerySmartContractStateRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf QuerySmartContractState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQuerySmartContractStateResponse}
 */
export const decodeCosmwasmWasmQuerySmartContractStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf QueryCodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryCodeRequest}
 */
export const decodeCosmwasmWasmQueryCodeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf CodeInfo message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmwasmWasmCodeInfoResponse}
 */
export const decodeCosmwasmWasmCodeInfoResponse = ((atu8_payload, [sg_code_id, sa_creator, atu8_data_hash, , , a_instantiate_permission] = decode_protobuf(atu8_payload, [3, 5, 1, 0, 0, 1], [0, 0, 0, 0, 0, decodeCosmwasmWasmAccessConfig])) => [sg_code_id, sa_creator, atu8_data_hash, __UNDEFINED, __UNDEFINED, a_instantiate_permission]);
/**
 * Decodes a protobuf QueryCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryCodeResponse}
 */
export const decodeCosmwasmWasmQueryCodeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeCosmwasmWasmCodeInfoResponse]);
/**
 * Decodes a protobuf QueryCodesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryCodesRequest}
 */
export const decodeCosmwasmWasmQueryCodesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryCodes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryCodesResponse}
 */
export const decodeCosmwasmWasmQueryCodesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmwasmWasmCodeInfoResponse, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryPinnedCodesRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmwasmWasmQueryPinnedCodesRequest}
 */
export const decodeCosmwasmWasmQueryPinnedCodesRequest = ((atu8_payload, [, a_pagination] = decode_protobuf(atu8_payload, [0, 1], [0, decodeCosmosBaseQueryPageRequest])) => [__UNDEFINED, a_pagination]);
/**
 * Decodes a protobuf QueryPinnedCodes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryPinnedCodesResponse}
 */
export const decodeCosmwasmWasmQueryPinnedCodesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [2, 1], [0, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryParamsRequest}
 */
export const decodeCosmwasmWasmQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryParamsResponse}
 */
export const decodeCosmwasmWasmQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmwasmWasmParams]);
/**
 * Decodes a protobuf QueryContractsByCreatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractsByCreatorRequest}
 */
export const decodeCosmwasmWasmQueryContractsByCreatorRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryContractsByCreator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmwasmWasmQueryContractsByCreatorResponse}
 */
export const decodeCosmwasmWasmQueryContractsByCreatorResponse = (atu8_payload) => decode_protobuf(atu8_payload, [4, 1], [0, decodeCosmosBaseQueryPageResponse]);
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract to query
 */
export const destructCosmwasmWasmQueryContractInfoRequest = (g_struct) => [g_struct.address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACT_INFO_REQUEST = '/cosmwasm.wasm.v1.QueryContractInfoRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract
 *   - 1: contract_info -
 */
export const destructCosmwasmWasmQueryContractInfoResponse = (g_struct) => [g_struct.address, g_struct.contract_info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACT_INFO_RESPONSE = '/cosmwasm.wasm.v1.QueryContractInfoResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractHistoryRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract to query
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryContractHistoryRequest = (g_struct) => [g_struct.address, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACT_HISTORY_REQUEST = '/cosmwasm.wasm.v1.QueryContractHistoryRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractHistoryResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: entries -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryContractHistoryResponse = (g_struct) => [g_struct.entries, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACT_HISTORY_RESPONSE = '/cosmwasm.wasm.v1.QueryContractHistoryResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractsByCodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryContractsByCodeRequest = (g_struct) => [g_struct.code_id, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACTS_BY_CODE_REQUEST = '/cosmwasm.wasm.v1.QueryContractsByCodeRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractsByCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contracts - a set of contract addresses
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryContractsByCodeResponse = (g_struct) => [g_struct.contracts, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACTS_BY_CODE_RESPONSE = '/cosmwasm.wasm.v1.QueryContractsByCodeResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryAllContractStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryAllContractStateRequest = (g_struct) => [g_struct.address, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_ALL_CONTRACT_STATE_REQUEST = '/cosmwasm.wasm.v1.QueryAllContractStateRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryAllContractStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: models -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryAllContractStateResponse = (g_struct) => [g_struct.models, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_ALL_CONTRACT_STATE_RESPONSE = '/cosmwasm.wasm.v1.QueryAllContractStateResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryRawContractStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract
 *   - 1: query_data -
 */
export const destructCosmwasmWasmQueryRawContractStateRequest = (g_struct) => [g_struct.address, safe_base64_to_bytes(g_struct.query_data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_RAW_CONTRACT_STATE_REQUEST = '/cosmwasm.wasm.v1.QueryRawContractStateRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryRawContractStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data - Data contains the raw store data
 */
export const destructCosmwasmWasmQueryRawContractStateResponse = (g_struct) => [safe_base64_to_bytes(g_struct.data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_RAW_CONTRACT_STATE_RESPONSE = '/cosmwasm.wasm.v1.QueryRawContractStateResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQuerySmartContractStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address of the contract
 *   - 1: query_data - QueryData contains the query data passed to the contract
 */
export const destructCosmwasmWasmQuerySmartContractStateRequest = (g_struct) => [g_struct.address, safe_base64_to_bytes(g_struct.query_data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_SMART_CONTRACT_STATE_REQUEST = '/cosmwasm.wasm.v1.QuerySmartContractStateRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQuerySmartContractStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data - Data contains the json data returned from the smart contract
 */
export const destructCosmwasmWasmQuerySmartContractStateResponse = (g_struct) => [safe_base64_to_bytes(g_struct.data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_SMART_CONTRACT_STATE_RESPONSE = '/cosmwasm.wasm.v1.QuerySmartContractStateResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryCodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 */
export const destructCosmwasmWasmQueryCodeRequest = (g_struct) => [g_struct.code_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CODE_REQUEST = '/cosmwasm.wasm.v1.QueryCodeRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmCodeInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: creator -
 *   - 2: data_hash -
 *   - 5: instantiate_permission -
 */
export const destructCosmwasmWasmCodeInfoResponse = (g_struct) => [g_struct.code_id, g_struct.creator, safe_base64_to_bytes(g_struct.data_hash), __UNDEFINED, __UNDEFINED, g_struct.instantiate_permission];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_CODE_INFO_RESPONSE = '/cosmwasm.wasm.v1.CodeInfoResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_info -
 *   - 1: data -
 */
export const destructCosmwasmWasmQueryCodeResponse = (g_struct) => [g_struct.code_info, safe_base64_to_bytes(g_struct.data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CODE_RESPONSE = '/cosmwasm.wasm.v1.QueryCodeResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryCodesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryCodesRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CODES_REQUEST = '/cosmwasm.wasm.v1.QueryCodesRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryCodesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_infos -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryCodesResponse = (g_struct) => [g_struct.code_infos, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CODES_RESPONSE = '/cosmwasm.wasm.v1.QueryCodesResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryPinnedCodesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryPinnedCodesRequest = (g_struct) => [__UNDEFINED, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_PINNED_CODES_REQUEST = '/cosmwasm.wasm.v1.QueryPinnedCodesRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryPinnedCodesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_ids -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryPinnedCodesResponse = (g_struct) => [g_struct.code_ids, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_PINNED_CODES_RESPONSE = '/cosmwasm.wasm.v1.QueryPinnedCodesResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmwasmWasmQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_PARAMS_REQUEST = '/cosmwasm.wasm.v1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructCosmwasmWasmQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_PARAMS_RESPONSE = '/cosmwasm.wasm.v1.QueryParamsResponse';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractsByCreatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: creator_address - CreatorAddress is the address of contract creator
 *   - 1: pagination - Pagination defines an optional pagination for the request.
 */
export const destructCosmwasmWasmQueryContractsByCreatorRequest = (g_struct) => [g_struct.creator_address, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACTS_BY_CREATOR_REQUEST = '/cosmwasm.wasm.v1.QueryContractsByCreatorRequest';
/**
 * Destructures the fields of a {@link CosmwasmWasmQueryContractsByCreatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_addresses - ContractAddresses result set
 *   - 1: pagination - Pagination defines the pagination in the response.
 */
export const destructCosmwasmWasmQueryContractsByCreatorResponse = (g_struct) => [g_struct.contract_addresses, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMWASM_WASM_QUERY_CONTRACTS_BY_CREATOR_RESPONSE = '/cosmwasm.wasm.v1.QueryContractsByCreatorResponse';
//# sourceMappingURL=query.js.map