/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeGaiaGlobalfeeParams } from './genesis.js';
const SR_LCD_GAIA_GLOBALFEE_QUERY = '/gaia/globalfee/v1beta1/params';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryGaiaGlobalfeeParams = restful_grpc(() => [SR_LCD_GAIA_GLOBALFEE_QUERY]);
/**
 * Encodes a `QueryParamsRequest` protobuf message: QueryMinimumGasPricesRequest is the request type for the Query/MinimumGasPrices RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeGaiaGlobalfeeQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: QueryMinimumGasPricesResponse is the response type for the Query/MinimumGasPrices RPC method.
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeGaiaGlobalfeeQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedGaiaGlobalfeeQueryParamsRequest}
 */
export const decodeGaiaGlobalfeeQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedGaiaGlobalfeeQueryParamsResponse}
 */
export const decodeGaiaGlobalfeeQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGaiaGlobalfeeParams]);
/**
 * Destructures the fields of a {@link GaiaGlobalfeeQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructGaiaGlobalfeeQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_GAIA_GLOBALFEE_QUERY_PARAMS_REQUEST = '/gaia.globalfee.v1beta1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link GaiaGlobalfeeQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructGaiaGlobalfeeQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_GAIA_GLOBALFEE_QUERY_PARAMS_RESPONSE = '/gaia.globalfee.v1beta1.QueryParamsResponse';
//# sourceMappingURL=query.js.map