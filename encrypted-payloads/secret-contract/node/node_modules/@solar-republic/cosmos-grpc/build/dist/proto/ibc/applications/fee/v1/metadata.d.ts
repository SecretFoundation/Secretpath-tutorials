import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedIbcApplicationsFeeMetadata = Encoded<'/ibc.applications.fee.v1.Metadata'>;
/**
 * Encodes a `Metadata` protobuf message: defines the ICS29 channel specific metadata encoded into the channel version bytestring See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
 * @param s_fee_version - `fee_version`: defines the ICS29 fee version
 * @param s_app_version - `app_version`: defines the underlying application version, which may or may not be a JSON encoded bytestring
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsFeeMetadata: (s_fee_version?: Opt<string>, s_app_version?: Opt<string>) => EncodedIbcApplicationsFeeMetadata;
/**
 * A decoded protobuf Metadata message
 *
 * Tuple where:
 *   - 0: fee_version - defines the ICS29 fee version
 *   - 1: app_version - defines the underlying application version, which may or may not be a JSON encoded bytestring
 */
export type DecodedIbcApplicationsFeeMetadata = [
    s_fee_version?: string,
    s_app_version?: string
];
/**
 * Decodes a protobuf Metadata message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsFeeMetadata}
 */
export declare const decodeIbcApplicationsFeeMetadata: (atu8_payload: Uint8Array) => DecodedIbcApplicationsFeeMetadata;
/**
 * Destructures the fields of a {@link IbcApplicationsFeeMetadata} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_version - defines the ICS29 fee version
 *   - 1: app_version - defines the underlying application version, which may or may not be a JSON encoded bytestring
 */
export declare const destructIbcApplicationsFeeMetadata: (g_struct: IbcApplicationsFeeMetadata) => [fee_version?: string, app_version?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_FEE_METADATA = "/ibc.applications.fee.v1.Metadata";
/**
 * JSON serialization of `ibc.applications.fee.v1.Metadata` - defines the ICS29 channel specific metadata encoded into the channel version bytestring See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
 */
export type IbcApplicationsFeeMetadata = {
    fee_version?: string | undefined;
    app_version?: string | undefined;
};
