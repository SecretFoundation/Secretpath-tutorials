/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../../api/types.js';
import type { IbcApplicationsInterchainAccountsControllerParams, DecodedIbcApplicationsInterchainAccountsControllerParams } from './controller.js';
export type EncodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest = Encoded<'/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest'>;
export type EncodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse = Encoded<'/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse'>;
export type EncodedIbcApplicationsInterchainAccountsControllerQueryParamsRequest = Encoded<'/ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest'>;
export type EncodedIbcApplicationsInterchainAccountsControllerQueryParamsResponse = Encoded<'/ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse'>;
/**
 * Returns the interchain account address for a given owner address on a given connection
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param si_connection -
 * @returns a tuple where:
 *   - 0: address - the 'address' response property
 */
export declare const queryIbcApplicationsInterchainAccountsControllerInterchainAccount: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, si_connection?: Opt<string>) => Promise<import("../../../../../../api/transport.js").NetworkJsonResponse<IbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse>>;
/**
 * Queries all parameters of the ICA controller submodule.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryIbcApplicationsInterchainAccountsControllerParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../../api/transport.js").NetworkJsonResponse<IbcApplicationsInterchainAccountsControllerQueryParamsResponse>>;
/**
 * Encodes a `QueryInterchainAccountRequest` protobuf message: the request type for the Query/InterchainAccount RPC method.
 * @param sa_owner - `owner`:
 * @param si_connection - `connection_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest: (sa_owner?: Opt<WeakAccountAddr>, si_connection?: Opt<string>) => EncodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest;
/**
 * Encodes a `QueryInterchainAccountResponse` protobuf message: the response type for the Query/InterchainAccount RPC method.
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse: (sa_address?: Opt<WeakAccountAddr>) => EncodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerQueryParamsRequest: () => EncodedIbcApplicationsInterchainAccountsControllerQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerQueryParamsResponse: (atu8_params?: Opt<Encoded<'/ibc.applications.interchain_accounts.controller.v1.Params'>>) => EncodedIbcApplicationsInterchainAccountsControllerQueryParamsResponse;
/**
 * A decoded protobuf QueryInterchainAccountRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 */
export type DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest = [
    sa_owner?: CwAccountAddr,
    si_connection?: string
];
/**
 * Decodes a protobuf QueryInterchainAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest;
/**
 * A decoded protobuf QueryInterchainAccount message
 *
 * Alias for: address -
 */
export type DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedIbcApplicationsInterchainAccountsControllerQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerQueryParamsRequest}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedIbcApplicationsInterchainAccountsControllerQueryParamsResponse = [
    a_params?: DecodedIbcApplicationsInterchainAccountsControllerParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerQueryParamsResponse}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerQueryParamsResponse;
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 */
export declare const destructIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest: (g_struct: IbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest) => [owner?: CwAccountAddr, connection_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_QUERY_INTERCHAIN_ACCOUNT_REQUEST = "/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest` - the request type for the Query/InterchainAccount RPC method.
 */
export type IbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest = {
    owner?: CwAccountAddr | undefined;
    connection_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export declare const destructIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse: (g_struct: IbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_QUERY_INTERCHAIN_ACCOUNT_RESPONSE = "/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse` - the response type for the Query/InterchainAccount RPC method.
 */
export type IbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcApplicationsInterchainAccountsControllerQueryParamsRequest: (g_struct: IbcApplicationsInterchainAccountsControllerQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_QUERY_PARAMS_REQUEST = "/ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type IbcApplicationsInterchainAccountsControllerQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructIbcApplicationsInterchainAccountsControllerQueryParamsResponse: (g_struct: IbcApplicationsInterchainAccountsControllerQueryParamsResponse) => [params?: IbcApplicationsInterchainAccountsControllerParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_QUERY_PARAMS_RESPONSE = "/ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type IbcApplicationsInterchainAccountsControllerQueryParamsResponse = {
    params?: IbcApplicationsInterchainAccountsControllerParams | undefined;
};
