import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../../api/types.js';
import type { IbcApplicationsInterchainAccountsControllerParams, DecodedIbcApplicationsInterchainAccountsControllerParams } from './controller.js';
import type { IbcApplicationsInterchainAccountsInterchainAccountPacketData, DecodedIbcApplicationsInterchainAccountsInterchainAccountPacketData } from '../../v1/packet.js';
import type { ProtoEnumIbcCoreChannelOrder, JsonEnumIbcCoreChannelOrder } from '../../../../core/channel/v1/channel.js';
export type EncodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount'>;
export type EncodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse'>;
export type EncodedIbcApplicationsInterchainAccountsControllerMsgSendTx = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgSendTx'>;
export type EncodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse'>;
export type EncodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams'>;
export type EncodedIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = Encoded<'/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse'>;
/**
 * Encodes a `MsgRegisterInterchainAccount` protobuf message: defines the payload for Msg/RegisterAccount
 * @param sa_owner - `owner`:
 * @param si_connection - `connection_id`:
 * @param s_version - `version`:
 * @param xc_ordering - `ordering`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount: (sa_owner?: Opt<WeakAccountAddr>, si_connection?: Opt<string>, s_version?: Opt<string>, xc_ordering?: Opt<ProtoEnumIbcCoreChannelOrder>) => EncodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount;
/**
 * Encodes a `MsgRegisterInterchainAccountResponse` protobuf message: defines the response for Msg/RegisterAccount
 * @param si_channel - `channel_id`:
 * @param si_port - `port_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse: (si_channel?: Opt<string>, si_port?: Opt<string>) => EncodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse;
/**
 * Encodes a `MsgSendTx` protobuf message: defines the payload for Msg/SendTx
 * @param sa_owner - `owner`:
 * @param si_connection - `connection_id`:
 * @param g_packet_data - `packet_data`:
 * @param sg_relative_timeout - `relative_timeout`: Relative timeout timestamp provided will be added to the current block time during transaction execution. The timeout timestamp must be non-zero.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgSendTx: (sa_owner?: Opt<WeakAccountAddr>, si_connection?: Opt<string>, atu8_packet_data?: Opt<Encoded<'/ibc.applications.interchain_accounts.v1.InterchainAccountPacketData'>>, sg_relative_timeout?: Opt<WeakUint64Str>) => EncodedIbcApplicationsInterchainAccountsControllerMsgSendTx;
/**
 * Encodes a `MsgSendTxResponse` protobuf message: defines the response for MsgSendTx
 * @param sg_sequence - `sequence`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse: (sg_sequence?: Opt<WeakUint64Str>) => EncodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse;
/**
 * Encodes a `MsgUpdateParams` protobuf message: defines the payload for Msg/UpdateParams
 * @param s_signer - `signer`: address
 * @param g_params - `params`: defines the 27-interchain-accounts/controller parameters to update. NOTE: All parameters must be supplied.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams: (s_signer?: Opt<string>, atu8_params?: Opt<Encoded<'/ibc.applications.interchain_accounts.controller.v1.Params'>>) => EncodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response for Msg/UpdateParams
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse: () => EncodedIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse;
/**
 * A decoded protobuf RegisterInterchainAccount message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: version -
 *   - 3: ordering -
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = [
    sa_owner?: CwAccountAddr,
    si_connection?: string,
    s_version?: string,
    xc_ordering?: ProtoEnumIbcCoreChannelOrder
];
/**
 * Decodes a protobuf RegisterInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount;
/**
 * A decoded protobuf RegisterInterchainAccount message
 *
 * Tuple where:
 *   - 0: channel_id -
 *   - 1: port_id -
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = [
    si_channel?: string,
    si_port?: string
];
/**
 * Decodes a protobuf RegisterInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse;
/**
 * A decoded protobuf SendTx message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: packet_data -
 *   - 3: relative_timeout - Relative timeout timestamp provided will be added to the current block time during transaction execution. The timeout timestamp must be non-zero.
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgSendTx = [
    sa_owner?: CwAccountAddr,
    si_connection?: string,
    a_packet_data?: DecodedIbcApplicationsInterchainAccountsInterchainAccountPacketData,
    sg_relative_timeout?: CwUint64
];
/**
 * Decodes a protobuf SendTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgSendTx}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgSendTx: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerMsgSendTx;
/**
 * A decoded protobuf SendTx message
 *
 * Alias for: sequence -
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse = [
    sg_sequence?: CwUint64
];
/**
 * Decodes a protobuf SendTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 *   - 0: signer - address
 *   - 1: params - defines the 27-interchain-accounts/controller parameters to update. NOTE: All parameters must be supplied.
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams = [
    s_signer?: string,
    a_params?: DecodedIbcApplicationsInterchainAccountsControllerParams
];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 */
export type DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = [];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse}
 */
export declare const decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: version -
 *   - 3: ordering -
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount: (g_struct: IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount) => [owner?: CwAccountAddr, connection_id?: string, version?: string, ordering?: JsonEnumIbcCoreChannelOrder];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_REGISTER_INTERCHAIN_ACCOUNT = "/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount` - defines the payload for Msg/RegisterAccount
 */
export type IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = {
    owner?: CwAccountAddr | undefined;
    connection_id?: string | undefined;
    version?: string | undefined;
    ordering?: JsonEnumIbcCoreChannelOrder | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: channel_id -
 *   - 1: port_id -
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse: (g_struct: IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse) => [channel_id?: string, port_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_REGISTER_INTERCHAIN_ACCOUNT_RESPONSE = "/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse` - defines the response for Msg/RegisterAccount
 */
export type IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = {
    channel_id?: string | undefined;
    port_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgSendTx} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: packet_data -
 *   - 3: relative_timeout - Relative timeout timestamp provided will be added to the current block time during transaction execution. The timeout timestamp must be non-zero.
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgSendTx: (g_struct: IbcApplicationsInterchainAccountsControllerMsgSendTx) => [owner?: CwAccountAddr, connection_id?: string, packet_data?: IbcApplicationsInterchainAccountsInterchainAccountPacketData, relative_timeout?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_SEND_TX = "/ibc.applications.interchain_accounts.controller.v1.MsgSendTx";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgSendTx` - defines the payload for Msg/SendTx
 */
export type IbcApplicationsInterchainAccountsControllerMsgSendTx = {
    owner?: CwAccountAddr | undefined;
    connection_id?: string | undefined;
    packet_data?: IbcApplicationsInterchainAccountsInterchainAccountPacketData | undefined;
    relative_timeout?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgSendTxResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sequence -
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgSendTxResponse: (g_struct: IbcApplicationsInterchainAccountsControllerMsgSendTxResponse) => [sequence?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_SEND_TX_RESPONSE = "/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse` - defines the response for MsgSendTx
 */
export type IbcApplicationsInterchainAccountsControllerMsgSendTxResponse = {
    sequence?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: params - defines the 27-interchain-accounts/controller parameters to update. NOTE: All parameters must be supplied.
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgUpdateParams: (g_struct: IbcApplicationsInterchainAccountsControllerMsgUpdateParams) => [signer?: string, params?: IbcApplicationsInterchainAccountsControllerParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_UPDATE_PARAMS = "/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams` - defines the payload for Msg/UpdateParams
 */
export type IbcApplicationsInterchainAccountsControllerMsgUpdateParams = {
    signer?: string | undefined;
    params?: IbcApplicationsInterchainAccountsControllerParams | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse: (g_struct: IbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_UPDATE_PARAMS_RESPONSE = "/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse` - defines the response for Msg/UpdateParams
 */
export type IbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = {};
