import { decode_protobuf } from '../../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../../api/protobuf-writer.js';
import { decodeIbcApplicationsInterchainAccountsControllerParams } from './controller.js';
import { decodeIbcApplicationsInterchainAccountsInterchainAccountPacketData } from '../../v1/packet.js';
/**
 * Encodes a `MsgRegisterInterchainAccount` protobuf message: defines the payload for Msg/RegisterAccount
 * @param sa_owner - `owner`:
 * @param si_connection - `connection_id`:
 * @param s_version - `version`:
 * @param xc_ordering - `ordering`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = (sa_owner, si_connection, s_version, xc_ordering) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(si_connection) // string connection_id = 2
    .s(s_version) // string version = 3
    .v(xc_ordering) // Order ordering = 4
    .o;
/**
 * Encodes a `MsgRegisterInterchainAccountResponse` protobuf message: defines the response for Msg/RegisterAccount
 * @param si_channel - `channel_id`:
 * @param si_port - `port_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = (si_channel, si_port) => Protobuf() // ...
    .s(si_channel) // string channel_id = 1
    .s(si_port) // string port_id = 2
    .o;
/**
 * Encodes a `MsgSendTx` protobuf message: defines the payload for Msg/SendTx
 * @param sa_owner - `owner`:
 * @param si_connection - `connection_id`:
 * @param g_packet_data - `packet_data`:
 * @param sg_relative_timeout - `relative_timeout`: Relative timeout timestamp provided will be added to the current block time during transaction execution. The timeout timestamp must be non-zero.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgSendTx = (sa_owner, si_connection, atu8_packet_data, sg_relative_timeout) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(si_connection) // string connection_id = 2
    .b(atu8_packet_data) // InterchainAccountPacketData packet_data = 3
    .g(sg_relative_timeout) // uint64 relative_timeout = 4
    .o;
/**
 * Encodes a `MsgSendTxResponse` protobuf message: defines the response for MsgSendTx
 * @param sg_sequence - `sequence`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse = (sg_sequence) => Protobuf() // ...
    .g(sg_sequence) // uint64 sequence = 1
    .o;
/**
 * Encodes a `MsgUpdateParams` protobuf message: defines the payload for Msg/UpdateParams
 * @param s_signer - `signer`: address
 * @param g_params - `params`: defines the 27-interchain-accounts/controller parameters to update. NOTE: All parameters must be supplied.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams = (s_signer, atu8_params) => Protobuf() // ...
    .s(s_signer) // string signer = 1
    .b(atu8_params) // Params params = 2
    .o;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response for Msg/UpdateParams
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf RegisterInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5, 1]);
/**
 * Decodes a protobuf RegisterInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf SendTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgSendTx}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgSendTx = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1, 3], [0, 0, decodeIbcApplicationsInterchainAccountsInterchainAccountPacketData]);
/**
 * Decodes a protobuf SendTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgSendTxResponse}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParams}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeIbcApplicationsInterchainAccountsControllerParams]);
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse}
 */
export const decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: version -
 *   - 3: ordering -
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount = (g_struct) => [g_struct.owner, g_struct.connection_id, g_struct.version, g_struct.ordering];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_REGISTER_INTERCHAIN_ACCOUNT = '/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: channel_id -
 *   - 1: port_id -
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse = (g_struct) => [g_struct.channel_id, g_struct.port_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_REGISTER_INTERCHAIN_ACCOUNT_RESPONSE = '/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgSendTx} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: connection_id -
 *   - 2: packet_data -
 *   - 3: relative_timeout - Relative timeout timestamp provided will be added to the current block time during transaction execution. The timeout timestamp must be non-zero.
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgSendTx = (g_struct) => [g_struct.owner, g_struct.connection_id, g_struct.packet_data, g_struct.relative_timeout];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_SEND_TX = '/ibc.applications.interchain_accounts.controller.v1.MsgSendTx';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgSendTxResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sequence -
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgSendTxResponse = (g_struct) => [g_struct.sequence];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_SEND_TX_RESPONSE = '/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: params - defines the 27-interchain-accounts/controller parameters to update. NOTE: All parameters must be supplied.
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgUpdateParams = (g_struct) => [g_struct.signer, g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_UPDATE_PARAMS = '/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_CONTROLLER_MSG_UPDATE_PARAMS_RESPONSE = '/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse';
//# sourceMappingURL=tx.js.map