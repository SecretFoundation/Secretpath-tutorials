import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../../api/types.js';
import type { IbcApplicationsInterchainAccountsControllerParams, DecodedIbcApplicationsInterchainAccountsControllerParams } from '../../controller/v1/controller.js';
import type { IbcApplicationsInterchainAccountsHostParams, DecodedIbcApplicationsInterchainAccountsHostParams } from '../../host/v1/host.js';
export type EncodedIbcApplicationsInterchainAccountsGenesisGenesisState = Encoded<'/ibc.applications.interchain_accounts.genesis.v1.GenesisState'>;
export type EncodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState = Encoded<'/ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState'>;
export type EncodedIbcApplicationsInterchainAccountsGenesisHostGenesisState = Encoded<'/ibc.applications.interchain_accounts.genesis.v1.HostGenesisState'>;
export type EncodedIbcApplicationsInterchainAccountsGenesisActiveChannel = Encoded<'/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel'>;
export type EncodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = Encoded<'/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the interchain accounts genesis state
 * @param g_controller_genesis_state - `controller_genesis_state`:
 * @param g_host_genesis_state - `host_genesis_state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsGenesisGenesisState: (atu8_controller_genesis_state?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState'>>, atu8_host_genesis_state?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.HostGenesisState'>>) => EncodedIbcApplicationsInterchainAccountsGenesisGenesisState;
/**
 * Encodes a `ControllerGenesisState` protobuf message: defines the interchain accounts controller genesis state
 * @param a_active_channels - `active_channels`:
 * @param a_interchain_accounts - `interchain_accounts`:
 * @param a_ports - `ports`:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState: (a_active_channels?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel'>[]>, a_interchain_accounts?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount'>[]>, a_ports?: Opt<string[]>, atu8_params?: Opt<Encoded<'/ibc.applications.interchain_accounts.controller.v1.Params'>>) => EncodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState;
/**
 * Encodes a `HostGenesisState` protobuf message: defines the interchain accounts host genesis state
 * @param a_active_channels - `active_channels`:
 * @param a_interchain_accounts - `interchain_accounts`:
 * @param s_port - `port`:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsGenesisHostGenesisState: (a_active_channels?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel'>[]>, a_interchain_accounts?: Opt<Encoded<'/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount'>[]>, s_port?: Opt<string>, atu8_params?: Opt<Encoded<'/ibc.applications.interchain_accounts.host.v1.Params'>>) => EncodedIbcApplicationsInterchainAccountsGenesisHostGenesisState;
/**
 * Encodes a `ActiveChannel` protobuf message: contains a connection ID, port ID and associated active channel ID, as well as a boolean flag to indicate if the channel is middleware enabled
 * @param si_connection - `connection_id`:
 * @param si_port - `port_id`:
 * @param si_channel - `channel_id`:
 * @param b_is_middleware_enabled - `is_middleware_enabled`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsGenesisActiveChannel: (si_connection?: Opt<string>, si_port?: Opt<string>, si_channel?: Opt<string>, b_is_middleware_enabled?: Opt<boolean | 0 | 1>) => EncodedIbcApplicationsInterchainAccountsGenesisActiveChannel;
/**
 * Encodes a `RegisteredInterchainAccount` protobuf message: contains a connection ID, port ID and associated interchain account address
 * @param si_connection - `connection_id`:
 * @param si_port - `port_id`:
 * @param sa_account - `account_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount: (si_connection?: Opt<string>, si_port?: Opt<string>, sa_account?: Opt<WeakAccountAddr>) => EncodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: controller_genesis_state -
 *   - 1: host_genesis_state -
 */
export type DecodedIbcApplicationsInterchainAccountsGenesisGenesisState = [
    a_controller_genesis_state?: DecodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState,
    a_host_genesis_state?: DecodedIbcApplicationsInterchainAccountsGenesisHostGenesisState
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisGenesisState}
 */
export declare const decodeIbcApplicationsInterchainAccountsGenesisGenesisState: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsGenesisGenesisState;
/**
 * A decoded protobuf ControllerGenesisState message
 *
 * Tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: ports -
 *   - 3: params -
 */
export type DecodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState = [
    a_active_channels?: DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel[],
    a_interchain_accounts?: DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[],
    a_ports?: string[],
    a_params?: DecodedIbcApplicationsInterchainAccountsControllerParams
];
/**
 * Decodes a protobuf ControllerGenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState}
 */
export declare const decodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState;
/**
 * A decoded protobuf HostGenesisState message
 *
 * Tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: port -
 *   - 3: params -
 */
export type DecodedIbcApplicationsInterchainAccountsGenesisHostGenesisState = [
    a_active_channels?: DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel[],
    a_interchain_accounts?: DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[],
    s_port?: string,
    a_params?: DecodedIbcApplicationsInterchainAccountsHostParams
];
/**
 * Decodes a protobuf HostGenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisHostGenesisState}
 */
export declare const decodeIbcApplicationsInterchainAccountsGenesisHostGenesisState: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsGenesisHostGenesisState;
/**
 * A decoded protobuf ActiveChannel message
 *
 * Tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: channel_id -
 *   - 3: is_middleware_enabled -
 */
export type DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel = [
    si_connection?: string,
    si_port?: string,
    si_channel?: string,
    b_is_middleware_enabled?: 0 | 1
];
/**
 * Decodes a protobuf ActiveChannel message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel}
 */
export declare const decodeIbcApplicationsInterchainAccountsGenesisActiveChannel: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel;
/**
 * A decoded protobuf RegisteredInterchainAccount message
 *
 * Tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: account_address -
 */
export type DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = [
    si_connection?: string,
    si_port?: string,
    sa_account?: CwAccountAddr
];
/**
 * Decodes a protobuf RegisteredInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount}
 */
export declare const decodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount;
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: controller_genesis_state -
 *   - 1: host_genesis_state -
 */
export declare const destructIbcApplicationsInterchainAccountsGenesisGenesisState: (g_struct: IbcApplicationsInterchainAccountsGenesisGenesisState) => [controller_genesis_state?: IbcApplicationsInterchainAccountsGenesisControllerGenesisState, host_genesis_state?: IbcApplicationsInterchainAccountsGenesisHostGenesisState];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_GENESIS_STATE = "/ibc.applications.interchain_accounts.genesis.v1.GenesisState";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.genesis.v1.GenesisState` - defines the interchain accounts genesis state
 */
export type IbcApplicationsInterchainAccountsGenesisGenesisState = {
    controller_genesis_state?: IbcApplicationsInterchainAccountsGenesisControllerGenesisState | undefined;
    host_genesis_state?: IbcApplicationsInterchainAccountsGenesisHostGenesisState | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisControllerGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: ports -
 *   - 3: params -
 */
export declare const destructIbcApplicationsInterchainAccountsGenesisControllerGenesisState: (g_struct: IbcApplicationsInterchainAccountsGenesisControllerGenesisState) => [active_channels?: IbcApplicationsInterchainAccountsGenesisActiveChannel[], interchain_accounts?: IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[], ports?: string[], params?: IbcApplicationsInterchainAccountsControllerParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_CONTROLLER_GENESIS_STATE = "/ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState` - defines the interchain accounts controller genesis state
 */
export type IbcApplicationsInterchainAccountsGenesisControllerGenesisState = {
    active_channels?: IbcApplicationsInterchainAccountsGenesisActiveChannel[] | undefined;
    interchain_accounts?: IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[] | undefined;
    ports?: string[] | undefined;
    params?: IbcApplicationsInterchainAccountsControllerParams | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisActiveChannel} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: channel_id -
 *   - 3: is_middleware_enabled -
 */
export declare const destructIbcApplicationsInterchainAccountsGenesisActiveChannel: (g_struct: IbcApplicationsInterchainAccountsGenesisActiveChannel) => [connection_id?: string, port_id?: string, channel_id?: string, is_middleware_enabled?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_ACTIVE_CHANNEL = "/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.genesis.v1.ActiveChannel` - contains a connection ID, port ID and associated active channel ID, as well as a boolean flag to indicate if the channel is middleware enabled
 */
export type IbcApplicationsInterchainAccountsGenesisActiveChannel = {
    connection_id?: string | undefined;
    port_id?: string | undefined;
    channel_id?: string | undefined;
    is_middleware_enabled?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: account_address -
 */
export declare const destructIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount: (g_struct: IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount) => [connection_id?: string, port_id?: string, account_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_REGISTERED_INTERCHAIN_ACCOUNT = "/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount` - contains a connection ID, port ID and associated interchain account address
 */
export type IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = {
    connection_id?: string | undefined;
    port_id?: string | undefined;
    account_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisHostGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: port -
 *   - 3: params -
 */
export declare const destructIbcApplicationsInterchainAccountsGenesisHostGenesisState: (g_struct: IbcApplicationsInterchainAccountsGenesisHostGenesisState) => [active_channels?: IbcApplicationsInterchainAccountsGenesisActiveChannel[], interchain_accounts?: IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[], port?: string, params?: IbcApplicationsInterchainAccountsHostParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_HOST_GENESIS_STATE = "/ibc.applications.interchain_accounts.genesis.v1.HostGenesisState";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.genesis.v1.HostGenesisState` - defines the interchain accounts host genesis state
 */
export type IbcApplicationsInterchainAccountsGenesisHostGenesisState = {
    active_channels?: IbcApplicationsInterchainAccountsGenesisActiveChannel[] | undefined;
    interchain_accounts?: IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount[] | undefined;
    port?: string | undefined;
    params?: IbcApplicationsInterchainAccountsHostParams | undefined;
};
