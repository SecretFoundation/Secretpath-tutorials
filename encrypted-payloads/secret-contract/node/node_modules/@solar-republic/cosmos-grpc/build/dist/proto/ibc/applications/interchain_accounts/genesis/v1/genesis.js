import { decode_protobuf } from '../../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../../api/protobuf-writer.js';
import { decodeIbcApplicationsInterchainAccountsControllerParams } from '../../controller/v1/controller.js';
import { decodeIbcApplicationsInterchainAccountsHostParams } from '../../host/v1/host.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the interchain accounts genesis state
 * @param g_controller_genesis_state - `controller_genesis_state`:
 * @param g_host_genesis_state - `host_genesis_state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsGenesisGenesisState = (atu8_controller_genesis_state, atu8_host_genesis_state) => Protobuf() // ...
    .b(atu8_controller_genesis_state) // ControllerGenesisState controller_genesis_state = 1
    .b(atu8_host_genesis_state) // HostGenesisState host_genesis_state = 2
    .o;
/**
 * Encodes a `ControllerGenesisState` protobuf message: defines the interchain accounts controller genesis state
 * @param a_active_channels - `active_channels`:
 * @param a_interchain_accounts - `interchain_accounts`:
 * @param a_ports - `ports`:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState = (a_active_channels, a_interchain_accounts, a_ports, atu8_params) => Protobuf() // ...
    .B(a_active_channels) // ActiveChannel[] active_channels = 1
    .B(a_interchain_accounts) // RegisteredInterchainAccount[] interchain_accounts = 2
    .S(a_ports) // string[] ports = 3
    .b(atu8_params) // Params params = 4
    .o;
/**
 * Encodes a `HostGenesisState` protobuf message: defines the interchain accounts host genesis state
 * @param a_active_channels - `active_channels`:
 * @param a_interchain_accounts - `interchain_accounts`:
 * @param s_port - `port`:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsGenesisHostGenesisState = (a_active_channels, a_interchain_accounts, s_port, atu8_params) => Protobuf() // ...
    .B(a_active_channels) // ActiveChannel[] active_channels = 1
    .B(a_interchain_accounts) // RegisteredInterchainAccount[] interchain_accounts = 2
    .s(s_port) // string port = 3
    .b(atu8_params) // Params params = 4
    .o;
/**
 * Encodes a `ActiveChannel` protobuf message: contains a connection ID, port ID and associated active channel ID, as well as a boolean flag to indicate if the channel is middleware enabled
 * @param si_connection - `connection_id`:
 * @param si_port - `port_id`:
 * @param si_channel - `channel_id`:
 * @param b_is_middleware_enabled - `is_middleware_enabled`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsGenesisActiveChannel = (si_connection, si_port, si_channel, b_is_middleware_enabled) => Protobuf() // ...
    .s(si_connection) // string connection_id = 1
    .s(si_port) // string port_id = 2
    .s(si_channel) // string channel_id = 3
    .v(b_is_middleware_enabled) // boolean is_middleware_enabled = 4
    .o;
/**
 * Encodes a `RegisteredInterchainAccount` protobuf message: contains a connection ID, port ID and associated interchain account address
 * @param si_connection - `connection_id`:
 * @param si_port - `port_id`:
 * @param sa_account - `account_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = (si_connection, si_port, sa_account) => Protobuf() // ...
    .s(si_connection) // string connection_id = 1
    .s(si_port) // string port_id = 2
    .s(sa_account) // string account_address = 3
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisGenesisState}
 */
export const decodeIbcApplicationsInterchainAccountsGenesisGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState, decodeIbcApplicationsInterchainAccountsGenesisHostGenesisState]);
/**
 * Decodes a protobuf ControllerGenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisControllerGenesisState}
 */
export const decodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0, 4, 1], [decodeIbcApplicationsInterchainAccountsGenesisActiveChannel, decodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount, 0, decodeIbcApplicationsInterchainAccountsControllerParams]);
/**
 * Decodes a protobuf HostGenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisHostGenesisState}
 */
export const decodeIbcApplicationsInterchainAccountsGenesisHostGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0, 5, 1], [decodeIbcApplicationsInterchainAccountsGenesisActiveChannel, decodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount, 0, decodeIbcApplicationsInterchainAccountsHostParams]);
/**
 * Decodes a protobuf ActiveChannel message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisActiveChannel}
 */
export const decodeIbcApplicationsInterchainAccountsGenesisActiveChannel = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5, 1]);
/**
 * Decodes a protobuf RegisteredInterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount}
 */
export const decodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: controller_genesis_state -
 *   - 1: host_genesis_state -
 */
export const destructIbcApplicationsInterchainAccountsGenesisGenesisState = (g_struct) => [g_struct.controller_genesis_state, g_struct.host_genesis_state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_GENESIS_STATE = '/ibc.applications.interchain_accounts.genesis.v1.GenesisState';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisControllerGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: ports -
 *   - 3: params -
 */
export const destructIbcApplicationsInterchainAccountsGenesisControllerGenesisState = (g_struct) => [g_struct.active_channels, g_struct.interchain_accounts, g_struct.ports, g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_CONTROLLER_GENESIS_STATE = '/ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisActiveChannel} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: channel_id -
 *   - 3: is_middleware_enabled -
 */
export const destructIbcApplicationsInterchainAccountsGenesisActiveChannel = (g_struct) => [g_struct.connection_id, g_struct.port_id, g_struct.channel_id, g_struct.is_middleware_enabled];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_ACTIVE_CHANNEL = '/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: connection_id -
 *   - 1: port_id -
 *   - 2: account_address -
 */
export const destructIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount = (g_struct) => [g_struct.connection_id, g_struct.port_id, g_struct.account_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_REGISTERED_INTERCHAIN_ACCOUNT = '/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount';
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsGenesisHostGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: active_channels -
 *   - 1: interchain_accounts -
 *   - 2: port -
 *   - 3: params -
 */
export const destructIbcApplicationsInterchainAccountsGenesisHostGenesisState = (g_struct) => [g_struct.active_channels, g_struct.interchain_accounts, g_struct.port, g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_GENESIS_HOST_GENESIS_STATE = '/ibc.applications.interchain_accounts.genesis.v1.HostGenesisState';
//# sourceMappingURL=genesis.js.map