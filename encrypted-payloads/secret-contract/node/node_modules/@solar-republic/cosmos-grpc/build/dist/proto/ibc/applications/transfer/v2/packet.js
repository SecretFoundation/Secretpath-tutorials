import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
/**
 * Encodes a `FungibleTokenPacketData` protobuf message: defines a struct for the packet payload See FungibleTokenPacketData spec: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 * @param s_denom - `denom`: the token denomination to be transferred
 * @param s_amount - `amount`: the token amount to be transferred
 * @param sa_sender - `sender`: the sender address
 * @param sa_receiver - `receiver`: the recipient address on the destination chain
 * @param s_memo - `memo`: optional memo
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsTransferFungibleTokenPacketData = (s_denom, s_amount, sa_sender, sa_receiver, s_memo) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .s(s_amount) // string amount = 2
    .s(sa_sender) // string sender = 3
    .s(sa_receiver) // string receiver = 4
    .s(s_memo) // string memo = 5
    .o;
/**
 * Decodes a protobuf FungibleTokenPacketData message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsTransferFungibleTokenPacketData}
 */
export const decodeIbcApplicationsTransferFungibleTokenPacketData = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5, 5, 5]);
/**
 * Destructures the fields of a {@link IbcApplicationsTransferFungibleTokenPacketData} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom - the token denomination to be transferred
 *   - 1: amount - the token amount to be transferred
 *   - 2: sender - the sender address
 *   - 3: receiver - the recipient address on the destination chain
 *   - 4: memo - optional memo
 */
export const destructIbcApplicationsTransferFungibleTokenPacketData = (g_struct) => [g_struct.denom, g_struct.amount, g_struct.sender, g_struct.receiver, g_struct.memo];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_TRANSFER_FUNGIBLE_TOKEN_PACKET_DATA = '/ibc.applications.transfer.v2.FungibleTokenPacketData';
//# sourceMappingURL=packet.js.map