/// <reference types="node" />
import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../../cosmos/base/query/v1beta1/pagination.js';
import type { DecodedGoogleProtobufAny } from '../../../../google/protobuf/any.js';
import type { IbcCoreClientHeight, DecodedIbcCoreClientHeight, IbcCoreClientIdentifiedClientState, DecodedIbcCoreClientIdentifiedClientState, IbcCoreClientConsensusStateWithHeight, DecodedIbcCoreClientConsensusStateWithHeight, IbcCoreClientParams, DecodedIbcCoreClientParams } from './client.js';
export type EncodedIbcCoreClientQueryClientStateRequest = Encoded<'/ibc.core.client.v1.QueryClientStateRequest'>;
export type EncodedIbcCoreClientQueryClientStateResponse = Encoded<'/ibc.core.client.v1.QueryClientStateResponse'>;
export type EncodedIbcCoreClientQueryClientStatesRequest = Encoded<'/ibc.core.client.v1.QueryClientStatesRequest'>;
export type EncodedIbcCoreClientQueryClientStatesResponse = Encoded<'/ibc.core.client.v1.QueryClientStatesResponse'>;
export type EncodedIbcCoreClientQueryConsensusStateRequest = Encoded<'/ibc.core.client.v1.QueryConsensusStateRequest'>;
export type EncodedIbcCoreClientQueryConsensusStateResponse = Encoded<'/ibc.core.client.v1.QueryConsensusStateResponse'>;
export type EncodedIbcCoreClientQueryConsensusStatesRequest = Encoded<'/ibc.core.client.v1.QueryConsensusStatesRequest'>;
export type EncodedIbcCoreClientQueryConsensusStatesResponse = Encoded<'/ibc.core.client.v1.QueryConsensusStatesResponse'>;
export type EncodedIbcCoreClientQueryConsensusStateHeightsRequest = Encoded<'/ibc.core.client.v1.QueryConsensusStateHeightsRequest'>;
export type EncodedIbcCoreClientQueryConsensusStateHeightsResponse = Encoded<'/ibc.core.client.v1.QueryConsensusStateHeightsResponse'>;
export type EncodedIbcCoreClientQueryClientStatusRequest = Encoded<'/ibc.core.client.v1.QueryClientStatusRequest'>;
export type EncodedIbcCoreClientQueryClientStatusResponse = Encoded<'/ibc.core.client.v1.QueryClientStatusResponse'>;
export type EncodedIbcCoreClientQueryClientParamsRequest = Encoded<'/ibc.core.client.v1.QueryClientParamsRequest'>;
export type EncodedIbcCoreClientQueryClientParamsResponse = Encoded<'/ibc.core.client.v1.QueryClientParamsResponse'>;
export type EncodedIbcCoreClientQueryUpgradedClientStateRequest = Encoded<'/ibc.core.client.v1.QueryUpgradedClientStateRequest'>;
export type EncodedIbcCoreClientQueryUpgradedClientStateResponse = Encoded<'/ibc.core.client.v1.QueryUpgradedClientStateResponse'>;
export type EncodedIbcCoreClientQueryUpgradedConsensusStateRequest = Encoded<'/ibc.core.client.v1.QueryUpgradedConsensusStateRequest'>;
export type EncodedIbcCoreClientQueryUpgradedConsensusStateResponse = Encoded<'/ibc.core.client.v1.QueryUpgradedConsensusStateResponse'>;
/**
 * Queries an IBC light client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client state unique identifier
 * @returns a tuple where:
 *   - 0: client_state - client state associated with the request identifier
 *   - 1: proof - client state associated with the request identifier
 *   - 2: proof_height - client state associated with the request identifier
 */
export declare const queryIbcCoreClientClientState: (z_req: string | ({
    origin: string;
} & RequestInit), si_client?: Opt<string>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryClientStateResponse>>;
/**
 * Queries all the IBC light clients of a chain.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: client_states - list of stored ClientStates of the chain.
 *   - 1: pagination - list of stored ClientStates of the chain.
 */
export declare const queryIbcCoreClientClientStates: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryClientStatesResponse>>;
/**
 * Queries a consensus state associated with a client state at a given height.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param sg_revision_number - consensus state revision number
 * @param sg_revision_height - consensus state revision height
 * @param b_latest_height - overrides the height field and queries the latest stored ConsensusState
 * @returns a tuple where:
 *   - 0: consensus_state - consensus state associated with the client identifier at the given height
 *   - 1: proof - consensus state associated with the client identifier at the given height
 *   - 2: proof_height - consensus state associated with the client identifier at the given height
 */
export declare const queryIbcCoreClientConsensusState: (z_req: string | ({
    origin: string;
} & RequestInit), si_client?: Opt<string>, sg_revision_number?: Opt<`${bigint}`>, sg_revision_height?: Opt<`${bigint}`>, b_latest_height?: Opt<boolean | 0 | 1>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryConsensusStateResponse>>;
/**
 * Queries all the consensus state associated with a given client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: consensus_states - consensus states associated with the identifier
 *   - 1: pagination - consensus states associated with the identifier
 */
export declare const queryIbcCoreClientConsensusStates: (z_req: string | ({
    origin: string;
} & RequestInit), si_client?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryConsensusStatesResponse>>;
/**
 * Queries the height of every consensus states associated with a given client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: consensus_state_heights - consensus state heights
 *   - 1: pagination - consensus state heights
 */
export declare const queryIbcCoreClientConsensusStateHeights: (z_req: string | ({
    origin: string;
} & RequestInit), si_client?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryConsensusStateHeightsResponse>>;
/**
 * Status queries the status of an IBC client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client unique identifier
 * @returns a tuple where:
 *   - 0: status - the 'status' response property
 */
export declare const queryIbcCoreClientClientStatus: (z_req: string | ({
    origin: string;
} & RequestInit), si_client?: Opt<string>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryClientStatusResponse>>;
/**
 * Queries all parameters of the ibc client submodule.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryIbcCoreClientClientParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryClientParamsResponse>>;
/**
 * Queries an Upgraded IBC light client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: upgraded_client_state - client state associated with the request identifier
 */
export declare const queryIbcCoreClientUpgradedClientState: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryUpgradedClientStateResponse>>;
/**
 * Queries an Upgraded IBC consensus state.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: upgraded_consensus_state - Consensus state associated with the request identifier
 */
export declare const queryIbcCoreClientUpgradedConsensusState: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcCoreClientQueryUpgradedConsensusStateResponse>>;
/**
 * Encodes a `QueryClientStateRequest` protobuf message: the request type for the Query/ClientState RPC method
 * @param si_client - `client_id`: client state unique identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStateRequest: (si_client?: Opt<string>) => EncodedIbcCoreClientQueryClientStateRequest;
/**
 * Encodes a `QueryClientStateResponse` protobuf message: the response type for the Query/ClientState RPC method. Besides the client state, it includes a proof and the height from which the proof was retrieved.
 * @param atu8_client_state - `client_state`: client state associated with the request identifier
 * @param atu8_proof - `proof`: merkle proof of existence
 * @param g_proof_height - `proof_height`: height at which the proof was retrieved
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStateResponse: (atu8_client_state?: Opt<Uint8Array>, atu8_proof?: Opt<Uint8Array>, atu8_proof_height?: Opt<Encoded<'/ibc.core.client.v1.Height'>>) => EncodedIbcCoreClientQueryClientStateResponse;
/**
 * Encodes a `QueryClientStatesRequest` protobuf message: the request type for the Query/ClientStates RPC method
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStatesRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedIbcCoreClientQueryClientStatesRequest;
/**
 * Encodes a `QueryClientStatesResponse` protobuf message: the response type for the Query/ClientStates RPC method.
 * @param a_client_states - `client_states`: list of stored ClientStates of the chain.
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStatesResponse: (a_client_states?: Opt<Encoded<'/ibc.core.client.v1.IdentifiedClientState'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedIbcCoreClientQueryClientStatesResponse;
/**
 * Encodes a `QueryConsensusStateRequest` protobuf message: the request type for the Query/ConsensusState RPC method. Besides the consensus state, it includes a proof and the height from which the proof was retrieved.
 * @param si_client - `client_id`: client identifier
 * @param sg_revision_number - `revision_number`: consensus state revision number
 * @param sg_revision_height - `revision_height`: consensus state revision height
 * @param b_latest_height - `latest_height`: overrides the height field and queries the latest stored ConsensusState
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStateRequest: (si_client?: Opt<string>, sg_revision_number?: Opt<WeakUint64Str>, sg_revision_height?: Opt<WeakUint64Str>, b_latest_height?: Opt<boolean | 0 | 1>) => EncodedIbcCoreClientQueryConsensusStateRequest;
/**
 * Encodes a `QueryConsensusStateResponse` protobuf message: the response type for the Query/ConsensusState RPC method
 * @param atu8_consensus_state - `consensus_state`: consensus state associated with the client identifier at the given height
 * @param atu8_proof - `proof`: merkle proof of existence
 * @param g_proof_height - `proof_height`: height at which the proof was retrieved
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStateResponse: (atu8_consensus_state?: Opt<Uint8Array>, atu8_proof?: Opt<Uint8Array>, atu8_proof_height?: Opt<Encoded<'/ibc.core.client.v1.Height'>>) => EncodedIbcCoreClientQueryConsensusStateResponse;
/**
 * Encodes a `QueryConsensusStatesRequest` protobuf message: the request type for the Query/ConsensusStates RPC method.
 * @param si_client - `client_id`: client identifier
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStatesRequest: (si_client?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedIbcCoreClientQueryConsensusStatesRequest;
/**
 * Encodes a `QueryConsensusStatesResponse` protobuf message: the response type for the Query/ConsensusStates RPC method
 * @param a_consensus_states - `consensus_states`: consensus states associated with the identifier
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStatesResponse: (a_consensus_states?: Opt<Encoded<'/ibc.core.client.v1.ConsensusStateWithHeight'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedIbcCoreClientQueryConsensusStatesResponse;
/**
 * Encodes a `QueryConsensusStateHeightsRequest` protobuf message: the request type for Query/ConsensusStateHeights RPC method.
 * @param si_client - `client_id`: client identifier
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStateHeightsRequest: (si_client?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedIbcCoreClientQueryConsensusStateHeightsRequest;
/**
 * Encodes a `QueryConsensusStateHeightsResponse` protobuf message: the response type for the Query/ConsensusStateHeights RPC method
 * @param a_consensus_state_heights - `consensus_state_heights`: consensus state heights
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryConsensusStateHeightsResponse: (a_consensus_state_heights?: Opt<Encoded<'/ibc.core.client.v1.Height'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedIbcCoreClientQueryConsensusStateHeightsResponse;
/**
 * Encodes a `QueryClientStatusRequest` protobuf message: the request type for the Query/ClientStatus RPC method
 * @param si_client - `client_id`: client unique identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStatusRequest: (si_client?: Opt<string>) => EncodedIbcCoreClientQueryClientStatusRequest;
/**
 * Encodes a `QueryClientStatusResponse` protobuf message: the response type for the Query/ClientStatus RPC method. It returns the current status of the IBC client.
 * @param s_status - `status`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientStatusResponse: (s_status?: Opt<string>) => EncodedIbcCoreClientQueryClientStatusResponse;
/**
 * Encodes a `QueryClientParamsRequest` protobuf message: the request type for the Query/ClientParams RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientParamsRequest: () => EncodedIbcCoreClientQueryClientParamsRequest;
/**
 * Encodes a `QueryClientParamsResponse` protobuf message: the response type for the Query/ClientParams RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryClientParamsResponse: (atu8_params?: Opt<Encoded<'/ibc.core.client.v1.Params'>>) => EncodedIbcCoreClientQueryClientParamsResponse;
/**
 * Encodes a `QueryUpgradedClientStateRequest` protobuf message: the request type for the Query/UpgradedClientState RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryUpgradedClientStateRequest: () => EncodedIbcCoreClientQueryUpgradedClientStateRequest;
/**
 * Encodes a `QueryUpgradedClientStateResponse` protobuf message: the response type for the Query/UpgradedClientState RPC method.
 * @param atu8_upgraded_client_state - `upgraded_client_state`: client state associated with the request identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryUpgradedClientStateResponse: (atu8_upgraded_client_state?: Opt<Uint8Array>) => EncodedIbcCoreClientQueryUpgradedClientStateResponse;
/**
 * Encodes a `QueryUpgradedConsensusStateRequest` protobuf message: the request type for the Query/UpgradedConsensusState RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryUpgradedConsensusStateRequest: () => EncodedIbcCoreClientQueryUpgradedConsensusStateRequest;
/**
 * Encodes a `QueryUpgradedConsensusStateResponse` protobuf message: the response type for the Query/UpgradedConsensusState RPC method.
 * @param atu8_upgraded_consensus_state - `upgraded_consensus_state`: Consensus state associated with the request identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreClientQueryUpgradedConsensusStateResponse: (atu8_upgraded_consensus_state?: Opt<Uint8Array>) => EncodedIbcCoreClientQueryUpgradedConsensusStateResponse;
/**
 * A decoded protobuf QueryClientStateRequest message
 *
 * Alias for: client_id - client state unique identifier
 */
export type DecodedIbcCoreClientQueryClientStateRequest = [
    si_client?: string
];
/**
 * Decodes a protobuf QueryClientStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStateRequest}
 */
export declare const decodeIbcCoreClientQueryClientStateRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStateRequest;
/**
 * A decoded protobuf QueryClientState message
 *
 * Tuple where:
 *   - 0: client_state - client state associated with the request identifier
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export type DecodedIbcCoreClientQueryClientStateResponse = [
    a_client_state?: DecodedGoogleProtobufAny,
    atu8_proof?: Uint8Array,
    a_proof_height?: DecodedIbcCoreClientHeight
];
/**
 * Decodes a protobuf QueryClientState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStateResponse}
 */
export declare const decodeIbcCoreClientQueryClientStateResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStateResponse;
/**
 * A decoded protobuf QueryClientStatesRequest message
 *
 * Alias for: pagination - request
 */
export type DecodedIbcCoreClientQueryClientStatesRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryClientStatesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatesRequest}
 */
export declare const decodeIbcCoreClientQueryClientStatesRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStatesRequest;
/**
 * A decoded protobuf QueryClientStates message
 *
 * Tuple where:
 *   - 0: client_states - list of stored ClientStates of the chain.
 *   - 1: pagination - response
 */
export type DecodedIbcCoreClientQueryClientStatesResponse = [
    a_client_states?: DecodedIbcCoreClientIdentifiedClientState[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryClientStates message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatesResponse}
 */
export declare const decodeIbcCoreClientQueryClientStatesResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStatesResponse;
/**
 * A decoded protobuf QueryConsensusStateRequest message
 *
 * Tuple where:
 *   - 0: client_id - client identifier
 *   - 1: revision_number - consensus state revision number
 *   - 2: revision_height - consensus state revision height
 *   - 3: latest_height - overrides the height field and queries the latest stored ConsensusState
 */
export type DecodedIbcCoreClientQueryConsensusStateRequest = [
    si_client?: string,
    sg_revision_number?: CwUint64,
    sg_revision_height?: CwUint64,
    b_latest_height?: 0 | 1
];
/**
 * Decodes a protobuf QueryConsensusStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateRequest}
 */
export declare const decodeIbcCoreClientQueryConsensusStateRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStateRequest;
/**
 * A decoded protobuf QueryConsensusState message
 *
 * Tuple where:
 *   - 0: consensus_state - consensus state associated with the client identifier at the given height
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export type DecodedIbcCoreClientQueryConsensusStateResponse = [
    a_consensus_state?: DecodedGoogleProtobufAny,
    atu8_proof?: Uint8Array,
    a_proof_height?: DecodedIbcCoreClientHeight
];
/**
 * Decodes a protobuf QueryConsensusState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateResponse}
 */
export declare const decodeIbcCoreClientQueryConsensusStateResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStateResponse;
/**
 * A decoded protobuf QueryConsensusStatesRequest message
 *
 * Tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export type DecodedIbcCoreClientQueryConsensusStatesRequest = [
    si_client?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryConsensusStatesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStatesRequest}
 */
export declare const decodeIbcCoreClientQueryConsensusStatesRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStatesRequest;
/**
 * A decoded protobuf QueryConsensusStates message
 *
 * Tuple where:
 *   - 0: consensus_states - consensus states associated with the identifier
 *   - 1: pagination - response
 */
export type DecodedIbcCoreClientQueryConsensusStatesResponse = [
    a_consensus_states?: DecodedIbcCoreClientConsensusStateWithHeight[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryConsensusStates message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStatesResponse}
 */
export declare const decodeIbcCoreClientQueryConsensusStatesResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStatesResponse;
/**
 * A decoded protobuf QueryConsensusStateHeightsRequest message
 *
 * Tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export type DecodedIbcCoreClientQueryConsensusStateHeightsRequest = [
    si_client?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryConsensusStateHeightsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateHeightsRequest}
 */
export declare const decodeIbcCoreClientQueryConsensusStateHeightsRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStateHeightsRequest;
/**
 * A decoded protobuf QueryConsensusStateHeights message
 *
 * Tuple where:
 *   - 0: consensus_state_heights - consensus state heights
 *   - 1: pagination - response
 */
export type DecodedIbcCoreClientQueryConsensusStateHeightsResponse = [
    a_consensus_state_heights?: DecodedIbcCoreClientHeight[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryConsensusStateHeights message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateHeightsResponse}
 */
export declare const decodeIbcCoreClientQueryConsensusStateHeightsResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryConsensusStateHeightsResponse;
/**
 * A decoded protobuf QueryClientStatusRequest message
 *
 * Alias for: client_id - client unique identifier
 */
export type DecodedIbcCoreClientQueryClientStatusRequest = [
    si_client?: string
];
/**
 * Decodes a protobuf QueryClientStatusRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatusRequest}
 */
export declare const decodeIbcCoreClientQueryClientStatusRequest: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStatusRequest;
/**
 * A decoded protobuf QueryClientStatus message
 *
 * Alias for: status -
 */
export type DecodedIbcCoreClientQueryClientStatusResponse = [
    s_status?: string
];
/**
 * Decodes a protobuf QueryClientStatus message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatusResponse}
 */
export declare const decodeIbcCoreClientQueryClientStatusResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientStatusResponse;
/**
 * A decoded protobuf QueryClientParamsRequest message
 *
 * Tuple where:
 */
export type DecodedIbcCoreClientQueryClientParamsRequest = [];
/**
 * Decodes a protobuf QueryClientParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientParamsRequest}
 */
export declare const decodeIbcCoreClientQueryClientParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryClientParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedIbcCoreClientQueryClientParamsResponse = [
    a_params?: DecodedIbcCoreClientParams
];
/**
 * Decodes a protobuf QueryClientParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientParamsResponse}
 */
export declare const decodeIbcCoreClientQueryClientParamsResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryClientParamsResponse;
/**
 * A decoded protobuf QueryUpgradedClientStateRequest message
 *
 * Tuple where:
 */
export type DecodedIbcCoreClientQueryUpgradedClientStateRequest = [];
/**
 * Decodes a protobuf QueryUpgradedClientStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedClientStateRequest}
 */
export declare const decodeIbcCoreClientQueryUpgradedClientStateRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryUpgradedClientState message
 *
 * Alias for: upgraded_client_state - client state associated with the request identifier
 */
export type DecodedIbcCoreClientQueryUpgradedClientStateResponse = [
    a_upgraded_client_state?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryUpgradedClientState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedClientStateResponse}
 */
export declare const decodeIbcCoreClientQueryUpgradedClientStateResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryUpgradedClientStateResponse;
/**
 * A decoded protobuf QueryUpgradedConsensusStateRequest message
 *
 * Tuple where:
 */
export type DecodedIbcCoreClientQueryUpgradedConsensusStateRequest = [];
/**
 * Decodes a protobuf QueryUpgradedConsensusStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedConsensusStateRequest}
 */
export declare const decodeIbcCoreClientQueryUpgradedConsensusStateRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryUpgradedConsensusState message
 *
 * Alias for: upgraded_consensus_state - Consensus state associated with the request identifier
 */
export type DecodedIbcCoreClientQueryUpgradedConsensusStateResponse = [
    a_upgraded_consensus_state?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryUpgradedConsensusState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedConsensusStateResponse}
 */
export declare const decodeIbcCoreClientQueryUpgradedConsensusStateResponse: (atu8_payload: Uint8Array) => DecodedIbcCoreClientQueryUpgradedConsensusStateResponse;
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client state unique identifier
 */
export declare const destructIbcCoreClientQueryClientStateRequest: (g_struct: IbcCoreClientQueryClientStateRequest) => [client_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATE_REQUEST = "/ibc.core.client.v1.QueryClientStateRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStateRequest` - the request type for the Query/ClientState RPC method
 */
export type IbcCoreClientQueryClientStateRequest = {
    client_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_state - client state associated with the request identifier
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export declare const destructIbcCoreClientQueryClientStateResponse: (g_struct: IbcCoreClientQueryClientStateResponse) => [client_state?: JsonAny, proof?: Uint8Array, proof_height?: IbcCoreClientHeight];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATE_RESPONSE = "/ibc.core.client.v1.QueryClientStateResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStateResponse` - the response type for the Query/ClientState RPC method. Besides the client state, it includes a proof and the height from which the proof was retrieved.
 */
export type IbcCoreClientQueryClientStateResponse = {
    client_state?: JsonAny | undefined;
    proof?: CwBase64 | undefined;
    proof_height?: IbcCoreClientHeight | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - request
 */
export declare const destructIbcCoreClientQueryClientStatesRequest: (g_struct: IbcCoreClientQueryClientStatesRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATES_REQUEST = "/ibc.core.client.v1.QueryClientStatesRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStatesRequest` - the request type for the Query/ClientStates RPC method
 */
export type IbcCoreClientQueryClientStatesRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_states - list of stored ClientStates of the chain.
 *   - 1: pagination - response
 */
export declare const destructIbcCoreClientQueryClientStatesResponse: (g_struct: IbcCoreClientQueryClientStatesResponse) => [client_states?: IbcCoreClientIdentifiedClientState[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATES_RESPONSE = "/ibc.core.client.v1.QueryClientStatesResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStatesResponse` - the response type for the Query/ClientStates RPC method.
 */
export type IbcCoreClientQueryClientStatesResponse = {
    client_states?: IbcCoreClientIdentifiedClientState[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: revision_number - consensus state revision number
 *   - 2: revision_height - consensus state revision height
 *   - 3: latest_height - overrides the height field and queries the latest stored ConsensusState
 */
export declare const destructIbcCoreClientQueryConsensusStateRequest: (g_struct: IbcCoreClientQueryConsensusStateRequest) => [client_id?: string, revision_number?: CwUint64, revision_height?: CwUint64, latest_height?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_REQUEST = "/ibc.core.client.v1.QueryConsensusStateRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStateRequest` - the request type for the Query/ConsensusState RPC method. Besides the consensus state, it includes a proof and the height from which the proof was retrieved.
 */
export type IbcCoreClientQueryConsensusStateRequest = {
    client_id?: string | undefined;
    revision_number?: CwUint64 | undefined;
    revision_height?: CwUint64 | undefined;
    latest_height?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_state - consensus state associated with the client identifier at the given height
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export declare const destructIbcCoreClientQueryConsensusStateResponse: (g_struct: IbcCoreClientQueryConsensusStateResponse) => [consensus_state?: JsonAny, proof?: Uint8Array, proof_height?: IbcCoreClientHeight];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_RESPONSE = "/ibc.core.client.v1.QueryConsensusStateResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStateResponse` - the response type for the Query/ConsensusState RPC method
 */
export type IbcCoreClientQueryConsensusStateResponse = {
    consensus_state?: JsonAny | undefined;
    proof?: CwBase64 | undefined;
    proof_height?: IbcCoreClientHeight | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStatesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export declare const destructIbcCoreClientQueryConsensusStatesRequest: (g_struct: IbcCoreClientQueryConsensusStatesRequest) => [client_id?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATES_REQUEST = "/ibc.core.client.v1.QueryConsensusStatesRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStatesRequest` - the request type for the Query/ConsensusStates RPC method.
 */
export type IbcCoreClientQueryConsensusStatesRequest = {
    client_id?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStatesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_states - consensus states associated with the identifier
 *   - 1: pagination - response
 */
export declare const destructIbcCoreClientQueryConsensusStatesResponse: (g_struct: IbcCoreClientQueryConsensusStatesResponse) => [consensus_states?: IbcCoreClientConsensusStateWithHeight[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATES_RESPONSE = "/ibc.core.client.v1.QueryConsensusStatesResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStatesResponse` - the response type for the Query/ConsensusStates RPC method
 */
export type IbcCoreClientQueryConsensusStatesResponse = {
    consensus_states?: IbcCoreClientConsensusStateWithHeight[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateHeightsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export declare const destructIbcCoreClientQueryConsensusStateHeightsRequest: (g_struct: IbcCoreClientQueryConsensusStateHeightsRequest) => [client_id?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_HEIGHTS_REQUEST = "/ibc.core.client.v1.QueryConsensusStateHeightsRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStateHeightsRequest` - the request type for Query/ConsensusStateHeights RPC method.
 */
export type IbcCoreClientQueryConsensusStateHeightsRequest = {
    client_id?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateHeightsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_state_heights - consensus state heights
 *   - 1: pagination - response
 */
export declare const destructIbcCoreClientQueryConsensusStateHeightsResponse: (g_struct: IbcCoreClientQueryConsensusStateHeightsResponse) => [consensus_state_heights?: IbcCoreClientHeight[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_HEIGHTS_RESPONSE = "/ibc.core.client.v1.QueryConsensusStateHeightsResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryConsensusStateHeightsResponse` - the response type for the Query/ConsensusStateHeights RPC method
 */
export type IbcCoreClientQueryConsensusStateHeightsResponse = {
    consensus_state_heights?: IbcCoreClientHeight[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatusRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client unique identifier
 */
export declare const destructIbcCoreClientQueryClientStatusRequest: (g_struct: IbcCoreClientQueryClientStatusRequest) => [client_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATUS_REQUEST = "/ibc.core.client.v1.QueryClientStatusRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStatusRequest` - the request type for the Query/ClientStatus RPC method
 */
export type IbcCoreClientQueryClientStatusRequest = {
    client_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatusResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: status -
 */
export declare const destructIbcCoreClientQueryClientStatusResponse: (g_struct: IbcCoreClientQueryClientStatusResponse) => [status?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATUS_RESPONSE = "/ibc.core.client.v1.QueryClientStatusResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientStatusResponse` - the response type for the Query/ClientStatus RPC method. It returns the current status of the IBC client.
 */
export type IbcCoreClientQueryClientStatusResponse = {
    status?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcCoreClientQueryClientParamsRequest: (g_struct: IbcCoreClientQueryClientParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_PARAMS_REQUEST = "/ibc.core.client.v1.QueryClientParamsRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientParamsRequest` - the request type for the Query/ClientParams RPC method.
 */
export type IbcCoreClientQueryClientParamsRequest = {};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructIbcCoreClientQueryClientParamsResponse: (g_struct: IbcCoreClientQueryClientParamsResponse) => [params?: IbcCoreClientParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_PARAMS_RESPONSE = "/ibc.core.client.v1.QueryClientParamsResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryClientParamsResponse` - the response type for the Query/ClientParams RPC method.
 */
export type IbcCoreClientQueryClientParamsResponse = {
    params?: IbcCoreClientParams | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedClientStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcCoreClientQueryUpgradedClientStateRequest: (g_struct: IbcCoreClientQueryUpgradedClientStateRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CLIENT_STATE_REQUEST = "/ibc.core.client.v1.QueryUpgradedClientStateRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryUpgradedClientStateRequest` - the request type for the Query/UpgradedClientState RPC method
 */
export type IbcCoreClientQueryUpgradedClientStateRequest = {};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedClientStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: upgraded_client_state - client state associated with the request identifier
 */
export declare const destructIbcCoreClientQueryUpgradedClientStateResponse: (g_struct: IbcCoreClientQueryUpgradedClientStateResponse) => [upgraded_client_state?: JsonAny];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CLIENT_STATE_RESPONSE = "/ibc.core.client.v1.QueryUpgradedClientStateResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryUpgradedClientStateResponse` - the response type for the Query/UpgradedClientState RPC method.
 */
export type IbcCoreClientQueryUpgradedClientStateResponse = {
    upgraded_client_state?: JsonAny | undefined;
};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedConsensusStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcCoreClientQueryUpgradedConsensusStateRequest: (g_struct: IbcCoreClientQueryUpgradedConsensusStateRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CONSENSUS_STATE_REQUEST = "/ibc.core.client.v1.QueryUpgradedConsensusStateRequest";
/**
 * JSON serialization of `ibc.core.client.v1.QueryUpgradedConsensusStateRequest` - the request type for the Query/UpgradedConsensusState RPC method
 */
export type IbcCoreClientQueryUpgradedConsensusStateRequest = {};
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedConsensusStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: upgraded_consensus_state - Consensus state associated with the request identifier
 */
export declare const destructIbcCoreClientQueryUpgradedConsensusStateResponse: (g_struct: IbcCoreClientQueryUpgradedConsensusStateResponse) => [upgraded_consensus_state?: JsonAny];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CONSENSUS_STATE_RESPONSE = "/ibc.core.client.v1.QueryUpgradedConsensusStateResponse";
/**
 * JSON serialization of `ibc.core.client.v1.QueryUpgradedConsensusStateResponse` - the response type for the Query/UpgradedConsensusState RPC method.
 */
export type IbcCoreClientQueryUpgradedConsensusStateResponse = {
    upgraded_consensus_state?: JsonAny | undefined;
};
