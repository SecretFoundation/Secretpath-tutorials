import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../../api/transport.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../../cosmos/base/query/v1beta1/pagination.js';
import { decodeGoogleProtobufAny } from '../../../../google/protobuf/any.js';
import { decodeIbcCoreClientHeight, decodeIbcCoreClientIdentifiedClientState, decodeIbcCoreClientConsensusStateWithHeight, decodeIbcCoreClientParams } from './client.js';
const SR_LCD_IBC_CORE_CLIENT_QUERY = '/ibc/core/client/v1/';
/**
 * Queries an IBC light client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client state unique identifier
 * @returns a tuple where:
 *   - 0: client_state - client state associated with the request identifier
 *   - 1: proof - client state associated with the request identifier
 *   - 2: proof_height - client state associated with the request identifier
 */
export const queryIbcCoreClientClientState = restful_grpc(si_client => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'client_states/' + si_client]);
/**
 * Queries all the IBC light clients of a chain.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: client_states - list of stored ClientStates of the chain.
 *   - 1: pagination - list of stored ClientStates of the chain.
 */
export const queryIbcCoreClientClientStates = restful_grpc(g_pagination => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'client_states', {
        pagination: g_pagination,
    }]);
/**
 * Queries a consensus state associated with a client state at a given height.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param sg_revision_number - consensus state revision number
 * @param sg_revision_height - consensus state revision height
 * @param b_latest_height - overrides the height field and queries the latest stored ConsensusState
 * @returns a tuple where:
 *   - 0: consensus_state - consensus state associated with the client identifier at the given height
 *   - 1: proof - consensus state associated with the client identifier at the given height
 *   - 2: proof_height - consensus state associated with the client identifier at the given height
 */
export const queryIbcCoreClientConsensusState = restful_grpc((si_client, sg_revision_number, sg_revision_height, b_latest_height) => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'consensus_states/' + si_client + '/revision/' + sg_revision_number + '/height/' + sg_revision_height, {
        latest_height: b_latest_height,
    }]);
/**
 * Queries all the consensus state associated with a given client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: consensus_states - consensus states associated with the identifier
 *   - 1: pagination - consensus states associated with the identifier
 */
export const queryIbcCoreClientConsensusStates = restful_grpc((si_client, g_pagination) => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'consensus_states/' + si_client, {
        pagination: g_pagination,
    }]);
/**
 * Queries the height of every consensus states associated with a given client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client identifier
 * @param g_pagination - request
 * @returns a tuple where:
 *   - 0: consensus_state_heights - consensus state heights
 *   - 1: pagination - consensus state heights
 */
export const queryIbcCoreClientConsensusStateHeights = restful_grpc((si_client, g_pagination) => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'consensus_states/' + si_client + '/heights', {
        pagination: g_pagination,
    }]);
/**
 * Status queries the status of an IBC client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param si_client - client unique identifier
 * @returns a tuple where:
 *   - 0: status - the 'status' response property
 */
export const queryIbcCoreClientClientStatus = restful_grpc(si_client => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'client_status/' + si_client]);
/**
 * Queries all parameters of the ibc client submodule.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryIbcCoreClientClientParams = restful_grpc(() => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'params']);
/**
 * Queries an Upgraded IBC light client.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: upgraded_client_state - client state associated with the request identifier
 */
export const queryIbcCoreClientUpgradedClientState = restful_grpc(() => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'upgraded_client_states']);
/**
 * Queries an Upgraded IBC consensus state.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: upgraded_consensus_state - Consensus state associated with the request identifier
 */
export const queryIbcCoreClientUpgradedConsensusState = restful_grpc(() => [SR_LCD_IBC_CORE_CLIENT_QUERY + 'upgraded_consensus_states']);
/**
 * Encodes a `QueryClientStateRequest` protobuf message: the request type for the Query/ClientState RPC method
 * @param si_client - `client_id`: client state unique identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStateRequest = (si_client) => Protobuf() // ...
    .s(si_client) // string client_id = 1
    .o;
/**
 * Encodes a `QueryClientStateResponse` protobuf message: the response type for the Query/ClientState RPC method. Besides the client state, it includes a proof and the height from which the proof was retrieved.
 * @param atu8_client_state - `client_state`: client state associated with the request identifier
 * @param atu8_proof - `proof`: merkle proof of existence
 * @param g_proof_height - `proof_height`: height at which the proof was retrieved
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStateResponse = (atu8_client_state, atu8_proof, atu8_proof_height) => Protobuf() // ...
    .b(atu8_client_state) // Any client_state = 1
    .b(atu8_proof) // bytes proof = 2
    .b(atu8_proof_height) // Height proof_height = 3
    .o;
/**
 * Encodes a `QueryClientStatesRequest` protobuf message: the request type for the Query/ClientStates RPC method
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStatesRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `QueryClientStatesResponse` protobuf message: the response type for the Query/ClientStates RPC method.
 * @param a_client_states - `client_states`: list of stored ClientStates of the chain.
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStatesResponse = (a_client_states, atu8_pagination) => Protobuf() // ...
    .B(a_client_states) // IdentifiedClientState[] client_states = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryConsensusStateRequest` protobuf message: the request type for the Query/ConsensusState RPC method. Besides the consensus state, it includes a proof and the height from which the proof was retrieved.
 * @param si_client - `client_id`: client identifier
 * @param sg_revision_number - `revision_number`: consensus state revision number
 * @param sg_revision_height - `revision_height`: consensus state revision height
 * @param b_latest_height - `latest_height`: overrides the height field and queries the latest stored ConsensusState
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStateRequest = (si_client, sg_revision_number, sg_revision_height, b_latest_height) => Protobuf() // ...
    .s(si_client) // string client_id = 1
    .g(sg_revision_number) // uint64 revision_number = 2
    .g(sg_revision_height) // uint64 revision_height = 3
    .v(b_latest_height) // boolean latest_height = 4
    .o;
/**
 * Encodes a `QueryConsensusStateResponse` protobuf message: the response type for the Query/ConsensusState RPC method
 * @param atu8_consensus_state - `consensus_state`: consensus state associated with the client identifier at the given height
 * @param atu8_proof - `proof`: merkle proof of existence
 * @param g_proof_height - `proof_height`: height at which the proof was retrieved
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStateResponse = (atu8_consensus_state, atu8_proof, atu8_proof_height) => Protobuf() // ...
    .b(atu8_consensus_state) // Any consensus_state = 1
    .b(atu8_proof) // bytes proof = 2
    .b(atu8_proof_height) // Height proof_height = 3
    .o;
/**
 * Encodes a `QueryConsensusStatesRequest` protobuf message: the request type for the Query/ConsensusStates RPC method.
 * @param si_client - `client_id`: client identifier
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStatesRequest = (si_client, atu8_pagination) => Protobuf() // ...
    .s(si_client) // string client_id = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryConsensusStatesResponse` protobuf message: the response type for the Query/ConsensusStates RPC method
 * @param a_consensus_states - `consensus_states`: consensus states associated with the identifier
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStatesResponse = (a_consensus_states, atu8_pagination) => Protobuf() // ...
    .B(a_consensus_states) // ConsensusStateWithHeight[] consensus_states = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryConsensusStateHeightsRequest` protobuf message: the request type for Query/ConsensusStateHeights RPC method.
 * @param si_client - `client_id`: client identifier
 * @param g_pagination - `pagination`: request
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStateHeightsRequest = (si_client, atu8_pagination) => Protobuf() // ...
    .s(si_client) // string client_id = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryConsensusStateHeightsResponse` protobuf message: the response type for the Query/ConsensusStateHeights RPC method
 * @param a_consensus_state_heights - `consensus_state_heights`: consensus state heights
 * @param g_pagination - `pagination`: response
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryConsensusStateHeightsResponse = (a_consensus_state_heights, atu8_pagination) => Protobuf() // ...
    .B(a_consensus_state_heights) // Height[] consensus_state_heights = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryClientStatusRequest` protobuf message: the request type for the Query/ClientStatus RPC method
 * @param si_client - `client_id`: client unique identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStatusRequest = (si_client) => Protobuf() // ...
    .s(si_client) // string client_id = 1
    .o;
/**
 * Encodes a `QueryClientStatusResponse` protobuf message: the response type for the Query/ClientStatus RPC method. It returns the current status of the IBC client.
 * @param s_status - `status`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientStatusResponse = (s_status) => Protobuf() // ...
    .s(s_status) // string status = 1
    .o;
/**
 * Encodes a `QueryClientParamsRequest` protobuf message: the request type for the Query/ClientParams RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryClientParamsResponse` protobuf message: the response type for the Query/ClientParams RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryClientParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `QueryUpgradedClientStateRequest` protobuf message: the request type for the Query/UpgradedClientState RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryUpgradedClientStateRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryUpgradedClientStateResponse` protobuf message: the response type for the Query/UpgradedClientState RPC method.
 * @param atu8_upgraded_client_state - `upgraded_client_state`: client state associated with the request identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryUpgradedClientStateResponse = (atu8_upgraded_client_state) => Protobuf() // ...
    .b(atu8_upgraded_client_state) // Any upgraded_client_state = 1
    .o;
/**
 * Encodes a `QueryUpgradedConsensusStateRequest` protobuf message: the request type for the Query/UpgradedConsensusState RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryUpgradedConsensusStateRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryUpgradedConsensusStateResponse` protobuf message: the response type for the Query/UpgradedConsensusState RPC method.
 * @param atu8_upgraded_consensus_state - `upgraded_consensus_state`: Consensus state associated with the request identifier
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcCoreClientQueryUpgradedConsensusStateResponse = (atu8_upgraded_consensus_state) => Protobuf() // ...
    .b(atu8_upgraded_consensus_state) // Any upgraded_consensus_state = 1
    .o;
/**
 * Decodes a protobuf QueryClientStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStateRequest}
 */
export const decodeIbcCoreClientQueryClientStateRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryClientState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStateResponse}
 */
export const decodeIbcCoreClientQueryClientStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1], [decodeGoogleProtobufAny, 0, decodeIbcCoreClientHeight]);
/**
 * Decodes a protobuf QueryClientStatesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatesRequest}
 */
export const decodeIbcCoreClientQueryClientStatesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryClientStates message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatesResponse}
 */
export const decodeIbcCoreClientQueryClientStatesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeIbcCoreClientIdentifiedClientState, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryConsensusStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateRequest}
 */
export const decodeIbcCoreClientQueryConsensusStateRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 3, 1]);
/**
 * Decodes a protobuf QueryConsensusState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateResponse}
 */
export const decodeIbcCoreClientQueryConsensusStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1], [decodeGoogleProtobufAny, 0, decodeIbcCoreClientHeight]);
/**
 * Decodes a protobuf QueryConsensusStatesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStatesRequest}
 */
export const decodeIbcCoreClientQueryConsensusStatesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryConsensusStates message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStatesResponse}
 */
export const decodeIbcCoreClientQueryConsensusStatesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeIbcCoreClientConsensusStateWithHeight, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryConsensusStateHeightsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateHeightsRequest}
 */
export const decodeIbcCoreClientQueryConsensusStateHeightsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryConsensusStateHeights message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryConsensusStateHeightsResponse}
 */
export const decodeIbcCoreClientQueryConsensusStateHeightsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeIbcCoreClientHeight, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryClientStatusRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatusRequest}
 */
export const decodeIbcCoreClientQueryClientStatusRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryClientStatus message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientStatusResponse}
 */
export const decodeIbcCoreClientQueryClientStatusResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryClientParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientParamsRequest}
 */
export const decodeIbcCoreClientQueryClientParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryClientParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryClientParamsResponse}
 */
export const decodeIbcCoreClientQueryClientParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeIbcCoreClientParams]);
/**
 * Decodes a protobuf QueryUpgradedClientStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedClientStateRequest}
 */
export const decodeIbcCoreClientQueryUpgradedClientStateRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryUpgradedClientState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedClientStateResponse}
 */
export const decodeIbcCoreClientQueryUpgradedClientStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf QueryUpgradedConsensusStateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedConsensusStateRequest}
 */
export const decodeIbcCoreClientQueryUpgradedConsensusStateRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryUpgradedConsensusState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreClientQueryUpgradedConsensusStateResponse}
 */
export const decodeIbcCoreClientQueryUpgradedConsensusStateResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client state unique identifier
 */
export const destructIbcCoreClientQueryClientStateRequest = (g_struct) => [g_struct.client_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATE_REQUEST = '/ibc.core.client.v1.QueryClientStateRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_state - client state associated with the request identifier
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export const destructIbcCoreClientQueryClientStateResponse = (g_struct) => [g_struct.client_state, safe_base64_to_bytes(g_struct.proof), g_struct.proof_height];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATE_RESPONSE = '/ibc.core.client.v1.QueryClientStateResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - request
 */
export const destructIbcCoreClientQueryClientStatesRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATES_REQUEST = '/ibc.core.client.v1.QueryClientStatesRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_states - list of stored ClientStates of the chain.
 *   - 1: pagination - response
 */
export const destructIbcCoreClientQueryClientStatesResponse = (g_struct) => [g_struct.client_states, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATES_RESPONSE = '/ibc.core.client.v1.QueryClientStatesResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: revision_number - consensus state revision number
 *   - 2: revision_height - consensus state revision height
 *   - 3: latest_height - overrides the height field and queries the latest stored ConsensusState
 */
export const destructIbcCoreClientQueryConsensusStateRequest = (g_struct) => [g_struct.client_id, g_struct.revision_number, g_struct.revision_height, g_struct.latest_height];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_REQUEST = '/ibc.core.client.v1.QueryConsensusStateRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_state - consensus state associated with the client identifier at the given height
 *   - 1: proof - merkle proof of existence
 *   - 2: proof_height - height at which the proof was retrieved
 */
export const destructIbcCoreClientQueryConsensusStateResponse = (g_struct) => [g_struct.consensus_state, safe_base64_to_bytes(g_struct.proof), g_struct.proof_height];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_RESPONSE = '/ibc.core.client.v1.QueryConsensusStateResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStatesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export const destructIbcCoreClientQueryConsensusStatesRequest = (g_struct) => [g_struct.client_id, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATES_REQUEST = '/ibc.core.client.v1.QueryConsensusStatesRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStatesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_states - consensus states associated with the identifier
 *   - 1: pagination - response
 */
export const destructIbcCoreClientQueryConsensusStatesResponse = (g_struct) => [g_struct.consensus_states, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATES_RESPONSE = '/ibc.core.client.v1.QueryConsensusStatesResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateHeightsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client identifier
 *   - 1: pagination - request
 */
export const destructIbcCoreClientQueryConsensusStateHeightsRequest = (g_struct) => [g_struct.client_id, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_HEIGHTS_REQUEST = '/ibc.core.client.v1.QueryConsensusStateHeightsRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryConsensusStateHeightsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_state_heights - consensus state heights
 *   - 1: pagination - response
 */
export const destructIbcCoreClientQueryConsensusStateHeightsResponse = (g_struct) => [g_struct.consensus_state_heights, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CONSENSUS_STATE_HEIGHTS_RESPONSE = '/ibc.core.client.v1.QueryConsensusStateHeightsResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatusRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_id - client unique identifier
 */
export const destructIbcCoreClientQueryClientStatusRequest = (g_struct) => [g_struct.client_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATUS_REQUEST = '/ibc.core.client.v1.QueryClientStatusRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientStatusResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: status -
 */
export const destructIbcCoreClientQueryClientStatusResponse = (g_struct) => [g_struct.status];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_STATUS_RESPONSE = '/ibc.core.client.v1.QueryClientStatusResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcCoreClientQueryClientParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_PARAMS_REQUEST = '/ibc.core.client.v1.QueryClientParamsRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryClientParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructIbcCoreClientQueryClientParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_CLIENT_PARAMS_RESPONSE = '/ibc.core.client.v1.QueryClientParamsResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedClientStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcCoreClientQueryUpgradedClientStateRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CLIENT_STATE_REQUEST = '/ibc.core.client.v1.QueryUpgradedClientStateRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedClientStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: upgraded_client_state - client state associated with the request identifier
 */
export const destructIbcCoreClientQueryUpgradedClientStateResponse = (g_struct) => [g_struct.upgraded_client_state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CLIENT_STATE_RESPONSE = '/ibc.core.client.v1.QueryUpgradedClientStateResponse';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedConsensusStateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcCoreClientQueryUpgradedConsensusStateRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CONSENSUS_STATE_REQUEST = '/ibc.core.client.v1.QueryUpgradedConsensusStateRequest';
/**
 * Destructures the fields of a {@link IbcCoreClientQueryUpgradedConsensusStateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: upgraded_consensus_state - Consensus state associated with the request identifier
 */
export const destructIbcCoreClientQueryUpgradedConsensusStateResponse = (g_struct) => [g_struct.upgraded_consensus_state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_CORE_CLIENT_QUERY_UPGRADED_CONSENSUS_STATE_RESPONSE = '/ibc.core.client.v1.QueryUpgradedConsensusStateResponse';
//# sourceMappingURL=query.js.map