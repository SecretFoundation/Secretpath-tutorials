import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { IbcCoreConnectionIdentifiedConnection, DecodedIbcCoreConnectionIdentifiedConnection, IbcCoreConnectionConnectionPaths, DecodedIbcCoreConnectionConnectionPaths, IbcCoreConnectionParams, DecodedIbcCoreConnectionParams } from './connection.js';
export type EncodedIbcCoreConnectionGenesisState = Encoded<'/ibc.core.connection.v1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the ibc connection submodule's genesis state.
 * @param a_connections - `connections`:
 * @param a_client_connection_paths - `client_connection_paths`:
 * @param sg_next_connection_sequence - `next_connection_sequence`: the sequence for the next generated connection identifier
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreConnectionGenesisState: (a_connections?: Opt<Encoded<'/ibc.core.connection.v1.IdentifiedConnection'>[]>, a_client_connection_paths?: Opt<Encoded<'/ibc.core.connection.v1.ConnectionPaths'>[]>, sg_next_connection_sequence?: Opt<WeakUint64Str>, atu8_params?: Opt<Encoded<'/ibc.core.connection.v1.Params'>>) => EncodedIbcCoreConnectionGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: connections -
 *   - 1: client_connection_paths -
 *   - 2: next_connection_sequence - the sequence for the next generated connection identifier
 *   - 3: params -
 */
export type DecodedIbcCoreConnectionGenesisState = [
    a_connections?: DecodedIbcCoreConnectionIdentifiedConnection[],
    a_client_connection_paths?: DecodedIbcCoreConnectionConnectionPaths[],
    sg_next_connection_sequence?: CwUint64,
    a_params?: DecodedIbcCoreConnectionParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreConnectionGenesisState}
 */
export declare const decodeIbcCoreConnectionGenesisState: (atu8_payload: Uint8Array) => DecodedIbcCoreConnectionGenesisState;
/**
 * Destructures the fields of a {@link IbcCoreConnectionGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: connections -
 *   - 1: client_connection_paths -
 *   - 2: next_connection_sequence - the sequence for the next generated connection identifier
 *   - 3: params -
 */
export declare const destructIbcCoreConnectionGenesisState: (g_struct: IbcCoreConnectionGenesisState) => [connections?: IbcCoreConnectionIdentifiedConnection[], client_connection_paths?: IbcCoreConnectionConnectionPaths[], next_connection_sequence?: CwUint64, params?: IbcCoreConnectionParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_CONNECTION_GENESIS_STATE = "/ibc.core.connection.v1.GenesisState";
/**
 * JSON serialization of `ibc.core.connection.v1.GenesisState` - defines the ibc connection submodule's genesis state.
 */
export type IbcCoreConnectionGenesisState = {
    connections?: IbcCoreConnectionIdentifiedConnection[] | undefined;
    client_connection_paths?: IbcCoreConnectionConnectionPaths[] | undefined;
    next_connection_sequence?: CwUint64 | undefined;
    params?: IbcCoreConnectionParams | undefined;
};
