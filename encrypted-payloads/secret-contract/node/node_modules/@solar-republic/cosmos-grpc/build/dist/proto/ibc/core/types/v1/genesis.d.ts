import type { Encoded, Opt } from '../../../../../api/types.js';
import type { IbcCoreChannelGenesisState, DecodedIbcCoreChannelGenesisState } from '../../channel/v1/genesis.js';
import type { IbcCoreClientGenesisState, DecodedIbcCoreClientGenesisState } from '../../client/v1/genesis.js';
import type { IbcCoreConnectionGenesisState, DecodedIbcCoreConnectionGenesisState } from '../../connection/v1/genesis.js';
export type EncodedIbcCoreTypesGenesisState = Encoded<'/ibc.core.types.v1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the ibc module's genesis state.
 * @param g_client_genesis - `client_genesis`: ICS002 - Clients genesis state
 * @param g_connection_genesis - `connection_genesis`: ICS003 - Connections genesis state
 * @param g_channel_genesis - `channel_genesis`: ICS004 - Channel genesis state
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcCoreTypesGenesisState: (atu8_client_genesis?: Opt<Encoded<'/ibc.core.client.v1.GenesisState'>>, atu8_connection_genesis?: Opt<Encoded<'/ibc.core.connection.v1.GenesisState'>>, atu8_channel_genesis?: Opt<Encoded<'/ibc.core.channel.v1.GenesisState'>>) => EncodedIbcCoreTypesGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: client_genesis - ICS002 - Clients genesis state
 *   - 1: connection_genesis - ICS003 - Connections genesis state
 *   - 2: channel_genesis - ICS004 - Channel genesis state
 */
export type DecodedIbcCoreTypesGenesisState = [
    a_client_genesis?: DecodedIbcCoreClientGenesisState,
    a_connection_genesis?: DecodedIbcCoreConnectionGenesisState,
    a_channel_genesis?: DecodedIbcCoreChannelGenesisState
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcCoreTypesGenesisState}
 */
export declare const decodeIbcCoreTypesGenesisState: (atu8_payload: Uint8Array) => DecodedIbcCoreTypesGenesisState;
/**
 * Destructures the fields of a {@link IbcCoreTypesGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: client_genesis - ICS002 - Clients genesis state
 *   - 1: connection_genesis - ICS003 - Connections genesis state
 *   - 2: channel_genesis - ICS004 - Channel genesis state
 */
export declare const destructIbcCoreTypesGenesisState: (g_struct: IbcCoreTypesGenesisState) => [client_genesis?: IbcCoreClientGenesisState, connection_genesis?: IbcCoreConnectionGenesisState, channel_genesis?: IbcCoreChannelGenesisState];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_CORE_TYPES_GENESIS_STATE = "/ibc.core.types.v1.GenesisState";
/**
 * JSON serialization of `ibc.core.types.v1.GenesisState` - defines the ibc module's genesis state.
 */
export type IbcCoreTypesGenesisState = {
    client_genesis?: IbcCoreClientGenesisState | undefined;
    connection_genesis?: IbcCoreConnectionGenesisState | undefined;
    channel_genesis?: IbcCoreChannelGenesisState | undefined;
};
