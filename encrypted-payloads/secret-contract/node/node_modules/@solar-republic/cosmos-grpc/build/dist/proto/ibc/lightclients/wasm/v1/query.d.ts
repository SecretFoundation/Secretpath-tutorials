/// <reference types="node" />
import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../../cosmos/base/query/v1beta1/pagination.js';
export type EncodedIbcLightclientsWasmQueryChecksumsRequest = Encoded<'/ibc.lightclients.wasm.v1.QueryChecksumsRequest'>;
export type EncodedIbcLightclientsWasmQueryChecksumsResponse = Encoded<'/ibc.lightclients.wasm.v1.QueryChecksumsResponse'>;
export type EncodedIbcLightclientsWasmQueryCodeRequest = Encoded<'/ibc.lightclients.wasm.v1.QueryCodeRequest'>;
export type EncodedIbcLightclientsWasmQueryCodeResponse = Encoded<'/ibc.lightclients.wasm.v1.QueryCodeResponse'>;
/**
 * Get all Wasm checksums
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: checksums - a list of the hex encoded checksums of all wasm codes stored.
 *   - 1: pagination - a list of the hex encoded checksums of all wasm codes stored.
 */
export declare const queryIbcLightclientsWasmChecksums: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcLightclientsWasmQueryChecksumsResponse>>;
/**
 * Get Wasm code for given checksum
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_checksum - a hex encoded string of the code stored.
 * @returns a tuple where:
 *   - 0: data - the 'data' response property
 */
export declare const queryIbcLightclientsWasmCode: (z_req: string | ({
    origin: string;
} & RequestInit), s_checksum?: Opt<string>) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<IbcLightclientsWasmQueryCodeResponse>>;
/**
 * Encodes a `QueryChecksumsRequest` protobuf message: the request type for the Query/Checksums RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmQueryChecksumsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedIbcLightclientsWasmQueryChecksumsRequest;
/**
 * Encodes a `QueryChecksumsResponse` protobuf message: the response type for the Query/Checksums RPC method.
 * @param a_checksums - `checksums`: a list of the hex encoded checksums of all wasm codes stored.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmQueryChecksumsResponse: (a_checksums?: Opt<string[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedIbcLightclientsWasmQueryChecksumsResponse;
/**
 * Encodes a `QueryCodeRequest` protobuf message: the request type for the Query/Code RPC method.
 * @param s_checksum - `checksum`: a hex encoded string of the code stored.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmQueryCodeRequest: (s_checksum?: Opt<string>) => EncodedIbcLightclientsWasmQueryCodeRequest;
/**
 * Encodes a `QueryCodeResponse` protobuf message: the response type for the Query/Code RPC method.
 * @param atu8_data - `data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmQueryCodeResponse: (atu8_data?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmQueryCodeResponse;
/**
 * A decoded protobuf QueryChecksumsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedIbcLightclientsWasmQueryChecksumsRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryChecksumsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryChecksumsRequest}
 */
export declare const decodeIbcLightclientsWasmQueryChecksumsRequest: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmQueryChecksumsRequest;
/**
 * A decoded protobuf QueryChecksums message
 *
 * Tuple where:
 *   - 0: checksums - a list of the hex encoded checksums of all wasm codes stored.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedIbcLightclientsWasmQueryChecksumsResponse = [
    a_checksums?: string[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryChecksums message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryChecksumsResponse}
 */
export declare const decodeIbcLightclientsWasmQueryChecksumsResponse: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmQueryChecksumsResponse;
/**
 * A decoded protobuf QueryCodeRequest message
 *
 * Alias for: checksum - a hex encoded string of the code stored.
 */
export type DecodedIbcLightclientsWasmQueryCodeRequest = [
    s_checksum?: string
];
/**
 * Decodes a protobuf QueryCodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryCodeRequest}
 */
export declare const decodeIbcLightclientsWasmQueryCodeRequest: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmQueryCodeRequest;
/**
 * A decoded protobuf QueryCode message
 *
 * Alias for: data -
 */
export type DecodedIbcLightclientsWasmQueryCodeResponse = [
    atu8_data?: Uint8Array
];
/**
 * Decodes a protobuf QueryCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryCodeResponse}
 */
export declare const decodeIbcLightclientsWasmQueryCodeResponse: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmQueryCodeResponse;
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryChecksumsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export declare const destructIbcLightclientsWasmQueryChecksumsRequest: (g_struct: IbcLightclientsWasmQueryChecksumsRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CHECKSUMS_REQUEST = "/ibc.lightclients.wasm.v1.QueryChecksumsRequest";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.QueryChecksumsRequest` - the request type for the Query/Checksums RPC method.
 */
export type IbcLightclientsWasmQueryChecksumsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryChecksumsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksums - a list of the hex encoded checksums of all wasm codes stored.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructIbcLightclientsWasmQueryChecksumsResponse: (g_struct: IbcLightclientsWasmQueryChecksumsResponse) => [checksums?: string[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CHECKSUMS_RESPONSE = "/ibc.lightclients.wasm.v1.QueryChecksumsResponse";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.QueryChecksumsResponse` - the response type for the Query/Checksums RPC method.
 */
export type IbcLightclientsWasmQueryChecksumsResponse = {
    checksums?: string[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryCodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksum - a hex encoded string of the code stored.
 */
export declare const destructIbcLightclientsWasmQueryCodeRequest: (g_struct: IbcLightclientsWasmQueryCodeRequest) => [checksum?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CODE_REQUEST = "/ibc.lightclients.wasm.v1.QueryCodeRequest";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.QueryCodeRequest` - the request type for the Query/Code RPC method.
 */
export type IbcLightclientsWasmQueryCodeRequest = {
    checksum?: string | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 */
export declare const destructIbcLightclientsWasmQueryCodeResponse: (g_struct: IbcLightclientsWasmQueryCodeResponse) => [data?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CODE_RESPONSE = "/ibc.lightclients.wasm.v1.QueryCodeResponse";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.QueryCodeResponse` - the response type for the Query/Code RPC method.
 */
export type IbcLightclientsWasmQueryCodeResponse = {
    data?: CwBase64 | undefined;
};
