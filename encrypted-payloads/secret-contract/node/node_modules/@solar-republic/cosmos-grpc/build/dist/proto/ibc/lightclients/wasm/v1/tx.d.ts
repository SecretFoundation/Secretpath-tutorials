import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedIbcLightclientsWasmMsgStoreCode = Encoded<'/ibc.lightclients.wasm.v1.MsgStoreCode'>;
export type EncodedIbcLightclientsWasmMsgStoreCodeResponse = Encoded<'/ibc.lightclients.wasm.v1.MsgStoreCodeResponse'>;
export type EncodedIbcLightclientsWasmMsgRemoveChecksum = Encoded<'/ibc.lightclients.wasm.v1.MsgRemoveChecksum'>;
export type EncodedIbcLightclientsWasmMsgRemoveChecksumResponse = Encoded<'/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse'>;
export type EncodedIbcLightclientsWasmMsgMigrateContract = Encoded<'/ibc.lightclients.wasm.v1.MsgMigrateContract'>;
export type EncodedIbcLightclientsWasmMsgMigrateContractResponse = Encoded<'/ibc.lightclients.wasm.v1.MsgMigrateContractResponse'>;
/**
 * Encodes a `MsgStoreCode` protobuf message: defines the request type for the StoreCode rpc.
 * @param s_signer - `signer`: address
 * @param atu8_wasm_byte_code - `wasm_byte_code`: wasm byte code of light client contract. It can be raw or gzip compressed
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgStoreCode: (s_signer?: Opt<string>, atu8_wasm_byte_code?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmMsgStoreCode;
/**
 * Encodes a `MsgStoreCodeResponse` protobuf message: defines the response type for the StoreCode rpc
 * @param atu8_checksum - `checksum`: the sha256 hash of the stored code
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgStoreCodeResponse: (atu8_checksum?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmMsgStoreCodeResponse;
/**
 * Encodes a `MsgRemoveChecksum` protobuf message: defines the request type for the MsgRemoveChecksum rpc.
 * @param s_signer - `signer`: address
 * @param atu8_checksum - `checksum`: the sha256 hash to be removed from the store
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgRemoveChecksum: (s_signer?: Opt<string>, atu8_checksum?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmMsgRemoveChecksum;
/**
 * Encodes a `MsgRemoveChecksumResponse` protobuf message: MsgStoreChecksumResponse defines the response type for the StoreCode rpc
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgRemoveChecksumResponse: () => EncodedIbcLightclientsWasmMsgRemoveChecksumResponse;
/**
 * Encodes a `MsgMigrateContract` protobuf message: defines the request type for the MigrateContract rpc.
 * @param s_signer - `signer`: address
 * @param si_client - `client_id`: the client id of the contract
 * @param atu8_checksum - `checksum`: the sha256 hash of the new wasm byte code for the contract
 * @param atu8_msg - `msg`: the json encoded message to be passed to the contract on migration
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgMigrateContract: (s_signer?: Opt<string>, si_client?: Opt<string>, atu8_checksum?: Opt<Uint8Array>, atu8_msg?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmMsgMigrateContract;
/**
 * Encodes a `MsgMigrateContractResponse` protobuf message: defines the response type for the MigrateContract rpc
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmMsgMigrateContractResponse: () => EncodedIbcLightclientsWasmMsgMigrateContractResponse;
/**
 * A decoded protobuf StoreCode message
 *
 * Tuple where:
 *   - 0: signer - address
 *   - 1: wasm_byte_code - wasm byte code of light client contract. It can be raw or gzip compressed
 */
export type DecodedIbcLightclientsWasmMsgStoreCode = [
    s_signer?: string,
    atu8_wasm_byte_code?: Uint8Array
];
/**
 * Decodes a protobuf StoreCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgStoreCode}
 */
export declare const decodeIbcLightclientsWasmMsgStoreCode: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmMsgStoreCode;
/**
 * A decoded protobuf StoreCode message
 *
 * Alias for: checksum - the sha256 hash of the stored code
 */
export type DecodedIbcLightclientsWasmMsgStoreCodeResponse = [
    atu8_checksum?: Uint8Array
];
/**
 * Decodes a protobuf StoreCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgStoreCodeResponse}
 */
export declare const decodeIbcLightclientsWasmMsgStoreCodeResponse: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmMsgStoreCodeResponse;
/**
 * A decoded protobuf RemoveChecksum message
 *
 * Tuple where:
 *   - 0: signer - address
 *   - 1: checksum - the sha256 hash to be removed from the store
 */
export type DecodedIbcLightclientsWasmMsgRemoveChecksum = [
    s_signer?: string,
    atu8_checksum?: Uint8Array
];
/**
 * Decodes a protobuf RemoveChecksum message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgRemoveChecksum}
 */
export declare const decodeIbcLightclientsWasmMsgRemoveChecksum: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmMsgRemoveChecksum;
/**
 * A decoded protobuf RemoveChecksum message
 *
 * Tuple where:
 */
export type DecodedIbcLightclientsWasmMsgRemoveChecksumResponse = [];
/**
 * Decodes a protobuf RemoveChecksum message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgRemoveChecksumResponse}
 */
export declare const decodeIbcLightclientsWasmMsgRemoveChecksumResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf MigrateContract message
 *
 * Tuple where:
 *   - 0: signer - address
 *   - 1: client_id - the client id of the contract
 *   - 2: checksum - the sha256 hash of the new wasm byte code for the contract
 *   - 3: msg - the json encoded message to be passed to the contract on migration
 */
export type DecodedIbcLightclientsWasmMsgMigrateContract = [
    s_signer?: string,
    si_client?: string,
    atu8_checksum?: Uint8Array,
    atu8_msg?: Uint8Array
];
/**
 * Decodes a protobuf MigrateContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgMigrateContract}
 */
export declare const decodeIbcLightclientsWasmMsgMigrateContract: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmMsgMigrateContract;
/**
 * A decoded protobuf MigrateContract message
 *
 * Tuple where:
 */
export type DecodedIbcLightclientsWasmMsgMigrateContractResponse = [];
/**
 * Decodes a protobuf MigrateContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgMigrateContractResponse}
 */
export declare const decodeIbcLightclientsWasmMsgMigrateContractResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgStoreCode} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: wasm_byte_code - wasm byte code of light client contract. It can be raw or gzip compressed
 */
export declare const destructIbcLightclientsWasmMsgStoreCode: (g_struct: IbcLightclientsWasmMsgStoreCode) => [signer?: string, wasm_byte_code?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_STORE_CODE = "/ibc.lightclients.wasm.v1.MsgStoreCode";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgStoreCode` - defines the request type for the StoreCode rpc.
 */
export type IbcLightclientsWasmMsgStoreCode = {
    signer?: string | undefined;
    wasm_byte_code?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgStoreCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksum - the sha256 hash of the stored code
 */
export declare const destructIbcLightclientsWasmMsgStoreCodeResponse: (g_struct: IbcLightclientsWasmMsgStoreCodeResponse) => [checksum?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_STORE_CODE_RESPONSE = "/ibc.lightclients.wasm.v1.MsgStoreCodeResponse";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgStoreCodeResponse` - defines the response type for the StoreCode rpc
 */
export type IbcLightclientsWasmMsgStoreCodeResponse = {
    checksum?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgRemoveChecksum} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: checksum - the sha256 hash to be removed from the store
 */
export declare const destructIbcLightclientsWasmMsgRemoveChecksum: (g_struct: IbcLightclientsWasmMsgRemoveChecksum) => [signer?: string, checksum?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_REMOVE_CHECKSUM = "/ibc.lightclients.wasm.v1.MsgRemoveChecksum";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgRemoveChecksum` - defines the request type for the MsgRemoveChecksum rpc.
 */
export type IbcLightclientsWasmMsgRemoveChecksum = {
    signer?: string | undefined;
    checksum?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgRemoveChecksumResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcLightclientsWasmMsgRemoveChecksumResponse: (g_struct: IbcLightclientsWasmMsgRemoveChecksumResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_REMOVE_CHECKSUM_RESPONSE = "/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse` - MsgStoreChecksumResponse defines the response type for the StoreCode rpc
 */
export type IbcLightclientsWasmMsgRemoveChecksumResponse = {};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgMigrateContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: client_id - the client id of the contract
 *   - 2: checksum - the sha256 hash of the new wasm byte code for the contract
 *   - 3: msg - the json encoded message to be passed to the contract on migration
 */
export declare const destructIbcLightclientsWasmMsgMigrateContract: (g_struct: IbcLightclientsWasmMsgMigrateContract) => [signer?: string, client_id?: string, checksum?: Uint8Array, msg?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_MIGRATE_CONTRACT = "/ibc.lightclients.wasm.v1.MsgMigrateContract";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgMigrateContract` - defines the request type for the MigrateContract rpc.
 */
export type IbcLightclientsWasmMsgMigrateContract = {
    signer?: string | undefined;
    client_id?: string | undefined;
    checksum?: CwBase64 | undefined;
    msg?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgMigrateContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructIbcLightclientsWasmMsgMigrateContractResponse: (g_struct: IbcLightclientsWasmMsgMigrateContractResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_MIGRATE_CONTRACT_RESPONSE = "/ibc.lightclients.wasm.v1.MsgMigrateContractResponse";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.MsgMigrateContractResponse` - defines the response type for the MigrateContract rpc
 */
export type IbcLightclientsWasmMsgMigrateContractResponse = {};
