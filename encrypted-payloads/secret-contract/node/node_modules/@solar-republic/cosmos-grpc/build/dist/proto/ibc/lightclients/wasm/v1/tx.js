import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
/**
 * Encodes a `MsgStoreCode` protobuf message: defines the request type for the StoreCode rpc.
 * @param s_signer - `signer`: address
 * @param atu8_wasm_byte_code - `wasm_byte_code`: wasm byte code of light client contract. It can be raw or gzip compressed
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgStoreCode = (s_signer, atu8_wasm_byte_code) => Protobuf() // ...
    .s(s_signer) // string signer = 1
    .b(atu8_wasm_byte_code) // bytes wasm_byte_code = 2
    .o;
/**
 * Encodes a `MsgStoreCodeResponse` protobuf message: defines the response type for the StoreCode rpc
 * @param atu8_checksum - `checksum`: the sha256 hash of the stored code
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgStoreCodeResponse = (atu8_checksum) => Protobuf() // ...
    .b(atu8_checksum) // bytes checksum = 1
    .o;
/**
 * Encodes a `MsgRemoveChecksum` protobuf message: defines the request type for the MsgRemoveChecksum rpc.
 * @param s_signer - `signer`: address
 * @param atu8_checksum - `checksum`: the sha256 hash to be removed from the store
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgRemoveChecksum = (s_signer, atu8_checksum) => Protobuf() // ...
    .s(s_signer) // string signer = 1
    .b(atu8_checksum) // bytes checksum = 2
    .o;
/**
 * Encodes a `MsgRemoveChecksumResponse` protobuf message: MsgStoreChecksumResponse defines the response type for the StoreCode rpc
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgRemoveChecksumResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgMigrateContract` protobuf message: defines the request type for the MigrateContract rpc.
 * @param s_signer - `signer`: address
 * @param si_client - `client_id`: the client id of the contract
 * @param atu8_checksum - `checksum`: the sha256 hash of the new wasm byte code for the contract
 * @param atu8_msg - `msg`: the json encoded message to be passed to the contract on migration
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgMigrateContract = (s_signer, si_client, atu8_checksum, atu8_msg) => Protobuf() // ...
    .s(s_signer) // string signer = 1
    .s(si_client) // string client_id = 2
    .b(atu8_checksum) // bytes checksum = 3
    .b(atu8_msg) // bytes msg = 4
    .o;
/**
 * Encodes a `MsgMigrateContractResponse` protobuf message: defines the response type for the MigrateContract rpc
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmMsgMigrateContractResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf StoreCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgStoreCode}
 */
export const decodeIbcLightclientsWasmMsgStoreCode = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf StoreCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgStoreCodeResponse}
 */
export const decodeIbcLightclientsWasmMsgStoreCodeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf RemoveChecksum message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgRemoveChecksum}
 */
export const decodeIbcLightclientsWasmMsgRemoveChecksum = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf RemoveChecksum message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgRemoveChecksumResponse}
 */
export const decodeIbcLightclientsWasmMsgRemoveChecksumResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf MigrateContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgMigrateContract}
 */
export const decodeIbcLightclientsWasmMsgMigrateContract = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1, 1]);
/**
 * Decodes a protobuf MigrateContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmMsgMigrateContractResponse}
 */
export const decodeIbcLightclientsWasmMsgMigrateContractResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgStoreCode} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: wasm_byte_code - wasm byte code of light client contract. It can be raw or gzip compressed
 */
export const destructIbcLightclientsWasmMsgStoreCode = (g_struct) => [g_struct.signer, safe_base64_to_bytes(g_struct.wasm_byte_code)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_STORE_CODE = '/ibc.lightclients.wasm.v1.MsgStoreCode';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgStoreCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksum - the sha256 hash of the stored code
 */
export const destructIbcLightclientsWasmMsgStoreCodeResponse = (g_struct) => [safe_base64_to_bytes(g_struct.checksum)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_STORE_CODE_RESPONSE = '/ibc.lightclients.wasm.v1.MsgStoreCodeResponse';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgRemoveChecksum} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: checksum - the sha256 hash to be removed from the store
 */
export const destructIbcLightclientsWasmMsgRemoveChecksum = (g_struct) => [g_struct.signer, safe_base64_to_bytes(g_struct.checksum)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_REMOVE_CHECKSUM = '/ibc.lightclients.wasm.v1.MsgRemoveChecksum';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgRemoveChecksumResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcLightclientsWasmMsgRemoveChecksumResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_REMOVE_CHECKSUM_RESPONSE = '/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgMigrateContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: signer - address
 *   - 1: client_id - the client id of the contract
 *   - 2: checksum - the sha256 hash of the new wasm byte code for the contract
 *   - 3: msg - the json encoded message to be passed to the contract on migration
 */
export const destructIbcLightclientsWasmMsgMigrateContract = (g_struct) => [g_struct.signer, g_struct.client_id, safe_base64_to_bytes(g_struct.checksum), safe_base64_to_bytes(g_struct.msg)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_MIGRATE_CONTRACT = '/ibc.lightclients.wasm.v1.MsgMigrateContract';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmMsgMigrateContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructIbcLightclientsWasmMsgMigrateContractResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_MSG_MIGRATE_CONTRACT_RESPONSE = '/ibc.lightclients.wasm.v1.MsgMigrateContractResponse';
//# sourceMappingURL=tx.js.map