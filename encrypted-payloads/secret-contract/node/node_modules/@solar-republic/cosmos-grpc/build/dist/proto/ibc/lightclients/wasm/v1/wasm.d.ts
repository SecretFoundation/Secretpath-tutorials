import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { IbcCoreClientHeight, DecodedIbcCoreClientHeight } from '../../../core/client/v1/client.js';
export type EncodedIbcLightclientsWasmClientState = Encoded<'/ibc.lightclients.wasm.v1.ClientState'>;
export type EncodedIbcLightclientsWasmConsensusState = Encoded<'/ibc.lightclients.wasm.v1.ConsensusState'>;
export type EncodedIbcLightclientsWasmClientMessage = Encoded<'/ibc.lightclients.wasm.v1.ClientMessage'>;
export type EncodedIbcLightclientsWasmChecksums = Encoded<'/ibc.lightclients.wasm.v1.Checksums'>;
/**
 * Encodes a `ClientState` protobuf message: Wasm light client's Client state
 * @param atu8_data - `data`: bytes encoding the client state of the underlying light client implemented as a Wasm contract.
 * @param atu8_checksum - `checksum`:
 * @param g_latest_height - `latest_height`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmClientState: (atu8_data?: Opt<Uint8Array>, atu8_checksum?: Opt<Uint8Array>, atu8_latest_height?: Opt<Encoded<'/ibc.core.client.v1.Height'>>) => EncodedIbcLightclientsWasmClientState;
/**
 * Encodes a `ConsensusState` protobuf message: Wasm light client's ConsensusState
 * @param atu8_data - `data`: bytes encoding the consensus state of the underlying light client implemented as a Wasm contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmConsensusState: (atu8_data?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmConsensusState;
/**
 * Encodes a `ClientMessage` protobuf message: Wasm light client message (either header(s) or misbehaviour)
 * @param atu8_data - `data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmClientMessage: (atu8_data?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmClientMessage;
/**
 * Encodes a `Checksums` protobuf message: defines a list of all checksums that are stored Deprecated: This message is deprecated in favor of storing the checksums using a Collections.KeySet.
 * @param a_checksums - `checksums`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmChecksums: (a_checksums?: Opt<Uint8Array[]>) => EncodedIbcLightclientsWasmChecksums;
/**
 * A decoded protobuf ClientState message
 *
 * Tuple where:
 *   - 0: data - bytes encoding the client state of the underlying light client implemented as a Wasm contract.
 *   - 1: checksum -
 *   - 2: latest_height -
 */
export type DecodedIbcLightclientsWasmClientState = [
    atu8_data?: Uint8Array,
    atu8_checksum?: Uint8Array,
    a_latest_height?: DecodedIbcCoreClientHeight
];
/**
 * Decodes a protobuf ClientState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmClientState}
 */
export declare const decodeIbcLightclientsWasmClientState: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmClientState;
/**
 * A decoded protobuf ConsensusState message
 *
 * Alias for: data - bytes encoding the consensus state of the underlying light client implemented as a Wasm contract.
 */
export type DecodedIbcLightclientsWasmConsensusState = [
    atu8_data?: Uint8Array
];
/**
 * Decodes a protobuf ConsensusState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmConsensusState}
 */
export declare const decodeIbcLightclientsWasmConsensusState: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmConsensusState;
/**
 * A decoded protobuf ClientMessage message
 *
 * Alias for: data -
 */
export type DecodedIbcLightclientsWasmClientMessage = [
    atu8_data?: Uint8Array
];
/**
 * Decodes a protobuf ClientMessage message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmClientMessage}
 */
export declare const decodeIbcLightclientsWasmClientMessage: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmClientMessage;
/**
 * A decoded protobuf Checksums message
 *
 * Alias for: checksums -
 */
export type DecodedIbcLightclientsWasmChecksums = [
    a_checksums?: Uint8Array[]
];
/**
 * Decodes a protobuf Checksums message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmChecksums}
 */
export declare const decodeIbcLightclientsWasmChecksums: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmChecksums;
/**
 * Destructures the fields of a {@link IbcLightclientsWasmClientState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data - bytes encoding the client state of the underlying light client implemented as a Wasm contract.
 *   - 1: checksum -
 *   - 2: latest_height -
 */
export declare const destructIbcLightclientsWasmClientState: (g_struct: IbcLightclientsWasmClientState) => [data?: Uint8Array, checksum?: Uint8Array, latest_height?: IbcCoreClientHeight];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_CLIENT_STATE = "/ibc.lightclients.wasm.v1.ClientState";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.ClientState` - Wasm light client's Client state
 */
export type IbcLightclientsWasmClientState = {
    data?: CwBase64 | undefined;
    checksum?: CwBase64 | undefined;
    latest_height?: IbcCoreClientHeight | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmConsensusState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data - bytes encoding the consensus state of the underlying light client implemented as a Wasm contract.
 */
export declare const destructIbcLightclientsWasmConsensusState: (g_struct: IbcLightclientsWasmConsensusState) => [data?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_CONSENSUS_STATE = "/ibc.lightclients.wasm.v1.ConsensusState";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.ConsensusState` - Wasm light client's ConsensusState
 */
export type IbcLightclientsWasmConsensusState = {
    data?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmClientMessage} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 */
export declare const destructIbcLightclientsWasmClientMessage: (g_struct: IbcLightclientsWasmClientMessage) => [data?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_CLIENT_MESSAGE = "/ibc.lightclients.wasm.v1.ClientMessage";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.ClientMessage` - Wasm light client message (either header(s) or misbehaviour)
 */
export type IbcLightclientsWasmClientMessage = {
    data?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmChecksums} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksums -
 */
export declare const destructIbcLightclientsWasmChecksums: (g_struct: IbcLightclientsWasmChecksums) => [checksums?: Uint8Array[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_CHECKSUMS = "/ibc.lightclients.wasm.v1.Checksums";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.Checksums` - defines a list of all checksums that are stored Deprecated: This message is deprecated in favor of storing the checksums using a Collections.KeySet.
 */
export type IbcLightclientsWasmChecksums = {
    checksums?: CwBase64[] | undefined;
};
