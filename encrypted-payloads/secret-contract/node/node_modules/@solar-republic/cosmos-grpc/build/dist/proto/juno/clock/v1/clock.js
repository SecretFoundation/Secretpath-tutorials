import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `ClockContract` protobuf message: This object is used to store the contract address and the jail status of the contract.
 * @param sa_contract - `contract_address`: The address of the contract.
 * @param b_is_jailed - `is_jailed`: The jail status of the contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockClockContract = (sa_contract, b_is_jailed) => Protobuf() // ...
    .s(sa_contract) // string contract_address = 1
    .v(b_is_jailed) // boolean is_jailed = 2
    .o;
/**
 * Decodes a protobuf ClockContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockClockContract}
 */
export const decodeJunoClockClockContract = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Destructures the fields of a {@link JunoClockClockContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - The address of the contract.
 *   - 1: is_jailed - The jail status of the contract.
 */
export const destructJunoClockClockContract = (g_struct) => [g_struct.contract_address, g_struct.is_jailed];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_CLOCK_CONTRACT = '/juno.clock.v1.ClockContract';
//# sourceMappingURL=clock.js.map