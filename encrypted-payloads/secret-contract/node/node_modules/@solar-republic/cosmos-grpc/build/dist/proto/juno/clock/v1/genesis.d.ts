import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedJunoClockGenesisState = Encoded<'/juno.clock.v1.GenesisState'>;
export type EncodedJunoClockParams = Encoded<'/juno.clock.v1.Params'>;
/**
 * Encodes a `GenesisState` protobuf message: - initial state of module
 * @param g_params - `params`: Params of this module
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoClockGenesisState: (atu8_params?: Opt<Encoded<'/juno.clock.v1.Params'>>) => EncodedJunoClockGenesisState;
/**
 * Encodes a `Params` protobuf message: defines the set of module parameters.
 * @param sg_contract_gas_limit - `contract_gas_limit`: defines the maximum amount of gas that can be used by a contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoClockParams: (sg_contract_gas_limit?: Opt<WeakUint64Str>) => EncodedJunoClockParams;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params - Params of this module
 */
export type DecodedJunoClockGenesisState = [
    a_params?: DecodedJunoClockParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockGenesisState}
 */
export declare const decodeJunoClockGenesisState: (atu8_payload: Uint8Array) => DecodedJunoClockGenesisState;
/**
 * A decoded protobuf Params message
 *
 * Alias for: contract_gas_limit - defines the maximum amount of gas that can be used by a contract.
 */
export type DecodedJunoClockParams = [
    sg_contract_gas_limit?: CwUint64
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockParams}
 */
export declare const decodeJunoClockParams: (atu8_payload: Uint8Array) => DecodedJunoClockParams;
/**
 * Destructures the fields of a {@link JunoClockParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_gas_limit - defines the maximum amount of gas that can be used by a contract.
 */
export declare const destructJunoClockParams: (g_struct: JunoClockParams) => [contract_gas_limit?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_CLOCK_PARAMS = "/juno.clock.v1.Params";
/**
 * JSON serialization of `juno.clock.v1.Params` - defines the set of module parameters.
 */
export type JunoClockParams = {
    contract_gas_limit?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link JunoClockGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - Params of this module
 */
export declare const destructJunoClockGenesisState: (g_struct: JunoClockGenesisState) => [params?: JunoClockParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_CLOCK_GENESIS_STATE = "/juno.clock.v1.GenesisState";
/**
 * JSON serialization of `juno.clock.v1.GenesisState` - - initial state of module
 */
export type JunoClockGenesisState = {
    params?: JunoClockParams | undefined;
};
