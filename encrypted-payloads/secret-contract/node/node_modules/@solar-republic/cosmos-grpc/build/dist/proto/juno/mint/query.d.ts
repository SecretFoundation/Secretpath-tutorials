/// <reference types="node" />
import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
import type { JunoMintParams, DecodedJunoMintParams } from './mint.js';
export type EncodedJunoMintQueryParamsRequest = Encoded<'/juno.mint.QueryParamsRequest'>;
export type EncodedJunoMintQueryParamsResponse = Encoded<'/juno.mint.QueryParamsResponse'>;
export type EncodedJunoMintQueryInflationRequest = Encoded<'/juno.mint.QueryInflationRequest'>;
export type EncodedJunoMintQueryInflationResponse = Encoded<'/juno.mint.QueryInflationResponse'>;
export type EncodedJunoMintQueryAnnualProvisionsRequest = Encoded<'/juno.mint.QueryAnnualProvisionsRequest'>;
export type EncodedJunoMintQueryAnnualProvisionsResponse = Encoded<'/juno.mint.QueryAnnualProvisionsResponse'>;
export type EncodedJunoMintQueryTargetSupplyRequest = Encoded<'/juno.mint.QueryTargetSupplyRequest'>;
export type EncodedJunoMintQueryTargetSupplyResponse = Encoded<'/juno.mint.QueryTargetSupplyResponse'>;
/**
 * Returns the total set of minting parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryJunoMintParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<JunoMintQueryParamsResponse>>;
/**
 * Returns the current minting inflation value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export declare const queryJunoMintInflation: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<JunoMintQueryInflationResponse>>;
/**
 * Current minting annual provisions value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export declare const queryJunoMintAnnualProvisions: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<JunoMintQueryAnnualProvisionsResponse>>;
/**
 * Current target supply for this phase value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: target_supply - the target supply for this phase value.
 */
export declare const queryJunoMintTargetSupply: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<JunoMintQueryTargetSupplyResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryParamsRequest: () => EncodedJunoMintQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryParamsResponse: (atu8_params?: Opt<Encoded<'/juno.mint.Params'>>) => EncodedJunoMintQueryParamsResponse;
/**
 * Encodes a `QueryInflationRequest` protobuf message: the request type for the Query/Inflation RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryInflationRequest: () => EncodedJunoMintQueryInflationRequest;
/**
 * Encodes a `QueryInflationResponse` protobuf message: the response type for the Query/Inflation RPC method.
 * @param atu8_inflation - `inflation`: the current minting inflation value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryInflationResponse: (atu8_inflation?: Opt<Uint8Array>) => EncodedJunoMintQueryInflationResponse;
/**
 * Encodes a `QueryAnnualProvisionsRequest` protobuf message: the request type for the Query/AnnualProvisions RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryAnnualProvisionsRequest: () => EncodedJunoMintQueryAnnualProvisionsRequest;
/**
 * Encodes a `QueryAnnualProvisionsResponse` protobuf message: the response type for the Query/AnnualProvisions RPC method.
 * @param atu8_annual_provisions - `annual_provisions`: the current minting annual provisions value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryAnnualProvisionsResponse: (atu8_annual_provisions?: Opt<Uint8Array>) => EncodedJunoMintQueryAnnualProvisionsResponse;
/**
 * Encodes a `QueryTargetSupplyRequest` protobuf message: the request type for the Query/TargetSupply RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryTargetSupplyRequest: () => EncodedJunoMintQueryTargetSupplyRequest;
/**
 * Encodes a `QueryTargetSupplyResponse` protobuf message: the response type for the Query/TargetSupply RPC method.
 * @param atu8_target_supply - `target_supply`: the target supply for this phase value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoMintQueryTargetSupplyResponse: (atu8_target_supply?: Opt<Uint8Array>) => EncodedJunoMintQueryTargetSupplyResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedJunoMintQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryParamsRequest}
 */
export declare const decodeJunoMintQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedJunoMintQueryParamsResponse = [
    a_params?: DecodedJunoMintParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryParamsResponse}
 */
export declare const decodeJunoMintQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedJunoMintQueryParamsResponse;
/**
 * A decoded protobuf QueryInflationRequest message
 *
 * Tuple where:
 */
export type DecodedJunoMintQueryInflationRequest = [];
/**
 * Decodes a protobuf QueryInflationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryInflationRequest}
 */
export declare const decodeJunoMintQueryInflationRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryInflation message
 *
 * Alias for: inflation - the current minting inflation value.
 */
export type DecodedJunoMintQueryInflationResponse = [
    atu8_inflation?: Uint8Array
];
/**
 * Decodes a protobuf QueryInflation message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryInflationResponse}
 */
export declare const decodeJunoMintQueryInflationResponse: (atu8_payload: Uint8Array) => DecodedJunoMintQueryInflationResponse;
/**
 * A decoded protobuf QueryAnnualProvisionsRequest message
 *
 * Tuple where:
 */
export type DecodedJunoMintQueryAnnualProvisionsRequest = [];
/**
 * Decodes a protobuf QueryAnnualProvisionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryAnnualProvisionsRequest}
 */
export declare const decodeJunoMintQueryAnnualProvisionsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryAnnualProvisions message
 *
 * Alias for: annual_provisions - the current minting annual provisions value.
 */
export type DecodedJunoMintQueryAnnualProvisionsResponse = [
    atu8_annual_provisions?: Uint8Array
];
/**
 * Decodes a protobuf QueryAnnualProvisions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryAnnualProvisionsResponse}
 */
export declare const decodeJunoMintQueryAnnualProvisionsResponse: (atu8_payload: Uint8Array) => DecodedJunoMintQueryAnnualProvisionsResponse;
/**
 * A decoded protobuf QueryTargetSupplyRequest message
 *
 * Tuple where:
 */
export type DecodedJunoMintQueryTargetSupplyRequest = [];
/**
 * Decodes a protobuf QueryTargetSupplyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryTargetSupplyRequest}
 */
export declare const decodeJunoMintQueryTargetSupplyRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryTargetSupply message
 *
 * Alias for: target_supply - the target supply for this phase value.
 */
export type DecodedJunoMintQueryTargetSupplyResponse = [
    atu8_target_supply?: Uint8Array
];
/**
 * Decodes a protobuf QueryTargetSupply message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryTargetSupplyResponse}
 */
export declare const decodeJunoMintQueryTargetSupplyResponse: (atu8_payload: Uint8Array) => DecodedJunoMintQueryTargetSupplyResponse;
/**
 * Destructures the fields of a {@link JunoMintQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoMintQueryParamsRequest: (g_struct: JunoMintQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_PARAMS_REQUEST = "/juno.mint.QueryParamsRequest";
/**
 * JSON serialization of `juno.mint.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type JunoMintQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link JunoMintQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructJunoMintQueryParamsResponse: (g_struct: JunoMintQueryParamsResponse) => [params?: JunoMintParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_PARAMS_RESPONSE = "/juno.mint.QueryParamsResponse";
/**
 * JSON serialization of `juno.mint.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type JunoMintQueryParamsResponse = {
    params?: JunoMintParams | undefined;
};
/**
 * Destructures the fields of a {@link JunoMintQueryInflationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoMintQueryInflationRequest: (g_struct: JunoMintQueryInflationRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_INFLATION_REQUEST = "/juno.mint.QueryInflationRequest";
/**
 * JSON serialization of `juno.mint.QueryInflationRequest` - the request type for the Query/Inflation RPC method.
 */
export type JunoMintQueryInflationRequest = {};
/**
 * Destructures the fields of a {@link JunoMintQueryInflationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export declare const destructJunoMintQueryInflationResponse: (g_struct: JunoMintQueryInflationResponse) => [inflation?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_INFLATION_RESPONSE = "/juno.mint.QueryInflationResponse";
/**
 * JSON serialization of `juno.mint.QueryInflationResponse` - the response type for the Query/Inflation RPC method.
 */
export type JunoMintQueryInflationResponse = {
    inflation?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link JunoMintQueryAnnualProvisionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoMintQueryAnnualProvisionsRequest: (g_struct: JunoMintQueryAnnualProvisionsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_ANNUAL_PROVISIONS_REQUEST = "/juno.mint.QueryAnnualProvisionsRequest";
/**
 * JSON serialization of `juno.mint.QueryAnnualProvisionsRequest` - the request type for the Query/AnnualProvisions RPC method.
 */
export type JunoMintQueryAnnualProvisionsRequest = {};
/**
 * Destructures the fields of a {@link JunoMintQueryAnnualProvisionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export declare const destructJunoMintQueryAnnualProvisionsResponse: (g_struct: JunoMintQueryAnnualProvisionsResponse) => [annual_provisions?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_ANNUAL_PROVISIONS_RESPONSE = "/juno.mint.QueryAnnualProvisionsResponse";
/**
 * JSON serialization of `juno.mint.QueryAnnualProvisionsResponse` - the response type for the Query/AnnualProvisions RPC method.
 */
export type JunoMintQueryAnnualProvisionsResponse = {
    annual_provisions?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link JunoMintQueryTargetSupplyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoMintQueryTargetSupplyRequest: (g_struct: JunoMintQueryTargetSupplyRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_TARGET_SUPPLY_REQUEST = "/juno.mint.QueryTargetSupplyRequest";
/**
 * JSON serialization of `juno.mint.QueryTargetSupplyRequest` - the request type for the Query/TargetSupply RPC method.
 */
export type JunoMintQueryTargetSupplyRequest = {};
/**
 * Destructures the fields of a {@link JunoMintQueryTargetSupplyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: target_supply - the target supply for this phase value.
 */
export declare const destructJunoMintQueryTargetSupplyResponse: (g_struct: JunoMintQueryTargetSupplyResponse) => [target_supply?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_TARGET_SUPPLY_RESPONSE = "/juno.mint.QueryTargetSupplyResponse";
/**
 * JSON serialization of `juno.mint.QueryTargetSupplyResponse` - the response type for the Query/TargetSupply RPC method.
 */
export type JunoMintQueryTargetSupplyResponse = {
    target_supply?: CwBase64 | undefined;
};
