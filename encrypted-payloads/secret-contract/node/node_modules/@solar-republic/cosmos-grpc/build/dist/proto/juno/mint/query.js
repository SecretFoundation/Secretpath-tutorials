import { decode_protobuf } from '../../../api/protobuf-reader.js';
import { Protobuf } from '../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../api/transport.js';
import { safe_base64_to_bytes } from '../../../api/util.js';
import { decodeJunoMintParams } from './mint.js';
const SR_LCD_JUNO_MINT_QUERY = '/cosmos/mint/v1beta1/';
/**
 * Returns the total set of minting parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryJunoMintParams = restful_grpc(() => [SR_LCD_JUNO_MINT_QUERY + 'params']);
/**
 * Returns the current minting inflation value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export const queryJunoMintInflation = restful_grpc(() => [SR_LCD_JUNO_MINT_QUERY + 'inflation']);
/**
 * Current minting annual provisions value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export const queryJunoMintAnnualProvisions = restful_grpc(() => [SR_LCD_JUNO_MINT_QUERY + 'annual_provisions']);
/**
 * Current target supply for this phase value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: target_supply - the target supply for this phase value.
 */
export const queryJunoMintTargetSupply = restful_grpc(() => [SR_LCD_JUNO_MINT_QUERY + 'target_supply']);
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `QueryInflationRequest` protobuf message: the request type for the Query/Inflation RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryInflationRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryInflationResponse` protobuf message: the response type for the Query/Inflation RPC method.
 * @param atu8_inflation - `inflation`: the current minting inflation value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryInflationResponse = (atu8_inflation) => Protobuf() // ...
    .b(atu8_inflation) // bytes inflation = 1
    .o;
/**
 * Encodes a `QueryAnnualProvisionsRequest` protobuf message: the request type for the Query/AnnualProvisions RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryAnnualProvisionsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryAnnualProvisionsResponse` protobuf message: the response type for the Query/AnnualProvisions RPC method.
 * @param atu8_annual_provisions - `annual_provisions`: the current minting annual provisions value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryAnnualProvisionsResponse = (atu8_annual_provisions) => Protobuf() // ...
    .b(atu8_annual_provisions) // bytes annual_provisions = 1
    .o;
/**
 * Encodes a `QueryTargetSupplyRequest` protobuf message: the request type for the Query/TargetSupply RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryTargetSupplyRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryTargetSupplyResponse` protobuf message: the response type for the Query/TargetSupply RPC method.
 * @param atu8_target_supply - `target_supply`: the target supply for this phase value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoMintQueryTargetSupplyResponse = (atu8_target_supply) => Protobuf() // ...
    .b(atu8_target_supply) // bytes target_supply = 1
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryParamsRequest}
 */
export const decodeJunoMintQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryParamsResponse}
 */
export const decodeJunoMintQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeJunoMintParams]);
/**
 * Decodes a protobuf QueryInflationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryInflationRequest}
 */
export const decodeJunoMintQueryInflationRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryInflation message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryInflationResponse}
 */
export const decodeJunoMintQueryInflationResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf QueryAnnualProvisionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryAnnualProvisionsRequest}
 */
export const decodeJunoMintQueryAnnualProvisionsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryAnnualProvisions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryAnnualProvisionsResponse}
 */
export const decodeJunoMintQueryAnnualProvisionsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf QueryTargetSupplyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryTargetSupplyRequest}
 */
export const decodeJunoMintQueryTargetSupplyRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryTargetSupply message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoMintQueryTargetSupplyResponse}
 */
export const decodeJunoMintQueryTargetSupplyResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link JunoMintQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructJunoMintQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_PARAMS_REQUEST = '/juno.mint.QueryParamsRequest';
/**
 * Destructures the fields of a {@link JunoMintQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructJunoMintQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_PARAMS_RESPONSE = '/juno.mint.QueryParamsResponse';
/**
 * Destructures the fields of a {@link JunoMintQueryInflationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructJunoMintQueryInflationRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_INFLATION_REQUEST = '/juno.mint.QueryInflationRequest';
/**
 * Destructures the fields of a {@link JunoMintQueryInflationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export const destructJunoMintQueryInflationResponse = (g_struct) => [safe_base64_to_bytes(g_struct.inflation)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_INFLATION_RESPONSE = '/juno.mint.QueryInflationResponse';
/**
 * Destructures the fields of a {@link JunoMintQueryAnnualProvisionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructJunoMintQueryAnnualProvisionsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_ANNUAL_PROVISIONS_REQUEST = '/juno.mint.QueryAnnualProvisionsRequest';
/**
 * Destructures the fields of a {@link JunoMintQueryAnnualProvisionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export const destructJunoMintQueryAnnualProvisionsResponse = (g_struct) => [safe_base64_to_bytes(g_struct.annual_provisions)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_ANNUAL_PROVISIONS_RESPONSE = '/juno.mint.QueryAnnualProvisionsResponse';
/**
 * Destructures the fields of a {@link JunoMintQueryTargetSupplyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructJunoMintQueryTargetSupplyRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_TARGET_SUPPLY_REQUEST = '/juno.mint.QueryTargetSupplyRequest';
/**
 * Destructures the fields of a {@link JunoMintQueryTargetSupplyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: target_supply - the target supply for this phase value.
 */
export const destructJunoMintQueryTargetSupplyResponse = (g_struct) => [safe_base64_to_bytes(g_struct.target_supply)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_MINT_QUERY_TARGET_SUPPLY_RESPONSE = '/juno.mint.QueryTargetSupplyResponse';
//# sourceMappingURL=query.js.map