import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
export type EncodedOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal = Encoded<'/osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal'>;
export type EncodedOsmosisConcentratedliquidityTickSpacingDecreaseProposal = Encoded<'/osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal'>;
export type EncodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord'>;
export type EncodedOsmosisConcentratedliquidityPoolRecord = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolRecord'>;
/**
 * Encodes a `CreateConcentratedLiquidityPoolsProposal` protobuf message: a gov Content type for creating concentrated liquidity pools. If a CreateConcentratedLiquidityPoolsProposal passes, the pools are created via pool manager module account.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_pool_records - `pool_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal: (s_title?: Opt<string>, s_description?: Opt<string>, a_pool_records?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolRecord'>[]>) => EncodedOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal;
/**
 * Encodes a `TickSpacingDecreaseProposal` protobuf message: a gov Content type for proposing a tick spacing decrease for a pool. The proposal will fail if one of the pools do not exist, or if the new tick spacing is not less than the current tick spacing.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_pool_id_to_tick_spacing_records - `pool_id_to_tick_spacing_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityTickSpacingDecreaseProposal: (s_title?: Opt<string>, s_description?: Opt<string>, a_pool_id_to_tick_spacing_records?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord'>[]>) => EncodedOsmosisConcentratedliquidityTickSpacingDecreaseProposal;
/**
 * Encodes a `PoolIdToTickSpacingRecord` protobuf message: a struct that contains a pool id to new tick spacing pair.
 * @param sg_pool_id - `pool_id`:
 * @param sg_new_tick_spacing - `new_tick_spacing`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolIdToTickSpacingRecord: (sg_pool_id?: Opt<WeakUint64Str>, sg_new_tick_spacing?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord;
/**
 * Encodes a `PoolRecord` protobuf message:
 * @param s_denom0 - `denom0`:
 * @param s_denom1 - `denom1`:
 * @param sg_tick_spacing - `tick_spacing`:
 * @param s_spread_factor - `spread_factor`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolRecord: (s_denom0?: Opt<string>, s_denom1?: Opt<string>, sg_tick_spacing?: Opt<WeakUint64Str>, s_spread_factor?: Opt<string>) => EncodedOsmosisConcentratedliquidityPoolRecord;
/**
 * A decoded protobuf CreateConcentratedLiquidityPoolsProposal message
 *
 * Tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_records -
 */
export type DecodedOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal = [
    s_title?: string,
    s_description?: string,
    a_pool_records?: DecodedOsmosisConcentratedliquidityPoolRecord[]
];
/**
 * Decodes a protobuf CreateConcentratedLiquidityPoolsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal}
 */
export declare const decodeOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal;
/**
 * A decoded protobuf TickSpacingDecreaseProposal message
 *
 * Tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_id_to_tick_spacing_records -
 */
export type DecodedOsmosisConcentratedliquidityTickSpacingDecreaseProposal = [
    s_title?: string,
    s_description?: string,
    a_pool_id_to_tick_spacing_records?: DecodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord[]
];
/**
 * Decodes a protobuf TickSpacingDecreaseProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickSpacingDecreaseProposal}
 */
export declare const decodeOsmosisConcentratedliquidityTickSpacingDecreaseProposal: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityTickSpacingDecreaseProposal;
/**
 * A decoded protobuf PoolIdToTickSpacingRecord message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: new_tick_spacing -
 */
export type DecodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord = [
    sg_pool_id?: CwUint64,
    sg_new_tick_spacing?: CwUint64
];
/**
 * Decodes a protobuf PoolIdToTickSpacingRecord message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord}
 */
export declare const decodeOsmosisConcentratedliquidityPoolIdToTickSpacingRecord: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolIdToTickSpacingRecord;
/**
 * A decoded protobuf PoolRecord message
 *
 * Tuple where:
 *   - 0: denom0 -
 *   - 1: denom1 -
 *   - 2: tick_spacing -
 *   - 4: spread_factor -
 */
export type DecodedOsmosisConcentratedliquidityPoolRecord = [
    s_denom0?: string,
    s_denom1?: string,
    sg_tick_spacing?: CwUint64,
    w_0?: undefined,
    s_spread_factor?: string
];
/**
 * Decodes a protobuf PoolRecord message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolRecord}
 */
export declare const decodeOsmosisConcentratedliquidityPoolRecord: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisConcentratedliquidityPoolRecord;
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_records -
 */
export declare const destructOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal: (g_struct: OsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal) => [title?: string, description?: string, pool_records?: OsmosisConcentratedliquidityPoolRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CREATE_CONCENTRATED_LIQUIDITY_POOLS_PROPOSAL = "/osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal` - a gov Content type for creating concentrated liquidity pools. If a CreateConcentratedLiquidityPoolsProposal passes, the pools are created via pool manager module account.
 */
export type OsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal = {
    title?: string | undefined;
    description?: string | undefined;
    pool_records?: OsmosisConcentratedliquidityPoolRecord[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolRecord} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom0 -
 *   - 1: denom1 -
 *   - 2: tick_spacing -
 *   - 4: spread_factor -
 */
export declare const destructOsmosisConcentratedliquidityPoolRecord: (g_struct: OsmosisConcentratedliquidityPoolRecord) => [denom0?: string, denom1?: string, tick_spacing?: CwUint64, EMPTY?: void, spread_factor?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_RECORD = "/osmosis.concentratedliquidity.v1beta1.PoolRecord";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolRecord` -
 */
export type OsmosisConcentratedliquidityPoolRecord = {
    denom0?: string | undefined;
    denom1?: string | undefined;
    tick_spacing?: CwUint64 | undefined;
    spread_factor?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickSpacingDecreaseProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_id_to_tick_spacing_records -
 */
export declare const destructOsmosisConcentratedliquidityTickSpacingDecreaseProposal: (g_struct: OsmosisConcentratedliquidityTickSpacingDecreaseProposal) => [title?: string, description?: string, pool_id_to_tick_spacing_records?: OsmosisConcentratedliquidityPoolIdToTickSpacingRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_SPACING_DECREASE_PROPOSAL = "/osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal` - a gov Content type for proposing a tick spacing decrease for a pool. The proposal will fail if one of the pools do not exist, or if the new tick spacing is not less than the current tick spacing.
 */
export type OsmosisConcentratedliquidityTickSpacingDecreaseProposal = {
    title?: string | undefined;
    description?: string | undefined;
    pool_id_to_tick_spacing_records?: OsmosisConcentratedliquidityPoolIdToTickSpacingRecord[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolIdToTickSpacingRecord} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: new_tick_spacing -
 */
export declare const destructOsmosisConcentratedliquidityPoolIdToTickSpacingRecord: (g_struct: OsmosisConcentratedliquidityPoolIdToTickSpacingRecord) => [pool_id?: CwUint64, new_tick_spacing?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_ID_TO_TICK_SPACING_RECORD = "/osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord` - a struct that contains a pool id to new tick spacing pair.
 */
export type OsmosisConcentratedliquidityPoolIdToTickSpacingRecord = {
    pool_id?: CwUint64 | undefined;
    new_tick_spacing?: CwUint64 | undefined;
};
