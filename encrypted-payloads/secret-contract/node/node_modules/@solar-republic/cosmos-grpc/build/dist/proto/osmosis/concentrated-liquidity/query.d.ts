/// <reference types="node" />
import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, SlimCoin, CwInt64, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../cosmos/base/query/v1beta1/pagination.js';
import type { CosmosBaseCoin, CosmosBaseDecCoin, DecodedCosmosBaseDecCoin } from '../../cosmos/base/v1beta1/coin.js';
import type { DecodedGoogleProtobufAny } from '../../google/protobuf/any.js';
import type { OsmosisConcentratedliquidityIncentiveRecord, DecodedOsmosisConcentratedliquidityIncentiveRecord } from './incentive_record.js';
import type { OsmosisConcentratedliquidityParams, DecodedOsmosisConcentratedliquidityParams } from './params.js';
import type { OsmosisConcentratedliquidityPool } from './pool.js';
import type { OsmosisConcentratedliquidityFullPositionBreakdown, DecodedOsmosisConcentratedliquidityFullPositionBreakdown, OsmosisConcentratedliquidityPositionWithPeriodLock, DecodedOsmosisConcentratedliquidityPositionWithPeriodLock } from './position.js';
import type { OsmosisConcentratedliquidityUptimeTracker, DecodedOsmosisConcentratedliquidityUptimeTracker } from './tickInfo.js';
import type { OsmosisCosmwasmpoolCosmWasmPool } from '../cosmwasmpool/v1beta1/model/pool.js';
import type { OsmosisGammPool } from '../gamm/pool-models/balancer/balancerPool.js';
import type { OsmosisGammPoolmodelsStableswapPool } from '../gamm/pool-models/stableswap/stableswap_pool.js';
export type EncodedOsmosisConcentratedliquidityUserPositionsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.UserPositionsRequest'>;
export type EncodedOsmosisConcentratedliquidityUserPositionsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.UserPositionsResponse'>;
export type EncodedOsmosisConcentratedliquidityPositionByIdRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.PositionByIdRequest'>;
export type EncodedOsmosisConcentratedliquidityPositionByIdResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.PositionByIdResponse'>;
export type EncodedOsmosisConcentratedliquidityPoolsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolsRequest'>;
export type EncodedOsmosisConcentratedliquidityPoolsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolsResponse'>;
export type EncodedOsmosisConcentratedliquidityParamsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.ParamsRequest'>;
export type EncodedOsmosisConcentratedliquidityParamsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.ParamsResponse'>;
export type EncodedOsmosisConcentratedliquidityTickLiquidityNet = Encoded<'/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet'>;
export type EncodedOsmosisConcentratedliquidityLiquidityDepthWithRange = Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange'>;
export type EncodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest'>;
export type EncodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse'>;
export type EncodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest'>;
export type EncodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse'>;
export type EncodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest'>;
export type EncodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse'>;
export type EncodedOsmosisConcentratedliquidityClaimableIncentivesRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest'>;
export type EncodedOsmosisConcentratedliquidityClaimableIncentivesResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse'>;
export type EncodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest'>;
export type EncodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse'>;
export type EncodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest'>;
export type EncodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse'>;
export type EncodedOsmosisConcentratedliquidityIncentiveRecordsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest'>;
export type EncodedOsmosisConcentratedliquidityIncentiveRecordsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse'>;
export type EncodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest'>;
export type EncodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse'>;
export type EncodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest'>;
export type EncodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse'>;
export type EncodedOsmosisConcentratedliquidityGetTotalLiquidityRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest'>;
export type EncodedOsmosisConcentratedliquidityGetTotalLiquidityResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse'>;
export type EncodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest = Encoded<'/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest'>;
export type EncodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse'>;
/**
 * Returns all concentrated liquidity pools
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export declare const queryOsmosisConcentratedliquidityPools: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityPoolsResponse>>;
/**
 * Returns concentrated liquidity module params.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryOsmosisConcentratedliquidityParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityParamsResponse>>;
/**
 * Returns all concentrated postitions of some address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @param sg_pool_id -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: positions - the 'positions' response property
 *   - 1: pagination - the 'positions' response property
 */
export declare const queryOsmosisConcentratedliquidityUserPositions: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>, sg_pool_id?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityUserPositionsResponse>>;
/**
 * Returns the amount of liquidity per every tick range existing within the given pool
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export declare const queryOsmosisConcentratedliquidityLiquidityPerTickRange: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityLiquidityPerTickRangeResponse>>;
/**
 * Returns liquidity net in the direction given. Uses the bound if specified, if not uses either min tick / max tick depending on the direction.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in -
 * @param sg_start_tick -
 * @param b_use_cur_tick -
 * @param sg_bound_tick -
 * @param b_use_no_bound -
 * @returns a tuple where:
 *   - 0: liquidity_depths - the 'liquidity_depths' response property
 *   - 1: current_tick - the 'liquidity_depths' response property
 *   - 2: current_liquidity - the 'liquidity_depths' response property
 *   - 3: current_sqrt_price - the 'liquidity_depths' response property
 */
export declare const queryOsmosisConcentratedliquidityLiquidityNetInDirection: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in?: Opt<string>, sg_start_tick?: Opt<`${bigint}`>, b_use_cur_tick?: Opt<boolean | 0 | 1>, sg_bound_tick?: Opt<`${bigint}`>, b_use_no_bound?: Opt<boolean | 0 | 1>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityLiquidityNetInDirectionResponse>>;
/**
 * Returns the amount of spread rewards that can be claimed by a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: claimable_spread_rewards - the 'claimable_spread_rewards' response property
 */
export declare const queryOsmosisConcentratedliquidityClaimableSpreadRewards: (z_req: string | ({
    origin: string;
} & RequestInit), sg_position_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityClaimableSpreadRewardsResponse>>;
/**
 * Returns the amount of incentives that can be claimed and how many would be forfeited by a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: claimable_incentives - the 'claimable_incentives' response property
 *   - 1: forfeited_incentives - the 'claimable_incentives' response property
 */
export declare const queryOsmosisConcentratedliquidityClaimableIncentives: (z_req: string | ({
    origin: string;
} & RequestInit), sg_position_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityClaimableIncentivesResponse>>;
/**
 * Returns a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: position - the 'position' response property
 */
export declare const queryOsmosisConcentratedliquidityPositionById: (z_req: string | ({
    origin: string;
} & RequestInit), sg_position_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityPositionByIdResponse>>;
/**
 * Returns the pool-global accumulator rewards. Contains spread factor rewards and uptime rewards.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: spread_reward_growth_global - the 'spread_reward_growth_global' response property
 *   - 1: uptime_growth_global - the 'spread_reward_growth_global' response property
 */
export declare const queryOsmosisConcentratedliquidityPoolAccumulatorRewards: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityPoolAccumulatorRewardsResponse>>;
/**
 * Returns the incentive records for a given poolId
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: incentive_records - the 'incentive_records' response property
 *   - 1: pagination - the 'incentive_records' response property
 */
export declare const queryOsmosisConcentratedliquidityIncentiveRecords: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityIncentiveRecordsResponse>>;
/**
 * Returns the tick accumulator trackers. Contains spread factor and uptime accumulator trackers.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param sg_tick_index -
 * @returns a tuple where:
 *   - 0: spread_reward_growth_opposite_direction_of_last_traversal - the 'spread_reward_growth_opposite_direction_of_last_traversal' response property
 *   - 1: uptime_trackers - the 'spread_reward_growth_opposite_direction_of_last_traversal' response property
 */
export declare const queryOsmosisConcentratedliquidityTickAccumulatorTrackers: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, sg_tick_index?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityTickAccumulatorTrackersResponse>>;
/**
 * Returns the pool id of the CFMM pool that is linked with the given concentrated pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_concentrated_pool_id -
 * @returns a tuple where:
 *   - 0: cfmm_pool_id - the 'cfmm_pool_id' response property
 */
export declare const queryOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolId: (z_req: string | ({
    origin: string;
} & RequestInit), sg_concentrated_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse>>;
/**
 * Returns the position and lock info of unbonding positions of the given address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @returns a tuple where:
 *   - 0: positions_with_period_lock - the 'positions_with_period_lock' response property
 */
export declare const queryOsmosisConcentratedliquidityUserUnbondingPositions: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityUserUnbondingPositionsResponse>>;
/**
 * Returns total liquidity across all cl pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: total_liquidity - the 'total_liquidity' response property
 */
export declare const queryOsmosisConcentratedliquidityGetTotalLiquidity: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityGetTotalLiquidityResponse>>;
/**
 * Returns the provided number of next initialized ticks in the direction of swapping the token in denom.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in_denom -
 * @param sg_num_next_initialized_ticks -
 * @returns a tuple where:
 *   - 0: liquidity_depths - the 'liquidity_depths' response property
 *   - 1: current_tick - the 'liquidity_depths' response property
 *   - 2: current_liquidity - the 'liquidity_depths' response property
 */
export declare const queryOsmosisConcentratedliquidityNumNextInitializedTicks: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in_denom?: Opt<string>, sg_num_next_initialized_ticks?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisConcentratedliquidityNumNextInitializedTicksResponse>>;
/**
 * Encodes a `UserPositionsRequest` protobuf message: =============================== UserPositions
 * @param sa_address - `address`:
 * @param sg_pool_id - `pool_id`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityUserPositionsRequest: (sa_address?: Opt<WeakAccountAddr>, sg_pool_id?: Opt<WeakUint64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisConcentratedliquidityUserPositionsRequest;
/**
 * Encodes a `UserPositionsResponse` protobuf message:
 * @param a_positions - `positions`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityUserPositionsResponse: (a_positions?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.FullPositionBreakdown'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisConcentratedliquidityUserPositionsResponse;
/**
 * Encodes a `PositionByIdRequest` protobuf message: =============================== PositionById
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPositionByIdRequest: (sg_position_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityPositionByIdRequest;
/**
 * Encodes a `PositionByIdResponse` protobuf message:
 * @param g_position - `position`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPositionByIdResponse: (atu8_position?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.FullPositionBreakdown'>>) => EncodedOsmosisConcentratedliquidityPositionByIdResponse;
/**
 * Encodes a `PoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisConcentratedliquidityPoolsRequest;
/**
 * Encodes a `PoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolsResponse: (a_pools?: Opt<Encoded<'PoolI'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisConcentratedliquidityPoolsResponse;
/**
 * Encodes a `ParamsRequest` protobuf message: =============================== ModuleParams
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityParamsRequest: () => EncodedOsmosisConcentratedliquidityParamsRequest;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityParamsResponse: (atu8_params?: Opt<Encoded<'/osmosis.concentratedliquidity.Params'>>) => EncodedOsmosisConcentratedliquidityParamsResponse;
/**
 * Encodes a `TickLiquidityNet` protobuf message:
 * @param s_liquidity_net - `liquidity_net`:
 * @param sg_tick_index - `tick_index`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityTickLiquidityNet: (s_liquidity_net?: Opt<string>, sg_tick_index?: Opt<WeakInt64Str>) => EncodedOsmosisConcentratedliquidityTickLiquidityNet;
/**
 * Encodes a `LiquidityDepthWithRange` protobuf message:
 * @param s_liquidity_amount - `liquidity_amount`:
 * @param sg_lower_tick - `lower_tick`:
 * @param sg_upper_tick - `upper_tick`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityLiquidityDepthWithRange: (s_liquidity_amount?: Opt<string>, sg_lower_tick?: Opt<WeakInt64Str>, sg_upper_tick?: Opt<WeakInt64Str>) => EncodedOsmosisConcentratedliquidityLiquidityDepthWithRange;
/**
 * Encodes a `LiquidityNetInDirectionRequest` protobuf message: =============================== LiquidityNetInDirection
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param sg_start_tick - `start_tick`:
 * @param b_use_cur_tick - `use_cur_tick`:
 * @param sg_bound_tick - `bound_tick`:
 * @param b_use_no_bound - `use_no_bound`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in?: Opt<string>, sg_start_tick?: Opt<WeakInt64Str>, b_use_cur_tick?: Opt<boolean | 0 | 1>, sg_bound_tick?: Opt<WeakInt64Str>, b_use_no_bound?: Opt<boolean | 0 | 1>) => EncodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest;
/**
 * Encodes a `LiquidityNetInDirectionResponse` protobuf message:
 * @param a_liquidity_depths - `liquidity_depths`:
 * @param sg_current_tick - `current_tick`:
 * @param s_current_liquidity - `current_liquidity`:
 * @param s_current_sqrt_price - `current_sqrt_price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse: (a_liquidity_depths?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet'>[]>, sg_current_tick?: Opt<WeakInt64Str>, s_current_liquidity?: Opt<string>, s_current_sqrt_price?: Opt<string>) => EncodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse;
/**
 * Encodes a `LiquidityPerTickRangeRequest` protobuf message: =============================== LiquidityPerTickRange
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest;
/**
 * Encodes a `LiquidityPerTickRangeResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse: (a_liquiditys?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange'>[]>) => EncodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse;
/**
 * Encodes a `ClaimableSpreadRewardsRequest` protobuf message: ===================== QueryClaimableSpreadRewards
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest: (sg_position_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest;
/**
 * Encodes a `ClaimableSpreadRewardsResponse` protobuf message:
 * @param a_claimable_spread_rewards - `claimable_spread_rewards`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse: (a_claimable_spread_rewards?: Opt<SlimCoin[]>) => EncodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse;
/**
 * Encodes a `ClaimableIncentivesRequest` protobuf message: ===================== QueryClaimableIncentives
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityClaimableIncentivesRequest: (sg_position_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityClaimableIncentivesRequest;
/**
 * Encodes a `ClaimableIncentivesResponse` protobuf message:
 * @param a_claimable_incentives - `claimable_incentives`:
 * @param a_forfeited_incentives - `forfeited_incentives`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityClaimableIncentivesResponse: (a_claimable_incentives?: Opt<SlimCoin[]>, a_forfeited_incentives?: Opt<SlimCoin[]>) => EncodedOsmosisConcentratedliquidityClaimableIncentivesResponse;
/**
 * Encodes a `PoolAccumulatorRewardsRequest` protobuf message: ===================== QueryPoolAccumulatorRewards
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest;
/**
 * Encodes a `PoolAccumulatorRewardsResponse` protobuf message:
 * @param a_spread_reward_growth_globals - `spread_reward_growth_global`:
 * @param a_uptime_growth_globals - `uptime_growth_global`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse: (a_spread_reward_growth_globals?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>, a_uptime_growth_globals?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.UptimeTracker'>[]>) => EncodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse;
/**
 * Encodes a `TickAccumulatorTrackersRequest` protobuf message: ===================== QueryTickAccumulatorTrackers
 * @param sg_pool_id - `pool_id`:
 * @param sg_tick_index - `tick_index`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest: (sg_pool_id?: Opt<WeakUint64Str>, sg_tick_index?: Opt<WeakInt64Str>) => EncodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest;
/**
 * Encodes a `TickAccumulatorTrackersResponse` protobuf message:
 * @param a_spread_reward_growth_opposite_direction_of_last_traversals - `spread_reward_growth_opposite_direction_of_last_traversal`:
 * @param a_uptime_trackers - `uptime_trackers`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse: (a_spread_reward_growth_opposite_direction_of_last_traversals?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>[]>, a_uptime_trackers?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.UptimeTracker'>[]>) => EncodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse;
/**
 * Encodes a `IncentiveRecordsRequest` protobuf message: ===================== QueryIncentiveRecords
 * @param sg_pool_id - `pool_id`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityIncentiveRecordsRequest: (sg_pool_id?: Opt<WeakUint64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisConcentratedliquidityIncentiveRecordsRequest;
/**
 * Encodes a `IncentiveRecordsResponse` protobuf message:
 * @param a_incentive_records - `incentive_records`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityIncentiveRecordsResponse: (a_incentive_records?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.IncentiveRecord'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisConcentratedliquidityIncentiveRecordsResponse;
/**
 * Encodes a `CFMMPoolIdLinkFromConcentratedPoolIdRequest` protobuf message: =============================== CFMMPoolIdLinkFromConcentratedPoolId
 * @param sg_concentrated_pool_id - `concentrated_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest: (sg_concentrated_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest;
/**
 * Encodes a `CFMMPoolIdLinkFromConcentratedPoolIdResponse` protobuf message:
 * @param sg_cfmm_pool_id - `cfmm_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse: (sg_cfmm_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse;
/**
 * Encodes a `UserUnbondingPositionsRequest` protobuf message: =============================== UserUnbondingPositions
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest: (sa_address?: Opt<WeakAccountAddr>) => EncodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest;
/**
 * Encodes a `UserUnbondingPositionsResponse` protobuf message:
 * @param a_positions_with_period_locks - `positions_with_period_lock`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse: (a_positions_with_period_locks?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.PositionWithPeriodLock'>[]>) => EncodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse;
/**
 * Encodes a `GetTotalLiquidityRequest` protobuf message: =============================== GetTotalLiquidity
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityGetTotalLiquidityRequest: () => EncodedOsmosisConcentratedliquidityGetTotalLiquidityRequest;
/**
 * Encodes a `GetTotalLiquidityResponse` protobuf message:
 * @param a_total_liquiditys - `total_liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityGetTotalLiquidityResponse: (a_total_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisConcentratedliquidityGetTotalLiquidityResponse;
/**
 * Encodes a `NumNextInitializedTicksRequest` protobuf message: =============================== NumNextInitializedTicks
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in_denom - `token_in_denom`:
 * @param sg_num_next_initialized_ticks - `num_next_initialized_ticks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in_denom?: Opt<string>, sg_num_next_initialized_ticks?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest;
/**
 * Encodes a `NumNextInitializedTicksResponse` protobuf message:
 * @param a_liquidity_depths - `liquidity_depths`:
 * @param sg_current_tick - `current_tick`:
 * @param s_current_liquidity - `current_liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse: (a_liquidity_depths?: Opt<Encoded<'/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet'>[]>, sg_current_tick?: Opt<WeakInt64Str>, s_current_liquidity?: Opt<string>) => EncodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse;
/**
 * A decoded protobuf UserPositionsRequest message
 *
 * Tuple where:
 *   - 0: address -
 *   - 1: pool_id -
 *   - 2: pagination -
 */
export type DecodedOsmosisConcentratedliquidityUserPositionsRequest = [
    sa_address?: CwAccountAddr,
    sg_pool_id?: CwUint64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf UserPositionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserPositionsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityUserPositionsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityUserPositionsRequest;
/**
 * A decoded protobuf UserPositions message
 *
 * Tuple where:
 *   - 0: positions -
 *   - 1: pagination -
 */
export type DecodedOsmosisConcentratedliquidityUserPositionsResponse = [
    a_positions?: DecodedOsmosisConcentratedliquidityFullPositionBreakdown[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf UserPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserPositionsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityUserPositionsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityUserPositionsResponse;
/**
 * A decoded protobuf PositionByIdRequest message
 *
 * Alias for: position_id -
 */
export type DecodedOsmosisConcentratedliquidityPositionByIdRequest = [
    sg_position_id?: CwUint64
];
/**
 * Decodes a protobuf PositionByIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPositionByIdRequest}
 */
export declare const decodeOsmosisConcentratedliquidityPositionByIdRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPositionByIdRequest;
/**
 * A decoded protobuf PositionById message
 *
 * Alias for: position -
 */
export type DecodedOsmosisConcentratedliquidityPositionByIdResponse = [
    a_position?: DecodedOsmosisConcentratedliquidityFullPositionBreakdown
];
/**
 * Decodes a protobuf PositionById message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPositionByIdResponse}
 */
export declare const decodeOsmosisConcentratedliquidityPositionByIdResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPositionByIdResponse;
/**
 * A decoded protobuf PoolsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedOsmosisConcentratedliquidityPoolsRequest = [
    w_0?: undefined,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf PoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityPoolsRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisConcentratedliquidityPoolsRequest;
/**
 * A decoded protobuf Pools message
 *
 * Tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedOsmosisConcentratedliquidityPoolsResponse = [
    a_pools?: DecodedGoogleProtobufAny[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf Pools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolsResponse;
/**
 * A decoded protobuf ParamsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisConcentratedliquidityParamsRequest = [];
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityParamsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Params message
 *
 * Alias for: params -
 */
export type DecodedOsmosisConcentratedliquidityParamsResponse = [
    a_params?: DecodedOsmosisConcentratedliquidityParams
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityParamsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityParamsResponse;
/**
 * A decoded protobuf TickLiquidityNet message
 *
 * Tuple where:
 *   - 0: liquidity_net -
 *   - 1: tick_index -
 */
export type DecodedOsmosisConcentratedliquidityTickLiquidityNet = [
    s_liquidity_net?: string,
    sg_tick_index?: CwInt64
];
/**
 * Decodes a protobuf TickLiquidityNet message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickLiquidityNet}
 */
export declare const decodeOsmosisConcentratedliquidityTickLiquidityNet: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityTickLiquidityNet;
/**
 * A decoded protobuf LiquidityDepthWithRange message
 *
 * Tuple where:
 *   - 0: liquidity_amount -
 *   - 1: lower_tick -
 *   - 2: upper_tick -
 */
export type DecodedOsmosisConcentratedliquidityLiquidityDepthWithRange = [
    s_liquidity_amount?: string,
    sg_lower_tick?: CwInt64,
    sg_upper_tick?: CwInt64
];
/**
 * Decodes a protobuf LiquidityDepthWithRange message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityDepthWithRange}
 */
export declare const decodeOsmosisConcentratedliquidityLiquidityDepthWithRange: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityLiquidityDepthWithRange;
/**
 * A decoded protobuf LiquidityNetInDirectionRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: start_tick -
 *   - 3: use_cur_tick -
 *   - 4: bound_tick -
 *   - 5: use_no_bound -
 */
export type DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest = [
    sg_pool_id?: CwUint64,
    s_token_in?: string,
    sg_start_tick?: CwInt64,
    b_use_cur_tick?: 0 | 1,
    sg_bound_tick?: CwInt64,
    b_use_no_bound?: 0 | 1
];
/**
 * Decodes a protobuf LiquidityNetInDirectionRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest}
 */
export declare const decodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest;
/**
 * A decoded protobuf LiquidityNetInDirection message
 *
 * Tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 *   - 3: current_sqrt_price -
 */
export type DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse = [
    a_liquidity_depths?: DecodedOsmosisConcentratedliquidityTickLiquidityNet[],
    sg_current_tick?: CwInt64,
    s_current_liquidity?: string,
    s_current_sqrt_price?: string
];
/**
 * Decodes a protobuf LiquidityNetInDirection message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse}
 */
export declare const decodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse;
/**
 * A decoded protobuf LiquidityPerTickRangeRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf LiquidityPerTickRangeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest}
 */
export declare const decodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest;
/**
 * A decoded protobuf LiquidityPerTickRange message
 *
 * Alias for: liquidity -
 */
export type DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse = [
    a_liquidity?: DecodedOsmosisConcentratedliquidityLiquidityDepthWithRange[]
];
/**
 * Decodes a protobuf LiquidityPerTickRange message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse}
 */
export declare const decodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse;
/**
 * A decoded protobuf ClaimableSpreadRewardsRequest message
 *
 * Alias for: position_id -
 */
export type DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest = [
    sg_position_id?: CwUint64
];
/**
 * Decodes a protobuf ClaimableSpreadRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest;
/**
 * A decoded protobuf ClaimableSpreadRewards message
 *
 * Alias for: claimable_spread_rewards -
 */
export type DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse = [
    a_claimable_spread_rewards?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf ClaimableSpreadRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse;
/**
 * A decoded protobuf ClaimableIncentivesRequest message
 *
 * Alias for: position_id -
 */
export type DecodedOsmosisConcentratedliquidityClaimableIncentivesRequest = [
    sg_position_id?: CwUint64
];
/**
 * Decodes a protobuf ClaimableIncentivesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableIncentivesRequest}
 */
export declare const decodeOsmosisConcentratedliquidityClaimableIncentivesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityClaimableIncentivesRequest;
/**
 * A decoded protobuf ClaimableIncentives message
 *
 * Tuple where:
 *   - 0: claimable_incentives -
 *   - 1: forfeited_incentives -
 */
export type DecodedOsmosisConcentratedliquidityClaimableIncentivesResponse = [
    a_claimable_incentives?: [
        string,
        string
    ][],
    a_forfeited_incentives?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf ClaimableIncentives message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableIncentivesResponse}
 */
export declare const decodeOsmosisConcentratedliquidityClaimableIncentivesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityClaimableIncentivesResponse;
/**
 * A decoded protobuf PoolAccumulatorRewardsRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf PoolAccumulatorRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest;
/**
 * A decoded protobuf PoolAccumulatorRewards message
 *
 * Tuple where:
 *   - 0: spread_reward_growth_global -
 *   - 1: uptime_growth_global -
 */
export type DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = [
    a_spread_reward_growth_global?: DecodedCosmosBaseDecCoin[],
    a_uptime_growth_global?: DecodedOsmosisConcentratedliquidityUptimeTracker[]
];
/**
 * Decodes a protobuf PoolAccumulatorRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse;
/**
 * A decoded protobuf TickAccumulatorTrackersRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: tick_index -
 */
export type DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest = [
    sg_pool_id?: CwUint64,
    sg_tick_index?: CwInt64
];
/**
 * Decodes a protobuf TickAccumulatorTrackersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest}
 */
export declare const decodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest;
/**
 * A decoded protobuf TickAccumulatorTrackers message
 *
 * Tuple where:
 *   - 0: spread_reward_growth_opposite_direction_of_last_traversal -
 *   - 1: uptime_trackers -
 */
export type DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse = [
    a_spread_reward_growth_opposite_direction_of_last_traversal?: DecodedCosmosBaseDecCoin[],
    a_uptime_trackers?: DecodedOsmosisConcentratedliquidityUptimeTracker[]
];
/**
 * Decodes a protobuf TickAccumulatorTrackers message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse}
 */
export declare const decodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse;
/**
 * A decoded protobuf IncentiveRecordsRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: pagination -
 */
export type DecodedOsmosisConcentratedliquidityIncentiveRecordsRequest = [
    sg_pool_id?: CwUint64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf IncentiveRecordsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityIncentiveRecordsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityIncentiveRecordsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityIncentiveRecordsRequest;
/**
 * A decoded protobuf IncentiveRecords message
 *
 * Tuple where:
 *   - 0: incentive_records -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedOsmosisConcentratedliquidityIncentiveRecordsResponse = [
    a_incentive_records?: DecodedOsmosisConcentratedliquidityIncentiveRecord[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf IncentiveRecords message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityIncentiveRecordsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityIncentiveRecordsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityIncentiveRecordsResponse;
/**
 * A decoded protobuf CFMMPoolIdLinkFromConcentratedPoolIdRequest message
 *
 * Alias for: concentrated_pool_id -
 */
export type DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = [
    sg_concentrated_pool_id?: CwUint64
];
/**
 * Decodes a protobuf CFMMPoolIdLinkFromConcentratedPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest}
 */
export declare const decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest;
/**
 * A decoded protobuf CFMMPoolIdLinkFromConcentratedPoolId message
 *
 * Alias for: cfmm_pool_id -
 */
export type DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = [
    sg_cfmm_pool_id?: CwUint64
];
/**
 * Decodes a protobuf CFMMPoolIdLinkFromConcentratedPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse}
 */
export declare const decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse;
/**
 * A decoded protobuf UserUnbondingPositionsRequest message
 *
 * Alias for: address -
 */
export type DecodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf UserUnbondingPositionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest}
 */
export declare const decodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest;
/**
 * A decoded protobuf UserUnbondingPositions message
 *
 * Alias for: positions_with_period_lock -
 */
export type DecodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse = [
    a_positions_with_period_lock?: DecodedOsmosisConcentratedliquidityPositionWithPeriodLock[]
];
/**
 * Decodes a protobuf UserUnbondingPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse;
/**
 * A decoded protobuf GetTotalLiquidityRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisConcentratedliquidityGetTotalLiquidityRequest = [];
/**
 * Decodes a protobuf GetTotalLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityGetTotalLiquidityRequest}
 */
export declare const decodeOsmosisConcentratedliquidityGetTotalLiquidityRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf GetTotalLiquidity message
 *
 * Alias for: total_liquidity -
 */
export type DecodedOsmosisConcentratedliquidityGetTotalLiquidityResponse = [
    a_total_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf GetTotalLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityGetTotalLiquidityResponse}
 */
export declare const decodeOsmosisConcentratedliquidityGetTotalLiquidityResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityGetTotalLiquidityResponse;
/**
 * A decoded protobuf NumNextInitializedTicksRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: token_in_denom -
 *   - 2: num_next_initialized_ticks -
 */
export type DecodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest = [
    sg_pool_id?: CwUint64,
    s_token_in_denom?: string,
    sg_num_next_initialized_ticks?: CwUint64
];
/**
 * Decodes a protobuf NumNextInitializedTicksRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest}
 */
export declare const decodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest;
/**
 * A decoded protobuf NumNextInitializedTicks message
 *
 * Tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 */
export type DecodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse = [
    a_liquidity_depths?: DecodedOsmosisConcentratedliquidityTickLiquidityNet[],
    sg_current_tick?: CwInt64,
    s_current_liquidity?: string
];
/**
 * Decodes a protobuf NumNextInitializedTicks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse}
 */
export declare const decodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse;
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserPositionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 *   - 1: pool_id -
 *   - 2: pagination -
 */
export declare const destructOsmosisConcentratedliquidityUserPositionsRequest: (g_struct: OsmosisConcentratedliquidityUserPositionsRequest) => [address?: CwAccountAddr, pool_id?: CwUint64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_POSITIONS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.UserPositionsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.UserPositionsRequest` - =============================== UserPositions
 */
export type OsmosisConcentratedliquidityUserPositionsRequest = {
    address?: CwAccountAddr | undefined;
    pool_id?: CwUint64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: positions -
 *   - 1: pagination -
 */
export declare const destructOsmosisConcentratedliquidityUserPositionsResponse: (g_struct: OsmosisConcentratedliquidityUserPositionsResponse) => [positions?: OsmosisConcentratedliquidityFullPositionBreakdown[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_POSITIONS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.UserPositionsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.UserPositionsResponse` -
 */
export type OsmosisConcentratedliquidityUserPositionsResponse = {
    positions?: OsmosisConcentratedliquidityFullPositionBreakdown[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPositionByIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export declare const destructOsmosisConcentratedliquidityPositionByIdRequest: (g_struct: OsmosisConcentratedliquidityPositionByIdRequest) => [position_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POSITION_BY_ID_REQUEST = "/osmosis.concentratedliquidity.v1beta1.PositionByIdRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PositionByIdRequest` - =============================== PositionById
 */
export type OsmosisConcentratedliquidityPositionByIdRequest = {
    position_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPositionByIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position -
 */
export declare const destructOsmosisConcentratedliquidityPositionByIdResponse: (g_struct: OsmosisConcentratedliquidityPositionByIdResponse) => [position?: OsmosisConcentratedliquidityFullPositionBreakdown];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POSITION_BY_ID_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.PositionByIdResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PositionByIdResponse` -
 */
export type OsmosisConcentratedliquidityPositionByIdResponse = {
    position?: OsmosisConcentratedliquidityFullPositionBreakdown | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructOsmosisConcentratedliquidityPoolsRequest: (g_struct: OsmosisConcentratedliquidityPoolsRequest) => [EMPTY?: void, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.PoolsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolsRequest` - =============================== Pools
 */
export type OsmosisConcentratedliquidityPoolsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructOsmosisConcentratedliquidityPoolsResponse: (g_struct: OsmosisConcentratedliquidityPoolsResponse) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.PoolsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolsResponse` -
 */
export type OsmosisConcentratedliquidityPoolsResponse = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisConcentratedliquidityParamsRequest: (g_struct: OsmosisConcentratedliquidityParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_PARAMS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.ParamsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ParamsRequest` - =============================== ModuleParams
 */
export type OsmosisConcentratedliquidityParamsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisConcentratedliquidityParamsResponse: (g_struct: OsmosisConcentratedliquidityParamsResponse) => [params?: OsmosisConcentratedliquidityParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_PARAMS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.ParamsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ParamsResponse` -
 */
export type OsmosisConcentratedliquidityParamsResponse = {
    params?: OsmosisConcentratedliquidityParams | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickLiquidityNet} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_net -
 *   - 1: tick_index -
 */
export declare const destructOsmosisConcentratedliquidityTickLiquidityNet: (g_struct: OsmosisConcentratedliquidityTickLiquidityNet) => [liquidity_net?: string, tick_index?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_LIQUIDITY_NET = "/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.TickLiquidityNet` -
 */
export type OsmosisConcentratedliquidityTickLiquidityNet = {
    liquidity_net?: string | undefined;
    tick_index?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityDepthWithRange} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_amount -
 *   - 1: lower_tick -
 *   - 2: upper_tick -
 */
export declare const destructOsmosisConcentratedliquidityLiquidityDepthWithRange: (g_struct: OsmosisConcentratedliquidityLiquidityDepthWithRange) => [liquidity_amount?: string, lower_tick?: CwInt64, upper_tick?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_DEPTH_WITH_RANGE = "/osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange` -
 */
export type OsmosisConcentratedliquidityLiquidityDepthWithRange = {
    liquidity_amount?: string | undefined;
    lower_tick?: CwInt64 | undefined;
    upper_tick?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityNetInDirectionRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: start_tick -
 *   - 3: use_cur_tick -
 *   - 4: bound_tick -
 *   - 5: use_no_bound -
 */
export declare const destructOsmosisConcentratedliquidityLiquidityNetInDirectionRequest: (g_struct: OsmosisConcentratedliquidityLiquidityNetInDirectionRequest) => [pool_id?: CwUint64, token_in?: string, start_tick?: CwInt64, use_cur_tick?: boolean, bound_tick?: CwInt64, use_no_bound?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_NET_IN_DIRECTION_REQUEST = "/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest` - =============================== LiquidityNetInDirection
 */
export type OsmosisConcentratedliquidityLiquidityNetInDirectionRequest = {
    pool_id?: CwUint64 | undefined;
    token_in?: string | undefined;
    start_tick?: CwInt64 | undefined;
    use_cur_tick?: boolean | undefined;
    bound_tick?: CwInt64 | undefined;
    use_no_bound?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityNetInDirectionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 *   - 3: current_sqrt_price -
 */
export declare const destructOsmosisConcentratedliquidityLiquidityNetInDirectionResponse: (g_struct: OsmosisConcentratedliquidityLiquidityNetInDirectionResponse) => [liquidity_depths?: OsmosisConcentratedliquidityTickLiquidityNet[], current_tick?: CwInt64, current_liquidity?: string, current_sqrt_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_NET_IN_DIRECTION_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse` -
 */
export type OsmosisConcentratedliquidityLiquidityNetInDirectionResponse = {
    liquidity_depths?: OsmosisConcentratedliquidityTickLiquidityNet[] | undefined;
    current_tick?: CwInt64 | undefined;
    current_liquidity?: string | undefined;
    current_sqrt_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityPerTickRangeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisConcentratedliquidityLiquidityPerTickRangeRequest: (g_struct: OsmosisConcentratedliquidityLiquidityPerTickRangeRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_PER_TICK_RANGE_REQUEST = "/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest` - =============================== LiquidityPerTickRange
 */
export type OsmosisConcentratedliquidityLiquidityPerTickRangeRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityPerTickRangeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export declare const destructOsmosisConcentratedliquidityLiquidityPerTickRangeResponse: (g_struct: OsmosisConcentratedliquidityLiquidityPerTickRangeResponse) => [liquidity?: OsmosisConcentratedliquidityLiquidityDepthWithRange[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_PER_TICK_RANGE_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse` -
 */
export type OsmosisConcentratedliquidityLiquidityPerTickRangeResponse = {
    liquidity?: OsmosisConcentratedliquidityLiquidityDepthWithRange[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableSpreadRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export declare const destructOsmosisConcentratedliquidityClaimableSpreadRewardsRequest: (g_struct: OsmosisConcentratedliquidityClaimableSpreadRewardsRequest) => [position_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_SPREAD_REWARDS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest` - ===================== QueryClaimableSpreadRewards
 */
export type OsmosisConcentratedliquidityClaimableSpreadRewardsRequest = {
    position_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableSpreadRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: claimable_spread_rewards -
 */
export declare const destructOsmosisConcentratedliquidityClaimableSpreadRewardsResponse: (g_struct: OsmosisConcentratedliquidityClaimableSpreadRewardsResponse) => [claimable_spread_rewards?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_SPREAD_REWARDS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse` -
 */
export type OsmosisConcentratedliquidityClaimableSpreadRewardsResponse = {
    claimable_spread_rewards?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableIncentivesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export declare const destructOsmosisConcentratedliquidityClaimableIncentivesRequest: (g_struct: OsmosisConcentratedliquidityClaimableIncentivesRequest) => [position_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_INCENTIVES_REQUEST = "/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest` - ===================== QueryClaimableIncentives
 */
export type OsmosisConcentratedliquidityClaimableIncentivesRequest = {
    position_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableIncentivesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: claimable_incentives -
 *   - 1: forfeited_incentives -
 */
export declare const destructOsmosisConcentratedliquidityClaimableIncentivesResponse: (g_struct: OsmosisConcentratedliquidityClaimableIncentivesResponse) => [claimable_incentives?: CosmosBaseCoin[], forfeited_incentives?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_INCENTIVES_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse` -
 */
export type OsmosisConcentratedliquidityClaimableIncentivesResponse = {
    claimable_incentives?: CosmosBaseCoin[] | undefined;
    forfeited_incentives?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolAccumulatorRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest: (g_struct: OsmosisConcentratedliquidityPoolAccumulatorRewardsRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_ACCUMULATOR_REWARDS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest` - ===================== QueryPoolAccumulatorRewards
 */
export type OsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolAccumulatorRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spread_reward_growth_global -
 *   - 1: uptime_growth_global -
 */
export declare const destructOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse: (g_struct: OsmosisConcentratedliquidityPoolAccumulatorRewardsResponse) => [spread_reward_growth_global?: CosmosBaseDecCoin[], uptime_growth_global?: OsmosisConcentratedliquidityUptimeTracker[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_ACCUMULATOR_REWARDS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse` -
 */
export type OsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = {
    spread_reward_growth_global?: CosmosBaseDecCoin[] | undefined;
    uptime_growth_global?: OsmosisConcentratedliquidityUptimeTracker[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickAccumulatorTrackersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tick_index -
 */
export declare const destructOsmosisConcentratedliquidityTickAccumulatorTrackersRequest: (g_struct: OsmosisConcentratedliquidityTickAccumulatorTrackersRequest) => [pool_id?: CwUint64, tick_index?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_ACCUMULATOR_TRACKERS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest` - ===================== QueryTickAccumulatorTrackers
 */
export type OsmosisConcentratedliquidityTickAccumulatorTrackersRequest = {
    pool_id?: CwUint64 | undefined;
    tick_index?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickAccumulatorTrackersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spread_reward_growth_opposite_direction_of_last_traversal -
 *   - 1: uptime_trackers -
 */
export declare const destructOsmosisConcentratedliquidityTickAccumulatorTrackersResponse: (g_struct: OsmosisConcentratedliquidityTickAccumulatorTrackersResponse) => [spread_reward_growth_opposite_direction_of_last_traversal?: CosmosBaseDecCoin[], uptime_trackers?: OsmosisConcentratedliquidityUptimeTracker[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_ACCUMULATOR_TRACKERS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse` -
 */
export type OsmosisConcentratedliquidityTickAccumulatorTrackersResponse = {
    spread_reward_growth_opposite_direction_of_last_traversal?: CosmosBaseDecCoin[] | undefined;
    uptime_trackers?: OsmosisConcentratedliquidityUptimeTracker[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityIncentiveRecordsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: pagination -
 */
export declare const destructOsmosisConcentratedliquidityIncentiveRecordsRequest: (g_struct: OsmosisConcentratedliquidityIncentiveRecordsRequest) => [pool_id?: CwUint64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_INCENTIVE_RECORDS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest` - ===================== QueryIncentiveRecords
 */
export type OsmosisConcentratedliquidityIncentiveRecordsRequest = {
    pool_id?: CwUint64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityIncentiveRecordsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: incentive_records -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructOsmosisConcentratedliquidityIncentiveRecordsResponse: (g_struct: OsmosisConcentratedliquidityIncentiveRecordsResponse) => [incentive_records?: OsmosisConcentratedliquidityIncentiveRecord[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_INCENTIVE_RECORDS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse` -
 */
export type OsmosisConcentratedliquidityIncentiveRecordsResponse = {
    incentive_records?: OsmosisConcentratedliquidityIncentiveRecord[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: concentrated_pool_id -
 */
export declare const destructOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest: (g_struct: OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest) => [concentrated_pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_C_F_M_M_POOL_ID_LINK_FROM_CONCENTRATED_POOL_ID_REQUEST = "/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest` - =============================== CFMMPoolIdLinkFromConcentratedPoolId
 */
export type OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = {
    concentrated_pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cfmm_pool_id -
 */
export declare const destructOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse: (g_struct: OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse) => [cfmm_pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_C_F_M_M_POOL_ID_LINK_FROM_CONCENTRATED_POOL_ID_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse` -
 */
export type OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = {
    cfmm_pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserUnbondingPositionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export declare const destructOsmosisConcentratedliquidityUserUnbondingPositionsRequest: (g_struct: OsmosisConcentratedliquidityUserUnbondingPositionsRequest) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_UNBONDING_POSITIONS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest` - =============================== UserUnbondingPositions
 */
export type OsmosisConcentratedliquidityUserUnbondingPositionsRequest = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserUnbondingPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: positions_with_period_lock -
 */
export declare const destructOsmosisConcentratedliquidityUserUnbondingPositionsResponse: (g_struct: OsmosisConcentratedliquidityUserUnbondingPositionsResponse) => [positions_with_period_lock?: OsmosisConcentratedliquidityPositionWithPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_UNBONDING_POSITIONS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse` -
 */
export type OsmosisConcentratedliquidityUserUnbondingPositionsResponse = {
    positions_with_period_lock?: OsmosisConcentratedliquidityPositionWithPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityGetTotalLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisConcentratedliquidityGetTotalLiquidityRequest: (g_struct: OsmosisConcentratedliquidityGetTotalLiquidityRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_GET_TOTAL_LIQUIDITY_REQUEST = "/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest` - =============================== GetTotalLiquidity
 */
export type OsmosisConcentratedliquidityGetTotalLiquidityRequest = {};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityGetTotalLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_liquidity -
 */
export declare const destructOsmosisConcentratedliquidityGetTotalLiquidityResponse: (g_struct: OsmosisConcentratedliquidityGetTotalLiquidityResponse) => [total_liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_GET_TOTAL_LIQUIDITY_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse` -
 */
export type OsmosisConcentratedliquidityGetTotalLiquidityResponse = {
    total_liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityNumNextInitializedTicksRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in_denom -
 *   - 2: num_next_initialized_ticks -
 */
export declare const destructOsmosisConcentratedliquidityNumNextInitializedTicksRequest: (g_struct: OsmosisConcentratedliquidityNumNextInitializedTicksRequest) => [pool_id?: CwUint64, token_in_denom?: string, num_next_initialized_ticks?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_NUM_NEXT_INITIALIZED_TICKS_REQUEST = "/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest` - =============================== NumNextInitializedTicks
 */
export type OsmosisConcentratedliquidityNumNextInitializedTicksRequest = {
    pool_id?: CwUint64 | undefined;
    token_in_denom?: string | undefined;
    num_next_initialized_ticks?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityNumNextInitializedTicksResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 */
export declare const destructOsmosisConcentratedliquidityNumNextInitializedTicksResponse: (g_struct: OsmosisConcentratedliquidityNumNextInitializedTicksResponse) => [liquidity_depths?: OsmosisConcentratedliquidityTickLiquidityNet[], current_tick?: CwInt64, current_liquidity?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_NUM_NEXT_INITIALIZED_TICKS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse` -
 */
export type OsmosisConcentratedliquidityNumNextInitializedTicksResponse = {
    liquidity_depths?: OsmosisConcentratedliquidityTickLiquidityNet[] | undefined;
    current_tick?: CwInt64 | undefined;
    current_liquidity?: string | undefined;
};
