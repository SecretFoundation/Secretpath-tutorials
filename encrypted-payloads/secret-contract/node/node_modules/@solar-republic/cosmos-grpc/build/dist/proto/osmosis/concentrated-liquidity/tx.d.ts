import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, SlimCoin, CwInt64, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
import type { CosmosBaseCoin } from '../../cosmos/base/v1beta1/coin.js';
export type EncodedOsmosisConcentratedliquidityMsgCreatePosition = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition'>;
export type EncodedOsmosisConcentratedliquidityMsgCreatePositionResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgAddToPosition = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgAddToPosition'>;
export type EncodedOsmosisConcentratedliquidityMsgAddToPositionResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgAddToPositionResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgWithdrawPosition = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition'>;
export type EncodedOsmosisConcentratedliquidityMsgWithdrawPositionResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgCollectSpreadRewards = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewards'>;
export type EncodedOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewardsResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgCollectIncentives = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives'>;
export type EncodedOsmosisConcentratedliquidityMsgCollectIncentivesResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgFungifyChargedPositions = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions'>;
export type EncodedOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse'>;
export type EncodedOsmosisConcentratedliquidityMsgTransferPositions = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgTransferPositions'>;
export type EncodedOsmosisConcentratedliquidityMsgTransferPositionsResponse = Encoded<'/osmosis.concentratedliquidity.v1beta1.MsgTransferPositionsResponse'>;
/**
 * Encodes a `MsgCreatePosition` protobuf message: ===================== MsgCreatePosition
 * @param sg_pool_id - `pool_id`:
 * @param sa_sender - `sender`:
 * @param sg_lower_tick - `lower_tick`:
 * @param sg_upper_tick - `upper_tick`:
 * @param a_tokens_provideds - `tokens_provided`: the amount of tokens provided for the position. It must at a minimum be of length 1 (for a single sided position) and at a maximum be of length 2 (for a position that straddles the current tick).
 * @param s_token_min_amount0 - `token_min_amount0`:
 * @param s_token_min_amount1 - `token_min_amount1`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCreatePosition: (sg_pool_id?: Opt<WeakUint64Str>, sa_sender?: Opt<WeakAccountAddr>, sg_lower_tick?: Opt<WeakInt64Str>, sg_upper_tick?: Opt<WeakInt64Str>, a_tokens_provideds?: Opt<SlimCoin[]>, s_token_min_amount0?: Opt<string>, s_token_min_amount1?: Opt<string>) => EncodedOsmosisConcentratedliquidityMsgCreatePosition;
/**
 * Encodes a `MsgCreatePositionResponse` protobuf message:
 * @param sg_position_id - `position_id`:
 * @param s_amount0 - `amount0`:
 * @param s_amount1 - `amount1`:
 * @param s_liquidity_created - `liquidity_created`:
 * @param sg_lower_tick - `lower_tick`: the lower and upper tick are in the response because there are instances in which multiple ticks represent the same price, so we may move their provided tick to the canonical tick that represents the same price.
 * @param sg_upper_tick - `upper_tick`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCreatePositionResponse: (sg_position_id?: Opt<WeakUint64Str>, s_amount0?: Opt<string>, s_amount1?: Opt<string>, s_liquidity_created?: Opt<string>, sg_lower_tick?: Opt<WeakInt64Str>, sg_upper_tick?: Opt<WeakInt64Str>) => EncodedOsmosisConcentratedliquidityMsgCreatePositionResponse;
/**
 * Encodes a `MsgAddToPosition` protobuf message: ===================== MsgAddToPosition
 * @param sg_position_id - `position_id`:
 * @param sa_sender - `sender`:
 * @param s_amount0 - `amount0`: represents the amount of token0 willing to put in.
 * @param s_amount1 - `amount1`: represents the amount of token1 willing to put in.
 * @param s_token_min_amount0 - `token_min_amount0`: represents the minimum amount of token0 desired from the new position being created. Note that this field indicates the min amount0 corresponding to the liquidity that is being added, not the total liquidity of the position.
 * @param s_token_min_amount1 - `token_min_amount1`: represents the minimum amount of token1 desired from the new position being created. Note that this field indicates the min amount1 corresponding to the liquidity that is being added, not the total liquidity of the position.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgAddToPosition: (sg_position_id?: Opt<WeakUint64Str>, sa_sender?: Opt<WeakAccountAddr>, s_amount0?: Opt<string>, s_amount1?: Opt<string>, s_token_min_amount0?: Opt<string>, s_token_min_amount1?: Opt<string>) => EncodedOsmosisConcentratedliquidityMsgAddToPosition;
/**
 * Encodes a `MsgAddToPositionResponse` protobuf message:
 * @param sg_position_id - `position_id`:
 * @param s_amount0 - `amount0`:
 * @param s_amount1 - `amount1`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgAddToPositionResponse: (sg_position_id?: Opt<WeakUint64Str>, s_amount0?: Opt<string>, s_amount1?: Opt<string>) => EncodedOsmosisConcentratedliquidityMsgAddToPositionResponse;
/**
 * Encodes a `MsgWithdrawPosition` protobuf message: ===================== MsgWithdrawPosition
 * @param sg_position_id - `position_id`:
 * @param sa_sender - `sender`:
 * @param s_liquidity_amount - `liquidity_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgWithdrawPosition: (sg_position_id?: Opt<WeakUint64Str>, sa_sender?: Opt<WeakAccountAddr>, s_liquidity_amount?: Opt<string>) => EncodedOsmosisConcentratedliquidityMsgWithdrawPosition;
/**
 * Encodes a `MsgWithdrawPositionResponse` protobuf message:
 * @param s_amount0 - `amount0`:
 * @param s_amount1 - `amount1`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgWithdrawPositionResponse: (s_amount0?: Opt<string>, s_amount1?: Opt<string>) => EncodedOsmosisConcentratedliquidityMsgWithdrawPositionResponse;
/**
 * Encodes a `MsgCollectSpreadRewards` protobuf message: ===================== MsgCollectSpreadRewards
 * @param a_position_ids - `position_ids`:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCollectSpreadRewards: (a_position_ids?: Opt<WeakUint64Str[]>, sa_sender?: Opt<WeakAccountAddr>) => EncodedOsmosisConcentratedliquidityMsgCollectSpreadRewards;
/**
 * Encodes a `MsgCollectSpreadRewardsResponse` protobuf message:
 * @param a_collected_spread_rewards - `collected_spread_rewards`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse: (a_collected_spread_rewards?: Opt<SlimCoin[]>) => EncodedOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse;
/**
 * Encodes a `MsgCollectIncentives` protobuf message: ===================== MsgCollectIncentives
 * @param a_position_ids - `position_ids`:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCollectIncentives: (a_position_ids?: Opt<WeakUint64Str[]>, sa_sender?: Opt<WeakAccountAddr>) => EncodedOsmosisConcentratedliquidityMsgCollectIncentives;
/**
 * Encodes a `MsgCollectIncentivesResponse` protobuf message:
 * @param a_collected_incentives - `collected_incentives`:
 * @param a_forfeited_incentives - `forfeited_incentives`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgCollectIncentivesResponse: (a_collected_incentives?: Opt<SlimCoin[]>, a_forfeited_incentives?: Opt<SlimCoin[]>) => EncodedOsmosisConcentratedliquidityMsgCollectIncentivesResponse;
/**
 * Encodes a `MsgFungifyChargedPositions` protobuf message: ===================== MsgFungifyChargedPositions
 * @param a_position_ids - `position_ids`:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgFungifyChargedPositions: (a_position_ids?: Opt<WeakUint64Str[]>, sa_sender?: Opt<WeakAccountAddr>) => EncodedOsmosisConcentratedliquidityMsgFungifyChargedPositions;
/**
 * Encodes a `MsgFungifyChargedPositionsResponse` protobuf message:
 * @param sg_new_position_id - `new_position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse: (sg_new_position_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse;
/**
 * Encodes a `MsgTransferPositions` protobuf message: ===================== MsgTransferPositions
 * @param a_position_ids - `position_ids`:
 * @param sa_sender - `sender`:
 * @param sa_new_owner - `new_owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgTransferPositions: (a_position_ids?: Opt<WeakUint64Str[]>, sa_sender?: Opt<WeakAccountAddr>, sa_new_owner?: Opt<WeakAccountAddr>) => EncodedOsmosisConcentratedliquidityMsgTransferPositions;
/**
 * Encodes a `MsgTransferPositionsResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityMsgTransferPositionsResponse: () => EncodedOsmosisConcentratedliquidityMsgTransferPositionsResponse;
/**
 * A decoded protobuf CreatePosition message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: sender -
 *   - 2: lower_tick -
 *   - 3: upper_tick -
 *   - 4: tokens_provided - the amount of tokens provided for the position. It must at a minimum be of length 1 (for a single sided position) and at a maximum be of length 2 (for a position that straddles the current tick).
 *   - 5: token_min_amount0 -
 *   - 6: token_min_amount1 -
 */
export type DecodedOsmosisConcentratedliquidityMsgCreatePosition = [
    sg_pool_id?: CwUint64,
    sa_sender?: CwAccountAddr,
    sg_lower_tick?: CwInt64,
    sg_upper_tick?: CwInt64,
    a_tokens_provided?: [
        string,
        string
    ][],
    s_token_min_amount0?: string,
    s_token_min_amount1?: string
];
/**
 * Decodes a protobuf CreatePosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCreatePosition}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCreatePosition: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgCreatePosition;
/**
 * A decoded protobuf CreatePosition message
 *
 * Tuple where:
 *   - 0: position_id -
 *   - 1: amount0 -
 *   - 2: amount1 -
 *   - 4: liquidity_created -
 *   - 5: lower_tick - the lower and upper tick are in the response because there are instances in which multiple ticks represent the same price, so we may move their provided tick to the canonical tick that represents the same price.
 *   - 6: upper_tick -
 */
export type DecodedOsmosisConcentratedliquidityMsgCreatePositionResponse = [
    sg_position_id?: CwUint64,
    s_amount0?: string,
    s_amount1?: string,
    w_0?: undefined,
    s_liquidity_created?: string,
    sg_lower_tick?: CwInt64,
    sg_upper_tick?: CwInt64
];
/**
 * Decodes a protobuf CreatePosition message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCreatePositionResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCreatePositionResponse: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisConcentratedliquidityMsgCreatePositionResponse;
/**
 * A decoded protobuf AddToPosition message
 *
 * Tuple where:
 *   - 0: position_id -
 *   - 1: sender -
 *   - 2: amount0 - represents the amount of token0 willing to put in.
 *   - 3: amount1 - represents the amount of token1 willing to put in.
 *   - 4: token_min_amount0 - represents the minimum amount of token0 desired from the new position being created. Note that this field indicates the min amount0 corresponding to the liquidity that is being added, not the total liquidity of the position.
 *   - 5: token_min_amount1 - represents the minimum amount of token1 desired from the new position being created. Note that this field indicates the min amount1 corresponding to the liquidity that is being added, not the total liquidity of the position.
 */
export type DecodedOsmosisConcentratedliquidityMsgAddToPosition = [
    sg_position_id?: CwUint64,
    sa_sender?: CwAccountAddr,
    s_amount0?: string,
    s_amount1?: string,
    s_token_min_amount0?: string,
    s_token_min_amount1?: string
];
/**
 * Decodes a protobuf AddToPosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgAddToPosition}
 */
export declare const decodeOsmosisConcentratedliquidityMsgAddToPosition: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgAddToPosition;
/**
 * A decoded protobuf AddToPosition message
 *
 * Tuple where:
 *   - 0: position_id -
 *   - 1: amount0 -
 *   - 2: amount1 -
 */
export type DecodedOsmosisConcentratedliquidityMsgAddToPositionResponse = [
    sg_position_id?: CwUint64,
    s_amount0?: string,
    s_amount1?: string
];
/**
 * Decodes a protobuf AddToPosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgAddToPositionResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgAddToPositionResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgAddToPositionResponse;
/**
 * A decoded protobuf WithdrawPosition message
 *
 * Tuple where:
 *   - 0: position_id -
 *   - 1: sender -
 *   - 2: liquidity_amount -
 */
export type DecodedOsmosisConcentratedliquidityMsgWithdrawPosition = [
    sg_position_id?: CwUint64,
    sa_sender?: CwAccountAddr,
    s_liquidity_amount?: string
];
/**
 * Decodes a protobuf WithdrawPosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgWithdrawPosition}
 */
export declare const decodeOsmosisConcentratedliquidityMsgWithdrawPosition: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgWithdrawPosition;
/**
 * A decoded protobuf WithdrawPosition message
 *
 * Tuple where:
 *   - 0: amount0 -
 *   - 1: amount1 -
 */
export type DecodedOsmosisConcentratedliquidityMsgWithdrawPositionResponse = [
    s_amount0?: string,
    s_amount1?: string
];
/**
 * Decodes a protobuf WithdrawPosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgWithdrawPositionResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgWithdrawPositionResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgWithdrawPositionResponse;
/**
 * A decoded protobuf CollectSpreadRewards message
 *
 * Tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export type DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewards = [
    a_position_ids?: CwUint64[],
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf CollectSpreadRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewards}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCollectSpreadRewards: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewards;
/**
 * A decoded protobuf CollectSpreadRewards message
 *
 * Alias for: collected_spread_rewards -
 */
export type DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse = [
    a_collected_spread_rewards?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf CollectSpreadRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse;
/**
 * A decoded protobuf CollectIncentives message
 *
 * Tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export type DecodedOsmosisConcentratedliquidityMsgCollectIncentives = [
    a_position_ids?: CwUint64[],
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf CollectIncentives message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCollectIncentives}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCollectIncentives: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgCollectIncentives;
/**
 * A decoded protobuf CollectIncentives message
 *
 * Tuple where:
 *   - 0: collected_incentives -
 *   - 1: forfeited_incentives -
 */
export type DecodedOsmosisConcentratedliquidityMsgCollectIncentivesResponse = [
    a_collected_incentives?: [
        string,
        string
    ][],
    a_forfeited_incentives?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf CollectIncentives message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgCollectIncentivesResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgCollectIncentivesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgCollectIncentivesResponse;
/**
 * A decoded protobuf FungifyChargedPositions message
 *
 * Tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export type DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositions = [
    a_position_ids?: CwUint64[],
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf FungifyChargedPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositions}
 */
export declare const decodeOsmosisConcentratedliquidityMsgFungifyChargedPositions: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositions;
/**
 * A decoded protobuf FungifyChargedPositions message
 *
 * Alias for: new_position_id -
 */
export type DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse = [
    sg_new_position_id?: CwUint64
];
/**
 * Decodes a protobuf FungifyChargedPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse;
/**
 * A decoded protobuf TransferPositions message
 *
 * Tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 *   - 2: new_owner -
 */
export type DecodedOsmosisConcentratedliquidityMsgTransferPositions = [
    a_position_ids?: CwUint64[],
    sa_sender?: CwAccountAddr,
    sa_new_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf TransferPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgTransferPositions}
 */
export declare const decodeOsmosisConcentratedliquidityMsgTransferPositions: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityMsgTransferPositions;
/**
 * A decoded protobuf TransferPositions message
 *
 * Tuple where:
 */
export type DecodedOsmosisConcentratedliquidityMsgTransferPositionsResponse = [];
/**
 * Decodes a protobuf TransferPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityMsgTransferPositionsResponse}
 */
export declare const decodeOsmosisConcentratedliquidityMsgTransferPositionsResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCreatePosition} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: sender -
 *   - 2: lower_tick -
 *   - 3: upper_tick -
 *   - 4: tokens_provided - the amount of tokens provided for the position. It must at a minimum be of length 1 (for a single sided position) and at a maximum be of length 2 (for a position that straddles the current tick).
 *   - 5: token_min_amount0 -
 *   - 6: token_min_amount1 -
 */
export declare const destructOsmosisConcentratedliquidityMsgCreatePosition: (g_struct: OsmosisConcentratedliquidityMsgCreatePosition) => [pool_id?: CwUint64, sender?: CwAccountAddr, lower_tick?: CwInt64, upper_tick?: CwInt64, tokens_provided?: CosmosBaseCoin[], token_min_amount0?: string, token_min_amount1?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_CREATE_POSITION = "/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCreatePosition` - ===================== MsgCreatePosition
 */
export type OsmosisConcentratedliquidityMsgCreatePosition = {
    pool_id?: CwUint64 | undefined;
    sender?: CwAccountAddr | undefined;
    lower_tick?: CwInt64 | undefined;
    upper_tick?: CwInt64 | undefined;
    tokens_provided?: CosmosBaseCoin[] | undefined;
    token_min_amount0?: string | undefined;
    token_min_amount1?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCreatePositionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 *   - 1: amount0 -
 *   - 2: amount1 -
 *   - 4: liquidity_created -
 *   - 5: lower_tick - the lower and upper tick are in the response because there are instances in which multiple ticks represent the same price, so we may move their provided tick to the canonical tick that represents the same price.
 *   - 6: upper_tick -
 */
export declare const destructOsmosisConcentratedliquidityMsgCreatePositionResponse: (g_struct: OsmosisConcentratedliquidityMsgCreatePositionResponse) => [position_id?: CwUint64, amount0?: string, amount1?: string, EMPTY?: void, liquidity_created?: string, lower_tick?: CwInt64, upper_tick?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_CREATE_POSITION_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse` -
 */
export type OsmosisConcentratedliquidityMsgCreatePositionResponse = {
    position_id?: CwUint64 | undefined;
    amount0?: string | undefined;
    amount1?: string | undefined;
    liquidity_created?: string | undefined;
    lower_tick?: CwInt64 | undefined;
    upper_tick?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgAddToPosition} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 *   - 1: sender -
 *   - 2: amount0 - represents the amount of token0 willing to put in.
 *   - 3: amount1 - represents the amount of token1 willing to put in.
 *   - 4: token_min_amount0 - represents the minimum amount of token0 desired from the new position being created. Note that this field indicates the min amount0 corresponding to the liquidity that is being added, not the total liquidity of the position.
 *   - 5: token_min_amount1 - represents the minimum amount of token1 desired from the new position being created. Note that this field indicates the min amount1 corresponding to the liquidity that is being added, not the total liquidity of the position.
 */
export declare const destructOsmosisConcentratedliquidityMsgAddToPosition: (g_struct: OsmosisConcentratedliquidityMsgAddToPosition) => [position_id?: CwUint64, sender?: CwAccountAddr, amount0?: string, amount1?: string, token_min_amount0?: string, token_min_amount1?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_ADD_TO_POSITION = "/osmosis.concentratedliquidity.v1beta1.MsgAddToPosition";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgAddToPosition` - ===================== MsgAddToPosition
 */
export type OsmosisConcentratedliquidityMsgAddToPosition = {
    position_id?: CwUint64 | undefined;
    sender?: CwAccountAddr | undefined;
    amount0?: string | undefined;
    amount1?: string | undefined;
    token_min_amount0?: string | undefined;
    token_min_amount1?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgAddToPositionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 *   - 1: amount0 -
 *   - 2: amount1 -
 */
export declare const destructOsmosisConcentratedliquidityMsgAddToPositionResponse: (g_struct: OsmosisConcentratedliquidityMsgAddToPositionResponse) => [position_id?: CwUint64, amount0?: string, amount1?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_ADD_TO_POSITION_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgAddToPositionResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgAddToPositionResponse` -
 */
export type OsmosisConcentratedliquidityMsgAddToPositionResponse = {
    position_id?: CwUint64 | undefined;
    amount0?: string | undefined;
    amount1?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgWithdrawPosition} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 *   - 1: sender -
 *   - 2: liquidity_amount -
 */
export declare const destructOsmosisConcentratedliquidityMsgWithdrawPosition: (g_struct: OsmosisConcentratedliquidityMsgWithdrawPosition) => [position_id?: CwUint64, sender?: CwAccountAddr, liquidity_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_WITHDRAW_POSITION = "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition` - ===================== MsgWithdrawPosition
 */
export type OsmosisConcentratedliquidityMsgWithdrawPosition = {
    position_id?: CwUint64 | undefined;
    sender?: CwAccountAddr | undefined;
    liquidity_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgWithdrawPositionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount0 -
 *   - 1: amount1 -
 */
export declare const destructOsmosisConcentratedliquidityMsgWithdrawPositionResponse: (g_struct: OsmosisConcentratedliquidityMsgWithdrawPositionResponse) => [amount0?: string, amount1?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_WITHDRAW_POSITION_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse` -
 */
export type OsmosisConcentratedliquidityMsgWithdrawPositionResponse = {
    amount0?: string | undefined;
    amount1?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCollectSpreadRewards} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export declare const destructOsmosisConcentratedliquidityMsgCollectSpreadRewards: (g_struct: OsmosisConcentratedliquidityMsgCollectSpreadRewards) => [position_ids?: CwUint64[], sender?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_COLLECT_SPREAD_REWARDS = "/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewards";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewards` - ===================== MsgCollectSpreadRewards
 */
export type OsmosisConcentratedliquidityMsgCollectSpreadRewards = {
    position_ids?: CwUint64[] | undefined;
    sender?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: collected_spread_rewards -
 */
export declare const destructOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse: (g_struct: OsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse) => [collected_spread_rewards?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_COLLECT_SPREAD_REWARDS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewardsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewardsResponse` -
 */
export type OsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse = {
    collected_spread_rewards?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCollectIncentives} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export declare const destructOsmosisConcentratedliquidityMsgCollectIncentives: (g_struct: OsmosisConcentratedliquidityMsgCollectIncentives) => [position_ids?: CwUint64[], sender?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_COLLECT_INCENTIVES = "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives` - ===================== MsgCollectIncentives
 */
export type OsmosisConcentratedliquidityMsgCollectIncentives = {
    position_ids?: CwUint64[] | undefined;
    sender?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgCollectIncentivesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: collected_incentives -
 *   - 1: forfeited_incentives -
 */
export declare const destructOsmosisConcentratedliquidityMsgCollectIncentivesResponse: (g_struct: OsmosisConcentratedliquidityMsgCollectIncentivesResponse) => [collected_incentives?: CosmosBaseCoin[], forfeited_incentives?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_COLLECT_INCENTIVES_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse` -
 */
export type OsmosisConcentratedliquidityMsgCollectIncentivesResponse = {
    collected_incentives?: CosmosBaseCoin[] | undefined;
    forfeited_incentives?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgFungifyChargedPositions} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 */
export declare const destructOsmosisConcentratedliquidityMsgFungifyChargedPositions: (g_struct: OsmosisConcentratedliquidityMsgFungifyChargedPositions) => [position_ids?: CwUint64[], sender?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_FUNGIFY_CHARGED_POSITIONS = "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions` - ===================== MsgFungifyChargedPositions
 */
export type OsmosisConcentratedliquidityMsgFungifyChargedPositions = {
    position_ids?: CwUint64[] | undefined;
    sender?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: new_position_id -
 */
export declare const destructOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse: (g_struct: OsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse) => [new_position_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_FUNGIFY_CHARGED_POSITIONS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse` -
 */
export type OsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse = {
    new_position_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgTransferPositions} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_ids -
 *   - 1: sender -
 *   - 2: new_owner -
 */
export declare const destructOsmosisConcentratedliquidityMsgTransferPositions: (g_struct: OsmosisConcentratedliquidityMsgTransferPositions) => [position_ids?: CwUint64[], sender?: CwAccountAddr, new_owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_TRANSFER_POSITIONS = "/osmosis.concentratedliquidity.v1beta1.MsgTransferPositions";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgTransferPositions` - ===================== MsgTransferPositions
 */
export type OsmosisConcentratedliquidityMsgTransferPositions = {
    position_ids?: CwUint64[] | undefined;
    sender?: CwAccountAddr | undefined;
    new_owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityMsgTransferPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisConcentratedliquidityMsgTransferPositionsResponse: (g_struct: OsmosisConcentratedliquidityMsgTransferPositionsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_MSG_TRANSFER_POSITIONS_RESPONSE = "/osmosis.concentratedliquidity.v1beta1.MsgTransferPositionsResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.v1beta1.MsgTransferPositionsResponse` -
 */
export type OsmosisConcentratedliquidityMsgTransferPositionsResponse = {};
