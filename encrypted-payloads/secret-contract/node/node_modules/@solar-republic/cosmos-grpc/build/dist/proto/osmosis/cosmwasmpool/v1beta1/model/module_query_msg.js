import { decode_protobuf, decode_coin } from '../../../../../api/protobuf-reader.js';
import { Protobuf, coin } from '../../../../../api/protobuf-writer.js';
/**
 * Encodes a `CalcOutAmtGivenIn` protobuf message: ===================== CalcOutAmtGivenIn
 * @param a_token_in - `token_in`: the token to be sent to the pool.
 * @param s_token_out_denom - `token_out_denom`: the token denom to be received from the pool.
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcOutAmtGivenIn = (a_token_in, s_token_out_denom, s_swap_fee) => Protobuf() // ...
    .b(coin(a_token_in)) // Coin token_in = 1
    .s(s_token_out_denom) // string token_out_denom = 2
    .s(s_swap_fee) // string swap_fee = 3
    .o;
/**
 * Encodes a `CalcOutAmtGivenInRequest` protobuf message:
 * @param g_calc_out_amt_given_in - `calc_out_amt_given_in`: the structure containing all the request information for this query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest = (atu8_calc_out_amt_given_in) => Protobuf() // ...
    .b(atu8_calc_out_amt_given_in) // CalcOutAmtGivenIn calc_out_amt_given_in = 1
    .o;
/**
 * Encodes a `CalcOutAmtGivenInResponse` protobuf message:
 * @param a_token_out - `token_out`: the token out computed from this swap estimate call.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse = (a_token_out) => Protobuf() // ...
    .b(coin(a_token_out)) // Coin token_out = 1
    .o;
/**
 * Encodes a `CalcInAmtGivenOut` protobuf message: ===================== CalcInAmtGivenOut
 * @param a_token_out - `token_out`: the token out to be receoved from the pool.
 * @param s_token_in_denom - `token_in_denom`: the token denom to be sentt to the pool.
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcInAmtGivenOut = (a_token_out, s_token_in_denom, s_swap_fee) => Protobuf() // ...
    .b(coin(a_token_out)) // Coin token_out = 1
    .s(s_token_in_denom) // string token_in_denom = 2
    .s(s_swap_fee) // string swap_fee = 3
    .o;
/**
 * Encodes a `CalcInAmtGivenOutRequest` protobuf message:
 * @param g_calc_in_amt_given_out - `calc_in_amt_given_out`: the structure containing all the request information for this query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest = (atu8_calc_in_amt_given_out) => Protobuf() // ...
    .b(atu8_calc_in_amt_given_out) // CalcInAmtGivenOut calc_in_amt_given_out = 1
    .o;
/**
 * Encodes a `CalcInAmtGivenOutResponse` protobuf message:
 * @param a_token_in - `token_in`: the token in computed from this swap estimate call.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse = (a_token_in) => Protobuf() // ...
    .b(coin(a_token_in)) // Coin token_in = 1
    .o;
/**
 * Decodes a protobuf CalcOutAmtGivenIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenIn}
 */
export const decodeOsmosisCosmwasmpoolCalcOutAmtGivenIn = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5, 5], [decode_coin]);
/**
 * Decodes a protobuf CalcOutAmtGivenInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest}
 */
export const decodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolCalcOutAmtGivenIn]);
/**
 * Decodes a protobuf CalcOutAmtGivenIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse}
 */
export const decodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decode_coin]);
/**
 * Decodes a protobuf CalcInAmtGivenOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOut}
 */
export const decodeOsmosisCosmwasmpoolCalcInAmtGivenOut = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5, 5], [decode_coin]);
/**
 * Decodes a protobuf CalcInAmtGivenOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest}
 */
export const decodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolCalcInAmtGivenOut]);
/**
 * Decodes a protobuf CalcInAmtGivenOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse}
 */
export const decodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decode_coin]);
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenIn} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in - the token to be sent to the pool.
 *   - 1: token_out_denom - the token denom to be received from the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export const destructOsmosisCosmwasmpoolCalcOutAmtGivenIn = (g_struct) => [g_struct.token_in, g_struct.token_out_denom, g_struct.swap_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN = '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: calc_out_amt_given_in - the structure containing all the request information for this query.
 */
export const destructOsmosisCosmwasmpoolCalcOutAmtGivenInRequest = (g_struct) => [g_struct.calc_out_amt_given_in];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN_REQUEST = '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out - the token out computed from this swap estimate call.
 */
export const destructOsmosisCosmwasmpoolCalcOutAmtGivenInResponse = (g_struct) => [g_struct.token_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOut} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out - the token out to be receoved from the pool.
 *   - 1: token_in_denom - the token denom to be sentt to the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export const destructOsmosisCosmwasmpoolCalcInAmtGivenOut = (g_struct) => [g_struct.token_out, g_struct.token_in_denom, g_struct.swap_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT = '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: calc_in_amt_given_out - the structure containing all the request information for this query.
 */
export const destructOsmosisCosmwasmpoolCalcInAmtGivenOutRequest = (g_struct) => [g_struct.calc_in_amt_given_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT_REQUEST = '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in - the token in computed from this swap estimate call.
 */
export const destructOsmosisCosmwasmpoolCalcInAmtGivenOutResponse = (g_struct) => [g_struct.token_in];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse';
//# sourceMappingURL=module_query_msg.js.map