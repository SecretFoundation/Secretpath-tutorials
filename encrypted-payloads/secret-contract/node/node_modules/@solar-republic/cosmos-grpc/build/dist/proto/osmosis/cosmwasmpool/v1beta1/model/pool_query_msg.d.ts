import type { SlimCoin } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../../cosmos/base/v1beta1/coin.js';
export type EncodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg'>;
export type EncodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse'>;
export type EncodedOsmosisCosmwasmpoolSpotPrice = Encoded<'/osmosis.cosmwasmpool.v1beta1.SpotPrice'>;
export type EncodedOsmosisCosmwasmpoolSpotPriceQueryMsg = Encoded<'/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg'>;
export type EncodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse'>;
export type EncodedOsmosisCosmwasmpoolEmptyStruct = Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyStruct'>;
export type EncodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg'>;
export type EncodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse'>;
export type EncodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg'>;
export type EncodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse'>;
/**
 * Encodes a `GetSwapFeeQueryMsg` protobuf message: ===================== GetSwapFeeQueryMsg
 * @param g_get_swap_fee - `get_swap_fee`: the query strcuture to get swap fee.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg: (atu8_get_swap_fee?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyStruct'>>) => EncodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg;
/**
 * Encodes a `GetSwapFeeQueryMsgResponse` protobuf message:
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse: (s_swap_fee?: Opt<string>) => EncodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse;
/**
 * Encodes a `SpotPrice` protobuf message: ===================== SpotPriceQueryMsg
 * @param s_quote_asset_denom - `quote_asset_denom`: the quote asset of the spot query.
 * @param s_base_asset_denom - `base_asset_denom`: the base asset of the spot query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolSpotPrice: (s_quote_asset_denom?: Opt<string>, s_base_asset_denom?: Opt<string>) => EncodedOsmosisCosmwasmpoolSpotPrice;
/**
 * Encodes a `SpotPriceQueryMsg` protobuf message:
 * @param g_spot_price - `spot_price`: the structure containing request field of the spot price query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolSpotPriceQueryMsg: (atu8_spot_price?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.SpotPrice'>>) => EncodedOsmosisCosmwasmpoolSpotPriceQueryMsg;
/**
 * Encodes a `SpotPriceQueryMsgResponse` protobuf message:
 * @param s_spot_price - `spot_price`: the spot price returned.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse: (s_spot_price?: Opt<string>) => EncodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse;
/**
 * Encodes a `EmptyStruct` protobuf message: ===================== GetTotalPoolLiquidityQueryMsg
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolEmptyStruct: () => EncodedOsmosisCosmwasmpoolEmptyStruct;
/**
 * Encodes a `GetTotalPoolLiquidityQueryMsg` protobuf message:
 * @param g_get_total_pool_liquidity - `get_total_pool_liquidity`: the structure containing request field of the total pool liquidity query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg: (atu8_get_total_pool_liquidity?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyStruct'>>) => EncodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg;
/**
 * Encodes a `GetTotalPoolLiquidityQueryMsgResponse` protobuf message:
 * @param a_total_pool_liquiditys - `total_pool_liquidity`: the total liquidity in the pool denominated in coins.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse: (a_total_pool_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse;
/**
 * Encodes a `GetTotalSharesQueryMsg` protobuf message: ===================== GetTotalSharesQueryMsg
 * @param g_get_total_shares - `get_total_shares`: the structure containing request field of the total shares query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg: (atu8_get_total_shares?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyStruct'>>) => EncodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg;
/**
 * Encodes a `GetTotalSharesQueryMsgResponse` protobuf message:
 * @param s_total_shares - `total_shares`: the amount of shares returned.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse: (s_total_shares?: Opt<string>) => EncodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse;
/**
 * A decoded protobuf GetSwapFeeQueryMsg message
 *
 * Alias for: get_swap_fee - the query strcuture to get swap fee.
 */
export type DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg = [
    a_get_swap_fee?: DecodedOsmosisCosmwasmpoolEmptyStruct
];
/**
 * Decodes a protobuf GetSwapFeeQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg}
 */
export declare const decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg;
/**
 * A decoded protobuf GetSwapFeeQueryMsg message
 *
 * Alias for: swap_fee - the swap fee for this swap estimate.
 */
export type DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = [
    w_0?: undefined,
    w_1?: undefined,
    s_swap_fee?: string
];
/**
 * Decodes a protobuf GetSwapFeeQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse;
/**
 * A decoded protobuf SpotPrice message
 *
 * Tuple where:
 *   - 0: quote_asset_denom - the quote asset of the spot query.
 *   - 1: base_asset_denom - the base asset of the spot query.
 */
export type DecodedOsmosisCosmwasmpoolSpotPrice = [
    s_quote_asset_denom?: string,
    s_base_asset_denom?: string
];
/**
 * Decodes a protobuf SpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPrice}
 */
export declare const decodeOsmosisCosmwasmpoolSpotPrice: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolSpotPrice;
/**
 * A decoded protobuf SpotPriceQueryMsg message
 *
 * Alias for: spot_price - the structure containing request field of the spot price query message.
 */
export type DecodedOsmosisCosmwasmpoolSpotPriceQueryMsg = [
    a_spot_price?: DecodedOsmosisCosmwasmpoolSpotPrice
];
/**
 * Decodes a protobuf SpotPriceQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPriceQueryMsg}
 */
export declare const decodeOsmosisCosmwasmpoolSpotPriceQueryMsg: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolSpotPriceQueryMsg;
/**
 * A decoded protobuf SpotPriceQueryMsg message
 *
 * Alias for: spot_price - the spot price returned.
 */
export type DecodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse = [
    s_spot_price?: string
];
/**
 * Decodes a protobuf SpotPriceQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse;
/**
 * A decoded protobuf EmptyStruct message
 *
 * Tuple where:
 */
export type DecodedOsmosisCosmwasmpoolEmptyStruct = [];
/**
 * Decodes a protobuf EmptyStruct message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolEmptyStruct}
 */
export declare const decodeOsmosisCosmwasmpoolEmptyStruct: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf GetTotalPoolLiquidityQueryMsg message
 *
 * Alias for: get_total_pool_liquidity - the structure containing request field of the total pool liquidity query message.
 */
export type DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = [
    a_get_total_pool_liquidity?: DecodedOsmosisCosmwasmpoolEmptyStruct
];
/**
 * Decodes a protobuf GetTotalPoolLiquidityQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg}
 */
export declare const decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg;
/**
 * A decoded protobuf GetTotalPoolLiquidityQueryMsg message
 *
 * Alias for: total_pool_liquidity - the total liquidity in the pool denominated in coins.
 */
export type DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = [
    a_total_pool_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf GetTotalPoolLiquidityQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse;
/**
 * A decoded protobuf GetTotalSharesQueryMsg message
 *
 * Alias for: get_total_shares - the structure containing request field of the total shares query message.
 */
export type DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg = [
    a_get_total_shares?: DecodedOsmosisCosmwasmpoolEmptyStruct
];
/**
 * Decodes a protobuf GetTotalSharesQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg}
 */
export declare const decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg;
/**
 * A decoded protobuf GetTotalSharesQueryMsg message
 *
 * Alias for: total_shares - the amount of shares returned.
 */
export type DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = [
    s_total_shares?: string
];
/**
 * Decodes a protobuf GetTotalSharesQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse;
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetSwapFeeQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_swap_fee - the query strcuture to get swap fee.
 */
export declare const destructOsmosisCosmwasmpoolGetSwapFeeQueryMsg: (g_struct: OsmosisCosmwasmpoolGetSwapFeeQueryMsg) => [get_swap_fee?: OsmosisCosmwasmpoolEmptyStruct];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_SWAP_FEE_QUERY_MSG = "/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg` - ===================== GetSwapFeeQueryMsg
 */
export type OsmosisCosmwasmpoolGetSwapFeeQueryMsg = {
    get_swap_fee?: OsmosisCosmwasmpoolEmptyStruct | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolEmptyStruct} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisCosmwasmpoolEmptyStruct: (g_struct: OsmosisCosmwasmpoolEmptyStruct) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_EMPTY_STRUCT = "/osmosis.cosmwasmpool.v1beta1.EmptyStruct";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.EmptyStruct` - ===================== GetTotalPoolLiquidityQueryMsg
 */
export type OsmosisCosmwasmpoolEmptyStruct = {};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export declare const destructOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse: (g_struct: OsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse) => [EMPTY?: void, EMPTY?: void, swap_fee?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_SWAP_FEE_QUERY_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse` -
 */
export type OsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = {
    swap_fee?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPrice} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: quote_asset_denom - the quote asset of the spot query.
 *   - 1: base_asset_denom - the base asset of the spot query.
 */
export declare const destructOsmosisCosmwasmpoolSpotPrice: (g_struct: OsmosisCosmwasmpoolSpotPrice) => [quote_asset_denom?: string, base_asset_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE = "/osmosis.cosmwasmpool.v1beta1.SpotPrice";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.SpotPrice` - ===================== SpotPriceQueryMsg
 */
export type OsmosisCosmwasmpoolSpotPrice = {
    quote_asset_denom?: string | undefined;
    base_asset_denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPriceQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - the structure containing request field of the spot price query message.
 */
export declare const destructOsmosisCosmwasmpoolSpotPriceQueryMsg: (g_struct: OsmosisCosmwasmpoolSpotPriceQueryMsg) => [spot_price?: OsmosisCosmwasmpoolSpotPrice];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE_QUERY_MSG = "/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg` -
 */
export type OsmosisCosmwasmpoolSpotPriceQueryMsg = {
    spot_price?: OsmosisCosmwasmpoolSpotPrice | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPriceQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - the spot price returned.
 */
export declare const destructOsmosisCosmwasmpoolSpotPriceQueryMsgResponse: (g_struct: OsmosisCosmwasmpoolSpotPriceQueryMsgResponse) => [spot_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE_QUERY_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse` -
 */
export type OsmosisCosmwasmpoolSpotPriceQueryMsgResponse = {
    spot_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_total_pool_liquidity - the structure containing request field of the total pool liquidity query message.
 */
export declare const destructOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg: (g_struct: OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg) => [get_total_pool_liquidity?: OsmosisCosmwasmpoolEmptyStruct];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_POOL_LIQUIDITY_QUERY_MSG = "/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg` -
 */
export type OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = {
    get_total_pool_liquidity?: OsmosisCosmwasmpoolEmptyStruct | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_pool_liquidity - the total liquidity in the pool denominated in coins.
 */
export declare const destructOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse: (g_struct: OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse) => [total_pool_liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_POOL_LIQUIDITY_QUERY_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse` -
 */
export type OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = {
    total_pool_liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalSharesQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_total_shares - the structure containing request field of the total shares query message.
 */
export declare const destructOsmosisCosmwasmpoolGetTotalSharesQueryMsg: (g_struct: OsmosisCosmwasmpoolGetTotalSharesQueryMsg) => [get_total_shares?: OsmosisCosmwasmpoolEmptyStruct];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_SHARES_QUERY_MSG = "/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg` - ===================== GetTotalSharesQueryMsg
 */
export type OsmosisCosmwasmpoolGetTotalSharesQueryMsg = {
    get_total_shares?: OsmosisCosmwasmpoolEmptyStruct | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_shares - the amount of shares returned.
 */
export declare const destructOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse: (g_struct: OsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse) => [total_shares?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_SHARES_QUERY_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse` -
 */
export type OsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = {
    total_shares?: string | undefined;
};
