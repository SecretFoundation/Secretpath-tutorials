import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf, decode_coin } from '../../../../../api/protobuf-reader.js';
import { Protobuf, coins } from '../../../../../api/protobuf-writer.js';
/**
 * Encodes a `GetSwapFeeQueryMsg` protobuf message: ===================== GetSwapFeeQueryMsg
 * @param g_get_swap_fee - `get_swap_fee`: the query strcuture to get swap fee.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg = (atu8_get_swap_fee) => Protobuf() // ...
    .b(atu8_get_swap_fee) // EmptyStruct get_swap_fee = 1
    .o;
/**
 * Encodes a `GetSwapFeeQueryMsgResponse` protobuf message:
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = (s_swap_fee) => Protobuf() // ...
    .s(s_swap_fee, 3) // string swap_fee = 3
    .o;
/**
 * Encodes a `SpotPrice` protobuf message: ===================== SpotPriceQueryMsg
 * @param s_quote_asset_denom - `quote_asset_denom`: the quote asset of the spot query.
 * @param s_base_asset_denom - `base_asset_denom`: the base asset of the spot query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolSpotPrice = (s_quote_asset_denom, s_base_asset_denom) => Protobuf() // ...
    .s(s_quote_asset_denom) // string quote_asset_denom = 1
    .s(s_base_asset_denom) // string base_asset_denom = 2
    .o;
/**
 * Encodes a `SpotPriceQueryMsg` protobuf message:
 * @param g_spot_price - `spot_price`: the structure containing request field of the spot price query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolSpotPriceQueryMsg = (atu8_spot_price) => Protobuf() // ...
    .b(atu8_spot_price) // SpotPrice spot_price = 1
    .o;
/**
 * Encodes a `SpotPriceQueryMsgResponse` protobuf message:
 * @param s_spot_price - `spot_price`: the spot price returned.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse = (s_spot_price) => Protobuf() // ...
    .s(s_spot_price) // string spot_price = 1
    .o;
/**
 * Encodes a `EmptyStruct` protobuf message: ===================== GetTotalPoolLiquidityQueryMsg
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolEmptyStruct = () => Protobuf() // ...
    .o;
/**
 * Encodes a `GetTotalPoolLiquidityQueryMsg` protobuf message:
 * @param g_get_total_pool_liquidity - `get_total_pool_liquidity`: the structure containing request field of the total pool liquidity query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = (atu8_get_total_pool_liquidity) => Protobuf() // ...
    .b(atu8_get_total_pool_liquidity) // EmptyStruct get_total_pool_liquidity = 1
    .o;
/**
 * Encodes a `GetTotalPoolLiquidityQueryMsgResponse` protobuf message:
 * @param a_total_pool_liquiditys - `total_pool_liquidity`: the total liquidity in the pool denominated in coins.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = (a_total_pool_liquiditys) => Protobuf() // ...
    .B(coins(a_total_pool_liquiditys)) // Coin[] total_pool_liquidity = 1
    .o;
/**
 * Encodes a `GetTotalSharesQueryMsg` protobuf message: ===================== GetTotalSharesQueryMsg
 * @param g_get_total_shares - `get_total_shares`: the structure containing request field of the total shares query message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg = (atu8_get_total_shares) => Protobuf() // ...
    .b(atu8_get_total_shares) // EmptyStruct get_total_shares = 1
    .o;
/**
 * Encodes a `GetTotalSharesQueryMsgResponse` protobuf message:
 * @param s_total_shares - `total_shares`: the amount of shares returned.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = (s_total_shares) => Protobuf() // ...
    .s(s_total_shares) // string total_shares = 1
    .o;
/**
 * Decodes a protobuf GetSwapFeeQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsg}
 */
export const decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolEmptyStruct]);
/**
 * Decodes a protobuf GetSwapFeeQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse}
 */
export const decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = ((atu8_payload, [, , s_swap_fee] = decode_protobuf(atu8_payload, [0, 0, 5])) => [__UNDEFINED, __UNDEFINED, s_swap_fee]);
/**
 * Decodes a protobuf SpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPrice}
 */
export const decodeOsmosisCosmwasmpoolSpotPrice = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf SpotPriceQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPriceQueryMsg}
 */
export const decodeOsmosisCosmwasmpoolSpotPriceQueryMsg = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolSpotPrice]);
/**
 * Decodes a protobuf SpotPriceQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolSpotPriceQueryMsgResponse}
 */
export const decodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf EmptyStruct message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolEmptyStruct}
 */
export const decodeOsmosisCosmwasmpoolEmptyStruct = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf GetTotalPoolLiquidityQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg}
 */
export const decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolEmptyStruct]);
/**
 * Decodes a protobuf GetTotalPoolLiquidityQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse}
 */
export const decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf GetTotalSharesQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsg}
 */
export const decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolEmptyStruct]);
/**
 * Decodes a protobuf GetTotalSharesQueryMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse}
 */
export const decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetSwapFeeQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_swap_fee - the query strcuture to get swap fee.
 */
export const destructOsmosisCosmwasmpoolGetSwapFeeQueryMsg = (g_struct) => [g_struct.get_swap_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_SWAP_FEE_QUERY_MSG = '/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolEmptyStruct} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisCosmwasmpoolEmptyStruct = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_EMPTY_STRUCT = '/osmosis.cosmwasmpool.v1beta1.EmptyStruct';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export const destructOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse = (g_struct) => [__UNDEFINED, __UNDEFINED, g_struct.swap_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_SWAP_FEE_QUERY_MSG_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPrice} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: quote_asset_denom - the quote asset of the spot query.
 *   - 1: base_asset_denom - the base asset of the spot query.
 */
export const destructOsmosisCosmwasmpoolSpotPrice = (g_struct) => [g_struct.quote_asset_denom, g_struct.base_asset_denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE = '/osmosis.cosmwasmpool.v1beta1.SpotPrice';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPriceQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - the structure containing request field of the spot price query message.
 */
export const destructOsmosisCosmwasmpoolSpotPriceQueryMsg = (g_struct) => [g_struct.spot_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE_QUERY_MSG = '/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolSpotPriceQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - the spot price returned.
 */
export const destructOsmosisCosmwasmpoolSpotPriceQueryMsgResponse = (g_struct) => [g_struct.spot_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_SPOT_PRICE_QUERY_MSG_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_total_pool_liquidity - the structure containing request field of the total pool liquidity query message.
 */
export const destructOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg = (g_struct) => [g_struct.get_total_pool_liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_POOL_LIQUIDITY_QUERY_MSG = '/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_pool_liquidity - the total liquidity in the pool denominated in coins.
 */
export const destructOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse = (g_struct) => [g_struct.total_pool_liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_POOL_LIQUIDITY_QUERY_MSG_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalSharesQueryMsg} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: get_total_shares - the structure containing request field of the total shares query message.
 */
export const destructOsmosisCosmwasmpoolGetTotalSharesQueryMsg = (g_struct) => [g_struct.get_total_shares];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_SHARES_QUERY_MSG = '/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_shares - the amount of shares returned.
 */
export const destructOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse = (g_struct) => [g_struct.total_shares];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_GET_TOTAL_SHARES_QUERY_MSG_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse';
//# sourceMappingURL=pool_query_msg.js.map