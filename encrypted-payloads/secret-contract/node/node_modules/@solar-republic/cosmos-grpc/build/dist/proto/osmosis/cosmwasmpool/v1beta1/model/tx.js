import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
/**
 * Encodes a `MsgCreateCosmWasmPool` protobuf message: ===================== MsgCreateCosmwasmPool
 * @param sg_code_id - `code_id`:
 * @param atu8_instantiate_msg - `instantiate_msg`:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolMsgCreateCosmWasmPool = (sg_code_id, atu8_instantiate_msg, sa_sender) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .b(atu8_instantiate_msg) // bytes instantiate_msg = 2
    .s(sa_sender) // string sender = 3
    .o;
/**
 * Encodes a `MsgCreateCosmWasmPoolResponse` protobuf message: Returns a unique poolID to identify the pool with.
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Decodes a protobuf CreateCosmWasmPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolMsgCreateCosmWasmPool}
 */
export const decodeOsmosisCosmwasmpoolMsgCreateCosmWasmPool = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1, 5]);
/**
 * Decodes a protobuf CreateCosmWasmPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse}
 */
export const decodeOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolMsgCreateCosmWasmPool} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: instantiate_msg -
 *   - 2: sender -
 */
export const destructOsmosisCosmwasmpoolMsgCreateCosmWasmPool = (g_struct) => [g_struct.code_id, safe_base64_to_bytes(g_struct.instantiate_msg), g_struct.sender];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_MSG_CREATE_COSM_WASM_POOL = '/osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPool';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_MSG_CREATE_COSM_WASM_POOL_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPoolResponse';
//# sourceMappingURL=tx.js.map