/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { OsmosisConcentratedliquidityPool } from '../../concentrated-liquidity/pool.js';
import type { OsmosisCosmwasmpoolCosmWasmPool } from './model/pool.js';
import type { OsmosisCosmwasmpoolParams, DecodedOsmosisCosmwasmpoolParams } from './params.js';
import type { OsmosisGammPool } from '../../gamm/pool-models/balancer/balancerPool.js';
import type { OsmosisGammPoolmodelsStableswapPool } from '../../gamm/pool-models/stableswap/stableswap_pool.js';
export type EncodedOsmosisCosmwasmpoolParamsRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.ParamsRequest'>;
export type EncodedOsmosisCosmwasmpoolParamsResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.ParamsResponse'>;
export type EncodedOsmosisCosmwasmpoolPoolsRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.PoolsRequest'>;
export type EncodedOsmosisCosmwasmpoolPoolsResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.PoolsResponse'>;
export type EncodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest'>;
export type EncodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse'>;
/**
 * Returns all cosmwasm pools
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export declare const queryOsmosisCosmwasmpoolPools: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisCosmwasmpoolPoolsResponse>>;
/**
 * Returns the parameters of the x/cosmwasmpool module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryOsmosisCosmwasmpoolParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisCosmwasmpoolParamsResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id - the pool id of the requested pool.
 * @returns a tuple where:
 *   - 0: contract_address - the pool address and contract address of the requested pool id.
 *   - 1: code_id - the pool address and contract address of the requested pool id.
 */
export declare const queryOsmosisCosmwasmpoolContractInfoByPoolId: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisCosmwasmpoolContractInfoByPoolIdResponse>>;
/**
 * Encodes a `ParamsRequest` protobuf message: =============================== ContractInfoByPoolId
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolParamsRequest: () => EncodedOsmosisCosmwasmpoolParamsRequest;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolParamsResponse: (atu8_params?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.Params'>>) => EncodedOsmosisCosmwasmpoolParamsResponse;
/**
 * Encodes a `PoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolPoolsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisCosmwasmpoolPoolsRequest;
/**
 * Encodes a `PoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolPoolsResponse: (a_pools?: Opt<Encoded<'PoolI'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisCosmwasmpoolPoolsResponse;
/**
 * Encodes a `ContractInfoByPoolIdRequest` protobuf message: =============================== ContractInfoByPoolId
 * @param sg_pool_id - `pool_id`: the pool id of the requested pool.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest;
/**
 * Encodes a `ContractInfoByPoolIdResponse` protobuf message:
 * @param sa_contract - `contract_address`: the pool address and contract address of the requested pool id.
 * @param sg_code_id - `code_id`: the code id of the requested pool id.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse: (sa_contract?: Opt<WeakAccountAddr>, sg_code_id?: Opt<WeakUint64Str>) => EncodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse;
/**
 * A decoded protobuf ParamsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisCosmwasmpoolParamsRequest = [];
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolParamsRequest}
 */
export declare const decodeOsmosisCosmwasmpoolParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Params message
 *
 * Alias for: params -
 */
export type DecodedOsmosisCosmwasmpoolParamsResponse = [
    a_params?: DecodedOsmosisCosmwasmpoolParams
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolParamsResponse}
 */
export declare const decodeOsmosisCosmwasmpoolParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolParamsResponse;
/**
 * A decoded protobuf PoolsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedOsmosisCosmwasmpoolPoolsRequest = [
    w_0?: undefined,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf PoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisCosmwasmpoolPoolsRequest}
 */
export declare const decodeOsmosisCosmwasmpoolPoolsRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisCosmwasmpoolPoolsRequest;
/**
 * A decoded protobuf Pools message
 *
 * Tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedOsmosisCosmwasmpoolPoolsResponse = [
    a_pools?: DecodedGoogleProtobufAny[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf Pools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolPoolsResponse}
 */
export declare const decodeOsmosisCosmwasmpoolPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolPoolsResponse;
/**
 * A decoded protobuf ContractInfoByPoolIdRequest message
 *
 * Alias for: pool_id - the pool id of the requested pool.
 */
export type DecodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf ContractInfoByPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest}
 */
export declare const decodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest;
/**
 * A decoded protobuf ContractInfoByPoolId message
 *
 * Tuple where:
 *   - 0: contract_address - the pool address and contract address of the requested pool id.
 *   - 1: code_id - the code id of the requested pool id.
 */
export type DecodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse = [
    sa_contract?: CwAccountAddr,
    sg_code_id?: CwUint64
];
/**
 * Decodes a protobuf ContractInfoByPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse}
 */
export declare const decodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse;
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisCosmwasmpoolParamsRequest: (g_struct: OsmosisCosmwasmpoolParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_PARAMS_REQUEST = "/osmosis.cosmwasmpool.v1beta1.ParamsRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ParamsRequest` - =============================== ContractInfoByPoolId
 */
export type OsmosisCosmwasmpoolParamsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisCosmwasmpoolParamsResponse: (g_struct: OsmosisCosmwasmpoolParamsResponse) => [params?: OsmosisCosmwasmpoolParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_PARAMS_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.ParamsResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ParamsResponse` -
 */
export type OsmosisCosmwasmpoolParamsResponse = {
    params?: OsmosisCosmwasmpoolParams | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructOsmosisCosmwasmpoolPoolsRequest: (g_struct: OsmosisCosmwasmpoolPoolsRequest) => [EMPTY?: void, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_POOLS_REQUEST = "/osmosis.cosmwasmpool.v1beta1.PoolsRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.PoolsRequest` - =============================== Pools
 */
export type OsmosisCosmwasmpoolPoolsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructOsmosisCosmwasmpoolPoolsResponse: (g_struct: OsmosisCosmwasmpoolPoolsResponse) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_POOLS_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.PoolsResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.PoolsResponse` -
 */
export type OsmosisCosmwasmpoolPoolsResponse = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolContractInfoByPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id - the pool id of the requested pool.
 */
export declare const destructOsmosisCosmwasmpoolContractInfoByPoolIdRequest: (g_struct: OsmosisCosmwasmpoolContractInfoByPoolIdRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CONTRACT_INFO_BY_POOL_ID_REQUEST = "/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest` - =============================== ContractInfoByPoolId
 */
export type OsmosisCosmwasmpoolContractInfoByPoolIdRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolContractInfoByPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - the pool address and contract address of the requested pool id.
 *   - 1: code_id - the code id of the requested pool id.
 */
export declare const destructOsmosisCosmwasmpoolContractInfoByPoolIdResponse: (g_struct: OsmosisCosmwasmpoolContractInfoByPoolIdResponse) => [contract_address?: CwAccountAddr, code_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CONTRACT_INFO_BY_POOL_ID_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse` -
 */
export type OsmosisCosmwasmpoolContractInfoByPoolIdResponse = {
    contract_address?: CwAccountAddr | undefined;
    code_id?: CwUint64 | undefined;
};
