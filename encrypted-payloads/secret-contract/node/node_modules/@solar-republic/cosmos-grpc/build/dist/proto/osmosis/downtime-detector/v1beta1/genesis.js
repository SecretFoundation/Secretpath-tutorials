/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { parse_timestamp } from '../../../../api/json.js';
import { decode_protobuf, decode_temporal } from '../../../../api/protobuf-reader.js';
import { Protobuf, temporal } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `GenesisDowntimeEntry` protobuf message:
 * @param xc_duration - `duration`:
 * @param xt_last_downtime - `last_downtime`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisDowntimedetectorGenesisDowntimeEntry = (xc_duration, xt_last_downtime) => Protobuf() // ...
    .v(xc_duration) // Downtime duration = 1
    .b(temporal(xt_last_downtime)) // Timestamp last_downtime = 2
    .o;
/**
 * Encodes a `GenesisState` protobuf message: defines the twap module's genesis state.
 * @param a_downtimes - `downtimes`:
 * @param xt_last_block_time - `last_block_time`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisDowntimedetectorGenesisState = (a_downtimes, xt_last_block_time) => Protobuf() // ...
    .B(a_downtimes) // GenesisDowntimeEntry[] downtimes = 1
    .b(temporal(xt_last_block_time)) // Timestamp last_block_time = 2
    .o;
/**
 * Decodes a protobuf GenesisDowntimeEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorGenesisDowntimeEntry}
 */
export const decodeOsmosisDowntimedetectorGenesisDowntimeEntry = (atu8_payload) => decode_protobuf(atu8_payload, [1, [3, 1]], [0, decode_temporal]);
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorGenesisState}
 */
export const decodeOsmosisDowntimedetectorGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [0, [3, 1]], [decodeOsmosisDowntimedetectorGenesisDowntimeEntry, decode_temporal]);
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorGenesisDowntimeEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: duration -
 *   - 1: last_downtime -
 */
export const destructOsmosisDowntimedetectorGenesisDowntimeEntry = (g_struct) => [g_struct.duration, parse_timestamp(g_struct.last_downtime)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_GENESIS_DOWNTIME_ENTRY = '/osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry';
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: downtimes -
 *   - 1: last_block_time -
 */
export const destructOsmosisDowntimedetectorGenesisState = (g_struct) => [g_struct.downtimes, parse_timestamp(g_struct.last_block_time)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_GENESIS_STATE = '/osmosis.downtimedetector.v1beta1.GenesisState';
//# sourceMappingURL=genesis.js.map