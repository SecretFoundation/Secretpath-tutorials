/// <reference types="node" />
import type { WeakInt64Str, CwInt64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
import type { OsmosisEpochsEpochInfo, DecodedOsmosisEpochsEpochInfo } from './genesis.js';
export type EncodedOsmosisEpochsQueryEpochsInfoRequest = Encoded<'/osmosis.epochs.v1beta1.QueryEpochsInfoRequest'>;
export type EncodedOsmosisEpochsQueryEpochsInfoResponse = Encoded<'/osmosis.epochs.v1beta1.QueryEpochsInfoResponse'>;
export type EncodedOsmosisEpochsQueryCurrentEpochRequest = Encoded<'/osmosis.epochs.v1beta1.QueryCurrentEpochRequest'>;
export type EncodedOsmosisEpochsQueryCurrentEpochResponse = Encoded<'/osmosis.epochs.v1beta1.QueryCurrentEpochResponse'>;
/**
 * Provide running epochInfos
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: epochs - the 'epochs' response property
 */
export declare const queryOsmosisEpochsEpochInfos: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisEpochsQueryEpochsInfoResponse>>;
/**
 * Provide current epoch of specified identifier
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_identifier -
 * @returns a tuple where:
 *   - 0: current_epoch - the 'current_epoch' response property
 */
export declare const queryOsmosisEpochsCurrentEpoch: (z_req: string | ({
    origin: string;
} & RequestInit), s_identifier?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisEpochsQueryCurrentEpochResponse>>;
/**
 * Encodes a `QueryEpochsInfoRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisEpochsQueryEpochsInfoRequest: () => EncodedOsmosisEpochsQueryEpochsInfoRequest;
/**
 * Encodes a `QueryEpochsInfoResponse` protobuf message:
 * @param a_epochs - `epochs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisEpochsQueryEpochsInfoResponse: (a_epochs?: Opt<Encoded<'/osmosis.epochs.v1beta1.EpochInfo'>[]>) => EncodedOsmosisEpochsQueryEpochsInfoResponse;
/**
 * Encodes a `QueryCurrentEpochRequest` protobuf message:
 * @param s_identifier - `identifier`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisEpochsQueryCurrentEpochRequest: (s_identifier?: Opt<string>) => EncodedOsmosisEpochsQueryCurrentEpochRequest;
/**
 * Encodes a `QueryCurrentEpochResponse` protobuf message:
 * @param sg_current_epoch - `current_epoch`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisEpochsQueryCurrentEpochResponse: (sg_current_epoch?: Opt<WeakInt64Str>) => EncodedOsmosisEpochsQueryCurrentEpochResponse;
/**
 * A decoded protobuf QueryEpochsInfoRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisEpochsQueryEpochsInfoRequest = [];
/**
 * Decodes a protobuf QueryEpochsInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisEpochsQueryEpochsInfoRequest}
 */
export declare const decodeOsmosisEpochsQueryEpochsInfoRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryEpochsInfo message
 *
 * Alias for: epochs -
 */
export type DecodedOsmosisEpochsQueryEpochsInfoResponse = [
    a_epochs?: DecodedOsmosisEpochsEpochInfo[]
];
/**
 * Decodes a protobuf QueryEpochsInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisEpochsQueryEpochsInfoResponse}
 */
export declare const decodeOsmosisEpochsQueryEpochsInfoResponse: (atu8_payload: Uint8Array) => DecodedOsmosisEpochsQueryEpochsInfoResponse;
/**
 * A decoded protobuf QueryCurrentEpochRequest message
 *
 * Alias for: identifier -
 */
export type DecodedOsmosisEpochsQueryCurrentEpochRequest = [
    s_identifier?: string
];
/**
 * Decodes a protobuf QueryCurrentEpochRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisEpochsQueryCurrentEpochRequest}
 */
export declare const decodeOsmosisEpochsQueryCurrentEpochRequest: (atu8_payload: Uint8Array) => DecodedOsmosisEpochsQueryCurrentEpochRequest;
/**
 * A decoded protobuf QueryCurrentEpoch message
 *
 * Alias for: current_epoch -
 */
export type DecodedOsmosisEpochsQueryCurrentEpochResponse = [
    sg_current_epoch?: CwInt64
];
/**
 * Decodes a protobuf QueryCurrentEpoch message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisEpochsQueryCurrentEpochResponse}
 */
export declare const decodeOsmosisEpochsQueryCurrentEpochResponse: (atu8_payload: Uint8Array) => DecodedOsmosisEpochsQueryCurrentEpochResponse;
/**
 * Destructures the fields of a {@link OsmosisEpochsQueryEpochsInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisEpochsQueryEpochsInfoRequest: (g_struct: OsmosisEpochsQueryEpochsInfoRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_EPOCHS_QUERY_EPOCHS_INFO_REQUEST = "/osmosis.epochs.v1beta1.QueryEpochsInfoRequest";
/**
 * JSON serialization of `osmosis.epochs.v1beta1.QueryEpochsInfoRequest` -
 */
export type OsmosisEpochsQueryEpochsInfoRequest = {};
/**
 * Destructures the fields of a {@link OsmosisEpochsQueryEpochsInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: epochs -
 */
export declare const destructOsmosisEpochsQueryEpochsInfoResponse: (g_struct: OsmosisEpochsQueryEpochsInfoResponse) => [epochs?: OsmosisEpochsEpochInfo[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_EPOCHS_QUERY_EPOCHS_INFO_RESPONSE = "/osmosis.epochs.v1beta1.QueryEpochsInfoResponse";
/**
 * JSON serialization of `osmosis.epochs.v1beta1.QueryEpochsInfoResponse` -
 */
export type OsmosisEpochsQueryEpochsInfoResponse = {
    epochs?: OsmosisEpochsEpochInfo[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisEpochsQueryCurrentEpochRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: identifier -
 */
export declare const destructOsmosisEpochsQueryCurrentEpochRequest: (g_struct: OsmosisEpochsQueryCurrentEpochRequest) => [identifier?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_EPOCHS_QUERY_CURRENT_EPOCH_REQUEST = "/osmosis.epochs.v1beta1.QueryCurrentEpochRequest";
/**
 * JSON serialization of `osmosis.epochs.v1beta1.QueryCurrentEpochRequest` -
 */
export type OsmosisEpochsQueryCurrentEpochRequest = {
    identifier?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisEpochsQueryCurrentEpochResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: current_epoch -
 */
export declare const destructOsmosisEpochsQueryCurrentEpochResponse: (g_struct: OsmosisEpochsQueryCurrentEpochResponse) => [current_epoch?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_EPOCHS_QUERY_CURRENT_EPOCH_RESPONSE = "/osmosis.epochs.v1beta1.QueryCurrentEpochResponse";
/**
 * JSON serialization of `osmosis.epochs.v1beta1.QueryCurrentEpochResponse` -
 */
export type OsmosisEpochsQueryCurrentEpochResponse = {
    current_epoch?: CwInt64 | undefined;
};
