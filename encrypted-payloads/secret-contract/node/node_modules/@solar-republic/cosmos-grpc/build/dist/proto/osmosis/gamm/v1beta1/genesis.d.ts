import type { WeakUint64Str, SlimCoin, CwUint64 } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { OsmosisConcentratedliquidityPool } from '../../concentrated-liquidity/pool.js';
import type { OsmosisCosmwasmpoolCosmWasmPool } from '../../cosmwasmpool/v1beta1/model/pool.js';
import type { OsmosisGammPool } from '../pool-models/balancer/balancerPool.js';
import type { OsmosisGammPoolmodelsStableswapPool } from '../pool-models/stableswap/stableswap_pool.js';
import type { OsmosisGammMigrationRecords, DecodedOsmosisGammMigrationRecords } from './shared.js';
export type EncodedOsmosisGammParams = Encoded<'/osmosis.gamm.v1beta1.Params'>;
export type EncodedOsmosisGammGenesisState = Encoded<'/osmosis.gamm.v1beta1.GenesisState'>;
/**
 * Encodes a `Params` protobuf message: holds parameters for the incentives module
 * @param a_pool_creation_fees - `pool_creation_fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammParams: (a_pool_creation_fees?: Opt<SlimCoin[]>) => EncodedOsmosisGammParams;
/**
 * Encodes a `GenesisState` protobuf message: defines the gamm module's genesis state.
 * @param a_pools - `pools`:
 * @param sg_next_pool_number - `next_pool_number`: will be renamed to next_pool_id in an upcoming version
 * @param g_params - `params`:
 * @param g_migration_records - `migration_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammGenesisState: (a_pools?: Opt<Encoded<'PoolI'>[]>, sg_next_pool_number?: Opt<WeakUint64Str>, atu8_params?: Opt<Encoded<'/osmosis.gamm.v1beta1.Params'>>, atu8_migration_records?: Opt<Encoded<'/osmosis.gamm.v1beta1.MigrationRecords'>>) => EncodedOsmosisGammGenesisState;
/**
 * A decoded protobuf Params message
 *
 * Alias for: pool_creation_fee -
 */
export type DecodedOsmosisGammParams = [
    a_pool_creation_fee?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammParams}
 */
export declare const decodeOsmosisGammParams: (atu8_payload: Uint8Array) => DecodedOsmosisGammParams;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: pools -
 *   - 1: next_pool_number - will be renamed to next_pool_id in an upcoming version
 *   - 2: params -
 *   - 3: migration_records -
 */
export type DecodedOsmosisGammGenesisState = [
    a_pools?: DecodedGoogleProtobufAny[],
    sg_next_pool_number?: CwUint64,
    a_params?: DecodedOsmosisGammParams,
    a_migration_records?: DecodedOsmosisGammMigrationRecords
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammGenesisState}
 */
export declare const decodeOsmosisGammGenesisState: (atu8_payload: Uint8Array) => DecodedOsmosisGammGenesisState;
/**
 * Destructures the fields of a {@link OsmosisGammParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_creation_fee -
 */
export declare const destructOsmosisGammParams: (g_struct: OsmosisGammParams) => [pool_creation_fee?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_PARAMS = "/osmosis.gamm.v1beta1.Params";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.Params` - holds parameters for the incentives module
 */
export type OsmosisGammParams = {
    pool_creation_fee?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: next_pool_number - will be renamed to next_pool_id in an upcoming version
 *   - 2: params -
 *   - 3: migration_records -
 */
export declare const destructOsmosisGammGenesisState: (g_struct: OsmosisGammGenesisState) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[], next_pool_number?: CwUint64, params?: OsmosisGammParams, migration_records?: OsmosisGammMigrationRecords];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_GENESIS_STATE = "/osmosis.gamm.v1beta1.GenesisState";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.GenesisState` - defines the gamm module's genesis state.
 */
export type OsmosisGammGenesisState = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
    next_pool_number?: CwUint64 | undefined;
    params?: OsmosisGammParams | undefined;
    migration_records?: OsmosisGammMigrationRecords | undefined;
};
