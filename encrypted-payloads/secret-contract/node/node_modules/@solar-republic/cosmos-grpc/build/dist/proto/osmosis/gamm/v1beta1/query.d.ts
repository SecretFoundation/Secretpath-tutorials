/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, SlimCoin, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { OsmosisConcentratedliquidityPool } from '../../concentrated-liquidity/pool.js';
import type { OsmosisCosmwasmpoolCosmWasmPool } from '../../cosmwasmpool/v1beta1/model/pool.js';
import type { OsmosisGammPool } from '../pool-models/balancer/balancerPool.js';
import type { OsmosisGammPoolmodelsStableswapPool } from '../pool-models/stableswap/stableswap_pool.js';
import type { OsmosisGammMigrationRecords, DecodedOsmosisGammMigrationRecords } from './shared.js';
import type { OsmosisPoolmanagerSwapAmountInRoute, DecodedOsmosisPoolmanagerSwapAmountInRoute, OsmosisPoolmanagerSwapAmountOutRoute, DecodedOsmosisPoolmanagerSwapAmountOutRoute } from '../../poolmanager/v1beta1/swap_route.js';
export type EncodedOsmosisGammQueryPoolRequest = Encoded<'/osmosis.gamm.v1beta1.QueryPoolRequest'>;
export type EncodedOsmosisGammQueryPoolResponse = Encoded<'/osmosis.gamm.v1beta1.QueryPoolResponse'>;
export type EncodedOsmosisGammQueryPoolsRequest = Encoded<'/osmosis.gamm.v1beta1.QueryPoolsRequest'>;
export type EncodedOsmosisGammQueryPoolsResponse = Encoded<'/osmosis.gamm.v1beta1.QueryPoolsResponse'>;
export type EncodedOsmosisGammQueryNumPoolsRequest = Encoded<'/osmosis.gamm.v1beta1.QueryNumPoolsRequest'>;
export type EncodedOsmosisGammQueryNumPoolsResponse = Encoded<'/osmosis.gamm.v1beta1.QueryNumPoolsResponse'>;
export type EncodedOsmosisGammQueryPoolTypeRequest = Encoded<'/osmosis.gamm.v1beta1.QueryPoolTypeRequest'>;
export type EncodedOsmosisGammQueryPoolTypeResponse = Encoded<'/osmosis.gamm.v1beta1.QueryPoolTypeResponse'>;
export type EncodedOsmosisGammQueryCalcJoinPoolSharesRequest = Encoded<'/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest'>;
export type EncodedOsmosisGammQueryCalcJoinPoolSharesResponse = Encoded<'/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse'>;
export type EncodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = Encoded<'/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest'>;
export type EncodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = Encoded<'/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse'>;
export type EncodedOsmosisGammQueryPoolParamsRequest = Encoded<'/osmosis.gamm.v1beta1.QueryPoolParamsRequest'>;
export type EncodedOsmosisGammQueryPoolParamsResponse = Encoded<'/osmosis.gamm.v1beta1.QueryPoolParamsResponse'>;
export type EncodedOsmosisGammQueryTotalPoolLiquidityRequest = Encoded<'/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest'>;
export type EncodedOsmosisGammQueryTotalPoolLiquidityResponse = Encoded<'/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse'>;
export type EncodedOsmosisGammQueryTotalSharesRequest = Encoded<'/osmosis.gamm.v1beta1.QueryTotalSharesRequest'>;
export type EncodedOsmosisGammQueryTotalSharesResponse = Encoded<'/osmosis.gamm.v1beta1.QueryTotalSharesResponse'>;
export type EncodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = Encoded<'/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest'>;
export type EncodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = Encoded<'/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse'>;
export type EncodedOsmosisGammQuerySpotPriceRequest = Encoded<'/osmosis.gamm.v1beta1.QuerySpotPriceRequest'>;
export type EncodedOsmosisGammQueryPoolsWithFilterRequest = Encoded<'/osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest'>;
export type EncodedOsmosisGammQueryPoolsWithFilterResponse = Encoded<'/osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse'>;
export type EncodedOsmosisGammQuerySpotPriceResponse = Encoded<'/osmosis.gamm.v1beta1.QuerySpotPriceResponse'>;
export type EncodedOsmosisGammQuerySwapExactAmountInRequest = Encoded<'/osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest'>;
export type EncodedOsmosisGammQuerySwapExactAmountInResponse = Encoded<'/osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse'>;
export type EncodedOsmosisGammQuerySwapExactAmountOutRequest = Encoded<'/osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest'>;
export type EncodedOsmosisGammQuerySwapExactAmountOutResponse = Encoded<'/osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse'>;
export type EncodedOsmosisGammQueryTotalLiquidityRequest = Encoded<'/osmosis.gamm.v1beta1.QueryTotalLiquidityRequest'>;
export type EncodedOsmosisGammQueryTotalLiquidityResponse = Encoded<'/osmosis.gamm.v1beta1.QueryTotalLiquidityResponse'>;
export type EncodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = Encoded<'/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest'>;
export type EncodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = Encoded<'/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse'>;
export type EncodedOsmosisGammQueryCFMMConcentratedPoolLinksRequest = Encoded<'/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest'>;
export type EncodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse = Encoded<'/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse'>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export declare const queryOsmosisGammPools: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryPoolsResponse>>;
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: num_pools - the 'num_pools' response property
 */
export declare const queryOsmosisGammNumPools: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryNumPoolsResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export declare const queryOsmosisGammTotalLiquidity: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryTotalLiquidityResponse>>;
/**
 * Allows you to query specific pools with requested parameters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_min_liquidity - String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 * @param s_pool_type -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export declare const queryOsmosisGammPoolsWithFilter: (z_req: string | ({
    origin: string;
} & RequestInit), s_min_liquidity?: Opt<string>, s_pool_type?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryPoolsWithFilterResponse>>;
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: pool - the 'pool' response property
 */
export declare const queryOsmosisGammPool: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryPoolResponse>>;
/**
 * Returns the type of the pool. Returns "Balancer" as a string literal when the pool is a balancer pool. Errors if the pool is failed to be type caseted.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: pool_type - the 'pool_type' response property
 */
export declare const queryOsmosisGammPoolType: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryPoolTypeResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param a_tokens_ins -
 * @returns a tuple where:
 *   - 0: share_out_amount - the 'share_out_amount' response property
 *   - 1: tokens_out - the 'share_out_amount' response property
 */
export declare const queryOsmosisGammCalcJoinPoolShares: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, a_tokens_ins?: Opt<SlimCoin[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryCalcJoinPoolSharesResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_share_in_amount -
 * @returns a tuple where:
 *   - 0: tokens_out - the 'tokens_out' response property
 */
export declare const queryOsmosisGammCalcExitPoolCoinsFromShares: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_share_in_amount?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryCalcExitPoolCoinsFromSharesResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryOsmosisGammPoolParams: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryPoolParamsResponse>>;
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export declare const queryOsmosisGammTotalPoolLiquidity: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryTotalPoolLiquidityResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: total_shares - the 'total_shares' response property
 */
export declare const queryOsmosisGammTotalShares: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryTotalSharesResponse>>;
/**
 * Defines a gRPC query handler that returns the spot price given a base denomination and a quote denomination.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset_denom -
 * @param s_quote_asset_denom -
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export declare const queryOsmosisGammSpotPrice: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_base_asset_denom?: Opt<string>, s_quote_asset_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQuerySpotPriceResponse>>;
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_pool_id -
 * @param s_token_in -
 * @param a_routes -
 * @returns a tuple where:
 *   - 0: token_out_amount - the 'token_out_amount' response property
 */
export declare const queryOsmosisGammEstimateSwapExactAmountIn: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sg_pool_id?: Opt<`${bigint}`>, s_token_in?: Opt<string>, a_routes?: Opt<OsmosisPoolmanagerSwapAmountInRoute[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQuerySwapExactAmountInResponse>>;
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_pool_id -
 * @param a_routes -
 * @param s_token_out -
 * @returns a tuple where:
 *   - 0: token_in_amount - the 'token_in_amount' response property
 */
export declare const queryOsmosisGammEstimateSwapExactAmountOut: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sg_pool_id?: Opt<`${bigint}`>, a_routes?: Opt<OsmosisPoolmanagerSwapAmountOutRoute[]>, s_token_out?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQuerySwapExactAmountOutResponse>>;
/**
 * ConcentratedPoolIdLinkFromBalancer returns the pool id of the concentrated pool that is linked with the given CFMM pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_cfmm_pool_id -
 * @returns a tuple where:
 *   - 0: concentrated_pool_id - the 'concentrated_pool_id' response property
 */
export declare const queryOsmosisGammConcentratedPoolIdLinkFromCFMM: (z_req: string | ({
    origin: string;
} & RequestInit), sg_cfmm_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse>>;
/**
 * Returns migration links between CFMM and Concentrated pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: migration_records - the 'migration_records' response property
 */
export declare const queryOsmosisGammCFMMConcentratedPoolLinks: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisGammQueryCFMMConcentratedPoolLinksResponse>>;
/**
 * Encodes a `QueryPoolRequest` protobuf message: =============================== Pool Deprecated: please use the alternative in x/poolmanager
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryPoolRequest;
/**
 * Encodes a `QueryPoolResponse` protobuf message: Deprecated: please use the alternative in x/poolmanager
 * @param atu8_pool - `pool`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolResponse: (atu8_pool?: Opt<Encoded<'PoolI'>>) => EncodedOsmosisGammQueryPoolResponse;
/**
 * Encodes a `QueryPoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisGammQueryPoolsRequest;
/**
 * Encodes a `QueryPoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolsResponse: (a_pools?: Opt<Encoded<'PoolI'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisGammQueryPoolsResponse;
/**
 * Encodes a `QueryNumPoolsRequest` protobuf message: =============================== NumPools
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryNumPoolsRequest: () => EncodedOsmosisGammQueryNumPoolsRequest;
/**
 * Encodes a `QueryNumPoolsResponse` protobuf message:
 * @param sg_num_pools - `num_pools`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryNumPoolsResponse: (sg_num_pools?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryNumPoolsResponse;
/**
 * Encodes a `QueryPoolTypeRequest` protobuf message: =============================== PoolType
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolTypeRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryPoolTypeRequest;
/**
 * Encodes a `QueryPoolTypeResponse` protobuf message:
 * @param s_pool_type - `pool_type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolTypeResponse: (s_pool_type?: Opt<string>) => EncodedOsmosisGammQueryPoolTypeResponse;
/**
 * Encodes a `QueryCalcJoinPoolSharesRequest` protobuf message: =============================== CalcJoinPoolShares
 * @param sg_pool_id - `pool_id`:
 * @param a_tokens_ins - `tokens_in`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcJoinPoolSharesRequest: (sg_pool_id?: Opt<WeakUint64Str>, a_tokens_ins?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryCalcJoinPoolSharesRequest;
/**
 * Encodes a `QueryCalcJoinPoolSharesResponse` protobuf message:
 * @param s_share_out_amount - `share_out_amount`:
 * @param a_tokens_outs - `tokens_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcJoinPoolSharesResponse: (s_share_out_amount?: Opt<string>, a_tokens_outs?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryCalcJoinPoolSharesResponse;
/**
 * Encodes a `QueryCalcExitPoolCoinsFromSharesRequest` protobuf message: =============================== CalcExitPoolCoinsFromShares
 * @param sg_pool_id - `pool_id`:
 * @param s_share_in_amount - `share_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_share_in_amount?: Opt<string>) => EncodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest;
/**
 * Encodes a `QueryCalcExitPoolCoinsFromSharesResponse` protobuf message:
 * @param a_tokens_outs - `tokens_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse: (a_tokens_outs?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse;
/**
 * Encodes a `QueryPoolParamsRequest` protobuf message: =============================== PoolParams
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolParamsRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryPoolParamsRequest;
/**
 * Encodes a `QueryPoolParamsResponse` protobuf message:
 * @param atu8_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolParamsResponse: (atu8_params?: Opt<Uint8Array>) => EncodedOsmosisGammQueryPoolParamsResponse;
/**
 * Encodes a `QueryTotalPoolLiquidityRequest` protobuf message: =============================== PoolLiquidity Deprecated: please use the alternative in x/poolmanager
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalPoolLiquidityRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryTotalPoolLiquidityRequest;
/**
 * Encodes a `QueryTotalPoolLiquidityResponse` protobuf message: Deprecated: please use the alternative in x/poolmanager
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalPoolLiquidityResponse: (a_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryTotalPoolLiquidityResponse;
/**
 * Encodes a `QueryTotalSharesRequest` protobuf message: =============================== TotalShares
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalSharesRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryTotalSharesRequest;
/**
 * Encodes a `QueryTotalSharesResponse` protobuf message:
 * @param a_total_shares - `total_shares`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalSharesResponse: (a_total_shares?: Opt<SlimCoin>) => EncodedOsmosisGammQueryTotalSharesResponse;
/**
 * Encodes a `QueryCalcJoinPoolNoSwapSharesRequest` protobuf message: =============================== CalcJoinPoolNoSwapShares
 * @param sg_pool_id - `pool_id`:
 * @param a_tokens_ins - `tokens_in`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest: (sg_pool_id?: Opt<WeakUint64Str>, a_tokens_ins?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest;
/**
 * Encodes a `QueryCalcJoinPoolNoSwapSharesResponse` protobuf message:
 * @param a_tokens_outs - `tokens_out`:
 * @param s_shares_out - `shares_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse: (a_tokens_outs?: Opt<SlimCoin[]>, s_shares_out?: Opt<string>) => EncodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse;
/**
 * Encodes a `QuerySpotPriceRequest` protobuf message: defines the gRPC request structure for a SpotPrice query.
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset_denom - `base_asset_denom`:
 * @param s_quote_asset_denom - `quote_asset_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySpotPriceRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_base_asset_denom?: Opt<string>, s_quote_asset_denom?: Opt<string>) => EncodedOsmosisGammQuerySpotPriceRequest;
/**
 * Encodes a `QueryPoolsWithFilterRequest` protobuf message:
 * @param s_min_liquidity - `min_liquidity`: String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 * @param s_pool_type - `pool_type`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolsWithFilterRequest: (s_min_liquidity?: Opt<string>, s_pool_type?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisGammQueryPoolsWithFilterRequest;
/**
 * Encodes a `QueryPoolsWithFilterResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryPoolsWithFilterResponse: (a_pools?: Opt<Encoded<'PoolI'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisGammQueryPoolsWithFilterResponse;
/**
 * Encodes a `QuerySpotPriceResponse` protobuf message: defines the gRPC response structure for a SpotPrice query.
 * @param s_spot_price - `spot_price`: String of the Dec. Ex) 10.203uatom
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySpotPriceResponse: (s_spot_price?: Opt<string>) => EncodedOsmosisGammQuerySpotPriceResponse;
/**
 * Encodes a `QuerySwapExactAmountInRequest` protobuf message: =============================== EstimateSwapExactAmountIn
 * @param sa_sender - `sender`:
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param a_routes - `routes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySwapExactAmountInRequest: (sa_sender?: Opt<WeakAccountAddr>, sg_pool_id?: Opt<WeakUint64Str>, s_token_in?: Opt<string>, a_routes?: Opt<Encoded<'/osmosis.poolmanager.v1beta1.SwapAmountInRoute'>[]>) => EncodedOsmosisGammQuerySwapExactAmountInRequest;
/**
 * Encodes a `QuerySwapExactAmountInResponse` protobuf message:
 * @param s_token_out_amount - `token_out_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySwapExactAmountInResponse: (s_token_out_amount?: Opt<string>) => EncodedOsmosisGammQuerySwapExactAmountInResponse;
/**
 * Encodes a `QuerySwapExactAmountOutRequest` protobuf message: =============================== EstimateSwapExactAmountOut
 * @param sa_sender - `sender`:
 * @param sg_pool_id - `pool_id`:
 * @param a_routes - `routes`:
 * @param s_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySwapExactAmountOutRequest: (sa_sender?: Opt<WeakAccountAddr>, sg_pool_id?: Opt<WeakUint64Str>, a_routes?: Opt<Encoded<'/osmosis.poolmanager.v1beta1.SwapAmountOutRoute'>[]>, s_token_out?: Opt<string>) => EncodedOsmosisGammQuerySwapExactAmountOutRequest;
/**
 * Encodes a `QuerySwapExactAmountOutResponse` protobuf message:
 * @param s_token_in_amount - `token_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQuerySwapExactAmountOutResponse: (s_token_in_amount?: Opt<string>) => EncodedOsmosisGammQuerySwapExactAmountOutResponse;
/**
 * Encodes a `QueryTotalLiquidityRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalLiquidityRequest: () => EncodedOsmosisGammQueryTotalLiquidityRequest;
/**
 * Encodes a `QueryTotalLiquidityResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryTotalLiquidityResponse: (a_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisGammQueryTotalLiquidityResponse;
/**
 * Encodes a `QueryConcentratedPoolIdLinkFromCFMMRequest` protobuf message: =============================== QueryConcentratedPoolIdLinkFromCFMM
 * @param sg_cfmm_pool_id - `cfmm_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest: (sg_cfmm_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest;
/**
 * Encodes a `QueryConcentratedPoolIdLinkFromCFMMResponse` protobuf message:
 * @param sg_concentrated_pool_id - `concentrated_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse: (sg_concentrated_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse;
/**
 * Encodes a `QueryCFMMConcentratedPoolLinksRequest` protobuf message: =============================== QueryCFMMConcentratedPoolLinks
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest: () => EncodedOsmosisGammQueryCFMMConcentratedPoolLinksRequest;
/**
 * Encodes a `QueryCFMMConcentratedPoolLinksResponse` protobuf message:
 * @param g_migration_records - `migration_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse: (atu8_migration_records?: Opt<Encoded<'/osmosis.gamm.v1beta1.MigrationRecords'>>) => EncodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse;
/**
 * A decoded protobuf QueryPoolRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisGammQueryPoolRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryPoolRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolRequest}
 */
export declare const decodeOsmosisGammQueryPoolRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolRequest;
/**
 * A decoded protobuf QueryPool message
 *
 * Alias for: pool -
 */
export type DecodedOsmosisGammQueryPoolResponse = [
    a_pool?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolResponse}
 */
export declare const decodeOsmosisGammQueryPoolResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolResponse;
/**
 * A decoded protobuf QueryPoolsRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedOsmosisGammQueryPoolsRequest = [
    w_0?: undefined,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisGammQueryPoolsRequest}
 */
export declare const decodeOsmosisGammQueryPoolsRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisGammQueryPoolsRequest;
/**
 * A decoded protobuf QueryPools message
 *
 * Tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedOsmosisGammQueryPoolsResponse = [
    a_pools?: DecodedGoogleProtobufAny[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsResponse}
 */
export declare const decodeOsmosisGammQueryPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolsResponse;
/**
 * A decoded protobuf QueryNumPoolsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisGammQueryNumPoolsRequest = [];
/**
 * Decodes a protobuf QueryNumPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryNumPoolsRequest}
 */
export declare const decodeOsmosisGammQueryNumPoolsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryNumPools message
 *
 * Alias for: num_pools -
 */
export type DecodedOsmosisGammQueryNumPoolsResponse = [
    sg_num_pools?: CwUint64
];
/**
 * Decodes a protobuf QueryNumPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryNumPoolsResponse}
 */
export declare const decodeOsmosisGammQueryNumPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryNumPoolsResponse;
/**
 * A decoded protobuf QueryPoolTypeRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisGammQueryPoolTypeRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryPoolTypeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolTypeRequest}
 */
export declare const decodeOsmosisGammQueryPoolTypeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolTypeRequest;
/**
 * A decoded protobuf QueryPoolType message
 *
 * Alias for: pool_type -
 */
export type DecodedOsmosisGammQueryPoolTypeResponse = [
    s_pool_type?: string
];
/**
 * Decodes a protobuf QueryPoolType message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolTypeResponse}
 */
export declare const decodeOsmosisGammQueryPoolTypeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolTypeResponse;
/**
 * A decoded protobuf QueryCalcJoinPoolSharesRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export type DecodedOsmosisGammQueryCalcJoinPoolSharesRequest = [
    sg_pool_id?: CwUint64,
    a_tokens_in?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryCalcJoinPoolSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolSharesRequest}
 */
export declare const decodeOsmosisGammQueryCalcJoinPoolSharesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcJoinPoolSharesRequest;
/**
 * A decoded protobuf QueryCalcJoinPoolShares message
 *
 * Tuple where:
 *   - 0: share_out_amount -
 *   - 1: tokens_out -
 */
export type DecodedOsmosisGammQueryCalcJoinPoolSharesResponse = [
    s_share_out_amount?: string,
    a_tokens_out?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryCalcJoinPoolShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolSharesResponse}
 */
export declare const decodeOsmosisGammQueryCalcJoinPoolSharesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcJoinPoolSharesResponse;
/**
 * A decoded protobuf QueryCalcExitPoolCoinsFromSharesRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: share_in_amount -
 */
export type DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = [
    sg_pool_id?: CwUint64,
    s_share_in_amount?: string
];
/**
 * Decodes a protobuf QueryCalcExitPoolCoinsFromSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest}
 */
export declare const decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest;
/**
 * A decoded protobuf QueryCalcExitPoolCoinsFromShares message
 *
 * Alias for: tokens_out -
 */
export type DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = [
    a_tokens_out?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryCalcExitPoolCoinsFromShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse}
 */
export declare const decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse;
/**
 * A decoded protobuf QueryPoolParamsRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisGammQueryPoolParamsRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryPoolParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolParamsRequest}
 */
export declare const decodeOsmosisGammQueryPoolParamsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolParamsRequest;
/**
 * A decoded protobuf QueryPoolParams message
 *
 * Alias for: params -
 */
export type DecodedOsmosisGammQueryPoolParamsResponse = [
    a_params?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf QueryPoolParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolParamsResponse}
 */
export declare const decodeOsmosisGammQueryPoolParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolParamsResponse;
/**
 * A decoded protobuf QueryTotalPoolLiquidityRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisGammQueryTotalPoolLiquidityRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryTotalPoolLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalPoolLiquidityRequest}
 */
export declare const decodeOsmosisGammQueryTotalPoolLiquidityRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryTotalPoolLiquidityRequest;
/**
 * A decoded protobuf QueryTotalPoolLiquidity message
 *
 * Alias for: liquidity -
 */
export type DecodedOsmosisGammQueryTotalPoolLiquidityResponse = [
    a_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryTotalPoolLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalPoolLiquidityResponse}
 */
export declare const decodeOsmosisGammQueryTotalPoolLiquidityResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryTotalPoolLiquidityResponse;
/**
 * A decoded protobuf QueryTotalSharesRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisGammQueryTotalSharesRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryTotalSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalSharesRequest}
 */
export declare const decodeOsmosisGammQueryTotalSharesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryTotalSharesRequest;
/**
 * A decoded protobuf QueryTotalShares message
 *
 * Alias for: total_shares -
 */
export type DecodedOsmosisGammQueryTotalSharesResponse = [
    a_total_shares?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf QueryTotalShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalSharesResponse}
 */
export declare const decodeOsmosisGammQueryTotalSharesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryTotalSharesResponse;
/**
 * A decoded protobuf QueryCalcJoinPoolNoSwapSharesRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export type DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = [
    sg_pool_id?: CwUint64,
    a_tokens_in?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryCalcJoinPoolNoSwapSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest}
 */
export declare const decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest;
/**
 * A decoded protobuf QueryCalcJoinPoolNoSwapShares message
 *
 * Tuple where:
 *   - 0: tokens_out -
 *   - 1: shares_out -
 */
export type DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = [
    a_tokens_out?: [
        string,
        string
    ][],
    s_shares_out?: string
];
/**
 * Decodes a protobuf QueryCalcJoinPoolNoSwapShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse}
 */
export declare const decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse;
/**
 * A decoded protobuf QuerySpotPriceRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export type DecodedOsmosisGammQuerySpotPriceRequest = [
    sg_pool_id?: CwUint64,
    s_base_asset_denom?: string,
    s_quote_asset_denom?: string
];
/**
 * Decodes a protobuf QuerySpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceRequest}
 */
export declare const decodeOsmosisGammQuerySpotPriceRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySpotPriceRequest;
/**
 * A decoded protobuf QueryPoolsWithFilterRequest message
 *
 * Tuple where:
 *   - 0: min_liquidity - String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 *   - 1: pool_type -
 *   - 2: pagination -
 */
export type DecodedOsmosisGammQueryPoolsWithFilterRequest = [
    s_min_liquidity?: string,
    s_pool_type?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryPoolsWithFilterRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsWithFilterRequest}
 */
export declare const decodeOsmosisGammQueryPoolsWithFilterRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolsWithFilterRequest;
/**
 * A decoded protobuf QueryPoolsWithFilter message
 *
 * Tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedOsmosisGammQueryPoolsWithFilterResponse = [
    a_pools?: DecodedGoogleProtobufAny[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryPoolsWithFilter message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsWithFilterResponse}
 */
export declare const decodeOsmosisGammQueryPoolsWithFilterResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryPoolsWithFilterResponse;
/**
 * A decoded protobuf QuerySpotPrice message
 *
 * Alias for: spot_price - String of the Dec. Ex) 10.203uatom
 */
export type DecodedOsmosisGammQuerySpotPriceResponse = [
    s_spot_price?: string
];
/**
 * Decodes a protobuf QuerySpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceResponse}
 */
export declare const decodeOsmosisGammQuerySpotPriceResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySpotPriceResponse;
/**
 * A decoded protobuf QuerySwapExactAmountInRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: token_in -
 *   - 3: routes -
 */
export type DecodedOsmosisGammQuerySwapExactAmountInRequest = [
    sa_sender?: CwAccountAddr,
    sg_pool_id?: CwUint64,
    s_token_in?: string,
    a_routes?: DecodedOsmosisPoolmanagerSwapAmountInRoute[]
];
/**
 * Decodes a protobuf QuerySwapExactAmountInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountInRequest}
 */
export declare const decodeOsmosisGammQuerySwapExactAmountInRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySwapExactAmountInRequest;
/**
 * A decoded protobuf QuerySwapExactAmountIn message
 *
 * Alias for: token_out_amount -
 */
export type DecodedOsmosisGammQuerySwapExactAmountInResponse = [
    s_token_out_amount?: string
];
/**
 * Decodes a protobuf QuerySwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountInResponse}
 */
export declare const decodeOsmosisGammQuerySwapExactAmountInResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySwapExactAmountInResponse;
/**
 * A decoded protobuf QuerySwapExactAmountOutRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: routes -
 *   - 3: token_out -
 */
export type DecodedOsmosisGammQuerySwapExactAmountOutRequest = [
    sa_sender?: CwAccountAddr,
    sg_pool_id?: CwUint64,
    a_routes?: DecodedOsmosisPoolmanagerSwapAmountOutRoute[],
    s_token_out?: string
];
/**
 * Decodes a protobuf QuerySwapExactAmountOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountOutRequest}
 */
export declare const decodeOsmosisGammQuerySwapExactAmountOutRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySwapExactAmountOutRequest;
/**
 * A decoded protobuf QuerySwapExactAmountOut message
 *
 * Alias for: token_in_amount -
 */
export type DecodedOsmosisGammQuerySwapExactAmountOutResponse = [
    s_token_in_amount?: string
];
/**
 * Decodes a protobuf QuerySwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountOutResponse}
 */
export declare const decodeOsmosisGammQuerySwapExactAmountOutResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQuerySwapExactAmountOutResponse;
/**
 * A decoded protobuf QueryTotalLiquidityRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisGammQueryTotalLiquidityRequest = [];
/**
 * Decodes a protobuf QueryTotalLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalLiquidityRequest}
 */
export declare const decodeOsmosisGammQueryTotalLiquidityRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryTotalLiquidity message
 *
 * Alias for: liquidity -
 */
export type DecodedOsmosisGammQueryTotalLiquidityResponse = [
    a_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf QueryTotalLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalLiquidityResponse}
 */
export declare const decodeOsmosisGammQueryTotalLiquidityResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryTotalLiquidityResponse;
/**
 * A decoded protobuf QueryConcentratedPoolIdLinkFromCFMMRequest message
 *
 * Alias for: cfmm_pool_id -
 */
export type DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = [
    sg_cfmm_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryConcentratedPoolIdLinkFromCFMMRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest}
 */
export declare const decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest;
/**
 * A decoded protobuf QueryConcentratedPoolIdLinkFromCFMM message
 *
 * Alias for: concentrated_pool_id -
 */
export type DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = [
    sg_concentrated_pool_id?: CwUint64
];
/**
 * Decodes a protobuf QueryConcentratedPoolIdLinkFromCFMM message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse}
 */
export declare const decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse;
/**
 * A decoded protobuf QueryCFMMConcentratedPoolLinksRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisGammQueryCFMMConcentratedPoolLinksRequest = [];
/**
 * Decodes a protobuf QueryCFMMConcentratedPoolLinksRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCFMMConcentratedPoolLinksRequest}
 */
export declare const decodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryCFMMConcentratedPoolLinks message
 *
 * Alias for: migration_records -
 */
export type DecodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse = [
    a_migration_records?: DecodedOsmosisGammMigrationRecords
];
/**
 * Decodes a protobuf QueryCFMMConcentratedPoolLinks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse}
 */
export declare const decodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse: (atu8_payload: Uint8Array) => DecodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse;
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisGammQueryPoolRequest: (g_struct: OsmosisGammQueryPoolRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_REQUEST = "/osmosis.gamm.v1beta1.QueryPoolRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolRequest` - =============================== Pool Deprecated: please use the alternative in x/poolmanager
 */
export type OsmosisGammQueryPoolRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool -
 */
export declare const destructOsmosisGammQueryPoolResponse: (g_struct: OsmosisGammQueryPoolResponse) => [pool?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_RESPONSE = "/osmosis.gamm.v1beta1.QueryPoolResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolResponse` - Deprecated: please use the alternative in x/poolmanager
 */
export type OsmosisGammQueryPoolResponse = {
    pool?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool> | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructOsmosisGammQueryPoolsRequest: (g_struct: OsmosisGammQueryPoolsRequest) => [EMPTY?: void, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_REQUEST = "/osmosis.gamm.v1beta1.QueryPoolsRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolsRequest` - =============================== Pools
 */
export type OsmosisGammQueryPoolsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructOsmosisGammQueryPoolsResponse: (g_struct: OsmosisGammQueryPoolsResponse) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_RESPONSE = "/osmosis.gamm.v1beta1.QueryPoolsResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolsResponse` -
 */
export type OsmosisGammQueryPoolsResponse = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryNumPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisGammQueryNumPoolsRequest: (g_struct: OsmosisGammQueryNumPoolsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_NUM_POOLS_REQUEST = "/osmosis.gamm.v1beta1.QueryNumPoolsRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryNumPoolsRequest` - =============================== NumPools
 */
export type OsmosisGammQueryNumPoolsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisGammQueryNumPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: num_pools -
 */
export declare const destructOsmosisGammQueryNumPoolsResponse: (g_struct: OsmosisGammQueryNumPoolsResponse) => [num_pools?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_NUM_POOLS_RESPONSE = "/osmosis.gamm.v1beta1.QueryNumPoolsResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryNumPoolsResponse` -
 */
export type OsmosisGammQueryNumPoolsResponse = {
    num_pools?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolTypeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisGammQueryPoolTypeRequest: (g_struct: OsmosisGammQueryPoolTypeRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_TYPE_REQUEST = "/osmosis.gamm.v1beta1.QueryPoolTypeRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolTypeRequest` - =============================== PoolType
 */
export type OsmosisGammQueryPoolTypeRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolTypeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_type -
 */
export declare const destructOsmosisGammQueryPoolTypeResponse: (g_struct: OsmosisGammQueryPoolTypeResponse) => [pool_type?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_TYPE_RESPONSE = "/osmosis.gamm.v1beta1.QueryPoolTypeResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolTypeResponse` -
 */
export type OsmosisGammQueryPoolTypeResponse = {
    pool_type?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export declare const destructOsmosisGammQueryCalcJoinPoolSharesRequest: (g_struct: OsmosisGammQueryCalcJoinPoolSharesRequest) => [pool_id?: CwUint64, tokens_in?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_SHARES_REQUEST = "/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest` - =============================== CalcJoinPoolShares
 */
export type OsmosisGammQueryCalcJoinPoolSharesRequest = {
    pool_id?: CwUint64 | undefined;
    tokens_in?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: share_out_amount -
 *   - 1: tokens_out -
 */
export declare const destructOsmosisGammQueryCalcJoinPoolSharesResponse: (g_struct: OsmosisGammQueryCalcJoinPoolSharesResponse) => [share_out_amount?: string, tokens_out?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_SHARES_RESPONSE = "/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse` -
 */
export type OsmosisGammQueryCalcJoinPoolSharesResponse = {
    share_out_amount?: string | undefined;
    tokens_out?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcExitPoolCoinsFromSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: share_in_amount -
 */
export declare const destructOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest: (g_struct: OsmosisGammQueryCalcExitPoolCoinsFromSharesRequest) => [pool_id?: CwUint64, share_in_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_EXIT_POOL_COINS_FROM_SHARES_REQUEST = "/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest` - =============================== CalcExitPoolCoinsFromShares
 */
export type OsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = {
    pool_id?: CwUint64 | undefined;
    share_in_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcExitPoolCoinsFromSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tokens_out -
 */
export declare const destructOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse: (g_struct: OsmosisGammQueryCalcExitPoolCoinsFromSharesResponse) => [tokens_out?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_EXIT_POOL_COINS_FROM_SHARES_RESPONSE = "/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse` -
 */
export type OsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = {
    tokens_out?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisGammQueryPoolParamsRequest: (g_struct: OsmosisGammQueryPoolParamsRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_PARAMS_REQUEST = "/osmosis.gamm.v1beta1.QueryPoolParamsRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolParamsRequest` - =============================== PoolParams
 */
export type OsmosisGammQueryPoolParamsRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisGammQueryPoolParamsResponse: (g_struct: OsmosisGammQueryPoolParamsResponse) => [params?: JsonAny];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_PARAMS_RESPONSE = "/osmosis.gamm.v1beta1.QueryPoolParamsResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolParamsResponse` -
 */
export type OsmosisGammQueryPoolParamsResponse = {
    params?: JsonAny | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalPoolLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisGammQueryTotalPoolLiquidityRequest: (g_struct: OsmosisGammQueryTotalPoolLiquidityRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_POOL_LIQUIDITY_REQUEST = "/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest` - =============================== PoolLiquidity Deprecated: please use the alternative in x/poolmanager
 */
export type OsmosisGammQueryTotalPoolLiquidityRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalPoolLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export declare const destructOsmosisGammQueryTotalPoolLiquidityResponse: (g_struct: OsmosisGammQueryTotalPoolLiquidityResponse) => [liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_POOL_LIQUIDITY_RESPONSE = "/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse` - Deprecated: please use the alternative in x/poolmanager
 */
export type OsmosisGammQueryTotalPoolLiquidityResponse = {
    liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisGammQueryTotalSharesRequest: (g_struct: OsmosisGammQueryTotalSharesRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_SHARES_REQUEST = "/osmosis.gamm.v1beta1.QueryTotalSharesRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalSharesRequest` - =============================== TotalShares
 */
export type OsmosisGammQueryTotalSharesRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_shares -
 */
export declare const destructOsmosisGammQueryTotalSharesResponse: (g_struct: OsmosisGammQueryTotalSharesResponse) => [total_shares?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_SHARES_RESPONSE = "/osmosis.gamm.v1beta1.QueryTotalSharesResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalSharesResponse` -
 */
export type OsmosisGammQueryTotalSharesResponse = {
    total_shares?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolNoSwapSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export declare const destructOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest: (g_struct: OsmosisGammQueryCalcJoinPoolNoSwapSharesRequest) => [pool_id?: CwUint64, tokens_in?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_NO_SWAP_SHARES_REQUEST = "/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest` - =============================== CalcJoinPoolNoSwapShares
 */
export type OsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = {
    pool_id?: CwUint64 | undefined;
    tokens_in?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolNoSwapSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tokens_out -
 *   - 1: shares_out -
 */
export declare const destructOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse: (g_struct: OsmosisGammQueryCalcJoinPoolNoSwapSharesResponse) => [tokens_out?: CosmosBaseCoin[], shares_out?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_NO_SWAP_SHARES_RESPONSE = "/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse` -
 */
export type OsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = {
    tokens_out?: CosmosBaseCoin[] | undefined;
    shares_out?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export declare const destructOsmosisGammQuerySpotPriceRequest: (g_struct: OsmosisGammQuerySpotPriceRequest) => [pool_id?: CwUint64, base_asset_denom?: string, quote_asset_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_REQUEST = "/osmosis.gamm.v1beta1.QuerySpotPriceRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySpotPriceRequest` - defines the gRPC request structure for a SpotPrice query.
 */
export type OsmosisGammQuerySpotPriceRequest = {
    pool_id?: CwUint64 | undefined;
    base_asset_denom?: string | undefined;
    quote_asset_denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsWithFilterRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: min_liquidity - String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 *   - 1: pool_type -
 *   - 2: pagination -
 */
export declare const destructOsmosisGammQueryPoolsWithFilterRequest: (g_struct: OsmosisGammQueryPoolsWithFilterRequest) => [min_liquidity?: string, pool_type?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_WITH_FILTER_REQUEST = "/osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest` -
 */
export type OsmosisGammQueryPoolsWithFilterRequest = {
    min_liquidity?: string | undefined;
    pool_type?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsWithFilterResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructOsmosisGammQueryPoolsWithFilterResponse: (g_struct: OsmosisGammQueryPoolsWithFilterResponse) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_WITH_FILTER_RESPONSE = "/osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse` -
 */
export type OsmosisGammQueryPoolsWithFilterResponse = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export declare const destructOsmosisGammQuerySpotPriceResponse: (g_struct: OsmosisGammQuerySpotPriceResponse) => [spot_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_RESPONSE = "/osmosis.gamm.v1beta1.QuerySpotPriceResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySpotPriceResponse` - defines the gRPC response structure for a SpotPrice query.
 */
export type OsmosisGammQuerySpotPriceResponse = {
    spot_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: token_in -
 *   - 3: routes -
 */
export declare const destructOsmosisGammQuerySwapExactAmountInRequest: (g_struct: OsmosisGammQuerySwapExactAmountInRequest) => [sender?: CwAccountAddr, pool_id?: CwUint64, token_in?: string, routes?: OsmosisPoolmanagerSwapAmountInRoute[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_IN_REQUEST = "/osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest` - =============================== EstimateSwapExactAmountIn
 */
export type OsmosisGammQuerySwapExactAmountInRequest = {
    sender?: CwAccountAddr | undefined;
    pool_id?: CwUint64 | undefined;
    token_in?: string | undefined;
    routes?: OsmosisPoolmanagerSwapAmountInRoute[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out_amount -
 */
export declare const destructOsmosisGammQuerySwapExactAmountInResponse: (g_struct: OsmosisGammQuerySwapExactAmountInResponse) => [token_out_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_IN_RESPONSE = "/osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse` -
 */
export type OsmosisGammQuerySwapExactAmountInResponse = {
    token_out_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: routes -
 *   - 3: token_out -
 */
export declare const destructOsmosisGammQuerySwapExactAmountOutRequest: (g_struct: OsmosisGammQuerySwapExactAmountOutRequest) => [sender?: CwAccountAddr, pool_id?: CwUint64, routes?: OsmosisPoolmanagerSwapAmountOutRoute[], token_out?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_OUT_REQUEST = "/osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest` - =============================== EstimateSwapExactAmountOut
 */
export type OsmosisGammQuerySwapExactAmountOutRequest = {
    sender?: CwAccountAddr | undefined;
    pool_id?: CwUint64 | undefined;
    routes?: OsmosisPoolmanagerSwapAmountOutRoute[] | undefined;
    token_out?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in_amount -
 */
export declare const destructOsmosisGammQuerySwapExactAmountOutResponse: (g_struct: OsmosisGammQuerySwapExactAmountOutResponse) => [token_in_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_OUT_RESPONSE = "/osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse` -
 */
export type OsmosisGammQuerySwapExactAmountOutResponse = {
    token_in_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisGammQueryTotalLiquidityRequest: (g_struct: OsmosisGammQueryTotalLiquidityRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_LIQUIDITY_REQUEST = "/osmosis.gamm.v1beta1.QueryTotalLiquidityRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalLiquidityRequest` -
 */
export type OsmosisGammQueryTotalLiquidityRequest = {};
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export declare const destructOsmosisGammQueryTotalLiquidityResponse: (g_struct: OsmosisGammQueryTotalLiquidityResponse) => [liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_LIQUIDITY_RESPONSE = "/osmosis.gamm.v1beta1.QueryTotalLiquidityResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryTotalLiquidityResponse` -
 */
export type OsmosisGammQueryTotalLiquidityResponse = {
    liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cfmm_pool_id -
 */
export declare const destructOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest: (g_struct: OsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest) => [cfmm_pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CONCENTRATED_POOL_ID_LINK_FROM_C_F_M_M_REQUEST = "/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest` - =============================== QueryConcentratedPoolIdLinkFromCFMM
 */
export type OsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = {
    cfmm_pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: concentrated_pool_id -
 */
export declare const destructOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse: (g_struct: OsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse) => [concentrated_pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CONCENTRATED_POOL_ID_LINK_FROM_C_F_M_M_RESPONSE = "/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse` -
 */
export type OsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = {
    concentrated_pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCFMMConcentratedPoolLinksRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisGammQueryCFMMConcentratedPoolLinksRequest: (g_struct: OsmosisGammQueryCFMMConcentratedPoolLinksRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_C_F_M_M_CONCENTRATED_POOL_LINKS_REQUEST = "/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest` - =============================== QueryCFMMConcentratedPoolLinks
 */
export type OsmosisGammQueryCFMMConcentratedPoolLinksRequest = {};
/**
 * Destructures the fields of a {@link OsmosisGammQueryCFMMConcentratedPoolLinksResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: migration_records -
 */
export declare const destructOsmosisGammQueryCFMMConcentratedPoolLinksResponse: (g_struct: OsmosisGammQueryCFMMConcentratedPoolLinksResponse) => [migration_records?: OsmosisGammMigrationRecords];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_C_F_M_M_CONCENTRATED_POOL_LINKS_RESPONSE = "/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse";
/**
 * JSON serialization of `osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse` -
 */
export type OsmosisGammQueryCFMMConcentratedPoolLinksResponse = {
    migration_records?: OsmosisGammMigrationRecords | undefined;
};
