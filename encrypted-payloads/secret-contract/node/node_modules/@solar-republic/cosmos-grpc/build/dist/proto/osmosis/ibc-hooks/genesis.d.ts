import type { Encoded, Opt } from '../../../api/types.js';
import type { OsmosisIbchooksParams, DecodedOsmosisIbchooksParams } from './params.js';
export type EncodedOsmosisIbchooksGenesisState = Encoded<'/osmosis.ibchooks.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisIbchooksGenesisState: (atu8_params?: Opt<Encoded<'/osmosis.ibchooks.Params'>>) => EncodedOsmosisIbchooksGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params -
 */
export type DecodedOsmosisIbchooksGenesisState = [
    a_params?: DecodedOsmosisIbchooksParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIbchooksGenesisState}
 */
export declare const decodeOsmosisIbchooksGenesisState: (atu8_payload: Uint8Array) => DecodedOsmosisIbchooksGenesisState;
/**
 * Destructures the fields of a {@link OsmosisIbchooksGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisIbchooksGenesisState: (g_struct: OsmosisIbchooksGenesisState) => [params?: OsmosisIbchooksParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_IBCHOOKS_GENESIS_STATE = "/osmosis.ibchooks.GenesisState";
/**
 * JSON serialization of `osmosis.ibchooks.GenesisState` -
 */
export type OsmosisIbchooksGenesisState = {
    params?: OsmosisIbchooksParams | undefined;
};
