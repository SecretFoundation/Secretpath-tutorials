import type { Encoded, Opt } from '../../../../api/types.js';
import type { OsmosisIbcratelimitParams, DecodedOsmosisIbcratelimitParams } from './params.js';
export type EncodedOsmosisIbcratelimitGenesisState = Encoded<'/osmosis.ibcratelimit.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the ibc-rate-limit module's genesis state.
 * @param g_params - `params`: all the parameters of the module
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisIbcratelimitGenesisState: (atu8_params?: Opt<Encoded<'/osmosis.ibcratelimit.v1beta1.Params'>>) => EncodedOsmosisIbcratelimitGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params - all the parameters of the module
 */
export type DecodedOsmosisIbcratelimitGenesisState = [
    a_params?: DecodedOsmosisIbcratelimitParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIbcratelimitGenesisState}
 */
export declare const decodeOsmosisIbcratelimitGenesisState: (atu8_payload: Uint8Array) => DecodedOsmosisIbcratelimitGenesisState;
/**
 * Destructures the fields of a {@link OsmosisIbcratelimitGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - all the parameters of the module
 */
export declare const destructOsmosisIbcratelimitGenesisState: (g_struct: OsmosisIbcratelimitGenesisState) => [params?: OsmosisIbcratelimitParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_IBCRATELIMIT_GENESIS_STATE = "/osmosis.ibcratelimit.v1beta1.GenesisState";
/**
 * JSON serialization of `osmosis.ibcratelimit.v1beta1.GenesisState` - defines the ibc-rate-limit module's genesis state.
 */
export type OsmosisIbcratelimitGenesisState = {
    params?: OsmosisIbcratelimitParams | undefined;
};
