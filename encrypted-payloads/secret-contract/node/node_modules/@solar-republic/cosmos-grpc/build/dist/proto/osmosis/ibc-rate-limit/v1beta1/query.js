/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeOsmosisIbcratelimitParams } from './params.js';
const SR_LCD_OSMOSIS_IBCRATELIMIT_QUERY = '/osmosis/ibc-rate-limit/v1beta1/params';
/**
 * Defines a gRPC query method that returns the ibc-rate-limit module's parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryOsmosisIbcratelimitParams = restful_grpc(() => [SR_LCD_OSMOSIS_IBCRATELIMIT_QUERY]);
/**
 * Encodes a `ParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisIbcratelimitParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ParamsResponse` protobuf message: aramsResponse is the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisIbcratelimitParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIbcratelimitParamsRequest}
 */
export const decodeOsmosisIbcratelimitParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIbcratelimitParamsResponse}
 */
export const decodeOsmosisIbcratelimitParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisIbcratelimitParams]);
/**
 * Destructures the fields of a {@link OsmosisIbcratelimitParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisIbcratelimitParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_IBCRATELIMIT_PARAMS_REQUEST = '/osmosis.ibcratelimit.v1beta1.ParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisIbcratelimitParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructOsmosisIbcratelimitParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_IBCRATELIMIT_PARAMS_RESPONSE = '/osmosis.ibcratelimit.v1beta1.ParamsResponse';
//# sourceMappingURL=query.js.map