import { decode_protobuf } from '../../../api/protobuf-reader.js';
import { Protobuf } from '../../../api/protobuf-writer.js';
import { decodeOsmosisLockupPeriodLock, decodeOsmosisLockupSyntheticLock } from './lock.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the lockup module's genesis state.
 * @param sg_last_lock_id - `last_lock_id`:
 * @param a_locks - `locks`:
 * @param a_synthetic_locks - `synthetic_locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisLockupGenesisState = (sg_last_lock_id, a_locks, a_synthetic_locks) => Protobuf() // ...
    .g(sg_last_lock_id) // uint64 last_lock_id = 1
    .B(a_locks) // PeriodLock[] locks = 2
    .B(a_synthetic_locks) // SyntheticLock[] synthetic_locks = 3
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupGenesisState}
 */
export const decodeOsmosisLockupGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [3, 0, 0], [0, decodeOsmosisLockupPeriodLock, decodeOsmosisLockupSyntheticLock]);
/**
 * Destructures the fields of a {@link OsmosisLockupGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: last_lock_id -
 *   - 1: locks -
 *   - 2: synthetic_locks -
 */
export const destructOsmosisLockupGenesisState = (g_struct) => [g_struct.last_lock_id, g_struct.locks, g_struct.synthetic_locks];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_GENESIS_STATE = '/osmosis.lockup.GenesisState';
//# sourceMappingURL=genesis.js.map