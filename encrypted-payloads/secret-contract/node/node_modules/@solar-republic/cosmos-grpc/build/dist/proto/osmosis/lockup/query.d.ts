/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, SlimCoin, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt, WeakTimestampStr, WeakDurationStr } from '../../../api/types.js';
import type { CosmosBaseCoin } from '../../cosmos/base/v1beta1/coin.js';
import type { OsmosisLockupPeriodLock, DecodedOsmosisLockupPeriodLock, OsmosisLockupSyntheticLock, DecodedOsmosisLockupSyntheticLock } from './lock.js';
import type { OsmosisLockupParams, DecodedOsmosisLockupParams } from './params.js';
export type EncodedOsmosisLockupModuleBalanceRequest = Encoded<'/osmosis.lockup.ModuleBalanceRequest'>;
export type EncodedOsmosisLockupModuleBalanceResponse = Encoded<'/osmosis.lockup.ModuleBalanceResponse'>;
export type EncodedOsmosisLockupModuleLockedAmountRequest = Encoded<'/osmosis.lockup.ModuleLockedAmountRequest'>;
export type EncodedOsmosisLockupModuleLockedAmountResponse = Encoded<'/osmosis.lockup.ModuleLockedAmountResponse'>;
export type EncodedOsmosisLockupAccountUnlockableCoinsRequest = Encoded<'/osmosis.lockup.AccountUnlockableCoinsRequest'>;
export type EncodedOsmosisLockupAccountUnlockableCoinsResponse = Encoded<'/osmosis.lockup.AccountUnlockableCoinsResponse'>;
export type EncodedOsmosisLockupAccountUnlockingCoinsRequest = Encoded<'/osmosis.lockup.AccountUnlockingCoinsRequest'>;
export type EncodedOsmosisLockupAccountUnlockingCoinsResponse = Encoded<'/osmosis.lockup.AccountUnlockingCoinsResponse'>;
export type EncodedOsmosisLockupAccountLockedCoinsRequest = Encoded<'/osmosis.lockup.AccountLockedCoinsRequest'>;
export type EncodedOsmosisLockupAccountLockedCoinsResponse = Encoded<'/osmosis.lockup.AccountLockedCoinsResponse'>;
export type EncodedOsmosisLockupAccountLockedPastTimeRequest = Encoded<'/osmosis.lockup.AccountLockedPastTimeRequest'>;
export type EncodedOsmosisLockupAccountLockedPastTimeResponse = Encoded<'/osmosis.lockup.AccountLockedPastTimeResponse'>;
export type EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest = Encoded<'/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest'>;
export type EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse = Encoded<'/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse'>;
export type EncodedOsmosisLockupAccountUnlockedBeforeTimeRequest = Encoded<'/osmosis.lockup.AccountUnlockedBeforeTimeRequest'>;
export type EncodedOsmosisLockupAccountUnlockedBeforeTimeResponse = Encoded<'/osmosis.lockup.AccountUnlockedBeforeTimeResponse'>;
export type EncodedOsmosisLockupAccountLockedPastTimeDenomRequest = Encoded<'/osmosis.lockup.AccountLockedPastTimeDenomRequest'>;
export type EncodedOsmosisLockupAccountLockedPastTimeDenomResponse = Encoded<'/osmosis.lockup.AccountLockedPastTimeDenomResponse'>;
export type EncodedOsmosisLockupLockedDenomRequest = Encoded<'/osmosis.lockup.LockedDenomRequest'>;
export type EncodedOsmosisLockupLockedDenomResponse = Encoded<'/osmosis.lockup.LockedDenomResponse'>;
export type EncodedOsmosisLockupLockedRequest = Encoded<'/osmosis.lockup.LockedRequest'>;
export type EncodedOsmosisLockupLockedResponse = Encoded<'/osmosis.lockup.LockedResponse'>;
export type EncodedOsmosisLockupLockRewardReceiverRequest = Encoded<'/osmosis.lockup.LockRewardReceiverRequest'>;
export type EncodedOsmosisLockupLockRewardReceiverResponse = Encoded<'/osmosis.lockup.LockRewardReceiverResponse'>;
export type EncodedOsmosisLockupNextLockIDRequest = Encoded<'/osmosis.lockup.NextLockIDRequest'>;
export type EncodedOsmosisLockupNextLockIDResponse = Encoded<'/osmosis.lockup.NextLockIDResponse'>;
export type EncodedOsmosisLockupSyntheticLockupsByLockupIDRequest = Encoded<'/osmosis.lockup.SyntheticLockupsByLockupIDRequest'>;
export type EncodedOsmosisLockupSyntheticLockupsByLockupIDResponse = Encoded<'/osmosis.lockup.SyntheticLockupsByLockupIDResponse'>;
export type EncodedOsmosisLockupSyntheticLockupByLockupIDRequest = Encoded<'/osmosis.lockup.SyntheticLockupByLockupIDRequest'>;
export type EncodedOsmosisLockupSyntheticLockupByLockupIDResponse = Encoded<'/osmosis.lockup.SyntheticLockupByLockupIDResponse'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationRequest = Encoded<'/osmosis.lockup.AccountLockedLongerDurationRequest'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationResponse = Encoded<'/osmosis.lockup.AccountLockedLongerDurationResponse'>;
export type EncodedOsmosisLockupAccountLockedDurationRequest = Encoded<'/osmosis.lockup.AccountLockedDurationRequest'>;
export type EncodedOsmosisLockupAccountLockedDurationResponse = Encoded<'/osmosis.lockup.AccountLockedDurationResponse'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest = Encoded<'/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse = Encoded<'/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationDenomRequest = Encoded<'/osmosis.lockup.AccountLockedLongerDurationDenomRequest'>;
export type EncodedOsmosisLockupAccountLockedLongerDurationDenomResponse = Encoded<'/osmosis.lockup.AccountLockedLongerDurationDenomResponse'>;
export type EncodedOsmosisLockupQueryParamsRequest = Encoded<'/osmosis.lockup.QueryParamsRequest'>;
export type EncodedOsmosisLockupQueryParamsResponse = Encoded<'/osmosis.lockup.QueryParamsResponse'>;
/**
 * Return full balance of the module
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: coins - the 'coins' response property
 */
export declare const queryOsmosisLockupModuleBalance: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupModuleBalanceResponse>>;
/**
 * Return locked balance of the module
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: coins - the 'coins' response property
 */
export declare const queryOsmosisLockupModuleLockedAmount: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupModuleLockedAmountResponse>>;
/**
 * Returns unlockable coins which are not withdrawn yet
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @returns a tuple where:
 *   - 0: coins - the 'coins' response property
 */
export declare const queryOsmosisLockupAccountUnlockableCoins: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountUnlockableCoinsResponse>>;
/**
 * Returns unlocking coins
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @returns a tuple where:
 *   - 0: coins - the 'coins' response property
 */
export declare const queryOsmosisLockupAccountUnlockingCoins: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountUnlockingCoinsResponse>>;
/**
 * Return a locked coins that can't be withdrawn
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @returns a tuple where:
 *   - 0: coins - the 'coins' response property
 */
export declare const queryOsmosisLockupAccountLockedCoins: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedCoinsResponse>>;
/**
 * Returns locked records of an account with unlock time beyond timestamp
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_timestamp -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedPastTime: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_timestamp?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedPastTimeResponse>>;
/**
 * Returns locked records of an account with unlock time beyond timestamp excluding tokens started unlocking
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_timestamp -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedPastTimeNotUnlockingOnly: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_timestamp?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse>>;
/**
 * Returns unlocked records with unlock time before timestamp
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_timestamp -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountUnlockedBeforeTime: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_timestamp?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountUnlockedBeforeTimeResponse>>;
/**
 * Returns lock records by address, timestamp, denom
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_timestamp -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedPastTimeDenom: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_timestamp?: Opt<number>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedPastTimeDenomResponse>>;
/**
 * Returns total locked per denom with longer past given time
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @param xt_duration -
 * @returns a tuple where:
 *   - 0: amount - the 'amount' response property
 */
export declare const queryOsmosisLockupLockedDenom: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>, xt_duration?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupLockedDenomResponse>>;
/**
 * Returns lock record by id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: lock - the 'lock' response property
 */
export declare const queryOsmosisLockupLockedByID: (z_req: string | ({
    origin: string;
} & RequestInit), sg_lock_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupLockedResponse>>;
/**
 * Returns lock record by id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: reward_receiver - the 'reward_receiver' response property
 */
export declare const queryOsmosisLockupLockRewardReceiver: (z_req: string | ({
    origin: string;
} & RequestInit), sg_lock_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupLockRewardReceiverResponse>>;
/**
 * Returns next lock ID
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: lock_id - the 'lock_id' response property
 */
export declare const queryOsmosisLockupNextLockID: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupNextLockIDResponse>>;
/**
 * Returns synthetic lockup by native lockup id Deprecated: use SyntheticLockupByLockupID instead
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: synthetic_locks - the 'synthetic_locks' response property
 */
export declare const queryOsmosisLockupSyntheticLockupsByLockupID: (z_req: string | ({
    origin: string;
} & RequestInit), sg_lock_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupSyntheticLockupsByLockupIDResponse>>;
/**
 * Returns synthetic lockup by native lockup id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: synthetic_lock - the 'synthetic_lock' response property
 */
export declare const queryOsmosisLockupSyntheticLockupByLockupID: (z_req: string | ({
    origin: string;
} & RequestInit), sg_lock_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupSyntheticLockupByLockupIDResponse>>;
/**
 * Returns account locked records with longer duration
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_duration -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedLongerDuration: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_duration?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedLongerDurationResponse>>;
/**
 * Returns account locked records with a specific duration
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_duration -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedDuration: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_duration?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedDurationResponse>>;
/**
 * Returns account locked records with longer duration excluding tokens started unlocking
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_duration -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedLongerDurationNotUnlockingOnly: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_duration?: Opt<number>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse>>;
/**
 * Returns account's locked records for a denom with longer duration
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param xt_duration -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: locks - the 'locks' response property
 */
export declare const queryOsmosisLockupAccountLockedLongerDurationDenom: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, xt_duration?: Opt<number>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupAccountLockedLongerDurationDenomResponse>>;
/**
 * Returns lockup params.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryOsmosisLockupParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisLockupQueryParamsResponse>>;
/**
 * Encodes a `ModuleBalanceRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupModuleBalanceRequest: () => EncodedOsmosisLockupModuleBalanceRequest;
/**
 * Encodes a `ModuleBalanceResponse` protobuf message:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupModuleBalanceResponse: (a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupModuleBalanceResponse;
/**
 * Encodes a `ModuleLockedAmountRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupModuleLockedAmountRequest: () => EncodedOsmosisLockupModuleLockedAmountRequest;
/**
 * Encodes a `ModuleLockedAmountResponse` protobuf message:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupModuleLockedAmountResponse: (a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupModuleLockedAmountResponse;
/**
 * Encodes a `AccountUnlockableCoinsRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockableCoinsRequest: (sa_owner?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupAccountUnlockableCoinsRequest;
/**
 * Encodes a `AccountUnlockableCoinsResponse` protobuf message:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockableCoinsResponse: (a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupAccountUnlockableCoinsResponse;
/**
 * Encodes a `AccountUnlockingCoinsRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockingCoinsRequest: (sa_owner?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupAccountUnlockingCoinsRequest;
/**
 * Encodes a `AccountUnlockingCoinsResponse` protobuf message:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockingCoinsResponse: (a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupAccountUnlockingCoinsResponse;
/**
 * Encodes a `AccountLockedCoinsRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedCoinsRequest: (sa_owner?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupAccountLockedCoinsRequest;
/**
 * Encodes a `AccountLockedCoinsResponse` protobuf message:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedCoinsResponse: (a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupAccountLockedCoinsResponse;
/**
 * Encodes a `AccountLockedPastTimeRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_timestamp - `timestamp`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_timestamp?: Opt<number>) => EncodedOsmosisLockupAccountLockedPastTimeRequest;
/**
 * Encodes a `AccountLockedPastTimeResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedPastTimeResponse;
/**
 * Encodes a `AccountLockedPastTimeNotUnlockingOnlyRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_timestamp - `timestamp`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_timestamp?: Opt<number>) => EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest;
/**
 * Encodes a `AccountLockedPastTimeNotUnlockingOnlyResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse;
/**
 * Encodes a `AccountUnlockedBeforeTimeRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_timestamp - `timestamp`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockedBeforeTimeRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_timestamp?: Opt<number>) => EncodedOsmosisLockupAccountUnlockedBeforeTimeRequest;
/**
 * Encodes a `AccountUnlockedBeforeTimeResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountUnlockedBeforeTimeResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountUnlockedBeforeTimeResponse;
/**
 * Encodes a `AccountLockedPastTimeDenomRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_timestamp - `timestamp`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeDenomRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_timestamp?: Opt<number>, s_denom?: Opt<string>) => EncodedOsmosisLockupAccountLockedPastTimeDenomRequest;
/**
 * Encodes a `AccountLockedPastTimeDenomResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedPastTimeDenomResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedPastTimeDenomResponse;
/**
 * Encodes a `LockedDenomRequest` protobuf message:
 * @param s_denom - `denom`:
 * @param xt_duration - `duration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockedDenomRequest: (s_denom?: Opt<string>, xt_duration?: Opt<number>) => EncodedOsmosisLockupLockedDenomRequest;
/**
 * Encodes a `LockedDenomResponse` protobuf message:
 * @param s_amount - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockedDenomResponse: (s_amount?: Opt<string>) => EncodedOsmosisLockupLockedDenomResponse;
/**
 * Encodes a `LockedRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockedRequest: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisLockupLockedRequest;
/**
 * Encodes a `LockedResponse` protobuf message:
 * @param g_lock - `lock`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockedResponse: (atu8_lock?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>>) => EncodedOsmosisLockupLockedResponse;
/**
 * Encodes a `LockRewardReceiverRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockRewardReceiverRequest: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisLockupLockRewardReceiverRequest;
/**
 * Encodes a `LockRewardReceiverResponse` protobuf message:
 * @param sa_reward_receiver - `reward_receiver`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupLockRewardReceiverResponse: (sa_reward_receiver?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupLockRewardReceiverResponse;
/**
 * Encodes a `NextLockIDRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupNextLockIDRequest: () => EncodedOsmosisLockupNextLockIDRequest;
/**
 * Encodes a `NextLockIDResponse` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupNextLockIDResponse: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisLockupNextLockIDResponse;
/**
 * Encodes a `SyntheticLockupsByLockupIDRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupSyntheticLockupsByLockupIDRequest: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisLockupSyntheticLockupsByLockupIDRequest;
/**
 * Encodes a `SyntheticLockupsByLockupIDResponse` protobuf message:
 * @param a_synthetic_locks - `synthetic_locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupSyntheticLockupsByLockupIDResponse: (a_synthetic_locks?: Opt<Encoded<'/osmosis.lockup.SyntheticLock'>[]>) => EncodedOsmosisLockupSyntheticLockupsByLockupIDResponse;
/**
 * Encodes a `SyntheticLockupByLockupIDRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupSyntheticLockupByLockupIDRequest: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisLockupSyntheticLockupByLockupIDRequest;
/**
 * Encodes a `SyntheticLockupByLockupIDResponse` protobuf message:
 * @param g_synthetic_lock - `synthetic_lock`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupSyntheticLockupByLockupIDResponse: (atu8_synthetic_lock?: Opt<Encoded<'/osmosis.lockup.SyntheticLock'>>) => EncodedOsmosisLockupSyntheticLockupByLockupIDResponse;
/**
 * Encodes a `AccountLockedLongerDurationRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_duration - `duration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_duration?: Opt<number>) => EncodedOsmosisLockupAccountLockedLongerDurationRequest;
/**
 * Encodes a `AccountLockedLongerDurationResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedLongerDurationResponse;
/**
 * Encodes a `AccountLockedDurationRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_duration - `duration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedDurationRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_duration?: Opt<number>) => EncodedOsmosisLockupAccountLockedDurationRequest;
/**
 * Encodes a `AccountLockedDurationResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedDurationResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedDurationResponse;
/**
 * Encodes a `AccountLockedLongerDurationNotUnlockingOnlyRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_duration - `duration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_duration?: Opt<number>) => EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest;
/**
 * Encodes a `AccountLockedLongerDurationNotUnlockingOnlyResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse;
/**
 * Encodes a `AccountLockedLongerDurationDenomRequest` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_duration - `duration`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationDenomRequest: (sa_owner?: Opt<WeakAccountAddr>, xt_duration?: Opt<number>, s_denom?: Opt<string>) => EncodedOsmosisLockupAccountLockedLongerDurationDenomRequest;
/**
 * Encodes a `AccountLockedLongerDurationDenomResponse` protobuf message:
 * @param a_locks - `locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupAccountLockedLongerDurationDenomResponse: (a_locks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupAccountLockedLongerDurationDenomResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupQueryParamsRequest: () => EncodedOsmosisLockupQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupQueryParamsResponse: (atu8_params?: Opt<Encoded<'/osmosis.lockup.Params'>>) => EncodedOsmosisLockupQueryParamsResponse;
/**
 * A decoded protobuf ModuleBalanceRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisLockupModuleBalanceRequest = [];
/**
 * Decodes a protobuf ModuleBalanceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupModuleBalanceRequest}
 */
export declare const decodeOsmosisLockupModuleBalanceRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ModuleBalance message
 *
 * Alias for: coins -
 */
export type DecodedOsmosisLockupModuleBalanceResponse = [
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf ModuleBalance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupModuleBalanceResponse}
 */
export declare const decodeOsmosisLockupModuleBalanceResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupModuleBalanceResponse;
/**
 * A decoded protobuf ModuleLockedAmountRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisLockupModuleLockedAmountRequest = [];
/**
 * Decodes a protobuf ModuleLockedAmountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupModuleLockedAmountRequest}
 */
export declare const decodeOsmosisLockupModuleLockedAmountRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ModuleLockedAmount message
 *
 * Alias for: coins -
 */
export type DecodedOsmosisLockupModuleLockedAmountResponse = [
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf ModuleLockedAmount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupModuleLockedAmountResponse}
 */
export declare const decodeOsmosisLockupModuleLockedAmountResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupModuleLockedAmountResponse;
/**
 * A decoded protobuf AccountUnlockableCoinsRequest message
 *
 * Alias for: owner -
 */
export type DecodedOsmosisLockupAccountUnlockableCoinsRequest = [
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf AccountUnlockableCoinsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockableCoinsRequest}
 */
export declare const decodeOsmosisLockupAccountUnlockableCoinsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockableCoinsRequest;
/**
 * A decoded protobuf AccountUnlockableCoins message
 *
 * Alias for: coins -
 */
export type DecodedOsmosisLockupAccountUnlockableCoinsResponse = [
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf AccountUnlockableCoins message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockableCoinsResponse}
 */
export declare const decodeOsmosisLockupAccountUnlockableCoinsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockableCoinsResponse;
/**
 * A decoded protobuf AccountUnlockingCoinsRequest message
 *
 * Alias for: owner -
 */
export type DecodedOsmosisLockupAccountUnlockingCoinsRequest = [
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf AccountUnlockingCoinsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockingCoinsRequest}
 */
export declare const decodeOsmosisLockupAccountUnlockingCoinsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockingCoinsRequest;
/**
 * A decoded protobuf AccountUnlockingCoins message
 *
 * Alias for: coins -
 */
export type DecodedOsmosisLockupAccountUnlockingCoinsResponse = [
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf AccountUnlockingCoins message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockingCoinsResponse}
 */
export declare const decodeOsmosisLockupAccountUnlockingCoinsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockingCoinsResponse;
/**
 * A decoded protobuf AccountLockedCoinsRequest message
 *
 * Alias for: owner -
 */
export type DecodedOsmosisLockupAccountLockedCoinsRequest = [
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf AccountLockedCoinsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedCoinsRequest}
 */
export declare const decodeOsmosisLockupAccountLockedCoinsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedCoinsRequest;
/**
 * A decoded protobuf AccountLockedCoins message
 *
 * Alias for: coins -
 */
export type DecodedOsmosisLockupAccountLockedCoinsResponse = [
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf AccountLockedCoins message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedCoinsResponse}
 */
export declare const decodeOsmosisLockupAccountLockedCoinsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedCoinsResponse;
/**
 * A decoded protobuf AccountLockedPastTimeRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeRequest = [
    sa_owner?: CwAccountAddr,
    a_timestamp?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountLockedPastTimeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeRequest}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeRequest;
/**
 * A decoded protobuf AccountLockedPastTime message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedPastTime message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeResponse}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeResponse;
/**
 * A decoded protobuf AccountLockedPastTimeNotUnlockingOnlyRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest = [
    sa_owner?: CwAccountAddr,
    a_timestamp?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountLockedPastTimeNotUnlockingOnlyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest;
/**
 * A decoded protobuf AccountLockedPastTimeNotUnlockingOnly message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedPastTimeNotUnlockingOnly message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse;
/**
 * A decoded protobuf AccountUnlockedBeforeTimeRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export type DecodedOsmosisLockupAccountUnlockedBeforeTimeRequest = [
    sa_owner?: CwAccountAddr,
    a_timestamp?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountUnlockedBeforeTimeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockedBeforeTimeRequest}
 */
export declare const decodeOsmosisLockupAccountUnlockedBeforeTimeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockedBeforeTimeRequest;
/**
 * A decoded protobuf AccountUnlockedBeforeTime message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountUnlockedBeforeTimeResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountUnlockedBeforeTime message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountUnlockedBeforeTimeResponse}
 */
export declare const decodeOsmosisLockupAccountUnlockedBeforeTimeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountUnlockedBeforeTimeResponse;
/**
 * A decoded protobuf AccountLockedPastTimeDenomRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 *   - 2: denom -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeDenomRequest = [
    sa_owner?: CwAccountAddr,
    a_timestamp?: [
        string,
        number
    ],
    s_denom?: string
];
/**
 * Decodes a protobuf AccountLockedPastTimeDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeDenomRequest}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeDenomRequest;
/**
 * A decoded protobuf AccountLockedPastTimeDenom message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedPastTimeDenomResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedPastTimeDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedPastTimeDenomResponse}
 */
export declare const decodeOsmosisLockupAccountLockedPastTimeDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedPastTimeDenomResponse;
/**
 * A decoded protobuf LockedDenomRequest message
 *
 * Tuple where:
 *   - 0: denom -
 *   - 1: duration -
 */
export type DecodedOsmosisLockupLockedDenomRequest = [
    s_denom?: string,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf LockedDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockedDenomRequest}
 */
export declare const decodeOsmosisLockupLockedDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockedDenomRequest;
/**
 * A decoded protobuf LockedDenom message
 *
 * Alias for: amount -
 */
export type DecodedOsmosisLockupLockedDenomResponse = [
    s_amount?: string
];
/**
 * Decodes a protobuf LockedDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockedDenomResponse}
 */
export declare const decodeOsmosisLockupLockedDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockedDenomResponse;
/**
 * A decoded protobuf LockedRequest message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisLockupLockedRequest = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf LockedRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockedRequest}
 */
export declare const decodeOsmosisLockupLockedRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockedRequest;
/**
 * A decoded protobuf Locked message
 *
 * Alias for: lock -
 */
export type DecodedOsmosisLockupLockedResponse = [
    a_lock?: DecodedOsmosisLockupPeriodLock
];
/**
 * Decodes a protobuf Locked message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockedResponse}
 */
export declare const decodeOsmosisLockupLockedResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockedResponse;
/**
 * A decoded protobuf LockRewardReceiverRequest message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisLockupLockRewardReceiverRequest = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf LockRewardReceiverRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockRewardReceiverRequest}
 */
export declare const decodeOsmosisLockupLockRewardReceiverRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockRewardReceiverRequest;
/**
 * A decoded protobuf LockRewardReceiver message
 *
 * Alias for: reward_receiver -
 */
export type DecodedOsmosisLockupLockRewardReceiverResponse = [
    sa_reward_receiver?: CwAccountAddr
];
/**
 * Decodes a protobuf LockRewardReceiver message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupLockRewardReceiverResponse}
 */
export declare const decodeOsmosisLockupLockRewardReceiverResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupLockRewardReceiverResponse;
/**
 * A decoded protobuf NextLockIDRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisLockupNextLockIDRequest = [];
/**
 * Decodes a protobuf NextLockIDRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupNextLockIDRequest}
 */
export declare const decodeOsmosisLockupNextLockIDRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf NextLockID message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisLockupNextLockIDResponse = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf NextLockID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupNextLockIDResponse}
 */
export declare const decodeOsmosisLockupNextLockIDResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupNextLockIDResponse;
/**
 * A decoded protobuf SyntheticLockupsByLockupIDRequest message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisLockupSyntheticLockupsByLockupIDRequest = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf SyntheticLockupsByLockupIDRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupSyntheticLockupsByLockupIDRequest}
 */
export declare const decodeOsmosisLockupSyntheticLockupsByLockupIDRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupSyntheticLockupsByLockupIDRequest;
/**
 * A decoded protobuf SyntheticLockupsByLockupID message
 *
 * Alias for: synthetic_locks -
 */
export type DecodedOsmosisLockupSyntheticLockupsByLockupIDResponse = [
    a_synthetic_locks?: DecodedOsmosisLockupSyntheticLock[]
];
/**
 * Decodes a protobuf SyntheticLockupsByLockupID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupSyntheticLockupsByLockupIDResponse}
 */
export declare const decodeOsmosisLockupSyntheticLockupsByLockupIDResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupSyntheticLockupsByLockupIDResponse;
/**
 * A decoded protobuf SyntheticLockupByLockupIDRequest message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisLockupSyntheticLockupByLockupIDRequest = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf SyntheticLockupByLockupIDRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupSyntheticLockupByLockupIDRequest}
 */
export declare const decodeOsmosisLockupSyntheticLockupByLockupIDRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupSyntheticLockupByLockupIDRequest;
/**
 * A decoded protobuf SyntheticLockupByLockupID message
 *
 * Alias for: synthetic_lock -
 */
export type DecodedOsmosisLockupSyntheticLockupByLockupIDResponse = [
    a_synthetic_lock?: DecodedOsmosisLockupSyntheticLock
];
/**
 * Decodes a protobuf SyntheticLockupByLockupID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupSyntheticLockupByLockupIDResponse}
 */
export declare const decodeOsmosisLockupSyntheticLockupByLockupIDResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupSyntheticLockupByLockupIDResponse;
/**
 * A decoded protobuf AccountLockedLongerDurationRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationRequest = [
    sa_owner?: CwAccountAddr,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountLockedLongerDurationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationRequest}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationRequest;
/**
 * A decoded protobuf AccountLockedLongerDuration message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedLongerDuration message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationResponse}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationResponse;
/**
 * A decoded protobuf AccountLockedDurationRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export type DecodedOsmosisLockupAccountLockedDurationRequest = [
    sa_owner?: CwAccountAddr,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountLockedDurationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedDurationRequest}
 */
export declare const decodeOsmosisLockupAccountLockedDurationRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedDurationRequest;
/**
 * A decoded protobuf AccountLockedDuration message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedDurationResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedDuration message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedDurationResponse}
 */
export declare const decodeOsmosisLockupAccountLockedDurationResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedDurationResponse;
/**
 * A decoded protobuf AccountLockedLongerDurationNotUnlockingOnlyRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest = [
    sa_owner?: CwAccountAddr,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf AccountLockedLongerDurationNotUnlockingOnlyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest;
/**
 * A decoded protobuf AccountLockedLongerDurationNotUnlockingOnly message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedLongerDurationNotUnlockingOnly message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse;
/**
 * A decoded protobuf AccountLockedLongerDurationDenomRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: duration -
 *   - 2: denom -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationDenomRequest = [
    sa_owner?: CwAccountAddr,
    a_duration?: [
        string,
        number
    ],
    s_denom?: string
];
/**
 * Decodes a protobuf AccountLockedLongerDurationDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationDenomRequest}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationDenomRequest;
/**
 * A decoded protobuf AccountLockedLongerDurationDenom message
 *
 * Alias for: locks -
 */
export type DecodedOsmosisLockupAccountLockedLongerDurationDenomResponse = [
    a_locks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf AccountLockedLongerDurationDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupAccountLockedLongerDurationDenomResponse}
 */
export declare const decodeOsmosisLockupAccountLockedLongerDurationDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupAccountLockedLongerDurationDenomResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisLockupQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupQueryParamsRequest}
 */
export declare const decodeOsmosisLockupQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params -
 */
export type DecodedOsmosisLockupQueryParamsResponse = [
    a_params?: DecodedOsmosisLockupParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupQueryParamsResponse}
 */
export declare const decodeOsmosisLockupQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupQueryParamsResponse;
/**
 * Destructures the fields of a {@link OsmosisLockupModuleBalanceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisLockupModuleBalanceRequest: (g_struct: OsmosisLockupModuleBalanceRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MODULE_BALANCE_REQUEST = "/osmosis.lockup.ModuleBalanceRequest";
/**
 * JSON serialization of `osmosis.lockup.ModuleBalanceRequest` -
 */
export type OsmosisLockupModuleBalanceRequest = {};
/**
 * Destructures the fields of a {@link OsmosisLockupModuleBalanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: coins -
 */
export declare const destructOsmosisLockupModuleBalanceResponse: (g_struct: OsmosisLockupModuleBalanceResponse) => [coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MODULE_BALANCE_RESPONSE = "/osmosis.lockup.ModuleBalanceResponse";
/**
 * JSON serialization of `osmosis.lockup.ModuleBalanceResponse` -
 */
export type OsmosisLockupModuleBalanceResponse = {
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupModuleLockedAmountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisLockupModuleLockedAmountRequest: (g_struct: OsmosisLockupModuleLockedAmountRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MODULE_LOCKED_AMOUNT_REQUEST = "/osmosis.lockup.ModuleLockedAmountRequest";
/**
 * JSON serialization of `osmosis.lockup.ModuleLockedAmountRequest` -
 */
export type OsmosisLockupModuleLockedAmountRequest = {};
/**
 * Destructures the fields of a {@link OsmosisLockupModuleLockedAmountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: coins -
 */
export declare const destructOsmosisLockupModuleLockedAmountResponse: (g_struct: OsmosisLockupModuleLockedAmountResponse) => [coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MODULE_LOCKED_AMOUNT_RESPONSE = "/osmosis.lockup.ModuleLockedAmountResponse";
/**
 * JSON serialization of `osmosis.lockup.ModuleLockedAmountResponse` -
 */
export type OsmosisLockupModuleLockedAmountResponse = {
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockableCoinsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 */
export declare const destructOsmosisLockupAccountUnlockableCoinsRequest: (g_struct: OsmosisLockupAccountUnlockableCoinsRequest) => [owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKABLE_COINS_REQUEST = "/osmosis.lockup.AccountUnlockableCoinsRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockableCoinsRequest` -
 */
export type OsmosisLockupAccountUnlockableCoinsRequest = {
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockableCoinsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: coins -
 */
export declare const destructOsmosisLockupAccountUnlockableCoinsResponse: (g_struct: OsmosisLockupAccountUnlockableCoinsResponse) => [coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKABLE_COINS_RESPONSE = "/osmosis.lockup.AccountUnlockableCoinsResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockableCoinsResponse` -
 */
export type OsmosisLockupAccountUnlockableCoinsResponse = {
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockingCoinsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 */
export declare const destructOsmosisLockupAccountUnlockingCoinsRequest: (g_struct: OsmosisLockupAccountUnlockingCoinsRequest) => [owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKING_COINS_REQUEST = "/osmosis.lockup.AccountUnlockingCoinsRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockingCoinsRequest` -
 */
export type OsmosisLockupAccountUnlockingCoinsRequest = {
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockingCoinsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: coins -
 */
export declare const destructOsmosisLockupAccountUnlockingCoinsResponse: (g_struct: OsmosisLockupAccountUnlockingCoinsResponse) => [coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKING_COINS_RESPONSE = "/osmosis.lockup.AccountUnlockingCoinsResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockingCoinsResponse` -
 */
export type OsmosisLockupAccountUnlockingCoinsResponse = {
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedCoinsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 */
export declare const destructOsmosisLockupAccountLockedCoinsRequest: (g_struct: OsmosisLockupAccountLockedCoinsRequest) => [owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_COINS_REQUEST = "/osmosis.lockup.AccountLockedCoinsRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedCoinsRequest` -
 */
export type OsmosisLockupAccountLockedCoinsRequest = {
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedCoinsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: coins -
 */
export declare const destructOsmosisLockupAccountLockedCoinsResponse: (g_struct: OsmosisLockupAccountLockedCoinsResponse) => [coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_COINS_RESPONSE = "/osmosis.lockup.AccountLockedCoinsResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedCoinsResponse` -
 */
export type OsmosisLockupAccountLockedCoinsResponse = {
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeRequest: (g_struct: OsmosisLockupAccountLockedPastTimeRequest) => [owner?: CwAccountAddr, timestamp?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_REQUEST = "/osmosis.lockup.AccountLockedPastTimeRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeRequest` -
 */
export type OsmosisLockupAccountLockedPastTimeRequest = {
    owner?: CwAccountAddr | undefined;
    timestamp?: WeakTimestampStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeResponse: (g_struct: OsmosisLockupAccountLockedPastTimeResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_RESPONSE = "/osmosis.lockup.AccountLockedPastTimeResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeResponse` -
 */
export type OsmosisLockupAccountLockedPastTimeResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest: (g_struct: OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest) => [owner?: CwAccountAddr, timestamp?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_NOT_UNLOCKING_ONLY_REQUEST = "/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest` -
 */
export type OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest = {
    owner?: CwAccountAddr | undefined;
    timestamp?: WeakTimestampStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse: (g_struct: OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_NOT_UNLOCKING_ONLY_RESPONSE = "/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse` -
 */
export type OsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockedBeforeTimeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 */
export declare const destructOsmosisLockupAccountUnlockedBeforeTimeRequest: (g_struct: OsmosisLockupAccountUnlockedBeforeTimeRequest) => [owner?: CwAccountAddr, timestamp?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKED_BEFORE_TIME_REQUEST = "/osmosis.lockup.AccountUnlockedBeforeTimeRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockedBeforeTimeRequest` -
 */
export type OsmosisLockupAccountUnlockedBeforeTimeRequest = {
    owner?: CwAccountAddr | undefined;
    timestamp?: WeakTimestampStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountUnlockedBeforeTimeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountUnlockedBeforeTimeResponse: (g_struct: OsmosisLockupAccountUnlockedBeforeTimeResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_UNLOCKED_BEFORE_TIME_RESPONSE = "/osmosis.lockup.AccountUnlockedBeforeTimeResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountUnlockedBeforeTimeResponse` -
 */
export type OsmosisLockupAccountUnlockedBeforeTimeResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: timestamp -
 *   - 2: denom -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeDenomRequest: (g_struct: OsmosisLockupAccountLockedPastTimeDenomRequest) => [owner?: CwAccountAddr, timestamp?: number, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_DENOM_REQUEST = "/osmosis.lockup.AccountLockedPastTimeDenomRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeDenomRequest` -
 */
export type OsmosisLockupAccountLockedPastTimeDenomRequest = {
    owner?: CwAccountAddr | undefined;
    timestamp?: WeakTimestampStr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedPastTimeDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedPastTimeDenomResponse: (g_struct: OsmosisLockupAccountLockedPastTimeDenomResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_PAST_TIME_DENOM_RESPONSE = "/osmosis.lockup.AccountLockedPastTimeDenomResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedPastTimeDenomResponse` -
 */
export type OsmosisLockupAccountLockedPastTimeDenomResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockedDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: duration -
 */
export declare const destructOsmosisLockupLockedDenomRequest: (g_struct: OsmosisLockupLockedDenomRequest) => [denom?: string, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCKED_DENOM_REQUEST = "/osmosis.lockup.LockedDenomRequest";
/**
 * JSON serialization of `osmosis.lockup.LockedDenomRequest` -
 */
export type OsmosisLockupLockedDenomRequest = {
    denom?: string | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockedDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount -
 */
export declare const destructOsmosisLockupLockedDenomResponse: (g_struct: OsmosisLockupLockedDenomResponse) => [amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCKED_DENOM_RESPONSE = "/osmosis.lockup.LockedDenomResponse";
/**
 * JSON serialization of `osmosis.lockup.LockedDenomResponse` -
 */
export type OsmosisLockupLockedDenomResponse = {
    amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockedRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisLockupLockedRequest: (g_struct: OsmosisLockupLockedRequest) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCKED_REQUEST = "/osmosis.lockup.LockedRequest";
/**
 * JSON serialization of `osmosis.lockup.LockedRequest` -
 */
export type OsmosisLockupLockedRequest = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockedResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock -
 */
export declare const destructOsmosisLockupLockedResponse: (g_struct: OsmosisLockupLockedResponse) => [lock?: OsmosisLockupPeriodLock];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCKED_RESPONSE = "/osmosis.lockup.LockedResponse";
/**
 * JSON serialization of `osmosis.lockup.LockedResponse` -
 */
export type OsmosisLockupLockedResponse = {
    lock?: OsmosisLockupPeriodLock | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockRewardReceiverRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisLockupLockRewardReceiverRequest: (g_struct: OsmosisLockupLockRewardReceiverRequest) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCK_REWARD_RECEIVER_REQUEST = "/osmosis.lockup.LockRewardReceiverRequest";
/**
 * JSON serialization of `osmosis.lockup.LockRewardReceiverRequest` -
 */
export type OsmosisLockupLockRewardReceiverRequest = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupLockRewardReceiverResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: reward_receiver -
 */
export declare const destructOsmosisLockupLockRewardReceiverResponse: (g_struct: OsmosisLockupLockRewardReceiverResponse) => [reward_receiver?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_LOCK_REWARD_RECEIVER_RESPONSE = "/osmosis.lockup.LockRewardReceiverResponse";
/**
 * JSON serialization of `osmosis.lockup.LockRewardReceiverResponse` -
 */
export type OsmosisLockupLockRewardReceiverResponse = {
    reward_receiver?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupNextLockIDRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisLockupNextLockIDRequest: (g_struct: OsmosisLockupNextLockIDRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_NEXT_LOCK_I_D_REQUEST = "/osmosis.lockup.NextLockIDRequest";
/**
 * JSON serialization of `osmosis.lockup.NextLockIDRequest` -
 */
export type OsmosisLockupNextLockIDRequest = {};
/**
 * Destructures the fields of a {@link OsmosisLockupNextLockIDResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisLockupNextLockIDResponse: (g_struct: OsmosisLockupNextLockIDResponse) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_NEXT_LOCK_I_D_RESPONSE = "/osmosis.lockup.NextLockIDResponse";
/**
 * JSON serialization of `osmosis.lockup.NextLockIDResponse` -
 */
export type OsmosisLockupNextLockIDResponse = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupSyntheticLockupsByLockupIDRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisLockupSyntheticLockupsByLockupIDRequest: (g_struct: OsmosisLockupSyntheticLockupsByLockupIDRequest) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_SYNTHETIC_LOCKUPS_BY_LOCKUP_I_D_REQUEST = "/osmosis.lockup.SyntheticLockupsByLockupIDRequest";
/**
 * JSON serialization of `osmosis.lockup.SyntheticLockupsByLockupIDRequest` -
 */
export type OsmosisLockupSyntheticLockupsByLockupIDRequest = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupSyntheticLockupsByLockupIDResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: synthetic_locks -
 */
export declare const destructOsmosisLockupSyntheticLockupsByLockupIDResponse: (g_struct: OsmosisLockupSyntheticLockupsByLockupIDResponse) => [synthetic_locks?: OsmosisLockupSyntheticLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_SYNTHETIC_LOCKUPS_BY_LOCKUP_I_D_RESPONSE = "/osmosis.lockup.SyntheticLockupsByLockupIDResponse";
/**
 * JSON serialization of `osmosis.lockup.SyntheticLockupsByLockupIDResponse` -
 */
export type OsmosisLockupSyntheticLockupsByLockupIDResponse = {
    synthetic_locks?: OsmosisLockupSyntheticLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupSyntheticLockupByLockupIDRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisLockupSyntheticLockupByLockupIDRequest: (g_struct: OsmosisLockupSyntheticLockupByLockupIDRequest) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_SYNTHETIC_LOCKUP_BY_LOCKUP_I_D_REQUEST = "/osmosis.lockup.SyntheticLockupByLockupIDRequest";
/**
 * JSON serialization of `osmosis.lockup.SyntheticLockupByLockupIDRequest` -
 */
export type OsmosisLockupSyntheticLockupByLockupIDRequest = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupSyntheticLockupByLockupIDResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: synthetic_lock -
 */
export declare const destructOsmosisLockupSyntheticLockupByLockupIDResponse: (g_struct: OsmosisLockupSyntheticLockupByLockupIDResponse) => [synthetic_lock?: OsmosisLockupSyntheticLock];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_SYNTHETIC_LOCKUP_BY_LOCKUP_I_D_RESPONSE = "/osmosis.lockup.SyntheticLockupByLockupIDResponse";
/**
 * JSON serialization of `osmosis.lockup.SyntheticLockupByLockupIDResponse` -
 */
export type OsmosisLockupSyntheticLockupByLockupIDResponse = {
    synthetic_lock?: OsmosisLockupSyntheticLock | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationRequest: (g_struct: OsmosisLockupAccountLockedLongerDurationRequest) => [owner?: CwAccountAddr, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_REQUEST = "/osmosis.lockup.AccountLockedLongerDurationRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationRequest` -
 */
export type OsmosisLockupAccountLockedLongerDurationRequest = {
    owner?: CwAccountAddr | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationResponse: (g_struct: OsmosisLockupAccountLockedLongerDurationResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_RESPONSE = "/osmosis.lockup.AccountLockedLongerDurationResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationResponse` -
 */
export type OsmosisLockupAccountLockedLongerDurationResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedDurationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export declare const destructOsmosisLockupAccountLockedDurationRequest: (g_struct: OsmosisLockupAccountLockedDurationRequest) => [owner?: CwAccountAddr, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_DURATION_REQUEST = "/osmosis.lockup.AccountLockedDurationRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedDurationRequest` -
 */
export type OsmosisLockupAccountLockedDurationRequest = {
    owner?: CwAccountAddr | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedDurationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedDurationResponse: (g_struct: OsmosisLockupAccountLockedDurationResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_DURATION_RESPONSE = "/osmosis.lockup.AccountLockedDurationResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedDurationResponse` -
 */
export type OsmosisLockupAccountLockedDurationResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: duration -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest: (g_struct: OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest) => [owner?: CwAccountAddr, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_NOT_UNLOCKING_ONLY_REQUEST = "/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest` -
 */
export type OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest = {
    owner?: CwAccountAddr | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse: (g_struct: OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_NOT_UNLOCKING_ONLY_RESPONSE = "/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse` -
 */
export type OsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: duration -
 *   - 2: denom -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationDenomRequest: (g_struct: OsmosisLockupAccountLockedLongerDurationDenomRequest) => [owner?: CwAccountAddr, duration?: number, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_DENOM_REQUEST = "/osmosis.lockup.AccountLockedLongerDurationDenomRequest";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationDenomRequest` -
 */
export type OsmosisLockupAccountLockedLongerDurationDenomRequest = {
    owner?: CwAccountAddr | undefined;
    duration?: WeakDurationStr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupAccountLockedLongerDurationDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: locks -
 */
export declare const destructOsmosisLockupAccountLockedLongerDurationDenomResponse: (g_struct: OsmosisLockupAccountLockedLongerDurationDenomResponse) => [locks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_ACCOUNT_LOCKED_LONGER_DURATION_DENOM_RESPONSE = "/osmosis.lockup.AccountLockedLongerDurationDenomResponse";
/**
 * JSON serialization of `osmosis.lockup.AccountLockedLongerDurationDenomResponse` -
 */
export type OsmosisLockupAccountLockedLongerDurationDenomResponse = {
    locks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisLockupQueryParamsRequest: (g_struct: OsmosisLockupQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_QUERY_PARAMS_REQUEST = "/osmosis.lockup.QueryParamsRequest";
/**
 * JSON serialization of `osmosis.lockup.QueryParamsRequest` -
 */
export type OsmosisLockupQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisLockupQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisLockupQueryParamsResponse: (g_struct: OsmosisLockupQueryParamsResponse) => [params?: OsmosisLockupParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_QUERY_PARAMS_RESPONSE = "/osmosis.lockup.QueryParamsResponse";
/**
 * JSON serialization of `osmosis.lockup.QueryParamsResponse` -
 */
export type OsmosisLockupQueryParamsResponse = {
    params?: OsmosisLockupParams | undefined;
};
