import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt, WeakDurationStr } from '../../../../api/types.js';
export type EncodedOsmosisPoolincentivesParams = Encoded<'/osmosis.poolincentives.v1beta1.Params'>;
export type EncodedOsmosisPoolincentivesLockableDurationsInfo = Encoded<'/osmosis.poolincentives.v1beta1.LockableDurationsInfo'>;
export type EncodedOsmosisPoolincentivesDistrInfo = Encoded<'/osmosis.poolincentives.v1beta1.DistrInfo'>;
export type EncodedOsmosisPoolincentivesDistrRecord = Encoded<'/osmosis.poolincentives.v1beta1.DistrRecord'>;
export type EncodedOsmosisPoolincentivesPoolToGauge = Encoded<'/osmosis.poolincentives.v1beta1.PoolToGauge'>;
export type EncodedOsmosisPoolincentivesAnyPoolToInternalGauges = Encoded<'/osmosis.poolincentives.v1beta1.AnyPoolToInternalGauges'>;
export type EncodedOsmosisPoolincentivesConcentratedPoolToNoLockGauges = Encoded<'/osmosis.poolincentives.v1beta1.ConcentratedPoolToNoLockGauges'>;
/**
 * Encodes a `Params` protobuf message:
 * @param s_minted_denom - `minted_denom`: the denomination of the coin expected to be minted by the minting module. Pool-incentives module doesn’t actually mint the coin itself, but rather manages the distribution of coins that matches the defined minted_denom.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesParams: (s_minted_denom?: Opt<string>) => EncodedOsmosisPoolincentivesParams;
/**
 * Encodes a `LockableDurationsInfo` protobuf message:
 * @param a_lockable_durations - `lockable_durations`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesLockableDurationsInfo: (a_lockable_durations?: Opt<number[]>) => EncodedOsmosisPoolincentivesLockableDurationsInfo;
/**
 * Encodes a `DistrInfo` protobuf message:
 * @param s_total_weight - `total_weight`:
 * @param a_records - `records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesDistrInfo: (s_total_weight?: Opt<string>, a_records?: Opt<Encoded<'/osmosis.poolincentives.v1beta1.DistrRecord'>[]>) => EncodedOsmosisPoolincentivesDistrInfo;
/**
 * Encodes a `DistrRecord` protobuf message:
 * @param sg_gauge_id - `gauge_id`:
 * @param s_weight - `weight`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesDistrRecord: (sg_gauge_id?: Opt<WeakUint64Str>, s_weight?: Opt<string>) => EncodedOsmosisPoolincentivesDistrRecord;
/**
 * Encodes a `PoolToGauge` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param sg_gauge_id - `gauge_id`:
 * @param xt_duration - `duration`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesPoolToGauge: (sg_pool_id?: Opt<WeakUint64Str>, sg_gauge_id?: Opt<WeakUint64Str>, xt_duration?: Opt<number>) => EncodedOsmosisPoolincentivesPoolToGauge;
/**
 * Encodes a `AnyPoolToInternalGauges` protobuf message:
 * @param a_pool_to_gauges - `pool_to_gauge`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesAnyPoolToInternalGauges: (a_pool_to_gauges?: Opt<Encoded<'/osmosis.poolincentives.v1beta1.PoolToGauge'>[]>) => EncodedOsmosisPoolincentivesAnyPoolToInternalGauges;
/**
 * Encodes a `ConcentratedPoolToNoLockGauges` protobuf message:
 * @param a_pool_to_gauges - `pool_to_gauge`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolincentivesConcentratedPoolToNoLockGauges: (a_pool_to_gauges?: Opt<Encoded<'/osmosis.poolincentives.v1beta1.PoolToGauge'>[]>) => EncodedOsmosisPoolincentivesConcentratedPoolToNoLockGauges;
/**
 * A decoded protobuf Params message
 *
 * Alias for: minted_denom - the denomination of the coin expected to be minted by the minting module. Pool-incentives module doesn’t actually mint the coin itself, but rather manages the distribution of coins that matches the defined minted_denom.
 */
export type DecodedOsmosisPoolincentivesParams = [
    s_minted_denom?: string
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesParams}
 */
export declare const decodeOsmosisPoolincentivesParams: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesParams;
/**
 * A decoded protobuf LockableDurationsInfo message
 *
 * Alias for: lockable_durations -
 */
export type DecodedOsmosisPoolincentivesLockableDurationsInfo = [
    a_lockable_durations?: [
        string,
        number
    ][]
];
/**
 * Decodes a protobuf LockableDurationsInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesLockableDurationsInfo}
 */
export declare const decodeOsmosisPoolincentivesLockableDurationsInfo: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesLockableDurationsInfo;
/**
 * A decoded protobuf DistrInfo message
 *
 * Tuple where:
 *   - 0: total_weight -
 *   - 1: records -
 */
export type DecodedOsmosisPoolincentivesDistrInfo = [
    s_total_weight?: string,
    a_records?: DecodedOsmosisPoolincentivesDistrRecord[]
];
/**
 * Decodes a protobuf DistrInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesDistrInfo}
 */
export declare const decodeOsmosisPoolincentivesDistrInfo: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesDistrInfo;
/**
 * A decoded protobuf DistrRecord message
 *
 * Tuple where:
 *   - 0: gauge_id -
 *   - 1: weight -
 */
export type DecodedOsmosisPoolincentivesDistrRecord = [
    sg_gauge_id?: CwUint64,
    s_weight?: string
];
/**
 * Decodes a protobuf DistrRecord message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesDistrRecord}
 */
export declare const decodeOsmosisPoolincentivesDistrRecord: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesDistrRecord;
/**
 * A decoded protobuf PoolToGauge message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: gauge_id -
 *   - 2: duration -
 */
export type DecodedOsmosisPoolincentivesPoolToGauge = [
    sg_pool_id?: CwUint64,
    sg_gauge_id?: CwUint64,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf PoolToGauge message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesPoolToGauge}
 */
export declare const decodeOsmosisPoolincentivesPoolToGauge: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesPoolToGauge;
/**
 * A decoded protobuf AnyPoolToInternalGauges message
 *
 * Alias for: pool_to_gauge -
 */
export type DecodedOsmosisPoolincentivesAnyPoolToInternalGauges = [
    w_0?: undefined,
    a_pool_to_gauge?: DecodedOsmosisPoolincentivesPoolToGauge[]
];
/**
 * Decodes a protobuf AnyPoolToInternalGauges message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisPoolincentivesAnyPoolToInternalGauges}
 */
export declare const decodeOsmosisPoolincentivesAnyPoolToInternalGauges: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisPoolincentivesAnyPoolToInternalGauges;
/**
 * A decoded protobuf ConcentratedPoolToNoLockGauges message
 *
 * Alias for: pool_to_gauge -
 */
export type DecodedOsmosisPoolincentivesConcentratedPoolToNoLockGauges = [
    a_pool_to_gauge?: DecodedOsmosisPoolincentivesPoolToGauge[]
];
/**
 * Decodes a protobuf ConcentratedPoolToNoLockGauges message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolincentivesConcentratedPoolToNoLockGauges}
 */
export declare const decodeOsmosisPoolincentivesConcentratedPoolToNoLockGauges: (atu8_payload: Uint8Array) => DecodedOsmosisPoolincentivesConcentratedPoolToNoLockGauges;
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesDistrRecord} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: gauge_id -
 *   - 1: weight -
 */
export declare const destructOsmosisPoolincentivesDistrRecord: (g_struct: OsmosisPoolincentivesDistrRecord) => [gauge_id?: CwUint64, weight?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_DISTR_RECORD = "/osmosis.poolincentives.v1beta1.DistrRecord";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.DistrRecord` -
 */
export type OsmosisPoolincentivesDistrRecord = {
    gauge_id?: CwUint64 | undefined;
    weight?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: minted_denom - the denomination of the coin expected to be minted by the minting module. Pool-incentives module doesn’t actually mint the coin itself, but rather manages the distribution of coins that matches the defined minted_denom.
 */
export declare const destructOsmosisPoolincentivesParams: (g_struct: OsmosisPoolincentivesParams) => [minted_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_PARAMS = "/osmosis.poolincentives.v1beta1.Params";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.Params` -
 */
export type OsmosisPoolincentivesParams = {
    minted_denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesLockableDurationsInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lockable_durations -
 */
export declare const destructOsmosisPoolincentivesLockableDurationsInfo: (g_struct: OsmosisPoolincentivesLockableDurationsInfo) => [lockable_durations?: number[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_LOCKABLE_DURATIONS_INFO = "/osmosis.poolincentives.v1beta1.LockableDurationsInfo";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.LockableDurationsInfo` -
 */
export type OsmosisPoolincentivesLockableDurationsInfo = {
    lockable_durations?: WeakDurationStr[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesDistrInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_weight -
 *   - 1: records -
 */
export declare const destructOsmosisPoolincentivesDistrInfo: (g_struct: OsmosisPoolincentivesDistrInfo) => [total_weight?: string, records?: OsmosisPoolincentivesDistrRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_DISTR_INFO = "/osmosis.poolincentives.v1beta1.DistrInfo";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.DistrInfo` -
 */
export type OsmosisPoolincentivesDistrInfo = {
    total_weight?: string | undefined;
    records?: OsmosisPoolincentivesDistrRecord[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesPoolToGauge} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: gauge_id -
 *   - 2: duration -
 */
export declare const destructOsmosisPoolincentivesPoolToGauge: (g_struct: OsmosisPoolincentivesPoolToGauge) => [pool_id?: CwUint64, gauge_id?: CwUint64, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_POOL_TO_GAUGE = "/osmosis.poolincentives.v1beta1.PoolToGauge";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.PoolToGauge` -
 */
export type OsmosisPoolincentivesPoolToGauge = {
    pool_id?: CwUint64 | undefined;
    gauge_id?: CwUint64 | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesAnyPoolToInternalGauges} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pool_to_gauge -
 */
export declare const destructOsmosisPoolincentivesAnyPoolToInternalGauges: (g_struct: OsmosisPoolincentivesAnyPoolToInternalGauges) => [EMPTY?: void, pool_to_gauge?: OsmosisPoolincentivesPoolToGauge[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_ANY_POOL_TO_INTERNAL_GAUGES = "/osmosis.poolincentives.v1beta1.AnyPoolToInternalGauges";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.AnyPoolToInternalGauges` -
 */
export type OsmosisPoolincentivesAnyPoolToInternalGauges = {
    pool_to_gauge?: OsmosisPoolincentivesPoolToGauge[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolincentivesConcentratedPoolToNoLockGauges} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_to_gauge -
 */
export declare const destructOsmosisPoolincentivesConcentratedPoolToNoLockGauges: (g_struct: OsmosisPoolincentivesConcentratedPoolToNoLockGauges) => [pool_to_gauge?: OsmosisPoolincentivesPoolToGauge[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLINCENTIVES_CONCENTRATED_POOL_TO_NO_LOCK_GAUGES = "/osmosis.poolincentives.v1beta1.ConcentratedPoolToNoLockGauges";
/**
 * JSON serialization of `osmosis.poolincentives.v1beta1.ConcentratedPoolToNoLockGauges` -
 */
export type OsmosisPoolincentivesConcentratedPoolToNoLockGauges = {
    pool_to_gauge?: OsmosisPoolincentivesPoolToGauge[] | undefined;
};
