/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeOsmosisPoolmanagerDenomPairTakerFee } from './tx.js';
/**
 * Encodes a `DenomPairTakerFeeProposal` protobuf message: a type for adding/removing a custom taker fee(s) for one or more denom pairs.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_denom_pair_taker_fees - `denom_pair_taker_fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerDenomPairTakerFeeProposal = (s_title, s_description, a_denom_pair_taker_fees) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_denom_pair_taker_fees) // DenomPairTakerFee[] denom_pair_taker_fee = 3
    .o;
/**
 * Decodes a protobuf DenomPairTakerFeeProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerDenomPairTakerFeeProposal}
 */
export const decodeOsmosisPoolmanagerDenomPairTakerFeeProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisPoolmanagerDenomPairTakerFee]);
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerDenomPairTakerFeeProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: denom_pair_taker_fee -
 */
export const destructOsmosisPoolmanagerDenomPairTakerFeeProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.denom_pair_taker_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_DENOM_PAIR_TAKER_FEE_PROPOSAL = '/osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal';
//# sourceMappingURL=gov.js.map