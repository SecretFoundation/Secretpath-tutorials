import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedOsmosisPoolmanagerModuleRoute = Encoded<'/osmosis.poolmanager.v1beta1.ModuleRoute'>;
/**
 * Encodes a `ModuleRoute` protobuf message: r defines a route encapsulating pool type. It is used as the value of a mapping from pool id to the pool type, allowing the pool manager to know which module to route swaps to given the pool id.
 * @param xc_pool_type - `pool_type`: specifies the type of the pool
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerModuleRoute: (xc_pool_type?: Opt<ProtoEnumOsmosisPoolmanagerPoolType>, sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisPoolmanagerModuleRoute;
/**
 * A decoded protobuf ModuleRoute message
 *
 * Tuple where:
 *   - 0: pool_type - specifies the type of the pool
 *   - 1: pool_id -
 */
export type DecodedOsmosisPoolmanagerModuleRoute = [
    xc_pool_type?: ProtoEnumOsmosisPoolmanagerPoolType,
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf ModuleRoute message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerModuleRoute}
 */
export declare const decodeOsmosisPoolmanagerModuleRoute: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerModuleRoute;
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerModuleRoute} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_type - specifies the type of the pool
 *   - 1: pool_id -
 */
export declare const destructOsmosisPoolmanagerModuleRoute: (g_struct: OsmosisPoolmanagerModuleRoute) => [pool_type?: JsonEnumOsmosisPoolmanagerPoolType, pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MODULE_ROUTE = "/osmosis.poolmanager.v1beta1.ModuleRoute";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.ModuleRoute` - r defines a route encapsulating pool type. It is used as the value of a mapping from pool id to the pool type, allowing the pool manager to know which module to route swaps to given the pool id.
 */
export type OsmosisPoolmanagerModuleRoute = {
    pool_type?: JsonEnumOsmosisPoolmanagerPoolType | undefined;
    pool_id?: CwUint64 | undefined;
};
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Balancer** - the standard xy=k curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export declare const XC_PROTO_OSMOSIS_POOLMANAGER_Balancer = 0;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Balancer** - the standard xy=k curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export declare const SI_JSON_OSMOSIS_POOLMANAGER_Balancer = "Balancer";
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Stableswap** - the Solidly cfmm stable swap curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export declare const XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap = 1;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Stableswap** - the Solidly cfmm stable swap curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export declare const SI_JSON_OSMOSIS_POOLMANAGER_Stableswap = "Stableswap";
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Concentrated** - the pool model specific to concentrated liquidity. It is defined in x/concentrated-liquidity.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export declare const XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated = 2;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Concentrated** - the pool model specific to concentrated liquidity. It is defined in x/concentrated-liquidity.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export declare const SI_JSON_OSMOSIS_POOLMANAGER_Concentrated = "Concentrated";
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **CosmWasm** - the pool model specific to CosmWasm. It is defined in x/cosmwasmpool.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export declare const XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm = 3;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **CosmWasm** - the pool model specific to CosmWasm. It is defined in x/cosmwasmpool.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export declare const SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm = "CosmWasm";
/**
 * Raw protobuf enum values for `osmosis.poolmanager.v1beta1.PoolType` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_OSMOSIS_POOLMANAGER_Balancer}
 *   - {@link XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap}
 *   - {@link XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated}
 *   - {@link XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm}
 */
export type ProtoEnumOsmosisPoolmanagerPoolType = typeof XC_PROTO_OSMOSIS_POOLMANAGER_Balancer | typeof XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap | typeof XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated | typeof XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm;
/**
 * JSON enum values for `osmosis.poolmanager.v1beta1.PoolType` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_OSMOSIS_POOLMANAGER_Balancer}
 *   - {@link SI_JSON_OSMOSIS_POOLMANAGER_Stableswap}
 *   - {@link SI_JSON_OSMOSIS_POOLMANAGER_Concentrated}
 *   - {@link SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm}
 */
export type JsonEnumOsmosisPoolmanagerPoolType = typeof SI_JSON_OSMOSIS_POOLMANAGER_Balancer | typeof SI_JSON_OSMOSIS_POOLMANAGER_Stableswap | typeof SI_JSON_OSMOSIS_POOLMANAGER_Concentrated | typeof SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm;
/**
 * Maps a protobuf enum int value for `osmosis.poolmanager.v1beta1.PoolType` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumOsmosisPoolmanagerPoolType: Record<ProtoEnumOsmosisPoolmanagerPoolType, JsonEnumOsmosisPoolmanagerPoolType>;
/**
 * Maps a JSON enum string value for `osmosis.poolmanager.v1beta1.PoolType` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumOsmosisPoolmanagerPoolType: Record<JsonEnumOsmosisPoolmanagerPoolType, ProtoEnumOsmosisPoolmanagerPoolType>;
