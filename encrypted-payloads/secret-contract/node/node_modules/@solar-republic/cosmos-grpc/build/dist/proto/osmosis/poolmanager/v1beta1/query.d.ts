/// <reference types="node" />
import type { WeakUint64Str, SlimCoin, CwUint64 } from '@solar-republic/types';
import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
import type { OsmosisConcentratedliquidityPool } from '../../concentrated-liquidity/pool.js';
import type { OsmosisCosmwasmpoolCosmWasmPool } from '../../cosmwasmpool/v1beta1/model/pool.js';
import type { OsmosisGammPool } from '../../gamm/pool-models/balancer/balancerPool.js';
import type { OsmosisGammPoolmodelsStableswapPool } from '../../gamm/pool-models/stableswap/stableswap_pool.js';
import type { OsmosisPoolmanagerParams, DecodedOsmosisPoolmanagerParams } from './genesis.js';
import type { OsmosisPoolmanagerSwapAmountInRoute, DecodedOsmosisPoolmanagerSwapAmountInRoute, OsmosisPoolmanagerSwapAmountOutRoute, DecodedOsmosisPoolmanagerSwapAmountOutRoute } from './swap_route.js';
export type EncodedOsmosisPoolmanagerParamsRequest = Encoded<'/osmosis.poolmanager.v1beta1.ParamsRequest'>;
export type EncodedOsmosisPoolmanagerParamsResponse = Encoded<'/osmosis.poolmanager.v1beta1.ParamsResponse'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountInRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInWithPrimitiveTypesRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountInRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountInResponse = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInResponse'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutWithPrimitiveTypesRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountOutRequest'>;
export type EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutResponse = Encoded<'/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutResponse'>;
export type EncodedOsmosisPoolmanagerNumPoolsRequest = Encoded<'/osmosis.poolmanager.v1beta1.NumPoolsRequest'>;
export type EncodedOsmosisPoolmanagerNumPoolsResponse = Encoded<'/osmosis.poolmanager.v1beta1.NumPoolsResponse'>;
export type EncodedOsmosisPoolmanagerPoolRequest = Encoded<'/osmosis.poolmanager.v1beta1.PoolRequest'>;
export type EncodedOsmosisPoolmanagerPoolResponse = Encoded<'/osmosis.poolmanager.v1beta1.PoolResponse'>;
export type EncodedOsmosisPoolmanagerAllPoolsRequest = Encoded<'/osmosis.poolmanager.v1beta1.AllPoolsRequest'>;
export type EncodedOsmosisPoolmanagerAllPoolsResponse = Encoded<'/osmosis.poolmanager.v1beta1.AllPoolsResponse'>;
export type EncodedOsmosisPoolmanagerSpotPriceRequest = Encoded<'/osmosis.poolmanager.v1beta1.SpotPriceRequest'>;
export type EncodedOsmosisPoolmanagerSpotPriceResponse = Encoded<'/osmosis.poolmanager.v1beta1.SpotPriceResponse'>;
export type EncodedOsmosisPoolmanagerTotalPoolLiquidityRequest = Encoded<'/osmosis.poolmanager.v1beta1.TotalPoolLiquidityRequest'>;
export type EncodedOsmosisPoolmanagerTotalPoolLiquidityResponse = Encoded<'/osmosis.poolmanager.v1beta1.TotalPoolLiquidityResponse'>;
export type EncodedOsmosisPoolmanagerTotalLiquidityRequest = Encoded<'/osmosis.poolmanager.v1beta1.TotalLiquidityRequest'>;
export type EncodedOsmosisPoolmanagerTotalLiquidityResponse = Encoded<'/osmosis.poolmanager.v1beta1.TotalLiquidityResponse'>;
export type EncodedOsmosisPoolmanagerTotalVolumeForPoolRequest = Encoded<'/osmosis.poolmanager.v1beta1.TotalVolumeForPoolRequest'>;
export type EncodedOsmosisPoolmanagerTotalVolumeForPoolResponse = Encoded<'/osmosis.poolmanager.v1beta1.TotalVolumeForPoolResponse'>;
export type EncodedOsmosisPoolmanagerTradingPairTakerFeeRequest = Encoded<'/osmosis.poolmanager.v1beta1.TradingPairTakerFeeRequest'>;
export type EncodedOsmosisPoolmanagerTradingPairTakerFeeResponse = Encoded<'/osmosis.poolmanager.v1beta1.TradingPairTakerFeeResponse'>;
export type EncodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest = Encoded<'/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactRequest'>;
export type EncodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse = Encoded<'/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactResponse'>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryOsmosisPoolmanagerParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerParamsResponse>>;
/**
 * Estimates swap amount out given in.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in -
 * @param a_routes -
 * @returns a tuple where:
 *   - 0: token_out_amount - the 'token_out_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSwapExactAmountIn: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in?: Opt<string>, a_routes?: Opt<OsmosisPoolmanagerSwapAmountInRoute[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountInResponse>>;
/**
 * An alternative query for EstimateSwapExactAmountIn. Supports query via GRPC-Gateway by using primitive types instead of repeated structs. Each index in the routes_pool_id field corresponds to the respective routes_token_out_denom value, thus they are required to have the same length and are grouped together as pairs. example usage: http://0.0.0.0:1317/osmosis/poolmanager/v1beta1/1/estimate/ swap_exact_amount_in_with_primitive_types?token_in=100000stake&routes_token_out_denom=uatom &routes_token_out_denom=uion&routes_pool_id=1&routes_pool_id=2
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in -
 * @param a_routes_pool_ids -
 * @param a_routes_token_out_denoms -
 * @returns a tuple where:
 *   - 0: token_out_amount - the 'token_out_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypes: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in?: Opt<string>, a_routes_pool_ids?: Opt<`${bigint}`[]>, a_routes_token_out_denoms?: Opt<string[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountInResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in -
 * @param s_token_out_denom -
 * @returns a tuple where:
 *   - 0: token_out_amount - the 'token_out_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountIn: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in?: Opt<string>, s_token_out_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountInResponse>>;
/**
 * Estimates swap amount in given out.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param a_routes -
 * @param s_token_out -
 * @returns a tuple where:
 *   - 0: token_in_amount - the 'token_in_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSwapExactAmountOut: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, a_routes?: Opt<OsmosisPoolmanagerSwapAmountOutRoute[]>, s_token_out?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountOutResponse>>;
/**
 * Estimates swap amount in given out.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param a_routes_pool_ids -
 * @param a_routes_token_in_denoms -
 * @param s_token_out -
 * @returns a tuple where:
 *   - 0: token_in_amount - the 'token_in_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypes: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, a_routes_pool_ids?: Opt<`${bigint}`[]>, a_routes_token_in_denoms?: Opt<string[]>, s_token_out?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountOutResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in_denom -
 * @param s_token_out -
 * @returns a tuple where:
 *   - 0: token_in_amount - the 'token_in_amount' response property
 */
export declare const queryOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOut: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_token_in_denom?: Opt<string>, s_token_out?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateSwapExactAmountOutResponse>>;
/**
 * Returns the total number of pools existing in Osmosis.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: num_pools - the 'num_pools' response property
 */
export declare const queryOsmosisPoolmanagerNumPools: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerNumPoolsResponse>>;
/**
 * Returns the Pool specified by the pool id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: pool - the 'pool' response property
 */
export declare const queryOsmosisPoolmanagerPool: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerPoolResponse>>;
/**
 * Returns all pools on the Osmosis chain sorted by IDs.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 */
export declare const queryOsmosisPoolmanagerAllPools: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerAllPoolsResponse>>;
/**
 * Defines a gRPC query handler that returns the spot price given a base denomination and a quote denomination.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset_denom -
 * @param s_quote_asset_denom -
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export declare const queryOsmosisPoolmanagerSpotPrice: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>, s_base_asset_denom?: Opt<string>, s_quote_asset_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerSpotPriceResponse>>;
/**
 * Returns the total liquidity of the specified pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export declare const queryOsmosisPoolmanagerTotalPoolLiquidity: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerTotalPoolLiquidityResponse>>;
/**
 * Returns the total liquidity across all pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export declare const queryOsmosisPoolmanagerTotalLiquidity: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerTotalLiquidityResponse>>;
/**
 * Returns the total volume of the specified pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: volume - the 'volume' response property
 */
export declare const queryOsmosisPoolmanagerTotalVolumeForPool: (z_req: string | ({
    origin: string;
} & RequestInit), sg_pool_id?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerTotalVolumeForPoolResponse>>;
/**
 * Returns the taker fee for a given set of denoms
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom_0 -
 * @param s_denom_1 -
 * @returns a tuple where:
 *   - 0: taker_fee - the 'taker_fee' response property
 */
export declare const queryOsmosisPoolmanagerTradingPairTakerFee: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom_0?: Opt<string>, s_denom_1?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerTradingPairTakerFeeResponse>>;
/**
 * Returns an estimated trade based on price impact, if a trade cannot be estimated a 0 input and 0 output would be returned.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param a_from_coin - the total amount of tokens that the user wants to sell.
 * @param s_to_coin_denom - the denom identifier of the token that the user wants to buy.
 * @param sg_pool_id - the identifier of the liquidity pool that the trade will occur on.
 * @param s_max_price_impact - the maximum percentage that the user is willing to affect the price of the liquidity pool.
 * @param s_external_price - an optional external price that the user can enter. It adjusts the MaxPriceImpact as the SpotPrice of a pool can be changed at any time.
 * @returns a tuple where:
 *   - 0: input_coin - the actual input amount that would be tradeable under the specified price impact.
 *   - 1: output_coin - the actual input amount that would be tradeable under the specified price impact.
 */
export declare const queryOsmosisPoolmanagerEstimateTradeBasedOnPriceImpact: (z_req: string | ({
    origin: string;
} & RequestInit), a_from_coin?: Opt<SlimCoin>, s_to_coin_denom?: Opt<string>, sg_pool_id?: Opt<`${bigint}`>, s_max_price_impact?: Opt<string>, s_external_price?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse>>;
/**
 * Encodes a `ParamsRequest` protobuf message: =============================== Params
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerParamsRequest: () => EncodedOsmosisPoolmanagerParamsRequest;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerParamsResponse: (atu8_params?: Opt<Encoded<'/osmosis.poolmanager.v1beta1.Params'>>) => EncodedOsmosisPoolmanagerParamsResponse;
/**
 * Encodes a `EstimateSwapExactAmountInRequest` protobuf message: =============================== EstimateSwapExactAmountIn
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param a_routes - `routes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountInRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in?: Opt<string>, a_routes?: Opt<Encoded<'/osmosis.poolmanager.v1beta1.SwapAmountInRoute'>[]>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountInRequest;
/**
 * Encodes a `EstimateSwapExactAmountInWithPrimitiveTypesRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param a_routes_pool_ids - `routes_pool_id`:
 * @param a_routes_token_out_denoms - `routes_token_out_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in?: Opt<string>, a_routes_pool_ids?: Opt<WeakUint64Str[]>, a_routes_token_out_denoms?: Opt<string[]>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest;
/**
 * Encodes a `EstimateSinglePoolSwapExactAmountInRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param s_token_out_denom - `token_out_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in?: Opt<string>, s_token_out_denom?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest;
/**
 * Encodes a `EstimateSwapExactAmountInResponse` protobuf message:
 * @param s_token_out_amount - `token_out_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountInResponse: (s_token_out_amount?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountInResponse;
/**
 * Encodes a `EstimateSwapExactAmountOutRequest` protobuf message: =============================== EstimateSwapExactAmountOut
 * @param sg_pool_id - `pool_id`:
 * @param a_routes - `routes`:
 * @param s_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountOutRequest: (sg_pool_id?: Opt<WeakUint64Str>, a_routes?: Opt<Encoded<'/osmosis.poolmanager.v1beta1.SwapAmountOutRoute'>[]>, s_token_out?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutRequest;
/**
 * Encodes a `EstimateSwapExactAmountOutWithPrimitiveTypesRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param a_routes_pool_ids - `routes_pool_id`:
 * @param a_routes_token_in_denoms - `routes_token_in_denom`:
 * @param s_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest: (sg_pool_id?: Opt<WeakUint64Str>, a_routes_pool_ids?: Opt<WeakUint64Str[]>, a_routes_token_in_denoms?: Opt<string[]>, s_token_out?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest;
/**
 * Encodes a `EstimateSinglePoolSwapExactAmountOutRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in_denom - `token_in_denom`:
 * @param s_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_token_in_denom?: Opt<string>, s_token_out?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest;
/**
 * Encodes a `EstimateSwapExactAmountOutResponse` protobuf message:
 * @param s_token_in_amount - `token_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateSwapExactAmountOutResponse: (s_token_in_amount?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateSwapExactAmountOutResponse;
/**
 * Encodes a `NumPoolsRequest` protobuf message: =============================== NumPools
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerNumPoolsRequest: () => EncodedOsmosisPoolmanagerNumPoolsRequest;
/**
 * Encodes a `NumPoolsResponse` protobuf message:
 * @param sg_num_pools - `num_pools`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerNumPoolsResponse: (sg_num_pools?: Opt<WeakUint64Str>) => EncodedOsmosisPoolmanagerNumPoolsResponse;
/**
 * Encodes a `PoolRequest` protobuf message: =============================== Pool
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerPoolRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisPoolmanagerPoolRequest;
/**
 * Encodes a `PoolResponse` protobuf message:
 * @param atu8_pool - `pool`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerPoolResponse: (atu8_pool?: Opt<Encoded<'PoolI'>>) => EncodedOsmosisPoolmanagerPoolResponse;
/**
 * Encodes a `AllPoolsRequest` protobuf message: =============================== AllPools
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerAllPoolsRequest: () => EncodedOsmosisPoolmanagerAllPoolsRequest;
/**
 * Encodes a `AllPoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerAllPoolsResponse: (a_pools?: Opt<Encoded<'PoolI'>[]>) => EncodedOsmosisPoolmanagerAllPoolsResponse;
/**
 * Encodes a `SpotPriceRequest` protobuf message: defines the gRPC request structure for a SpotPrice query.
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset_denom - `base_asset_denom`:
 * @param s_quote_asset_denom - `quote_asset_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerSpotPriceRequest: (sg_pool_id?: Opt<WeakUint64Str>, s_base_asset_denom?: Opt<string>, s_quote_asset_denom?: Opt<string>) => EncodedOsmosisPoolmanagerSpotPriceRequest;
/**
 * Encodes a `SpotPriceResponse` protobuf message: defines the gRPC response structure for a SpotPrice query.
 * @param s_spot_price - `spot_price`: String of the Dec. Ex) 10.203uatom
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerSpotPriceResponse: (s_spot_price?: Opt<string>) => EncodedOsmosisPoolmanagerSpotPriceResponse;
/**
 * Encodes a `TotalPoolLiquidityRequest` protobuf message: =============================== TotalPoolLiquidity
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalPoolLiquidityRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisPoolmanagerTotalPoolLiquidityRequest;
/**
 * Encodes a `TotalPoolLiquidityResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalPoolLiquidityResponse: (a_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisPoolmanagerTotalPoolLiquidityResponse;
/**
 * Encodes a `TotalLiquidityRequest` protobuf message: =============================== TotalLiquidity
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalLiquidityRequest: () => EncodedOsmosisPoolmanagerTotalLiquidityRequest;
/**
 * Encodes a `TotalLiquidityResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalLiquidityResponse: (a_liquiditys?: Opt<SlimCoin[]>) => EncodedOsmosisPoolmanagerTotalLiquidityResponse;
/**
 * Encodes a `TotalVolumeForPoolRequest` protobuf message: =============================== TotalVolumeForPool
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalVolumeForPoolRequest: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisPoolmanagerTotalVolumeForPoolRequest;
/**
 * Encodes a `TotalVolumeForPoolResponse` protobuf message:
 * @param a_volumes - `volume`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTotalVolumeForPoolResponse: (a_volumes?: Opt<SlimCoin[]>) => EncodedOsmosisPoolmanagerTotalVolumeForPoolResponse;
/**
 * Encodes a `TradingPairTakerFeeRequest` protobuf message: =============================== TradingPairTakerFee
 * @param s_denom_0 - `denom_0`:
 * @param s_denom_1 - `denom_1`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTradingPairTakerFeeRequest: (s_denom_0?: Opt<string>, s_denom_1?: Opt<string>) => EncodedOsmosisPoolmanagerTradingPairTakerFeeRequest;
/**
 * Encodes a `TradingPairTakerFeeResponse` protobuf message:
 * @param s_taker_fee - `taker_fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerTradingPairTakerFeeResponse: (s_taker_fee?: Opt<string>) => EncodedOsmosisPoolmanagerTradingPairTakerFeeResponse;
/**
 * Encodes a `EstimateTradeBasedOnPriceImpactRequest` protobuf message: represents a request to estimate a trade for Balancer/StableSwap/Concentrated liquidity pool types based on the given parameters.
 * @param a_from_coin - `from_coin`: the total amount of tokens that the user wants to sell.
 * @param s_to_coin_denom - `to_coin_denom`: the denom identifier of the token that the user wants to buy.
 * @param sg_pool_id - `pool_id`: the identifier of the liquidity pool that the trade will occur on.
 * @param s_max_price_impact - `max_price_impact`: the maximum percentage that the user is willing to affect the price of the liquidity pool.
 * @param s_external_price - `external_price`: an optional external price that the user can enter. It adjusts the MaxPriceImpact as the SpotPrice of a pool can be changed at any time.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest: (a_from_coin?: Opt<SlimCoin>, s_to_coin_denom?: Opt<string>, sg_pool_id?: Opt<WeakUint64Str>, s_max_price_impact?: Opt<string>, s_external_price?: Opt<string>) => EncodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest;
/**
 * Encodes a `EstimateTradeBasedOnPriceImpactResponse` protobuf message: represents the response data for an estimated trade based on price impact. If a trade fails to be estimated the response would be 0,0 for input_coin and output_coin and will not error.
 * @param a_input_coin - `input_coin`: the actual input amount that would be tradeable under the specified price impact.
 * @param a_output_coin - `output_coin`: the amount of tokens of the ToCoinDenom type that will be received for the actual InputCoin trade.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse: (a_input_coin?: Opt<SlimCoin>, a_output_coin?: Opt<SlimCoin>) => EncodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse;
/**
 * A decoded protobuf ParamsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisPoolmanagerParamsRequest = [];
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerParamsRequest}
 */
export declare const decodeOsmosisPoolmanagerParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Params message
 *
 * Alias for: params -
 */
export type DecodedOsmosisPoolmanagerParamsResponse = [
    a_params?: DecodedOsmosisPoolmanagerParams
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerParamsResponse}
 */
export declare const decodeOsmosisPoolmanagerParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerParamsResponse;
/**
 * A decoded protobuf EstimateSwapExactAmountInRequest message
 *
 * Tuple where:
 *   - 1: pool_id -
 *   - 2: token_in -
 *   - 3: routes -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountInRequest = [
    w_0?: undefined,
    sg_pool_id?: CwUint64,
    s_token_in?: string,
    a_routes?: DecodedOsmosisPoolmanagerSwapAmountInRoute[]
];
/**
 * Decodes a protobuf EstimateSwapExactAmountInRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountInRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountInRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountInRequest;
/**
 * A decoded protobuf EstimateSwapExactAmountInWithPrimitiveTypesRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: routes_pool_id -
 *   - 3: routes_token_out_denom -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest = [
    sg_pool_id?: CwUint64,
    s_token_in?: string,
    a_routes_pool_ids?: CwUint64[],
    a_routes_token_out_denoms?: string[]
];
/**
 * Decodes a protobuf EstimateSwapExactAmountInWithPrimitiveTypesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest;
/**
 * A decoded protobuf EstimateSinglePoolSwapExactAmountInRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: token_out_denom -
 */
export type DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest = [
    sg_pool_id?: CwUint64,
    s_token_in?: string,
    s_token_out_denom?: string
];
/**
 * Decodes a protobuf EstimateSinglePoolSwapExactAmountInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest;
/**
 * A decoded protobuf EstimateSwapExactAmountIn message
 *
 * Alias for: token_out_amount -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountInResponse = [
    s_token_out_amount?: string
];
/**
 * Decodes a protobuf EstimateSwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountInResponse}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountInResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountInResponse;
/**
 * A decoded protobuf EstimateSwapExactAmountOutRequest message
 *
 * Tuple where:
 *   - 1: pool_id -
 *   - 2: routes -
 *   - 3: token_out -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutRequest = [
    w_0?: undefined,
    sg_pool_id?: CwUint64,
    a_routes?: DecodedOsmosisPoolmanagerSwapAmountOutRoute[],
    s_token_out?: string
];
/**
 * Decodes a protobuf EstimateSwapExactAmountOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountOutRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutRequest;
/**
 * A decoded protobuf EstimateSwapExactAmountOutWithPrimitiveTypesRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: routes_pool_id -
 *   - 2: routes_token_in_denom -
 *   - 3: token_out -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest = [
    sg_pool_id?: CwUint64,
    a_routes_pool_ids?: CwUint64[],
    a_routes_token_in_denoms?: string[],
    s_token_out?: string
];
/**
 * Decodes a protobuf EstimateSwapExactAmountOutWithPrimitiveTypesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest;
/**
 * A decoded protobuf EstimateSinglePoolSwapExactAmountOutRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: token_in_denom -
 *   - 2: token_out -
 */
export type DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest = [
    sg_pool_id?: CwUint64,
    s_token_in_denom?: string,
    s_token_out?: string
];
/**
 * Decodes a protobuf EstimateSinglePoolSwapExactAmountOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest;
/**
 * A decoded protobuf EstimateSwapExactAmountOut message
 *
 * Alias for: token_in_amount -
 */
export type DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutResponse = [
    s_token_in_amount?: string
];
/**
 * Decodes a protobuf EstimateSwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutResponse}
 */
export declare const decodeOsmosisPoolmanagerEstimateSwapExactAmountOutResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateSwapExactAmountOutResponse;
/**
 * A decoded protobuf NumPoolsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisPoolmanagerNumPoolsRequest = [];
/**
 * Decodes a protobuf NumPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerNumPoolsRequest}
 */
export declare const decodeOsmosisPoolmanagerNumPoolsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf NumPools message
 *
 * Alias for: num_pools -
 */
export type DecodedOsmosisPoolmanagerNumPoolsResponse = [
    sg_num_pools?: CwUint64
];
/**
 * Decodes a protobuf NumPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerNumPoolsResponse}
 */
export declare const decodeOsmosisPoolmanagerNumPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerNumPoolsResponse;
/**
 * A decoded protobuf PoolRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisPoolmanagerPoolRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf PoolRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerPoolRequest}
 */
export declare const decodeOsmosisPoolmanagerPoolRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerPoolRequest;
/**
 * A decoded protobuf Pool message
 *
 * Alias for: pool -
 */
export type DecodedOsmosisPoolmanagerPoolResponse = [
    a_pool?: DecodedGoogleProtobufAny
];
/**
 * Decodes a protobuf Pool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerPoolResponse}
 */
export declare const decodeOsmosisPoolmanagerPoolResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerPoolResponse;
/**
 * A decoded protobuf AllPoolsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisPoolmanagerAllPoolsRequest = [];
/**
 * Decodes a protobuf AllPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerAllPoolsRequest}
 */
export declare const decodeOsmosisPoolmanagerAllPoolsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf AllPools message
 *
 * Alias for: pools -
 */
export type DecodedOsmosisPoolmanagerAllPoolsResponse = [
    a_pools?: DecodedGoogleProtobufAny[]
];
/**
 * Decodes a protobuf AllPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerAllPoolsResponse}
 */
export declare const decodeOsmosisPoolmanagerAllPoolsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerAllPoolsResponse;
/**
 * A decoded protobuf SpotPriceRequest message
 *
 * Tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export type DecodedOsmosisPoolmanagerSpotPriceRequest = [
    sg_pool_id?: CwUint64,
    s_base_asset_denom?: string,
    s_quote_asset_denom?: string
];
/**
 * Decodes a protobuf SpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerSpotPriceRequest}
 */
export declare const decodeOsmosisPoolmanagerSpotPriceRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerSpotPriceRequest;
/**
 * A decoded protobuf SpotPrice message
 *
 * Alias for: spot_price - String of the Dec. Ex) 10.203uatom
 */
export type DecodedOsmosisPoolmanagerSpotPriceResponse = [
    s_spot_price?: string
];
/**
 * Decodes a protobuf SpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerSpotPriceResponse}
 */
export declare const decodeOsmosisPoolmanagerSpotPriceResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerSpotPriceResponse;
/**
 * A decoded protobuf TotalPoolLiquidityRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisPoolmanagerTotalPoolLiquidityRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf TotalPoolLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalPoolLiquidityRequest}
 */
export declare const decodeOsmosisPoolmanagerTotalPoolLiquidityRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTotalPoolLiquidityRequest;
/**
 * A decoded protobuf TotalPoolLiquidity message
 *
 * Alias for: liquidity -
 */
export type DecodedOsmosisPoolmanagerTotalPoolLiquidityResponse = [
    a_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf TotalPoolLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalPoolLiquidityResponse}
 */
export declare const decodeOsmosisPoolmanagerTotalPoolLiquidityResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTotalPoolLiquidityResponse;
/**
 * A decoded protobuf TotalLiquidityRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisPoolmanagerTotalLiquidityRequest = [];
/**
 * Decodes a protobuf TotalLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalLiquidityRequest}
 */
export declare const decodeOsmosisPoolmanagerTotalLiquidityRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf TotalLiquidity message
 *
 * Alias for: liquidity -
 */
export type DecodedOsmosisPoolmanagerTotalLiquidityResponse = [
    a_liquidity?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf TotalLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalLiquidityResponse}
 */
export declare const decodeOsmosisPoolmanagerTotalLiquidityResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTotalLiquidityResponse;
/**
 * A decoded protobuf TotalVolumeForPoolRequest message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisPoolmanagerTotalVolumeForPoolRequest = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf TotalVolumeForPoolRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalVolumeForPoolRequest}
 */
export declare const decodeOsmosisPoolmanagerTotalVolumeForPoolRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTotalVolumeForPoolRequest;
/**
 * A decoded protobuf TotalVolumeForPool message
 *
 * Alias for: volume -
 */
export type DecodedOsmosisPoolmanagerTotalVolumeForPoolResponse = [
    a_volume?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf TotalVolumeForPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTotalVolumeForPoolResponse}
 */
export declare const decodeOsmosisPoolmanagerTotalVolumeForPoolResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTotalVolumeForPoolResponse;
/**
 * A decoded protobuf TradingPairTakerFeeRequest message
 *
 * Tuple where:
 *   - 0: denom_0 -
 *   - 1: denom_1 -
 */
export type DecodedOsmosisPoolmanagerTradingPairTakerFeeRequest = [
    s_denom_0?: string,
    s_denom_1?: string
];
/**
 * Decodes a protobuf TradingPairTakerFeeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTradingPairTakerFeeRequest}
 */
export declare const decodeOsmosisPoolmanagerTradingPairTakerFeeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTradingPairTakerFeeRequest;
/**
 * A decoded protobuf TradingPairTakerFee message
 *
 * Alias for: taker_fee -
 */
export type DecodedOsmosisPoolmanagerTradingPairTakerFeeResponse = [
    s_taker_fee?: string
];
/**
 * Decodes a protobuf TradingPairTakerFee message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerTradingPairTakerFeeResponse}
 */
export declare const decodeOsmosisPoolmanagerTradingPairTakerFeeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerTradingPairTakerFeeResponse;
/**
 * A decoded protobuf EstimateTradeBasedOnPriceImpactRequest message
 *
 * Tuple where:
 *   - 0: from_coin - the total amount of tokens that the user wants to sell.
 *   - 1: to_coin_denom - the denom identifier of the token that the user wants to buy.
 *   - 2: pool_id - the identifier of the liquidity pool that the trade will occur on.
 *   - 3: max_price_impact - the maximum percentage that the user is willing to affect the price of the liquidity pool.
 *   - 4: external_price - an optional external price that the user can enter. It adjusts the MaxPriceImpact as the SpotPrice of a pool can be changed at any time.
 */
export type DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest = [
    a_from_coin?: [
        string,
        string
    ],
    s_to_coin_denom?: string,
    sg_pool_id?: CwUint64,
    s_max_price_impact?: string,
    s_external_price?: string
];
/**
 * Decodes a protobuf EstimateTradeBasedOnPriceImpactRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest}
 */
export declare const decodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest;
/**
 * A decoded protobuf EstimateTradeBasedOnPriceImpact message
 *
 * Tuple where:
 *   - 0: input_coin - the actual input amount that would be tradeable under the specified price impact.
 *   - 1: output_coin - the amount of tokens of the ToCoinDenom type that will be received for the actual InputCoin trade.
 */
export type DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse = [
    a_input_coin?: [
        string,
        string
    ],
    a_output_coin?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf EstimateTradeBasedOnPriceImpact message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse}
 */
export declare const decodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse: (atu8_payload: Uint8Array) => DecodedOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse;
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisPoolmanagerParamsRequest: (g_struct: OsmosisPoolmanagerParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_PARAMS_REQUEST = "/osmosis.poolmanager.v1beta1.ParamsRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.ParamsRequest` - =============================== Params
 */
export type OsmosisPoolmanagerParamsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructOsmosisPoolmanagerParamsResponse: (g_struct: OsmosisPoolmanagerParamsResponse) => [params?: OsmosisPoolmanagerParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_PARAMS_RESPONSE = "/osmosis.poolmanager.v1beta1.ParamsResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.ParamsResponse` -
 */
export type OsmosisPoolmanagerParamsResponse = {
    params?: OsmosisPoolmanagerParams | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pool_id -
 *   - 2: token_in -
 *   - 3: routes -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountInRequest: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountInRequest) => [EMPTY?: void, pool_id?: CwUint64, token_in?: string, routes?: OsmosisPoolmanagerSwapAmountInRoute[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_IN_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInRequest` - =============================== EstimateSwapExactAmountIn
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountInRequest = {
    pool_id?: CwUint64 | undefined;
    token_in?: string | undefined;
    routes?: OsmosisPoolmanagerSwapAmountInRoute[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: routes_pool_id -
 *   - 3: routes_token_out_denom -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest) => [pool_id?: CwUint64, token_in?: string, routes_pool_id?: CwUint64[], routes_token_out_denom?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_IN_WITH_PRIMITIVE_TYPES_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInWithPrimitiveTypesRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInWithPrimitiveTypesRequest` -
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest = {
    pool_id?: CwUint64 | undefined;
    token_in?: string | undefined;
    routes_pool_id?: CwUint64[] | undefined;
    routes_token_out_denom?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: token_out_denom -
 */
export declare const destructOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest: (g_struct: OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest) => [pool_id?: CwUint64, token_in?: string, token_out_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SINGLE_POOL_SWAP_EXACT_AMOUNT_IN_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountInRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountInRequest` -
 */
export type OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest = {
    pool_id?: CwUint64 | undefined;
    token_in?: string | undefined;
    token_out_denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out_amount -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountInResponse: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountInResponse) => [token_out_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_IN_RESPONSE = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInResponse` -
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountInResponse = {
    token_out_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pool_id -
 *   - 2: routes -
 *   - 3: token_out -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountOutRequest: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountOutRequest) => [EMPTY?: void, pool_id?: CwUint64, routes?: OsmosisPoolmanagerSwapAmountOutRoute[], token_out?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_OUT_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutRequest` - =============================== EstimateSwapExactAmountOut
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountOutRequest = {
    pool_id?: CwUint64 | undefined;
    routes?: OsmosisPoolmanagerSwapAmountOutRoute[] | undefined;
    token_out?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: routes_pool_id -
 *   - 2: routes_token_in_denom -
 *   - 3: token_out -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest) => [pool_id?: CwUint64, routes_pool_id?: CwUint64[], routes_token_in_denom?: string[], token_out?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_OUT_WITH_PRIMITIVE_TYPES_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutWithPrimitiveTypesRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutWithPrimitiveTypesRequest` -
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest = {
    pool_id?: CwUint64 | undefined;
    routes_pool_id?: CwUint64[] | undefined;
    routes_token_in_denom?: string[] | undefined;
    token_out?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in_denom -
 *   - 2: token_out -
 */
export declare const destructOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest: (g_struct: OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest) => [pool_id?: CwUint64, token_in_denom?: string, token_out?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SINGLE_POOL_SWAP_EXACT_AMOUNT_OUT_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountOutRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountOutRequest` -
 */
export type OsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest = {
    pool_id?: CwUint64 | undefined;
    token_in_denom?: string | undefined;
    token_out?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateSwapExactAmountOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in_amount -
 */
export declare const destructOsmosisPoolmanagerEstimateSwapExactAmountOutResponse: (g_struct: OsmosisPoolmanagerEstimateSwapExactAmountOutResponse) => [token_in_amount?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_SWAP_EXACT_AMOUNT_OUT_RESPONSE = "/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutResponse` -
 */
export type OsmosisPoolmanagerEstimateSwapExactAmountOutResponse = {
    token_in_amount?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerNumPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisPoolmanagerNumPoolsRequest: (g_struct: OsmosisPoolmanagerNumPoolsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_NUM_POOLS_REQUEST = "/osmosis.poolmanager.v1beta1.NumPoolsRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.NumPoolsRequest` - =============================== NumPools
 */
export type OsmosisPoolmanagerNumPoolsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerNumPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: num_pools -
 */
export declare const destructOsmosisPoolmanagerNumPoolsResponse: (g_struct: OsmosisPoolmanagerNumPoolsResponse) => [num_pools?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_NUM_POOLS_RESPONSE = "/osmosis.poolmanager.v1beta1.NumPoolsResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.NumPoolsResponse` -
 */
export type OsmosisPoolmanagerNumPoolsResponse = {
    num_pools?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerPoolRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisPoolmanagerPoolRequest: (g_struct: OsmosisPoolmanagerPoolRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_POOL_REQUEST = "/osmosis.poolmanager.v1beta1.PoolRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.PoolRequest` - =============================== Pool
 */
export type OsmosisPoolmanagerPoolRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool -
 */
export declare const destructOsmosisPoolmanagerPoolResponse: (g_struct: OsmosisPoolmanagerPoolResponse) => [pool?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_POOL_RESPONSE = "/osmosis.poolmanager.v1beta1.PoolResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.PoolResponse` -
 */
export type OsmosisPoolmanagerPoolResponse = {
    pool?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool> | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerAllPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisPoolmanagerAllPoolsRequest: (g_struct: OsmosisPoolmanagerAllPoolsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ALL_POOLS_REQUEST = "/osmosis.poolmanager.v1beta1.AllPoolsRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.AllPoolsRequest` - =============================== AllPools
 */
export type OsmosisPoolmanagerAllPoolsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerAllPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 */
export declare const destructOsmosisPoolmanagerAllPoolsResponse: (g_struct: OsmosisPoolmanagerAllPoolsResponse) => [pools?: JsonAny<string, OsmosisConcentratedliquidityPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisGammPool | OsmosisGammPoolmodelsStableswapPool>[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ALL_POOLS_RESPONSE = "/osmosis.poolmanager.v1beta1.AllPoolsResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.AllPoolsResponse` -
 */
export type OsmosisPoolmanagerAllPoolsResponse = {
    pools?: JsonAny<string, OsmosisGammPoolmodelsStableswapPool | OsmosisGammPool | OsmosisCosmwasmpoolCosmWasmPool | OsmosisConcentratedliquidityPool>[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerSpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export declare const destructOsmosisPoolmanagerSpotPriceRequest: (g_struct: OsmosisPoolmanagerSpotPriceRequest) => [pool_id?: CwUint64, base_asset_denom?: string, quote_asset_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_SPOT_PRICE_REQUEST = "/osmosis.poolmanager.v1beta1.SpotPriceRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.SpotPriceRequest` - defines the gRPC request structure for a SpotPrice query.
 */
export type OsmosisPoolmanagerSpotPriceRequest = {
    pool_id?: CwUint64 | undefined;
    base_asset_denom?: string | undefined;
    quote_asset_denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerSpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export declare const destructOsmosisPoolmanagerSpotPriceResponse: (g_struct: OsmosisPoolmanagerSpotPriceResponse) => [spot_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_SPOT_PRICE_RESPONSE = "/osmosis.poolmanager.v1beta1.SpotPriceResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.SpotPriceResponse` - defines the gRPC response structure for a SpotPrice query.
 */
export type OsmosisPoolmanagerSpotPriceResponse = {
    spot_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalPoolLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisPoolmanagerTotalPoolLiquidityRequest: (g_struct: OsmosisPoolmanagerTotalPoolLiquidityRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_POOL_LIQUIDITY_REQUEST = "/osmosis.poolmanager.v1beta1.TotalPoolLiquidityRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalPoolLiquidityRequest` - =============================== TotalPoolLiquidity
 */
export type OsmosisPoolmanagerTotalPoolLiquidityRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalPoolLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export declare const destructOsmosisPoolmanagerTotalPoolLiquidityResponse: (g_struct: OsmosisPoolmanagerTotalPoolLiquidityResponse) => [liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_POOL_LIQUIDITY_RESPONSE = "/osmosis.poolmanager.v1beta1.TotalPoolLiquidityResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalPoolLiquidityResponse` -
 */
export type OsmosisPoolmanagerTotalPoolLiquidityResponse = {
    liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisPoolmanagerTotalLiquidityRequest: (g_struct: OsmosisPoolmanagerTotalLiquidityRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_LIQUIDITY_REQUEST = "/osmosis.poolmanager.v1beta1.TotalLiquidityRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalLiquidityRequest` - =============================== TotalLiquidity
 */
export type OsmosisPoolmanagerTotalLiquidityRequest = {};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export declare const destructOsmosisPoolmanagerTotalLiquidityResponse: (g_struct: OsmosisPoolmanagerTotalLiquidityResponse) => [liquidity?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_LIQUIDITY_RESPONSE = "/osmosis.poolmanager.v1beta1.TotalLiquidityResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalLiquidityResponse` -
 */
export type OsmosisPoolmanagerTotalLiquidityResponse = {
    liquidity?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalVolumeForPoolRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisPoolmanagerTotalVolumeForPoolRequest: (g_struct: OsmosisPoolmanagerTotalVolumeForPoolRequest) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_VOLUME_FOR_POOL_REQUEST = "/osmosis.poolmanager.v1beta1.TotalVolumeForPoolRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalVolumeForPoolRequest` - =============================== TotalVolumeForPool
 */
export type OsmosisPoolmanagerTotalVolumeForPoolRequest = {
    pool_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTotalVolumeForPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: volume -
 */
export declare const destructOsmosisPoolmanagerTotalVolumeForPoolResponse: (g_struct: OsmosisPoolmanagerTotalVolumeForPoolResponse) => [volume?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TOTAL_VOLUME_FOR_POOL_RESPONSE = "/osmosis.poolmanager.v1beta1.TotalVolumeForPoolResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TotalVolumeForPoolResponse` -
 */
export type OsmosisPoolmanagerTotalVolumeForPoolResponse = {
    volume?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTradingPairTakerFeeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom_0 -
 *   - 1: denom_1 -
 */
export declare const destructOsmosisPoolmanagerTradingPairTakerFeeRequest: (g_struct: OsmosisPoolmanagerTradingPairTakerFeeRequest) => [denom_0?: string, denom_1?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TRADING_PAIR_TAKER_FEE_REQUEST = "/osmosis.poolmanager.v1beta1.TradingPairTakerFeeRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TradingPairTakerFeeRequest` - =============================== TradingPairTakerFee
 */
export type OsmosisPoolmanagerTradingPairTakerFeeRequest = {
    denom_0?: string | undefined;
    denom_1?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerTradingPairTakerFeeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: taker_fee -
 */
export declare const destructOsmosisPoolmanagerTradingPairTakerFeeResponse: (g_struct: OsmosisPoolmanagerTradingPairTakerFeeResponse) => [taker_fee?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_TRADING_PAIR_TAKER_FEE_RESPONSE = "/osmosis.poolmanager.v1beta1.TradingPairTakerFeeResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.TradingPairTakerFeeResponse` -
 */
export type OsmosisPoolmanagerTradingPairTakerFeeResponse = {
    taker_fee?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: from_coin - the total amount of tokens that the user wants to sell.
 *   - 1: to_coin_denom - the denom identifier of the token that the user wants to buy.
 *   - 2: pool_id - the identifier of the liquidity pool that the trade will occur on.
 *   - 3: max_price_impact - the maximum percentage that the user is willing to affect the price of the liquidity pool.
 *   - 4: external_price - an optional external price that the user can enter. It adjusts the MaxPriceImpact as the SpotPrice of a pool can be changed at any time.
 */
export declare const destructOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest: (g_struct: OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest) => [from_coin?: CosmosBaseCoin, to_coin_denom?: string, pool_id?: CwUint64, max_price_impact?: string, external_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_TRADE_BASED_ON_PRICE_IMPACT_REQUEST = "/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactRequest";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactRequest` - represents a request to estimate a trade for Balancer/StableSwap/Concentrated liquidity pool types based on the given parameters.
 */
export type OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest = {
    from_coin?: CosmosBaseCoin | undefined;
    to_coin_denom?: string | undefined;
    pool_id?: CwUint64 | undefined;
    max_price_impact?: string | undefined;
    external_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: input_coin - the actual input amount that would be tradeable under the specified price impact.
 *   - 1: output_coin - the amount of tokens of the ToCoinDenom type that will be received for the actual InputCoin trade.
 */
export declare const destructOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse: (g_struct: OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse) => [input_coin?: CosmosBaseCoin, output_coin?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_ESTIMATE_TRADE_BASED_ON_PRICE_IMPACT_RESPONSE = "/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactResponse";
/**
 * JSON serialization of `osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactResponse` - represents the response data for an estimated trade based on price impact. If a trade fails to be estimated the response would be 0,0 for input_coin and output_coin and will not error.
 */
export type OsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse = {
    input_coin?: CosmosBaseCoin | undefined;
    output_coin?: CosmosBaseCoin | undefined;
};
