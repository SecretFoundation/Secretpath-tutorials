import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, coin } from '../../../../api/protobuf-writer.js';
import { decodeOsmosisPoolmanagerSwapAmountInRoute, decodeOsmosisPoolmanagerSwapAmountInSplitRoute, decodeOsmosisPoolmanagerSwapAmountOutRoute, decodeOsmosisPoolmanagerSwapAmountOutSplitRoute } from './swap_route.js';
/**
 * Encodes a `MsgSwapExactAmountIn` protobuf message: ===================== MsgSwapExactAmountIn
 * @param sa_sender - `sender`:
 * @param a_routes - `routes`:
 * @param a_token_in - `token_in`:
 * @param s_token_out_min_amount - `token_out_min_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSwapExactAmountIn = (sa_sender, a_routes, a_token_in, s_token_out_min_amount) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .B(a_routes) // SwapAmountInRoute[] routes = 2
    .b(coin(a_token_in)) // Coin token_in = 3
    .s(s_token_out_min_amount) // string token_out_min_amount = 4
    .o;
/**
 * Encodes a `MsgSwapExactAmountInResponse` protobuf message:
 * @param s_token_out_amount - `token_out_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSwapExactAmountInResponse = (s_token_out_amount) => Protobuf() // ...
    .s(s_token_out_amount) // string token_out_amount = 1
    .o;
/**
 * Encodes a `MsgSplitRouteSwapExactAmountIn` protobuf message: ===================== MsgSplitRouteSwapExactAmountIn
 * @param sa_sender - `sender`:
 * @param a_routes - `routes`:
 * @param s_token_in_denom - `token_in_denom`:
 * @param s_token_out_min_amount - `token_out_min_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn = (sa_sender, a_routes, s_token_in_denom, s_token_out_min_amount) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .B(a_routes) // SwapAmountInSplitRoute[] routes = 2
    .s(s_token_in_denom) // string token_in_denom = 3
    .s(s_token_out_min_amount) // string token_out_min_amount = 4
    .o;
/**
 * Encodes a `MsgSplitRouteSwapExactAmountInResponse` protobuf message:
 * @param s_token_out_amount - `token_out_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse = (s_token_out_amount) => Protobuf() // ...
    .s(s_token_out_amount) // string token_out_amount = 1
    .o;
/**
 * Encodes a `MsgSwapExactAmountOut` protobuf message: ===================== MsgSwapExactAmountOut
 * @param sa_sender - `sender`:
 * @param a_routes - `routes`:
 * @param s_token_in_max_amount - `token_in_max_amount`:
 * @param a_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSwapExactAmountOut = (sa_sender, a_routes, s_token_in_max_amount, a_token_out) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .B(a_routes) // SwapAmountOutRoute[] routes = 2
    .s(s_token_in_max_amount) // string token_in_max_amount = 3
    .b(coin(a_token_out)) // Coin token_out = 4
    .o;
/**
 * Encodes a `MsgSwapExactAmountOutResponse` protobuf message:
 * @param s_token_in_amount - `token_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSwapExactAmountOutResponse = (s_token_in_amount) => Protobuf() // ...
    .s(s_token_in_amount) // string token_in_amount = 1
    .o;
/**
 * Encodes a `MsgSplitRouteSwapExactAmountOut` protobuf message: ===================== MsgSplitRouteSwapExactAmountOut
 * @param sa_sender - `sender`:
 * @param a_routes - `routes`:
 * @param s_token_out_denom - `token_out_denom`:
 * @param s_token_in_max_amount - `token_in_max_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut = (sa_sender, a_routes, s_token_out_denom, s_token_in_max_amount) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .B(a_routes) // SwapAmountOutSplitRoute[] routes = 2
    .s(s_token_out_denom) // string token_out_denom = 3
    .s(s_token_in_max_amount) // string token_in_max_amount = 4
    .o;
/**
 * Encodes a `MsgSplitRouteSwapExactAmountOutResponse` protobuf message:
 * @param s_token_in_amount - `token_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse = (s_token_in_amount) => Protobuf() // ...
    .s(s_token_in_amount) // string token_in_amount = 1
    .o;
/**
 * Encodes a `MsgSetDenomPairTakerFee` protobuf message: ===================== MsgSetDenomPairTakerFee
 * @param sa_sender - `sender`:
 * @param a_denom_pair_taker_fees - `denom_pair_taker_fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSetDenomPairTakerFee = (sa_sender, a_denom_pair_taker_fees) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .B(a_denom_pair_taker_fees) // DenomPairTakerFee[] denom_pair_taker_fee = 2
    .o;
/**
 * Encodes a `MsgSetDenomPairTakerFeeResponse` protobuf message:
 * @param b_success - `success`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse = (b_success) => Protobuf() // ...
    .v(b_success) // boolean success = 1
    .o;
/**
 * Encodes a `DenomPairTakerFee` protobuf message:
 * @param s_denom0 - `denom0`: and denom1 get automatically lexigographically sorted when being stored, so the order of input here does not matter.
 * @param s_denom1 - `denom1`:
 * @param s_taker_fee - `taker_fee`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerDenomPairTakerFee = (s_denom0, s_denom1, s_taker_fee) => Protobuf() // ...
    .s(s_denom0) // string denom0 = 1
    .s(s_denom1) // string denom1 = 2
    .s(s_taker_fee) // string taker_fee = 3
    .o;
/**
 * Decodes a protobuf SwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSwapExactAmountIn}
 */
export const decodeOsmosisPoolmanagerMsgSwapExactAmountIn = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0, 1, 5], [0, decodeOsmosisPoolmanagerSwapAmountInRoute, decode_coin]);
/**
 * Decodes a protobuf SwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSwapExactAmountInResponse}
 */
export const decodeOsmosisPoolmanagerMsgSwapExactAmountInResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SplitRouteSwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn}
 */
export const decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0, 5, 5], [0, decodeOsmosisPoolmanagerSwapAmountInSplitRoute]);
/**
 * Decodes a protobuf SplitRouteSwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse}
 */
export const decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSwapExactAmountOut}
 */
export const decodeOsmosisPoolmanagerMsgSwapExactAmountOut = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0, 5, 1], [0, decodeOsmosisPoolmanagerSwapAmountOutRoute, 0, decode_coin]);
/**
 * Decodes a protobuf SwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSwapExactAmountOutResponse}
 */
export const decodeOsmosisPoolmanagerMsgSwapExactAmountOutResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SplitRouteSwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut}
 */
export const decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0, 5, 5], [0, decodeOsmosisPoolmanagerSwapAmountOutSplitRoute]);
/**
 * Decodes a protobuf SplitRouteSwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse}
 */
export const decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SetDenomPairTakerFee message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSetDenomPairTakerFee}
 */
export const decodeOsmosisPoolmanagerMsgSetDenomPairTakerFee = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0], [0, decodeOsmosisPoolmanagerDenomPairTakerFee]);
/**
 * Decodes a protobuf SetDenomPairTakerFee message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse}
 */
export const decodeOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf DenomPairTakerFee message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerDenomPairTakerFee}
 */
export const decodeOsmosisPoolmanagerDenomPairTakerFee = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSwapExactAmountIn} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: routes -
 *   - 2: token_in -
 *   - 3: token_out_min_amount -
 */
export const destructOsmosisPoolmanagerMsgSwapExactAmountIn = (g_struct) => [g_struct.sender, g_struct.routes, g_struct.token_in, g_struct.token_out_min_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SWAP_EXACT_AMOUNT_IN = '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountIn';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSwapExactAmountInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out_amount -
 */
export const destructOsmosisPoolmanagerMsgSwapExactAmountInResponse = (g_struct) => [g_struct.token_out_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SWAP_EXACT_AMOUNT_IN_RESPONSE = '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountInResponse';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: routes -
 *   - 2: token_in_denom -
 *   - 3: token_out_min_amount -
 */
export const destructOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn = (g_struct) => [g_struct.sender, g_struct.routes, g_struct.token_in_denom, g_struct.token_out_min_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SPLIT_ROUTE_SWAP_EXACT_AMOUNT_IN = '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountIn';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out_amount -
 */
export const destructOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse = (g_struct) => [g_struct.token_out_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SPLIT_ROUTE_SWAP_EXACT_AMOUNT_IN_RESPONSE = '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountInResponse';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSwapExactAmountOut} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: routes -
 *   - 2: token_in_max_amount -
 *   - 3: token_out -
 */
export const destructOsmosisPoolmanagerMsgSwapExactAmountOut = (g_struct) => [g_struct.sender, g_struct.routes, g_struct.token_in_max_amount, g_struct.token_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SWAP_EXACT_AMOUNT_OUT = '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountOut';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSwapExactAmountOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in_amount -
 */
export const destructOsmosisPoolmanagerMsgSwapExactAmountOutResponse = (g_struct) => [g_struct.token_in_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SWAP_EXACT_AMOUNT_OUT_RESPONSE = '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountOutResponse';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: routes -
 *   - 2: token_out_denom -
 *   - 3: token_in_max_amount -
 */
export const destructOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut = (g_struct) => [g_struct.sender, g_struct.routes, g_struct.token_out_denom, g_struct.token_in_max_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SPLIT_ROUTE_SWAP_EXACT_AMOUNT_OUT = '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOut';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in_amount -
 */
export const destructOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse = (g_struct) => [g_struct.token_in_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SPLIT_ROUTE_SWAP_EXACT_AMOUNT_OUT_RESPONSE = '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOutResponse';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSetDenomPairTakerFee} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: denom_pair_taker_fee -
 */
export const destructOsmosisPoolmanagerMsgSetDenomPairTakerFee = (g_struct) => [g_struct.sender, g_struct.denom_pair_taker_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SET_DENOM_PAIR_TAKER_FEE = '/osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFee';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerDenomPairTakerFee} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom0 - and denom1 get automatically lexigographically sorted when being stored, so the order of input here does not matter.
 *   - 1: denom1 -
 *   - 2: taker_fee -
 */
export const destructOsmosisPoolmanagerDenomPairTakerFee = (g_struct) => [g_struct.denom0, g_struct.denom1, g_struct.taker_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_DENOM_PAIR_TAKER_FEE = '/osmosis.poolmanager.v1beta1.DenomPairTakerFee';
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: success -
 */
export const destructOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse = (g_struct) => [g_struct.success];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MSG_SET_DENOM_PAIR_TAKER_FEE_RESPONSE = '/osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFeeResponse';
//# sourceMappingURL=tx.js.map