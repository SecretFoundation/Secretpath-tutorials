import type { Encoded, Opt, WeakDurationStr } from '../../../../api/types.js';
import type { OsmosisTwapTwapRecord, DecodedOsmosisTwapTwapRecord } from './twap_record.js';
export type EncodedOsmosisTwapParams = Encoded<'/osmosis.twap.v1beta1.Params'>;
export type EncodedOsmosisTwapGenesisState = Encoded<'/osmosis.twap.v1beta1.GenesisState'>;
/**
 * Encodes a `Params` protobuf message: holds parameters for the twap module
 * @param s_prune_epoch_identifier - `prune_epoch_identifier`:
 * @param xt_record_history_keep_period - `record_history_keep_period`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTwapParams: (s_prune_epoch_identifier?: Opt<string>, xt_record_history_keep_period?: Opt<number>) => EncodedOsmosisTwapParams;
/**
 * Encodes a `GenesisState` protobuf message: defines the twap module's genesis state.
 * @param a_twaps - `twaps`: the collection of all twap records.
 * @param g_params - `params`: the container of twap parameters.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTwapGenesisState: (a_twaps?: Opt<Encoded<'/osmosis.twap.v1beta1.TwapRecord'>[]>, atu8_params?: Opt<Encoded<'/osmosis.twap.v1beta1.Params'>>) => EncodedOsmosisTwapGenesisState;
/**
 * A decoded protobuf Params message
 *
 * Tuple where:
 *   - 0: prune_epoch_identifier -
 *   - 1: record_history_keep_period -
 */
export type DecodedOsmosisTwapParams = [
    s_prune_epoch_identifier?: string,
    a_record_history_keep_period?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapParams}
 */
export declare const decodeOsmosisTwapParams: (atu8_payload: Uint8Array) => DecodedOsmosisTwapParams;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: twaps - the collection of all twap records.
 *   - 1: params - the container of twap parameters.
 */
export type DecodedOsmosisTwapGenesisState = [
    a_twaps?: DecodedOsmosisTwapTwapRecord[],
    a_params?: DecodedOsmosisTwapParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapGenesisState}
 */
export declare const decodeOsmosisTwapGenesisState: (atu8_payload: Uint8Array) => DecodedOsmosisTwapGenesisState;
/**
 * Destructures the fields of a {@link OsmosisTwapParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: prune_epoch_identifier -
 *   - 1: record_history_keep_period -
 */
export declare const destructOsmosisTwapParams: (g_struct: OsmosisTwapParams) => [prune_epoch_identifier?: string, record_history_keep_period?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TWAP_PARAMS = "/osmosis.twap.v1beta1.Params";
/**
 * JSON serialization of `osmosis.twap.v1beta1.Params` - holds parameters for the twap module
 */
export type OsmosisTwapParams = {
    prune_epoch_identifier?: string | undefined;
    record_history_keep_period?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTwapGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: twaps - the collection of all twap records.
 *   - 1: params - the container of twap parameters.
 */
export declare const destructOsmosisTwapGenesisState: (g_struct: OsmosisTwapGenesisState) => [twaps?: OsmosisTwapTwapRecord[], params?: OsmosisTwapParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TWAP_GENESIS_STATE = "/osmosis.twap.v1beta1.GenesisState";
/**
 * JSON serialization of `osmosis.twap.v1beta1.GenesisState` - defines the twap module's genesis state.
 */
export type OsmosisTwapGenesisState = {
    twaps?: OsmosisTwapTwapRecord[] | undefined;
    params?: OsmosisTwapParams | undefined;
};
