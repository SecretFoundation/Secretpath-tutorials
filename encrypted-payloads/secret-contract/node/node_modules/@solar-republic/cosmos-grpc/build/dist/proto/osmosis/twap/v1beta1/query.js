import { parse_timestamp, timestamp_to_json } from '../../../../api/json.js';
import { decode_protobuf, decode_temporal } from '../../../../api/protobuf-reader.js';
import { Protobuf, temporal } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeOsmosisTwapParams } from './genesis.js';
const SR_LCD_OSMOSIS_TWAP_QUERY = '/osmosis/twap/v1beta1/';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryOsmosisTwapParams = restful_grpc(() => [SR_LCD_OSMOSIS_TWAP_QUERY + 'Params']);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset -
 * @param s_quote_asset -
 * @param xt_start_time -
 * @param xt_end_time -
 * @returns a tuple where:
 *   - 0: arithmetic_twap - the 'arithmetic_twap' response property
 */
export const queryOsmosisTwapArithmeticTwap = restful_grpc((sg_pool_id, s_base_asset, s_quote_asset, xt_start_time, xt_end_time) => [SR_LCD_OSMOSIS_TWAP_QUERY + 'ArithmeticTwap', {
        pool_id: sg_pool_id,
        base_asset: s_base_asset,
        quote_asset: s_quote_asset,
        start_time: timestamp_to_json(xt_start_time),
        end_time: timestamp_to_json(xt_end_time),
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset -
 * @param s_quote_asset -
 * @param xt_start_time -
 * @returns a tuple where:
 *   - 0: arithmetic_twap - the 'arithmetic_twap' response property
 */
export const queryOsmosisTwapArithmeticTwapToNow = restful_grpc((sg_pool_id, s_base_asset, s_quote_asset, xt_start_time) => [SR_LCD_OSMOSIS_TWAP_QUERY + 'ArithmeticTwapToNow', {
        pool_id: sg_pool_id,
        base_asset: s_base_asset,
        quote_asset: s_quote_asset,
        start_time: timestamp_to_json(xt_start_time),
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset -
 * @param s_quote_asset -
 * @param xt_start_time -
 * @param xt_end_time -
 * @returns a tuple where:
 *   - 0: geometric_twap - the 'geometric_twap' response property
 */
export const queryOsmosisTwapGeometricTwap = restful_grpc((sg_pool_id, s_base_asset, s_quote_asset, xt_start_time, xt_end_time) => [SR_LCD_OSMOSIS_TWAP_QUERY + 'GeometricTwap', {
        pool_id: sg_pool_id,
        base_asset: s_base_asset,
        quote_asset: s_quote_asset,
        start_time: timestamp_to_json(xt_start_time),
        end_time: timestamp_to_json(xt_end_time),
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset -
 * @param s_quote_asset -
 * @param xt_start_time -
 * @returns a tuple where:
 *   - 0: geometric_twap - the 'geometric_twap' response property
 */
export const queryOsmosisTwapGeometricTwapToNow = restful_grpc((sg_pool_id, s_base_asset, s_quote_asset, xt_start_time) => [SR_LCD_OSMOSIS_TWAP_QUERY + 'GeometricTwapToNow', {
        pool_id: sg_pool_id,
        base_asset: s_base_asset,
        quote_asset: s_quote_asset,
        start_time: timestamp_to_json(xt_start_time),
    }]);
/**
 * Encodes a `ArithmeticTwapRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset - `base_asset`:
 * @param s_quote_asset - `quote_asset`:
 * @param xt_start_time - `start_time`:
 * @param xt_end_time - `end_time`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapArithmeticTwapRequest = (sg_pool_id, s_base_asset, s_quote_asset, xt_start_time, xt_end_time) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset) // string base_asset = 2
    .s(s_quote_asset) // string quote_asset = 3
    .b(temporal(xt_start_time)) // Timestamp start_time = 4
    .b(temporal(xt_end_time)) // Timestamp end_time = 5
    .o;
/**
 * Encodes a `ArithmeticTwapResponse` protobuf message:
 * @param s_arithmetic_twap - `arithmetic_twap`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapArithmeticTwapResponse = (s_arithmetic_twap) => Protobuf() // ...
    .s(s_arithmetic_twap) // string arithmetic_twap = 1
    .o;
/**
 * Encodes a `ArithmeticTwapToNowRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset - `base_asset`:
 * @param s_quote_asset - `quote_asset`:
 * @param xt_start_time - `start_time`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapArithmeticTwapToNowRequest = (sg_pool_id, s_base_asset, s_quote_asset, xt_start_time) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset) // string base_asset = 2
    .s(s_quote_asset) // string quote_asset = 3
    .b(temporal(xt_start_time)) // Timestamp start_time = 4
    .o;
/**
 * Encodes a `ArithmeticTwapToNowResponse` protobuf message:
 * @param s_arithmetic_twap - `arithmetic_twap`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapArithmeticTwapToNowResponse = (s_arithmetic_twap) => Protobuf() // ...
    .s(s_arithmetic_twap) // string arithmetic_twap = 1
    .o;
/**
 * Encodes a `GeometricTwapRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset - `base_asset`:
 * @param s_quote_asset - `quote_asset`:
 * @param xt_start_time - `start_time`:
 * @param xt_end_time - `end_time`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapGeometricTwapRequest = (sg_pool_id, s_base_asset, s_quote_asset, xt_start_time, xt_end_time) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset) // string base_asset = 2
    .s(s_quote_asset) // string quote_asset = 3
    .b(temporal(xt_start_time)) // Timestamp start_time = 4
    .b(temporal(xt_end_time)) // Timestamp end_time = 5
    .o;
/**
 * Encodes a `GeometricTwapResponse` protobuf message:
 * @param s_geometric_twap - `geometric_twap`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapGeometricTwapResponse = (s_geometric_twap) => Protobuf() // ...
    .s(s_geometric_twap) // string geometric_twap = 1
    .o;
/**
 * Encodes a `GeometricTwapToNowRequest` protobuf message:
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset - `base_asset`:
 * @param s_quote_asset - `quote_asset`:
 * @param xt_start_time - `start_time`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapGeometricTwapToNowRequest = (sg_pool_id, s_base_asset, s_quote_asset, xt_start_time) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset) // string base_asset = 2
    .s(s_quote_asset) // string quote_asset = 3
    .b(temporal(xt_start_time)) // Timestamp start_time = 4
    .o;
/**
 * Encodes a `GeometricTwapToNowResponse` protobuf message:
 * @param s_geometric_twap - `geometric_twap`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapGeometricTwapToNowResponse = (s_geometric_twap) => Protobuf() // ...
    .s(s_geometric_twap) // string geometric_twap = 1
    .o;
/**
 * Encodes a `ParamsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTwapParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Decodes a protobuf ArithmeticTwapRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapArithmeticTwapRequest}
 */
export const decodeOsmosisTwapArithmeticTwapRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5, [3, 1], [3, 1]], [0, 0, 0, decode_temporal, decode_temporal]);
/**
 * Decodes a protobuf ArithmeticTwap message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapArithmeticTwapResponse}
 */
export const decodeOsmosisTwapArithmeticTwapResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf ArithmeticTwapToNowRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapArithmeticTwapToNowRequest}
 */
export const decodeOsmosisTwapArithmeticTwapToNowRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5, [3, 1]], [0, 0, 0, decode_temporal]);
/**
 * Decodes a protobuf ArithmeticTwapToNow message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapArithmeticTwapToNowResponse}
 */
export const decodeOsmosisTwapArithmeticTwapToNowResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf GeometricTwapRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapGeometricTwapRequest}
 */
export const decodeOsmosisTwapGeometricTwapRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5, [3, 1], [3, 1]], [0, 0, 0, decode_temporal, decode_temporal]);
/**
 * Decodes a protobuf GeometricTwap message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapGeometricTwapResponse}
 */
export const decodeOsmosisTwapGeometricTwapResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf GeometricTwapToNowRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapGeometricTwapToNowRequest}
 */
export const decodeOsmosisTwapGeometricTwapToNowRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5, [3, 1]], [0, 0, 0, decode_temporal]);
/**
 * Decodes a protobuf GeometricTwapToNow message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapGeometricTwapToNowResponse}
 */
export const decodeOsmosisTwapGeometricTwapToNowResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapParamsRequest}
 */
export const decodeOsmosisTwapParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTwapParamsResponse}
 */
export const decodeOsmosisTwapParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisTwapParams]);
/**
 * Destructures the fields of a {@link OsmosisTwapArithmeticTwapRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset -
 *   - 2: quote_asset -
 *   - 3: start_time -
 *   - 4: end_time -
 */
export const destructOsmosisTwapArithmeticTwapRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset, g_struct.quote_asset, parse_timestamp(g_struct.start_time), parse_timestamp(g_struct.end_time)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_ARITHMETIC_TWAP_REQUEST = '/osmosis.twap.v1beta1.ArithmeticTwapRequest';
/**
 * Destructures the fields of a {@link OsmosisTwapArithmeticTwapResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: arithmetic_twap -
 */
export const destructOsmosisTwapArithmeticTwapResponse = (g_struct) => [g_struct.arithmetic_twap];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_ARITHMETIC_TWAP_RESPONSE = '/osmosis.twap.v1beta1.ArithmeticTwapResponse';
/**
 * Destructures the fields of a {@link OsmosisTwapArithmeticTwapToNowRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset -
 *   - 2: quote_asset -
 *   - 3: start_time -
 */
export const destructOsmosisTwapArithmeticTwapToNowRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset, g_struct.quote_asset, parse_timestamp(g_struct.start_time)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_ARITHMETIC_TWAP_TO_NOW_REQUEST = '/osmosis.twap.v1beta1.ArithmeticTwapToNowRequest';
/**
 * Destructures the fields of a {@link OsmosisTwapArithmeticTwapToNowResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: arithmetic_twap -
 */
export const destructOsmosisTwapArithmeticTwapToNowResponse = (g_struct) => [g_struct.arithmetic_twap];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_ARITHMETIC_TWAP_TO_NOW_RESPONSE = '/osmosis.twap.v1beta1.ArithmeticTwapToNowResponse';
/**
 * Destructures the fields of a {@link OsmosisTwapGeometricTwapRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset -
 *   - 2: quote_asset -
 *   - 3: start_time -
 *   - 4: end_time -
 */
export const destructOsmosisTwapGeometricTwapRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset, g_struct.quote_asset, parse_timestamp(g_struct.start_time), parse_timestamp(g_struct.end_time)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_GEOMETRIC_TWAP_REQUEST = '/osmosis.twap.v1beta1.GeometricTwapRequest';
/**
 * Destructures the fields of a {@link OsmosisTwapGeometricTwapResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: geometric_twap -
 */
export const destructOsmosisTwapGeometricTwapResponse = (g_struct) => [g_struct.geometric_twap];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_GEOMETRIC_TWAP_RESPONSE = '/osmosis.twap.v1beta1.GeometricTwapResponse';
/**
 * Destructures the fields of a {@link OsmosisTwapGeometricTwapToNowRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset -
 *   - 2: quote_asset -
 *   - 3: start_time -
 */
export const destructOsmosisTwapGeometricTwapToNowRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset, g_struct.quote_asset, parse_timestamp(g_struct.start_time)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_GEOMETRIC_TWAP_TO_NOW_REQUEST = '/osmosis.twap.v1beta1.GeometricTwapToNowRequest';
/**
 * Destructures the fields of a {@link OsmosisTwapGeometricTwapToNowResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: geometric_twap -
 */
export const destructOsmosisTwapGeometricTwapToNowResponse = (g_struct) => [g_struct.geometric_twap];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_GEOMETRIC_TWAP_TO_NOW_RESPONSE = '/osmosis.twap.v1beta1.GeometricTwapToNowResponse';
/**
 * Destructures the fields of a {@link OsmosisTwapParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisTwapParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_PARAMS_REQUEST = '/osmosis.twap.v1beta1.ParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisTwapParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructOsmosisTwapParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TWAP_PARAMS_RESPONSE = '/osmosis.twap.v1beta1.ParamsResponse';
//# sourceMappingURL=query.js.map