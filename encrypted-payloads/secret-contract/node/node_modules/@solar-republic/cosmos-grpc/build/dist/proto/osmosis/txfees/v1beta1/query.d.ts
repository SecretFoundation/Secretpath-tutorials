/// <reference types="node" />
import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { OsmosisTxfeesFeeToken, DecodedOsmosisTxfeesFeeToken } from './feetoken.js';
export type EncodedOsmosisTxfeesQueryFeeTokensRequest = Encoded<'/osmosis.txfees.v1beta1.QueryFeeTokensRequest'>;
export type EncodedOsmosisTxfeesQueryFeeTokensResponse = Encoded<'/osmosis.txfees.v1beta1.QueryFeeTokensResponse'>;
export type EncodedOsmosisTxfeesQueryDenomSpotPriceRequest = Encoded<'/osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest'>;
export type EncodedOsmosisTxfeesQueryDenomSpotPriceResponse = Encoded<'/osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse'>;
export type EncodedOsmosisTxfeesQueryDenomPoolIdRequest = Encoded<'/osmosis.txfees.v1beta1.QueryDenomPoolIdRequest'>;
export type EncodedOsmosisTxfeesQueryDenomPoolIdResponse = Encoded<'/osmosis.txfees.v1beta1.QueryDenomPoolIdResponse'>;
export type EncodedOsmosisTxfeesQueryBaseDenomRequest = Encoded<'/osmosis.txfees.v1beta1.QueryBaseDenomRequest'>;
export type EncodedOsmosisTxfeesQueryBaseDenomResponse = Encoded<'/osmosis.txfees.v1beta1.QueryBaseDenomResponse'>;
/**
 * Returns a list of all the whitelisted fee tokens and their corresponding pools. It does not include the BaseDenom, which has its own query endpoint
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: fee_tokens - the 'fee_tokens' response property
 */
export declare const queryOsmosisTxfeesFeeTokens: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisTxfeesQueryFeeTokensResponse>>;
/**
 * Returns all spot prices by each registered token denom.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: poolID - the 'poolID' response property
 *   - 1: spot_price - the 'poolID' response property
 */
export declare const queryOsmosisTxfeesDenomSpotPrice: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisTxfeesQueryDenomSpotPriceResponse>>;
/**
 * Returns the poolID for a specified denom input.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: poolID - the 'poolID' response property
 */
export declare const queryOsmosisTxfeesDenomPoolId: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisTxfeesQueryDenomPoolIdResponse>>;
/**
 * Returns a list of all base denom tokens and their corresponding pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: base_denom - the 'base_denom' response property
 */
export declare const queryOsmosisTxfeesBaseDenom: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisTxfeesQueryBaseDenomResponse>>;
/**
 * Encodes a `QueryFeeTokensRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryFeeTokensRequest: () => EncodedOsmosisTxfeesQueryFeeTokensRequest;
/**
 * Encodes a `QueryFeeTokensResponse` protobuf message:
 * @param a_fee_tokens - `fee_tokens`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryFeeTokensResponse: (a_fee_tokens?: Opt<Encoded<'/osmosis.txfees.v1beta1.FeeToken'>[]>) => EncodedOsmosisTxfeesQueryFeeTokensResponse;
/**
 * Encodes a `QueryDenomSpotPriceRequest` protobuf message: defines grpc request structure for querying spot price for the specified tx fee denom
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryDenomSpotPriceRequest: (s_denom?: Opt<string>) => EncodedOsmosisTxfeesQueryDenomSpotPriceRequest;
/**
 * Encodes a `QueryDenomSpotPriceResponse` protobuf message: QueryDenomSpotPriceRequest defines grpc response structure for querying spot price for the specified tx fee denom
 * @param sg_poolID - `poolID`:
 * @param s_spot_price - `spot_price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryDenomSpotPriceResponse: (sg_poolID?: Opt<WeakUint64Str>, s_spot_price?: Opt<string>) => EncodedOsmosisTxfeesQueryDenomSpotPriceResponse;
/**
 * Encodes a `QueryDenomPoolIdRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryDenomPoolIdRequest: (s_denom?: Opt<string>) => EncodedOsmosisTxfeesQueryDenomPoolIdRequest;
/**
 * Encodes a `QueryDenomPoolIdResponse` protobuf message:
 * @param sg_poolID - `poolID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryDenomPoolIdResponse: (sg_poolID?: Opt<WeakUint64Str>) => EncodedOsmosisTxfeesQueryDenomPoolIdResponse;
/**
 * Encodes a `QueryBaseDenomRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryBaseDenomRequest: () => EncodedOsmosisTxfeesQueryBaseDenomRequest;
/**
 * Encodes a `QueryBaseDenomResponse` protobuf message:
 * @param s_base_denom - `base_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesQueryBaseDenomResponse: (s_base_denom?: Opt<string>) => EncodedOsmosisTxfeesQueryBaseDenomResponse;
/**
 * A decoded protobuf QueryFeeTokensRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisTxfeesQueryFeeTokensRequest = [];
/**
 * Decodes a protobuf QueryFeeTokensRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryFeeTokensRequest}
 */
export declare const decodeOsmosisTxfeesQueryFeeTokensRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryFeeTokens message
 *
 * Alias for: fee_tokens -
 */
export type DecodedOsmosisTxfeesQueryFeeTokensResponse = [
    a_fee_tokens?: DecodedOsmosisTxfeesFeeToken[]
];
/**
 * Decodes a protobuf QueryFeeTokens message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryFeeTokensResponse}
 */
export declare const decodeOsmosisTxfeesQueryFeeTokensResponse: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryFeeTokensResponse;
/**
 * A decoded protobuf QueryDenomSpotPriceRequest message
 *
 * Alias for: denom -
 */
export type DecodedOsmosisTxfeesQueryDenomSpotPriceRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QueryDenomSpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomSpotPriceRequest}
 */
export declare const decodeOsmosisTxfeesQueryDenomSpotPriceRequest: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryDenomSpotPriceRequest;
/**
 * A decoded protobuf QueryDenomSpotPrice message
 *
 * Tuple where:
 *   - 0: poolID -
 *   - 1: spot_price -
 */
export type DecodedOsmosisTxfeesQueryDenomSpotPriceResponse = [
    sg_poolID?: CwUint64,
    s_spot_price?: string
];
/**
 * Decodes a protobuf QueryDenomSpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomSpotPriceResponse}
 */
export declare const decodeOsmosisTxfeesQueryDenomSpotPriceResponse: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryDenomSpotPriceResponse;
/**
 * A decoded protobuf QueryDenomPoolIdRequest message
 *
 * Alias for: denom -
 */
export type DecodedOsmosisTxfeesQueryDenomPoolIdRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QueryDenomPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomPoolIdRequest}
 */
export declare const decodeOsmosisTxfeesQueryDenomPoolIdRequest: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryDenomPoolIdRequest;
/**
 * A decoded protobuf QueryDenomPoolId message
 *
 * Alias for: poolID -
 */
export type DecodedOsmosisTxfeesQueryDenomPoolIdResponse = [
    sg_poolID?: CwUint64
];
/**
 * Decodes a protobuf QueryDenomPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomPoolIdResponse}
 */
export declare const decodeOsmosisTxfeesQueryDenomPoolIdResponse: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryDenomPoolIdResponse;
/**
 * A decoded protobuf QueryBaseDenomRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisTxfeesQueryBaseDenomRequest = [];
/**
 * Decodes a protobuf QueryBaseDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryBaseDenomRequest}
 */
export declare const decodeOsmosisTxfeesQueryBaseDenomRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryBaseDenom message
 *
 * Alias for: base_denom -
 */
export type DecodedOsmosisTxfeesQueryBaseDenomResponse = [
    s_base_denom?: string
];
/**
 * Decodes a protobuf QueryBaseDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryBaseDenomResponse}
 */
export declare const decodeOsmosisTxfeesQueryBaseDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesQueryBaseDenomResponse;
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryFeeTokensRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisTxfeesQueryFeeTokensRequest: (g_struct: OsmosisTxfeesQueryFeeTokensRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_FEE_TOKENS_REQUEST = "/osmosis.txfees.v1beta1.QueryFeeTokensRequest";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryFeeTokensRequest` -
 */
export type OsmosisTxfeesQueryFeeTokensRequest = {};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryFeeTokensResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_tokens -
 */
export declare const destructOsmosisTxfeesQueryFeeTokensResponse: (g_struct: OsmosisTxfeesQueryFeeTokensResponse) => [fee_tokens?: OsmosisTxfeesFeeToken[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_FEE_TOKENS_RESPONSE = "/osmosis.txfees.v1beta1.QueryFeeTokensResponse";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryFeeTokensResponse` -
 */
export type OsmosisTxfeesQueryFeeTokensResponse = {
    fee_tokens?: OsmosisTxfeesFeeToken[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomSpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export declare const destructOsmosisTxfeesQueryDenomSpotPriceRequest: (g_struct: OsmosisTxfeesQueryDenomSpotPriceRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_SPOT_PRICE_REQUEST = "/osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest` - defines grpc request structure for querying spot price for the specified tx fee denom
 */
export type OsmosisTxfeesQueryDenomSpotPriceRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomSpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: poolID -
 *   - 1: spot_price -
 */
export declare const destructOsmosisTxfeesQueryDenomSpotPriceResponse: (g_struct: OsmosisTxfeesQueryDenomSpotPriceResponse) => [poolID?: CwUint64, spot_price?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_SPOT_PRICE_RESPONSE = "/osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse` - QueryDenomSpotPriceRequest defines grpc response structure for querying spot price for the specified tx fee denom
 */
export type OsmosisTxfeesQueryDenomSpotPriceResponse = {
    poolID?: CwUint64 | undefined;
    spot_price?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export declare const destructOsmosisTxfeesQueryDenomPoolIdRequest: (g_struct: OsmosisTxfeesQueryDenomPoolIdRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_POOL_ID_REQUEST = "/osmosis.txfees.v1beta1.QueryDenomPoolIdRequest";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryDenomPoolIdRequest` -
 */
export type OsmosisTxfeesQueryDenomPoolIdRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: poolID -
 */
export declare const destructOsmosisTxfeesQueryDenomPoolIdResponse: (g_struct: OsmosisTxfeesQueryDenomPoolIdResponse) => [poolID?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_POOL_ID_RESPONSE = "/osmosis.txfees.v1beta1.QueryDenomPoolIdResponse";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryDenomPoolIdResponse` -
 */
export type OsmosisTxfeesQueryDenomPoolIdResponse = {
    poolID?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryBaseDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisTxfeesQueryBaseDenomRequest: (g_struct: OsmosisTxfeesQueryBaseDenomRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_BASE_DENOM_REQUEST = "/osmosis.txfees.v1beta1.QueryBaseDenomRequest";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryBaseDenomRequest` -
 */
export type OsmosisTxfeesQueryBaseDenomRequest = {};
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryBaseDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: base_denom -
 */
export declare const destructOsmosisTxfeesQueryBaseDenomResponse: (g_struct: OsmosisTxfeesQueryBaseDenomResponse) => [base_denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_BASE_DENOM_RESPONSE = "/osmosis.txfees.v1beta1.QueryBaseDenomResponse";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.QueryBaseDenomResponse` -
 */
export type OsmosisTxfeesQueryBaseDenomResponse = {
    base_denom?: string | undefined;
};
