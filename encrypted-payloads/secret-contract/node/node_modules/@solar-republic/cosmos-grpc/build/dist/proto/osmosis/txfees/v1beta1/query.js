import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeOsmosisTxfeesFeeToken } from './feetoken.js';
const SR_LCD_OSMOSIS_TXFEES_QUERY = '/osmosis/txfees/v1beta1/';
/**
 * Returns a list of all the whitelisted fee tokens and their corresponding pools. It does not include the BaseDenom, which has its own query endpoint
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: fee_tokens - the 'fee_tokens' response property
 */
export const queryOsmosisTxfeesFeeTokens = restful_grpc(() => [SR_LCD_OSMOSIS_TXFEES_QUERY + 'fee_tokens']);
/**
 * Returns all spot prices by each registered token denom.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: poolID - the 'poolID' response property
 *   - 1: spot_price - the 'poolID' response property
 */
export const queryOsmosisTxfeesDenomSpotPrice = restful_grpc(s_denom => [SR_LCD_OSMOSIS_TXFEES_QUERY + 'spot_price_by_denom', {
        denom: s_denom,
    }]);
/**
 * Returns the poolID for a specified denom input.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: poolID - the 'poolID' response property
 */
export const queryOsmosisTxfeesDenomPoolId = restful_grpc(s_denom => [SR_LCD_OSMOSIS_TXFEES_QUERY + 'denom_pool_id/' + s_denom]);
/**
 * Returns a list of all base denom tokens and their corresponding pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: base_denom - the 'base_denom' response property
 */
export const queryOsmosisTxfeesBaseDenom = restful_grpc(() => [SR_LCD_OSMOSIS_TXFEES_QUERY + 'base_denom']);
/**
 * Encodes a `QueryFeeTokensRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryFeeTokensRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryFeeTokensResponse` protobuf message:
 * @param a_fee_tokens - `fee_tokens`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryFeeTokensResponse = (a_fee_tokens) => Protobuf() // ...
    .B(a_fee_tokens) // FeeToken[] fee_tokens = 1
    .o;
/**
 * Encodes a `QueryDenomSpotPriceRequest` protobuf message: defines grpc request structure for querying spot price for the specified tx fee denom
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryDenomSpotPriceRequest = (s_denom) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .o;
/**
 * Encodes a `QueryDenomSpotPriceResponse` protobuf message: QueryDenomSpotPriceRequest defines grpc response structure for querying spot price for the specified tx fee denom
 * @param sg_poolID - `poolID`:
 * @param s_spot_price - `spot_price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryDenomSpotPriceResponse = (sg_poolID, s_spot_price) => Protobuf() // ...
    .g(sg_poolID) // uint64 poolID = 1
    .s(s_spot_price) // string spot_price = 2
    .o;
/**
 * Encodes a `QueryDenomPoolIdRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryDenomPoolIdRequest = (s_denom) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .o;
/**
 * Encodes a `QueryDenomPoolIdResponse` protobuf message:
 * @param sg_poolID - `poolID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryDenomPoolIdResponse = (sg_poolID) => Protobuf() // ...
    .g(sg_poolID) // uint64 poolID = 1
    .o;
/**
 * Encodes a `QueryBaseDenomRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryBaseDenomRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryBaseDenomResponse` protobuf message:
 * @param s_base_denom - `base_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesQueryBaseDenomResponse = (s_base_denom) => Protobuf() // ...
    .s(s_base_denom) // string base_denom = 1
    .o;
/**
 * Decodes a protobuf QueryFeeTokensRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryFeeTokensRequest}
 */
export const decodeOsmosisTxfeesQueryFeeTokensRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryFeeTokens message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryFeeTokensResponse}
 */
export const decodeOsmosisTxfeesQueryFeeTokensResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisTxfeesFeeToken]);
/**
 * Decodes a protobuf QueryDenomSpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomSpotPriceRequest}
 */
export const decodeOsmosisTxfeesQueryDenomSpotPriceRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryDenomSpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomSpotPriceResponse}
 */
export const decodeOsmosisTxfeesQueryDenomSpotPriceResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5]);
/**
 * Decodes a protobuf QueryDenomPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomPoolIdRequest}
 */
export const decodeOsmosisTxfeesQueryDenomPoolIdRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryDenomPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryDenomPoolIdResponse}
 */
export const decodeOsmosisTxfeesQueryDenomPoolIdResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryBaseDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryBaseDenomRequest}
 */
export const decodeOsmosisTxfeesQueryBaseDenomRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryBaseDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesQueryBaseDenomResponse}
 */
export const decodeOsmosisTxfeesQueryBaseDenomResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryFeeTokensRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisTxfeesQueryFeeTokensRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_FEE_TOKENS_REQUEST = '/osmosis.txfees.v1beta1.QueryFeeTokensRequest';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryFeeTokensResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_tokens -
 */
export const destructOsmosisTxfeesQueryFeeTokensResponse = (g_struct) => [g_struct.fee_tokens];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_FEE_TOKENS_RESPONSE = '/osmosis.txfees.v1beta1.QueryFeeTokensResponse';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomSpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export const destructOsmosisTxfeesQueryDenomSpotPriceRequest = (g_struct) => [g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_SPOT_PRICE_REQUEST = '/osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomSpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: poolID -
 *   - 1: spot_price -
 */
export const destructOsmosisTxfeesQueryDenomSpotPriceResponse = (g_struct) => [g_struct.poolID, g_struct.spot_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_SPOT_PRICE_RESPONSE = '/osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export const destructOsmosisTxfeesQueryDenomPoolIdRequest = (g_struct) => [g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_POOL_ID_REQUEST = '/osmosis.txfees.v1beta1.QueryDenomPoolIdRequest';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryDenomPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: poolID -
 */
export const destructOsmosisTxfeesQueryDenomPoolIdResponse = (g_struct) => [g_struct.poolID];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_DENOM_POOL_ID_RESPONSE = '/osmosis.txfees.v1beta1.QueryDenomPoolIdResponse';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryBaseDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisTxfeesQueryBaseDenomRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_BASE_DENOM_REQUEST = '/osmosis.txfees.v1beta1.QueryBaseDenomRequest';
/**
 * Destructures the fields of a {@link OsmosisTxfeesQueryBaseDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: base_denom -
 */
export const destructOsmosisTxfeesQueryBaseDenomResponse = (g_struct) => [g_struct.base_denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_QUERY_BASE_DENOM_RESPONSE = '/osmosis.txfees.v1beta1.QueryBaseDenomResponse';
//# sourceMappingURL=query.js.map