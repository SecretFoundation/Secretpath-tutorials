/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { OsmosisValsetprefValidatorPreference, DecodedOsmosisValsetprefValidatorPreference } from './state.js';
export type EncodedOsmosisValsetprefUserValidatorPreferencesRequest = Encoded<'/osmosis.valsetpref.v1beta1.UserValidatorPreferencesRequest'>;
export type EncodedOsmosisValsetprefUserValidatorPreferencesResponse = Encoded<'/osmosis.valsetpref.v1beta1.UserValidatorPreferencesResponse'>;
/**
 * Returns the list of ValidatorPreferences for the user.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - user account address
 * @returns a tuple where:
 *   - 0: preferences - the 'preferences' response property
 */
export declare const queryOsmosisValsetprefUserValidatorPreferences: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisValsetprefUserValidatorPreferencesResponse>>;
/**
 * Encodes a `UserValidatorPreferencesRequest` protobuf message: Request type for UserValidatorPreferences.
 * @param sa_address - `address`: user account address
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisValsetprefUserValidatorPreferencesRequest: (sa_address?: Opt<WeakAccountAddr>) => EncodedOsmosisValsetprefUserValidatorPreferencesRequest;
/**
 * Encodes a `UserValidatorPreferencesResponse` protobuf message: Response type the QueryUserValidatorPreferences query request
 * @param a_preferences - `preferences`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisValsetprefUserValidatorPreferencesResponse: (a_preferences?: Opt<Encoded<'/osmosis.valsetpref.v1beta1.ValidatorPreference'>[]>) => EncodedOsmosisValsetprefUserValidatorPreferencesResponse;
/**
 * A decoded protobuf UserValidatorPreferencesRequest message
 *
 * Alias for: address - user account address
 */
export type DecodedOsmosisValsetprefUserValidatorPreferencesRequest = [
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf UserValidatorPreferencesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisValsetprefUserValidatorPreferencesRequest}
 */
export declare const decodeOsmosisValsetprefUserValidatorPreferencesRequest: (atu8_payload: Uint8Array) => DecodedOsmosisValsetprefUserValidatorPreferencesRequest;
/**
 * A decoded protobuf UserValidatorPreferences message
 *
 * Alias for: preferences -
 */
export type DecodedOsmosisValsetprefUserValidatorPreferencesResponse = [
    a_preferences?: DecodedOsmosisValsetprefValidatorPreference[]
];
/**
 * Decodes a protobuf UserValidatorPreferences message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisValsetprefUserValidatorPreferencesResponse}
 */
export declare const decodeOsmosisValsetprefUserValidatorPreferencesResponse: (atu8_payload: Uint8Array) => DecodedOsmosisValsetprefUserValidatorPreferencesResponse;
/**
 * Destructures the fields of a {@link OsmosisValsetprefUserValidatorPreferencesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - user account address
 */
export declare const destructOsmosisValsetprefUserValidatorPreferencesRequest: (g_struct: OsmosisValsetprefUserValidatorPreferencesRequest) => [address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_VALSETPREF_USER_VALIDATOR_PREFERENCES_REQUEST = "/osmosis.valsetpref.v1beta1.UserValidatorPreferencesRequest";
/**
 * JSON serialization of `osmosis.valsetpref.v1beta1.UserValidatorPreferencesRequest` - Request type for UserValidatorPreferences.
 */
export type OsmosisValsetprefUserValidatorPreferencesRequest = {
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisValsetprefUserValidatorPreferencesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: preferences -
 */
export declare const destructOsmosisValsetprefUserValidatorPreferencesResponse: (g_struct: OsmosisValsetprefUserValidatorPreferencesResponse) => [preferences?: OsmosisValsetprefValidatorPreference[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_VALSETPREF_USER_VALIDATOR_PREFERENCES_RESPONSE = "/osmosis.valsetpref.v1beta1.UserValidatorPreferencesResponse";
/**
 * JSON serialization of `osmosis.valsetpref.v1beta1.UserValidatorPreferencesResponse` - Response type the QueryUserValidatorPreferences query request
 */
export type OsmosisValsetprefUserValidatorPreferencesResponse = {
    preferences?: OsmosisValsetprefValidatorPreference[] | undefined;
};
