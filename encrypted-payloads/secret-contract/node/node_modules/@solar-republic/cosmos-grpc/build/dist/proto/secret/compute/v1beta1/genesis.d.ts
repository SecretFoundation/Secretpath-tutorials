import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { SecretComputeCodeInfo, DecodedSecretComputeCodeInfo, SecretComputeContractInfo, DecodedSecretComputeContractInfo, SecretComputeModel, DecodedSecretComputeModel, SecretComputeContractCustomInfo, DecodedSecretComputeContractCustomInfo } from './types.js';
export type EncodedSecretComputeGenesisState = Encoded<'/secret.compute.v1beta1.GenesisState'>;
export type EncodedSecretComputeCode = Encoded<'/secret.compute.v1beta1.Code'>;
export type EncodedSecretComputeContract = Encoded<'/secret.compute.v1beta1.Contract'>;
export type EncodedSecretComputeSequence = Encoded<'/secret.compute.v1beta1.Sequence'>;
/**
 * Encodes a `GenesisState` protobuf message: - genesis state of x/wasm
 * @param a_codes - `codes`: Params params = 1 [(gogoproto.nullable) = false];
 * @param a_contracts - `contracts`:
 * @param a_sequences - `sequences`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretComputeGenesisState: (a_codes?: Opt<Encoded<'/secret.compute.v1beta1.Code'>[]>, a_contracts?: Opt<Encoded<'/secret.compute.v1beta1.Contract'>[]>, a_sequences?: Opt<Encoded<'/secret.compute.v1beta1.Sequence'>[]>) => EncodedSecretComputeGenesisState;
/**
 * Encodes a `Code` protobuf message: struct encompasses CodeInfo and CodeBytes
 * @param sg_code_id - `code_id`:
 * @param g_code_info - `code_info`:
 * @param atu8_code_bytes - `code_bytes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretComputeCode: (sg_code_id?: Opt<WeakUint64Str>, atu8_code_info?: Opt<Encoded<'/secret.compute.v1beta1.CodeInfo'>>, atu8_code_bytes?: Opt<Uint8Array>) => EncodedSecretComputeCode;
/**
 * Encodes a `Contract` protobuf message: struct encompasses ContractAddress, ContractInfo, and ContractState
 * @param atu8_contract_address - `contract_address`:
 * @param g_contract_info - `contract_info`:
 * @param a_contract_states - `contract_state`:
 * @param g_contract_custom_info - `contract_custom_info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretComputeContract: (atu8_contract_address?: Opt<Uint8Array>, atu8_contract_info?: Opt<Encoded<'/secret.compute.v1beta1.ContractInfo'>>, a_contract_states?: Opt<Encoded<'/secret.compute.v1beta1.Model'>[]>, atu8_contract_custom_info?: Opt<Encoded<'/secret.compute.v1beta1.ContractCustomInfo'>>) => EncodedSecretComputeContract;
/**
 * Encodes a `Sequence` protobuf message: id and value of a counter
 * @param atu8_id_key - `id_key`:
 * @param sg_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretComputeSequence: (atu8_id_key?: Opt<Uint8Array>, sg_value?: Opt<WeakUint64Str>) => EncodedSecretComputeSequence;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 1: codes - Params params = 1 [(gogoproto.nullable) = false];
 *   - 2: contracts -
 *   - 3: sequences -
 */
export type DecodedSecretComputeGenesisState = [
    w_0?: undefined,
    a_codes?: DecodedSecretComputeCode[],
    a_contracts?: DecodedSecretComputeContract[],
    a_sequences?: DecodedSecretComputeSequence[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedSecretComputeGenesisState}
 */
export declare const decodeSecretComputeGenesisState: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedSecretComputeGenesisState;
/**
 * A decoded protobuf Code message
 *
 * Tuple where:
 *   - 0: code_id -
 *   - 1: code_info -
 *   - 2: code_bytes -
 */
export type DecodedSecretComputeCode = [
    sg_code_id?: CwUint64,
    a_code_info?: DecodedSecretComputeCodeInfo,
    atu8_code_bytes?: Uint8Array
];
/**
 * Decodes a protobuf Code message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeCode}
 */
export declare const decodeSecretComputeCode: (atu8_payload: Uint8Array) => DecodedSecretComputeCode;
/**
 * A decoded protobuf Contract message
 *
 * Tuple where:
 *   - 0: contract_address -
 *   - 1: contract_info -
 *   - 2: contract_state -
 *   - 3: contract_custom_info -
 */
export type DecodedSecretComputeContract = [
    atu8_contract_address?: Uint8Array,
    a_contract_info?: DecodedSecretComputeContractInfo,
    a_contract_state?: DecodedSecretComputeModel[],
    a_contract_custom_info?: DecodedSecretComputeContractCustomInfo
];
/**
 * Decodes a protobuf Contract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeContract}
 */
export declare const decodeSecretComputeContract: (atu8_payload: Uint8Array) => DecodedSecretComputeContract;
/**
 * A decoded protobuf Sequence message
 *
 * Tuple where:
 *   - 0: id_key -
 *   - 1: value -
 */
export type DecodedSecretComputeSequence = [
    atu8_id_key?: Uint8Array,
    sg_value?: CwUint64
];
/**
 * Decodes a protobuf Sequence message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeSequence}
 */
export declare const decodeSecretComputeSequence: (atu8_payload: Uint8Array) => DecodedSecretComputeSequence;
/**
 * Destructures the fields of a {@link SecretComputeGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: codes - Params params = 1 [(gogoproto.nullable) = false];
 *   - 2: contracts -
 *   - 3: sequences -
 */
export declare const destructSecretComputeGenesisState: (g_struct: SecretComputeGenesisState) => [EMPTY?: void, codes?: SecretComputeCode[], contracts?: SecretComputeContract[], sequences?: SecretComputeSequence[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_COMPUTE_GENESIS_STATE = "/secret.compute.v1beta1.GenesisState";
/**
 * JSON serialization of `secret.compute.v1beta1.GenesisState` - - genesis state of x/wasm
 */
export type SecretComputeGenesisState = {
    codes?: SecretComputeCode[] | undefined;
    contracts?: SecretComputeContract[] | undefined;
    sequences?: SecretComputeSequence[] | undefined;
};
/**
 * Destructures the fields of a {@link SecretComputeCode} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: code_info -
 *   - 2: code_bytes -
 */
export declare const destructSecretComputeCode: (g_struct: SecretComputeCode) => [code_id?: CwUint64, code_info?: SecretComputeCodeInfo, code_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_COMPUTE_CODE = "/secret.compute.v1beta1.Code";
/**
 * JSON serialization of `secret.compute.v1beta1.Code` - struct encompasses CodeInfo and CodeBytes
 */
export type SecretComputeCode = {
    code_id?: CwUint64 | undefined;
    code_info?: SecretComputeCodeInfo | undefined;
    code_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link SecretComputeContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address -
 *   - 1: contract_info -
 *   - 2: contract_state -
 *   - 3: contract_custom_info -
 */
export declare const destructSecretComputeContract: (g_struct: SecretComputeContract) => [contract_address?: Uint8Array, contract_info?: SecretComputeContractInfo, contract_state?: SecretComputeModel[], contract_custom_info?: SecretComputeContractCustomInfo];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT = "/secret.compute.v1beta1.Contract";
/**
 * JSON serialization of `secret.compute.v1beta1.Contract` - struct encompasses ContractAddress, ContractInfo, and ContractState
 */
export type SecretComputeContract = {
    contract_address?: CwBase64 | undefined;
    contract_info?: SecretComputeContractInfo | undefined;
    contract_state?: SecretComputeModel[] | undefined;
    contract_custom_info?: SecretComputeContractCustomInfo | undefined;
};
/**
 * Destructures the fields of a {@link SecretComputeSequence} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id_key -
 *   - 1: value -
 */
export declare const destructSecretComputeSequence: (g_struct: SecretComputeSequence) => [id_key?: Uint8Array, value?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_COMPUTE_SEQUENCE = "/secret.compute.v1beta1.Sequence";
/**
 * JSON serialization of `secret.compute.v1beta1.Sequence` - id and value of a counter
 */
export type SecretComputeSequence = {
    id_key?: CwBase64 | undefined;
    value?: CwUint64 | undefined;
};
