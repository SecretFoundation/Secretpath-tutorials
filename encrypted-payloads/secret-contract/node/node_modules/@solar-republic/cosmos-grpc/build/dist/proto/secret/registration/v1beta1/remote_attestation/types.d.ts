import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedSecretRegistrationRemoteAttestationQuoteReport = Encoded<'/secret.registration.remote_attestation.v1beta1.QuoteReport'>;
export type EncodedSecretRegistrationRemoteAttestationQuoteReportBody = Encoded<'/secret.registration.remote_attestation.v1beta1.QuoteReportBody'>;
export type EncodedSecretRegistrationRemoteAttestationQuoteReportData = Encoded<'/secret.registration.remote_attestation.v1beta1.QuoteReportData'>;
export type EncodedSecretRegistrationRemoteAttestationEndorsedAttestationReport = Encoded<'/secret.registration.remote_attestation.v1beta1.EndorsedAttestationReport'>;
export type EncodedSecretRegistrationRemoteAttestationSGXEC256Signature = Encoded<'/secret.registration.remote_attestation.v1beta1.SGXEC256Signature'>;
export type EncodedSecretRegistrationRemoteAttestationPlatformInfoBlob = Encoded<'/secret.registration.remote_attestation.v1beta1.PlatformInfoBlob'>;
/**
 * Encodes a `QuoteReport` protobuf message:
 * @param s_id - `id`:
 * @param s_timestamp - `timestamp`:
 * @param sg_version - `version`:
 * @param s_isv_enclave_quote_status - `isv_enclave_quote_status`:
 * @param s_platform_info_blob - `platform_info_blob`:
 * @param s_isv_enclave_quote_body - `isv_enclave_quote_body`:
 * @param a_advisory_ids - `advisory_ids`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationQuoteReport: (s_id?: Opt<string>, s_timestamp?: Opt<string>, sg_version?: Opt<WeakUint64Str>, s_isv_enclave_quote_status?: Opt<string>, s_platform_info_blob?: Opt<string>, s_isv_enclave_quote_body?: Opt<string>, a_advisory_ids?: Opt<string[]>) => EncodedSecretRegistrationRemoteAttestationQuoteReport;
/**
 * Encodes a `QuoteReportBody` protobuf message:
 * @param s_mr_enclave - `mr_enclave`:
 * @param s_mr_signer - `mr_signer`:
 * @param s_report_data - `report_data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationQuoteReportBody: (s_mr_enclave?: Opt<string>, s_mr_signer?: Opt<string>, s_report_data?: Opt<string>) => EncodedSecretRegistrationRemoteAttestationQuoteReportBody;
/**
 * Encodes a `QuoteReportData` protobuf message:
 * @param sg_version - `version`:
 * @param sg_sign_type - `sign_type`:
 * @param g_report_body - `report_body`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationQuoteReportData: (sg_version?: Opt<WeakUint64Str>, sg_sign_type?: Opt<WeakUint64Str>, atu8_report_body?: Opt<Encoded<'/secret.registration.remote_attestation.v1beta1.QuoteReportBody'>>) => EncodedSecretRegistrationRemoteAttestationQuoteReportData;
/**
 * Encodes a `EndorsedAttestationReport` protobuf message:
 * @param atu8_report - `report`:
 * @param atu8_signature - `signature`:
 * @param atu8_signing_cert - `signing_cert`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationEndorsedAttestationReport: (atu8_report?: Opt<Uint8Array>, atu8_signature?: Opt<Uint8Array>, atu8_signing_cert?: Opt<Uint8Array>) => EncodedSecretRegistrationRemoteAttestationEndorsedAttestationReport;
/**
 * Encodes a `SGXEC256Signature` protobuf message:
 * @param s_gx - `gx`:
 * @param s_gy - `gy`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationSGXEC256Signature: (s_gx?: Opt<string>, s_gy?: Opt<string>) => EncodedSecretRegistrationRemoteAttestationSGXEC256Signature;
/**
 * Encodes a `PlatformInfoBlob` protobuf message:
 * @param n_sgx_epid_group_flags - `sgx_epid_group_flags`:
 * @param n_sgx_tcb_evaluation_flags - `sgx_tcb_evaluation_flags`:
 * @param n_pse_evaluation_flags - `pse_evaluation_flags`:
 * @param s_latest_equivalent_tcb_psvn - `latest_equivalent_tcb_psvn`:
 * @param s_latest_pse_isvsvn - `latest_pse_isvsvn`:
 * @param s_latest_psda_svn - `latest_psda_svn`:
 * @param n_xeid - `xeid`:
 * @param n_gid - `gid`:
 * @param g_sgx_ec256_signature_t - `sgx_ec256_signature_t`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationRemoteAttestationPlatformInfoBlob: (n_sgx_epid_group_flags?: Opt<number>, n_sgx_tcb_evaluation_flags?: Opt<number>, n_pse_evaluation_flags?: Opt<number>, s_latest_equivalent_tcb_psvn?: Opt<string>, s_latest_pse_isvsvn?: Opt<string>, s_latest_psda_svn?: Opt<string>, n_xeid?: Opt<number>, n_gid?: Opt<number>, atu8_sgx_ec256_signature_t?: Opt<Encoded<'/secret.registration.remote_attestation.v1beta1.SGXEC256Signature'>>) => EncodedSecretRegistrationRemoteAttestationPlatformInfoBlob;
/**
 * A decoded protobuf QuoteReport message
 *
 * Tuple where:
 *   - 0: id -
 *   - 1: timestamp -
 *   - 2: version -
 *   - 3: isv_enclave_quote_status -
 *   - 4: platform_info_blob -
 *   - 5: isv_enclave_quote_body -
 *   - 6: advisory_ids -
 */
export type DecodedSecretRegistrationRemoteAttestationQuoteReport = [
    s_id?: string,
    s_timestamp?: string,
    sg_version?: CwUint64,
    s_isv_enclave_quote_status?: string,
    s_platform_info_blob?: string,
    s_isv_enclave_quote_body?: string,
    a_advisory_ids?: string[]
];
/**
 * Decodes a protobuf QuoteReport message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationQuoteReport}
 */
export declare const decodeSecretRegistrationRemoteAttestationQuoteReport: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationQuoteReport;
/**
 * A decoded protobuf QuoteReportBody message
 *
 * Tuple where:
 *   - 0: mr_enclave -
 *   - 1: mr_signer -
 *   - 2: report_data -
 */
export type DecodedSecretRegistrationRemoteAttestationQuoteReportBody = [
    s_mr_enclave?: string,
    s_mr_signer?: string,
    s_report_data?: string
];
/**
 * Decodes a protobuf QuoteReportBody message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationQuoteReportBody}
 */
export declare const decodeSecretRegistrationRemoteAttestationQuoteReportBody: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationQuoteReportBody;
/**
 * A decoded protobuf QuoteReportData message
 *
 * Tuple where:
 *   - 0: version -
 *   - 1: sign_type -
 *   - 2: report_body -
 */
export type DecodedSecretRegistrationRemoteAttestationQuoteReportData = [
    sg_version?: CwUint64,
    sg_sign_type?: CwUint64,
    a_report_body?: DecodedSecretRegistrationRemoteAttestationQuoteReportBody
];
/**
 * Decodes a protobuf QuoteReportData message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationQuoteReportData}
 */
export declare const decodeSecretRegistrationRemoteAttestationQuoteReportData: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationQuoteReportData;
/**
 * A decoded protobuf EndorsedAttestationReport message
 *
 * Tuple where:
 *   - 0: report -
 *   - 1: signature -
 *   - 2: signing_cert -
 */
export type DecodedSecretRegistrationRemoteAttestationEndorsedAttestationReport = [
    atu8_report?: Uint8Array,
    atu8_signature?: Uint8Array,
    atu8_signing_cert?: Uint8Array
];
/**
 * Decodes a protobuf EndorsedAttestationReport message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationEndorsedAttestationReport}
 */
export declare const decodeSecretRegistrationRemoteAttestationEndorsedAttestationReport: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationEndorsedAttestationReport;
/**
 * A decoded protobuf SGXEC256Signature message
 *
 * Tuple where:
 *   - 0: gx -
 *   - 1: gy -
 */
export type DecodedSecretRegistrationRemoteAttestationSGXEC256Signature = [
    s_gx?: string,
    s_gy?: string
];
/**
 * Decodes a protobuf SGXEC256Signature message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationSGXEC256Signature}
 */
export declare const decodeSecretRegistrationRemoteAttestationSGXEC256Signature: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationSGXEC256Signature;
/**
 * A decoded protobuf PlatformInfoBlob message
 *
 * Tuple where:
 *   - 0: sgx_epid_group_flags -
 *   - 1: sgx_tcb_evaluation_flags -
 *   - 2: pse_evaluation_flags -
 *   - 3: latest_equivalent_tcb_psvn -
 *   - 4: latest_pse_isvsvn -
 *   - 5: latest_psda_svn -
 *   - 6: xeid -
 *   - 7: gid -
 *   - 8: sgx_ec256_signature_t -
 */
export type DecodedSecretRegistrationRemoteAttestationPlatformInfoBlob = [
    n_sgx_epid_group_flags?: number,
    n_sgx_tcb_evaluation_flags?: number,
    n_pse_evaluation_flags?: number,
    s_latest_equivalent_tcb_psvn?: string,
    s_latest_pse_isvsvn?: string,
    s_latest_psda_svn?: string,
    n_xeid?: number,
    n_gid?: number,
    a_sgx_ec256_signature_t?: DecodedSecretRegistrationRemoteAttestationSGXEC256Signature
];
/**
 * Decodes a protobuf PlatformInfoBlob message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationRemoteAttestationPlatformInfoBlob}
 */
export declare const decodeSecretRegistrationRemoteAttestationPlatformInfoBlob: (atu8_payload: Uint8Array) => DecodedSecretRegistrationRemoteAttestationPlatformInfoBlob;
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationQuoteReport} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: timestamp -
 *   - 2: version -
 *   - 3: isv_enclave_quote_status -
 *   - 4: platform_info_blob -
 *   - 5: isv_enclave_quote_body -
 *   - 6: advisory_ids -
 */
export declare const destructSecretRegistrationRemoteAttestationQuoteReport: (g_struct: SecretRegistrationRemoteAttestationQuoteReport) => [id?: string, timestamp?: string, version?: CwUint64, isv_enclave_quote_status?: string, platform_info_blob?: string, isv_enclave_quote_body?: string, advisory_ids?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_QUOTE_REPORT = "/secret.registration.remote_attestation.v1beta1.QuoteReport";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.QuoteReport` -
 */
export type SecretRegistrationRemoteAttestationQuoteReport = {
    id?: string | undefined;
    timestamp?: string | undefined;
    version?: CwUint64 | undefined;
    isv_enclave_quote_status?: string | undefined;
    platform_info_blob?: string | undefined;
    isv_enclave_quote_body?: string | undefined;
    advisory_ids?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationQuoteReportBody} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: mr_enclave -
 *   - 1: mr_signer -
 *   - 2: report_data -
 */
export declare const destructSecretRegistrationRemoteAttestationQuoteReportBody: (g_struct: SecretRegistrationRemoteAttestationQuoteReportBody) => [mr_enclave?: string, mr_signer?: string, report_data?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_QUOTE_REPORT_BODY = "/secret.registration.remote_attestation.v1beta1.QuoteReportBody";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.QuoteReportBody` -
 */
export type SecretRegistrationRemoteAttestationQuoteReportBody = {
    mr_enclave?: string | undefined;
    mr_signer?: string | undefined;
    report_data?: string | undefined;
};
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationQuoteReportData} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: version -
 *   - 1: sign_type -
 *   - 2: report_body -
 */
export declare const destructSecretRegistrationRemoteAttestationQuoteReportData: (g_struct: SecretRegistrationRemoteAttestationQuoteReportData) => [version?: CwUint64, sign_type?: CwUint64, report_body?: SecretRegistrationRemoteAttestationQuoteReportBody];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_QUOTE_REPORT_DATA = "/secret.registration.remote_attestation.v1beta1.QuoteReportData";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.QuoteReportData` -
 */
export type SecretRegistrationRemoteAttestationQuoteReportData = {
    version?: CwUint64 | undefined;
    sign_type?: CwUint64 | undefined;
    report_body?: SecretRegistrationRemoteAttestationQuoteReportBody | undefined;
};
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationEndorsedAttestationReport} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: report -
 *   - 1: signature -
 *   - 2: signing_cert -
 */
export declare const destructSecretRegistrationRemoteAttestationEndorsedAttestationReport: (g_struct: SecretRegistrationRemoteAttestationEndorsedAttestationReport) => [report?: Uint8Array, signature?: Uint8Array, signing_cert?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_ENDORSED_ATTESTATION_REPORT = "/secret.registration.remote_attestation.v1beta1.EndorsedAttestationReport";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.EndorsedAttestationReport` -
 */
export type SecretRegistrationRemoteAttestationEndorsedAttestationReport = {
    report?: CwBase64 | undefined;
    signature?: CwBase64 | undefined;
    signing_cert?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationSGXEC256Signature} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: gx -
 *   - 1: gy -
 */
export declare const destructSecretRegistrationRemoteAttestationSGXEC256Signature: (g_struct: SecretRegistrationRemoteAttestationSGXEC256Signature) => [gx?: string, gy?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_S_G_X_E_C256_SIGNATURE = "/secret.registration.remote_attestation.v1beta1.SGXEC256Signature";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.SGXEC256Signature` -
 */
export type SecretRegistrationRemoteAttestationSGXEC256Signature = {
    gx?: string | undefined;
    gy?: string | undefined;
};
/**
 * Destructures the fields of a {@link SecretRegistrationRemoteAttestationPlatformInfoBlob} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sgx_epid_group_flags -
 *   - 1: sgx_tcb_evaluation_flags -
 *   - 2: pse_evaluation_flags -
 *   - 3: latest_equivalent_tcb_psvn -
 *   - 4: latest_pse_isvsvn -
 *   - 5: latest_psda_svn -
 *   - 6: xeid -
 *   - 7: gid -
 *   - 8: sgx_ec256_signature_t -
 */
export declare const destructSecretRegistrationRemoteAttestationPlatformInfoBlob: (g_struct: SecretRegistrationRemoteAttestationPlatformInfoBlob) => [sgx_epid_group_flags?: number, sgx_tcb_evaluation_flags?: number, pse_evaluation_flags?: number, latest_equivalent_tcb_psvn?: string, latest_pse_isvsvn?: string, latest_psda_svn?: string, xeid?: number, gid?: number, sgx_ec256_signature_t?: SecretRegistrationRemoteAttestationSGXEC256Signature];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_REMOTE_ATTESTATION_PLATFORM_INFO_BLOB = "/secret.registration.remote_attestation.v1beta1.PlatformInfoBlob";
/**
 * JSON serialization of `secret.registration.remote_attestation.v1beta1.PlatformInfoBlob` -
 */
export type SecretRegistrationRemoteAttestationPlatformInfoBlob = {
    sgx_epid_group_flags?: number | undefined;
    sgx_tcb_evaluation_flags?: number | undefined;
    pse_evaluation_flags?: number | undefined;
    latest_equivalent_tcb_psvn?: string | undefined;
    latest_pse_isvsvn?: string | undefined;
    latest_psda_svn?: string | undefined;
    xeid?: number | undefined;
    gid?: number | undefined;
    sgx_ec256_signature_t?: SecretRegistrationRemoteAttestationSGXEC256Signature | undefined;
};
