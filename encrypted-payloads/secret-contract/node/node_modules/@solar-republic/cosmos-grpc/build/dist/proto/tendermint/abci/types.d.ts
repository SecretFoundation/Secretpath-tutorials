import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, CwInt64, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt, WeakTimestampStr } from '../../../api/types.js';
import type { TendermintCryptoPublicKey, DecodedTendermintCryptoPublicKey } from '../crypto/keys.js';
import type { TendermintCryptoProofOps, DecodedTendermintCryptoProofOps } from '../crypto/proof.js';
import type { TendermintTypesConsensusParams, DecodedTendermintTypesConsensusParams } from '../types/params.js';
import type { ProtoEnumTendermintTypesBlockIDFlag, JsonEnumTendermintTypesBlockIDFlag } from '../types/validator.js';
export type EncodedTendermintAbciRequest = Encoded<'/tendermint.abci.Request'>;
export type EncodedTendermintAbciRequestEcho = Encoded<'/tendermint.abci.RequestEcho'>;
export type EncodedTendermintAbciRequestFlush = Encoded<'/tendermint.abci.RequestFlush'>;
export type EncodedTendermintAbciRequestInfo = Encoded<'/tendermint.abci.RequestInfo'>;
export type EncodedTendermintAbciRequestInitChain = Encoded<'/tendermint.abci.RequestInitChain'>;
export type EncodedTendermintAbciRequestQuery = Encoded<'/tendermint.abci.RequestQuery'>;
export type EncodedTendermintAbciRequestCheckTx = Encoded<'/tendermint.abci.RequestCheckTx'>;
export type EncodedTendermintAbciRequestCommit = Encoded<'/tendermint.abci.RequestCommit'>;
export type EncodedTendermintAbciRequestListSnapshots = Encoded<'/tendermint.abci.RequestListSnapshots'>;
export type EncodedTendermintAbciRequestOfferSnapshot = Encoded<'/tendermint.abci.RequestOfferSnapshot'>;
export type EncodedTendermintAbciRequestLoadSnapshotChunk = Encoded<'/tendermint.abci.RequestLoadSnapshotChunk'>;
export type EncodedTendermintAbciRequestApplySnapshotChunk = Encoded<'/tendermint.abci.RequestApplySnapshotChunk'>;
export type EncodedTendermintAbciRequestPrepareProposal = Encoded<'/tendermint.abci.RequestPrepareProposal'>;
export type EncodedTendermintAbciRequestProcessProposal = Encoded<'/tendermint.abci.RequestProcessProposal'>;
export type EncodedTendermintAbciRequestExtendVote = Encoded<'/tendermint.abci.RequestExtendVote'>;
export type EncodedTendermintAbciRequestVerifyVoteExtension = Encoded<'/tendermint.abci.RequestVerifyVoteExtension'>;
export type EncodedTendermintAbciRequestFinalizeBlock = Encoded<'/tendermint.abci.RequestFinalizeBlock'>;
export type EncodedTendermintAbciResponse = Encoded<'/tendermint.abci.Response'>;
export type EncodedTendermintAbciResponseException = Encoded<'/tendermint.abci.ResponseException'>;
export type EncodedTendermintAbciResponseEcho = Encoded<'/tendermint.abci.ResponseEcho'>;
export type EncodedTendermintAbciResponseFlush = Encoded<'/tendermint.abci.ResponseFlush'>;
export type EncodedTendermintAbciResponseInfo = Encoded<'/tendermint.abci.ResponseInfo'>;
export type EncodedTendermintAbciResponseInitChain = Encoded<'/tendermint.abci.ResponseInitChain'>;
export type EncodedTendermintAbciResponseQuery = Encoded<'/tendermint.abci.ResponseQuery'>;
export type EncodedTendermintAbciResponseCheckTx = Encoded<'/tendermint.abci.ResponseCheckTx'>;
export type EncodedTendermintAbciResponseCommit = Encoded<'/tendermint.abci.ResponseCommit'>;
export type EncodedTendermintAbciResponseListSnapshots = Encoded<'/tendermint.abci.ResponseListSnapshots'>;
export type EncodedTendermintAbciResponseOfferSnapshot = Encoded<'/tendermint.abci.ResponseOfferSnapshot'>;
export type EncodedTendermintAbciResponseLoadSnapshotChunk = Encoded<'/tendermint.abci.ResponseLoadSnapshotChunk'>;
export type EncodedTendermintAbciResponseApplySnapshotChunk = Encoded<'/tendermint.abci.ResponseApplySnapshotChunk'>;
export type EncodedTendermintAbciResponsePrepareProposal = Encoded<'/tendermint.abci.ResponsePrepareProposal'>;
export type EncodedTendermintAbciResponseProcessProposal = Encoded<'/tendermint.abci.ResponseProcessProposal'>;
export type EncodedTendermintAbciResponseExtendVote = Encoded<'/tendermint.abci.ResponseExtendVote'>;
export type EncodedTendermintAbciResponseVerifyVoteExtension = Encoded<'/tendermint.abci.ResponseVerifyVoteExtension'>;
export type EncodedTendermintAbciResponseFinalizeBlock = Encoded<'/tendermint.abci.ResponseFinalizeBlock'>;
export type EncodedTendermintAbciCommitInfo = Encoded<'/tendermint.abci.CommitInfo'>;
export type EncodedTendermintAbciExtendedCommitInfo = Encoded<'/tendermint.abci.ExtendedCommitInfo'>;
export type EncodedTendermintAbciEvent = Encoded<'/tendermint.abci.Event'>;
export type EncodedTendermintAbciEventAttribute = Encoded<'/tendermint.abci.EventAttribute'>;
export type EncodedTendermintAbciExecTxResult = Encoded<'/tendermint.abci.ExecTxResult'>;
export type EncodedTendermintAbciTxResult = Encoded<'/tendermint.abci.TxResult'>;
export type EncodedTendermintAbciValidator = Encoded<'/tendermint.abci.Validator'>;
export type EncodedTendermintAbciValidatorUpdate = Encoded<'/tendermint.abci.ValidatorUpdate'>;
export type EncodedTendermintAbciVoteInfo = Encoded<'/tendermint.abci.VoteInfo'>;
export type EncodedTendermintAbciExtendedVoteInfo = Encoded<'/tendermint.abci.ExtendedVoteInfo'>;
export type EncodedTendermintAbciMisbehavior = Encoded<'/tendermint.abci.Misbehavior'>;
export type EncodedTendermintAbciSnapshot = Encoded<'/tendermint.abci.Snapshot'>;
/**
 * Encodes a `Request` protobuf message:
 * @param g_echo - `echo`:
 * @param g_flush - `flush`:
 * @param g_info - `info`:
 * @param g_init_chain - `init_chain`:
 * @param g_query - `query`:
 * @param g_check_tx - `check_tx`:
 * @param g_commit - `commit`:
 * @param g_list_snapshots - `list_snapshots`:
 * @param g_offer_snapshot - `offer_snapshot`:
 * @param g_load_snapshot_chunk - `load_snapshot_chunk`:
 * @param g_apply_snapshot_chunk - `apply_snapshot_chunk`:
 * @param g_prepare_proposal - `prepare_proposal`:
 * @param g_process_proposal - `process_proposal`:
 * @param g_extend_vote - `extend_vote`:
 * @param g_verify_vote_extension - `verify_vote_extension`:
 * @param g_finalize_block - `finalize_block`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequest: (atu8_echo?: Opt<Encoded<'/tendermint.abci.RequestEcho'>>, atu8_flush?: Opt<Encoded<'/tendermint.abci.RequestFlush'>>, atu8_info?: Opt<Encoded<'/tendermint.abci.RequestInfo'>>, atu8_init_chain?: Opt<Encoded<'/tendermint.abci.RequestInitChain'>>, atu8_query?: Opt<Encoded<'/tendermint.abci.RequestQuery'>>, atu8_check_tx?: Opt<Encoded<'/tendermint.abci.RequestCheckTx'>>, atu8_commit?: Opt<Encoded<'/tendermint.abci.RequestCommit'>>, atu8_list_snapshots?: Opt<Encoded<'/tendermint.abci.RequestListSnapshots'>>, atu8_offer_snapshot?: Opt<Encoded<'/tendermint.abci.RequestOfferSnapshot'>>, atu8_load_snapshot_chunk?: Opt<Encoded<'/tendermint.abci.RequestLoadSnapshotChunk'>>, atu8_apply_snapshot_chunk?: Opt<Encoded<'/tendermint.abci.RequestApplySnapshotChunk'>>, atu8_prepare_proposal?: Opt<Encoded<'/tendermint.abci.RequestPrepareProposal'>>, atu8_process_proposal?: Opt<Encoded<'/tendermint.abci.RequestProcessProposal'>>, atu8_extend_vote?: Opt<Encoded<'/tendermint.abci.RequestExtendVote'>>, atu8_verify_vote_extension?: Opt<Encoded<'/tendermint.abci.RequestVerifyVoteExtension'>>, atu8_finalize_block?: Opt<Encoded<'/tendermint.abci.RequestFinalizeBlock'>>) => EncodedTendermintAbciRequest;
/**
 * Encodes a `RequestEcho` protobuf message:
 * @param s_message - `message`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestEcho: (s_message?: Opt<string>) => EncodedTendermintAbciRequestEcho;
/**
 * Encodes a `RequestFlush` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestFlush: () => EncodedTendermintAbciRequestFlush;
/**
 * Encodes a `RequestInfo` protobuf message:
 * @param s_version - `version`:
 * @param sg_block_version - `block_version`:
 * @param sg_p2p_version - `p2p_version`:
 * @param s_abci_version - `abci_version`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestInfo: (s_version?: Opt<string>, sg_block_version?: Opt<WeakUint64Str>, sg_p2p_version?: Opt<WeakUint64Str>, s_abci_version?: Opt<string>) => EncodedTendermintAbciRequestInfo;
/**
 * Encodes a `RequestInitChain` protobuf message:
 * @param xt_time - `time`:
 * @param si_chain - `chain_id`:
 * @param g_consensus_params - `consensus_params`:
 * @param a_validators - `validators`:
 * @param atu8_app_state_bytes - `app_state_bytes`:
 * @param sg_initial_height - `initial_height`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestInitChain: (xt_time?: Opt<number>, si_chain?: Opt<string>, atu8_consensus_params?: Opt<Encoded<'/tendermint.types.ConsensusParams'>>, a_validators?: Opt<Encoded<'/tendermint.abci.ValidatorUpdate'>[]>, atu8_app_state_bytes?: Opt<Uint8Array>, sg_initial_height?: Opt<WeakInt64Str>) => EncodedTendermintAbciRequestInitChain;
/**
 * Encodes a `RequestQuery` protobuf message:
 * @param atu8_data - `data`:
 * @param s_path - `path`:
 * @param sg_height - `height`:
 * @param b_prove - `prove`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestQuery: (atu8_data?: Opt<Uint8Array>, s_path?: Opt<string>, sg_height?: Opt<WeakInt64Str>, b_prove?: Opt<boolean | 0 | 1>) => EncodedTendermintAbciRequestQuery;
/**
 * Encodes a `RequestCheckTx` protobuf message:
 * @param atu8_tx - `tx`:
 * @param xc_type - `type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestCheckTx: (atu8_tx?: Opt<Uint8Array>, xc_type?: Opt<ProtoEnumTendermintAbciCheckTxType>) => EncodedTendermintAbciRequestCheckTx;
/**
 * Encodes a `RequestCommit` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestCommit: () => EncodedTendermintAbciRequestCommit;
/**
 * Encodes a `RequestListSnapshots` protobuf message: lists available snapshots
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestListSnapshots: () => EncodedTendermintAbciRequestListSnapshots;
/**
 * Encodes a `RequestOfferSnapshot` protobuf message: offers a snapshot to the application
 * @param g_snapshot - `snapshot`:
 * @param atu8_app_hash - `app_hash`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestOfferSnapshot: (atu8_snapshot?: Opt<Encoded<'/tendermint.abci.Snapshot'>>, atu8_app_hash?: Opt<Uint8Array>) => EncodedTendermintAbciRequestOfferSnapshot;
/**
 * Encodes a `RequestLoadSnapshotChunk` protobuf message: loads a snapshot chunk
 * @param sg_height - `height`:
 * @param n_format - `format`:
 * @param n_chunk - `chunk`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestLoadSnapshotChunk: (sg_height?: Opt<WeakUint64Str>, n_format?: Opt<number>, n_chunk?: Opt<number>) => EncodedTendermintAbciRequestLoadSnapshotChunk;
/**
 * Encodes a `RequestApplySnapshotChunk` protobuf message: Applies a snapshot chunk
 * @param n_index - `index`:
 * @param atu8_chunk - `chunk`:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestApplySnapshotChunk: (n_index?: Opt<number>, atu8_chunk?: Opt<Uint8Array>, sa_sender?: Opt<WeakAccountAddr>) => EncodedTendermintAbciRequestApplySnapshotChunk;
/**
 * Encodes a `RequestPrepareProposal` protobuf message:
 * @param sg_max_tx_bytes - `max_tx_bytes`: the modified transactions cannot exceed this size.
 * @param a_txs - `txs`: an array of transactions that will be included in a block, sent to the app for possible modifications.
 * @param g_local_last_commit - `local_last_commit`:
 * @param a_misbehaviors - `misbehavior`:
 * @param sg_height - `height`:
 * @param xt_time - `time`:
 * @param atu8_next_validators_hash - `next_validators_hash`:
 * @param atu8_proposer_address - `proposer_address`: address of the public key of the validator proposing the block.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestPrepareProposal: (sg_max_tx_bytes?: Opt<WeakInt64Str>, a_txs?: Opt<Uint8Array[]>, atu8_local_last_commit?: Opt<Encoded<'/tendermint.abci.ExtendedCommitInfo'>>, a_misbehaviors?: Opt<Encoded<'/tendermint.abci.Misbehavior'>[]>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, atu8_next_validators_hash?: Opt<Uint8Array>, atu8_proposer_address?: Opt<Uint8Array>) => EncodedTendermintAbciRequestPrepareProposal;
/**
 * Encodes a `RequestProcessProposal` protobuf message:
 * @param a_txs - `txs`:
 * @param g_proposed_last_commit - `proposed_last_commit`:
 * @param a_misbehaviors - `misbehavior`:
 * @param atu8_hash - `hash`: the merkle root hash of the fields of the proposed block.
 * @param sg_height - `height`:
 * @param xt_time - `time`:
 * @param atu8_next_validators_hash - `next_validators_hash`:
 * @param atu8_proposer_address - `proposer_address`: address of the public key of the original proposer of the block.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestProcessProposal: (a_txs?: Opt<Uint8Array[]>, atu8_proposed_last_commit?: Opt<Encoded<'/tendermint.abci.CommitInfo'>>, a_misbehaviors?: Opt<Encoded<'/tendermint.abci.Misbehavior'>[]>, atu8_hash?: Opt<Uint8Array>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, atu8_next_validators_hash?: Opt<Uint8Array>, atu8_proposer_address?: Opt<Uint8Array>) => EncodedTendermintAbciRequestProcessProposal;
/**
 * Encodes a `RequestExtendVote` protobuf message: Extends a vote with application-injected data
 * @param atu8_hash - `hash`: the hash of the block that this vote may be referring to
 * @param sg_height - `height`: the height of the extended vote
 * @param xt_time - `time`: info of the block that this vote may be referring to
 * @param a_txs - `txs`:
 * @param g_proposed_last_commit - `proposed_last_commit`:
 * @param a_misbehaviors - `misbehavior`:
 * @param atu8_next_validators_hash - `next_validators_hash`:
 * @param atu8_proposer_address - `proposer_address`: address of the public key of the original proposer of the block.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestExtendVote: (atu8_hash?: Opt<Uint8Array>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, a_txs?: Opt<Uint8Array[]>, atu8_proposed_last_commit?: Opt<Encoded<'/tendermint.abci.CommitInfo'>>, a_misbehaviors?: Opt<Encoded<'/tendermint.abci.Misbehavior'>[]>, atu8_next_validators_hash?: Opt<Uint8Array>, atu8_proposer_address?: Opt<Uint8Array>) => EncodedTendermintAbciRequestExtendVote;
/**
 * Encodes a `RequestVerifyVoteExtension` protobuf message: Verify the vote extension
 * @param atu8_hash - `hash`: the hash of the block that this received vote corresponds to
 * @param atu8_validator_address - `validator_address`: the validator that signed the vote extension
 * @param sg_height - `height`:
 * @param atu8_vote_extension - `vote_extension`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestVerifyVoteExtension: (atu8_hash?: Opt<Uint8Array>, atu8_validator_address?: Opt<Uint8Array>, sg_height?: Opt<WeakInt64Str>, atu8_vote_extension?: Opt<Uint8Array>) => EncodedTendermintAbciRequestVerifyVoteExtension;
/**
 * Encodes a `RequestFinalizeBlock` protobuf message:
 * @param a_txs - `txs`:
 * @param g_decided_last_commit - `decided_last_commit`:
 * @param a_misbehaviors - `misbehavior`:
 * @param atu8_hash - `hash`: the merkle root hash of the fields of the decided block.
 * @param sg_height - `height`:
 * @param xt_time - `time`:
 * @param atu8_next_validators_hash - `next_validators_hash`:
 * @param atu8_proposer_address - `proposer_address`: the address of the public key of the original proposer of the block.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciRequestFinalizeBlock: (a_txs?: Opt<Uint8Array[]>, atu8_decided_last_commit?: Opt<Encoded<'/tendermint.abci.CommitInfo'>>, a_misbehaviors?: Opt<Encoded<'/tendermint.abci.Misbehavior'>[]>, atu8_hash?: Opt<Uint8Array>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, atu8_next_validators_hash?: Opt<Uint8Array>, atu8_proposer_address?: Opt<Uint8Array>) => EncodedTendermintAbciRequestFinalizeBlock;
/**
 * Encodes a `Response` protobuf message:
 * @param g_exception - `exception`:
 * @param g_echo - `echo`:
 * @param g_flush - `flush`:
 * @param g_info - `info`:
 * @param g_init_chain - `init_chain`:
 * @param g_query - `query`:
 * @param g_check_tx - `check_tx`:
 * @param g_commit - `commit`:
 * @param g_list_snapshots - `list_snapshots`:
 * @param g_offer_snapshot - `offer_snapshot`:
 * @param g_load_snapshot_chunk - `load_snapshot_chunk`:
 * @param g_apply_snapshot_chunk - `apply_snapshot_chunk`:
 * @param g_prepare_proposal - `prepare_proposal`:
 * @param g_process_proposal - `process_proposal`:
 * @param g_extend_vote - `extend_vote`:
 * @param g_verify_vote_extension - `verify_vote_extension`:
 * @param g_finalize_block - `finalize_block`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponse: (atu8_exception?: Opt<Encoded<'/tendermint.abci.ResponseException'>>, atu8_echo?: Opt<Encoded<'/tendermint.abci.ResponseEcho'>>, atu8_flush?: Opt<Encoded<'/tendermint.abci.ResponseFlush'>>, atu8_info?: Opt<Encoded<'/tendermint.abci.ResponseInfo'>>, atu8_init_chain?: Opt<Encoded<'/tendermint.abci.ResponseInitChain'>>, atu8_query?: Opt<Encoded<'/tendermint.abci.ResponseQuery'>>, atu8_check_tx?: Opt<Encoded<'/tendermint.abci.ResponseCheckTx'>>, atu8_commit?: Opt<Encoded<'/tendermint.abci.ResponseCommit'>>, atu8_list_snapshots?: Opt<Encoded<'/tendermint.abci.ResponseListSnapshots'>>, atu8_offer_snapshot?: Opt<Encoded<'/tendermint.abci.ResponseOfferSnapshot'>>, atu8_load_snapshot_chunk?: Opt<Encoded<'/tendermint.abci.ResponseLoadSnapshotChunk'>>, atu8_apply_snapshot_chunk?: Opt<Encoded<'/tendermint.abci.ResponseApplySnapshotChunk'>>, atu8_prepare_proposal?: Opt<Encoded<'/tendermint.abci.ResponsePrepareProposal'>>, atu8_process_proposal?: Opt<Encoded<'/tendermint.abci.ResponseProcessProposal'>>, atu8_extend_vote?: Opt<Encoded<'/tendermint.abci.ResponseExtendVote'>>, atu8_verify_vote_extension?: Opt<Encoded<'/tendermint.abci.ResponseVerifyVoteExtension'>>, atu8_finalize_block?: Opt<Encoded<'/tendermint.abci.ResponseFinalizeBlock'>>) => EncodedTendermintAbciResponse;
/**
 * Encodes a `ResponseException` protobuf message: nondeterministic
 * @param s_error - `error`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseException: (s_error?: Opt<string>) => EncodedTendermintAbciResponseException;
/**
 * Encodes a `ResponseEcho` protobuf message:
 * @param s_message - `message`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseEcho: (s_message?: Opt<string>) => EncodedTendermintAbciResponseEcho;
/**
 * Encodes a `ResponseFlush` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseFlush: () => EncodedTendermintAbciResponseFlush;
/**
 * Encodes a `ResponseInfo` protobuf message:
 * @param s_data - `data`:
 * @param s_version - `version`:
 * @param sg_app_version - `app_version`:
 * @param sg_last_block_height - `last_block_height`:
 * @param atu8_last_block_app_hash - `last_block_app_hash`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseInfo: (s_data?: Opt<string>, s_version?: Opt<string>, sg_app_version?: Opt<WeakUint64Str>, sg_last_block_height?: Opt<WeakInt64Str>, atu8_last_block_app_hash?: Opt<Uint8Array>) => EncodedTendermintAbciResponseInfo;
/**
 * Encodes a `ResponseInitChain` protobuf message:
 * @param g_consensus_params - `consensus_params`:
 * @param a_validators - `validators`:
 * @param atu8_app_hash - `app_hash`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseInitChain: (atu8_consensus_params?: Opt<Encoded<'/tendermint.types.ConsensusParams'>>, a_validators?: Opt<Encoded<'/tendermint.abci.ValidatorUpdate'>[]>, atu8_app_hash?: Opt<Uint8Array>) => EncodedTendermintAbciResponseInitChain;
/**
 * Encodes a `ResponseQuery` protobuf message:
 * @param n_code - `code`:
 * @param s_log - `log`: bytes data = 2; // use "value" instead.
 * @param s_info - `info`:
 * @param sg_index - `index`:
 * @param atu8_key - `key`:
 * @param atu8_value - `value`:
 * @param g_proof_ops - `proof_ops`:
 * @param sg_height - `height`:
 * @param s_codespace - `codespace`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseQuery: (n_code?: Opt<number>, s_log?: Opt<string>, s_info?: Opt<string>, sg_index?: Opt<WeakInt64Str>, atu8_key?: Opt<Uint8Array>, atu8_value?: Opt<Uint8Array>, atu8_proof_ops?: Opt<Encoded<'/tendermint.crypto.ProofOps'>>, sg_height?: Opt<WeakInt64Str>, s_codespace?: Opt<string>) => EncodedTendermintAbciResponseQuery;
/**
 * Encodes a `ResponseCheckTx` protobuf message:
 * @param n_code - `code`:
 * @param atu8_data - `data`:
 * @param s_log - `log`:
 * @param s_info - `info`:
 * @param sg_gas_wanted - `gas_wanted`:
 * @param sg_gas_used - `gas_used`:
 * @param a_events - `events`:
 * @param s_codespace - `codespace`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseCheckTx: (n_code?: Opt<number>, atu8_data?: Opt<Uint8Array>, s_log?: Opt<string>, s_info?: Opt<string>, sg_gas_wanted?: Opt<WeakInt64Str>, sg_gas_used?: Opt<WeakInt64Str>, a_events?: Opt<Encoded<'/tendermint.abci.Event'>[]>, s_codespace?: Opt<string>) => EncodedTendermintAbciResponseCheckTx;
/**
 * Encodes a `ResponseCommit` protobuf message:
 * @param sg_retain_height - `retain_height`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseCommit: (sg_retain_height?: Opt<WeakInt64Str>) => EncodedTendermintAbciResponseCommit;
/**
 * Encodes a `ResponseListSnapshots` protobuf message:
 * @param a_snapshots - `snapshots`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseListSnapshots: (a_snapshots?: Opt<Encoded<'/tendermint.abci.Snapshot'>[]>) => EncodedTendermintAbciResponseListSnapshots;
/**
 * Encodes a `ResponseOfferSnapshot` protobuf message:
 * @param xc_result - `result`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseOfferSnapshot: (xc_result?: Opt<ProtoEnumTendermintAbciResponseOfferSnapshotResult>) => EncodedTendermintAbciResponseOfferSnapshot;
/**
 * Encodes a `ResponseLoadSnapshotChunk` protobuf message:
 * @param atu8_chunk - `chunk`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseLoadSnapshotChunk: (atu8_chunk?: Opt<Uint8Array>) => EncodedTendermintAbciResponseLoadSnapshotChunk;
/**
 * Encodes a `ResponseApplySnapshotChunk` protobuf message:
 * @param xc_result - `result`:
 * @param a_refetch_chunks - `refetch_chunks`:
 * @param a_reject_senders - `reject_senders`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseApplySnapshotChunk: (xc_result?: Opt<ProtoEnumTendermintAbciResponseApplySnapshotChunkResult>, a_refetch_chunks?: Opt<number[]>, a_reject_senders?: Opt<string[]>) => EncodedTendermintAbciResponseApplySnapshotChunk;
/**
 * Encodes a `ResponsePrepareProposal` protobuf message:
 * @param a_txs - `txs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponsePrepareProposal: (a_txs?: Opt<Uint8Array[]>) => EncodedTendermintAbciResponsePrepareProposal;
/**
 * Encodes a `ResponseProcessProposal` protobuf message:
 * @param xc_status - `status`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseProcessProposal: (xc_status?: Opt<ProtoEnumTendermintAbciResponseProcessProposalProposalStatus>) => EncodedTendermintAbciResponseProcessProposal;
/**
 * Encodes a `ResponseExtendVote` protobuf message:
 * @param atu8_vote_extension - `vote_extension`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseExtendVote: (atu8_vote_extension?: Opt<Uint8Array>) => EncodedTendermintAbciResponseExtendVote;
/**
 * Encodes a `ResponseVerifyVoteExtension` protobuf message:
 * @param xc_status - `status`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseVerifyVoteExtension: (xc_status?: Opt<ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus>) => EncodedTendermintAbciResponseVerifyVoteExtension;
/**
 * Encodes a `ResponseFinalizeBlock` protobuf message:
 * @param a_events - `events`: set of block events emmitted as part of executing the block
 * @param a_tx_results - `tx_results`: the result of executing each transaction including the events the particular transction emitted. This should match the order of the transactions delivered in the block itself
 * @param a_validator_updates - `validator_updates`: a list of updates to the validator set. These will reflect the validator set at current height + 2.
 * @param g_consensus_param_updates - `consensus_param_updates`: updates to the consensus params, if any.
 * @param atu8_app_hash - `app_hash`: the hash of the applications' state which is used to confirm that execution of the transactions was deterministic. It is up to the application to decide which algorithm to use.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciResponseFinalizeBlock: (a_events?: Opt<Encoded<'/tendermint.abci.Event'>[]>, a_tx_results?: Opt<Encoded<'/tendermint.abci.ExecTxResult'>[]>, a_validator_updates?: Opt<Encoded<'/tendermint.abci.ValidatorUpdate'>[]>, atu8_consensus_param_updates?: Opt<Encoded<'/tendermint.types.ConsensusParams'>>, atu8_app_hash?: Opt<Uint8Array>) => EncodedTendermintAbciResponseFinalizeBlock;
/**
 * Encodes a `CommitInfo` protobuf message:
 * @param n_round - `round`:
 * @param a_votes - `votes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciCommitInfo: (n_round?: Opt<number>, a_votes?: Opt<Encoded<'/tendermint.abci.VoteInfo'>[]>) => EncodedTendermintAbciCommitInfo;
/**
 * Encodes a `ExtendedCommitInfo` protobuf message: similar to CommitInfo except that it is only used in the PrepareProposal request such that CometBFT can provide vote extensions to the application.
 * @param n_round - `round`: The round at which the block proposer decided in the previous height.
 * @param a_votes - `votes`: List of validators' addresses in the last validator set with their voting information, including vote extensions.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciExtendedCommitInfo: (n_round?: Opt<number>, a_votes?: Opt<Encoded<'/tendermint.abci.ExtendedVoteInfo'>[]>) => EncodedTendermintAbciExtendedCommitInfo;
/**
 * Encodes a `Event` protobuf message: allows application developers to attach additional information to ResponseFinalizeBlock and ResponseCheckTx. Later, transactions may be queried using these events.
 * @param s_type - `type`:
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciEvent: (s_type?: Opt<string>, a_attributes?: Opt<Encoded<'/tendermint.abci.EventAttribute'>[]>) => EncodedTendermintAbciEvent;
/**
 * Encodes a `EventAttribute` protobuf message: a single key-value pair, associated with an event.
 * @param s_key - `key`:
 * @param s_value - `value`:
 * @param b_index - `index`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciEventAttribute: (s_key?: Opt<string>, s_value?: Opt<string>, b_index?: Opt<boolean | 0 | 1>) => EncodedTendermintAbciEventAttribute;
/**
 * Encodes a `ExecTxResult` protobuf message: contains results of executing one individual transaction. * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
 * @param n_code - `code`:
 * @param atu8_data - `data`:
 * @param s_log - `log`:
 * @param s_info - `info`:
 * @param sg_gas_wanted - `gas_wanted`:
 * @param sg_gas_used - `gas_used`:
 * @param a_events - `events`:
 * @param s_codespace - `codespace`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciExecTxResult: (n_code?: Opt<number>, atu8_data?: Opt<Uint8Array>, s_log?: Opt<string>, s_info?: Opt<string>, sg_gas_wanted?: Opt<WeakInt64Str>, sg_gas_used?: Opt<WeakInt64Str>, a_events?: Opt<Encoded<'/tendermint.abci.Event'>[]>, s_codespace?: Opt<string>) => EncodedTendermintAbciExecTxResult;
/**
 * Encodes a `TxResult` protobuf message: contains results of executing the transaction. One usage is indexing transaction results.
 * @param sg_height - `height`:
 * @param n_index - `index`:
 * @param atu8_tx - `tx`:
 * @param g_result - `result`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciTxResult: (sg_height?: Opt<WeakInt64Str>, n_index?: Opt<number>, atu8_tx?: Opt<Uint8Array>, atu8_result?: Opt<Encoded<'/tendermint.abci.ExecTxResult'>>) => EncodedTendermintAbciTxResult;
/**
 * Encodes a `Validator` protobuf message:
 * @param atu8_address - `address`:
 * @param sg_power - `power`: PubKey pub_key = 2 [(gogoproto.nullable)=false];
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciValidator: (atu8_address?: Opt<Uint8Array>, sg_power?: Opt<WeakInt64Str>) => EncodedTendermintAbciValidator;
/**
 * Encodes a `ValidatorUpdate` protobuf message:
 * @param g_pub_key - `pub_key`:
 * @param sg_power - `power`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciValidatorUpdate: (atu8_pub_key?: Opt<Encoded<'/tendermint.crypto.PublicKey'>>, sg_power?: Opt<WeakInt64Str>) => EncodedTendermintAbciValidatorUpdate;
/**
 * Encodes a `VoteInfo` protobuf message:
 * @param g_validator - `validator`:
 * @param xc_block_id_flag - `block_id_flag`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciVoteInfo: (atu8_validator?: Opt<Encoded<'/tendermint.abci.Validator'>>, xc_block_id_flag?: Opt<ProtoEnumTendermintTypesBlockIDFlag>) => EncodedTendermintAbciVoteInfo;
/**
 * Encodes a `ExtendedVoteInfo` protobuf message:
 * @param g_validator - `validator`: The validator that sent the vote.
 * @param atu8_vote_extension - `vote_extension`: Non-deterministic extension provided by the sending validator's application.
 * @param atu8_extension_signature - `extension_signature`: Vote extension signature created by CometBFT
 * @param xc_block_id_flag - `block_id_flag`: indicates whether the validator voted for a block, nil, or did not vote at all
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciExtendedVoteInfo: (atu8_validator?: Opt<Encoded<'/tendermint.abci.Validator'>>, atu8_vote_extension?: Opt<Uint8Array>, atu8_extension_signature?: Opt<Uint8Array>, xc_block_id_flag?: Opt<ProtoEnumTendermintTypesBlockIDFlag>) => EncodedTendermintAbciExtendedVoteInfo;
/**
 * Encodes a `Misbehavior` protobuf message:
 * @param xc_type - `type`:
 * @param g_validator - `validator`: The offending validator
 * @param sg_height - `height`: The height when the offense occurred
 * @param xt_time - `time`: The corresponding time where the offense occurred
 * @param sg_total_voting_power - `total_voting_power`: Total voting power of the validator set in case the ABCI application does not store historical validators. https://github.com/tendermint/tendermint/issues/4581
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciMisbehavior: (xc_type?: Opt<ProtoEnumTendermintAbciMisbehaviorType>, atu8_validator?: Opt<Encoded<'/tendermint.abci.Validator'>>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, sg_total_voting_power?: Opt<WeakInt64Str>) => EncodedTendermintAbciMisbehavior;
/**
 * Encodes a `Snapshot` protobuf message:
 * @param sg_height - `height`:
 * @param n_format - `format`:
 * @param n_chunks - `chunks`:
 * @param atu8_hash - `hash`:
 * @param atu8_metadata - `metadata`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintAbciSnapshot: (sg_height?: Opt<WeakUint64Str>, n_format?: Opt<number>, n_chunks?: Opt<number>, atu8_hash?: Opt<Uint8Array>, atu8_metadata?: Opt<Uint8Array>) => EncodedTendermintAbciSnapshot;
/**
 * A decoded protobuf Request message
 *
 * Tuple where:
 *   - 0: echo -
 *   - 1: flush -
 *   - 2: info -
 *   - 4: init_chain -
 *   - 5: query -
 *   - 7: check_tx -
 *   - 10: commit -
 *   - 11: list_snapshots -
 *   - 12: offer_snapshot -
 *   - 13: load_snapshot_chunk -
 *   - 14: apply_snapshot_chunk -
 *   - 15: prepare_proposal -
 *   - 16: process_proposal -
 *   - 17: extend_vote -
 *   - 18: verify_vote_extension -
 *   - 19: finalize_block -
 */
export type DecodedTendermintAbciRequest = [
    a_echo?: DecodedTendermintAbciRequestEcho,
    a_flush?: DecodedTendermintAbciRequestFlush,
    a_info?: DecodedTendermintAbciRequestInfo,
    w_0?: undefined,
    a_init_chain?: DecodedTendermintAbciRequestInitChain,
    a_query?: DecodedTendermintAbciRequestQuery,
    w_0?: undefined,
    a_check_tx?: DecodedTendermintAbciRequestCheckTx,
    w_0?: undefined,
    w_1?: undefined,
    a_commit?: DecodedTendermintAbciRequestCommit,
    a_list_snapshots?: DecodedTendermintAbciRequestListSnapshots,
    a_offer_snapshot?: DecodedTendermintAbciRequestOfferSnapshot,
    a_load_snapshot_chunk?: DecodedTendermintAbciRequestLoadSnapshotChunk,
    a_apply_snapshot_chunk?: DecodedTendermintAbciRequestApplySnapshotChunk,
    a_prepare_proposal?: DecodedTendermintAbciRequestPrepareProposal,
    a_process_proposal?: DecodedTendermintAbciRequestProcessProposal,
    a_extend_vote?: DecodedTendermintAbciRequestExtendVote,
    a_verify_vote_extension?: DecodedTendermintAbciRequestVerifyVoteExtension,
    a_finalize_block?: DecodedTendermintAbciRequestFinalizeBlock
];
/**
 * Decodes a protobuf Request message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciRequest}
 */
export declare const decodeTendermintAbciRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciRequest;
/**
 * A decoded protobuf RequestEcho message
 *
 * Alias for: message -
 */
export type DecodedTendermintAbciRequestEcho = [
    s_message?: string
];
/**
 * Decodes a protobuf RequestEcho message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestEcho}
 */
export declare const decodeTendermintAbciRequestEcho: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestEcho;
/**
 * A decoded protobuf RequestFlush message
 *
 * Tuple where:
 */
export type DecodedTendermintAbciRequestFlush = [];
/**
 * Decodes a protobuf RequestFlush message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestFlush}
 */
export declare const decodeTendermintAbciRequestFlush: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RequestInfo message
 *
 * Tuple where:
 *   - 0: version -
 *   - 1: block_version -
 *   - 2: p2p_version -
 *   - 3: abci_version -
 */
export type DecodedTendermintAbciRequestInfo = [
    s_version?: string,
    sg_block_version?: CwUint64,
    sg_p2p_version?: CwUint64,
    s_abci_version?: string
];
/**
 * Decodes a protobuf RequestInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestInfo}
 */
export declare const decodeTendermintAbciRequestInfo: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestInfo;
/**
 * A decoded protobuf RequestInitChain message
 *
 * Tuple where:
 *   - 0: time -
 *   - 1: chain_id -
 *   - 2: consensus_params -
 *   - 3: validators -
 *   - 4: app_state_bytes -
 *   - 5: initial_height -
 */
export type DecodedTendermintAbciRequestInitChain = [
    a_time?: [
        string,
        number
    ],
    si_chain?: string,
    a_consensus_params?: DecodedTendermintTypesConsensusParams,
    a_validators?: DecodedTendermintAbciValidatorUpdate[],
    atu8_app_state_bytes?: Uint8Array,
    sg_initial_height?: CwInt64
];
/**
 * Decodes a protobuf RequestInitChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestInitChain}
 */
export declare const decodeTendermintAbciRequestInitChain: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestInitChain;
/**
 * A decoded protobuf RequestQuery message
 *
 * Tuple where:
 *   - 0: data -
 *   - 1: path -
 *   - 2: height -
 *   - 3: prove -
 */
export type DecodedTendermintAbciRequestQuery = [
    atu8_data?: Uint8Array,
    s_path?: string,
    sg_height?: CwInt64,
    b_prove?: 0 | 1
];
/**
 * Decodes a protobuf RequestQuery message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestQuery}
 */
export declare const decodeTendermintAbciRequestQuery: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestQuery;
/**
 * A decoded protobuf RequestCheckTx message
 *
 * Tuple where:
 *   - 0: tx -
 *   - 1: type -
 */
export type DecodedTendermintAbciRequestCheckTx = [
    atu8_tx?: Uint8Array,
    xc_type?: ProtoEnumTendermintAbciCheckTxType
];
/**
 * Decodes a protobuf RequestCheckTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestCheckTx}
 */
export declare const decodeTendermintAbciRequestCheckTx: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestCheckTx;
/**
 * A decoded protobuf RequestCommit message
 *
 * Tuple where:
 */
export type DecodedTendermintAbciRequestCommit = [];
/**
 * Decodes a protobuf RequestCommit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestCommit}
 */
export declare const decodeTendermintAbciRequestCommit: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RequestListSnapshots message
 *
 * Tuple where:
 */
export type DecodedTendermintAbciRequestListSnapshots = [];
/**
 * Decodes a protobuf RequestListSnapshots message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestListSnapshots}
 */
export declare const decodeTendermintAbciRequestListSnapshots: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RequestOfferSnapshot message
 *
 * Tuple where:
 *   - 0: snapshot -
 *   - 1: app_hash -
 */
export type DecodedTendermintAbciRequestOfferSnapshot = [
    a_snapshot?: DecodedTendermintAbciSnapshot,
    atu8_app_hash?: Uint8Array
];
/**
 * Decodes a protobuf RequestOfferSnapshot message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestOfferSnapshot}
 */
export declare const decodeTendermintAbciRequestOfferSnapshot: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestOfferSnapshot;
/**
 * A decoded protobuf RequestLoadSnapshotChunk message
 *
 * Tuple where:
 *   - 0: height -
 *   - 1: format -
 *   - 2: chunk -
 */
export type DecodedTendermintAbciRequestLoadSnapshotChunk = [
    sg_height?: CwUint64,
    n_format?: number,
    n_chunk?: number
];
/**
 * Decodes a protobuf RequestLoadSnapshotChunk message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestLoadSnapshotChunk}
 */
export declare const decodeTendermintAbciRequestLoadSnapshotChunk: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestLoadSnapshotChunk;
/**
 * A decoded protobuf RequestApplySnapshotChunk message
 *
 * Tuple where:
 *   - 0: index -
 *   - 1: chunk -
 *   - 2: sender -
 */
export type DecodedTendermintAbciRequestApplySnapshotChunk = [
    n_index?: number,
    atu8_chunk?: Uint8Array,
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf RequestApplySnapshotChunk message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestApplySnapshotChunk}
 */
export declare const decodeTendermintAbciRequestApplySnapshotChunk: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestApplySnapshotChunk;
/**
 * A decoded protobuf RequestPrepareProposal message
 *
 * Tuple where:
 *   - 0: max_tx_bytes - the modified transactions cannot exceed this size.
 *   - 1: txs - an array of transactions that will be included in a block, sent to the app for possible modifications.
 *   - 2: local_last_commit -
 *   - 3: misbehavior -
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the validator proposing the block.
 */
export type DecodedTendermintAbciRequestPrepareProposal = [
    sg_max_tx_bytes?: CwInt64,
    a_txs?: Uint8Array[],
    a_local_last_commit?: DecodedTendermintAbciExtendedCommitInfo,
    a_misbehavior?: DecodedTendermintAbciMisbehavior[],
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    atu8_next_validators_hash?: Uint8Array,
    atu8_proposer_address?: Uint8Array
];
/**
 * Decodes a protobuf RequestPrepareProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestPrepareProposal}
 */
export declare const decodeTendermintAbciRequestPrepareProposal: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestPrepareProposal;
/**
 * A decoded protobuf RequestProcessProposal message
 *
 * Tuple where:
 *   - 0: txs -
 *   - 1: proposed_last_commit -
 *   - 2: misbehavior -
 *   - 3: hash - the merkle root hash of the fields of the proposed block.
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the original proposer of the block.
 */
export type DecodedTendermintAbciRequestProcessProposal = [
    a_txs?: Uint8Array[],
    a_proposed_last_commit?: DecodedTendermintAbciCommitInfo,
    a_misbehavior?: DecodedTendermintAbciMisbehavior[],
    atu8_hash?: Uint8Array,
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    atu8_next_validators_hash?: Uint8Array,
    atu8_proposer_address?: Uint8Array
];
/**
 * Decodes a protobuf RequestProcessProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestProcessProposal}
 */
export declare const decodeTendermintAbciRequestProcessProposal: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestProcessProposal;
/**
 * A decoded protobuf RequestExtendVote message
 *
 * Tuple where:
 *   - 0: hash - the hash of the block that this vote may be referring to
 *   - 1: height - the height of the extended vote
 *   - 2: time - info of the block that this vote may be referring to
 *   - 3: txs -
 *   - 4: proposed_last_commit -
 *   - 5: misbehavior -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the original proposer of the block.
 */
export type DecodedTendermintAbciRequestExtendVote = [
    atu8_hash?: Uint8Array,
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    a_txs?: Uint8Array[],
    a_proposed_last_commit?: DecodedTendermintAbciCommitInfo,
    a_misbehavior?: DecodedTendermintAbciMisbehavior[],
    atu8_next_validators_hash?: Uint8Array,
    atu8_proposer_address?: Uint8Array
];
/**
 * Decodes a protobuf RequestExtendVote message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestExtendVote}
 */
export declare const decodeTendermintAbciRequestExtendVote: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestExtendVote;
/**
 * A decoded protobuf RequestVerifyVoteExtension message
 *
 * Tuple where:
 *   - 0: hash - the hash of the block that this received vote corresponds to
 *   - 1: validator_address - the validator that signed the vote extension
 *   - 2: height -
 *   - 3: vote_extension -
 */
export type DecodedTendermintAbciRequestVerifyVoteExtension = [
    atu8_hash?: Uint8Array,
    atu8_validator_address?: Uint8Array,
    sg_height?: CwInt64,
    atu8_vote_extension?: Uint8Array
];
/**
 * Decodes a protobuf RequestVerifyVoteExtension message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestVerifyVoteExtension}
 */
export declare const decodeTendermintAbciRequestVerifyVoteExtension: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestVerifyVoteExtension;
/**
 * A decoded protobuf RequestFinalizeBlock message
 *
 * Tuple where:
 *   - 0: txs -
 *   - 1: decided_last_commit -
 *   - 2: misbehavior -
 *   - 3: hash - the merkle root hash of the fields of the decided block.
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - the address of the public key of the original proposer of the block.
 */
export type DecodedTendermintAbciRequestFinalizeBlock = [
    a_txs?: Uint8Array[],
    a_decided_last_commit?: DecodedTendermintAbciCommitInfo,
    a_misbehavior?: DecodedTendermintAbciMisbehavior[],
    atu8_hash?: Uint8Array,
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    atu8_next_validators_hash?: Uint8Array,
    atu8_proposer_address?: Uint8Array
];
/**
 * Decodes a protobuf RequestFinalizeBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciRequestFinalizeBlock}
 */
export declare const decodeTendermintAbciRequestFinalizeBlock: (atu8_payload: Uint8Array) => DecodedTendermintAbciRequestFinalizeBlock;
/**
 * A decoded protobuf  message
 *
 * Tuple where:
 *   - 0: exception -
 *   - 1: echo -
 *   - 2: flush -
 *   - 3: info -
 *   - 5: init_chain -
 *   - 6: query -
 *   - 8: check_tx -
 *   - 11: commit -
 *   - 12: list_snapshots -
 *   - 13: offer_snapshot -
 *   - 14: load_snapshot_chunk -
 *   - 15: apply_snapshot_chunk -
 *   - 16: prepare_proposal -
 *   - 17: process_proposal -
 *   - 18: extend_vote -
 *   - 19: verify_vote_extension -
 *   - 20: finalize_block -
 */
export type DecodedTendermintAbciResponse = [
    a_exception?: DecodedTendermintAbciResponseException,
    a_echo?: DecodedTendermintAbciResponseEcho,
    a_flush?: DecodedTendermintAbciResponseFlush,
    a_info?: DecodedTendermintAbciResponseInfo,
    w_0?: undefined,
    a_init_chain?: DecodedTendermintAbciResponseInitChain,
    a_query?: DecodedTendermintAbciResponseQuery,
    w_0?: undefined,
    a_check_tx?: DecodedTendermintAbciResponseCheckTx,
    w_0?: undefined,
    w_1?: undefined,
    a_commit?: DecodedTendermintAbciResponseCommit,
    a_list_snapshots?: DecodedTendermintAbciResponseListSnapshots,
    a_offer_snapshot?: DecodedTendermintAbciResponseOfferSnapshot,
    a_load_snapshot_chunk?: DecodedTendermintAbciResponseLoadSnapshotChunk,
    a_apply_snapshot_chunk?: DecodedTendermintAbciResponseApplySnapshotChunk,
    a_prepare_proposal?: DecodedTendermintAbciResponsePrepareProposal,
    a_process_proposal?: DecodedTendermintAbciResponseProcessProposal,
    a_extend_vote?: DecodedTendermintAbciResponseExtendVote,
    a_verify_vote_extension?: DecodedTendermintAbciResponseVerifyVoteExtension,
    a_finalize_block?: DecodedTendermintAbciResponseFinalizeBlock
];
/**
 * Decodes a protobuf  message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciResponse}
 */
export declare const decodeTendermintAbciResponse: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciResponse;
/**
 * A decoded protobuf ResponseException message
 *
 * Alias for: error -
 */
export type DecodedTendermintAbciResponseException = [
    s_error?: string
];
/**
 * Decodes a protobuf ResponseException message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseException}
 */
export declare const decodeTendermintAbciResponseException: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseException;
/**
 * A decoded protobuf ResponseEcho message
 *
 * Alias for: message -
 */
export type DecodedTendermintAbciResponseEcho = [
    s_message?: string
];
/**
 * Decodes a protobuf ResponseEcho message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseEcho}
 */
export declare const decodeTendermintAbciResponseEcho: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseEcho;
/**
 * A decoded protobuf ResponseFlush message
 *
 * Tuple where:
 */
export type DecodedTendermintAbciResponseFlush = [];
/**
 * Decodes a protobuf ResponseFlush message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseFlush}
 */
export declare const decodeTendermintAbciResponseFlush: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ResponseInfo message
 *
 * Tuple where:
 *   - 0: data -
 *   - 1: version -
 *   - 2: app_version -
 *   - 3: last_block_height -
 *   - 4: last_block_app_hash -
 */
export type DecodedTendermintAbciResponseInfo = [
    s_data?: string,
    s_version?: string,
    sg_app_version?: CwUint64,
    sg_last_block_height?: CwInt64,
    atu8_last_block_app_hash?: Uint8Array
];
/**
 * Decodes a protobuf ResponseInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseInfo}
 */
export declare const decodeTendermintAbciResponseInfo: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseInfo;
/**
 * A decoded protobuf ResponseInitChain message
 *
 * Tuple where:
 *   - 0: consensus_params -
 *   - 1: validators -
 *   - 2: app_hash -
 */
export type DecodedTendermintAbciResponseInitChain = [
    a_consensus_params?: DecodedTendermintTypesConsensusParams,
    a_validators?: DecodedTendermintAbciValidatorUpdate[],
    atu8_app_hash?: Uint8Array
];
/**
 * Decodes a protobuf ResponseInitChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseInitChain}
 */
export declare const decodeTendermintAbciResponseInitChain: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseInitChain;
/**
 * A decoded protobuf ResponseQuery message
 *
 * Tuple where:
 *   - 0: code -
 *   - 2: log - bytes data = 2; // use "value" instead.
 *   - 3: info -
 *   - 4: index -
 *   - 5: key -
 *   - 6: value -
 *   - 7: proof_ops -
 *   - 8: height -
 *   - 9: codespace -
 */
export type DecodedTendermintAbciResponseQuery = [
    n_code?: number,
    w_0?: undefined,
    s_log?: string,
    s_info?: string,
    sg_index?: CwInt64,
    atu8_key?: Uint8Array,
    atu8_value?: Uint8Array,
    a_proof_ops?: DecodedTendermintCryptoProofOps,
    sg_height?: CwInt64,
    s_codespace?: string
];
/**
 * Decodes a protobuf ResponseQuery message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciResponseQuery}
 */
export declare const decodeTendermintAbciResponseQuery: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciResponseQuery;
/**
 * A decoded protobuf ResponseCheckTx message
 *
 * Tuple where:
 *   - 0: code -
 *   - 1: data -
 *   - 2: log -
 *   - 3: info -
 *   - 4: gas_wanted -
 *   - 5: gas_used -
 *   - 6: events -
 *   - 7: codespace -
 */
export type DecodedTendermintAbciResponseCheckTx = [
    n_code?: number,
    atu8_data?: Uint8Array,
    s_log?: string,
    s_info?: string,
    sg_gas_wanted?: CwInt64,
    sg_gas_used?: CwInt64,
    a_events?: DecodedTendermintAbciEvent[],
    s_codespace?: string
];
/**
 * Decodes a protobuf ResponseCheckTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseCheckTx}
 */
export declare const decodeTendermintAbciResponseCheckTx: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseCheckTx;
/**
 * A decoded protobuf ResponseCommit message
 *
 * Alias for: retain_height -
 */
export type DecodedTendermintAbciResponseCommit = [
    w_0?: undefined,
    w_1?: undefined,
    sg_retain_height?: CwInt64
];
/**
 * Decodes a protobuf ResponseCommit message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciResponseCommit}
 */
export declare const decodeTendermintAbciResponseCommit: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciResponseCommit;
/**
 * A decoded protobuf ResponseListSnapshots message
 *
 * Alias for: snapshots -
 */
export type DecodedTendermintAbciResponseListSnapshots = [
    a_snapshots?: DecodedTendermintAbciSnapshot[]
];
/**
 * Decodes a protobuf ResponseListSnapshots message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseListSnapshots}
 */
export declare const decodeTendermintAbciResponseListSnapshots: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseListSnapshots;
/**
 * A decoded protobuf ResponseOfferSnapshot message
 *
 * Alias for: result -
 */
export type DecodedTendermintAbciResponseOfferSnapshot = [
    xc_result?: ProtoEnumTendermintAbciResponseOfferSnapshotResult
];
/**
 * Decodes a protobuf ResponseOfferSnapshot message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseOfferSnapshot}
 */
export declare const decodeTendermintAbciResponseOfferSnapshot: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseOfferSnapshot;
/**
 * A decoded protobuf ResponseLoadSnapshotChunk message
 *
 * Alias for: chunk -
 */
export type DecodedTendermintAbciResponseLoadSnapshotChunk = [
    atu8_chunk?: Uint8Array
];
/**
 * Decodes a protobuf ResponseLoadSnapshotChunk message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseLoadSnapshotChunk}
 */
export declare const decodeTendermintAbciResponseLoadSnapshotChunk: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseLoadSnapshotChunk;
/**
 * A decoded protobuf ResponseApplySnapshotChunk message
 *
 * Tuple where:
 *   - 0: result -
 *   - 1: refetch_chunks -
 *   - 2: reject_senders -
 */
export type DecodedTendermintAbciResponseApplySnapshotChunk = [
    xc_result?: ProtoEnumTendermintAbciResponseApplySnapshotChunkResult,
    a_refetch_chunks?: number[],
    a_reject_senders?: string[]
];
/**
 * Decodes a protobuf ResponseApplySnapshotChunk message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseApplySnapshotChunk}
 */
export declare const decodeTendermintAbciResponseApplySnapshotChunk: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseApplySnapshotChunk;
/**
 * A decoded protobuf ResponsePrepareProposal message
 *
 * Alias for: txs -
 */
export type DecodedTendermintAbciResponsePrepareProposal = [
    a_txs?: Uint8Array[]
];
/**
 * Decodes a protobuf ResponsePrepareProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponsePrepareProposal}
 */
export declare const decodeTendermintAbciResponsePrepareProposal: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponsePrepareProposal;
/**
 * A decoded protobuf ResponseProcessProposal message
 *
 * Alias for: status -
 */
export type DecodedTendermintAbciResponseProcessProposal = [
    xc_status?: ProtoEnumTendermintAbciResponseProcessProposalProposalStatus
];
/**
 * Decodes a protobuf ResponseProcessProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseProcessProposal}
 */
export declare const decodeTendermintAbciResponseProcessProposal: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseProcessProposal;
/**
 * A decoded protobuf ResponseExtendVote message
 *
 * Alias for: vote_extension -
 */
export type DecodedTendermintAbciResponseExtendVote = [
    atu8_vote_extension?: Uint8Array
];
/**
 * Decodes a protobuf ResponseExtendVote message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseExtendVote}
 */
export declare const decodeTendermintAbciResponseExtendVote: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseExtendVote;
/**
 * A decoded protobuf ResponseVerifyVoteExtension message
 *
 * Alias for: status -
 */
export type DecodedTendermintAbciResponseVerifyVoteExtension = [
    xc_status?: ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus
];
/**
 * Decodes a protobuf ResponseVerifyVoteExtension message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseVerifyVoteExtension}
 */
export declare const decodeTendermintAbciResponseVerifyVoteExtension: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseVerifyVoteExtension;
/**
 * A decoded protobuf ResponseFinalizeBlock message
 *
 * Tuple where:
 *   - 0: events - set of block events emmitted as part of executing the block
 *   - 1: tx_results - the result of executing each transaction including the events the particular transction emitted. This should match the order of the transactions delivered in the block itself
 *   - 2: validator_updates - a list of updates to the validator set. These will reflect the validator set at current height + 2.
 *   - 3: consensus_param_updates - updates to the consensus params, if any.
 *   - 4: app_hash - the hash of the applications' state which is used to confirm that execution of the transactions was deterministic. It is up to the application to decide which algorithm to use.
 */
export type DecodedTendermintAbciResponseFinalizeBlock = [
    a_events?: DecodedTendermintAbciEvent[],
    a_tx_results?: DecodedTendermintAbciExecTxResult[],
    a_validator_updates?: DecodedTendermintAbciValidatorUpdate[],
    a_consensus_param_updates?: DecodedTendermintTypesConsensusParams,
    atu8_app_hash?: Uint8Array
];
/**
 * Decodes a protobuf ResponseFinalizeBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciResponseFinalizeBlock}
 */
export declare const decodeTendermintAbciResponseFinalizeBlock: (atu8_payload: Uint8Array) => DecodedTendermintAbciResponseFinalizeBlock;
/**
 * A decoded protobuf CommitInfo message
 *
 * Tuple where:
 *   - 0: round -
 *   - 1: votes -
 */
export type DecodedTendermintAbciCommitInfo = [
    n_round?: number,
    a_votes?: DecodedTendermintAbciVoteInfo[]
];
/**
 * Decodes a protobuf CommitInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciCommitInfo}
 */
export declare const decodeTendermintAbciCommitInfo: (atu8_payload: Uint8Array) => DecodedTendermintAbciCommitInfo;
/**
 * A decoded protobuf ExtendedCommitInfo message
 *
 * Tuple where:
 *   - 0: round - The round at which the block proposer decided in the previous height.
 *   - 1: votes - List of validators' addresses in the last validator set with their voting information, including vote extensions.
 */
export type DecodedTendermintAbciExtendedCommitInfo = [
    n_round?: number,
    a_votes?: DecodedTendermintAbciExtendedVoteInfo[]
];
/**
 * Decodes a protobuf ExtendedCommitInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciExtendedCommitInfo}
 */
export declare const decodeTendermintAbciExtendedCommitInfo: (atu8_payload: Uint8Array) => DecodedTendermintAbciExtendedCommitInfo;
/**
 * A decoded protobuf Event message
 *
 * Tuple where:
 *   - 0: type -
 *   - 1: attributes -
 */
export type DecodedTendermintAbciEvent = [
    s_type?: string,
    a_attributes?: DecodedTendermintAbciEventAttribute[]
];
/**
 * Decodes a protobuf Event message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciEvent}
 */
export declare const decodeTendermintAbciEvent: (atu8_payload: Uint8Array) => DecodedTendermintAbciEvent;
/**
 * A decoded protobuf EventAttribute message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 *   - 2: index -
 */
export type DecodedTendermintAbciEventAttribute = [
    s_key?: string,
    s_value?: string,
    b_index?: 0 | 1
];
/**
 * Decodes a protobuf EventAttribute message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciEventAttribute}
 */
export declare const decodeTendermintAbciEventAttribute: (atu8_payload: Uint8Array) => DecodedTendermintAbciEventAttribute;
/**
 * A decoded protobuf ExecTxResult message
 *
 * Tuple where:
 *   - 0: code -
 *   - 1: data -
 *   - 2: log -
 *   - 3: info -
 *   - 4: gas_wanted -
 *   - 5: gas_used -
 *   - 6: events -
 *   - 7: codespace -
 */
export type DecodedTendermintAbciExecTxResult = [
    n_code?: number,
    atu8_data?: Uint8Array,
    s_log?: string,
    s_info?: string,
    sg_gas_wanted?: CwInt64,
    sg_gas_used?: CwInt64,
    a_events?: DecodedTendermintAbciEvent[],
    s_codespace?: string
];
/**
 * Decodes a protobuf ExecTxResult message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciExecTxResult}
 */
export declare const decodeTendermintAbciExecTxResult: (atu8_payload: Uint8Array) => DecodedTendermintAbciExecTxResult;
/**
 * A decoded protobuf TxResult message
 *
 * Tuple where:
 *   - 0: height -
 *   - 1: index -
 *   - 2: tx -
 *   - 3: result -
 */
export type DecodedTendermintAbciTxResult = [
    sg_height?: CwInt64,
    n_index?: number,
    atu8_tx?: Uint8Array,
    a_result?: DecodedTendermintAbciExecTxResult
];
/**
 * Decodes a protobuf TxResult message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciTxResult}
 */
export declare const decodeTendermintAbciTxResult: (atu8_payload: Uint8Array) => DecodedTendermintAbciTxResult;
/**
 * A decoded protobuf Validator message
 *
 * Tuple where:
 *   - 0: address -
 *   - 2: power - PubKey pub_key = 2 [(gogoproto.nullable)=false];
 */
export type DecodedTendermintAbciValidator = [
    atu8_address?: Uint8Array,
    w_0?: undefined,
    sg_power?: CwInt64
];
/**
 * Decodes a protobuf Validator message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciValidator}
 */
export declare const decodeTendermintAbciValidator: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciValidator;
/**
 * A decoded protobuf ValidatorUpdate message
 *
 * Tuple where:
 *   - 0: pub_key -
 *   - 1: power -
 */
export type DecodedTendermintAbciValidatorUpdate = [
    a_pub_key?: DecodedTendermintCryptoPublicKey,
    sg_power?: CwInt64
];
/**
 * Decodes a protobuf ValidatorUpdate message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciValidatorUpdate}
 */
export declare const decodeTendermintAbciValidatorUpdate: (atu8_payload: Uint8Array) => DecodedTendermintAbciValidatorUpdate;
/**
 * A decoded protobuf VoteInfo message
 *
 * Tuple where:
 *   - 0: validator -
 *   - 2: block_id_flag -
 */
export type DecodedTendermintAbciVoteInfo = [
    a_validator?: DecodedTendermintAbciValidator,
    w_0?: undefined,
    xc_block_id_flag?: ProtoEnumTendermintTypesBlockIDFlag
];
/**
 * Decodes a protobuf VoteInfo message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciVoteInfo}
 */
export declare const decodeTendermintAbciVoteInfo: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciVoteInfo;
/**
 * A decoded protobuf ExtendedVoteInfo message
 *
 * Tuple where:
 *   - 0: validator - The validator that sent the vote.
 *   - 2: vote_extension - Non-deterministic extension provided by the sending validator's application.
 *   - 3: extension_signature - Vote extension signature created by CometBFT
 *   - 4: block_id_flag - indicates whether the validator voted for a block, nil, or did not vote at all
 */
export type DecodedTendermintAbciExtendedVoteInfo = [
    a_validator?: DecodedTendermintAbciValidator,
    w_0?: undefined,
    atu8_vote_extension?: Uint8Array,
    atu8_extension_signature?: Uint8Array,
    xc_block_id_flag?: ProtoEnumTendermintTypesBlockIDFlag
];
/**
 * Decodes a protobuf ExtendedVoteInfo message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedTendermintAbciExtendedVoteInfo}
 */
export declare const decodeTendermintAbciExtendedVoteInfo: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedTendermintAbciExtendedVoteInfo;
/**
 * A decoded protobuf Misbehavior message
 *
 * Tuple where:
 *   - 0: type -
 *   - 1: validator - The offending validator
 *   - 2: height - The height when the offense occurred
 *   - 3: time - The corresponding time where the offense occurred
 *   - 4: total_voting_power - Total voting power of the validator set in case the ABCI application does not store historical validators. https://github.com/tendermint/tendermint/issues/4581
 */
export type DecodedTendermintAbciMisbehavior = [
    xc_type?: ProtoEnumTendermintAbciMisbehaviorType,
    a_validator?: DecodedTendermintAbciValidator,
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    sg_total_voting_power?: CwInt64
];
/**
 * Decodes a protobuf Misbehavior message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciMisbehavior}
 */
export declare const decodeTendermintAbciMisbehavior: (atu8_payload: Uint8Array) => DecodedTendermintAbciMisbehavior;
/**
 * A decoded protobuf Snapshot message
 *
 * Tuple where:
 *   - 0: height -
 *   - 1: format -
 *   - 2: chunks -
 *   - 3: hash -
 *   - 4: metadata -
 */
export type DecodedTendermintAbciSnapshot = [
    sg_height?: CwUint64,
    n_format?: number,
    n_chunks?: number,
    atu8_hash?: Uint8Array,
    atu8_metadata?: Uint8Array
];
/**
 * Decodes a protobuf Snapshot message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintAbciSnapshot}
 */
export declare const decodeTendermintAbciSnapshot: (atu8_payload: Uint8Array) => DecodedTendermintAbciSnapshot;
/**
 * Destructures the fields of a {@link TendermintAbciResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: exception -
 *   - 1: echo -
 *   - 2: flush -
 *   - 3: info -
 *   - 5: init_chain -
 *   - 6: query -
 *   - 8: check_tx -
 *   - 11: commit -
 *   - 12: list_snapshots -
 *   - 13: offer_snapshot -
 *   - 14: load_snapshot_chunk -
 *   - 15: apply_snapshot_chunk -
 *   - 16: prepare_proposal -
 *   - 17: process_proposal -
 *   - 18: extend_vote -
 *   - 19: verify_vote_extension -
 *   - 20: finalize_block -
 */
export declare const destructTendermintAbciResponse: (g_struct: TendermintAbciResponse) => [exception?: TendermintAbciResponseException, echo?: TendermintAbciResponseEcho, flush?: TendermintAbciResponseFlush, info?: TendermintAbciResponseInfo, EMPTY?: void, init_chain?: TendermintAbciResponseInitChain, query?: TendermintAbciResponseQuery, EMPTY?: void, check_tx?: TendermintAbciResponseCheckTx, EMPTY?: void, EMPTY?: void, commit?: TendermintAbciResponseCommit, list_snapshots?: TendermintAbciResponseListSnapshots, offer_snapshot?: TendermintAbciResponseOfferSnapshot, load_snapshot_chunk?: TendermintAbciResponseLoadSnapshotChunk, apply_snapshot_chunk?: TendermintAbciResponseApplySnapshotChunk, prepare_proposal?: TendermintAbciResponsePrepareProposal, process_proposal?: TendermintAbciResponseProcessProposal, extend_vote?: TendermintAbciResponseExtendVote, verify_vote_extension?: TendermintAbciResponseVerifyVoteExtension, finalize_block?: TendermintAbciResponseFinalizeBlock];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE = "/tendermint.abci.Response";
/**
 * JSON serialization of `tendermint.abci.Response` -
 */
export type TendermintAbciResponse = {
    exception?: TendermintAbciResponseException | undefined;
    echo?: TendermintAbciResponseEcho | undefined;
    flush?: TendermintAbciResponseFlush | undefined;
    info?: TendermintAbciResponseInfo | undefined;
    init_chain?: TendermintAbciResponseInitChain | undefined;
    query?: TendermintAbciResponseQuery | undefined;
    check_tx?: TendermintAbciResponseCheckTx | undefined;
    commit?: TendermintAbciResponseCommit | undefined;
    list_snapshots?: TendermintAbciResponseListSnapshots | undefined;
    offer_snapshot?: TendermintAbciResponseOfferSnapshot | undefined;
    load_snapshot_chunk?: TendermintAbciResponseLoadSnapshotChunk | undefined;
    apply_snapshot_chunk?: TendermintAbciResponseApplySnapshotChunk | undefined;
    prepare_proposal?: TendermintAbciResponsePrepareProposal | undefined;
    process_proposal?: TendermintAbciResponseProcessProposal | undefined;
    extend_vote?: TendermintAbciResponseExtendVote | undefined;
    verify_vote_extension?: TendermintAbciResponseVerifyVoteExtension | undefined;
    finalize_block?: TendermintAbciResponseFinalizeBlock | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseException} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: error -
 */
export declare const destructTendermintAbciResponseException: (g_struct: TendermintAbciResponseException) => [error?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_EXCEPTION = "/tendermint.abci.ResponseException";
/**
 * JSON serialization of `tendermint.abci.ResponseException` - nondeterministic
 */
export type TendermintAbciResponseException = {
    error?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseEcho} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: message -
 */
export declare const destructTendermintAbciResponseEcho: (g_struct: TendermintAbciResponseEcho) => [message?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_ECHO = "/tendermint.abci.ResponseEcho";
/**
 * JSON serialization of `tendermint.abci.ResponseEcho` -
 */
export type TendermintAbciResponseEcho = {
    message?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseFlush} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructTendermintAbciResponseFlush: (g_struct: TendermintAbciResponseFlush) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_FLUSH = "/tendermint.abci.ResponseFlush";
/**
 * JSON serialization of `tendermint.abci.ResponseFlush` -
 */
export type TendermintAbciResponseFlush = {};
/**
 * Destructures the fields of a {@link TendermintAbciResponseInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 *   - 1: version -
 *   - 2: app_version -
 *   - 3: last_block_height -
 *   - 4: last_block_app_hash -
 */
export declare const destructTendermintAbciResponseInfo: (g_struct: TendermintAbciResponseInfo) => [data?: string, version?: string, app_version?: CwUint64, last_block_height?: CwInt64, last_block_app_hash?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_INFO = "/tendermint.abci.ResponseInfo";
/**
 * JSON serialization of `tendermint.abci.ResponseInfo` -
 */
export type TendermintAbciResponseInfo = {
    data?: string | undefined;
    version?: string | undefined;
    app_version?: CwUint64 | undefined;
    last_block_height?: CwInt64 | undefined;
    last_block_app_hash?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseInitChain} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: consensus_params -
 *   - 1: validators -
 *   - 2: app_hash -
 */
export declare const destructTendermintAbciResponseInitChain: (g_struct: TendermintAbciResponseInitChain) => [consensus_params?: TendermintTypesConsensusParams, validators?: TendermintAbciValidatorUpdate[], app_hash?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_INIT_CHAIN = "/tendermint.abci.ResponseInitChain";
/**
 * JSON serialization of `tendermint.abci.ResponseInitChain` -
 */
export type TendermintAbciResponseInitChain = {
    consensus_params?: TendermintTypesConsensusParams | undefined;
    validators?: TendermintAbciValidatorUpdate[] | undefined;
    app_hash?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseQuery} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code -
 *   - 2: log - bytes data = 2; // use "value" instead.
 *   - 3: info -
 *   - 4: index -
 *   - 5: key -
 *   - 6: value -
 *   - 7: proof_ops -
 *   - 8: height -
 *   - 9: codespace -
 */
export declare const destructTendermintAbciResponseQuery: (g_struct: TendermintAbciResponseQuery) => [code?: number, EMPTY?: void, log?: string, info?: string, index?: CwInt64, key?: Uint8Array, value?: Uint8Array, proof_ops?: TendermintCryptoProofOps, height?: CwInt64, codespace?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_QUERY = "/tendermint.abci.ResponseQuery";
/**
 * JSON serialization of `tendermint.abci.ResponseQuery` -
 */
export type TendermintAbciResponseQuery = {
    code?: number | undefined;
    log?: string | undefined;
    info?: string | undefined;
    index?: CwInt64 | undefined;
    key?: CwBase64 | undefined;
    value?: CwBase64 | undefined;
    proof_ops?: TendermintCryptoProofOps | undefined;
    height?: CwInt64 | undefined;
    codespace?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseCheckTx} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code -
 *   - 1: data -
 *   - 2: log -
 *   - 3: info -
 *   - 4: gas_wanted -
 *   - 5: gas_used -
 *   - 6: events -
 *   - 7: codespace -
 */
export declare const destructTendermintAbciResponseCheckTx: (g_struct: TendermintAbciResponseCheckTx) => [code?: number, data?: Uint8Array, log?: string, info?: string, gas_wanted?: CwInt64, gas_used?: CwInt64, events?: TendermintAbciEvent[], codespace?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_CHECK_TX = "/tendermint.abci.ResponseCheckTx";
/**
 * JSON serialization of `tendermint.abci.ResponseCheckTx` -
 */
export type TendermintAbciResponseCheckTx = {
    code?: number | undefined;
    data?: CwBase64 | undefined;
    log?: string | undefined;
    info?: string | undefined;
    gas_wanted?: CwInt64 | undefined;
    gas_used?: CwInt64 | undefined;
    events?: TendermintAbciEvent[] | undefined;
    codespace?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseCommit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 2: retain_height -
 */
export declare const destructTendermintAbciResponseCommit: (g_struct: TendermintAbciResponseCommit) => [EMPTY?: void, EMPTY?: void, retain_height?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_COMMIT = "/tendermint.abci.ResponseCommit";
/**
 * JSON serialization of `tendermint.abci.ResponseCommit` -
 */
export type TendermintAbciResponseCommit = {
    retain_height?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseListSnapshots} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: snapshots -
 */
export declare const destructTendermintAbciResponseListSnapshots: (g_struct: TendermintAbciResponseListSnapshots) => [snapshots?: TendermintAbciSnapshot[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_LIST_SNAPSHOTS = "/tendermint.abci.ResponseListSnapshots";
/**
 * JSON serialization of `tendermint.abci.ResponseListSnapshots` -
 */
export type TendermintAbciResponseListSnapshots = {
    snapshots?: TendermintAbciSnapshot[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseOfferSnapshot} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: result -
 */
export declare const destructTendermintAbciResponseOfferSnapshot: (g_struct: TendermintAbciResponseOfferSnapshot) => [result?: JsonEnumTendermintAbciResponseOfferSnapshotResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT = "/tendermint.abci.ResponseOfferSnapshot";
/**
 * JSON serialization of `tendermint.abci.ResponseOfferSnapshot` -
 */
export type TendermintAbciResponseOfferSnapshot = {
    result?: JsonEnumTendermintAbciResponseOfferSnapshotResult | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseLoadSnapshotChunk} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: chunk -
 */
export declare const destructTendermintAbciResponseLoadSnapshotChunk: (g_struct: TendermintAbciResponseLoadSnapshotChunk) => [chunk?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_LOAD_SNAPSHOT_CHUNK = "/tendermint.abci.ResponseLoadSnapshotChunk";
/**
 * JSON serialization of `tendermint.abci.ResponseLoadSnapshotChunk` -
 */
export type TendermintAbciResponseLoadSnapshotChunk = {
    chunk?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseApplySnapshotChunk} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: result -
 *   - 1: refetch_chunks -
 *   - 2: reject_senders -
 */
export declare const destructTendermintAbciResponseApplySnapshotChunk: (g_struct: TendermintAbciResponseApplySnapshotChunk) => [result?: JsonEnumTendermintAbciResponseApplySnapshotChunkResult, refetch_chunks?: number[], reject_senders?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK = "/tendermint.abci.ResponseApplySnapshotChunk";
/**
 * JSON serialization of `tendermint.abci.ResponseApplySnapshotChunk` -
 */
export type TendermintAbciResponseApplySnapshotChunk = {
    result?: JsonEnumTendermintAbciResponseApplySnapshotChunkResult | undefined;
    refetch_chunks?: number[] | undefined;
    reject_senders?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponsePrepareProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: txs -
 */
export declare const destructTendermintAbciResponsePrepareProposal: (g_struct: TendermintAbciResponsePrepareProposal) => [txs?: Uint8Array[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_PREPARE_PROPOSAL = "/tendermint.abci.ResponsePrepareProposal";
/**
 * JSON serialization of `tendermint.abci.ResponsePrepareProposal` -
 */
export type TendermintAbciResponsePrepareProposal = {
    txs?: CwBase64[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseProcessProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: status -
 */
export declare const destructTendermintAbciResponseProcessProposal: (g_struct: TendermintAbciResponseProcessProposal) => [status?: JsonEnumTendermintAbciResponseProcessProposalProposalStatus];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL = "/tendermint.abci.ResponseProcessProposal";
/**
 * JSON serialization of `tendermint.abci.ResponseProcessProposal` -
 */
export type TendermintAbciResponseProcessProposal = {
    status?: JsonEnumTendermintAbciResponseProcessProposalProposalStatus | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseExtendVote} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: vote_extension -
 */
export declare const destructTendermintAbciResponseExtendVote: (g_struct: TendermintAbciResponseExtendVote) => [vote_extension?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_EXTEND_VOTE = "/tendermint.abci.ResponseExtendVote";
/**
 * JSON serialization of `tendermint.abci.ResponseExtendVote` -
 */
export type TendermintAbciResponseExtendVote = {
    vote_extension?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseVerifyVoteExtension} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: status -
 */
export declare const destructTendermintAbciResponseVerifyVoteExtension: (g_struct: TendermintAbciResponseVerifyVoteExtension) => [status?: JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION = "/tendermint.abci.ResponseVerifyVoteExtension";
/**
 * JSON serialization of `tendermint.abci.ResponseVerifyVoteExtension` -
 */
export type TendermintAbciResponseVerifyVoteExtension = {
    status?: JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciResponseFinalizeBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: events - set of block events emmitted as part of executing the block
 *   - 1: tx_results - the result of executing each transaction including the events the particular transction emitted. This should match the order of the transactions delivered in the block itself
 *   - 2: validator_updates - a list of updates to the validator set. These will reflect the validator set at current height + 2.
 *   - 3: consensus_param_updates - updates to the consensus params, if any.
 *   - 4: app_hash - the hash of the applications' state which is used to confirm that execution of the transactions was deterministic. It is up to the application to decide which algorithm to use.
 */
export declare const destructTendermintAbciResponseFinalizeBlock: (g_struct: TendermintAbciResponseFinalizeBlock) => [events?: TendermintAbciEvent[], tx_results?: TendermintAbciExecTxResult[], validator_updates?: TendermintAbciValidatorUpdate[], consensus_param_updates?: TendermintTypesConsensusParams, app_hash?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_RESPONSE_FINALIZE_BLOCK = "/tendermint.abci.ResponseFinalizeBlock";
/**
 * JSON serialization of `tendermint.abci.ResponseFinalizeBlock` -
 */
export type TendermintAbciResponseFinalizeBlock = {
    events?: TendermintAbciEvent[] | undefined;
    tx_results?: TendermintAbciExecTxResult[] | undefined;
    validator_updates?: TendermintAbciValidatorUpdate[] | undefined;
    consensus_param_updates?: TendermintTypesConsensusParams | undefined;
    app_hash?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciExecTxResult} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code -
 *   - 1: data -
 *   - 2: log -
 *   - 3: info -
 *   - 4: gas_wanted -
 *   - 5: gas_used -
 *   - 6: events -
 *   - 7: codespace -
 */
export declare const destructTendermintAbciExecTxResult: (g_struct: TendermintAbciExecTxResult) => [code?: number, data?: Uint8Array, log?: string, info?: string, gas_wanted?: CwInt64, gas_used?: CwInt64, events?: TendermintAbciEvent[], codespace?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_EXEC_TX_RESULT = "/tendermint.abci.ExecTxResult";
/**
 * JSON serialization of `tendermint.abci.ExecTxResult` - contains results of executing one individual transaction. * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
 */
export type TendermintAbciExecTxResult = {
    code?: number | undefined;
    data?: CwBase64 | undefined;
    log?: string | undefined;
    info?: string | undefined;
    gas_wanted?: CwInt64 | undefined;
    gas_used?: CwInt64 | undefined;
    events?: TendermintAbciEvent[] | undefined;
    codespace?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciTxResult} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: height -
 *   - 1: index -
 *   - 2: tx -
 *   - 3: result -
 */
export declare const destructTendermintAbciTxResult: (g_struct: TendermintAbciTxResult) => [height?: CwInt64, index?: number, tx?: Uint8Array, result?: TendermintAbciExecTxResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_TX_RESULT = "/tendermint.abci.TxResult";
/**
 * JSON serialization of `tendermint.abci.TxResult` - contains results of executing the transaction. One usage is indexing transaction results.
 */
export type TendermintAbciTxResult = {
    height?: CwInt64 | undefined;
    index?: number | undefined;
    tx?: CwBase64 | undefined;
    result?: TendermintAbciExecTxResult | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: echo -
 *   - 1: flush -
 *   - 2: info -
 *   - 4: init_chain -
 *   - 5: query -
 *   - 7: check_tx -
 *   - 10: commit -
 *   - 11: list_snapshots -
 *   - 12: offer_snapshot -
 *   - 13: load_snapshot_chunk -
 *   - 14: apply_snapshot_chunk -
 *   - 15: prepare_proposal -
 *   - 16: process_proposal -
 *   - 17: extend_vote -
 *   - 18: verify_vote_extension -
 *   - 19: finalize_block -
 */
export declare const destructTendermintAbciRequest: (g_struct: TendermintAbciRequest) => [echo?: TendermintAbciRequestEcho, flush?: TendermintAbciRequestFlush, info?: TendermintAbciRequestInfo, EMPTY?: void, init_chain?: TendermintAbciRequestInitChain, query?: TendermintAbciRequestQuery, EMPTY?: void, check_tx?: TendermintAbciRequestCheckTx, EMPTY?: void, EMPTY?: void, commit?: TendermintAbciRequestCommit, list_snapshots?: TendermintAbciRequestListSnapshots, offer_snapshot?: TendermintAbciRequestOfferSnapshot, load_snapshot_chunk?: TendermintAbciRequestLoadSnapshotChunk, apply_snapshot_chunk?: TendermintAbciRequestApplySnapshotChunk, prepare_proposal?: TendermintAbciRequestPrepareProposal, process_proposal?: TendermintAbciRequestProcessProposal, extend_vote?: TendermintAbciRequestExtendVote, verify_vote_extension?: TendermintAbciRequestVerifyVoteExtension, finalize_block?: TendermintAbciRequestFinalizeBlock];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST = "/tendermint.abci.Request";
/**
 * JSON serialization of `tendermint.abci.Request` -
 */
export type TendermintAbciRequest = {
    echo?: TendermintAbciRequestEcho | undefined;
    flush?: TendermintAbciRequestFlush | undefined;
    info?: TendermintAbciRequestInfo | undefined;
    init_chain?: TendermintAbciRequestInitChain | undefined;
    query?: TendermintAbciRequestQuery | undefined;
    check_tx?: TendermintAbciRequestCheckTx | undefined;
    commit?: TendermintAbciRequestCommit | undefined;
    list_snapshots?: TendermintAbciRequestListSnapshots | undefined;
    offer_snapshot?: TendermintAbciRequestOfferSnapshot | undefined;
    load_snapshot_chunk?: TendermintAbciRequestLoadSnapshotChunk | undefined;
    apply_snapshot_chunk?: TendermintAbciRequestApplySnapshotChunk | undefined;
    prepare_proposal?: TendermintAbciRequestPrepareProposal | undefined;
    process_proposal?: TendermintAbciRequestProcessProposal | undefined;
    extend_vote?: TendermintAbciRequestExtendVote | undefined;
    verify_vote_extension?: TendermintAbciRequestVerifyVoteExtension | undefined;
    finalize_block?: TendermintAbciRequestFinalizeBlock | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestEcho} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: message -
 */
export declare const destructTendermintAbciRequestEcho: (g_struct: TendermintAbciRequestEcho) => [message?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_ECHO = "/tendermint.abci.RequestEcho";
/**
 * JSON serialization of `tendermint.abci.RequestEcho` -
 */
export type TendermintAbciRequestEcho = {
    message?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestFlush} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructTendermintAbciRequestFlush: (g_struct: TendermintAbciRequestFlush) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_FLUSH = "/tendermint.abci.RequestFlush";
/**
 * JSON serialization of `tendermint.abci.RequestFlush` -
 */
export type TendermintAbciRequestFlush = {};
/**
 * Destructures the fields of a {@link TendermintAbciRequestInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: version -
 *   - 1: block_version -
 *   - 2: p2p_version -
 *   - 3: abci_version -
 */
export declare const destructTendermintAbciRequestInfo: (g_struct: TendermintAbciRequestInfo) => [version?: string, block_version?: CwUint64, p2p_version?: CwUint64, abci_version?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_INFO = "/tendermint.abci.RequestInfo";
/**
 * JSON serialization of `tendermint.abci.RequestInfo` -
 */
export type TendermintAbciRequestInfo = {
    version?: string | undefined;
    block_version?: CwUint64 | undefined;
    p2p_version?: CwUint64 | undefined;
    abci_version?: string | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestInitChain} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: time -
 *   - 1: chain_id -
 *   - 2: consensus_params -
 *   - 3: validators -
 *   - 4: app_state_bytes -
 *   - 5: initial_height -
 */
export declare const destructTendermintAbciRequestInitChain: (g_struct: TendermintAbciRequestInitChain) => [time?: number, chain_id?: string, consensus_params?: TendermintTypesConsensusParams, validators?: TendermintAbciValidatorUpdate[], app_state_bytes?: Uint8Array, initial_height?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_INIT_CHAIN = "/tendermint.abci.RequestInitChain";
/**
 * JSON serialization of `tendermint.abci.RequestInitChain` -
 */
export type TendermintAbciRequestInitChain = {
    time?: WeakTimestampStr | undefined;
    chain_id?: string | undefined;
    consensus_params?: TendermintTypesConsensusParams | undefined;
    validators?: TendermintAbciValidatorUpdate[] | undefined;
    app_state_bytes?: CwBase64 | undefined;
    initial_height?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciValidatorUpdate} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pub_key -
 *   - 1: power -
 */
export declare const destructTendermintAbciValidatorUpdate: (g_struct: TendermintAbciValidatorUpdate) => [pub_key?: TendermintCryptoPublicKey, power?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_VALIDATOR_UPDATE = "/tendermint.abci.ValidatorUpdate";
/**
 * JSON serialization of `tendermint.abci.ValidatorUpdate` -
 */
export type TendermintAbciValidatorUpdate = {
    pub_key?: TendermintCryptoPublicKey | undefined;
    power?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestQuery} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 *   - 1: path -
 *   - 2: height -
 *   - 3: prove -
 */
export declare const destructTendermintAbciRequestQuery: (g_struct: TendermintAbciRequestQuery) => [data?: Uint8Array, path?: string, height?: CwInt64, prove?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_QUERY = "/tendermint.abci.RequestQuery";
/**
 * JSON serialization of `tendermint.abci.RequestQuery` -
 */
export type TendermintAbciRequestQuery = {
    data?: CwBase64 | undefined;
    path?: string | undefined;
    height?: CwInt64 | undefined;
    prove?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestCheckTx} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx -
 *   - 1: type -
 */
export declare const destructTendermintAbciRequestCheckTx: (g_struct: TendermintAbciRequestCheckTx) => [tx?: Uint8Array, type_?: JsonEnumTendermintAbciCheckTxType];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_CHECK_TX = "/tendermint.abci.RequestCheckTx";
/**
 * JSON serialization of `tendermint.abci.RequestCheckTx` -
 */
export type TendermintAbciRequestCheckTx = {
    tx?: CwBase64 | undefined;
    type?: JsonEnumTendermintAbciCheckTxType | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestCommit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructTendermintAbciRequestCommit: (g_struct: TendermintAbciRequestCommit) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_COMMIT = "/tendermint.abci.RequestCommit";
/**
 * JSON serialization of `tendermint.abci.RequestCommit` -
 */
export type TendermintAbciRequestCommit = {};
/**
 * Destructures the fields of a {@link TendermintAbciRequestListSnapshots} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructTendermintAbciRequestListSnapshots: (g_struct: TendermintAbciRequestListSnapshots) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_LIST_SNAPSHOTS = "/tendermint.abci.RequestListSnapshots";
/**
 * JSON serialization of `tendermint.abci.RequestListSnapshots` - lists available snapshots
 */
export type TendermintAbciRequestListSnapshots = {};
/**
 * Destructures the fields of a {@link TendermintAbciRequestOfferSnapshot} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: snapshot -
 *   - 1: app_hash -
 */
export declare const destructTendermintAbciRequestOfferSnapshot: (g_struct: TendermintAbciRequestOfferSnapshot) => [snapshot?: TendermintAbciSnapshot, app_hash?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_OFFER_SNAPSHOT = "/tendermint.abci.RequestOfferSnapshot";
/**
 * JSON serialization of `tendermint.abci.RequestOfferSnapshot` - offers a snapshot to the application
 */
export type TendermintAbciRequestOfferSnapshot = {
    snapshot?: TendermintAbciSnapshot | undefined;
    app_hash?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciSnapshot} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: height -
 *   - 1: format -
 *   - 2: chunks -
 *   - 3: hash -
 *   - 4: metadata -
 */
export declare const destructTendermintAbciSnapshot: (g_struct: TendermintAbciSnapshot) => [height?: CwUint64, format?: number, chunks?: number, hash?: Uint8Array, metadata?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_SNAPSHOT = "/tendermint.abci.Snapshot";
/**
 * JSON serialization of `tendermint.abci.Snapshot` -
 */
export type TendermintAbciSnapshot = {
    height?: CwUint64 | undefined;
    format?: number | undefined;
    chunks?: number | undefined;
    hash?: CwBase64 | undefined;
    metadata?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestLoadSnapshotChunk} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: height -
 *   - 1: format -
 *   - 2: chunk -
 */
export declare const destructTendermintAbciRequestLoadSnapshotChunk: (g_struct: TendermintAbciRequestLoadSnapshotChunk) => [height?: CwUint64, format?: number, chunk?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_LOAD_SNAPSHOT_CHUNK = "/tendermint.abci.RequestLoadSnapshotChunk";
/**
 * JSON serialization of `tendermint.abci.RequestLoadSnapshotChunk` - loads a snapshot chunk
 */
export type TendermintAbciRequestLoadSnapshotChunk = {
    height?: CwUint64 | undefined;
    format?: number | undefined;
    chunk?: number | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestApplySnapshotChunk} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: index -
 *   - 1: chunk -
 *   - 2: sender -
 */
export declare const destructTendermintAbciRequestApplySnapshotChunk: (g_struct: TendermintAbciRequestApplySnapshotChunk) => [index?: number, chunk?: Uint8Array, sender?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_APPLY_SNAPSHOT_CHUNK = "/tendermint.abci.RequestApplySnapshotChunk";
/**
 * JSON serialization of `tendermint.abci.RequestApplySnapshotChunk` - Applies a snapshot chunk
 */
export type TendermintAbciRequestApplySnapshotChunk = {
    index?: number | undefined;
    chunk?: CwBase64 | undefined;
    sender?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestPrepareProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: max_tx_bytes - the modified transactions cannot exceed this size.
 *   - 1: txs - an array of transactions that will be included in a block, sent to the app for possible modifications.
 *   - 2: local_last_commit -
 *   - 3: misbehavior -
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the validator proposing the block.
 */
export declare const destructTendermintAbciRequestPrepareProposal: (g_struct: TendermintAbciRequestPrepareProposal) => [max_tx_bytes?: CwInt64, txs?: Uint8Array[], local_last_commit?: TendermintAbciExtendedCommitInfo, misbehavior?: TendermintAbciMisbehavior[], height?: CwInt64, time?: number, next_validators_hash?: Uint8Array, proposer_address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_PREPARE_PROPOSAL = "/tendermint.abci.RequestPrepareProposal";
/**
 * JSON serialization of `tendermint.abci.RequestPrepareProposal` -
 */
export type TendermintAbciRequestPrepareProposal = {
    max_tx_bytes?: CwInt64 | undefined;
    txs?: CwBase64[] | undefined;
    local_last_commit?: TendermintAbciExtendedCommitInfo | undefined;
    misbehavior?: TendermintAbciMisbehavior[] | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    next_validators_hash?: CwBase64 | undefined;
    proposer_address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciExtendedCommitInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: round - The round at which the block proposer decided in the previous height.
 *   - 1: votes - List of validators' addresses in the last validator set with their voting information, including vote extensions.
 */
export declare const destructTendermintAbciExtendedCommitInfo: (g_struct: TendermintAbciExtendedCommitInfo) => [round?: number, votes?: TendermintAbciExtendedVoteInfo[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_EXTENDED_COMMIT_INFO = "/tendermint.abci.ExtendedCommitInfo";
/**
 * JSON serialization of `tendermint.abci.ExtendedCommitInfo` - similar to CommitInfo except that it is only used in the PrepareProposal request such that CometBFT can provide vote extensions to the application.
 */
export type TendermintAbciExtendedCommitInfo = {
    round?: number | undefined;
    votes?: TendermintAbciExtendedVoteInfo[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciExtendedVoteInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator - The validator that sent the vote.
 *   - 2: vote_extension - Non-deterministic extension provided by the sending validator's application.
 *   - 3: extension_signature - Vote extension signature created by CometBFT
 *   - 4: block_id_flag - indicates whether the validator voted for a block, nil, or did not vote at all
 */
export declare const destructTendermintAbciExtendedVoteInfo: (g_struct: TendermintAbciExtendedVoteInfo) => [validator?: TendermintAbciValidator, EMPTY?: void, vote_extension?: Uint8Array, extension_signature?: Uint8Array, block_id_flag?: JsonEnumTendermintTypesBlockIDFlag];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_EXTENDED_VOTE_INFO = "/tendermint.abci.ExtendedVoteInfo";
/**
 * JSON serialization of `tendermint.abci.ExtendedVoteInfo` -
 */
export type TendermintAbciExtendedVoteInfo = {
    validator?: TendermintAbciValidator | undefined;
    vote_extension?: CwBase64 | undefined;
    extension_signature?: CwBase64 | undefined;
    block_id_flag?: JsonEnumTendermintTypesBlockIDFlag | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciValidator} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 *   - 2: power - PubKey pub_key = 2 [(gogoproto.nullable)=false];
 */
export declare const destructTendermintAbciValidator: (g_struct: TendermintAbciValidator) => [address?: Uint8Array, EMPTY?: void, power?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_VALIDATOR = "/tendermint.abci.Validator";
/**
 * JSON serialization of `tendermint.abci.Validator` -
 */
export type TendermintAbciValidator = {
    address?: CwBase64 | undefined;
    power?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciMisbehavior} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: type -
 *   - 1: validator - The offending validator
 *   - 2: height - The height when the offense occurred
 *   - 3: time - The corresponding time where the offense occurred
 *   - 4: total_voting_power - Total voting power of the validator set in case the ABCI application does not store historical validators. https://github.com/tendermint/tendermint/issues/4581
 */
export declare const destructTendermintAbciMisbehavior: (g_struct: TendermintAbciMisbehavior) => [type_?: JsonEnumTendermintAbciMisbehaviorType, validator?: TendermintAbciValidator, height?: CwInt64, time?: number, total_voting_power?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_MISBEHAVIOR = "/tendermint.abci.Misbehavior";
/**
 * JSON serialization of `tendermint.abci.Misbehavior` -
 */
export type TendermintAbciMisbehavior = {
    type?: JsonEnumTendermintAbciMisbehaviorType | undefined;
    validator?: TendermintAbciValidator | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    total_voting_power?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestProcessProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: txs -
 *   - 1: proposed_last_commit -
 *   - 2: misbehavior -
 *   - 3: hash - the merkle root hash of the fields of the proposed block.
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the original proposer of the block.
 */
export declare const destructTendermintAbciRequestProcessProposal: (g_struct: TendermintAbciRequestProcessProposal) => [txs?: Uint8Array[], proposed_last_commit?: TendermintAbciCommitInfo, misbehavior?: TendermintAbciMisbehavior[], hash?: Uint8Array, height?: CwInt64, time?: number, next_validators_hash?: Uint8Array, proposer_address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_PROCESS_PROPOSAL = "/tendermint.abci.RequestProcessProposal";
/**
 * JSON serialization of `tendermint.abci.RequestProcessProposal` -
 */
export type TendermintAbciRequestProcessProposal = {
    txs?: CwBase64[] | undefined;
    proposed_last_commit?: TendermintAbciCommitInfo | undefined;
    misbehavior?: TendermintAbciMisbehavior[] | undefined;
    hash?: CwBase64 | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    next_validators_hash?: CwBase64 | undefined;
    proposer_address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciCommitInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: round -
 *   - 1: votes -
 */
export declare const destructTendermintAbciCommitInfo: (g_struct: TendermintAbciCommitInfo) => [round?: number, votes?: TendermintAbciVoteInfo[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_COMMIT_INFO = "/tendermint.abci.CommitInfo";
/**
 * JSON serialization of `tendermint.abci.CommitInfo` -
 */
export type TendermintAbciCommitInfo = {
    round?: number | undefined;
    votes?: TendermintAbciVoteInfo[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciVoteInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator -
 *   - 2: block_id_flag -
 */
export declare const destructTendermintAbciVoteInfo: (g_struct: TendermintAbciVoteInfo) => [validator?: TendermintAbciValidator, EMPTY?: void, block_id_flag?: JsonEnumTendermintTypesBlockIDFlag];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_VOTE_INFO = "/tendermint.abci.VoteInfo";
/**
 * JSON serialization of `tendermint.abci.VoteInfo` -
 */
export type TendermintAbciVoteInfo = {
    validator?: TendermintAbciValidator | undefined;
    block_id_flag?: JsonEnumTendermintTypesBlockIDFlag | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestExtendVote} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: hash - the hash of the block that this vote may be referring to
 *   - 1: height - the height of the extended vote
 *   - 2: time - info of the block that this vote may be referring to
 *   - 3: txs -
 *   - 4: proposed_last_commit -
 *   - 5: misbehavior -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - address of the public key of the original proposer of the block.
 */
export declare const destructTendermintAbciRequestExtendVote: (g_struct: TendermintAbciRequestExtendVote) => [hash?: Uint8Array, height?: CwInt64, time?: number, txs?: Uint8Array[], proposed_last_commit?: TendermintAbciCommitInfo, misbehavior?: TendermintAbciMisbehavior[], next_validators_hash?: Uint8Array, proposer_address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_EXTEND_VOTE = "/tendermint.abci.RequestExtendVote";
/**
 * JSON serialization of `tendermint.abci.RequestExtendVote` - Extends a vote with application-injected data
 */
export type TendermintAbciRequestExtendVote = {
    hash?: CwBase64 | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    txs?: CwBase64[] | undefined;
    proposed_last_commit?: TendermintAbciCommitInfo | undefined;
    misbehavior?: TendermintAbciMisbehavior[] | undefined;
    next_validators_hash?: CwBase64 | undefined;
    proposer_address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestVerifyVoteExtension} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: hash - the hash of the block that this received vote corresponds to
 *   - 1: validator_address - the validator that signed the vote extension
 *   - 2: height -
 *   - 3: vote_extension -
 */
export declare const destructTendermintAbciRequestVerifyVoteExtension: (g_struct: TendermintAbciRequestVerifyVoteExtension) => [hash?: Uint8Array, validator_address?: Uint8Array, height?: CwInt64, vote_extension?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_VERIFY_VOTE_EXTENSION = "/tendermint.abci.RequestVerifyVoteExtension";
/**
 * JSON serialization of `tendermint.abci.RequestVerifyVoteExtension` - Verify the vote extension
 */
export type TendermintAbciRequestVerifyVoteExtension = {
    hash?: CwBase64 | undefined;
    validator_address?: CwBase64 | undefined;
    height?: CwInt64 | undefined;
    vote_extension?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciRequestFinalizeBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: txs -
 *   - 1: decided_last_commit -
 *   - 2: misbehavior -
 *   - 3: hash - the merkle root hash of the fields of the decided block.
 *   - 4: height -
 *   - 5: time -
 *   - 6: next_validators_hash -
 *   - 7: proposer_address - the address of the public key of the original proposer of the block.
 */
export declare const destructTendermintAbciRequestFinalizeBlock: (g_struct: TendermintAbciRequestFinalizeBlock) => [txs?: Uint8Array[], decided_last_commit?: TendermintAbciCommitInfo, misbehavior?: TendermintAbciMisbehavior[], hash?: Uint8Array, height?: CwInt64, time?: number, next_validators_hash?: Uint8Array, proposer_address?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_REQUEST_FINALIZE_BLOCK = "/tendermint.abci.RequestFinalizeBlock";
/**
 * JSON serialization of `tendermint.abci.RequestFinalizeBlock` -
 */
export type TendermintAbciRequestFinalizeBlock = {
    txs?: CwBase64[] | undefined;
    decided_last_commit?: TendermintAbciCommitInfo | undefined;
    misbehavior?: TendermintAbciMisbehavior[] | undefined;
    hash?: CwBase64 | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    next_validators_hash?: CwBase64 | undefined;
    proposer_address?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciEvent} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: type -
 *   - 1: attributes -
 */
export declare const destructTendermintAbciEvent: (g_struct: TendermintAbciEvent) => [type_?: string, attributes?: TendermintAbciEventAttribute[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_EVENT = "/tendermint.abci.Event";
/**
 * JSON serialization of `tendermint.abci.Event` - allows application developers to attach additional information to ResponseFinalizeBlock and ResponseCheckTx. Later, transactions may be queried using these events.
 */
export type TendermintAbciEvent = {
    type?: string | undefined;
    attributes?: TendermintAbciEventAttribute[] | undefined;
};
/**
 * Destructures the fields of a {@link TendermintAbciEventAttribute} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 *   - 2: index -
 */
export declare const destructTendermintAbciEventAttribute: (g_struct: TendermintAbciEventAttribute) => [key?: string, value?: string, index?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_ABCI_EVENT_ATTRIBUTE = "/tendermint.abci.EventAttribute";
/**
 * JSON serialization of `tendermint.abci.EventAttribute` - a single key-value pair, associated with an event.
 */
export type TendermintAbciEventAttribute = {
    key?: string | undefined;
    value?: string | undefined;
    index?: boolean | undefined;
};
/**
 * Protobuf enum value for `tendermint.abci.CheckTxType`.
 *
 * **NEW** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciCheckTxType}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_NEW = 0;
/**
 * JSON enum value for `tendermint.abci.CheckTxType`.
 *
 * **NEW** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciCheckTxType}
 */
export declare const SI_JSON_TENDERMINT_ABCI_NEW = "New";
/**
 * Protobuf enum value for `tendermint.abci.CheckTxType`.
 *
 * **RECHECK** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciCheckTxType}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RECHECK = 1;
/**
 * JSON enum value for `tendermint.abci.CheckTxType`.
 *
 * **RECHECK** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciCheckTxType}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RECHECK = "Recheck";
/**
 * Raw protobuf enum values for `tendermint.abci.CheckTxType` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_NEW}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RECHECK}
 */
export type ProtoEnumTendermintAbciCheckTxType = typeof XC_PROTO_TENDERMINT_ABCI_NEW | typeof XC_PROTO_TENDERMINT_ABCI_RECHECK;
/**
 * JSON enum values for `tendermint.abci.CheckTxType` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_NEW}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RECHECK}
 */
export type JsonEnumTendermintAbciCheckTxType = typeof SI_JSON_TENDERMINT_ABCI_NEW | typeof SI_JSON_TENDERMINT_ABCI_RECHECK;
/**
 * Maps a protobuf enum int value for `tendermint.abci.CheckTxType` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciCheckTxType: Record<ProtoEnumTendermintAbciCheckTxType, JsonEnumTendermintAbciCheckTxType>;
/**
 * Maps a JSON enum string value for `tendermint.abci.CheckTxType` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciCheckTxType: Record<JsonEnumTendermintAbciCheckTxType, ProtoEnumTendermintAbciCheckTxType>;
/**
 * Protobuf enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciMisbehaviorType}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciMisbehaviorType}
 */
export declare const SI_JSON_TENDERMINT_ABCI_UNKNOWN = "UNKNOWN";
/**
 * Protobuf enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **DUPLICATE_VOTE** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciMisbehaviorType}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_DUPLICATE_VOTE = 1;
/**
 * JSON enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **DUPLICATE_VOTE** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciMisbehaviorType}
 */
export declare const SI_JSON_TENDERMINT_ABCI_DUPLICATE_VOTE = "DUPLICATE_VOTE";
/**
 * Protobuf enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **LIGHT_CLIENT_ATTACK** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciMisbehaviorType}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK = 2;
/**
 * JSON enum value for `tendermint.abci.MisbehaviorType`.
 *
 * **LIGHT_CLIENT_ATTACK** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciMisbehaviorType}
 */
export declare const SI_JSON_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK = "LIGHT_CLIENT_ATTACK";
/**
 * Raw protobuf enum values for `tendermint.abci.MisbehaviorType` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_DUPLICATE_VOTE}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK}
 */
export type ProtoEnumTendermintAbciMisbehaviorType = typeof XC_PROTO_TENDERMINT_ABCI_UNKNOWN | typeof XC_PROTO_TENDERMINT_ABCI_DUPLICATE_VOTE | typeof XC_PROTO_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK;
/**
 * JSON enum values for `tendermint.abci.MisbehaviorType` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_ABCI_DUPLICATE_VOTE}
 *   - {@link SI_JSON_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK}
 */
export type JsonEnumTendermintAbciMisbehaviorType = typeof SI_JSON_TENDERMINT_ABCI_UNKNOWN | typeof SI_JSON_TENDERMINT_ABCI_DUPLICATE_VOTE | typeof SI_JSON_TENDERMINT_ABCI_LIGHT_CLIENT_ATTACK;
/**
 * Maps a protobuf enum int value for `tendermint.abci.MisbehaviorType` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciMisbehaviorType: Record<ProtoEnumTendermintAbciMisbehaviorType, JsonEnumTendermintAbciMisbehaviorType>;
/**
 * Maps a JSON enum string value for `tendermint.abci.MisbehaviorType` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciMisbehaviorType: Record<JsonEnumTendermintAbciMisbehaviorType, ProtoEnumTendermintAbciMisbehaviorType>;
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN = "UNKNOWN";
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT = 1;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT = "ACCEPT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **ABORT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT = 2;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **ABORT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT = "ABORT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT = 3;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT = "REJECT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT_FORMAT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT = 4;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT_FORMAT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT = "REJECT_FORMAT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT_SENDER** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER = 5;
/**
 * JSON enum value for `tendermint.abci.ResponseOfferSnapshot.Result`.
 *
 * **REJECT_SENDER** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseOfferSnapshotResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER = "REJECT_SENDER";
/**
 * Raw protobuf enum values for `tendermint.abci.ResponseOfferSnapshot.Result` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER}
 */
export type ProtoEnumTendermintAbciResponseOfferSnapshotResult = typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER;
/**
 * JSON enum values for `tendermint.abci.ResponseOfferSnapshot.Result` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER}
 */
export type JsonEnumTendermintAbciResponseOfferSnapshotResult = typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_UNKNOWN | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ACCEPT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_ABORT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_FORMAT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_OFFER_SNAPSHOT_REJECT_SENDER;
/**
 * Maps a protobuf enum int value for `tendermint.abci.ResponseOfferSnapshot.Result` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciResponseOfferSnapshotResult: Record<ProtoEnumTendermintAbciResponseOfferSnapshotResult, JsonEnumTendermintAbciResponseOfferSnapshotResult>;
/**
 * Maps a JSON enum string value for `tendermint.abci.ResponseOfferSnapshot.Result` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciResponseOfferSnapshotResult: Record<JsonEnumTendermintAbciResponseOfferSnapshotResult, ProtoEnumTendermintAbciResponseOfferSnapshotResult>;
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN = "UNKNOWN";
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT = 1;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT = "ACCEPT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **ABORT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT = 2;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **ABORT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT = "ABORT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **RETRY** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY = 3;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **RETRY** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY = "RETRY";
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **RETRY_SNAPSHOT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT = 4;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **RETRY_SNAPSHOT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT = "RETRY_SNAPSHOT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **REJECT_SNAPSHOT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT = 5;
/**
 * JSON enum value for `tendermint.abci.ResponseApplySnapshotChunk.Result`.
 *
 * **REJECT_SNAPSHOT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseApplySnapshotChunkResult}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT = "REJECT_SNAPSHOT";
/**
 * Raw protobuf enum values for `tendermint.abci.ResponseApplySnapshotChunk.Result` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT}
 */
export type ProtoEnumTendermintAbciResponseApplySnapshotChunkResult = typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT;
/**
 * JSON enum values for `tendermint.abci.ResponseApplySnapshotChunk.Result` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT}
 */
export type JsonEnumTendermintAbciResponseApplySnapshotChunkResult = typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_UNKNOWN | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ACCEPT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_ABORT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_RETRY_SNAPSHOT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_APPLY_SNAPSHOT_CHUNK_REJECT_SNAPSHOT;
/**
 * Maps a protobuf enum int value for `tendermint.abci.ResponseApplySnapshotChunk.Result` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciResponseApplySnapshotChunkResult: Record<ProtoEnumTendermintAbciResponseApplySnapshotChunkResult, JsonEnumTendermintAbciResponseApplySnapshotChunkResult>;
/**
 * Maps a JSON enum string value for `tendermint.abci.ResponseApplySnapshotChunk.Result` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciResponseApplySnapshotChunkResult: Record<JsonEnumTendermintAbciResponseApplySnapshotChunkResult, ProtoEnumTendermintAbciResponseApplySnapshotChunkResult>;
/**
 * Protobuf enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN = "UNKNOWN";
/**
 * Protobuf enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT = 1;
/**
 * JSON enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT = "ACCEPT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT = 2;
/**
 * JSON enum value for `tendermint.abci.ResponseProcessProposal.ProposalStatus`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseProcessProposalProposalStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT = "REJECT";
/**
 * Raw protobuf enum values for `tendermint.abci.ResponseProcessProposal.ProposalStatus` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT}
 */
export type ProtoEnumTendermintAbciResponseProcessProposalProposalStatus = typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT;
/**
 * JSON enum values for `tendermint.abci.ResponseProcessProposal.ProposalStatus` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT}
 */
export type JsonEnumTendermintAbciResponseProcessProposalProposalStatus = typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_UNKNOWN | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_ACCEPT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_PROCESS_PROPOSAL_REJECT;
/**
 * Maps a protobuf enum int value for `tendermint.abci.ResponseProcessProposal.ProposalStatus` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciResponseProcessProposalProposalStatus: Record<ProtoEnumTendermintAbciResponseProcessProposalProposalStatus, JsonEnumTendermintAbciResponseProcessProposalProposalStatus>;
/**
 * Maps a JSON enum string value for `tendermint.abci.ResponseProcessProposal.ProposalStatus` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciResponseProcessProposalProposalStatus: Record<JsonEnumTendermintAbciResponseProcessProposalProposalStatus, ProtoEnumTendermintAbciResponseProcessProposalProposalStatus>;
/**
 * Protobuf enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN = "UNKNOWN";
/**
 * Protobuf enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT = 1;
/**
 * JSON enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **ACCEPT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT = "ACCEPT";
/**
 * Protobuf enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT = 2;
/**
 * JSON enum value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus`.
 *
 * **REJECT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus}
 */
export declare const SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT = "REJECT";
/**
 * Raw protobuf enum values for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT}
 *   - {@link XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT}
 */
export type ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus = typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT | typeof XC_PROTO_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT;
/**
 * JSON enum values for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT}
 *   - {@link SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT}
 */
export type JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus = typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_UNKNOWN | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_ACCEPT | typeof SI_JSON_TENDERMINT_ABCI_RESPONSE_VERIFY_VOTE_EXTENSION_REJECT;
/**
 * Maps a protobuf enum int value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus: Record<ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus, JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus>;
/**
 * Maps a JSON enum string value for `tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus: Record<JsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus, ProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus>;
