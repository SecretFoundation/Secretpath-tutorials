import type { Encoded, Opt } from '../../../api/types.js';
import type { TendermintTypesEvidenceList, DecodedTendermintTypesEvidenceList } from './evidence.js';
import type { TendermintTypesHeader, DecodedTendermintTypesHeader, TendermintTypesData, DecodedTendermintTypesData, TendermintTypesCommit, DecodedTendermintTypesCommit } from './types.js';
export type EncodedTendermintTypesBlock = Encoded<'/tendermint.types.Block'>;
/**
 * Encodes a `Block` protobuf message:
 * @param g_header - `header`:
 * @param g_data - `data`:
 * @param g_evidence - `evidence`:
 * @param g_last_commit - `last_commit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintTypesBlock: (atu8_header?: Opt<Encoded<'/tendermint.types.Header'>>, atu8_data?: Opt<Encoded<'/tendermint.types.Data'>>, atu8_evidence?: Opt<Encoded<'/tendermint.types.EvidenceList'>>, atu8_last_commit?: Opt<Encoded<'/tendermint.types.Commit'>>) => EncodedTendermintTypesBlock;
/**
 * A decoded protobuf Block message
 *
 * Tuple where:
 *   - 0: header -
 *   - 1: data -
 *   - 2: evidence -
 *   - 3: last_commit -
 */
export type DecodedTendermintTypesBlock = [
    a_header?: DecodedTendermintTypesHeader,
    a_data?: DecodedTendermintTypesData,
    a_evidence?: DecodedTendermintTypesEvidenceList,
    a_last_commit?: DecodedTendermintTypesCommit
];
/**
 * Decodes a protobuf Block message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintTypesBlock}
 */
export declare const decodeTendermintTypesBlock: (atu8_payload: Uint8Array) => DecodedTendermintTypesBlock;
/**
 * Destructures the fields of a {@link TendermintTypesBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: header -
 *   - 1: data -
 *   - 2: evidence -
 *   - 3: last_commit -
 */
export declare const destructTendermintTypesBlock: (g_struct: TendermintTypesBlock) => [header?: TendermintTypesHeader, data?: TendermintTypesData, evidence?: TendermintTypesEvidenceList, last_commit?: TendermintTypesCommit];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_TYPES_BLOCK = "/tendermint.types.Block";
/**
 * JSON serialization of `tendermint.types.Block` -
 */
export type TendermintTypesBlock = {
    header?: TendermintTypesHeader | undefined;
    data?: TendermintTypesData | undefined;
    evidence?: TendermintTypesEvidenceList | undefined;
    last_commit?: TendermintTypesCommit | undefined;
};
