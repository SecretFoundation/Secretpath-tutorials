import type { WeakInt64Str, CwInt64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
import type { TendermintCryptoPublicKey, DecodedTendermintCryptoPublicKey } from '../crypto/keys.js';
export type EncodedTendermintTypesValidatorSet = Encoded<'/tendermint.types.ValidatorSet'>;
export type EncodedTendermintTypesValidator = Encoded<'/tendermint.types.Validator'>;
export type EncodedTendermintTypesSimpleValidator = Encoded<'/tendermint.types.SimpleValidator'>;
/**
 * Encodes a `ValidatorSet` protobuf message:
 * @param a_validators - `validators`:
 * @param g_proposer - `proposer`:
 * @param sg_total_voting_power - `total_voting_power`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintTypesValidatorSet: (a_validators?: Opt<Encoded<'/tendermint.types.Validator'>[]>, atu8_proposer?: Opt<Encoded<'/tendermint.types.Validator'>>, sg_total_voting_power?: Opt<WeakInt64Str>) => EncodedTendermintTypesValidatorSet;
/**
 * Encodes a `Validator` protobuf message:
 * @param atu8_address - `address`:
 * @param g_pub_key - `pub_key`:
 * @param sg_voting_power - `voting_power`:
 * @param sg_proposer_priority - `proposer_priority`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintTypesValidator: (atu8_address?: Opt<Uint8Array>, atu8_pub_key?: Opt<Encoded<'/tendermint.crypto.PublicKey'>>, sg_voting_power?: Opt<WeakInt64Str>, sg_proposer_priority?: Opt<WeakInt64Str>) => EncodedTendermintTypesValidator;
/**
 * Encodes a `SimpleValidator` protobuf message:
 * @param g_pub_key - `pub_key`:
 * @param sg_voting_power - `voting_power`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeTendermintTypesSimpleValidator: (atu8_pub_key?: Opt<Encoded<'/tendermint.crypto.PublicKey'>>, sg_voting_power?: Opt<WeakInt64Str>) => EncodedTendermintTypesSimpleValidator;
/**
 * A decoded protobuf ValidatorSet message
 *
 * Tuple where:
 *   - 0: validators -
 *   - 1: proposer -
 *   - 2: total_voting_power -
 */
export type DecodedTendermintTypesValidatorSet = [
    a_validators?: DecodedTendermintTypesValidator[],
    a_proposer?: DecodedTendermintTypesValidator,
    sg_total_voting_power?: CwInt64
];
/**
 * Decodes a protobuf ValidatorSet message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintTypesValidatorSet}
 */
export declare const decodeTendermintTypesValidatorSet: (atu8_payload: Uint8Array) => DecodedTendermintTypesValidatorSet;
/**
 * A decoded protobuf Validator message
 *
 * Tuple where:
 *   - 0: address -
 *   - 1: pub_key -
 *   - 2: voting_power -
 *   - 3: proposer_priority -
 */
export type DecodedTendermintTypesValidator = [
    atu8_address?: Uint8Array,
    a_pub_key?: DecodedTendermintCryptoPublicKey,
    sg_voting_power?: CwInt64,
    sg_proposer_priority?: CwInt64
];
/**
 * Decodes a protobuf Validator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintTypesValidator}
 */
export declare const decodeTendermintTypesValidator: (atu8_payload: Uint8Array) => DecodedTendermintTypesValidator;
/**
 * A decoded protobuf SimpleValidator message
 *
 * Tuple where:
 *   - 0: pub_key -
 *   - 1: voting_power -
 */
export type DecodedTendermintTypesSimpleValidator = [
    a_pub_key?: DecodedTendermintCryptoPublicKey,
    sg_voting_power?: CwInt64
];
/**
 * Decodes a protobuf SimpleValidator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedTendermintTypesSimpleValidator}
 */
export declare const decodeTendermintTypesSimpleValidator: (atu8_payload: Uint8Array) => DecodedTendermintTypesSimpleValidator;
/**
 * Destructures the fields of a {@link TendermintTypesValidatorSet} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validators -
 *   - 1: proposer -
 *   - 2: total_voting_power -
 */
export declare const destructTendermintTypesValidatorSet: (g_struct: TendermintTypesValidatorSet) => [validators?: TendermintTypesValidator[], proposer?: TendermintTypesValidator, total_voting_power?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_TYPES_VALIDATOR_SET = "/tendermint.types.ValidatorSet";
/**
 * JSON serialization of `tendermint.types.ValidatorSet` -
 */
export type TendermintTypesValidatorSet = {
    validators?: TendermintTypesValidator[] | undefined;
    proposer?: TendermintTypesValidator | undefined;
    total_voting_power?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintTypesValidator} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 *   - 1: pub_key -
 *   - 2: voting_power -
 *   - 3: proposer_priority -
 */
export declare const destructTendermintTypesValidator: (g_struct: TendermintTypesValidator) => [address?: Uint8Array, pub_key?: TendermintCryptoPublicKey, voting_power?: CwInt64, proposer_priority?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_TYPES_VALIDATOR = "/tendermint.types.Validator";
/**
 * JSON serialization of `tendermint.types.Validator` -
 */
export type TendermintTypesValidator = {
    address?: CwBase64 | undefined;
    pub_key?: TendermintCryptoPublicKey | undefined;
    voting_power?: CwInt64 | undefined;
    proposer_priority?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link TendermintTypesSimpleValidator} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pub_key -
 *   - 1: voting_power -
 */
export declare const destructTendermintTypesSimpleValidator: (g_struct: TendermintTypesSimpleValidator) => [pub_key?: TendermintCryptoPublicKey, voting_power?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_TENDERMINT_TYPES_SIMPLE_VALIDATOR = "/tendermint.types.SimpleValidator";
/**
 * JSON serialization of `tendermint.types.SimpleValidator` -
 */
export type TendermintTypesSimpleValidator = {
    pub_key?: TendermintCryptoPublicKey | undefined;
    voting_power?: CwInt64 | undefined;
};
/**
 * Protobuf enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_UNKNOWN** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintTypesBlockIDFlag}
 */
export declare const XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN = 0;
/**
 * JSON enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_UNKNOWN** -
 *
 * Belongs to enum type {@link JsonEnumTendermintTypesBlockIDFlag}
 */
export declare const SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN = "BlockIDFlagUnknown";
/**
 * Protobuf enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_ABSENT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintTypesBlockIDFlag}
 */
export declare const XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT = 1;
/**
 * JSON enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_ABSENT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintTypesBlockIDFlag}
 */
export declare const SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT = "BlockIDFlagAbsent";
/**
 * Protobuf enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_COMMIT** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintTypesBlockIDFlag}
 */
export declare const XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT = 2;
/**
 * JSON enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_COMMIT** -
 *
 * Belongs to enum type {@link JsonEnumTendermintTypesBlockIDFlag}
 */
export declare const SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT = "BlockIDFlagCommit";
/**
 * Protobuf enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_NIL** -
 *
 * Belongs to enum type {@link ProtoEnumTendermintTypesBlockIDFlag}
 */
export declare const XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL = 3;
/**
 * JSON enum value for `tendermint.types.BlockIDFlag`.
 *
 * **BLOCK_ID_FLAG_NIL** -
 *
 * Belongs to enum type {@link JsonEnumTendermintTypesBlockIDFlag}
 */
export declare const SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL = "BlockIDFlagNil";
/**
 * Raw protobuf enum values for `tendermint.types.BlockIDFlag` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN}
 *   - {@link XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT}
 *   - {@link XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT}
 *   - {@link XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL}
 */
export type ProtoEnumTendermintTypesBlockIDFlag = typeof XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN | typeof XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT | typeof XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT | typeof XC_PROTO_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL;
/**
 * JSON enum values for `tendermint.types.BlockIDFlag` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN}
 *   - {@link SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT}
 *   - {@link SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT}
 *   - {@link SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL}
 */
export type JsonEnumTendermintTypesBlockIDFlag = typeof SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_UNKNOWN | typeof SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_ABSENT | typeof SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_COMMIT | typeof SI_JSON_TENDERMINT_TYPES_BLOCK_IDFLAG_BLOCK_ID_FLAG_NIL;
/**
 * Maps a protobuf enum int value for `tendermint.types.BlockIDFlag` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumTendermintTypesBlockIDFlag: Record<ProtoEnumTendermintTypesBlockIDFlag, JsonEnumTendermintTypesBlockIDFlag>;
/**
 * Maps a JSON enum string value for `tendermint.types.BlockIDFlag` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumTendermintTypesBlockIDFlag: Record<JsonEnumTendermintTypesBlockIDFlag, ProtoEnumTendermintTypesBlockIDFlag>;
