import type { Nilable } from '@blake.regalia/belt';
import type { CwAccountAddr } from '@solar-republic/types';
export type PropagateUndefined<z_any> = z_any extends undefined ? undefined : never;
export declare const pubkey_to_bech32: <si_hrp extends string>(z_pubkey: string | Uint8Array, si_hrp: si_hrp) => CwAccountAddr<si_hrp>;
/**
 * Encode an address in bech32 format
 * @param si_hrp - the human-readable part without the '1' separator
 * @param atu8_data - canonical addr data
 * @returns
 */
export declare const bech32_encode: <si_hrp extends string>(si_hrp: si_hrp, atu8_data: Uint8Array) => CwAccountAddr<si_hrp>;
export declare const bech32_decode: <sa_defined extends string>(sa_bech32: Nilable<sa_defined>) => Uint8Array | PropagateUndefined<sa_defined>;
