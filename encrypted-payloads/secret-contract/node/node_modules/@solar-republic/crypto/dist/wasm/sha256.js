import { createSHA256 } from 'hash-wasm';
let y_sha256;
void createSHA256().then((y_instance) => {
    y_sha256 = y_instance;
}, (e_load) => {
    console.error(`Failed to load sha256 WASM module:\n` + e_load.message);
});
export function sha256_ready() {
    return !!y_sha256;
}
export function sha256_sync(atu8_data) {
    if (!y_sha256)
        throw new Error('Attempted to use synchronous sha256 before the WASM module finished loading, or it failed to load');
    y_sha256.init();
    y_sha256.update(atu8_data);
    return y_sha256.digest('binary');
}
//# sourceMappingURL=sha256.js.map