import { safe_json } from '../util.js';
export const SR_LCD_AUTH = '/cosmos/auth/v1beta1/';
export const SR_LCD_AUTHZ = '/cosmos/authz/v1beta1/';
export const SR_LCD_BANK = '/cosmos/bank/v1beta1/';
export const SR_LCD_COMPUTE = '/compute/v1beta1/';
export const SR_LCD_FEEGRANT = '/cosmos/feegrant/v1beta1/';
export const F_RPC_REQ_NO_ARGS = () => [''];
// export const query_error = (a_details: NetworkErrorDetails) => {
// 	Object.assign(Error('Query'), {
// 		d: a_details,
// 	});
// };
export const lcd_query = (f_req, f_res) => async (p_origin, ...a_args) => {
    let [sr_append, h_args] = f_req(...a_args);
    if (h_args) {
        sr_append += '?' + new URLSearchParams(h_args);
    }
    // submit request
    const d_res = await fetch(p_origin + sr_append);
    // resolve as text
    const sx_res = await d_res.text();
    // parse json
    const g_res = safe_json(sx_res);
    // not json
    // eslint-disable-next-line no-throw-literal
    if (!g_res)
        throw [d_res, sx_res];
    // response error or network error
    // eslint-disable-next-line no-throw-literal
    if (!d_res.ok || g_res['code'])
        throw [d_res, sx_res, g_res];
    // process response
    return f_res(g_res);
};
//# sourceMappingURL=_root.js.map