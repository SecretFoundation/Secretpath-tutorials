import type { JsonValue, NaiveBase64, NaiveHexMixed, Nilable } from '@blake.regalia/belt';
import type { CwHexLower } from '@solar-republic/types';
export interface SecretWasm {
    txKey(atu8_nonce?: Uint8Array): Promise<Uint8Array>;
    encodeMsg(sb16_code_hash: NaiveHexMixed, g_msg: JsonValue, nb_msg_block?: number): Promise<Uint8Array>;
    decrypt(atu8_ciphertext: Uint8Array, atu8_nonce: Uint8Array): Promise<Uint8Array>;
    decodeMsg(sb64_msg: NaiveBase64): Promise<[string, CwHexLower, Uint8Array]>;
}
export declare const SecretWasm: (atu8_consensus_pk: Uint8Array, atu8_seed?: Nilable<Uint8Array>) => SecretWasm;
