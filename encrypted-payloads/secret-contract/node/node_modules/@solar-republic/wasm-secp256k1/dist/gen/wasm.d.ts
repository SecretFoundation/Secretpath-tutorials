/// <reference types="web" />
import type { Pointer, WasmImports, WasmExports } from '../types.js';
export interface WasmImportsExtension extends WasmImports {
}
export interface WasmExportsExtension extends WasmExports {
    context_create: Function;
    ec_pubkey_parse: Function;
    ec_pubkey_serialize: Function;
    ecdsa_signature_parse_compact: Function;
    ecdsa_signature_serialize_compact: Function;
    ecdsa_verify: Function;
    ecdsa_sign: Function;
    ec_seckey_verify: Function;
    ec_pubkey_create: Function;
    context_randomize: Function;
    ecdh: Function;
}
export declare const map_wasm_imports: (g_imports: WasmImportsExtension) => {
    a: {
        a: () => void;
        f: <nb_size extends number>(ip_dst: Pointer<nb_size>, ip_src: Pointer<nb_size>, nb_size: nb_size) => Uint8Array;
        d: (nb_size: number) => void;
        e: () => number;
        c: () => number;
        b: (i_fd: number, ip_iov: Pointer<number>, nl_iovs: number, ip_written: Pointer<number>) => 0;
    };
};
export declare const map_wasm_exports: <g_extension extends WasmExportsExtension = WasmExportsExtension>(g_exports: WebAssembly.Exports) => g_extension;
