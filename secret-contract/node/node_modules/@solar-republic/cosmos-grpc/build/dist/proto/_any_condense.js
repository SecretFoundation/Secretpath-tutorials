/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { __UNDEFINED } from '@blake.regalia/belt';
import { bech32_decode } from '@solar-republic/crypto';
import { parse_duration, parse_timestamp, expand_timestamp, expand_duration, expand_coin } from '../api/json.js';
import { map, apply_opt, slimify_coin } from '../api/protobuf-writer.js';
import { safe_bytes_to_base64, safe_base64_to_bytes, addr_bytes_to_bech32 } from '../api/util.js';
import { encodeAkashAuditProvider as encodeAkashAuditV1beta1Provider, encodeAkashAuditAuditedAttributes as encodeAkashAuditV1beta1AuditedAttributes, encodeAkashAuditAttributesResponse as encodeAkashAuditV1beta1AttributesResponse, decodeAkashAuditAuditedAttributes as decodeAkashAuditV1beta1AuditedAttributes, encodeAkashAuditAttributesFilters as encodeAkashAuditV1beta1AttributesFilters, encodeAkashAuditMsgSignProviderAttributes as encodeAkashAuditV1beta1MsgSignProviderAttributes, encodeAkashAuditMsgSignProviderAttributesResponse as encodeAkashAuditV1beta1MsgSignProviderAttributesResponse, encodeAkashAuditMsgDeleteProviderAttributes as encodeAkashAuditV1beta1MsgDeleteProviderAttributes, encodeAkashAuditMsgDeleteProviderAttributesResponse as encodeAkashAuditV1beta1MsgDeleteProviderAttributesResponse, decodeAkashAuditProvider as decodeAkashAuditV1beta1Provider, decodeAkashAuditAttributesResponse as decodeAkashAuditV1beta1AttributesResponse, decodeAkashAuditAttributesFilters as decodeAkashAuditV1beta1AttributesFilters, decodeAkashAuditMsgSignProviderAttributes as decodeAkashAuditV1beta1MsgSignProviderAttributes, decodeAkashAuditMsgSignProviderAttributesResponse as decodeAkashAuditV1beta1MsgSignProviderAttributesResponse, decodeAkashAuditMsgDeleteProviderAttributes as decodeAkashAuditV1beta1MsgDeleteProviderAttributes, decodeAkashAuditMsgDeleteProviderAttributesResponse as decodeAkashAuditV1beta1MsgDeleteProviderAttributesResponse } from "./akash/audit/v1beta1/audit.js";
import { encodeAkashAuditProvider as encodeAkashAuditV1beta2Provider, encodeAkashAuditAuditedAttributes as encodeAkashAuditV1beta2AuditedAttributes, encodeAkashAuditAttributesResponse as encodeAkashAuditV1beta2AttributesResponse, decodeAkashAuditAuditedAttributes as decodeAkashAuditV1beta2AuditedAttributes, encodeAkashAuditAttributesFilters as encodeAkashAuditV1beta2AttributesFilters, encodeAkashAuditMsgSignProviderAttributes as encodeAkashAuditV1beta2MsgSignProviderAttributes, encodeAkashAuditMsgSignProviderAttributesResponse as encodeAkashAuditV1beta2MsgSignProviderAttributesResponse, encodeAkashAuditMsgDeleteProviderAttributes as encodeAkashAuditV1beta2MsgDeleteProviderAttributes, encodeAkashAuditMsgDeleteProviderAttributesResponse as encodeAkashAuditV1beta2MsgDeleteProviderAttributesResponse, decodeAkashAuditProvider as decodeAkashAuditV1beta2Provider, decodeAkashAuditAttributesResponse as decodeAkashAuditV1beta2AttributesResponse, decodeAkashAuditAttributesFilters as decodeAkashAuditV1beta2AttributesFilters, decodeAkashAuditMsgSignProviderAttributes as decodeAkashAuditV1beta2MsgSignProviderAttributes, decodeAkashAuditMsgSignProviderAttributesResponse as decodeAkashAuditV1beta2MsgSignProviderAttributesResponse, decodeAkashAuditMsgDeleteProviderAttributes as decodeAkashAuditV1beta2MsgDeleteProviderAttributes, decodeAkashAuditMsgDeleteProviderAttributesResponse as decodeAkashAuditV1beta2MsgDeleteProviderAttributesResponse } from './akash/audit/v1beta2/audit.js';
import { encodeAkashAuditGenesisState as encodeAkashAuditV1beta2GenesisState, decodeAkashAuditGenesisState as decodeAkashAuditV1beta2GenesisState } from './akash/audit/v1beta2/genesis.js';
import { encodeAkashAuditQueryProvidersResponse as encodeAkashAuditV1beta2QueryProvidersResponse, encodeAkashAuditQueryProviderRequest as encodeAkashAuditV1beta2QueryProviderRequest, encodeAkashAuditQueryAllProvidersAttributesRequest as encodeAkashAuditV1beta2QueryAllProvidersAttributesRequest, encodeAkashAuditQueryProviderAttributesRequest as encodeAkashAuditV1beta2QueryProviderAttributesRequest, encodeAkashAuditQueryProviderAuditorRequest as encodeAkashAuditV1beta2QueryProviderAuditorRequest, encodeAkashAuditQueryAuditorAttributesRequest as encodeAkashAuditV1beta2QueryAuditorAttributesRequest, decodeAkashAuditQueryProvidersResponse as decodeAkashAuditV1beta2QueryProvidersResponse, decodeAkashAuditQueryProviderRequest as decodeAkashAuditV1beta2QueryProviderRequest, decodeAkashAuditQueryAllProvidersAttributesRequest as decodeAkashAuditV1beta2QueryAllProvidersAttributesRequest, decodeAkashAuditQueryProviderAttributesRequest as decodeAkashAuditV1beta2QueryProviderAttributesRequest, decodeAkashAuditQueryProviderAuditorRequest as decodeAkashAuditV1beta2QueryProviderAuditorRequest, decodeAkashAuditQueryAuditorAttributesRequest as decodeAkashAuditV1beta2QueryAuditorAttributesRequest } from './akash/audit/v1beta2/query.js';
import { encodeAkashAuditProvider as encodeAkashAuditV1beta3Provider, encodeAkashAuditAuditedAttributes as encodeAkashAuditV1beta3AuditedAttributes, encodeAkashAuditAttributesResponse as encodeAkashAuditV1beta3AttributesResponse, decodeAkashAuditAuditedAttributes as decodeAkashAuditV1beta3AuditedAttributes, encodeAkashAuditAttributesFilters as encodeAkashAuditV1beta3AttributesFilters, encodeAkashAuditMsgSignProviderAttributes as encodeAkashAuditV1beta3MsgSignProviderAttributes, encodeAkashAuditMsgSignProviderAttributesResponse as encodeAkashAuditV1beta3MsgSignProviderAttributesResponse, encodeAkashAuditMsgDeleteProviderAttributes as encodeAkashAuditV1beta3MsgDeleteProviderAttributes, encodeAkashAuditMsgDeleteProviderAttributesResponse as encodeAkashAuditV1beta3MsgDeleteProviderAttributesResponse, decodeAkashAuditProvider as decodeAkashAuditV1beta3Provider, decodeAkashAuditAttributesResponse as decodeAkashAuditV1beta3AttributesResponse, decodeAkashAuditAttributesFilters as decodeAkashAuditV1beta3AttributesFilters, decodeAkashAuditMsgSignProviderAttributes as decodeAkashAuditV1beta3MsgSignProviderAttributes, decodeAkashAuditMsgSignProviderAttributesResponse as decodeAkashAuditV1beta3MsgSignProviderAttributesResponse, decodeAkashAuditMsgDeleteProviderAttributes as decodeAkashAuditV1beta3MsgDeleteProviderAttributes, decodeAkashAuditMsgDeleteProviderAttributesResponse as decodeAkashAuditV1beta3MsgDeleteProviderAttributesResponse } from './akash/audit/v1beta3/audit.js';
import { encodeAkashAuditGenesisState as encodeAkashAuditV1beta3GenesisState, decodeAkashAuditGenesisState as decodeAkashAuditV1beta3GenesisState } from './akash/audit/v1beta3/genesis.js';
import { encodeAkashAuditQueryProvidersResponse as encodeAkashAuditV1beta3QueryProvidersResponse, encodeAkashAuditQueryProviderRequest as encodeAkashAuditV1beta3QueryProviderRequest, encodeAkashAuditQueryAllProvidersAttributesRequest as encodeAkashAuditV1beta3QueryAllProvidersAttributesRequest, encodeAkashAuditQueryProviderAttributesRequest as encodeAkashAuditV1beta3QueryProviderAttributesRequest, encodeAkashAuditQueryProviderAuditorRequest as encodeAkashAuditV1beta3QueryProviderAuditorRequest, encodeAkashAuditQueryAuditorAttributesRequest as encodeAkashAuditV1beta3QueryAuditorAttributesRequest, decodeAkashAuditQueryProvidersResponse as decodeAkashAuditV1beta3QueryProvidersResponse, decodeAkashAuditQueryProviderRequest as decodeAkashAuditV1beta3QueryProviderRequest, decodeAkashAuditQueryAllProvidersAttributesRequest as decodeAkashAuditV1beta3QueryAllProvidersAttributesRequest, decodeAkashAuditQueryProviderAttributesRequest as decodeAkashAuditV1beta3QueryProviderAttributesRequest, decodeAkashAuditQueryProviderAuditorRequest as decodeAkashAuditV1beta3QueryProviderAuditorRequest, decodeAkashAuditQueryAuditorAttributesRequest as decodeAkashAuditV1beta3QueryAuditorAttributesRequest } from './akash/audit/v1beta3/query.js';
import { decodeAkashBaseAttribute as decodeAkashBaseV1beta1Attribute, encodeAkashBaseAttribute as encodeAkashBaseV1beta1Attribute, decodeAkashBasePlacementRequirements as decodeAkashBaseV1beta1PlacementRequirements, encodeAkashBasePlacementRequirements as encodeAkashBaseV1beta1PlacementRequirements, decodeAkashBaseSignedBy as decodeAkashBaseV1beta1SignedBy, encodeAkashBaseSignedBy as encodeAkashBaseV1beta1SignedBy } from './akash/base/v1beta1/attribute.js';
import { decodeAkashBaseEndpoint as decodeAkashBaseV1beta1Endpoint, encodeAkashBaseEndpoint as encodeAkashBaseV1beta1Endpoint, JsonToProtoEnumAkashBaseEndpointKind as JsonToProtoEnumAkashBaseV1beta1EndpointKind, ProtoToJsonEnumAkashBaseEndpointKind as ProtoToJsonEnumAkashBaseV1beta1EndpointKind } from './akash/base/v1beta1/endpoint.js';
import { decodeAkashBaseResourceUnits as decodeAkashBaseV1beta1ResourceUnits, encodeAkashBaseResourceUnits as encodeAkashBaseV1beta1ResourceUnits, decodeAkashBaseCPU as decodeAkashBaseV1beta1CPU, decodeAkashBaseMemory as decodeAkashBaseV1beta1Memory, decodeAkashBaseStorage as decodeAkashBaseV1beta1Storage, encodeAkashBaseCPU as encodeAkashBaseV1beta1CPU, encodeAkashBaseMemory as encodeAkashBaseV1beta1Memory, encodeAkashBaseStorage as encodeAkashBaseV1beta1Storage } from './akash/base/v1beta1/resource.js';
import { decodeAkashBaseResourceValue as decodeAkashBaseV1beta1ResourceValue, encodeAkashBaseResourceValue as encodeAkashBaseV1beta1ResourceValue } from './akash/base/v1beta1/resourcevalue.js';
import { decodeAkashBaseAttribute as decodeAkashBaseV1beta2Attribute, encodeAkashBaseAttribute as encodeAkashBaseV1beta2Attribute, decodeAkashBasePlacementRequirements as decodeAkashBaseV1beta2PlacementRequirements, encodeAkashBasePlacementRequirements as encodeAkashBaseV1beta2PlacementRequirements, decodeAkashBaseSignedBy as decodeAkashBaseV1beta2SignedBy, encodeAkashBaseSignedBy as encodeAkashBaseV1beta2SignedBy } from './akash/base/v1beta2/attribute.js';
import { decodeAkashBaseEndpoint as decodeAkashBaseV1beta2Endpoint, encodeAkashBaseEndpoint as encodeAkashBaseV1beta2Endpoint, JsonToProtoEnumAkashBaseEndpointKind as JsonToProtoEnumAkashBaseV1beta2EndpointKind, ProtoToJsonEnumAkashBaseEndpointKind as ProtoToJsonEnumAkashBaseV1beta2EndpointKind } from './akash/base/v1beta2/endpoint.js';
import { decodeAkashBaseCPU as decodeAkashBaseV1beta2CPU, decodeAkashBaseMemory as decodeAkashBaseV1beta2Memory, decodeAkashBaseStorage as decodeAkashBaseV1beta2Storage, encodeAkashBaseCPU as encodeAkashBaseV1beta2CPU, encodeAkashBaseMemory as encodeAkashBaseV1beta2Memory, encodeAkashBaseStorage as encodeAkashBaseV1beta2Storage } from './akash/base/v1beta2/resource.js';
import { decodeAkashBaseResourceUnits as decodeAkashBaseV1beta2ResourceUnits, encodeAkashBaseResourceUnits as encodeAkashBaseV1beta2ResourceUnits } from './akash/base/v1beta2/resourceunits.js';
import { decodeAkashBaseResourceValue as decodeAkashBaseV1beta2ResourceValue, encodeAkashBaseResourceValue as encodeAkashBaseV1beta2ResourceValue } from './akash/base/v1beta2/resourcevalue.js';
import { decodeAkashBaseAttribute as decodeAkashBaseV1beta3Attribute, encodeAkashBaseAttribute as encodeAkashBaseV1beta3Attribute, decodeAkashBasePlacementRequirements as decodeAkashBaseV1beta3PlacementRequirements, encodeAkashBasePlacementRequirements as encodeAkashBaseV1beta3PlacementRequirements, decodeAkashBaseSignedBy as decodeAkashBaseV1beta3SignedBy, encodeAkashBaseSignedBy as encodeAkashBaseV1beta3SignedBy } from './akash/base/v1beta3/attribute.js';
import { decodeAkashBaseCPU as decodeAkashBaseV1beta3CPU, encodeAkashBaseCPU as encodeAkashBaseV1beta3CPU } from './akash/base/v1beta3/cpu.js';
import { decodeAkashBaseEndpoint as decodeAkashBaseV1beta3Endpoint, encodeAkashBaseEndpoint as encodeAkashBaseV1beta3Endpoint, JsonToProtoEnumAkashBaseEndpointKind as JsonToProtoEnumAkashBaseV1beta3EndpointKind, ProtoToJsonEnumAkashBaseEndpointKind as ProtoToJsonEnumAkashBaseV1beta3EndpointKind } from './akash/base/v1beta3/endpoint.js';
import { decodeAkashBaseGPU as decodeAkashBaseV1beta3GPU, encodeAkashBaseGPU as encodeAkashBaseV1beta3GPU } from './akash/base/v1beta3/gpu.js';
import { decodeAkashBaseMemory as decodeAkashBaseV1beta3Memory, encodeAkashBaseMemory as encodeAkashBaseV1beta3Memory } from './akash/base/v1beta3/memory.js';
import { decodeAkashBaseResources as decodeAkashBaseV1beta3Resources, encodeAkashBaseResources as encodeAkashBaseV1beta3Resources } from './akash/base/v1beta3/resources.js';
import { decodeAkashBaseResourceValue as decodeAkashBaseV1beta3ResourceValue, encodeAkashBaseResourceValue as encodeAkashBaseV1beta3ResourceValue } from './akash/base/v1beta3/resourcevalue.js';
import { decodeAkashBaseStorage as decodeAkashBaseV1beta3Storage, encodeAkashBaseStorage as encodeAkashBaseV1beta3Storage } from './akash/base/v1beta3/storage.js';
import { decodeAkashCertCertificate as decodeAkashCertV1beta2Certificate, encodeAkashCertCertificate as encodeAkashCertV1beta2Certificate, JsonToProtoEnumAkashCertCertificateState as JsonToProtoEnumAkashCertV1beta2CertificateState, ProtoToJsonEnumAkashCertCertificateState as ProtoToJsonEnumAkashCertV1beta2CertificateState, decodeAkashCertCertificateFilter as decodeAkashCertV1beta2CertificateFilter, encodeAkashCertCertificateFilter as encodeAkashCertV1beta2CertificateFilter, encodeAkashCertCertificateID as encodeAkashCertV1beta2CertificateID, encodeAkashCertMsgCreateCertificate as encodeAkashCertV1beta2MsgCreateCertificate, encodeAkashCertMsgCreateCertificateResponse as encodeAkashCertV1beta2MsgCreateCertificateResponse, encodeAkashCertMsgRevokeCertificate as encodeAkashCertV1beta2MsgRevokeCertificate, decodeAkashCertCertificateID as decodeAkashCertV1beta2CertificateID, encodeAkashCertMsgRevokeCertificateResponse as encodeAkashCertV1beta2MsgRevokeCertificateResponse, decodeAkashCertMsgCreateCertificate as decodeAkashCertV1beta2MsgCreateCertificate, decodeAkashCertMsgCreateCertificateResponse as decodeAkashCertV1beta2MsgCreateCertificateResponse, decodeAkashCertMsgRevokeCertificate as decodeAkashCertV1beta2MsgRevokeCertificate, decodeAkashCertMsgRevokeCertificateResponse as decodeAkashCertV1beta2MsgRevokeCertificateResponse } from './akash/cert/v1beta2/cert.js';
import { encodeAkashCertGenesisCertificate as encodeAkashCertV1beta2GenesisCertificate, encodeAkashCertGenesisState as encodeAkashCertV1beta2GenesisState, decodeAkashCertGenesisCertificate as decodeAkashCertV1beta2GenesisCertificate, decodeAkashCertGenesisState as decodeAkashCertV1beta2GenesisState } from './akash/cert/v1beta2/genesis.js';
import { encodeAkashCertCertificateResponse as encodeAkashCertV1beta2CertificateResponse, encodeAkashCertQueryCertificatesRequest as encodeAkashCertV1beta2QueryCertificatesRequest, encodeAkashCertQueryCertificatesResponse as encodeAkashCertV1beta2QueryCertificatesResponse, decodeAkashCertCertificateResponse as decodeAkashCertV1beta2CertificateResponse, decodeAkashCertQueryCertificatesRequest as decodeAkashCertV1beta2QueryCertificatesRequest, decodeAkashCertQueryCertificatesResponse as decodeAkashCertV1beta2QueryCertificatesResponse } from './akash/cert/v1beta2/query.js';
import { decodeAkashCertCertificate as decodeAkashCertV1beta3Certificate, encodeAkashCertCertificate as encodeAkashCertV1beta3Certificate, JsonToProtoEnumAkashCertCertificateState as JsonToProtoEnumAkashCertV1beta3CertificateState, ProtoToJsonEnumAkashCertCertificateState as ProtoToJsonEnumAkashCertV1beta3CertificateState, decodeAkashCertCertificateFilter as decodeAkashCertV1beta3CertificateFilter, encodeAkashCertCertificateFilter as encodeAkashCertV1beta3CertificateFilter, encodeAkashCertCertificateID as encodeAkashCertV1beta3CertificateID, encodeAkashCertMsgCreateCertificate as encodeAkashCertV1beta3MsgCreateCertificate, encodeAkashCertMsgCreateCertificateResponse as encodeAkashCertV1beta3MsgCreateCertificateResponse, encodeAkashCertMsgRevokeCertificate as encodeAkashCertV1beta3MsgRevokeCertificate, decodeAkashCertCertificateID as decodeAkashCertV1beta3CertificateID, encodeAkashCertMsgRevokeCertificateResponse as encodeAkashCertV1beta3MsgRevokeCertificateResponse, decodeAkashCertMsgCreateCertificate as decodeAkashCertV1beta3MsgCreateCertificate, decodeAkashCertMsgCreateCertificateResponse as decodeAkashCertV1beta3MsgCreateCertificateResponse, decodeAkashCertMsgRevokeCertificate as decodeAkashCertV1beta3MsgRevokeCertificate, decodeAkashCertMsgRevokeCertificateResponse as decodeAkashCertV1beta3MsgRevokeCertificateResponse } from './akash/cert/v1beta3/cert.js';
import { encodeAkashCertGenesisCertificate as encodeAkashCertV1beta3GenesisCertificate, encodeAkashCertGenesisState as encodeAkashCertV1beta3GenesisState, decodeAkashCertGenesisCertificate as decodeAkashCertV1beta3GenesisCertificate, decodeAkashCertGenesisState as decodeAkashCertV1beta3GenesisState } from './akash/cert/v1beta3/genesis.js';
import { encodeAkashCertCertificateResponse as encodeAkashCertV1beta3CertificateResponse, encodeAkashCertQueryCertificatesRequest as encodeAkashCertV1beta3QueryCertificatesRequest, encodeAkashCertQueryCertificatesResponse as encodeAkashCertV1beta3QueryCertificatesResponse, decodeAkashCertCertificateResponse as decodeAkashCertV1beta3CertificateResponse, decodeAkashCertQueryCertificatesRequest as decodeAkashCertV1beta3QueryCertificatesRequest, decodeAkashCertQueryCertificatesResponse as decodeAkashCertV1beta3QueryCertificatesResponse } from './akash/cert/v1beta3/query.js';
import { encodeAkashDeploymentDepositDeploymentAuthorization as encodeAkashDeploymentV1beta1DepositDeploymentAuthorization, decodeAkashDeploymentDepositDeploymentAuthorization as decodeAkashDeploymentV1beta1DepositDeploymentAuthorization } from './akash/deployment/v1beta1/authz.js';
import { encodeAkashDeploymentMsgCreateDeployment as encodeAkashDeploymentV1beta1MsgCreateDeployment, decodeAkashDeploymentDeploymentID as decodeAkashDeploymentV1beta1DeploymentID, encodeAkashDeploymentDeploymentID as encodeAkashDeploymentV1beta1DeploymentID, encodeAkashDeploymentMsgCreateDeploymentResponse as encodeAkashDeploymentV1beta1MsgCreateDeploymentResponse, encodeAkashDeploymentMsgDepositDeployment as encodeAkashDeploymentV1beta1MsgDepositDeployment, encodeAkashDeploymentMsgDepositDeploymentResponse as encodeAkashDeploymentV1beta1MsgDepositDeploymentResponse, encodeAkashDeploymentMsgUpdateDeployment as encodeAkashDeploymentV1beta1MsgUpdateDeployment, encodeAkashDeploymentMsgUpdateDeploymentResponse as encodeAkashDeploymentV1beta1MsgUpdateDeploymentResponse, encodeAkashDeploymentMsgCloseDeployment as encodeAkashDeploymentV1beta1MsgCloseDeployment, encodeAkashDeploymentMsgCloseDeploymentResponse as encodeAkashDeploymentV1beta1MsgCloseDeploymentResponse, encodeAkashDeploymentDeployment as encodeAkashDeploymentV1beta1Deployment, JsonToProtoEnumAkashDeploymentDeploymentState as JsonToProtoEnumAkashDeploymentV1beta1DeploymentState, ProtoToJsonEnumAkashDeploymentDeploymentState as ProtoToJsonEnumAkashDeploymentV1beta1DeploymentState, encodeAkashDeploymentDeploymentFilters as encodeAkashDeploymentV1beta1DeploymentFilters, decodeAkashDeploymentDeploymentFilters as decodeAkashDeploymentV1beta1DeploymentFilters, decodeAkashDeploymentDeployment as decodeAkashDeploymentV1beta1Deployment, decodeAkashDeploymentMsgCreateDeployment as decodeAkashDeploymentV1beta1MsgCreateDeployment, decodeAkashDeploymentMsgCreateDeploymentResponse as decodeAkashDeploymentV1beta1MsgCreateDeploymentResponse, decodeAkashDeploymentMsgDepositDeployment as decodeAkashDeploymentV1beta1MsgDepositDeployment, decodeAkashDeploymentMsgDepositDeploymentResponse as decodeAkashDeploymentV1beta1MsgDepositDeploymentResponse, decodeAkashDeploymentMsgUpdateDeployment as decodeAkashDeploymentV1beta1MsgUpdateDeployment, decodeAkashDeploymentMsgUpdateDeploymentResponse as decodeAkashDeploymentV1beta1MsgUpdateDeploymentResponse, decodeAkashDeploymentMsgCloseDeployment as decodeAkashDeploymentV1beta1MsgCloseDeployment, decodeAkashDeploymentMsgCloseDeploymentResponse as decodeAkashDeploymentV1beta1MsgCloseDeploymentResponse } from './akash/deployment/v1beta1/deployment.js';
import { encodeAkashDeploymentGenesisDeployment as encodeAkashDeploymentV1beta1GenesisDeployment, encodeAkashDeploymentGenesisState as encodeAkashDeploymentV1beta1GenesisState, decodeAkashDeploymentGenesisDeployment as decodeAkashDeploymentV1beta1GenesisDeployment, decodeAkashDeploymentGenesisState as decodeAkashDeploymentV1beta1GenesisState } from './akash/deployment/v1beta1/genesis.js';
import { encodeAkashDeploymentMsgCloseGroup as encodeAkashDeploymentV1beta1MsgCloseGroup, decodeAkashDeploymentGroupID as decodeAkashDeploymentV1beta1GroupID, encodeAkashDeploymentGroupID as encodeAkashDeploymentV1beta1GroupID, encodeAkashDeploymentMsgCloseGroupResponse as encodeAkashDeploymentV1beta1MsgCloseGroupResponse, encodeAkashDeploymentMsgPauseGroup as encodeAkashDeploymentV1beta1MsgPauseGroup, encodeAkashDeploymentMsgPauseGroupResponse as encodeAkashDeploymentV1beta1MsgPauseGroupResponse, encodeAkashDeploymentMsgStartGroup as encodeAkashDeploymentV1beta1MsgStartGroup, encodeAkashDeploymentMsgStartGroupResponse as encodeAkashDeploymentV1beta1MsgStartGroupResponse, encodeAkashDeploymentGroupSpec as encodeAkashDeploymentV1beta1GroupSpec, decodeAkashDeploymentResource as decodeAkashDeploymentV1beta1Resource, encodeAkashDeploymentResource as encodeAkashDeploymentV1beta1Resource, encodeAkashDeploymentGroup as encodeAkashDeploymentV1beta1Group, JsonToProtoEnumAkashDeploymentGroupState as JsonToProtoEnumAkashDeploymentV1beta1GroupState, decodeAkashDeploymentGroupSpec as decodeAkashDeploymentV1beta1GroupSpec, ProtoToJsonEnumAkashDeploymentGroupState as ProtoToJsonEnumAkashDeploymentV1beta1GroupState, decodeAkashDeploymentGroup as decodeAkashDeploymentV1beta1Group, decodeAkashDeploymentMsgCloseGroup as decodeAkashDeploymentV1beta1MsgCloseGroup, decodeAkashDeploymentMsgCloseGroupResponse as decodeAkashDeploymentV1beta1MsgCloseGroupResponse, decodeAkashDeploymentMsgPauseGroup as decodeAkashDeploymentV1beta1MsgPauseGroup, decodeAkashDeploymentMsgPauseGroupResponse as decodeAkashDeploymentV1beta1MsgPauseGroupResponse, decodeAkashDeploymentMsgStartGroup as decodeAkashDeploymentV1beta1MsgStartGroup, decodeAkashDeploymentMsgStartGroupResponse as decodeAkashDeploymentV1beta1MsgStartGroupResponse } from './akash/deployment/v1beta1/group.js';
import { decodeAkashDeploymentParams as decodeAkashDeploymentV1beta1Params, encodeAkashDeploymentParams as encodeAkashDeploymentV1beta1Params } from './akash/deployment/v1beta1/params.js';
import { encodeAkashDeploymentQueryDeploymentsRequest as encodeAkashDeploymentV1beta1QueryDeploymentsRequest, encodeAkashDeploymentQueryDeploymentsResponse as encodeAkashDeploymentV1beta1QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentResponse as decodeAkashDeploymentV1beta1QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentResponse as encodeAkashDeploymentV1beta1QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentRequest as encodeAkashDeploymentV1beta1QueryDeploymentRequest, encodeAkashDeploymentQueryGroupRequest as encodeAkashDeploymentV1beta1QueryGroupRequest, encodeAkashDeploymentQueryGroupResponse as encodeAkashDeploymentV1beta1QueryGroupResponse, decodeAkashDeploymentQueryDeploymentsRequest as decodeAkashDeploymentV1beta1QueryDeploymentsRequest, decodeAkashDeploymentQueryDeploymentsResponse as decodeAkashDeploymentV1beta1QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentRequest as decodeAkashDeploymentV1beta1QueryDeploymentRequest, decodeAkashDeploymentQueryGroupRequest as decodeAkashDeploymentV1beta1QueryGroupRequest, decodeAkashDeploymentQueryGroupResponse as decodeAkashDeploymentV1beta1QueryGroupResponse } from './akash/deployment/v1beta1/query.js';
import { encodeAkashDeploymentDepositDeploymentAuthorization as encodeAkashDeploymentV1beta2DepositDeploymentAuthorization, decodeAkashDeploymentDepositDeploymentAuthorization as decodeAkashDeploymentV1beta2DepositDeploymentAuthorization } from './akash/deployment/v1beta2/authz.js';
import { encodeAkashDeploymentDeploymentID as encodeAkashDeploymentV1beta2DeploymentID, encodeAkashDeploymentDeployment as encodeAkashDeploymentV1beta2Deployment, decodeAkashDeploymentDeploymentID as decodeAkashDeploymentV1beta2DeploymentID, JsonToProtoEnumAkashDeploymentDeploymentState as JsonToProtoEnumAkashDeploymentV1beta2DeploymentState, ProtoToJsonEnumAkashDeploymentDeploymentState as ProtoToJsonEnumAkashDeploymentV1beta2DeploymentState, encodeAkashDeploymentDeploymentFilters as encodeAkashDeploymentV1beta2DeploymentFilters, decodeAkashDeploymentDeploymentFilters as decodeAkashDeploymentV1beta2DeploymentFilters, decodeAkashDeploymentDeployment as decodeAkashDeploymentV1beta2Deployment } from './akash/deployment/v1beta2/deployment.js';
import { encodeAkashDeploymentMsgCreateDeployment as encodeAkashDeploymentV1beta2MsgCreateDeployment, encodeAkashDeploymentMsgCreateDeploymentResponse as encodeAkashDeploymentV1beta2MsgCreateDeploymentResponse, encodeAkashDeploymentMsgDepositDeployment as encodeAkashDeploymentV1beta2MsgDepositDeployment, encodeAkashDeploymentMsgDepositDeploymentResponse as encodeAkashDeploymentV1beta2MsgDepositDeploymentResponse, encodeAkashDeploymentMsgUpdateDeployment as encodeAkashDeploymentV1beta2MsgUpdateDeployment, encodeAkashDeploymentMsgUpdateDeploymentResponse as encodeAkashDeploymentV1beta2MsgUpdateDeploymentResponse, encodeAkashDeploymentMsgCloseDeployment as encodeAkashDeploymentV1beta2MsgCloseDeployment, encodeAkashDeploymentMsgCloseDeploymentResponse as encodeAkashDeploymentV1beta2MsgCloseDeploymentResponse, decodeAkashDeploymentMsgCreateDeployment as decodeAkashDeploymentV1beta2MsgCreateDeployment, decodeAkashDeploymentMsgCreateDeploymentResponse as decodeAkashDeploymentV1beta2MsgCreateDeploymentResponse, decodeAkashDeploymentMsgDepositDeployment as decodeAkashDeploymentV1beta2MsgDepositDeployment, decodeAkashDeploymentMsgDepositDeploymentResponse as decodeAkashDeploymentV1beta2MsgDepositDeploymentResponse, decodeAkashDeploymentMsgUpdateDeployment as decodeAkashDeploymentV1beta2MsgUpdateDeployment, decodeAkashDeploymentMsgUpdateDeploymentResponse as decodeAkashDeploymentV1beta2MsgUpdateDeploymentResponse, decodeAkashDeploymentMsgCloseDeployment as decodeAkashDeploymentV1beta2MsgCloseDeployment, decodeAkashDeploymentMsgCloseDeploymentResponse as decodeAkashDeploymentV1beta2MsgCloseDeploymentResponse } from './akash/deployment/v1beta2/deploymentmsg.js';
import { encodeAkashDeploymentGenesisDeployment as encodeAkashDeploymentV1beta2GenesisDeployment, encodeAkashDeploymentGenesisState as encodeAkashDeploymentV1beta2GenesisState, decodeAkashDeploymentGenesisDeployment as decodeAkashDeploymentV1beta2GenesisDeployment, decodeAkashDeploymentGenesisState as decodeAkashDeploymentV1beta2GenesisState } from './akash/deployment/v1beta2/genesis.js';
import { encodeAkashDeploymentGroup as encodeAkashDeploymentV1beta2Group, JsonToProtoEnumAkashDeploymentGroupState as JsonToProtoEnumAkashDeploymentV1beta2GroupState, ProtoToJsonEnumAkashDeploymentGroupState as ProtoToJsonEnumAkashDeploymentV1beta2GroupState, decodeAkashDeploymentGroup as decodeAkashDeploymentV1beta2Group } from './akash/deployment/v1beta2/group.js';
import { decodeAkashDeploymentGroupID as decodeAkashDeploymentV1beta2GroupID, encodeAkashDeploymentGroupID as encodeAkashDeploymentV1beta2GroupID } from './akash/deployment/v1beta2/groupid.js';
import { encodeAkashDeploymentMsgCloseGroup as encodeAkashDeploymentV1beta2MsgCloseGroup, encodeAkashDeploymentMsgCloseGroupResponse as encodeAkashDeploymentV1beta2MsgCloseGroupResponse, encodeAkashDeploymentMsgPauseGroup as encodeAkashDeploymentV1beta2MsgPauseGroup, encodeAkashDeploymentMsgPauseGroupResponse as encodeAkashDeploymentV1beta2MsgPauseGroupResponse, encodeAkashDeploymentMsgStartGroup as encodeAkashDeploymentV1beta2MsgStartGroup, encodeAkashDeploymentMsgStartGroupResponse as encodeAkashDeploymentV1beta2MsgStartGroupResponse, decodeAkashDeploymentMsgCloseGroup as decodeAkashDeploymentV1beta2MsgCloseGroup, decodeAkashDeploymentMsgCloseGroupResponse as decodeAkashDeploymentV1beta2MsgCloseGroupResponse, decodeAkashDeploymentMsgPauseGroup as decodeAkashDeploymentV1beta2MsgPauseGroup, decodeAkashDeploymentMsgPauseGroupResponse as decodeAkashDeploymentV1beta2MsgPauseGroupResponse, decodeAkashDeploymentMsgStartGroup as decodeAkashDeploymentV1beta2MsgStartGroup, decodeAkashDeploymentMsgStartGroupResponse as decodeAkashDeploymentV1beta2MsgStartGroupResponse } from './akash/deployment/v1beta2/groupmsg.js';
import { decodeAkashDeploymentGroupSpec as decodeAkashDeploymentV1beta2GroupSpec, encodeAkashDeploymentGroupSpec as encodeAkashDeploymentV1beta2GroupSpec } from './akash/deployment/v1beta2/groupspec.js';
import { decodeAkashDeploymentParams as decodeAkashDeploymentV1beta2Params, encodeAkashDeploymentParams as encodeAkashDeploymentV1beta2Params } from './akash/deployment/v1beta2/params.js';
import { encodeAkashDeploymentQueryDeploymentsRequest as encodeAkashDeploymentV1beta2QueryDeploymentsRequest, encodeAkashDeploymentQueryDeploymentsResponse as encodeAkashDeploymentV1beta2QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentResponse as decodeAkashDeploymentV1beta2QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentResponse as encodeAkashDeploymentV1beta2QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentRequest as encodeAkashDeploymentV1beta2QueryDeploymentRequest, encodeAkashDeploymentQueryGroupRequest as encodeAkashDeploymentV1beta2QueryGroupRequest, encodeAkashDeploymentQueryGroupResponse as encodeAkashDeploymentV1beta2QueryGroupResponse, decodeAkashDeploymentQueryDeploymentsRequest as decodeAkashDeploymentV1beta2QueryDeploymentsRequest, decodeAkashDeploymentQueryDeploymentsResponse as decodeAkashDeploymentV1beta2QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentRequest as decodeAkashDeploymentV1beta2QueryDeploymentRequest, decodeAkashDeploymentQueryGroupRequest as decodeAkashDeploymentV1beta2QueryGroupRequest, decodeAkashDeploymentQueryGroupResponse as decodeAkashDeploymentV1beta2QueryGroupResponse } from './akash/deployment/v1beta2/query.js';
import { decodeAkashDeploymentResource as decodeAkashDeploymentV1beta2Resource, encodeAkashDeploymentResource as encodeAkashDeploymentV1beta2Resource } from './akash/deployment/v1beta2/resource.js';
import { encodeAkashDeploymentDepositDeploymentAuthorization as encodeAkashDeploymentV1beta3DepositDeploymentAuthorization, decodeAkashDeploymentDepositDeploymentAuthorization as decodeAkashDeploymentV1beta3DepositDeploymentAuthorization } from './akash/deployment/v1beta3/authz.js';
import { encodeAkashDeploymentDeploymentID as encodeAkashDeploymentV1beta3DeploymentID, encodeAkashDeploymentDeployment as encodeAkashDeploymentV1beta3Deployment, decodeAkashDeploymentDeploymentID as decodeAkashDeploymentV1beta3DeploymentID, JsonToProtoEnumAkashDeploymentDeploymentState as JsonToProtoEnumAkashDeploymentV1beta3DeploymentState, ProtoToJsonEnumAkashDeploymentDeploymentState as ProtoToJsonEnumAkashDeploymentV1beta3DeploymentState, encodeAkashDeploymentDeploymentFilters as encodeAkashDeploymentV1beta3DeploymentFilters, decodeAkashDeploymentDeploymentFilters as decodeAkashDeploymentV1beta3DeploymentFilters, decodeAkashDeploymentDeployment as decodeAkashDeploymentV1beta3Deployment } from './akash/deployment/v1beta3/deployment.js';
import { encodeAkashDeploymentMsgCreateDeployment as encodeAkashDeploymentV1beta3MsgCreateDeployment, encodeAkashDeploymentMsgCreateDeploymentResponse as encodeAkashDeploymentV1beta3MsgCreateDeploymentResponse, encodeAkashDeploymentMsgDepositDeployment as encodeAkashDeploymentV1beta3MsgDepositDeployment, encodeAkashDeploymentMsgDepositDeploymentResponse as encodeAkashDeploymentV1beta3MsgDepositDeploymentResponse, encodeAkashDeploymentMsgUpdateDeployment as encodeAkashDeploymentV1beta3MsgUpdateDeployment, encodeAkashDeploymentMsgUpdateDeploymentResponse as encodeAkashDeploymentV1beta3MsgUpdateDeploymentResponse, encodeAkashDeploymentMsgCloseDeployment as encodeAkashDeploymentV1beta3MsgCloseDeployment, encodeAkashDeploymentMsgCloseDeploymentResponse as encodeAkashDeploymentV1beta3MsgCloseDeploymentResponse, decodeAkashDeploymentMsgCreateDeployment as decodeAkashDeploymentV1beta3MsgCreateDeployment, decodeAkashDeploymentMsgCreateDeploymentResponse as decodeAkashDeploymentV1beta3MsgCreateDeploymentResponse, decodeAkashDeploymentMsgDepositDeployment as decodeAkashDeploymentV1beta3MsgDepositDeployment, decodeAkashDeploymentMsgDepositDeploymentResponse as decodeAkashDeploymentV1beta3MsgDepositDeploymentResponse, decodeAkashDeploymentMsgUpdateDeployment as decodeAkashDeploymentV1beta3MsgUpdateDeployment, decodeAkashDeploymentMsgUpdateDeploymentResponse as decodeAkashDeploymentV1beta3MsgUpdateDeploymentResponse, decodeAkashDeploymentMsgCloseDeployment as decodeAkashDeploymentV1beta3MsgCloseDeployment, decodeAkashDeploymentMsgCloseDeploymentResponse as decodeAkashDeploymentV1beta3MsgCloseDeploymentResponse } from './akash/deployment/v1beta3/deploymentmsg.js';
import { encodeAkashDeploymentGenesisDeployment as encodeAkashDeploymentV1beta3GenesisDeployment, encodeAkashDeploymentGenesisState as encodeAkashDeploymentV1beta3GenesisState, decodeAkashDeploymentGenesisDeployment as decodeAkashDeploymentV1beta3GenesisDeployment, decodeAkashDeploymentGenesisState as decodeAkashDeploymentV1beta3GenesisState } from './akash/deployment/v1beta3/genesis.js';
import { encodeAkashDeploymentGroup as encodeAkashDeploymentV1beta3Group, JsonToProtoEnumAkashDeploymentGroupState as JsonToProtoEnumAkashDeploymentV1beta3GroupState, ProtoToJsonEnumAkashDeploymentGroupState as ProtoToJsonEnumAkashDeploymentV1beta3GroupState, decodeAkashDeploymentGroup as decodeAkashDeploymentV1beta3Group } from './akash/deployment/v1beta3/group.js';
import { decodeAkashDeploymentGroupID as decodeAkashDeploymentV1beta3GroupID, encodeAkashDeploymentGroupID as encodeAkashDeploymentV1beta3GroupID } from './akash/deployment/v1beta3/groupid.js';
import { encodeAkashDeploymentMsgCloseGroup as encodeAkashDeploymentV1beta3MsgCloseGroup, encodeAkashDeploymentMsgCloseGroupResponse as encodeAkashDeploymentV1beta3MsgCloseGroupResponse, encodeAkashDeploymentMsgPauseGroup as encodeAkashDeploymentV1beta3MsgPauseGroup, encodeAkashDeploymentMsgPauseGroupResponse as encodeAkashDeploymentV1beta3MsgPauseGroupResponse, encodeAkashDeploymentMsgStartGroup as encodeAkashDeploymentV1beta3MsgStartGroup, encodeAkashDeploymentMsgStartGroupResponse as encodeAkashDeploymentV1beta3MsgStartGroupResponse, decodeAkashDeploymentMsgCloseGroup as decodeAkashDeploymentV1beta3MsgCloseGroup, decodeAkashDeploymentMsgCloseGroupResponse as decodeAkashDeploymentV1beta3MsgCloseGroupResponse, decodeAkashDeploymentMsgPauseGroup as decodeAkashDeploymentV1beta3MsgPauseGroup, decodeAkashDeploymentMsgPauseGroupResponse as decodeAkashDeploymentV1beta3MsgPauseGroupResponse, decodeAkashDeploymentMsgStartGroup as decodeAkashDeploymentV1beta3MsgStartGroup, decodeAkashDeploymentMsgStartGroupResponse as decodeAkashDeploymentV1beta3MsgStartGroupResponse } from './akash/deployment/v1beta3/groupmsg.js';
import { decodeAkashDeploymentGroupSpec as decodeAkashDeploymentV1beta3GroupSpec, encodeAkashDeploymentGroupSpec as encodeAkashDeploymentV1beta3GroupSpec } from './akash/deployment/v1beta3/groupspec.js';
import { decodeAkashDeploymentParams as decodeAkashDeploymentV1beta3Params, encodeAkashDeploymentParams as encodeAkashDeploymentV1beta3Params } from './akash/deployment/v1beta3/params.js';
import { encodeAkashDeploymentQueryDeploymentsRequest as encodeAkashDeploymentV1beta3QueryDeploymentsRequest, encodeAkashDeploymentQueryDeploymentsResponse as encodeAkashDeploymentV1beta3QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentResponse as decodeAkashDeploymentV1beta3QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentResponse as encodeAkashDeploymentV1beta3QueryDeploymentResponse, encodeAkashDeploymentQueryDeploymentRequest as encodeAkashDeploymentV1beta3QueryDeploymentRequest, encodeAkashDeploymentQueryGroupRequest as encodeAkashDeploymentV1beta3QueryGroupRequest, encodeAkashDeploymentQueryGroupResponse as encodeAkashDeploymentV1beta3QueryGroupResponse, decodeAkashDeploymentQueryDeploymentsRequest as decodeAkashDeploymentV1beta3QueryDeploymentsRequest, decodeAkashDeploymentQueryDeploymentsResponse as decodeAkashDeploymentV1beta3QueryDeploymentsResponse, decodeAkashDeploymentQueryDeploymentRequest as decodeAkashDeploymentV1beta3QueryDeploymentRequest, decodeAkashDeploymentQueryGroupRequest as decodeAkashDeploymentV1beta3QueryGroupRequest, decodeAkashDeploymentQueryGroupResponse as decodeAkashDeploymentV1beta3QueryGroupResponse } from './akash/deployment/v1beta3/query.js';
import { encodeAkashDeploymentResourceUnit as encodeAkashDeploymentV1beta3ResourceUnit, decodeAkashDeploymentResourceUnit as decodeAkashDeploymentV1beta3ResourceUnit } from './akash/deployment/v1beta3/resourceunit.js';
import { encodeAkashEscrowGenesisState as encodeAkashEscrowV1beta1GenesisState, decodeAkashEscrowGenesisState as decodeAkashEscrowV1beta1GenesisState } from './akash/escrow/v1beta1/genesis.js';
import { encodeAkashEscrowQueryAccountsRequest as encodeAkashEscrowV1beta1QueryAccountsRequest, encodeAkashEscrowQueryAccountsResponse as encodeAkashEscrowV1beta1QueryAccountsResponse, encodeAkashEscrowQueryPaymentsRequest as encodeAkashEscrowV1beta1QueryPaymentsRequest, encodeAkashEscrowQueryPaymentsResponse as encodeAkashEscrowV1beta1QueryPaymentsResponse, decodeAkashEscrowQueryAccountsRequest as decodeAkashEscrowV1beta1QueryAccountsRequest, decodeAkashEscrowQueryAccountsResponse as decodeAkashEscrowV1beta1QueryAccountsResponse, decodeAkashEscrowQueryPaymentsRequest as decodeAkashEscrowV1beta1QueryPaymentsRequest, decodeAkashEscrowQueryPaymentsResponse as decodeAkashEscrowV1beta1QueryPaymentsResponse } from './akash/escrow/v1beta1/query.js';
import { decodeAkashEscrowAccount as decodeAkashEscrowV1beta1Account, encodeAkashEscrowAccount as encodeAkashEscrowV1beta1Account, decodeAkashEscrowAccountID as decodeAkashEscrowV1beta1AccountID, JsonToProtoEnumAkashEscrowAccountState as JsonToProtoEnumAkashEscrowV1beta1AccountState, ProtoToJsonEnumAkashEscrowAccountState as ProtoToJsonEnumAkashEscrowV1beta1AccountState, encodeAkashEscrowAccountID as encodeAkashEscrowV1beta1AccountID, encodeAkashEscrowPayment as encodeAkashEscrowV1beta1Payment, JsonToProtoEnumAkashEscrowPaymentState as JsonToProtoEnumAkashEscrowV1beta1PaymentState, ProtoToJsonEnumAkashEscrowPaymentState as ProtoToJsonEnumAkashEscrowV1beta1PaymentState, decodeAkashEscrowPayment as decodeAkashEscrowV1beta1Payment } from './akash/escrow/v1beta1/types.js';
import { encodeAkashEscrowGenesisState as encodeAkashEscrowV1beta2GenesisState, decodeAkashEscrowGenesisState as decodeAkashEscrowV1beta2GenesisState } from './akash/escrow/v1beta2/genesis.js';
import { encodeAkashEscrowQueryAccountsRequest as encodeAkashEscrowV1beta2QueryAccountsRequest, encodeAkashEscrowQueryAccountsResponse as encodeAkashEscrowV1beta2QueryAccountsResponse, encodeAkashEscrowQueryPaymentsRequest as encodeAkashEscrowV1beta2QueryPaymentsRequest, encodeAkashEscrowQueryPaymentsResponse as encodeAkashEscrowV1beta2QueryPaymentsResponse, decodeAkashEscrowQueryAccountsRequest as decodeAkashEscrowV1beta2QueryAccountsRequest, decodeAkashEscrowQueryAccountsResponse as decodeAkashEscrowV1beta2QueryAccountsResponse, decodeAkashEscrowQueryPaymentsRequest as decodeAkashEscrowV1beta2QueryPaymentsRequest, decodeAkashEscrowQueryPaymentsResponse as decodeAkashEscrowV1beta2QueryPaymentsResponse } from './akash/escrow/v1beta2/query.js';
import { decodeAkashEscrowAccount as decodeAkashEscrowV1beta2Account, encodeAkashEscrowAccount as encodeAkashEscrowV1beta2Account, decodeAkashEscrowAccountID as decodeAkashEscrowV1beta2AccountID, JsonToProtoEnumAkashEscrowAccountState as JsonToProtoEnumAkashEscrowV1beta2AccountState, ProtoToJsonEnumAkashEscrowAccountState as ProtoToJsonEnumAkashEscrowV1beta2AccountState, encodeAkashEscrowAccountID as encodeAkashEscrowV1beta2AccountID, encodeAkashEscrowFractionalPayment as encodeAkashEscrowV1beta2FractionalPayment, JsonToProtoEnumAkashEscrowFractionalPaymentState as JsonToProtoEnumAkashEscrowV1beta2FractionalPaymentState, ProtoToJsonEnumAkashEscrowFractionalPaymentState as ProtoToJsonEnumAkashEscrowV1beta2FractionalPaymentState, decodeAkashEscrowFractionalPayment as decodeAkashEscrowV1beta2FractionalPayment } from './akash/escrow/v1beta2/types.js';
import { encodeAkashEscrowGenesisState as encodeAkashEscrowV1beta3GenesisState, decodeAkashEscrowGenesisState as decodeAkashEscrowV1beta3GenesisState } from './akash/escrow/v1beta3/genesis.js';
import { encodeAkashEscrowQueryAccountsRequest as encodeAkashEscrowV1beta3QueryAccountsRequest, encodeAkashEscrowQueryAccountsResponse as encodeAkashEscrowV1beta3QueryAccountsResponse, encodeAkashEscrowQueryPaymentsRequest as encodeAkashEscrowV1beta3QueryPaymentsRequest, encodeAkashEscrowQueryPaymentsResponse as encodeAkashEscrowV1beta3QueryPaymentsResponse, decodeAkashEscrowQueryAccountsRequest as decodeAkashEscrowV1beta3QueryAccountsRequest, decodeAkashEscrowQueryAccountsResponse as decodeAkashEscrowV1beta3QueryAccountsResponse, decodeAkashEscrowQueryPaymentsRequest as decodeAkashEscrowV1beta3QueryPaymentsRequest, decodeAkashEscrowQueryPaymentsResponse as decodeAkashEscrowV1beta3QueryPaymentsResponse } from './akash/escrow/v1beta3/query.js';
import { decodeAkashEscrowAccount as decodeAkashEscrowV1beta3Account, encodeAkashEscrowAccount as encodeAkashEscrowV1beta3Account, decodeAkashEscrowAccountID as decodeAkashEscrowV1beta3AccountID, JsonToProtoEnumAkashEscrowAccountState as JsonToProtoEnumAkashEscrowV1beta3AccountState, ProtoToJsonEnumAkashEscrowAccountState as ProtoToJsonEnumAkashEscrowV1beta3AccountState, encodeAkashEscrowAccountID as encodeAkashEscrowV1beta3AccountID, encodeAkashEscrowFractionalPayment as encodeAkashEscrowV1beta3FractionalPayment, JsonToProtoEnumAkashEscrowFractionalPaymentState as JsonToProtoEnumAkashEscrowV1beta3FractionalPaymentState, ProtoToJsonEnumAkashEscrowFractionalPaymentState as ProtoToJsonEnumAkashEscrowV1beta3FractionalPaymentState, decodeAkashEscrowFractionalPayment as decodeAkashEscrowV1beta3FractionalPayment } from './akash/escrow/v1beta3/types.js';
import { encodeAkashGovGenesisState as encodeAkashGovV1beta3GenesisState, decodeAkashGovGenesisState as decodeAkashGovV1beta3GenesisState } from './akash/gov/v1beta3/genesis.js';
import { decodeAkashGovDepositParams as decodeAkashGovV1beta3DepositParams, encodeAkashGovDepositParams as encodeAkashGovV1beta3DepositParams } from './akash/gov/v1beta3/params.js';
import { encodeAkashInflationGenesisState as encodeAkashInflationV1beta2GenesisState, decodeAkashInflationGenesisState as decodeAkashInflationV1beta2GenesisState } from './akash/inflation/v1beta2/genesis.js';
import { decodeAkashInflationParams as decodeAkashInflationV1beta2Params, encodeAkashInflationParams as encodeAkashInflationV1beta2Params } from './akash/inflation/v1beta2/params.js';
import { encodeAkashInflationGenesisState as encodeAkashInflationV1beta3GenesisState, decodeAkashInflationGenesisState as decodeAkashInflationV1beta3GenesisState } from './akash/inflation/v1beta3/genesis.js';
import { decodeAkashInflationParams as decodeAkashInflationV1beta3Params, encodeAkashInflationParams as encodeAkashInflationV1beta3Params } from './akash/inflation/v1beta3/params.js';
import { encodeAkashMarketMsgCreateBid as encodeAkashMarketV1beta2MsgCreateBid, encodeAkashMarketMsgCreateBidResponse as encodeAkashMarketV1beta2MsgCreateBidResponse, encodeAkashMarketMsgCloseBid as encodeAkashMarketV1beta2MsgCloseBid, decodeAkashMarketBidID as decodeAkashMarketV1beta2BidID, encodeAkashMarketBidID as encodeAkashMarketV1beta2BidID, encodeAkashMarketMsgCloseBidResponse as encodeAkashMarketV1beta2MsgCloseBidResponse, encodeAkashMarketBid as encodeAkashMarketV1beta2Bid, JsonToProtoEnumAkashMarketBidState as JsonToProtoEnumAkashMarketV1beta2BidState, ProtoToJsonEnumAkashMarketBidState as ProtoToJsonEnumAkashMarketV1beta2BidState, encodeAkashMarketBidFilters as encodeAkashMarketV1beta2BidFilters, decodeAkashMarketBidFilters as decodeAkashMarketV1beta2BidFilters, decodeAkashMarketBid as decodeAkashMarketV1beta2Bid, decodeAkashMarketMsgCreateBid as decodeAkashMarketV1beta2MsgCreateBid, decodeAkashMarketMsgCreateBidResponse as decodeAkashMarketV1beta2MsgCreateBidResponse, decodeAkashMarketMsgCloseBid as decodeAkashMarketV1beta2MsgCloseBid, decodeAkashMarketMsgCloseBidResponse as decodeAkashMarketV1beta2MsgCloseBidResponse } from './akash/market/v1beta2/bid.js';
import { encodeAkashMarketGenesisState as encodeAkashMarketV1beta2GenesisState, decodeAkashMarketGenesisState as decodeAkashMarketV1beta2GenesisState } from './akash/market/v1beta2/genesis.js';
import { decodeAkashMarketLeaseFilters as decodeAkashMarketV1beta2LeaseFilters, encodeAkashMarketLeaseFilters as encodeAkashMarketV1beta2LeaseFilters, decodeAkashMarketLease as decodeAkashMarketV1beta2Lease, encodeAkashMarketLease as encodeAkashMarketV1beta2Lease, decodeAkashMarketLeaseID as decodeAkashMarketV1beta2LeaseID, JsonToProtoEnumAkashMarketLeaseState as JsonToProtoEnumAkashMarketV1beta2LeaseState, ProtoToJsonEnumAkashMarketLeaseState as ProtoToJsonEnumAkashMarketV1beta2LeaseState, encodeAkashMarketLeaseID as encodeAkashMarketV1beta2LeaseID, encodeAkashMarketMsgWithdrawLease as encodeAkashMarketV1beta2MsgWithdrawLease, encodeAkashMarketMsgCreateLease as encodeAkashMarketV1beta2MsgCreateLease, encodeAkashMarketMsgCloseLease as encodeAkashMarketV1beta2MsgCloseLease, encodeAkashMarketMsgCreateLeaseResponse as encodeAkashMarketV1beta2MsgCreateLeaseResponse, encodeAkashMarketMsgWithdrawLeaseResponse as encodeAkashMarketV1beta2MsgWithdrawLeaseResponse, encodeAkashMarketMsgCloseLeaseResponse as encodeAkashMarketV1beta2MsgCloseLeaseResponse, decodeAkashMarketMsgWithdrawLease as decodeAkashMarketV1beta2MsgWithdrawLease, decodeAkashMarketMsgCreateLease as decodeAkashMarketV1beta2MsgCreateLease, decodeAkashMarketMsgCloseLease as decodeAkashMarketV1beta2MsgCloseLease, decodeAkashMarketMsgCreateLeaseResponse as decodeAkashMarketV1beta2MsgCreateLeaseResponse, decodeAkashMarketMsgWithdrawLeaseResponse as decodeAkashMarketV1beta2MsgWithdrawLeaseResponse, decodeAkashMarketMsgCloseLeaseResponse as decodeAkashMarketV1beta2MsgCloseLeaseResponse } from './akash/market/v1beta2/lease.js';
import { decodeAkashMarketOrderID as decodeAkashMarketV1beta2OrderID, encodeAkashMarketOrderID as encodeAkashMarketV1beta2OrderID, decodeAkashMarketOrderFilters as decodeAkashMarketV1beta2OrderFilters, encodeAkashMarketOrderFilters as encodeAkashMarketV1beta2OrderFilters, decodeAkashMarketOrder as decodeAkashMarketV1beta2Order, encodeAkashMarketOrder as encodeAkashMarketV1beta2Order, JsonToProtoEnumAkashMarketOrderState as JsonToProtoEnumAkashMarketV1beta2OrderState, ProtoToJsonEnumAkashMarketOrderState as ProtoToJsonEnumAkashMarketV1beta2OrderState } from './akash/market/v1beta2/order.js';
import { decodeAkashMarketParams as decodeAkashMarketV1beta2Params, encodeAkashMarketParams as encodeAkashMarketV1beta2Params } from './akash/market/v1beta2/params.js';
import { encodeAkashMarketQueryOrdersRequest as encodeAkashMarketV1beta2QueryOrdersRequest, encodeAkashMarketQueryOrdersResponse as encodeAkashMarketV1beta2QueryOrdersResponse, encodeAkashMarketQueryOrderRequest as encodeAkashMarketV1beta2QueryOrderRequest, encodeAkashMarketQueryOrderResponse as encodeAkashMarketV1beta2QueryOrderResponse, encodeAkashMarketQueryBidsRequest as encodeAkashMarketV1beta2QueryBidsRequest, encodeAkashMarketQueryBidsResponse as encodeAkashMarketV1beta2QueryBidsResponse, decodeAkashMarketQueryBidResponse as decodeAkashMarketV1beta2QueryBidResponse, encodeAkashMarketQueryBidResponse as encodeAkashMarketV1beta2QueryBidResponse, encodeAkashMarketQueryBidRequest as encodeAkashMarketV1beta2QueryBidRequest, encodeAkashMarketQueryLeasesRequest as encodeAkashMarketV1beta2QueryLeasesRequest, encodeAkashMarketQueryLeasesResponse as encodeAkashMarketV1beta2QueryLeasesResponse, decodeAkashMarketQueryLeaseResponse as decodeAkashMarketV1beta2QueryLeaseResponse, encodeAkashMarketQueryLeaseResponse as encodeAkashMarketV1beta2QueryLeaseResponse, encodeAkashMarketQueryLeaseRequest as encodeAkashMarketV1beta2QueryLeaseRequest, decodeAkashMarketQueryOrdersRequest as decodeAkashMarketV1beta2QueryOrdersRequest, decodeAkashMarketQueryOrdersResponse as decodeAkashMarketV1beta2QueryOrdersResponse, decodeAkashMarketQueryOrderRequest as decodeAkashMarketV1beta2QueryOrderRequest, decodeAkashMarketQueryOrderResponse as decodeAkashMarketV1beta2QueryOrderResponse, decodeAkashMarketQueryBidsRequest as decodeAkashMarketV1beta2QueryBidsRequest, decodeAkashMarketQueryBidsResponse as decodeAkashMarketV1beta2QueryBidsResponse, decodeAkashMarketQueryBidRequest as decodeAkashMarketV1beta2QueryBidRequest, decodeAkashMarketQueryLeasesRequest as decodeAkashMarketV1beta2QueryLeasesRequest, decodeAkashMarketQueryLeasesResponse as decodeAkashMarketV1beta2QueryLeasesResponse, decodeAkashMarketQueryLeaseRequest as decodeAkashMarketV1beta2QueryLeaseRequest } from './akash/market/v1beta2/query.js';
import { encodeAkashMarketMsgCreateBid as encodeAkashMarketV1beta3MsgCreateBid, encodeAkashMarketMsgCreateBidResponse as encodeAkashMarketV1beta3MsgCreateBidResponse, encodeAkashMarketMsgCloseBid as encodeAkashMarketV1beta3MsgCloseBid, decodeAkashMarketBidID as decodeAkashMarketV1beta3BidID, encodeAkashMarketBidID as encodeAkashMarketV1beta3BidID, encodeAkashMarketMsgCloseBidResponse as encodeAkashMarketV1beta3MsgCloseBidResponse, encodeAkashMarketBid as encodeAkashMarketV1beta3Bid, JsonToProtoEnumAkashMarketBidState as JsonToProtoEnumAkashMarketV1beta3BidState, ProtoToJsonEnumAkashMarketBidState as ProtoToJsonEnumAkashMarketV1beta3BidState, encodeAkashMarketBidFilters as encodeAkashMarketV1beta3BidFilters, decodeAkashMarketBidFilters as decodeAkashMarketV1beta3BidFilters, decodeAkashMarketBid as decodeAkashMarketV1beta3Bid, decodeAkashMarketMsgCreateBid as decodeAkashMarketV1beta3MsgCreateBid, decodeAkashMarketMsgCreateBidResponse as decodeAkashMarketV1beta3MsgCreateBidResponse, decodeAkashMarketMsgCloseBid as decodeAkashMarketV1beta3MsgCloseBid, decodeAkashMarketMsgCloseBidResponse as decodeAkashMarketV1beta3MsgCloseBidResponse } from './akash/market/v1beta3/bid.js';
import { encodeAkashMarketGenesisState as encodeAkashMarketV1beta3GenesisState, decodeAkashMarketGenesisState as decodeAkashMarketV1beta3GenesisState } from './akash/market/v1beta3/genesis.js';
import { decodeAkashMarketLeaseFilters as decodeAkashMarketV1beta3LeaseFilters, encodeAkashMarketLeaseFilters as encodeAkashMarketV1beta3LeaseFilters, decodeAkashMarketLease as decodeAkashMarketV1beta3Lease, encodeAkashMarketLease as encodeAkashMarketV1beta3Lease, decodeAkashMarketLeaseID as decodeAkashMarketV1beta3LeaseID, JsonToProtoEnumAkashMarketLeaseState as JsonToProtoEnumAkashMarketV1beta3LeaseState, ProtoToJsonEnumAkashMarketLeaseState as ProtoToJsonEnumAkashMarketV1beta3LeaseState, encodeAkashMarketLeaseID as encodeAkashMarketV1beta3LeaseID, encodeAkashMarketMsgWithdrawLease as encodeAkashMarketV1beta3MsgWithdrawLease, encodeAkashMarketMsgCreateLease as encodeAkashMarketV1beta3MsgCreateLease, encodeAkashMarketMsgCloseLease as encodeAkashMarketV1beta3MsgCloseLease, encodeAkashMarketMsgCreateLeaseResponse as encodeAkashMarketV1beta3MsgCreateLeaseResponse, encodeAkashMarketMsgWithdrawLeaseResponse as encodeAkashMarketV1beta3MsgWithdrawLeaseResponse, encodeAkashMarketMsgCloseLeaseResponse as encodeAkashMarketV1beta3MsgCloseLeaseResponse, decodeAkashMarketMsgWithdrawLease as decodeAkashMarketV1beta3MsgWithdrawLease, decodeAkashMarketMsgCreateLease as decodeAkashMarketV1beta3MsgCreateLease, decodeAkashMarketMsgCloseLease as decodeAkashMarketV1beta3MsgCloseLease, decodeAkashMarketMsgCreateLeaseResponse as decodeAkashMarketV1beta3MsgCreateLeaseResponse, decodeAkashMarketMsgWithdrawLeaseResponse as decodeAkashMarketV1beta3MsgWithdrawLeaseResponse, decodeAkashMarketMsgCloseLeaseResponse as decodeAkashMarketV1beta3MsgCloseLeaseResponse } from './akash/market/v1beta3/lease.js';
import { decodeAkashMarketOrderID as decodeAkashMarketV1beta3OrderID, encodeAkashMarketOrderID as encodeAkashMarketV1beta3OrderID, decodeAkashMarketOrderFilters as decodeAkashMarketV1beta3OrderFilters, encodeAkashMarketOrderFilters as encodeAkashMarketV1beta3OrderFilters, decodeAkashMarketOrder as decodeAkashMarketV1beta3Order, encodeAkashMarketOrder as encodeAkashMarketV1beta3Order, JsonToProtoEnumAkashMarketOrderState as JsonToProtoEnumAkashMarketV1beta3OrderState, ProtoToJsonEnumAkashMarketOrderState as ProtoToJsonEnumAkashMarketV1beta3OrderState } from './akash/market/v1beta3/order.js';
import { decodeAkashMarketParams as decodeAkashMarketV1beta3Params, encodeAkashMarketParams as encodeAkashMarketV1beta3Params } from './akash/market/v1beta3/params.js';
import { encodeAkashMarketQueryOrdersRequest as encodeAkashMarketV1beta3QueryOrdersRequest, encodeAkashMarketQueryOrdersResponse as encodeAkashMarketV1beta3QueryOrdersResponse, encodeAkashMarketQueryOrderRequest as encodeAkashMarketV1beta3QueryOrderRequest, encodeAkashMarketQueryOrderResponse as encodeAkashMarketV1beta3QueryOrderResponse, encodeAkashMarketQueryBidsRequest as encodeAkashMarketV1beta3QueryBidsRequest, encodeAkashMarketQueryBidsResponse as encodeAkashMarketV1beta3QueryBidsResponse, decodeAkashMarketQueryBidResponse as decodeAkashMarketV1beta3QueryBidResponse, encodeAkashMarketQueryBidResponse as encodeAkashMarketV1beta3QueryBidResponse, encodeAkashMarketQueryBidRequest as encodeAkashMarketV1beta3QueryBidRequest, encodeAkashMarketQueryLeasesRequest as encodeAkashMarketV1beta3QueryLeasesRequest, encodeAkashMarketQueryLeasesResponse as encodeAkashMarketV1beta3QueryLeasesResponse, decodeAkashMarketQueryLeaseResponse as decodeAkashMarketV1beta3QueryLeaseResponse, encodeAkashMarketQueryLeaseResponse as encodeAkashMarketV1beta3QueryLeaseResponse, encodeAkashMarketQueryLeaseRequest as encodeAkashMarketV1beta3QueryLeaseRequest, decodeAkashMarketQueryOrdersRequest as decodeAkashMarketV1beta3QueryOrdersRequest, decodeAkashMarketQueryOrdersResponse as decodeAkashMarketV1beta3QueryOrdersResponse, decodeAkashMarketQueryOrderRequest as decodeAkashMarketV1beta3QueryOrderRequest, decodeAkashMarketQueryOrderResponse as decodeAkashMarketV1beta3QueryOrderResponse, decodeAkashMarketQueryBidsRequest as decodeAkashMarketV1beta3QueryBidsRequest, decodeAkashMarketQueryBidsResponse as decodeAkashMarketV1beta3QueryBidsResponse, decodeAkashMarketQueryBidRequest as decodeAkashMarketV1beta3QueryBidRequest, decodeAkashMarketQueryLeasesRequest as decodeAkashMarketV1beta3QueryLeasesRequest, decodeAkashMarketQueryLeasesResponse as decodeAkashMarketV1beta3QueryLeasesResponse, decodeAkashMarketQueryLeaseRequest as decodeAkashMarketV1beta3QueryLeaseRequest } from './akash/market/v1beta3/query.js';
import { encodeAkashProviderProviderInfo as encodeAkashProviderV1beta1ProviderInfo, encodeAkashProviderMsgCreateProvider as encodeAkashProviderV1beta1MsgCreateProvider, decodeAkashProviderProviderInfo as decodeAkashProviderV1beta1ProviderInfo, encodeAkashProviderMsgCreateProviderResponse as encodeAkashProviderV1beta1MsgCreateProviderResponse, encodeAkashProviderMsgUpdateProvider as encodeAkashProviderV1beta1MsgUpdateProvider, encodeAkashProviderMsgUpdateProviderResponse as encodeAkashProviderV1beta1MsgUpdateProviderResponse, encodeAkashProviderMsgDeleteProvider as encodeAkashProviderV1beta1MsgDeleteProvider, encodeAkashProviderMsgDeleteProviderResponse as encodeAkashProviderV1beta1MsgDeleteProviderResponse, encodeAkashProviderProvider as encodeAkashProviderV1beta1Provider, decodeAkashProviderMsgCreateProvider as decodeAkashProviderV1beta1MsgCreateProvider, decodeAkashProviderMsgCreateProviderResponse as decodeAkashProviderV1beta1MsgCreateProviderResponse, decodeAkashProviderMsgUpdateProvider as decodeAkashProviderV1beta1MsgUpdateProvider, decodeAkashProviderMsgUpdateProviderResponse as decodeAkashProviderV1beta1MsgUpdateProviderResponse, decodeAkashProviderMsgDeleteProvider as decodeAkashProviderV1beta1MsgDeleteProvider, decodeAkashProviderMsgDeleteProviderResponse as decodeAkashProviderV1beta1MsgDeleteProviderResponse, decodeAkashProviderProvider as decodeAkashProviderV1beta1Provider } from './akash/provider/v1beta1/provider.js';
import { encodeAkashProviderGenesisState as encodeAkashProviderV1beta2GenesisState, decodeAkashProviderGenesisState as decodeAkashProviderV1beta2GenesisState } from './akash/provider/v1beta2/genesis.js';
import { decodeAkashProviderProvider as decodeAkashProviderV1beta2Provider, encodeAkashProviderProvider as encodeAkashProviderV1beta2Provider, decodeAkashProviderProviderInfo as decodeAkashProviderV1beta2ProviderInfo, encodeAkashProviderProviderInfo as encodeAkashProviderV1beta2ProviderInfo, encodeAkashProviderMsgCreateProvider as encodeAkashProviderV1beta2MsgCreateProvider, encodeAkashProviderMsgCreateProviderResponse as encodeAkashProviderV1beta2MsgCreateProviderResponse, encodeAkashProviderMsgUpdateProvider as encodeAkashProviderV1beta2MsgUpdateProvider, encodeAkashProviderMsgUpdateProviderResponse as encodeAkashProviderV1beta2MsgUpdateProviderResponse, encodeAkashProviderMsgDeleteProvider as encodeAkashProviderV1beta2MsgDeleteProvider, encodeAkashProviderMsgDeleteProviderResponse as encodeAkashProviderV1beta2MsgDeleteProviderResponse, decodeAkashProviderMsgCreateProvider as decodeAkashProviderV1beta2MsgCreateProvider, decodeAkashProviderMsgCreateProviderResponse as decodeAkashProviderV1beta2MsgCreateProviderResponse, decodeAkashProviderMsgUpdateProvider as decodeAkashProviderV1beta2MsgUpdateProvider, decodeAkashProviderMsgUpdateProviderResponse as decodeAkashProviderV1beta2MsgUpdateProviderResponse, decodeAkashProviderMsgDeleteProvider as decodeAkashProviderV1beta2MsgDeleteProvider, decodeAkashProviderMsgDeleteProviderResponse as decodeAkashProviderV1beta2MsgDeleteProviderResponse } from './akash/provider/v1beta2/provider.js';
import { encodeAkashProviderQueryProvidersRequest as encodeAkashProviderV1beta2QueryProvidersRequest, encodeAkashProviderQueryProvidersResponse as encodeAkashProviderV1beta2QueryProvidersResponse, encodeAkashProviderQueryProviderRequest as encodeAkashProviderV1beta2QueryProviderRequest, encodeAkashProviderQueryProviderResponse as encodeAkashProviderV1beta2QueryProviderResponse, decodeAkashProviderQueryProvidersRequest as decodeAkashProviderV1beta2QueryProvidersRequest, decodeAkashProviderQueryProvidersResponse as decodeAkashProviderV1beta2QueryProvidersResponse, decodeAkashProviderQueryProviderRequest as decodeAkashProviderV1beta2QueryProviderRequest, decodeAkashProviderQueryProviderResponse as decodeAkashProviderV1beta2QueryProviderResponse } from './akash/provider/v1beta2/query.js';
import { encodeAkashProviderGenesisState as encodeAkashProviderV1beta3GenesisState, decodeAkashProviderGenesisState as decodeAkashProviderV1beta3GenesisState } from './akash/provider/v1beta3/genesis.js';
import { decodeAkashProviderProvider as decodeAkashProviderV1beta3Provider, encodeAkashProviderProvider as encodeAkashProviderV1beta3Provider, decodeAkashProviderProviderInfo as decodeAkashProviderV1beta3ProviderInfo, encodeAkashProviderProviderInfo as encodeAkashProviderV1beta3ProviderInfo, encodeAkashProviderMsgCreateProvider as encodeAkashProviderV1beta3MsgCreateProvider, encodeAkashProviderMsgCreateProviderResponse as encodeAkashProviderV1beta3MsgCreateProviderResponse, encodeAkashProviderMsgUpdateProvider as encodeAkashProviderV1beta3MsgUpdateProvider, encodeAkashProviderMsgUpdateProviderResponse as encodeAkashProviderV1beta3MsgUpdateProviderResponse, encodeAkashProviderMsgDeleteProvider as encodeAkashProviderV1beta3MsgDeleteProvider, encodeAkashProviderMsgDeleteProviderResponse as encodeAkashProviderV1beta3MsgDeleteProviderResponse, decodeAkashProviderMsgCreateProvider as decodeAkashProviderV1beta3MsgCreateProvider, decodeAkashProviderMsgCreateProviderResponse as decodeAkashProviderV1beta3MsgCreateProviderResponse, decodeAkashProviderMsgUpdateProvider as decodeAkashProviderV1beta3MsgUpdateProvider, decodeAkashProviderMsgUpdateProviderResponse as decodeAkashProviderV1beta3MsgUpdateProviderResponse, decodeAkashProviderMsgDeleteProvider as decodeAkashProviderV1beta3MsgDeleteProvider, decodeAkashProviderMsgDeleteProviderResponse as decodeAkashProviderV1beta3MsgDeleteProviderResponse } from './akash/provider/v1beta3/provider.js';
import { encodeAkashProviderQueryProvidersRequest as encodeAkashProviderV1beta3QueryProvidersRequest, encodeAkashProviderQueryProvidersResponse as encodeAkashProviderV1beta3QueryProvidersResponse, encodeAkashProviderQueryProviderRequest as encodeAkashProviderV1beta3QueryProviderRequest, encodeAkashProviderQueryProviderResponse as encodeAkashProviderV1beta3QueryProviderResponse, decodeAkashProviderQueryProvidersRequest as decodeAkashProviderV1beta3QueryProvidersRequest, decodeAkashProviderQueryProvidersResponse as decodeAkashProviderV1beta3QueryProvidersResponse, decodeAkashProviderQueryProviderRequest as decodeAkashProviderV1beta3QueryProviderRequest, decodeAkashProviderQueryProviderResponse as decodeAkashProviderV1beta3QueryProviderResponse } from './akash/provider/v1beta3/query.js';
import { encodeAkashStakingGenesisState as encodeAkashStakingV1beta3GenesisState, decodeAkashStakingGenesisState as decodeAkashStakingV1beta3GenesisState } from './akash/staking/v1beta3/genesis.js';
import { decodeAkashStakingParams as decodeAkashStakingV1beta3Params, encodeAkashStakingParams as encodeAkashStakingV1beta3Params } from './akash/staking/v1beta3/params.js';
import { encodeAkashTakeGenesisState as encodeAkashTakeV1beta3GenesisState, decodeAkashTakeGenesisState as decodeAkashTakeV1beta3GenesisState } from './akash/take/v1beta3/genesis.js';
import { decodeAkashTakeParams as decodeAkashTakeV1beta3Params, encodeAkashTakeParams as encodeAkashTakeV1beta3Params, decodeAkashTakeDenomTakeRate as decodeAkashTakeV1beta3DenomTakeRate, encodeAkashTakeDenomTakeRate as encodeAkashTakeV1beta3DenomTakeRate } from './akash/take/v1beta3/params.js';
import { encodeAxelarAxelarnetIBCTransferSent as encodeAxelarAxelarnetV1beta1IBCTransferSent, encodeAxelarAxelarnetIBCTransferCompleted as encodeAxelarAxelarnetV1beta1IBCTransferCompleted, encodeAxelarAxelarnetIBCTransferFailed as encodeAxelarAxelarnetV1beta1IBCTransferFailed, encodeAxelarAxelarnetIBCTransferRetried as encodeAxelarAxelarnetV1beta1IBCTransferRetried, encodeAxelarAxelarnetAxelarTransferCompleted as encodeAxelarAxelarnetV1beta1AxelarTransferCompleted, encodeAxelarAxelarnetFeeCollected as encodeAxelarAxelarnetV1beta1FeeCollected, encodeAxelarAxelarnetFeePaid as encodeAxelarAxelarnetV1beta1FeePaid, encodeAxelarAxelarnetContractCallSubmitted as encodeAxelarAxelarnetV1beta1ContractCallSubmitted, encodeAxelarAxelarnetContractCallWithTokenSubmitted as encodeAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted, encodeAxelarAxelarnetTokenSent as encodeAxelarAxelarnetV1beta1TokenSent, decodeAxelarAxelarnetIBCTransferSent as decodeAxelarAxelarnetV1beta1IBCTransferSent, decodeAxelarAxelarnetIBCTransferCompleted as decodeAxelarAxelarnetV1beta1IBCTransferCompleted, decodeAxelarAxelarnetIBCTransferFailed as decodeAxelarAxelarnetV1beta1IBCTransferFailed, decodeAxelarAxelarnetIBCTransferRetried as decodeAxelarAxelarnetV1beta1IBCTransferRetried, decodeAxelarAxelarnetAxelarTransferCompleted as decodeAxelarAxelarnetV1beta1AxelarTransferCompleted, decodeAxelarAxelarnetFeeCollected as decodeAxelarAxelarnetV1beta1FeeCollected, decodeAxelarAxelarnetFeePaid as decodeAxelarAxelarnetV1beta1FeePaid, decodeAxelarAxelarnetContractCallSubmitted as decodeAxelarAxelarnetV1beta1ContractCallSubmitted, decodeAxelarAxelarnetContractCallWithTokenSubmitted as decodeAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted, decodeAxelarAxelarnetTokenSent as decodeAxelarAxelarnetV1beta1TokenSent } from './axelar/axelarnet/v1beta1/events.js';
import { encodeAxelarAxelarnetGenesisState as encodeAxelarAxelarnetV1beta1GenesisState, decodeAxelarAxelarnetGenesisStateSeqIdMappingEntry as decodeAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry, encodeAxelarAxelarnetGenesisStateSeqIdMappingEntry as encodeAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry, decodeAxelarAxelarnetGenesisState as decodeAxelarAxelarnetV1beta1GenesisState } from './axelar/axelarnet/v1beta1/genesis.js';
import { decodeAxelarAxelarnetParams as decodeAxelarAxelarnetV1beta1Params, encodeAxelarAxelarnetParams as encodeAxelarAxelarnetV1beta1Params, decodeAxelarAxelarnetCallContractProposalMinDeposit as decodeAxelarAxelarnetV1beta1CallContractProposalMinDeposit, encodeAxelarAxelarnetCallContractProposalMinDeposit as encodeAxelarAxelarnetV1beta1CallContractProposalMinDeposit } from './axelar/axelarnet/v1beta1/params.js';
import { encodeAxelarAxelarnetCallContractsProposal as encodeAxelarAxelarnetV1beta1CallContractsProposal, decodeAxelarAxelarnetContractCall as decodeAxelarAxelarnetV1beta1ContractCall, encodeAxelarAxelarnetContractCall as encodeAxelarAxelarnetV1beta1ContractCall, decodeAxelarAxelarnetCallContractsProposal as decodeAxelarAxelarnetV1beta1CallContractsProposal } from './axelar/axelarnet/v1beta1/proposal.js';
import { encodeAxelarAxelarnetPendingIBCTransferCountRequest as encodeAxelarAxelarnetV1beta1PendingIBCTransferCountRequest, encodeAxelarAxelarnetPendingIBCTransferCountResponse as encodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponse, decodeAxelarAxelarnetPendingIBCTransferCountResponseTransfersByChainEntry as decodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry, encodeAxelarAxelarnetPendingIBCTransferCountResponseTransfersByChainEntry as encodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry, encodeAxelarAxelarnetParamsRequest as encodeAxelarAxelarnetV1beta1ParamsRequest, encodeAxelarAxelarnetParamsResponse as encodeAxelarAxelarnetV1beta1ParamsResponse, decodeAxelarAxelarnetPendingIBCTransferCountRequest as decodeAxelarAxelarnetV1beta1PendingIBCTransferCountRequest, decodeAxelarAxelarnetPendingIBCTransferCountResponse as decodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponse, decodeAxelarAxelarnetParamsRequest as decodeAxelarAxelarnetV1beta1ParamsRequest, decodeAxelarAxelarnetParamsResponse as decodeAxelarAxelarnetV1beta1ParamsResponse } from './axelar/axelarnet/v1beta1/query.js';
import { encodeAxelarAxelarnetLinkRequest as encodeAxelarAxelarnetV1beta1LinkRequest, encodeAxelarAxelarnetLinkResponse as encodeAxelarAxelarnetV1beta1LinkResponse, encodeAxelarAxelarnetConfirmDepositRequest as encodeAxelarAxelarnetV1beta1ConfirmDepositRequest, encodeAxelarAxelarnetConfirmDepositResponse as encodeAxelarAxelarnetV1beta1ConfirmDepositResponse, encodeAxelarAxelarnetExecutePendingTransfersRequest as encodeAxelarAxelarnetV1beta1ExecutePendingTransfersRequest, encodeAxelarAxelarnetExecutePendingTransfersResponse as encodeAxelarAxelarnetV1beta1ExecutePendingTransfersResponse, encodeAxelarAxelarnetRegisterIBCPathRequest as encodeAxelarAxelarnetV1beta1RegisterIBCPathRequest, encodeAxelarAxelarnetRegisterIBCPathResponse as encodeAxelarAxelarnetV1beta1RegisterIBCPathResponse, encodeAxelarAxelarnetAddCosmosBasedChainRequest as encodeAxelarAxelarnetV1beta1AddCosmosBasedChainRequest, encodeAxelarAxelarnetAddCosmosBasedChainResponse as encodeAxelarAxelarnetV1beta1AddCosmosBasedChainResponse, encodeAxelarAxelarnetRegisterAssetRequest as encodeAxelarAxelarnetV1beta1RegisterAssetRequest, encodeAxelarAxelarnetRegisterAssetResponse as encodeAxelarAxelarnetV1beta1RegisterAssetResponse, encodeAxelarAxelarnetRouteIBCTransfersRequest as encodeAxelarAxelarnetV1beta1RouteIBCTransfersRequest, encodeAxelarAxelarnetRouteIBCTransfersResponse as encodeAxelarAxelarnetV1beta1RouteIBCTransfersResponse, encodeAxelarAxelarnetRegisterFeeCollectorRequest as encodeAxelarAxelarnetV1beta1RegisterFeeCollectorRequest, encodeAxelarAxelarnetRegisterFeeCollectorResponse as encodeAxelarAxelarnetV1beta1RegisterFeeCollectorResponse, encodeAxelarAxelarnetRetryIBCTransferRequest as encodeAxelarAxelarnetV1beta1RetryIBCTransferRequest, encodeAxelarAxelarnetRetryIBCTransferResponse as encodeAxelarAxelarnetV1beta1RetryIBCTransferResponse, encodeAxelarAxelarnetRouteMessageRequest as encodeAxelarAxelarnetV1beta1RouteMessageRequest, encodeAxelarAxelarnetRouteMessageResponse as encodeAxelarAxelarnetV1beta1RouteMessageResponse, encodeAxelarAxelarnetCallContractRequest as encodeAxelarAxelarnetV1beta1CallContractRequest, encodeAxelarAxelarnetCallContractResponse as encodeAxelarAxelarnetV1beta1CallContractResponse, decodeAxelarAxelarnetLinkRequest as decodeAxelarAxelarnetV1beta1LinkRequest, decodeAxelarAxelarnetLinkResponse as decodeAxelarAxelarnetV1beta1LinkResponse, decodeAxelarAxelarnetConfirmDepositRequest as decodeAxelarAxelarnetV1beta1ConfirmDepositRequest, decodeAxelarAxelarnetConfirmDepositResponse as decodeAxelarAxelarnetV1beta1ConfirmDepositResponse, decodeAxelarAxelarnetExecutePendingTransfersRequest as decodeAxelarAxelarnetV1beta1ExecutePendingTransfersRequest, decodeAxelarAxelarnetExecutePendingTransfersResponse as decodeAxelarAxelarnetV1beta1ExecutePendingTransfersResponse, decodeAxelarAxelarnetRegisterIBCPathRequest as decodeAxelarAxelarnetV1beta1RegisterIBCPathRequest, decodeAxelarAxelarnetRegisterIBCPathResponse as decodeAxelarAxelarnetV1beta1RegisterIBCPathResponse, decodeAxelarAxelarnetAddCosmosBasedChainRequest as decodeAxelarAxelarnetV1beta1AddCosmosBasedChainRequest, decodeAxelarAxelarnetAddCosmosBasedChainResponse as decodeAxelarAxelarnetV1beta1AddCosmosBasedChainResponse, decodeAxelarAxelarnetRegisterAssetRequest as decodeAxelarAxelarnetV1beta1RegisterAssetRequest, decodeAxelarAxelarnetRegisterAssetResponse as decodeAxelarAxelarnetV1beta1RegisterAssetResponse, decodeAxelarAxelarnetRouteIBCTransfersRequest as decodeAxelarAxelarnetV1beta1RouteIBCTransfersRequest, decodeAxelarAxelarnetRouteIBCTransfersResponse as decodeAxelarAxelarnetV1beta1RouteIBCTransfersResponse, decodeAxelarAxelarnetRegisterFeeCollectorRequest as decodeAxelarAxelarnetV1beta1RegisterFeeCollectorRequest, decodeAxelarAxelarnetRegisterFeeCollectorResponse as decodeAxelarAxelarnetV1beta1RegisterFeeCollectorResponse, decodeAxelarAxelarnetRetryIBCTransferRequest as decodeAxelarAxelarnetV1beta1RetryIBCTransferRequest, decodeAxelarAxelarnetRetryIBCTransferResponse as decodeAxelarAxelarnetV1beta1RetryIBCTransferResponse, decodeAxelarAxelarnetRouteMessageRequest as decodeAxelarAxelarnetV1beta1RouteMessageRequest, decodeAxelarAxelarnetRouteMessageResponse as decodeAxelarAxelarnetV1beta1RouteMessageResponse, decodeAxelarAxelarnetCallContractRequest as decodeAxelarAxelarnetV1beta1CallContractRequest, decodeAxelarAxelarnetCallContractResponse as decodeAxelarAxelarnetV1beta1CallContractResponse } from './axelar/axelarnet/v1beta1/tx.js';
import { decodeAxelarAxelarnetFee as decodeAxelarAxelarnetV1beta1Fee, encodeAxelarAxelarnetFee as encodeAxelarAxelarnetV1beta1Fee, encodeAxelarAxelarnetIBCTransfer as encodeAxelarAxelarnetV1beta1IBCTransfer, JsonToProtoEnumAxelarAxelarnetIBCTransferStatus as JsonToProtoEnumAxelarAxelarnetV1beta1IBCTransferStatus, ProtoToJsonEnumAxelarAxelarnetIBCTransferStatus as ProtoToJsonEnumAxelarAxelarnetV1beta1IBCTransferStatus, encodeAxelarAxelarnetCosmosChain as encodeAxelarAxelarnetV1beta1CosmosChain, decodeAxelarAxelarnetAsset as decodeAxelarAxelarnetV1beta1Asset, encodeAxelarAxelarnetAsset as encodeAxelarAxelarnetV1beta1Asset, decodeAxelarAxelarnetCosmosChain as decodeAxelarAxelarnetV1beta1CosmosChain, decodeAxelarAxelarnetIBCTransfer as decodeAxelarAxelarnetV1beta1IBCTransfer } from './axelar/axelarnet/v1beta1/types.js';
import { encodeAxelarEvmPollFailed as encodeAxelarEvmV1beta1PollFailed, encodeAxelarEvmPollExpired as encodeAxelarEvmV1beta1PollExpired, encodeAxelarEvmPollCompleted as encodeAxelarEvmV1beta1PollCompleted, encodeAxelarEvmNoEventsConfirmed as encodeAxelarEvmV1beta1NoEventsConfirmed, encodeAxelarEvmConfirmKeyTransferStarted as encodeAxelarEvmV1beta1ConfirmKeyTransferStarted, encodeAxelarEvmConfirmGatewayTxStarted as encodeAxelarEvmV1beta1ConfirmGatewayTxStarted, encodeAxelarEvmPollMapping as encodeAxelarEvmV1beta1PollMapping, encodeAxelarEvmConfirmGatewayTxsStarted as encodeAxelarEvmV1beta1ConfirmGatewayTxsStarted, decodeAxelarEvmPollMapping as decodeAxelarEvmV1beta1PollMapping, encodeAxelarEvmConfirmDepositStarted as encodeAxelarEvmV1beta1ConfirmDepositStarted, encodeAxelarEvmConfirmTokenStarted as encodeAxelarEvmV1beta1ConfirmTokenStarted, encodeAxelarEvmChainAdded as encodeAxelarEvmV1beta1ChainAdded, encodeAxelarEvmCommandBatchSigned as encodeAxelarEvmV1beta1CommandBatchSigned, encodeAxelarEvmCommandBatchAborted as encodeAxelarEvmV1beta1CommandBatchAborted, encodeAxelarEvmEVMEventConfirmed as encodeAxelarEvmV1beta1EVMEventConfirmed, encodeAxelarEvmEVMEventCompleted as encodeAxelarEvmV1beta1EVMEventCompleted, encodeAxelarEvmEVMEventFailed as encodeAxelarEvmV1beta1EVMEventFailed, encodeAxelarEvmEVMEventRetryFailed as encodeAxelarEvmV1beta1EVMEventRetryFailed, encodeAxelarEvmContractCallApproved as encodeAxelarEvmV1beta1ContractCallApproved, encodeAxelarEvmContractCallFailed as encodeAxelarEvmV1beta1ContractCallFailed, encodeAxelarEvmContractCallWithMintApproved as encodeAxelarEvmV1beta1ContractCallWithMintApproved, encodeAxelarEvmTokenSent as encodeAxelarEvmV1beta1TokenSent, encodeAxelarEvmMintCommand as encodeAxelarEvmV1beta1MintCommand, encodeAxelarEvmBurnCommand as encodeAxelarEvmV1beta1BurnCommand, decodeAxelarEvmPollFailed as decodeAxelarEvmV1beta1PollFailed, decodeAxelarEvmPollExpired as decodeAxelarEvmV1beta1PollExpired, decodeAxelarEvmPollCompleted as decodeAxelarEvmV1beta1PollCompleted, decodeAxelarEvmNoEventsConfirmed as decodeAxelarEvmV1beta1NoEventsConfirmed, decodeAxelarEvmConfirmKeyTransferStarted as decodeAxelarEvmV1beta1ConfirmKeyTransferStarted, decodeAxelarEvmConfirmGatewayTxStarted as decodeAxelarEvmV1beta1ConfirmGatewayTxStarted, decodeAxelarEvmConfirmGatewayTxsStarted as decodeAxelarEvmV1beta1ConfirmGatewayTxsStarted, decodeAxelarEvmConfirmDepositStarted as decodeAxelarEvmV1beta1ConfirmDepositStarted, decodeAxelarEvmConfirmTokenStarted as decodeAxelarEvmV1beta1ConfirmTokenStarted, decodeAxelarEvmChainAdded as decodeAxelarEvmV1beta1ChainAdded, decodeAxelarEvmCommandBatchSigned as decodeAxelarEvmV1beta1CommandBatchSigned, decodeAxelarEvmCommandBatchAborted as decodeAxelarEvmV1beta1CommandBatchAborted, decodeAxelarEvmEVMEventConfirmed as decodeAxelarEvmV1beta1EVMEventConfirmed, decodeAxelarEvmEVMEventCompleted as decodeAxelarEvmV1beta1EVMEventCompleted, decodeAxelarEvmEVMEventFailed as decodeAxelarEvmV1beta1EVMEventFailed, decodeAxelarEvmEVMEventRetryFailed as decodeAxelarEvmV1beta1EVMEventRetryFailed, decodeAxelarEvmContractCallApproved as decodeAxelarEvmV1beta1ContractCallApproved, decodeAxelarEvmContractCallFailed as decodeAxelarEvmV1beta1ContractCallFailed, decodeAxelarEvmContractCallWithMintApproved as decodeAxelarEvmV1beta1ContractCallWithMintApproved, decodeAxelarEvmTokenSent as decodeAxelarEvmV1beta1TokenSent, decodeAxelarEvmMintCommand as decodeAxelarEvmV1beta1MintCommand, decodeAxelarEvmBurnCommand as decodeAxelarEvmV1beta1BurnCommand } from './axelar/evm/v1beta1/events.js';
import { encodeAxelarEvmGenesisState as encodeAxelarEvmV1beta1GenesisState, decodeAxelarEvmGenesisStateChain as decodeAxelarEvmV1beta1GenesisStateChain, encodeAxelarEvmGenesisStateChain as encodeAxelarEvmV1beta1GenesisStateChain, decodeAxelarEvmGenesisState as decodeAxelarEvmV1beta1GenesisState } from './axelar/evm/v1beta1/genesis.js';
import { decodeAxelarEvmParams as decodeAxelarEvmV1beta1Params, encodeAxelarEvmParams as encodeAxelarEvmV1beta1Params, encodeAxelarEvmPendingChain as encodeAxelarEvmV1beta1PendingChain, decodeAxelarEvmPendingChain as decodeAxelarEvmV1beta1PendingChain } from './axelar/evm/v1beta1/params.js';
import { encodeAxelarEvmDepositQueryParams as encodeAxelarEvmV1beta1DepositQueryParams, encodeAxelarEvmBatchedCommandsRequest as encodeAxelarEvmV1beta1BatchedCommandsRequest, encodeAxelarEvmBatchedCommandsResponse as encodeAxelarEvmV1beta1BatchedCommandsResponse, decodeAxelarEvmProof as decodeAxelarEvmV1beta1Proof, encodeAxelarEvmProof as encodeAxelarEvmV1beta1Proof, encodeAxelarEvmKeyAddressRequest as encodeAxelarEvmV1beta1KeyAddressRequest, encodeAxelarEvmKeyAddressResponse as encodeAxelarEvmV1beta1KeyAddressResponse, decodeAxelarEvmKeyAddressResponseWeightedAddress as decodeAxelarEvmV1beta1KeyAddressResponseWeightedAddress, encodeAxelarEvmKeyAddressResponseWeightedAddress as encodeAxelarEvmV1beta1KeyAddressResponseWeightedAddress, encodeAxelarEvmQueryTokenAddressResponse as encodeAxelarEvmV1beta1QueryTokenAddressResponse, encodeAxelarEvmQueryDepositStateParams as encodeAxelarEvmV1beta1QueryDepositStateParams, encodeAxelarEvmDepositStateRequest as encodeAxelarEvmV1beta1DepositStateRequest, decodeAxelarEvmQueryDepositStateParams as decodeAxelarEvmV1beta1QueryDepositStateParams, encodeAxelarEvmDepositStateResponse as encodeAxelarEvmV1beta1DepositStateResponse, encodeAxelarEvmEventRequest as encodeAxelarEvmV1beta1EventRequest, encodeAxelarEvmEventResponse as encodeAxelarEvmV1beta1EventResponse, encodeAxelarEvmQueryBurnerAddressResponse as encodeAxelarEvmV1beta1QueryBurnerAddressResponse, encodeAxelarEvmChainsRequest as encodeAxelarEvmV1beta1ChainsRequest, JsonToProtoEnumAxelarEvmChainStatus as JsonToProtoEnumAxelarEvmV1beta1ChainStatus, ProtoToJsonEnumAxelarEvmChainStatus as ProtoToJsonEnumAxelarEvmV1beta1ChainStatus, encodeAxelarEvmChainsResponse as encodeAxelarEvmV1beta1ChainsResponse, encodeAxelarEvmCommandRequest as encodeAxelarEvmV1beta1CommandRequest, encodeAxelarEvmCommandResponse as encodeAxelarEvmV1beta1CommandResponse, decodeAxelarEvmCommandResponseParamsEntry as decodeAxelarEvmV1beta1CommandResponseParamsEntry, encodeAxelarEvmCommandResponseParamsEntry as encodeAxelarEvmV1beta1CommandResponseParamsEntry, encodeAxelarEvmPendingCommandsRequest as encodeAxelarEvmV1beta1PendingCommandsRequest, encodeAxelarEvmPendingCommandsResponse as encodeAxelarEvmV1beta1PendingCommandsResponse, decodeAxelarEvmQueryCommandResponse as decodeAxelarEvmV1beta1QueryCommandResponse, encodeAxelarEvmQueryCommandResponse as encodeAxelarEvmV1beta1QueryCommandResponse, decodeAxelarEvmQueryCommandResponseParamsEntry as decodeAxelarEvmV1beta1QueryCommandResponseParamsEntry, encodeAxelarEvmQueryCommandResponseParamsEntry as encodeAxelarEvmV1beta1QueryCommandResponseParamsEntry, encodeAxelarEvmBurnerInfoRequest as encodeAxelarEvmV1beta1BurnerInfoRequest, encodeAxelarEvmBurnerInfoResponse as encodeAxelarEvmV1beta1BurnerInfoResponse, encodeAxelarEvmConfirmationHeightRequest as encodeAxelarEvmV1beta1ConfirmationHeightRequest, encodeAxelarEvmConfirmationHeightResponse as encodeAxelarEvmV1beta1ConfirmationHeightResponse, encodeAxelarEvmGatewayAddressRequest as encodeAxelarEvmV1beta1GatewayAddressRequest, encodeAxelarEvmGatewayAddressResponse as encodeAxelarEvmV1beta1GatewayAddressResponse, encodeAxelarEvmBytecodeRequest as encodeAxelarEvmV1beta1BytecodeRequest, encodeAxelarEvmBytecodeResponse as encodeAxelarEvmV1beta1BytecodeResponse, encodeAxelarEvmERC20TokensRequest as encodeAxelarEvmV1beta1ERC20TokensRequest, JsonToProtoEnumAxelarEvmTokenType as JsonToProtoEnumAxelarEvmV1beta1TokenType, ProtoToJsonEnumAxelarEvmTokenType as ProtoToJsonEnumAxelarEvmV1beta1TokenType, encodeAxelarEvmERC20TokensResponse as encodeAxelarEvmV1beta1ERC20TokensResponse, decodeAxelarEvmERC20TokensResponseToken as decodeAxelarEvmV1beta1ERC20TokensResponseToken, encodeAxelarEvmERC20TokensResponseToken as encodeAxelarEvmV1beta1ERC20TokensResponseToken, encodeAxelarEvmTokenInfoRequest as encodeAxelarEvmV1beta1TokenInfoRequest, encodeAxelarEvmTokenInfoResponse as encodeAxelarEvmV1beta1TokenInfoResponse, encodeAxelarEvmParamsRequest as encodeAxelarEvmV1beta1ParamsRequest, encodeAxelarEvmParamsResponse as encodeAxelarEvmV1beta1ParamsResponse, decodeAxelarEvmDepositQueryParams as decodeAxelarEvmV1beta1DepositQueryParams, decodeAxelarEvmBatchedCommandsRequest as decodeAxelarEvmV1beta1BatchedCommandsRequest, decodeAxelarEvmBatchedCommandsResponse as decodeAxelarEvmV1beta1BatchedCommandsResponse, decodeAxelarEvmKeyAddressRequest as decodeAxelarEvmV1beta1KeyAddressRequest, decodeAxelarEvmKeyAddressResponse as decodeAxelarEvmV1beta1KeyAddressResponse, decodeAxelarEvmQueryTokenAddressResponse as decodeAxelarEvmV1beta1QueryTokenAddressResponse, decodeAxelarEvmDepositStateRequest as decodeAxelarEvmV1beta1DepositStateRequest, decodeAxelarEvmDepositStateResponse as decodeAxelarEvmV1beta1DepositStateResponse, decodeAxelarEvmEventRequest as decodeAxelarEvmV1beta1EventRequest, decodeAxelarEvmEventResponse as decodeAxelarEvmV1beta1EventResponse, decodeAxelarEvmQueryBurnerAddressResponse as decodeAxelarEvmV1beta1QueryBurnerAddressResponse, decodeAxelarEvmChainsRequest as decodeAxelarEvmV1beta1ChainsRequest, decodeAxelarEvmChainsResponse as decodeAxelarEvmV1beta1ChainsResponse, decodeAxelarEvmCommandRequest as decodeAxelarEvmV1beta1CommandRequest, decodeAxelarEvmCommandResponse as decodeAxelarEvmV1beta1CommandResponse, decodeAxelarEvmPendingCommandsRequest as decodeAxelarEvmV1beta1PendingCommandsRequest, decodeAxelarEvmPendingCommandsResponse as decodeAxelarEvmV1beta1PendingCommandsResponse, decodeAxelarEvmBurnerInfoRequest as decodeAxelarEvmV1beta1BurnerInfoRequest, decodeAxelarEvmBurnerInfoResponse as decodeAxelarEvmV1beta1BurnerInfoResponse, decodeAxelarEvmConfirmationHeightRequest as decodeAxelarEvmV1beta1ConfirmationHeightRequest, decodeAxelarEvmConfirmationHeightResponse as decodeAxelarEvmV1beta1ConfirmationHeightResponse, decodeAxelarEvmGatewayAddressRequest as decodeAxelarEvmV1beta1GatewayAddressRequest, decodeAxelarEvmGatewayAddressResponse as decodeAxelarEvmV1beta1GatewayAddressResponse, decodeAxelarEvmBytecodeRequest as decodeAxelarEvmV1beta1BytecodeRequest, decodeAxelarEvmBytecodeResponse as decodeAxelarEvmV1beta1BytecodeResponse, decodeAxelarEvmERC20TokensRequest as decodeAxelarEvmV1beta1ERC20TokensRequest, decodeAxelarEvmERC20TokensResponse as decodeAxelarEvmV1beta1ERC20TokensResponse, decodeAxelarEvmTokenInfoRequest as decodeAxelarEvmV1beta1TokenInfoRequest, decodeAxelarEvmTokenInfoResponse as decodeAxelarEvmV1beta1TokenInfoResponse, decodeAxelarEvmParamsRequest as decodeAxelarEvmV1beta1ParamsRequest, decodeAxelarEvmParamsResponse as decodeAxelarEvmV1beta1ParamsResponse } from './axelar/evm/v1beta1/query.js';
import { encodeAxelarEvmSetGatewayRequest as encodeAxelarEvmV1beta1SetGatewayRequest, encodeAxelarEvmSetGatewayResponse as encodeAxelarEvmV1beta1SetGatewayResponse, encodeAxelarEvmConfirmGatewayTxRequest as encodeAxelarEvmV1beta1ConfirmGatewayTxRequest, encodeAxelarEvmConfirmGatewayTxResponse as encodeAxelarEvmV1beta1ConfirmGatewayTxResponse, encodeAxelarEvmConfirmGatewayTxsRequest as encodeAxelarEvmV1beta1ConfirmGatewayTxsRequest, encodeAxelarEvmConfirmGatewayTxsResponse as encodeAxelarEvmV1beta1ConfirmGatewayTxsResponse, encodeAxelarEvmConfirmDepositRequest as encodeAxelarEvmV1beta1ConfirmDepositRequest, encodeAxelarEvmConfirmDepositResponse as encodeAxelarEvmV1beta1ConfirmDepositResponse, encodeAxelarEvmConfirmTokenRequest as encodeAxelarEvmV1beta1ConfirmTokenRequest, encodeAxelarEvmConfirmTokenResponse as encodeAxelarEvmV1beta1ConfirmTokenResponse, encodeAxelarEvmConfirmTransferKeyRequest as encodeAxelarEvmV1beta1ConfirmTransferKeyRequest, encodeAxelarEvmConfirmTransferKeyResponse as encodeAxelarEvmV1beta1ConfirmTransferKeyResponse, encodeAxelarEvmLinkRequest as encodeAxelarEvmV1beta1LinkRequest, encodeAxelarEvmLinkResponse as encodeAxelarEvmV1beta1LinkResponse, encodeAxelarEvmCreateBurnTokensRequest as encodeAxelarEvmV1beta1CreateBurnTokensRequest, encodeAxelarEvmCreateBurnTokensResponse as encodeAxelarEvmV1beta1CreateBurnTokensResponse, encodeAxelarEvmCreateDeployTokenRequest as encodeAxelarEvmV1beta1CreateDeployTokenRequest, encodeAxelarEvmCreateDeployTokenResponse as encodeAxelarEvmV1beta1CreateDeployTokenResponse, encodeAxelarEvmCreatePendingTransfersRequest as encodeAxelarEvmV1beta1CreatePendingTransfersRequest, encodeAxelarEvmCreatePendingTransfersResponse as encodeAxelarEvmV1beta1CreatePendingTransfersResponse, encodeAxelarEvmCreateTransferOwnershipRequest as encodeAxelarEvmV1beta1CreateTransferOwnershipRequest, encodeAxelarEvmCreateTransferOwnershipResponse as encodeAxelarEvmV1beta1CreateTransferOwnershipResponse, encodeAxelarEvmCreateTransferOperatorshipRequest as encodeAxelarEvmV1beta1CreateTransferOperatorshipRequest, encodeAxelarEvmCreateTransferOperatorshipResponse as encodeAxelarEvmV1beta1CreateTransferOperatorshipResponse, encodeAxelarEvmSignCommandsRequest as encodeAxelarEvmV1beta1SignCommandsRequest, encodeAxelarEvmSignCommandsResponse as encodeAxelarEvmV1beta1SignCommandsResponse, encodeAxelarEvmAddChainRequest as encodeAxelarEvmV1beta1AddChainRequest, encodeAxelarEvmAddChainResponse as encodeAxelarEvmV1beta1AddChainResponse, encodeAxelarEvmRetryFailedEventRequest as encodeAxelarEvmV1beta1RetryFailedEventRequest, encodeAxelarEvmRetryFailedEventResponse as encodeAxelarEvmV1beta1RetryFailedEventResponse, decodeAxelarEvmSetGatewayRequest as decodeAxelarEvmV1beta1SetGatewayRequest, decodeAxelarEvmSetGatewayResponse as decodeAxelarEvmV1beta1SetGatewayResponse, decodeAxelarEvmConfirmGatewayTxRequest as decodeAxelarEvmV1beta1ConfirmGatewayTxRequest, decodeAxelarEvmConfirmGatewayTxResponse as decodeAxelarEvmV1beta1ConfirmGatewayTxResponse, decodeAxelarEvmConfirmGatewayTxsRequest as decodeAxelarEvmV1beta1ConfirmGatewayTxsRequest, decodeAxelarEvmConfirmGatewayTxsResponse as decodeAxelarEvmV1beta1ConfirmGatewayTxsResponse, decodeAxelarEvmConfirmDepositRequest as decodeAxelarEvmV1beta1ConfirmDepositRequest, decodeAxelarEvmConfirmDepositResponse as decodeAxelarEvmV1beta1ConfirmDepositResponse, decodeAxelarEvmConfirmTokenRequest as decodeAxelarEvmV1beta1ConfirmTokenRequest, decodeAxelarEvmConfirmTokenResponse as decodeAxelarEvmV1beta1ConfirmTokenResponse, decodeAxelarEvmConfirmTransferKeyRequest as decodeAxelarEvmV1beta1ConfirmTransferKeyRequest, decodeAxelarEvmConfirmTransferKeyResponse as decodeAxelarEvmV1beta1ConfirmTransferKeyResponse, decodeAxelarEvmLinkRequest as decodeAxelarEvmV1beta1LinkRequest, decodeAxelarEvmLinkResponse as decodeAxelarEvmV1beta1LinkResponse, decodeAxelarEvmCreateBurnTokensRequest as decodeAxelarEvmV1beta1CreateBurnTokensRequest, decodeAxelarEvmCreateBurnTokensResponse as decodeAxelarEvmV1beta1CreateBurnTokensResponse, decodeAxelarEvmCreateDeployTokenRequest as decodeAxelarEvmV1beta1CreateDeployTokenRequest, decodeAxelarEvmCreateDeployTokenResponse as decodeAxelarEvmV1beta1CreateDeployTokenResponse, decodeAxelarEvmCreatePendingTransfersRequest as decodeAxelarEvmV1beta1CreatePendingTransfersRequest, decodeAxelarEvmCreatePendingTransfersResponse as decodeAxelarEvmV1beta1CreatePendingTransfersResponse, decodeAxelarEvmCreateTransferOwnershipRequest as decodeAxelarEvmV1beta1CreateTransferOwnershipRequest, decodeAxelarEvmCreateTransferOwnershipResponse as decodeAxelarEvmV1beta1CreateTransferOwnershipResponse, decodeAxelarEvmCreateTransferOperatorshipRequest as decodeAxelarEvmV1beta1CreateTransferOperatorshipRequest, decodeAxelarEvmCreateTransferOperatorshipResponse as decodeAxelarEvmV1beta1CreateTransferOperatorshipResponse, decodeAxelarEvmSignCommandsRequest as decodeAxelarEvmV1beta1SignCommandsRequest, decodeAxelarEvmSignCommandsResponse as decodeAxelarEvmV1beta1SignCommandsResponse, decodeAxelarEvmAddChainRequest as decodeAxelarEvmV1beta1AddChainRequest, decodeAxelarEvmAddChainResponse as decodeAxelarEvmV1beta1AddChainResponse, decodeAxelarEvmRetryFailedEventRequest as decodeAxelarEvmV1beta1RetryFailedEventRequest, decodeAxelarEvmRetryFailedEventResponse as decodeAxelarEvmV1beta1RetryFailedEventResponse } from './axelar/evm/v1beta1/tx.js';
import { decodeAxelarEvmAsset as decodeAxelarEvmV1beta1Asset, encodeAxelarEvmAsset as encodeAxelarEvmV1beta1Asset, decodeAxelarEvmTokenDetails as decodeAxelarEvmV1beta1TokenDetails, encodeAxelarEvmTokenDetails as encodeAxelarEvmV1beta1TokenDetails, encodeAxelarEvmVoteEvents as encodeAxelarEvmV1beta1VoteEvents, decodeAxelarEvmEvent as decodeAxelarEvmV1beta1Event, encodeAxelarEvmEvent as encodeAxelarEvmV1beta1Event, JsonToProtoEnumAxelarEvmEventStatus as JsonToProtoEnumAxelarEvmV1beta1EventStatus, decodeAxelarEvmEventTokenSent as decodeAxelarEvmV1beta1EventTokenSent, decodeAxelarEvmEventContractCall as decodeAxelarEvmV1beta1EventContractCall, decodeAxelarEvmEventContractCallWithToken as decodeAxelarEvmV1beta1EventContractCallWithToken, decodeAxelarEvmEventTransfer as decodeAxelarEvmV1beta1EventTransfer, decodeAxelarEvmEventTokenDeployed as decodeAxelarEvmV1beta1EventTokenDeployed, decodeAxelarEvmEventMultisigOwnershipTransferred as decodeAxelarEvmV1beta1EventMultisigOwnershipTransferred, decodeAxelarEvmEventMultisigOperatorshipTransferred as decodeAxelarEvmV1beta1EventMultisigOperatorshipTransferred, ProtoToJsonEnumAxelarEvmEventStatus as ProtoToJsonEnumAxelarEvmV1beta1EventStatus, encodeAxelarEvmEventTokenSent as encodeAxelarEvmV1beta1EventTokenSent, encodeAxelarEvmEventContractCall as encodeAxelarEvmV1beta1EventContractCall, encodeAxelarEvmEventContractCallWithToken as encodeAxelarEvmV1beta1EventContractCallWithToken, encodeAxelarEvmEventTransfer as encodeAxelarEvmV1beta1EventTransfer, encodeAxelarEvmEventTokenDeployed as encodeAxelarEvmV1beta1EventTokenDeployed, encodeAxelarEvmEventMultisigOwnershipTransferred as encodeAxelarEvmV1beta1EventMultisigOwnershipTransferred, encodeAxelarEvmEventMultisigOperatorshipTransferred as encodeAxelarEvmV1beta1EventMultisigOperatorshipTransferred, encodeAxelarEvmNetworkInfo as encodeAxelarEvmV1beta1NetworkInfo, encodeAxelarEvmBurnerInfo as encodeAxelarEvmV1beta1BurnerInfo, encodeAxelarEvmERC20Deposit as encodeAxelarEvmV1beta1ERC20Deposit, encodeAxelarEvmERC20TokenMetadata as encodeAxelarEvmV1beta1ERC20TokenMetadata, JsonToProtoEnumAxelarEvmStatus as JsonToProtoEnumAxelarEvmV1beta1Status, ProtoToJsonEnumAxelarEvmStatus as ProtoToJsonEnumAxelarEvmV1beta1Status, encodeAxelarEvmTransactionMetadata as encodeAxelarEvmV1beta1TransactionMetadata, encodeAxelarEvmCommand as encodeAxelarEvmV1beta1Command, JsonToProtoEnumAxelarEvmCommandType as JsonToProtoEnumAxelarEvmV1beta1CommandType, ProtoToJsonEnumAxelarEvmCommandType as ProtoToJsonEnumAxelarEvmV1beta1CommandType, encodeAxelarEvmCommandBatchMetadata as encodeAxelarEvmV1beta1CommandBatchMetadata, JsonToProtoEnumAxelarEvmBatchedCommandsStatus as JsonToProtoEnumAxelarEvmV1beta1BatchedCommandsStatus, ProtoToJsonEnumAxelarEvmBatchedCommandsStatus as ProtoToJsonEnumAxelarEvmV1beta1BatchedCommandsStatus, encodeAxelarEvmSigMetadata as encodeAxelarEvmV1beta1SigMetadata, JsonToProtoEnumAxelarEvmSigType as JsonToProtoEnumAxelarEvmV1beta1SigType, ProtoToJsonEnumAxelarEvmSigType as ProtoToJsonEnumAxelarEvmV1beta1SigType, encodeAxelarEvmTransferKey as encodeAxelarEvmV1beta1TransferKey, encodeAxelarEvmGateway as encodeAxelarEvmV1beta1Gateway, encodeAxelarEvmPollMetadata as encodeAxelarEvmV1beta1PollMetadata, JsonToProtoEnumAxelarEvmDepositStatus as JsonToProtoEnumAxelarEvmV1beta1DepositStatus, ProtoToJsonEnumAxelarEvmDepositStatus as ProtoToJsonEnumAxelarEvmV1beta1DepositStatus, decodeAxelarEvmBurnerInfo as decodeAxelarEvmV1beta1BurnerInfo, decodeAxelarEvmNetworkInfo as decodeAxelarEvmV1beta1NetworkInfo, decodeAxelarEvmERC20Deposit as decodeAxelarEvmV1beta1ERC20Deposit, decodeAxelarEvmCommandBatchMetadata as decodeAxelarEvmV1beta1CommandBatchMetadata, decodeAxelarEvmGateway as decodeAxelarEvmV1beta1Gateway, decodeAxelarEvmERC20TokenMetadata as decodeAxelarEvmV1beta1ERC20TokenMetadata, decodeAxelarEvmVoteEvents as decodeAxelarEvmV1beta1VoteEvents, decodeAxelarEvmTransactionMetadata as decodeAxelarEvmV1beta1TransactionMetadata, decodeAxelarEvmCommand as decodeAxelarEvmV1beta1Command, decodeAxelarEvmSigMetadata as decodeAxelarEvmV1beta1SigMetadata, decodeAxelarEvmTransferKey as decodeAxelarEvmV1beta1TransferKey, decodeAxelarEvmPollMetadata as decodeAxelarEvmV1beta1PollMetadata } from './axelar/evm/v1beta1/types.js';
import { JsonToProtoEnumAxelarMultisigExportedKeyState as JsonToProtoEnumAxelarMultisigExportedV1beta1KeyState, ProtoToJsonEnumAxelarMultisigExportedKeyState as ProtoToJsonEnumAxelarMultisigExportedV1beta1KeyState, JsonToProtoEnumAxelarMultisigExportedMultisigState as JsonToProtoEnumAxelarMultisigExportedV1beta1MultisigState, ProtoToJsonEnumAxelarMultisigExportedMultisigState as ProtoToJsonEnumAxelarMultisigExportedV1beta1MultisigState } from './axelar/multisig/exported/v1beta1/types.js';
import { encodeAxelarMultisigKeygenStarted as encodeAxelarMultisigV1beta1KeygenStarted, encodeAxelarMultisigKeygenCompleted as encodeAxelarMultisigV1beta1KeygenCompleted, encodeAxelarMultisigKeygenExpired as encodeAxelarMultisigV1beta1KeygenExpired, encodeAxelarMultisigPubKeySubmitted as encodeAxelarMultisigV1beta1PubKeySubmitted, encodeAxelarMultisigSigningStarted as encodeAxelarMultisigV1beta1SigningStarted, decodeAxelarMultisigSigningStartedPubKeysEntry as decodeAxelarMultisigV1beta1SigningStartedPubKeysEntry, encodeAxelarMultisigSigningStartedPubKeysEntry as encodeAxelarMultisigV1beta1SigningStartedPubKeysEntry, encodeAxelarMultisigSigningCompleted as encodeAxelarMultisigV1beta1SigningCompleted, encodeAxelarMultisigSigningExpired as encodeAxelarMultisigV1beta1SigningExpired, encodeAxelarMultisigSignatureSubmitted as encodeAxelarMultisigV1beta1SignatureSubmitted, encodeAxelarMultisigKeyAssigned as encodeAxelarMultisigV1beta1KeyAssigned, encodeAxelarMultisigKeyRotated as encodeAxelarMultisigV1beta1KeyRotated, encodeAxelarMultisigKeygenOptOut as encodeAxelarMultisigV1beta1KeygenOptOut, encodeAxelarMultisigKeygenOptIn as encodeAxelarMultisigV1beta1KeygenOptIn, decodeAxelarMultisigKeygenStarted as decodeAxelarMultisigV1beta1KeygenStarted, decodeAxelarMultisigKeygenCompleted as decodeAxelarMultisigV1beta1KeygenCompleted, decodeAxelarMultisigKeygenExpired as decodeAxelarMultisigV1beta1KeygenExpired, decodeAxelarMultisigPubKeySubmitted as decodeAxelarMultisigV1beta1PubKeySubmitted, decodeAxelarMultisigSigningStarted as decodeAxelarMultisigV1beta1SigningStarted, decodeAxelarMultisigSigningCompleted as decodeAxelarMultisigV1beta1SigningCompleted, decodeAxelarMultisigSigningExpired as decodeAxelarMultisigV1beta1SigningExpired, decodeAxelarMultisigSignatureSubmitted as decodeAxelarMultisigV1beta1SignatureSubmitted, decodeAxelarMultisigKeyAssigned as decodeAxelarMultisigV1beta1KeyAssigned, decodeAxelarMultisigKeyRotated as decodeAxelarMultisigV1beta1KeyRotated, decodeAxelarMultisigKeygenOptOut as decodeAxelarMultisigV1beta1KeygenOptOut, decodeAxelarMultisigKeygenOptIn as decodeAxelarMultisigV1beta1KeygenOptIn } from './axelar/multisig/v1beta1/events.js';
import { encodeAxelarMultisigGenesisState as encodeAxelarMultisigV1beta1GenesisState, decodeAxelarMultisigGenesisState as decodeAxelarMultisigV1beta1GenesisState } from './axelar/multisig/v1beta1/genesis.js';
import { decodeAxelarMultisigParams as decodeAxelarMultisigV1beta1Params, encodeAxelarMultisigParams as encodeAxelarMultisigV1beta1Params } from './axelar/multisig/v1beta1/params.js';
import { encodeAxelarMultisigKeyIDRequest as encodeAxelarMultisigV1beta1KeyIDRequest, encodeAxelarMultisigKeyIDResponse as encodeAxelarMultisigV1beta1KeyIDResponse, encodeAxelarMultisigNextKeyIDRequest as encodeAxelarMultisigV1beta1NextKeyIDRequest, encodeAxelarMultisigNextKeyIDResponse as encodeAxelarMultisigV1beta1NextKeyIDResponse, encodeAxelarMultisigKeyRequest as encodeAxelarMultisigV1beta1KeyRequest, encodeAxelarMultisigKeygenParticipant as encodeAxelarMultisigV1beta1KeygenParticipant, encodeAxelarMultisigKeyResponse as encodeAxelarMultisigV1beta1KeyResponse, decodeAxelarMultisigKeygenParticipant as decodeAxelarMultisigV1beta1KeygenParticipant, encodeAxelarMultisigKeygenSessionRequest as encodeAxelarMultisigV1beta1KeygenSessionRequest, encodeAxelarMultisigKeygenSessionResponse as encodeAxelarMultisigV1beta1KeygenSessionResponse, encodeAxelarMultisigParamsRequest as encodeAxelarMultisigV1beta1ParamsRequest, encodeAxelarMultisigParamsResponse as encodeAxelarMultisigV1beta1ParamsResponse, decodeAxelarMultisigKeyIDRequest as decodeAxelarMultisigV1beta1KeyIDRequest, decodeAxelarMultisigKeyIDResponse as decodeAxelarMultisigV1beta1KeyIDResponse, decodeAxelarMultisigNextKeyIDRequest as decodeAxelarMultisigV1beta1NextKeyIDRequest, decodeAxelarMultisigNextKeyIDResponse as decodeAxelarMultisigV1beta1NextKeyIDResponse, decodeAxelarMultisigKeyRequest as decodeAxelarMultisigV1beta1KeyRequest, decodeAxelarMultisigKeyResponse as decodeAxelarMultisigV1beta1KeyResponse, decodeAxelarMultisigKeygenSessionRequest as decodeAxelarMultisigV1beta1KeygenSessionRequest, decodeAxelarMultisigKeygenSessionResponse as decodeAxelarMultisigV1beta1KeygenSessionResponse, decodeAxelarMultisigParamsRequest as decodeAxelarMultisigV1beta1ParamsRequest, decodeAxelarMultisigParamsResponse as decodeAxelarMultisigV1beta1ParamsResponse } from './axelar/multisig/v1beta1/query.js';
import { encodeAxelarMultisigStartKeygenRequest as encodeAxelarMultisigV1beta1StartKeygenRequest, encodeAxelarMultisigStartKeygenResponse as encodeAxelarMultisigV1beta1StartKeygenResponse, encodeAxelarMultisigSubmitPubKeyRequest as encodeAxelarMultisigV1beta1SubmitPubKeyRequest, encodeAxelarMultisigSubmitPubKeyResponse as encodeAxelarMultisigV1beta1SubmitPubKeyResponse, encodeAxelarMultisigSubmitSignatureRequest as encodeAxelarMultisigV1beta1SubmitSignatureRequest, encodeAxelarMultisigSubmitSignatureResponse as encodeAxelarMultisigV1beta1SubmitSignatureResponse, encodeAxelarMultisigRotateKeyRequest as encodeAxelarMultisigV1beta1RotateKeyRequest, encodeAxelarMultisigRotateKeyResponse as encodeAxelarMultisigV1beta1RotateKeyResponse, encodeAxelarMultisigKeygenOptOutRequest as encodeAxelarMultisigV1beta1KeygenOptOutRequest, encodeAxelarMultisigKeygenOptOutResponse as encodeAxelarMultisigV1beta1KeygenOptOutResponse, encodeAxelarMultisigKeygenOptInRequest as encodeAxelarMultisigV1beta1KeygenOptInRequest, encodeAxelarMultisigKeygenOptInResponse as encodeAxelarMultisigV1beta1KeygenOptInResponse, decodeAxelarMultisigStartKeygenRequest as decodeAxelarMultisigV1beta1StartKeygenRequest, decodeAxelarMultisigStartKeygenResponse as decodeAxelarMultisigV1beta1StartKeygenResponse, decodeAxelarMultisigSubmitPubKeyRequest as decodeAxelarMultisigV1beta1SubmitPubKeyRequest, decodeAxelarMultisigSubmitPubKeyResponse as decodeAxelarMultisigV1beta1SubmitPubKeyResponse, decodeAxelarMultisigSubmitSignatureRequest as decodeAxelarMultisigV1beta1SubmitSignatureRequest, decodeAxelarMultisigSubmitSignatureResponse as decodeAxelarMultisigV1beta1SubmitSignatureResponse, decodeAxelarMultisigRotateKeyRequest as decodeAxelarMultisigV1beta1RotateKeyRequest, decodeAxelarMultisigRotateKeyResponse as decodeAxelarMultisigV1beta1RotateKeyResponse, decodeAxelarMultisigKeygenOptOutRequest as decodeAxelarMultisigV1beta1KeygenOptOutRequest, decodeAxelarMultisigKeygenOptOutResponse as decodeAxelarMultisigV1beta1KeygenOptOutResponse, decodeAxelarMultisigKeygenOptInRequest as decodeAxelarMultisigV1beta1KeygenOptInRequest, decodeAxelarMultisigKeygenOptInResponse as decodeAxelarMultisigV1beta1KeygenOptInResponse } from './axelar/multisig/v1beta1/tx.js';
import { encodeAxelarMultisigKey as encodeAxelarMultisigV1beta1Key, decodeAxelarMultisigKeyPubKeysEntry as decodeAxelarMultisigV1beta1KeyPubKeysEntry, encodeAxelarMultisigKeyPubKeysEntry as encodeAxelarMultisigV1beta1KeyPubKeysEntry, encodeAxelarMultisigKeygenSession as encodeAxelarMultisigV1beta1KeygenSession, decodeAxelarMultisigKey as decodeAxelarMultisigV1beta1Key, decodeAxelarMultisigKeygenSessionIsPubKeyReceivedEntry as decodeAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry, encodeAxelarMultisigKeygenSessionIsPubKeyReceivedEntry as encodeAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry, encodeAxelarMultisigMultiSig as encodeAxelarMultisigV1beta1MultiSig, decodeAxelarMultisigMultiSigSigsEntry as decodeAxelarMultisigV1beta1MultiSigSigsEntry, encodeAxelarMultisigMultiSigSigsEntry as encodeAxelarMultisigV1beta1MultiSigSigsEntry, encodeAxelarMultisigSigningSession as encodeAxelarMultisigV1beta1SigningSession, decodeAxelarMultisigMultiSig as decodeAxelarMultisigV1beta1MultiSig, encodeAxelarMultisigKeyEpoch as encodeAxelarMultisigV1beta1KeyEpoch, decodeAxelarMultisigKeygenSession as decodeAxelarMultisigV1beta1KeygenSession, decodeAxelarMultisigSigningSession as decodeAxelarMultisigV1beta1SigningSession, decodeAxelarMultisigKeyEpoch as decodeAxelarMultisigV1beta1KeyEpoch } from './axelar/multisig/v1beta1/types.js';
import { decodeAxelarNexusExportedChain as decodeAxelarNexusExportedV1beta1Chain, decodeAxelarNexusExportedAsset as decodeAxelarNexusExportedV1beta1Asset, encodeAxelarNexusExportedChain as encodeAxelarNexusExportedV1beta1Chain, encodeAxelarNexusExportedAsset as encodeAxelarNexusExportedV1beta1Asset, encodeAxelarNexusExportedCrossChainAddress as encodeAxelarNexusExportedV1beta1CrossChainAddress, encodeAxelarNexusExportedCrossChainTransfer as encodeAxelarNexusExportedV1beta1CrossChainTransfer, decodeAxelarNexusExportedCrossChainAddress as decodeAxelarNexusExportedV1beta1CrossChainAddress, JsonToProtoEnumAxelarNexusExportedTransferState as JsonToProtoEnumAxelarNexusExportedV1beta1TransferState, ProtoToJsonEnumAxelarNexusExportedTransferState as ProtoToJsonEnumAxelarNexusExportedV1beta1TransferState, encodeAxelarNexusExportedTransferFee as encodeAxelarNexusExportedV1beta1TransferFee, encodeAxelarNexusExportedFeeInfo as encodeAxelarNexusExportedV1beta1FeeInfo, encodeAxelarNexusExportedGeneralMessage as encodeAxelarNexusExportedV1beta1GeneralMessage, JsonToProtoEnumAxelarNexusExportedGeneralMessageStatus as JsonToProtoEnumAxelarNexusExportedV1beta1GeneralMessageStatus, ProtoToJsonEnumAxelarNexusExportedGeneralMessageStatus as ProtoToJsonEnumAxelarNexusExportedV1beta1GeneralMessageStatus, encodeAxelarNexusExportedWasmMessage as encodeAxelarNexusExportedV1beta1WasmMessage, decodeAxelarNexusExportedFeeInfo as decodeAxelarNexusExportedV1beta1FeeInfo, decodeAxelarNexusExportedWasmMessage as decodeAxelarNexusExportedV1beta1WasmMessage, JsonToProtoEnumAxelarNexusExportedTransferDirection as JsonToProtoEnumAxelarNexusExportedV1beta1TransferDirection, ProtoToJsonEnumAxelarNexusExportedTransferDirection as ProtoToJsonEnumAxelarNexusExportedV1beta1TransferDirection, decodeAxelarNexusExportedCrossChainTransfer as decodeAxelarNexusExportedV1beta1CrossChainTransfer, decodeAxelarNexusExportedGeneralMessage as decodeAxelarNexusExportedV1beta1GeneralMessage, decodeAxelarNexusExportedTransferFee as decodeAxelarNexusExportedV1beta1TransferFee } from './axelar/nexus/exported/v1beta1/types.js';
import { encodeAxelarNexusFeeDeducted as encodeAxelarNexusV1beta1FeeDeducted, encodeAxelarNexusInsufficientFee as encodeAxelarNexusV1beta1InsufficientFee, encodeAxelarNexusRateLimitUpdated as encodeAxelarNexusV1beta1RateLimitUpdated, encodeAxelarNexusMessageReceived as encodeAxelarNexusV1beta1MessageReceived, encodeAxelarNexusMessageProcessing as encodeAxelarNexusV1beta1MessageProcessing, encodeAxelarNexusMessageExecuted as encodeAxelarNexusV1beta1MessageExecuted, encodeAxelarNexusMessageFailed as encodeAxelarNexusV1beta1MessageFailed, encodeAxelarNexusWasmMessageRouted as encodeAxelarNexusV1beta1WasmMessageRouted, decodeAxelarNexusFeeDeducted as decodeAxelarNexusV1beta1FeeDeducted, decodeAxelarNexusInsufficientFee as decodeAxelarNexusV1beta1InsufficientFee, decodeAxelarNexusRateLimitUpdated as decodeAxelarNexusV1beta1RateLimitUpdated, decodeAxelarNexusMessageReceived as decodeAxelarNexusV1beta1MessageReceived, decodeAxelarNexusMessageProcessing as decodeAxelarNexusV1beta1MessageProcessing, decodeAxelarNexusMessageExecuted as decodeAxelarNexusV1beta1MessageExecuted, decodeAxelarNexusMessageFailed as decodeAxelarNexusV1beta1MessageFailed, decodeAxelarNexusWasmMessageRouted as decodeAxelarNexusV1beta1WasmMessageRouted } from './axelar/nexus/v1beta1/events.js';
import { encodeAxelarNexusGenesisState as encodeAxelarNexusV1beta1GenesisState, decodeAxelarNexusGenesisState as decodeAxelarNexusV1beta1GenesisState } from './axelar/nexus/v1beta1/genesis.js';
import { decodeAxelarNexusParams as decodeAxelarNexusV1beta1Params, encodeAxelarNexusParams as encodeAxelarNexusV1beta1Params } from './axelar/nexus/v1beta1/params.js';
import { encodeAxelarNexusChainMaintainersRequest as encodeAxelarNexusV1beta1ChainMaintainersRequest, encodeAxelarNexusChainMaintainersResponse as encodeAxelarNexusV1beta1ChainMaintainersResponse, encodeAxelarNexusLatestDepositAddressRequest as encodeAxelarNexusV1beta1LatestDepositAddressRequest, encodeAxelarNexusLatestDepositAddressResponse as encodeAxelarNexusV1beta1LatestDepositAddressResponse, encodeAxelarNexusTransfersForChainRequest as encodeAxelarNexusV1beta1TransfersForChainRequest, encodeAxelarNexusTransfersForChainResponse as encodeAxelarNexusV1beta1TransfersForChainResponse, encodeAxelarNexusFeeInfoRequest as encodeAxelarNexusV1beta1FeeInfoRequest, encodeAxelarNexusFeeInfoResponse as encodeAxelarNexusV1beta1FeeInfoResponse, encodeAxelarNexusTransferFeeRequest as encodeAxelarNexusV1beta1TransferFeeRequest, encodeAxelarNexusTransferFeeResponse as encodeAxelarNexusV1beta1TransferFeeResponse, encodeAxelarNexusChainsRequest as encodeAxelarNexusV1beta1ChainsRequest, JsonToProtoEnumAxelarNexusChainStatus as JsonToProtoEnumAxelarNexusV1beta1ChainStatus, ProtoToJsonEnumAxelarNexusChainStatus as ProtoToJsonEnumAxelarNexusV1beta1ChainStatus, encodeAxelarNexusChainsResponse as encodeAxelarNexusV1beta1ChainsResponse, encodeAxelarNexusAssetsRequest as encodeAxelarNexusV1beta1AssetsRequest, encodeAxelarNexusAssetsResponse as encodeAxelarNexusV1beta1AssetsResponse, encodeAxelarNexusChainStateRequest as encodeAxelarNexusV1beta1ChainStateRequest, encodeAxelarNexusChainStateResponse as encodeAxelarNexusV1beta1ChainStateResponse, encodeAxelarNexusChainsByAssetRequest as encodeAxelarNexusV1beta1ChainsByAssetRequest, encodeAxelarNexusChainsByAssetResponse as encodeAxelarNexusV1beta1ChainsByAssetResponse, encodeAxelarNexusRecipientAddressRequest as encodeAxelarNexusV1beta1RecipientAddressRequest, encodeAxelarNexusRecipientAddressResponse as encodeAxelarNexusV1beta1RecipientAddressResponse, encodeAxelarNexusTransferRateLimitRequest as encodeAxelarNexusV1beta1TransferRateLimitRequest, encodeAxelarNexusTransferRateLimitResponse as encodeAxelarNexusV1beta1TransferRateLimitResponse, decodeAxelarNexusTransferRateLimit as decodeAxelarNexusV1beta1TransferRateLimit, encodeAxelarNexusTransferRateLimit as encodeAxelarNexusV1beta1TransferRateLimit, encodeAxelarNexusMessageRequest as encodeAxelarNexusV1beta1MessageRequest, encodeAxelarNexusMessageResponse as encodeAxelarNexusV1beta1MessageResponse, encodeAxelarNexusParamsRequest as encodeAxelarNexusV1beta1ParamsRequest, encodeAxelarNexusParamsResponse as encodeAxelarNexusV1beta1ParamsResponse, decodeAxelarNexusChainMaintainersRequest as decodeAxelarNexusV1beta1ChainMaintainersRequest, decodeAxelarNexusChainMaintainersResponse as decodeAxelarNexusV1beta1ChainMaintainersResponse, decodeAxelarNexusLatestDepositAddressRequest as decodeAxelarNexusV1beta1LatestDepositAddressRequest, decodeAxelarNexusLatestDepositAddressResponse as decodeAxelarNexusV1beta1LatestDepositAddressResponse, decodeAxelarNexusTransfersForChainRequest as decodeAxelarNexusV1beta1TransfersForChainRequest, decodeAxelarNexusTransfersForChainResponse as decodeAxelarNexusV1beta1TransfersForChainResponse, decodeAxelarNexusFeeInfoRequest as decodeAxelarNexusV1beta1FeeInfoRequest, decodeAxelarNexusFeeInfoResponse as decodeAxelarNexusV1beta1FeeInfoResponse, decodeAxelarNexusTransferFeeRequest as decodeAxelarNexusV1beta1TransferFeeRequest, decodeAxelarNexusTransferFeeResponse as decodeAxelarNexusV1beta1TransferFeeResponse, decodeAxelarNexusChainsRequest as decodeAxelarNexusV1beta1ChainsRequest, decodeAxelarNexusChainsResponse as decodeAxelarNexusV1beta1ChainsResponse, decodeAxelarNexusAssetsRequest as decodeAxelarNexusV1beta1AssetsRequest, decodeAxelarNexusAssetsResponse as decodeAxelarNexusV1beta1AssetsResponse, decodeAxelarNexusChainStateRequest as decodeAxelarNexusV1beta1ChainStateRequest, decodeAxelarNexusChainStateResponse as decodeAxelarNexusV1beta1ChainStateResponse, decodeAxelarNexusChainsByAssetRequest as decodeAxelarNexusV1beta1ChainsByAssetRequest, decodeAxelarNexusChainsByAssetResponse as decodeAxelarNexusV1beta1ChainsByAssetResponse, decodeAxelarNexusRecipientAddressRequest as decodeAxelarNexusV1beta1RecipientAddressRequest, decodeAxelarNexusRecipientAddressResponse as decodeAxelarNexusV1beta1RecipientAddressResponse, decodeAxelarNexusTransferRateLimitRequest as decodeAxelarNexusV1beta1TransferRateLimitRequest, decodeAxelarNexusTransferRateLimitResponse as decodeAxelarNexusV1beta1TransferRateLimitResponse, decodeAxelarNexusMessageRequest as decodeAxelarNexusV1beta1MessageRequest, decodeAxelarNexusMessageResponse as decodeAxelarNexusV1beta1MessageResponse, decodeAxelarNexusParamsRequest as decodeAxelarNexusV1beta1ParamsRequest, decodeAxelarNexusParamsResponse as decodeAxelarNexusV1beta1ParamsResponse } from './axelar/nexus/v1beta1/query.js';
import { encodeAxelarNexusRegisterChainMaintainerRequest as encodeAxelarNexusV1beta1RegisterChainMaintainerRequest, encodeAxelarNexusRegisterChainMaintainerResponse as encodeAxelarNexusV1beta1RegisterChainMaintainerResponse, encodeAxelarNexusDeregisterChainMaintainerRequest as encodeAxelarNexusV1beta1DeregisterChainMaintainerRequest, encodeAxelarNexusDeregisterChainMaintainerResponse as encodeAxelarNexusV1beta1DeregisterChainMaintainerResponse, encodeAxelarNexusActivateChainRequest as encodeAxelarNexusV1beta1ActivateChainRequest, encodeAxelarNexusActivateChainResponse as encodeAxelarNexusV1beta1ActivateChainResponse, encodeAxelarNexusDeactivateChainRequest as encodeAxelarNexusV1beta1DeactivateChainRequest, encodeAxelarNexusDeactivateChainResponse as encodeAxelarNexusV1beta1DeactivateChainResponse, encodeAxelarNexusRegisterAssetFeeRequest as encodeAxelarNexusV1beta1RegisterAssetFeeRequest, encodeAxelarNexusRegisterAssetFeeResponse as encodeAxelarNexusV1beta1RegisterAssetFeeResponse, encodeAxelarNexusSetTransferRateLimitRequest as encodeAxelarNexusV1beta1SetTransferRateLimitRequest, encodeAxelarNexusSetTransferRateLimitResponse as encodeAxelarNexusV1beta1SetTransferRateLimitResponse, decodeAxelarNexusRegisterChainMaintainerRequest as decodeAxelarNexusV1beta1RegisterChainMaintainerRequest, decodeAxelarNexusRegisterChainMaintainerResponse as decodeAxelarNexusV1beta1RegisterChainMaintainerResponse, decodeAxelarNexusDeregisterChainMaintainerRequest as decodeAxelarNexusV1beta1DeregisterChainMaintainerRequest, decodeAxelarNexusDeregisterChainMaintainerResponse as decodeAxelarNexusV1beta1DeregisterChainMaintainerResponse, decodeAxelarNexusActivateChainRequest as decodeAxelarNexusV1beta1ActivateChainRequest, decodeAxelarNexusActivateChainResponse as decodeAxelarNexusV1beta1ActivateChainResponse, decodeAxelarNexusDeactivateChainRequest as decodeAxelarNexusV1beta1DeactivateChainRequest, decodeAxelarNexusDeactivateChainResponse as decodeAxelarNexusV1beta1DeactivateChainResponse, decodeAxelarNexusRegisterAssetFeeRequest as decodeAxelarNexusV1beta1RegisterAssetFeeRequest, decodeAxelarNexusRegisterAssetFeeResponse as decodeAxelarNexusV1beta1RegisterAssetFeeResponse, decodeAxelarNexusSetTransferRateLimitRequest as decodeAxelarNexusV1beta1SetTransferRateLimitRequest, decodeAxelarNexusSetTransferRateLimitResponse as decodeAxelarNexusV1beta1SetTransferRateLimitResponse } from './axelar/nexus/v1beta1/tx.js';
import { encodeAxelarNexusMaintainerState as encodeAxelarNexusV1beta1MaintainerState, encodeAxelarNexusChainState as encodeAxelarNexusV1beta1ChainState, decodeAxelarNexusMaintainerState as decodeAxelarNexusV1beta1MaintainerState, encodeAxelarNexusLinkedAddresses as encodeAxelarNexusV1beta1LinkedAddresses, encodeAxelarNexusRateLimit as encodeAxelarNexusV1beta1RateLimit, encodeAxelarNexusTransferEpoch as encodeAxelarNexusV1beta1TransferEpoch, decodeAxelarNexusChainState as decodeAxelarNexusV1beta1ChainState, decodeAxelarNexusLinkedAddresses as decodeAxelarNexusV1beta1LinkedAddresses, decodeAxelarNexusRateLimit as decodeAxelarNexusV1beta1RateLimit, decodeAxelarNexusTransferEpoch as decodeAxelarNexusV1beta1TransferEpoch } from './axelar/nexus/v1beta1/types.js';
import { JsonToProtoEnumAxelarPermissionExportedRole as JsonToProtoEnumAxelarPermissionExportedV1beta1Role, ProtoToJsonEnumAxelarPermissionExportedRole as ProtoToJsonEnumAxelarPermissionExportedV1beta1Role } from './axelar/permission/exported/v1beta1/types.js';
import { encodeAxelarPermissionGenesisState as encodeAxelarPermissionV1beta1GenesisState, decodeAxelarPermissionGenesisState as decodeAxelarPermissionV1beta1GenesisState } from './axelar/permission/v1beta1/genesis.js';
import { decodeAxelarPermissionParams as decodeAxelarPermissionV1beta1Params, encodeAxelarPermissionParams as encodeAxelarPermissionV1beta1Params } from './axelar/permission/v1beta1/params.js';
import { encodeAxelarPermissionQueryGovernanceKeyRequest as encodeAxelarPermissionV1beta1QueryGovernanceKeyRequest, encodeAxelarPermissionQueryGovernanceKeyResponse as encodeAxelarPermissionV1beta1QueryGovernanceKeyResponse, encodeAxelarPermissionParamsRequest as encodeAxelarPermissionV1beta1ParamsRequest, encodeAxelarPermissionParamsResponse as encodeAxelarPermissionV1beta1ParamsResponse, decodeAxelarPermissionQueryGovernanceKeyRequest as decodeAxelarPermissionV1beta1QueryGovernanceKeyRequest, decodeAxelarPermissionQueryGovernanceKeyResponse as decodeAxelarPermissionV1beta1QueryGovernanceKeyResponse, decodeAxelarPermissionParamsRequest as decodeAxelarPermissionV1beta1ParamsRequest, decodeAxelarPermissionParamsResponse as decodeAxelarPermissionV1beta1ParamsResponse } from './axelar/permission/v1beta1/query.js';
import { encodeAxelarPermissionUpdateGovernanceKeyRequest as encodeAxelarPermissionV1beta1UpdateGovernanceKeyRequest, encodeAxelarPermissionUpdateGovernanceKeyResponse as encodeAxelarPermissionV1beta1UpdateGovernanceKeyResponse, encodeAxelarPermissionRegisterControllerRequest as encodeAxelarPermissionV1beta1RegisterControllerRequest, encodeAxelarPermissionRegisterControllerResponse as encodeAxelarPermissionV1beta1RegisterControllerResponse, encodeAxelarPermissionDeregisterControllerRequest as encodeAxelarPermissionV1beta1DeregisterControllerRequest, encodeAxelarPermissionDeregisterControllerResponse as encodeAxelarPermissionV1beta1DeregisterControllerResponse, decodeAxelarPermissionUpdateGovernanceKeyRequest as decodeAxelarPermissionV1beta1UpdateGovernanceKeyRequest, decodeAxelarPermissionUpdateGovernanceKeyResponse as decodeAxelarPermissionV1beta1UpdateGovernanceKeyResponse, decodeAxelarPermissionRegisterControllerRequest as decodeAxelarPermissionV1beta1RegisterControllerRequest, decodeAxelarPermissionRegisterControllerResponse as decodeAxelarPermissionV1beta1RegisterControllerResponse, decodeAxelarPermissionDeregisterControllerRequest as decodeAxelarPermissionV1beta1DeregisterControllerRequest, decodeAxelarPermissionDeregisterControllerResponse as decodeAxelarPermissionV1beta1DeregisterControllerResponse } from './axelar/permission/v1beta1/tx.js';
import { encodeAxelarPermissionGovAccount as encodeAxelarPermissionV1beta1GovAccount, decodeAxelarPermissionGovAccount as decodeAxelarPermissionV1beta1GovAccount } from './axelar/permission/v1beta1/types.js';
import { encodeAxelarRewardGenesisState as encodeAxelarRewardV1beta1GenesisState, decodeAxelarRewardGenesisState as decodeAxelarRewardV1beta1GenesisState } from './axelar/reward/v1beta1/genesis.js';
import { decodeAxelarRewardParams as decodeAxelarRewardV1beta1Params, encodeAxelarRewardParams as encodeAxelarRewardV1beta1Params } from './axelar/reward/v1beta1/params.js';
import { encodeAxelarRewardInflationRateRequest as encodeAxelarRewardV1beta1InflationRateRequest, encodeAxelarRewardInflationRateResponse as encodeAxelarRewardV1beta1InflationRateResponse, encodeAxelarRewardParamsRequest as encodeAxelarRewardV1beta1ParamsRequest, encodeAxelarRewardParamsResponse as encodeAxelarRewardV1beta1ParamsResponse, decodeAxelarRewardInflationRateRequest as decodeAxelarRewardV1beta1InflationRateRequest, decodeAxelarRewardInflationRateResponse as decodeAxelarRewardV1beta1InflationRateResponse, decodeAxelarRewardParamsRequest as decodeAxelarRewardV1beta1ParamsRequest, decodeAxelarRewardParamsResponse as decodeAxelarRewardV1beta1ParamsResponse } from './axelar/reward/v1beta1/query.js';
import { encodeAxelarRewardRefundMsgRequest as encodeAxelarRewardV1beta1RefundMsgRequest, encodeAxelarRewardRefundMsgResponse as encodeAxelarRewardV1beta1RefundMsgResponse, decodeAxelarRewardRefundMsgRequest as decodeAxelarRewardV1beta1RefundMsgRequest, decodeAxelarRewardRefundMsgResponse as decodeAxelarRewardV1beta1RefundMsgResponse } from './axelar/reward/v1beta1/tx.js';
import { encodeAxelarRewardPool as encodeAxelarRewardV1beta1Pool, decodeAxelarRewardPoolReward as decodeAxelarRewardV1beta1PoolReward, encodeAxelarRewardPoolReward as encodeAxelarRewardV1beta1PoolReward, encodeAxelarRewardRefund as encodeAxelarRewardV1beta1Refund, decodeAxelarRewardPool as decodeAxelarRewardV1beta1Pool, decodeAxelarRewardRefund as decodeAxelarRewardV1beta1Refund } from './axelar/reward/v1beta1/types.js';
import { decodeAxelarSnapshotExportedSnapshot as decodeAxelarSnapshotExportedV1beta1Snapshot, encodeAxelarSnapshotExportedSnapshot as encodeAxelarSnapshotExportedV1beta1Snapshot, decodeAxelarSnapshotExportedSnapshotParticipantsEntry as decodeAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry, encodeAxelarSnapshotExportedSnapshotParticipantsEntry as encodeAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry, decodeAxelarSnapshotExportedParticipant as decodeAxelarSnapshotExportedV1beta1Participant, encodeAxelarSnapshotExportedParticipant as encodeAxelarSnapshotExportedV1beta1Participant } from './axelar/snapshot/exported/v1beta1/types.js';
import { encodeAxelarSnapshotGenesisState as encodeAxelarSnapshotV1beta1GenesisState, decodeAxelarSnapshotGenesisState as decodeAxelarSnapshotV1beta1GenesisState } from './axelar/snapshot/v1beta1/genesis.js';
import { decodeAxelarSnapshotParams as decodeAxelarSnapshotV1beta1Params, encodeAxelarSnapshotParams as encodeAxelarSnapshotV1beta1Params } from './axelar/snapshot/v1beta1/params.js';
import { encodeAxelarSnapshotQueryValidatorsResponse as encodeAxelarSnapshotV1beta1QueryValidatorsResponse, decodeAxelarSnapshotQueryValidatorsResponseValidator as decodeAxelarSnapshotV1beta1QueryValidatorsResponseValidator, encodeAxelarSnapshotQueryValidatorsResponseValidator as encodeAxelarSnapshotV1beta1QueryValidatorsResponseValidator, decodeAxelarSnapshotQueryValidatorsResponseTssIllegibilityInfo as decodeAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo, encodeAxelarSnapshotQueryValidatorsResponseTssIllegibilityInfo as encodeAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo, encodeAxelarSnapshotParamsRequest as encodeAxelarSnapshotV1beta1ParamsRequest, encodeAxelarSnapshotParamsResponse as encodeAxelarSnapshotV1beta1ParamsResponse, decodeAxelarSnapshotQueryValidatorsResponse as decodeAxelarSnapshotV1beta1QueryValidatorsResponse, decodeAxelarSnapshotParamsRequest as decodeAxelarSnapshotV1beta1ParamsRequest, decodeAxelarSnapshotParamsResponse as decodeAxelarSnapshotV1beta1ParamsResponse } from './axelar/snapshot/v1beta1/query.js';
import { encodeAxelarSnapshotRegisterProxyRequest as encodeAxelarSnapshotV1beta1RegisterProxyRequest, encodeAxelarSnapshotRegisterProxyResponse as encodeAxelarSnapshotV1beta1RegisterProxyResponse, encodeAxelarSnapshotDeactivateProxyRequest as encodeAxelarSnapshotV1beta1DeactivateProxyRequest, encodeAxelarSnapshotDeactivateProxyResponse as encodeAxelarSnapshotV1beta1DeactivateProxyResponse, decodeAxelarSnapshotRegisterProxyRequest as decodeAxelarSnapshotV1beta1RegisterProxyRequest, decodeAxelarSnapshotRegisterProxyResponse as decodeAxelarSnapshotV1beta1RegisterProxyResponse, decodeAxelarSnapshotDeactivateProxyRequest as decodeAxelarSnapshotV1beta1DeactivateProxyRequest, decodeAxelarSnapshotDeactivateProxyResponse as decodeAxelarSnapshotV1beta1DeactivateProxyResponse } from './axelar/snapshot/v1beta1/tx.js';
import { encodeAxelarSnapshotProxiedValidator as encodeAxelarSnapshotV1beta1ProxiedValidator, decodeAxelarSnapshotProxiedValidator as decodeAxelarSnapshotV1beta1ProxiedValidator } from './axelar/snapshot/v1beta1/types.js';
import { JsonToProtoEnumAxelarTssExportedKeyType as JsonToProtoEnumAxelarTssExportedV1beta1KeyType, ProtoToJsonEnumAxelarTssExportedKeyType as ProtoToJsonEnumAxelarTssExportedV1beta1KeyType, encodeAxelarTssExportedKeyRequirement as encodeAxelarTssExportedV1beta1KeyRequirement, JsonToProtoEnumAxelarTssExportedKeyRole as JsonToProtoEnumAxelarTssExportedV1beta1KeyRole, JsonToProtoEnumAxelarTssExportedKeyShareDistributionPolicy as JsonToProtoEnumAxelarTssExportedV1beta1KeyShareDistributionPolicy, ProtoToJsonEnumAxelarTssExportedKeyRole as ProtoToJsonEnumAxelarTssExportedV1beta1KeyRole, ProtoToJsonEnumAxelarTssExportedKeyShareDistributionPolicy as ProtoToJsonEnumAxelarTssExportedV1beta1KeyShareDistributionPolicy, encodeAxelarTssExportedSigKeyPair as encodeAxelarTssExportedV1beta1SigKeyPair, decodeAxelarTssExportedSigKeyPair as decodeAxelarTssExportedV1beta1SigKeyPair, decodeAxelarTssExportedKeyRequirement as decodeAxelarTssExportedV1beta1KeyRequirement } from './axelar/tss/exported/v1beta1/types.js';
import { encodeAxelarTssTofndKeyPresenceRequest as encodeAxelarTssTofndV1beta1KeyPresenceRequest, encodeAxelarTssTofndKeyPresenceResponse as encodeAxelarTssTofndV1beta1KeyPresenceResponse, JsonToProtoEnumAxelarTssTofndKeyPresenceResponseResponse as JsonToProtoEnumAxelarTssTofndV1beta1KeyPresenceResponseResponse, ProtoToJsonEnumAxelarTssTofndKeyPresenceResponseResponse as ProtoToJsonEnumAxelarTssTofndV1beta1KeyPresenceResponseResponse, decodeAxelarTssTofndKeyPresenceRequest as decodeAxelarTssTofndV1beta1KeyPresenceRequest, decodeAxelarTssTofndKeyPresenceResponse as decodeAxelarTssTofndV1beta1KeyPresenceResponse } from './axelar/tss/tofnd/v1beta1/common.js';
import { encodeAxelarTssTofndKeygenRequest as encodeAxelarTssTofndV1beta1KeygenRequest, encodeAxelarTssTofndKeygenResponse as encodeAxelarTssTofndV1beta1KeygenResponse, encodeAxelarTssTofndSignRequest as encodeAxelarTssTofndV1beta1SignRequest, encodeAxelarTssTofndSignResponse as encodeAxelarTssTofndV1beta1SignResponse, decodeAxelarTssTofndKeygenRequest as decodeAxelarTssTofndV1beta1KeygenRequest, decodeAxelarTssTofndKeygenResponse as decodeAxelarTssTofndV1beta1KeygenResponse, decodeAxelarTssTofndSignRequest as decodeAxelarTssTofndV1beta1SignRequest, decodeAxelarTssTofndSignResponse as decodeAxelarTssTofndV1beta1SignResponse } from './axelar/tss/tofnd/v1beta1/multisig.js';
import { encodeAxelarTssTofndRecoverRequest as encodeAxelarTssTofndV1beta1RecoverRequest, decodeAxelarTssTofndKeygenInit as decodeAxelarTssTofndV1beta1KeygenInit, decodeAxelarTssTofndKeygenOutput as decodeAxelarTssTofndV1beta1KeygenOutput, encodeAxelarTssTofndKeygenInit as encodeAxelarTssTofndV1beta1KeygenInit, encodeAxelarTssTofndKeygenOutput as encodeAxelarTssTofndV1beta1KeygenOutput, encodeAxelarTssTofndRecoverResponse as encodeAxelarTssTofndV1beta1RecoverResponse, JsonToProtoEnumAxelarTssTofndRecoverResponseResponse as JsonToProtoEnumAxelarTssTofndV1beta1RecoverResponseResponse, ProtoToJsonEnumAxelarTssTofndRecoverResponseResponse as ProtoToJsonEnumAxelarTssTofndV1beta1RecoverResponseResponse, encodeAxelarTssTofndMessageIn as encodeAxelarTssTofndV1beta1MessageIn, decodeAxelarTssTofndSignInit as decodeAxelarTssTofndV1beta1SignInit, decodeAxelarTssTofndTrafficIn as decodeAxelarTssTofndV1beta1TrafficIn, encodeAxelarTssTofndSignInit as encodeAxelarTssTofndV1beta1SignInit, encodeAxelarTssTofndTrafficIn as encodeAxelarTssTofndV1beta1TrafficIn, encodeAxelarTssTofndMessageOut as encodeAxelarTssTofndV1beta1MessageOut, decodeAxelarTssTofndTrafficOut as decodeAxelarTssTofndV1beta1TrafficOut, decodeAxelarTssTofndMessageOutKeygenResult as decodeAxelarTssTofndV1beta1MessageOutKeygenResult, decodeAxelarTssTofndMessageOutSignResult as decodeAxelarTssTofndV1beta1MessageOutSignResult, encodeAxelarTssTofndTrafficOut as encodeAxelarTssTofndV1beta1TrafficOut, encodeAxelarTssTofndMessageOutKeygenResult as encodeAxelarTssTofndV1beta1MessageOutKeygenResult, decodeAxelarTssTofndMessageOutCriminalList as decodeAxelarTssTofndV1beta1MessageOutCriminalList, encodeAxelarTssTofndMessageOutCriminalList as encodeAxelarTssTofndV1beta1MessageOutCriminalList, decodeAxelarTssTofndMessageOutCriminalListCriminal as decodeAxelarTssTofndV1beta1MessageOutCriminalListCriminal, encodeAxelarTssTofndMessageOutCriminalListCriminal as encodeAxelarTssTofndV1beta1MessageOutCriminalListCriminal, JsonToProtoEnumAxelarTssTofndMessageOutCriminalListCriminalCrimeType as JsonToProtoEnumAxelarTssTofndV1beta1MessageOutCriminalListCriminalCrimeType, ProtoToJsonEnumAxelarTssTofndMessageOutCriminalListCriminalCrimeType as ProtoToJsonEnumAxelarTssTofndV1beta1MessageOutCriminalListCriminalCrimeType, encodeAxelarTssTofndMessageOutSignResult as encodeAxelarTssTofndV1beta1MessageOutSignResult, decodeAxelarTssTofndRecoverRequest as decodeAxelarTssTofndV1beta1RecoverRequest, decodeAxelarTssTofndRecoverResponse as decodeAxelarTssTofndV1beta1RecoverResponse, decodeAxelarTssTofndMessageIn as decodeAxelarTssTofndV1beta1MessageIn, decodeAxelarTssTofndMessageOut as decodeAxelarTssTofndV1beta1MessageOut } from './axelar/tss/tofnd/v1beta1/tofnd.js';
import { encodeAxelarTssGenesisState as encodeAxelarTssV1beta1GenesisState, decodeAxelarTssGenesisState as decodeAxelarTssV1beta1GenesisState } from './axelar/tss/v1beta1/genesis.js';
import { decodeAxelarTssParams as decodeAxelarTssV1beta1Params, encodeAxelarTssParams as encodeAxelarTssV1beta1Params } from './axelar/tss/v1beta1/params.js';
import { encodeAxelarTssParamsRequest as encodeAxelarTssV1beta1ParamsRequest, encodeAxelarTssParamsResponse as encodeAxelarTssV1beta1ParamsResponse, decodeAxelarTssParamsRequest as decodeAxelarTssV1beta1ParamsRequest, decodeAxelarTssParamsResponse as decodeAxelarTssV1beta1ParamsResponse } from './axelar/tss/v1beta1/query.js';
import { encodeAxelarTssStartKeygenRequest as encodeAxelarTssV1beta1StartKeygenRequest, encodeAxelarTssStartKeygenResponse as encodeAxelarTssV1beta1StartKeygenResponse, encodeAxelarTssRotateKeyRequest as encodeAxelarTssV1beta1RotateKeyRequest, encodeAxelarTssRotateKeyResponse as encodeAxelarTssV1beta1RotateKeyResponse, encodeAxelarTssProcessKeygenTrafficRequest as encodeAxelarTssV1beta1ProcessKeygenTrafficRequest, encodeAxelarTssProcessKeygenTrafficResponse as encodeAxelarTssV1beta1ProcessKeygenTrafficResponse, encodeAxelarTssProcessSignTrafficRequest as encodeAxelarTssV1beta1ProcessSignTrafficRequest, encodeAxelarTssProcessSignTrafficResponse as encodeAxelarTssV1beta1ProcessSignTrafficResponse, encodeAxelarTssVotePubKeyRequest as encodeAxelarTssV1beta1VotePubKeyRequest, encodeAxelarTssVotePubKeyResponse as encodeAxelarTssV1beta1VotePubKeyResponse, encodeAxelarTssVoteSigRequest as encodeAxelarTssV1beta1VoteSigRequest, encodeAxelarTssVoteSigResponse as encodeAxelarTssV1beta1VoteSigResponse, encodeAxelarTssHeartBeatRequest as encodeAxelarTssV1beta1HeartBeatRequest, encodeAxelarTssHeartBeatResponse as encodeAxelarTssV1beta1HeartBeatResponse, encodeAxelarTssRegisterExternalKeysRequest as encodeAxelarTssV1beta1RegisterExternalKeysRequest, decodeAxelarTssRegisterExternalKeysRequestExternalKey as decodeAxelarTssV1beta1RegisterExternalKeysRequestExternalKey, encodeAxelarTssRegisterExternalKeysRequestExternalKey as encodeAxelarTssV1beta1RegisterExternalKeysRequestExternalKey, encodeAxelarTssRegisterExternalKeysResponse as encodeAxelarTssV1beta1RegisterExternalKeysResponse, encodeAxelarTssSubmitMultisigPubKeysRequest as encodeAxelarTssV1beta1SubmitMultisigPubKeysRequest, encodeAxelarTssSubmitMultisigPubKeysResponse as encodeAxelarTssV1beta1SubmitMultisigPubKeysResponse, encodeAxelarTssSubmitMultisigSignaturesRequest as encodeAxelarTssV1beta1SubmitMultisigSignaturesRequest, encodeAxelarTssSubmitMultisigSignaturesResponse as encodeAxelarTssV1beta1SubmitMultisigSignaturesResponse, decodeAxelarTssStartKeygenRequest as decodeAxelarTssV1beta1StartKeygenRequest, decodeAxelarTssStartKeygenResponse as decodeAxelarTssV1beta1StartKeygenResponse, decodeAxelarTssRotateKeyRequest as decodeAxelarTssV1beta1RotateKeyRequest, decodeAxelarTssRotateKeyResponse as decodeAxelarTssV1beta1RotateKeyResponse, decodeAxelarTssProcessKeygenTrafficRequest as decodeAxelarTssV1beta1ProcessKeygenTrafficRequest, decodeAxelarTssProcessKeygenTrafficResponse as decodeAxelarTssV1beta1ProcessKeygenTrafficResponse, decodeAxelarTssProcessSignTrafficRequest as decodeAxelarTssV1beta1ProcessSignTrafficRequest, decodeAxelarTssProcessSignTrafficResponse as decodeAxelarTssV1beta1ProcessSignTrafficResponse, decodeAxelarTssVotePubKeyRequest as decodeAxelarTssV1beta1VotePubKeyRequest, decodeAxelarTssVotePubKeyResponse as decodeAxelarTssV1beta1VotePubKeyResponse, decodeAxelarTssVoteSigRequest as decodeAxelarTssV1beta1VoteSigRequest, decodeAxelarTssVoteSigResponse as decodeAxelarTssV1beta1VoteSigResponse, decodeAxelarTssHeartBeatRequest as decodeAxelarTssV1beta1HeartBeatRequest, decodeAxelarTssHeartBeatResponse as decodeAxelarTssV1beta1HeartBeatResponse, decodeAxelarTssRegisterExternalKeysRequest as decodeAxelarTssV1beta1RegisterExternalKeysRequest, decodeAxelarTssRegisterExternalKeysResponse as decodeAxelarTssV1beta1RegisterExternalKeysResponse, decodeAxelarTssSubmitMultisigPubKeysRequest as decodeAxelarTssV1beta1SubmitMultisigPubKeysRequest, decodeAxelarTssSubmitMultisigPubKeysResponse as decodeAxelarTssV1beta1SubmitMultisigPubKeysResponse, decodeAxelarTssSubmitMultisigSignaturesRequest as decodeAxelarTssV1beta1SubmitMultisigSignaturesRequest, decodeAxelarTssSubmitMultisigSignaturesResponse as decodeAxelarTssV1beta1SubmitMultisigSignaturesResponse } from './axelar/tss/v1beta1/tx.js';
import { decodeAxelarTssKeyInfo as decodeAxelarTssV1beta1KeyInfo, encodeAxelarTssKeyInfo as encodeAxelarTssV1beta1KeyInfo, encodeAxelarTssKeygenVoteData as encodeAxelarTssV1beta1KeygenVoteData, encodeAxelarTssMultisigInfo as encodeAxelarTssV1beta1MultisigInfo, decodeAxelarTssMultisigInfoInfo as decodeAxelarTssV1beta1MultisigInfoInfo, encodeAxelarTssMultisigInfoInfo as encodeAxelarTssV1beta1MultisigInfoInfo, encodeAxelarTssKeyRecoveryInfo as encodeAxelarTssV1beta1KeyRecoveryInfo, decodeAxelarTssKeyRecoveryInfoPrivateEntry as decodeAxelarTssV1beta1KeyRecoveryInfoPrivateEntry, encodeAxelarTssKeyRecoveryInfoPrivateEntry as encodeAxelarTssV1beta1KeyRecoveryInfoPrivateEntry, encodeAxelarTssExternalKeys as encodeAxelarTssV1beta1ExternalKeys, encodeAxelarTssValidatorStatus as encodeAxelarTssV1beta1ValidatorStatus, decodeAxelarTssKeygenVoteData as decodeAxelarTssV1beta1KeygenVoteData, decodeAxelarTssMultisigInfo as decodeAxelarTssV1beta1MultisigInfo, decodeAxelarTssKeyRecoveryInfo as decodeAxelarTssV1beta1KeyRecoveryInfo, decodeAxelarTssExternalKeys as decodeAxelarTssV1beta1ExternalKeys, decodeAxelarTssValidatorStatus as decodeAxelarTssV1beta1ValidatorStatus } from './axelar/tss/v1beta1/types.js';
import { encodeAxelarUtilsBitmap as encodeAxelarUtilsV1beta1Bitmap, decodeAxelarUtilsCircularBuffer as decodeAxelarUtilsV1beta1CircularBuffer, encodeAxelarUtilsCircularBuffer as encodeAxelarUtilsV1beta1CircularBuffer, decodeAxelarUtilsBitmap as decodeAxelarUtilsV1beta1Bitmap } from './axelar/utils/v1beta1/bitmap.js';
import { decodeAxelarUtilsQueueState as decodeAxelarUtilsV1beta1QueueState, encodeAxelarUtilsQueueState as encodeAxelarUtilsV1beta1QueueState, decodeAxelarUtilsQueueStateItemsEntry as decodeAxelarUtilsV1beta1QueueStateItemsEntry, encodeAxelarUtilsQueueStateItemsEntry as encodeAxelarUtilsV1beta1QueueStateItemsEntry, decodeAxelarUtilsQueueStateItem as decodeAxelarUtilsV1beta1QueueStateItem, encodeAxelarUtilsQueueStateItem as encodeAxelarUtilsV1beta1QueueStateItem } from './axelar/utils/v1beta1/queuer.js';
import { decodeAxelarUtilsThreshold as decodeAxelarUtilsV1beta1Threshold, encodeAxelarUtilsThreshold as encodeAxelarUtilsV1beta1Threshold } from './axelar/utils/v1beta1/threshold.js';
import { encodeAxelarVoteExportedPollMetadata as encodeAxelarVoteExportedV1beta1PollMetadata, JsonToProtoEnumAxelarVoteExportedPollState as JsonToProtoEnumAxelarVoteExportedV1beta1PollState, ProtoToJsonEnumAxelarVoteExportedPollState as ProtoToJsonEnumAxelarVoteExportedV1beta1PollState, encodeAxelarVoteExportedPollKey as encodeAxelarVoteExportedV1beta1PollKey, encodeAxelarVoteExportedPollParticipants as encodeAxelarVoteExportedV1beta1PollParticipants, decodeAxelarVoteExportedPollMetadata as decodeAxelarVoteExportedV1beta1PollMetadata, decodeAxelarVoteExportedPollParticipants as decodeAxelarVoteExportedV1beta1PollParticipants, decodeAxelarVoteExportedPollKey as decodeAxelarVoteExportedV1beta1PollKey } from './axelar/vote/exported/v1beta1/types.js';
import { encodeAxelarVoteVoted as encodeAxelarVoteV1beta1Voted, decodeAxelarVoteVoted as decodeAxelarVoteV1beta1Voted } from './axelar/vote/v1beta1/events.js';
import { encodeAxelarVoteGenesisState as encodeAxelarVoteV1beta1GenesisState, decodeAxelarVoteGenesisState as decodeAxelarVoteV1beta1GenesisState } from './axelar/vote/v1beta1/genesis.js';
import { decodeAxelarVoteParams as decodeAxelarVoteV1beta1Params, encodeAxelarVoteParams as encodeAxelarVoteV1beta1Params } from './axelar/vote/v1beta1/params.js';
import { encodeAxelarVoteParamsRequest as encodeAxelarVoteV1beta1ParamsRequest, encodeAxelarVoteParamsResponse as encodeAxelarVoteV1beta1ParamsResponse, decodeAxelarVoteParamsRequest as decodeAxelarVoteV1beta1ParamsRequest, decodeAxelarVoteParamsResponse as decodeAxelarVoteV1beta1ParamsResponse } from './axelar/vote/v1beta1/query.js';
import { encodeAxelarVoteVoteRequest as encodeAxelarVoteV1beta1VoteRequest, encodeAxelarVoteVoteResponse as encodeAxelarVoteV1beta1VoteResponse, decodeAxelarVoteVoteRequest as decodeAxelarVoteV1beta1VoteRequest, decodeAxelarVoteVoteResponse as decodeAxelarVoteV1beta1VoteResponse } from './axelar/vote/v1beta1/tx.js';
import { encodeAxelarVoteTalliedVote as encodeAxelarVoteV1beta1TalliedVote, decodeAxelarVoteTalliedVoteIsVoterLateEntry as decodeAxelarVoteV1beta1TalliedVoteIsVoterLateEntry, encodeAxelarVoteTalliedVoteIsVoterLateEntry as encodeAxelarVoteV1beta1TalliedVoteIsVoterLateEntry, decodeAxelarVoteTalliedVote as decodeAxelarVoteV1beta1TalliedVote } from './axelar/vote/v1beta1/types.js';
import { encodeCosmosAccountsModuleModule as encodeCosmosAccountsModuleV1Module, decodeCosmosAccountsModuleModule as decodeCosmosAccountsModuleV1Module } from './cosmos/accounts/module/v1/module.js';
import { encodeCosmosAccountsGenesisState as encodeCosmosAccountsV1GenesisState, decodeCosmosAccountsGenesisAccount as decodeCosmosAccountsV1GenesisAccount, encodeCosmosAccountsGenesisAccount as encodeCosmosAccountsV1GenesisAccount, decodeCosmosAccountsKVPair as decodeCosmosAccountsV1KVPair, encodeCosmosAccountsKVPair as encodeCosmosAccountsV1KVPair, decodeCosmosAccountsGenesisState as decodeCosmosAccountsV1GenesisState } from './cosmos/accounts/v1/genesis.js';
import { encodeCosmosAccountsAccountQueryRequest as encodeCosmosAccountsV1AccountQueryRequest, encodeCosmosAccountsAccountQueryResponse as encodeCosmosAccountsV1AccountQueryResponse, decodeCosmosAccountsAccountQueryRequest as decodeCosmosAccountsV1AccountQueryRequest, decodeCosmosAccountsAccountQueryResponse as decodeCosmosAccountsV1AccountQueryResponse } from './cosmos/accounts/v1/query.js';
import { encodeCosmosAccountsMsgInit as encodeCosmosAccountsV1MsgInit, encodeCosmosAccountsMsgInitResponse as encodeCosmosAccountsV1MsgInitResponse, encodeCosmosAccountsMsgExecute as encodeCosmosAccountsV1MsgExecute, encodeCosmosAccountsMsgExecuteResponse as encodeCosmosAccountsV1MsgExecuteResponse, decodeCosmosAccountsMsgInit as decodeCosmosAccountsV1MsgInit, decodeCosmosAccountsMsgInitResponse as decodeCosmosAccountsV1MsgInitResponse, decodeCosmosAccountsMsgExecute as decodeCosmosAccountsV1MsgExecute, decodeCosmosAccountsMsgExecuteResponse as decodeCosmosAccountsV1MsgExecuteResponse } from './cosmos/accounts/v1/tx.js';
import { encodeCosmosAppRuntimeModule as encodeCosmosAppRuntimeV1alpha1Module, decodeCosmosAppRuntimeStoreKeyConfig as decodeCosmosAppRuntimeV1alpha1StoreKeyConfig, encodeCosmosAppRuntimeStoreKeyConfig as encodeCosmosAppRuntimeV1alpha1StoreKeyConfig, decodeCosmosAppRuntimeModule as decodeCosmosAppRuntimeV1alpha1Module } from './cosmos/app/runtime/v1alpha1/module.js';
import { decodeCosmosAppConfig as decodeCosmosAppV1alpha1Config, encodeCosmosAppConfig as encodeCosmosAppV1alpha1Config, decodeCosmosAppModuleConfig as decodeCosmosAppV1alpha1ModuleConfig, decodeCosmosAppGolangBinding as decodeCosmosAppV1alpha1GolangBinding, encodeCosmosAppModuleConfig as encodeCosmosAppV1alpha1ModuleConfig, encodeCosmosAppGolangBinding as encodeCosmosAppV1alpha1GolangBinding } from './cosmos/app/v1alpha1/config.js';
import { encodeCosmosAppModuleDescriptor as encodeCosmosAppV1alpha1ModuleDescriptor, decodeCosmosAppPackageReference as decodeCosmosAppV1alpha1PackageReference, decodeCosmosAppMigrateFromInfo as decodeCosmosAppV1alpha1MigrateFromInfo, encodeCosmosAppPackageReference as encodeCosmosAppV1alpha1PackageReference, encodeCosmosAppMigrateFromInfo as encodeCosmosAppV1alpha1MigrateFromInfo, decodeCosmosAppModuleDescriptor as decodeCosmosAppV1alpha1ModuleDescriptor } from './cosmos/app/v1alpha1/module.js';
import { encodeCosmosAppQueryConfigRequest as encodeCosmosAppV1alpha1QueryConfigRequest, encodeCosmosAppQueryConfigResponse as encodeCosmosAppV1alpha1QueryConfigResponse, decodeCosmosAppQueryConfigRequest as decodeCosmosAppV1alpha1QueryConfigRequest, decodeCosmosAppQueryConfigResponse as decodeCosmosAppV1alpha1QueryConfigResponse } from './cosmos/app/v1alpha1/query.js';
import { encodeCosmosAuthModuleModule as encodeCosmosAuthModuleV1Module, decodeCosmosAuthModuleModuleAccountPermission as decodeCosmosAuthModuleV1ModuleAccountPermission, encodeCosmosAuthModuleModuleAccountPermission as encodeCosmosAuthModuleV1ModuleAccountPermission, decodeCosmosAuthModuleModule as decodeCosmosAuthModuleV1Module } from './cosmos/auth/module/v1/module.js';
import { decodeCosmosAuthParams as decodeCosmosAuthV1beta1Params, encodeCosmosAuthParams as encodeCosmosAuthV1beta1Params, decodeCosmosAuthBaseAccount as decodeCosmosAuthV1beta1BaseAccount, encodeCosmosAuthBaseAccount as encodeCosmosAuthV1beta1BaseAccount, encodeCosmosAuthModuleAccount as encodeCosmosAuthV1beta1ModuleAccount, encodeCosmosAuthModuleCredential as encodeCosmosAuthV1beta1ModuleCredential, decodeCosmosAuthModuleAccount as decodeCosmosAuthV1beta1ModuleAccount, decodeCosmosAuthModuleCredential as decodeCosmosAuthV1beta1ModuleCredential } from './cosmos/auth/v1beta1/auth.js';
import { encodeCosmosAuthGenesisState as encodeCosmosAuthV1beta1GenesisState, decodeCosmosAuthGenesisState as decodeCosmosAuthV1beta1GenesisState } from './cosmos/auth/v1beta1/genesis.js';
import { encodeCosmosAuthQueryAccountsRequest as encodeCosmosAuthV1beta1QueryAccountsRequest, encodeCosmosAuthQueryAccountsResponse as encodeCosmosAuthV1beta1QueryAccountsResponse, encodeCosmosAuthQueryAccountRequest as encodeCosmosAuthV1beta1QueryAccountRequest, encodeCosmosAuthQueryAccountResponse as encodeCosmosAuthV1beta1QueryAccountResponse, encodeCosmosAuthQueryParamsRequest as encodeCosmosAuthV1beta1QueryParamsRequest, encodeCosmosAuthQueryParamsResponse as encodeCosmosAuthV1beta1QueryParamsResponse, encodeCosmosAuthQueryModuleAccountsRequest as encodeCosmosAuthV1beta1QueryModuleAccountsRequest, encodeCosmosAuthQueryModuleAccountsResponse as encodeCosmosAuthV1beta1QueryModuleAccountsResponse, encodeCosmosAuthQueryModuleAccountByNameRequest as encodeCosmosAuthV1beta1QueryModuleAccountByNameRequest, encodeCosmosAuthQueryModuleAccountByNameResponse as encodeCosmosAuthV1beta1QueryModuleAccountByNameResponse, encodeCosmosAuthBech32PrefixRequest as encodeCosmosAuthV1beta1Bech32PrefixRequest, encodeCosmosAuthBech32PrefixResponse as encodeCosmosAuthV1beta1Bech32PrefixResponse, encodeCosmosAuthAddressBytesToStringRequest as encodeCosmosAuthV1beta1AddressBytesToStringRequest, encodeCosmosAuthAddressBytesToStringResponse as encodeCosmosAuthV1beta1AddressBytesToStringResponse, encodeCosmosAuthAddressStringToBytesRequest as encodeCosmosAuthV1beta1AddressStringToBytesRequest, encodeCosmosAuthAddressStringToBytesResponse as encodeCosmosAuthV1beta1AddressStringToBytesResponse, encodeCosmosAuthQueryAccountAddressByIDRequest as encodeCosmosAuthV1beta1QueryAccountAddressByIDRequest, encodeCosmosAuthQueryAccountAddressByIDResponse as encodeCosmosAuthV1beta1QueryAccountAddressByIDResponse, encodeCosmosAuthQueryAccountInfoRequest as encodeCosmosAuthV1beta1QueryAccountInfoRequest, encodeCosmosAuthQueryAccountInfoResponse as encodeCosmosAuthV1beta1QueryAccountInfoResponse, decodeCosmosAuthQueryAccountsRequest as decodeCosmosAuthV1beta1QueryAccountsRequest, decodeCosmosAuthQueryAccountsResponse as decodeCosmosAuthV1beta1QueryAccountsResponse, decodeCosmosAuthQueryAccountRequest as decodeCosmosAuthV1beta1QueryAccountRequest, decodeCosmosAuthQueryAccountResponse as decodeCosmosAuthV1beta1QueryAccountResponse, decodeCosmosAuthQueryParamsRequest as decodeCosmosAuthV1beta1QueryParamsRequest, decodeCosmosAuthQueryParamsResponse as decodeCosmosAuthV1beta1QueryParamsResponse, decodeCosmosAuthQueryModuleAccountsRequest as decodeCosmosAuthV1beta1QueryModuleAccountsRequest, decodeCosmosAuthQueryModuleAccountsResponse as decodeCosmosAuthV1beta1QueryModuleAccountsResponse, decodeCosmosAuthQueryModuleAccountByNameRequest as decodeCosmosAuthV1beta1QueryModuleAccountByNameRequest, decodeCosmosAuthQueryModuleAccountByNameResponse as decodeCosmosAuthV1beta1QueryModuleAccountByNameResponse, decodeCosmosAuthBech32PrefixRequest as decodeCosmosAuthV1beta1Bech32PrefixRequest, decodeCosmosAuthBech32PrefixResponse as decodeCosmosAuthV1beta1Bech32PrefixResponse, decodeCosmosAuthAddressBytesToStringRequest as decodeCosmosAuthV1beta1AddressBytesToStringRequest, decodeCosmosAuthAddressBytesToStringResponse as decodeCosmosAuthV1beta1AddressBytesToStringResponse, decodeCosmosAuthAddressStringToBytesRequest as decodeCosmosAuthV1beta1AddressStringToBytesRequest, decodeCosmosAuthAddressStringToBytesResponse as decodeCosmosAuthV1beta1AddressStringToBytesResponse, decodeCosmosAuthQueryAccountAddressByIDRequest as decodeCosmosAuthV1beta1QueryAccountAddressByIDRequest, decodeCosmosAuthQueryAccountAddressByIDResponse as decodeCosmosAuthV1beta1QueryAccountAddressByIDResponse, decodeCosmosAuthQueryAccountInfoRequest as decodeCosmosAuthV1beta1QueryAccountInfoRequest, decodeCosmosAuthQueryAccountInfoResponse as decodeCosmosAuthV1beta1QueryAccountInfoResponse } from './cosmos/auth/v1beta1/query.js';
import { encodeCosmosAuthMsgUpdateParams as encodeCosmosAuthV1beta1MsgUpdateParams, encodeCosmosAuthMsgUpdateParamsResponse as encodeCosmosAuthV1beta1MsgUpdateParamsResponse, decodeCosmosAuthMsgUpdateParams as decodeCosmosAuthV1beta1MsgUpdateParams, decodeCosmosAuthMsgUpdateParamsResponse as decodeCosmosAuthV1beta1MsgUpdateParamsResponse } from './cosmos/auth/v1beta1/tx.js';
import { encodeCosmosAuthzModuleModule as encodeCosmosAuthzModuleV1Module, decodeCosmosAuthzModuleModule as decodeCosmosAuthzModuleV1Module } from './cosmos/authz/module/v1/module.js';
import { decodeCosmosAuthzGrant as decodeCosmosAuthzV1beta1Grant, encodeCosmosAuthzGrant as encodeCosmosAuthzV1beta1Grant, decodeCosmosAuthzGrantAuthorization as decodeCosmosAuthzV1beta1GrantAuthorization, encodeCosmosAuthzGrantAuthorization as encodeCosmosAuthzV1beta1GrantAuthorization, encodeCosmosAuthzGenericAuthorization as encodeCosmosAuthzV1beta1GenericAuthorization, encodeCosmosAuthzGrantQueueItem as encodeCosmosAuthzV1beta1GrantQueueItem, decodeCosmosAuthzGenericAuthorization as decodeCosmosAuthzV1beta1GenericAuthorization, decodeCosmosAuthzGrantQueueItem as decodeCosmosAuthzV1beta1GrantQueueItem } from './cosmos/authz/v1beta1/authz.js';
import { encodeCosmosAuthzEventGrant as encodeCosmosAuthzV1beta1EventGrant, encodeCosmosAuthzEventRevoke as encodeCosmosAuthzV1beta1EventRevoke, decodeCosmosAuthzEventGrant as decodeCosmosAuthzV1beta1EventGrant, decodeCosmosAuthzEventRevoke as decodeCosmosAuthzV1beta1EventRevoke } from './cosmos/authz/v1beta1/event.js';
import { encodeCosmosAuthzGenesisState as encodeCosmosAuthzV1beta1GenesisState, decodeCosmosAuthzGenesisState as decodeCosmosAuthzV1beta1GenesisState } from './cosmos/authz/v1beta1/genesis.js';
import { encodeCosmosAuthzQueryGrantsRequest as encodeCosmosAuthzV1beta1QueryGrantsRequest, encodeCosmosAuthzQueryGrantsResponse as encodeCosmosAuthzV1beta1QueryGrantsResponse, encodeCosmosAuthzQueryGranterGrantsRequest as encodeCosmosAuthzV1beta1QueryGranterGrantsRequest, encodeCosmosAuthzQueryGranterGrantsResponse as encodeCosmosAuthzV1beta1QueryGranterGrantsResponse, encodeCosmosAuthzQueryGranteeGrantsRequest as encodeCosmosAuthzV1beta1QueryGranteeGrantsRequest, encodeCosmosAuthzQueryGranteeGrantsResponse as encodeCosmosAuthzV1beta1QueryGranteeGrantsResponse, decodeCosmosAuthzQueryGrantsRequest as decodeCosmosAuthzV1beta1QueryGrantsRequest, decodeCosmosAuthzQueryGrantsResponse as decodeCosmosAuthzV1beta1QueryGrantsResponse, decodeCosmosAuthzQueryGranterGrantsRequest as decodeCosmosAuthzV1beta1QueryGranterGrantsRequest, decodeCosmosAuthzQueryGranterGrantsResponse as decodeCosmosAuthzV1beta1QueryGranterGrantsResponse, decodeCosmosAuthzQueryGranteeGrantsRequest as decodeCosmosAuthzV1beta1QueryGranteeGrantsRequest, decodeCosmosAuthzQueryGranteeGrantsResponse as decodeCosmosAuthzV1beta1QueryGranteeGrantsResponse } from './cosmos/authz/v1beta1/query.js';
import { encodeCosmosAuthzMsgGrant as encodeCosmosAuthzV1beta1MsgGrant, encodeCosmosAuthzMsgGrantResponse as encodeCosmosAuthzV1beta1MsgGrantResponse, encodeCosmosAuthzMsgExec as encodeCosmosAuthzV1beta1MsgExec, encodeCosmosAuthzMsgExecResponse as encodeCosmosAuthzV1beta1MsgExecResponse, encodeCosmosAuthzMsgRevoke as encodeCosmosAuthzV1beta1MsgRevoke, encodeCosmosAuthzMsgRevokeResponse as encodeCosmosAuthzV1beta1MsgRevokeResponse, decodeCosmosAuthzMsgGrant as decodeCosmosAuthzV1beta1MsgGrant, decodeCosmosAuthzMsgGrantResponse as decodeCosmosAuthzV1beta1MsgGrantResponse, decodeCosmosAuthzMsgExec as decodeCosmosAuthzV1beta1MsgExec, decodeCosmosAuthzMsgExecResponse as decodeCosmosAuthzV1beta1MsgExecResponse, decodeCosmosAuthzMsgRevoke as decodeCosmosAuthzV1beta1MsgRevoke, decodeCosmosAuthzMsgRevokeResponse as decodeCosmosAuthzV1beta1MsgRevokeResponse } from './cosmos/authz/v1beta1/tx.js';
import { decodeCosmosAutocliModuleOptions as decodeCosmosAutocliV1ModuleOptions, encodeCosmosAutocliModuleOptions as encodeCosmosAutocliV1ModuleOptions, decodeCosmosAutocliServiceCommandDescriptor as decodeCosmosAutocliV1ServiceCommandDescriptor, encodeCosmosAutocliServiceCommandDescriptor as encodeCosmosAutocliV1ServiceCommandDescriptor, decodeCosmosAutocliRpcCommandOptions as decodeCosmosAutocliV1RpcCommandOptions, decodeCosmosAutocliServiceCommandDescriptorSubCommandsEntry as decodeCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry, encodeCosmosAutocliRpcCommandOptions as encodeCosmosAutocliV1RpcCommandOptions, decodeCosmosAutocliRpcCommandOptionsFlagOptionsEntry as decodeCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry, decodeCosmosAutocliPositionalArgDescriptor as decodeCosmosAutocliV1PositionalArgDescriptor, encodeCosmosAutocliRpcCommandOptionsFlagOptionsEntry as encodeCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry, decodeCosmosAutocliFlagOptions as decodeCosmosAutocliV1FlagOptions, encodeCosmosAutocliFlagOptions as encodeCosmosAutocliV1FlagOptions, encodeCosmosAutocliPositionalArgDescriptor as encodeCosmosAutocliV1PositionalArgDescriptor, encodeCosmosAutocliServiceCommandDescriptorSubCommandsEntry as encodeCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry } from './cosmos/autocli/v1/options.js';
import { encodeCosmosAutocliAppOptionsRequest as encodeCosmosAutocliV1AppOptionsRequest, encodeCosmosAutocliAppOptionsResponse as encodeCosmosAutocliV1AppOptionsResponse, decodeCosmosAutocliAppOptionsResponseModuleOptionsEntry as decodeCosmosAutocliV1AppOptionsResponseModuleOptionsEntry, encodeCosmosAutocliAppOptionsResponseModuleOptionsEntry as encodeCosmosAutocliV1AppOptionsResponseModuleOptionsEntry, decodeCosmosAutocliAppOptionsRequest as decodeCosmosAutocliV1AppOptionsRequest, decodeCosmosAutocliAppOptionsResponse as decodeCosmosAutocliV1AppOptionsResponse } from './cosmos/autocli/v1/query.js';
import { encodeCosmosBankModuleModule as encodeCosmosBankModuleV1Module, decodeCosmosBankModuleModule as decodeCosmosBankModuleV1Module } from './cosmos/bank/module/v1/module.js';
import { encodeCosmosBankSendAuthorization as encodeCosmosBankV1beta1SendAuthorization, decodeCosmosBankSendAuthorization as decodeCosmosBankV1beta1SendAuthorization } from './cosmos/bank/v1beta1/authz.js';
import { decodeCosmosBankInput as decodeCosmosBankV1beta1Input, decodeCosmosBankOutput as decodeCosmosBankV1beta1Output, encodeCosmosBankInput as encodeCosmosBankV1beta1Input, encodeCosmosBankOutput as encodeCosmosBankV1beta1Output, decodeCosmosBankParams as decodeCosmosBankV1beta1Params, encodeCosmosBankParams as encodeCosmosBankV1beta1Params, decodeCosmosBankSendEnabled as decodeCosmosBankV1beta1SendEnabled, encodeCosmosBankSendEnabled as encodeCosmosBankV1beta1SendEnabled, encodeCosmosBankSupply as encodeCosmosBankV1beta1Supply, encodeCosmosBankDenomUnit as encodeCosmosBankV1beta1DenomUnit, encodeCosmosBankMetadata as encodeCosmosBankV1beta1Metadata, decodeCosmosBankDenomUnit as decodeCosmosBankV1beta1DenomUnit, decodeCosmosBankMetadata as decodeCosmosBankV1beta1Metadata, decodeCosmosBankSupply as decodeCosmosBankV1beta1Supply } from './cosmos/bank/v1beta1/bank.js';
import { encodeCosmosBankGenesisState as encodeCosmosBankV1beta1GenesisState, decodeCosmosBankBalance as decodeCosmosBankV1beta1Balance, encodeCosmosBankBalance as encodeCosmosBankV1beta1Balance, decodeCosmosBankGenesisState as decodeCosmosBankV1beta1GenesisState } from './cosmos/bank/v1beta1/genesis.js';
import { encodeCosmosBankQueryBalanceRequest as encodeCosmosBankV1beta1QueryBalanceRequest, encodeCosmosBankQueryBalanceResponse as encodeCosmosBankV1beta1QueryBalanceResponse, encodeCosmosBankQueryAllBalancesRequest as encodeCosmosBankV1beta1QueryAllBalancesRequest, encodeCosmosBankQueryAllBalancesResponse as encodeCosmosBankV1beta1QueryAllBalancesResponse, encodeCosmosBankQuerySpendableBalancesRequest as encodeCosmosBankV1beta1QuerySpendableBalancesRequest, encodeCosmosBankQuerySpendableBalancesResponse as encodeCosmosBankV1beta1QuerySpendableBalancesResponse, encodeCosmosBankQuerySpendableBalanceByDenomRequest as encodeCosmosBankV1beta1QuerySpendableBalanceByDenomRequest, encodeCosmosBankQuerySpendableBalanceByDenomResponse as encodeCosmosBankV1beta1QuerySpendableBalanceByDenomResponse, encodeCosmosBankQueryTotalSupplyRequest as encodeCosmosBankV1beta1QueryTotalSupplyRequest, encodeCosmosBankQueryTotalSupplyResponse as encodeCosmosBankV1beta1QueryTotalSupplyResponse, encodeCosmosBankQuerySupplyOfRequest as encodeCosmosBankV1beta1QuerySupplyOfRequest, encodeCosmosBankQuerySupplyOfResponse as encodeCosmosBankV1beta1QuerySupplyOfResponse, encodeCosmosBankQueryParamsRequest as encodeCosmosBankV1beta1QueryParamsRequest, encodeCosmosBankQueryParamsResponse as encodeCosmosBankV1beta1QueryParamsResponse, encodeCosmosBankQueryDenomsMetadataRequest as encodeCosmosBankV1beta1QueryDenomsMetadataRequest, encodeCosmosBankQueryDenomsMetadataResponse as encodeCosmosBankV1beta1QueryDenomsMetadataResponse, encodeCosmosBankQueryDenomMetadataRequest as encodeCosmosBankV1beta1QueryDenomMetadataRequest, encodeCosmosBankQueryDenomMetadataResponse as encodeCosmosBankV1beta1QueryDenomMetadataResponse, encodeCosmosBankQueryDenomMetadataByQueryStringRequest as encodeCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest, encodeCosmosBankQueryDenomMetadataByQueryStringResponse as encodeCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse, encodeCosmosBankQueryDenomOwnersRequest as encodeCosmosBankV1beta1QueryDenomOwnersRequest, encodeCosmosBankDenomOwner as encodeCosmosBankV1beta1DenomOwner, encodeCosmosBankQueryDenomOwnersResponse as encodeCosmosBankV1beta1QueryDenomOwnersResponse, decodeCosmosBankDenomOwner as decodeCosmosBankV1beta1DenomOwner, encodeCosmosBankQuerySendEnabledRequest as encodeCosmosBankV1beta1QuerySendEnabledRequest, encodeCosmosBankQuerySendEnabledResponse as encodeCosmosBankV1beta1QuerySendEnabledResponse, decodeCosmosBankQueryBalanceRequest as decodeCosmosBankV1beta1QueryBalanceRequest, decodeCosmosBankQueryBalanceResponse as decodeCosmosBankV1beta1QueryBalanceResponse, decodeCosmosBankQueryAllBalancesRequest as decodeCosmosBankV1beta1QueryAllBalancesRequest, decodeCosmosBankQueryAllBalancesResponse as decodeCosmosBankV1beta1QueryAllBalancesResponse, decodeCosmosBankQuerySpendableBalancesRequest as decodeCosmosBankV1beta1QuerySpendableBalancesRequest, decodeCosmosBankQuerySpendableBalancesResponse as decodeCosmosBankV1beta1QuerySpendableBalancesResponse, decodeCosmosBankQuerySpendableBalanceByDenomRequest as decodeCosmosBankV1beta1QuerySpendableBalanceByDenomRequest, decodeCosmosBankQuerySpendableBalanceByDenomResponse as decodeCosmosBankV1beta1QuerySpendableBalanceByDenomResponse, decodeCosmosBankQueryTotalSupplyRequest as decodeCosmosBankV1beta1QueryTotalSupplyRequest, decodeCosmosBankQueryTotalSupplyResponse as decodeCosmosBankV1beta1QueryTotalSupplyResponse, decodeCosmosBankQuerySupplyOfRequest as decodeCosmosBankV1beta1QuerySupplyOfRequest, decodeCosmosBankQuerySupplyOfResponse as decodeCosmosBankV1beta1QuerySupplyOfResponse, decodeCosmosBankQueryParamsRequest as decodeCosmosBankV1beta1QueryParamsRequest, decodeCosmosBankQueryParamsResponse as decodeCosmosBankV1beta1QueryParamsResponse, decodeCosmosBankQueryDenomsMetadataRequest as decodeCosmosBankV1beta1QueryDenomsMetadataRequest, decodeCosmosBankQueryDenomsMetadataResponse as decodeCosmosBankV1beta1QueryDenomsMetadataResponse, decodeCosmosBankQueryDenomMetadataRequest as decodeCosmosBankV1beta1QueryDenomMetadataRequest, decodeCosmosBankQueryDenomMetadataResponse as decodeCosmosBankV1beta1QueryDenomMetadataResponse, decodeCosmosBankQueryDenomMetadataByQueryStringRequest as decodeCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest, decodeCosmosBankQueryDenomMetadataByQueryStringResponse as decodeCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse, decodeCosmosBankQueryDenomOwnersRequest as decodeCosmosBankV1beta1QueryDenomOwnersRequest, decodeCosmosBankQueryDenomOwnersResponse as decodeCosmosBankV1beta1QueryDenomOwnersResponse, decodeCosmosBankQuerySendEnabledRequest as decodeCosmosBankV1beta1QuerySendEnabledRequest, decodeCosmosBankQuerySendEnabledResponse as decodeCosmosBankV1beta1QuerySendEnabledResponse } from './cosmos/bank/v1beta1/query.js';
import { encodeCosmosBankMsgSend as encodeCosmosBankV1beta1MsgSend, encodeCosmosBankMsgSendResponse as encodeCosmosBankV1beta1MsgSendResponse, encodeCosmosBankMsgMultiSend as encodeCosmosBankV1beta1MsgMultiSend, encodeCosmosBankMsgMultiSendResponse as encodeCosmosBankV1beta1MsgMultiSendResponse, encodeCosmosBankMsgUpdateParams as encodeCosmosBankV1beta1MsgUpdateParams, encodeCosmosBankMsgUpdateParamsResponse as encodeCosmosBankV1beta1MsgUpdateParamsResponse, encodeCosmosBankMsgSetSendEnabled as encodeCosmosBankV1beta1MsgSetSendEnabled, encodeCosmosBankMsgSetSendEnabledResponse as encodeCosmosBankV1beta1MsgSetSendEnabledResponse, encodeCosmosBankMsgBurn as encodeCosmosBankV1beta1MsgBurn, encodeCosmosBankMsgBurnResponse as encodeCosmosBankV1beta1MsgBurnResponse, decodeCosmosBankMsgSend as decodeCosmosBankV1beta1MsgSend, decodeCosmosBankMsgSendResponse as decodeCosmosBankV1beta1MsgSendResponse, decodeCosmosBankMsgMultiSend as decodeCosmosBankV1beta1MsgMultiSend, decodeCosmosBankMsgMultiSendResponse as decodeCosmosBankV1beta1MsgMultiSendResponse, decodeCosmosBankMsgUpdateParams as decodeCosmosBankV1beta1MsgUpdateParams, decodeCosmosBankMsgUpdateParamsResponse as decodeCosmosBankV1beta1MsgUpdateParamsResponse, decodeCosmosBankMsgSetSendEnabled as decodeCosmosBankV1beta1MsgSetSendEnabled, decodeCosmosBankMsgSetSendEnabledResponse as decodeCosmosBankV1beta1MsgSetSendEnabledResponse, decodeCosmosBankMsgBurn as decodeCosmosBankV1beta1MsgBurn, decodeCosmosBankMsgBurnResponse as decodeCosmosBankV1beta1MsgBurnResponse } from './cosmos/bank/v1beta1/tx.js';
import { decodeCosmosBaseAbciTxResponse as decodeCosmosBaseAbciV1beta1TxResponse, encodeCosmosBaseAbciTxResponse as encodeCosmosBaseAbciV1beta1TxResponse, decodeCosmosBaseAbciABCIMessageLog as decodeCosmosBaseAbciV1beta1ABCIMessageLog, encodeCosmosBaseAbciABCIMessageLog as encodeCosmosBaseAbciV1beta1ABCIMessageLog, decodeCosmosBaseAbciStringEvent as decodeCosmosBaseAbciV1beta1StringEvent, encodeCosmosBaseAbciStringEvent as encodeCosmosBaseAbciV1beta1StringEvent, decodeCosmosBaseAbciAttribute as decodeCosmosBaseAbciV1beta1Attribute, encodeCosmosBaseAbciAttribute as encodeCosmosBaseAbciV1beta1Attribute, decodeCosmosBaseAbciGasInfo as decodeCosmosBaseAbciV1beta1GasInfo, decodeCosmosBaseAbciResult as decodeCosmosBaseAbciV1beta1Result, encodeCosmosBaseAbciGasInfo as encodeCosmosBaseAbciV1beta1GasInfo, encodeCosmosBaseAbciResult as encodeCosmosBaseAbciV1beta1Result, encodeCosmosBaseAbciSimulationResponse as encodeCosmosBaseAbciV1beta1SimulationResponse, encodeCosmosBaseAbciMsgData as encodeCosmosBaseAbciV1beta1MsgData, encodeCosmosBaseAbciTxMsgData as encodeCosmosBaseAbciV1beta1TxMsgData, decodeCosmosBaseAbciMsgData as decodeCosmosBaseAbciV1beta1MsgData, encodeCosmosBaseAbciSearchTxsResult as encodeCosmosBaseAbciV1beta1SearchTxsResult, encodeCosmosBaseAbciSearchBlocksResult as encodeCosmosBaseAbciV1beta1SearchBlocksResult, decodeCosmosBaseAbciSimulationResponse as decodeCosmosBaseAbciV1beta1SimulationResponse, decodeCosmosBaseAbciTxMsgData as decodeCosmosBaseAbciV1beta1TxMsgData, decodeCosmosBaseAbciSearchTxsResult as decodeCosmosBaseAbciV1beta1SearchTxsResult, decodeCosmosBaseAbciSearchBlocksResult as decodeCosmosBaseAbciV1beta1SearchBlocksResult } from './cosmos/base/abci/v1beta1/abci.js';
import { encodeCosmosBaseNodeConfigRequest as encodeCosmosBaseNodeV1beta1ConfigRequest, encodeCosmosBaseNodeConfigResponse as encodeCosmosBaseNodeV1beta1ConfigResponse, encodeCosmosBaseNodeStatusRequest as encodeCosmosBaseNodeV1beta1StatusRequest, encodeCosmosBaseNodeStatusResponse as encodeCosmosBaseNodeV1beta1StatusResponse, decodeCosmosBaseNodeConfigRequest as decodeCosmosBaseNodeV1beta1ConfigRequest, decodeCosmosBaseNodeConfigResponse as decodeCosmosBaseNodeV1beta1ConfigResponse, decodeCosmosBaseNodeStatusRequest as decodeCosmosBaseNodeV1beta1StatusRequest, decodeCosmosBaseNodeStatusResponse as decodeCosmosBaseNodeV1beta1StatusResponse } from './cosmos/base/node/v1beta1/query.js';
import { decodeCosmosBaseQueryPageRequest as decodeCosmosBaseQueryV1beta1PageRequest, encodeCosmosBaseQueryPageRequest as encodeCosmosBaseQueryV1beta1PageRequest, decodeCosmosBaseQueryPageResponse as decodeCosmosBaseQueryV1beta1PageResponse, encodeCosmosBaseQueryPageResponse as encodeCosmosBaseQueryV1beta1PageResponse } from './cosmos/base/query/v1beta1/pagination.js';
import { encodeCosmosBaseReflectionListAllInterfacesRequest as encodeCosmosBaseReflectionV1beta1ListAllInterfacesRequest, encodeCosmosBaseReflectionListAllInterfacesResponse as encodeCosmosBaseReflectionV1beta1ListAllInterfacesResponse, encodeCosmosBaseReflectionListImplementationsRequest as encodeCosmosBaseReflectionV1beta1ListImplementationsRequest, encodeCosmosBaseReflectionListImplementationsResponse as encodeCosmosBaseReflectionV1beta1ListImplementationsResponse, decodeCosmosBaseReflectionListAllInterfacesRequest as decodeCosmosBaseReflectionV1beta1ListAllInterfacesRequest, decodeCosmosBaseReflectionListAllInterfacesResponse as decodeCosmosBaseReflectionV1beta1ListAllInterfacesResponse, decodeCosmosBaseReflectionListImplementationsRequest as decodeCosmosBaseReflectionV1beta1ListImplementationsRequest, decodeCosmosBaseReflectionListImplementationsResponse as decodeCosmosBaseReflectionV1beta1ListImplementationsResponse } from './cosmos/base/reflection/v1beta1/reflection.js';
import { encodeCosmosBaseReflectionAppDescriptor as encodeCosmosBaseReflectionV2alpha1AppDescriptor, decodeCosmosBaseReflectionAuthnDescriptor as decodeCosmosBaseReflectionV2alpha1AuthnDescriptor, decodeCosmosBaseReflectionChainDescriptor as decodeCosmosBaseReflectionV2alpha1ChainDescriptor, decodeCosmosBaseReflectionCodecDescriptor as decodeCosmosBaseReflectionV2alpha1CodecDescriptor, decodeCosmosBaseReflectionConfigurationDescriptor as decodeCosmosBaseReflectionV2alpha1ConfigurationDescriptor, decodeCosmosBaseReflectionQueryServicesDescriptor as decodeCosmosBaseReflectionV2alpha1QueryServicesDescriptor, decodeCosmosBaseReflectionTxDescriptor as decodeCosmosBaseReflectionV2alpha1TxDescriptor, encodeCosmosBaseReflectionAuthnDescriptor as encodeCosmosBaseReflectionV2alpha1AuthnDescriptor, decodeCosmosBaseReflectionSigningModeDescriptor as decodeCosmosBaseReflectionV2alpha1SigningModeDescriptor, encodeCosmosBaseReflectionSigningModeDescriptor as encodeCosmosBaseReflectionV2alpha1SigningModeDescriptor, encodeCosmosBaseReflectionChainDescriptor as encodeCosmosBaseReflectionV2alpha1ChainDescriptor, encodeCosmosBaseReflectionCodecDescriptor as encodeCosmosBaseReflectionV2alpha1CodecDescriptor, decodeCosmosBaseReflectionInterfaceDescriptor as decodeCosmosBaseReflectionV2alpha1InterfaceDescriptor, encodeCosmosBaseReflectionInterfaceDescriptor as encodeCosmosBaseReflectionV2alpha1InterfaceDescriptor, decodeCosmosBaseReflectionInterfaceAcceptingMessageDescriptor as decodeCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor, decodeCosmosBaseReflectionInterfaceImplementerDescriptor as decodeCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor, encodeCosmosBaseReflectionInterfaceAcceptingMessageDescriptor as encodeCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor, encodeCosmosBaseReflectionInterfaceImplementerDescriptor as encodeCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor, encodeCosmosBaseReflectionConfigurationDescriptor as encodeCosmosBaseReflectionV2alpha1ConfigurationDescriptor, encodeCosmosBaseReflectionQueryServicesDescriptor as encodeCosmosBaseReflectionV2alpha1QueryServicesDescriptor, decodeCosmosBaseReflectionQueryServiceDescriptor as decodeCosmosBaseReflectionV2alpha1QueryServiceDescriptor, encodeCosmosBaseReflectionQueryServiceDescriptor as encodeCosmosBaseReflectionV2alpha1QueryServiceDescriptor, decodeCosmosBaseReflectionQueryMethodDescriptor as decodeCosmosBaseReflectionV2alpha1QueryMethodDescriptor, encodeCosmosBaseReflectionQueryMethodDescriptor as encodeCosmosBaseReflectionV2alpha1QueryMethodDescriptor, encodeCosmosBaseReflectionTxDescriptor as encodeCosmosBaseReflectionV2alpha1TxDescriptor, decodeCosmosBaseReflectionMsgDescriptor as decodeCosmosBaseReflectionV2alpha1MsgDescriptor, encodeCosmosBaseReflectionMsgDescriptor as encodeCosmosBaseReflectionV2alpha1MsgDescriptor, encodeCosmosBaseReflectionGetAuthnDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest, encodeCosmosBaseReflectionGetAuthnDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse, encodeCosmosBaseReflectionGetChainDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetChainDescriptorRequest, encodeCosmosBaseReflectionGetChainDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetChainDescriptorResponse, encodeCosmosBaseReflectionGetCodecDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest, encodeCosmosBaseReflectionGetCodecDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse, encodeCosmosBaseReflectionGetConfigurationDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest, encodeCosmosBaseReflectionGetConfigurationDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse, encodeCosmosBaseReflectionGetQueryServicesDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest, encodeCosmosBaseReflectionGetQueryServicesDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse, encodeCosmosBaseReflectionGetTxDescriptorRequest as encodeCosmosBaseReflectionV2alpha1GetTxDescriptorRequest, encodeCosmosBaseReflectionGetTxDescriptorResponse as encodeCosmosBaseReflectionV2alpha1GetTxDescriptorResponse, decodeCosmosBaseReflectionAppDescriptor as decodeCosmosBaseReflectionV2alpha1AppDescriptor, decodeCosmosBaseReflectionGetAuthnDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest, decodeCosmosBaseReflectionGetAuthnDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse, decodeCosmosBaseReflectionGetChainDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetChainDescriptorRequest, decodeCosmosBaseReflectionGetChainDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetChainDescriptorResponse, decodeCosmosBaseReflectionGetCodecDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest, decodeCosmosBaseReflectionGetCodecDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse, decodeCosmosBaseReflectionGetConfigurationDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest, decodeCosmosBaseReflectionGetConfigurationDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse, decodeCosmosBaseReflectionGetQueryServicesDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest, decodeCosmosBaseReflectionGetQueryServicesDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse, decodeCosmosBaseReflectionGetTxDescriptorRequest as decodeCosmosBaseReflectionV2alpha1GetTxDescriptorRequest, decodeCosmosBaseReflectionGetTxDescriptorResponse as decodeCosmosBaseReflectionV2alpha1GetTxDescriptorResponse } from './cosmos/base/reflection/v2alpha1/reflection.js';
import { encodeCosmosBaseTendermintGetValidatorSetByHeightRequest as encodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest, encodeCosmosBaseTendermintGetValidatorSetByHeightResponse as encodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse, decodeCosmosBaseTendermintValidator as decodeCosmosBaseTendermintV1beta1Validator, encodeCosmosBaseTendermintValidator as encodeCosmosBaseTendermintV1beta1Validator, encodeCosmosBaseTendermintGetLatestValidatorSetRequest as encodeCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest, encodeCosmosBaseTendermintGetLatestValidatorSetResponse as encodeCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse, encodeCosmosBaseTendermintGetBlockByHeightRequest as encodeCosmosBaseTendermintV1beta1GetBlockByHeightRequest, encodeCosmosBaseTendermintGetBlockByHeightResponse as encodeCosmosBaseTendermintV1beta1GetBlockByHeightResponse, encodeCosmosBaseTendermintGetLatestBlockRequest as encodeCosmosBaseTendermintV1beta1GetLatestBlockRequest, encodeCosmosBaseTendermintGetLatestBlockResponse as encodeCosmosBaseTendermintV1beta1GetLatestBlockResponse, encodeCosmosBaseTendermintGetSyncingRequest as encodeCosmosBaseTendermintV1beta1GetSyncingRequest, encodeCosmosBaseTendermintGetSyncingResponse as encodeCosmosBaseTendermintV1beta1GetSyncingResponse, encodeCosmosBaseTendermintGetNodeInfoRequest as encodeCosmosBaseTendermintV1beta1GetNodeInfoRequest, encodeCosmosBaseTendermintGetNodeInfoResponse as encodeCosmosBaseTendermintV1beta1GetNodeInfoResponse, decodeCosmosBaseTendermintVersionInfo as decodeCosmosBaseTendermintV1beta1VersionInfo, encodeCosmosBaseTendermintVersionInfo as encodeCosmosBaseTendermintV1beta1VersionInfo, decodeCosmosBaseTendermintModule as decodeCosmosBaseTendermintV1beta1Module, encodeCosmosBaseTendermintModule as encodeCosmosBaseTendermintV1beta1Module, encodeCosmosBaseTendermintABCIQueryRequest as encodeCosmosBaseTendermintV1beta1ABCIQueryRequest, encodeCosmosBaseTendermintABCIQueryResponse as encodeCosmosBaseTendermintV1beta1ABCIQueryResponse, decodeCosmosBaseTendermintProofOps as decodeCosmosBaseTendermintV1beta1ProofOps, encodeCosmosBaseTendermintProofOps as encodeCosmosBaseTendermintV1beta1ProofOps, decodeCosmosBaseTendermintProofOp as decodeCosmosBaseTendermintV1beta1ProofOp, encodeCosmosBaseTendermintProofOp as encodeCosmosBaseTendermintV1beta1ProofOp, decodeCosmosBaseTendermintGetValidatorSetByHeightRequest as decodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest, decodeCosmosBaseTendermintGetValidatorSetByHeightResponse as decodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse, decodeCosmosBaseTendermintGetLatestValidatorSetRequest as decodeCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest, decodeCosmosBaseTendermintGetLatestValidatorSetResponse as decodeCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse, decodeCosmosBaseTendermintGetBlockByHeightRequest as decodeCosmosBaseTendermintV1beta1GetBlockByHeightRequest, decodeCosmosBaseTendermintGetBlockByHeightResponse as decodeCosmosBaseTendermintV1beta1GetBlockByHeightResponse, decodeCosmosBaseTendermintGetLatestBlockRequest as decodeCosmosBaseTendermintV1beta1GetLatestBlockRequest, decodeCosmosBaseTendermintGetLatestBlockResponse as decodeCosmosBaseTendermintV1beta1GetLatestBlockResponse, decodeCosmosBaseTendermintGetSyncingRequest as decodeCosmosBaseTendermintV1beta1GetSyncingRequest, decodeCosmosBaseTendermintGetSyncingResponse as decodeCosmosBaseTendermintV1beta1GetSyncingResponse, decodeCosmosBaseTendermintGetNodeInfoRequest as decodeCosmosBaseTendermintV1beta1GetNodeInfoRequest, decodeCosmosBaseTendermintGetNodeInfoResponse as decodeCosmosBaseTendermintV1beta1GetNodeInfoResponse, decodeCosmosBaseTendermintABCIQueryRequest as decodeCosmosBaseTendermintV1beta1ABCIQueryRequest, decodeCosmosBaseTendermintABCIQueryResponse as decodeCosmosBaseTendermintV1beta1ABCIQueryResponse } from './cosmos/base/tendermint/v1beta1/query.js';
import { encodeCosmosBaseTendermintBlock as encodeCosmosBaseTendermintV1beta1Block, decodeCosmosBaseTendermintHeader as decodeCosmosBaseTendermintV1beta1Header, encodeCosmosBaseTendermintHeader as encodeCosmosBaseTendermintV1beta1Header, decodeCosmosBaseTendermintBlock as decodeCosmosBaseTendermintV1beta1Block } from './cosmos/base/tendermint/v1beta1/types.js';
import { decodeCosmosBaseCoin as decodeCosmosBaseV1beta1Coin, encodeCosmosBaseCoin as encodeCosmosBaseV1beta1Coin, decodeCosmosBaseDecCoin as decodeCosmosBaseV1beta1DecCoin, encodeCosmosBaseDecCoin as encodeCosmosBaseV1beta1DecCoin } from './cosmos/base/v1beta1/coin.js';
import { encodeCosmosCircuitModuleModule as encodeCosmosCircuitModuleV1Module, decodeCosmosCircuitModuleModule as decodeCosmosCircuitModuleV1Module } from './cosmos/circuit/module/v1/module.js';
import { encodeCosmosCircuitQueryAccountRequest as encodeCosmosCircuitV1QueryAccountRequest, encodeCosmosCircuitAccountResponse as encodeCosmosCircuitV1AccountResponse, encodeCosmosCircuitQueryAccountsRequest as encodeCosmosCircuitV1QueryAccountsRequest, encodeCosmosCircuitAccountsResponse as encodeCosmosCircuitV1AccountsResponse, encodeCosmosCircuitQueryDisabledListRequest as encodeCosmosCircuitV1QueryDisabledListRequest, encodeCosmosCircuitDisabledListResponse as encodeCosmosCircuitV1DisabledListResponse, decodeCosmosCircuitQueryAccountRequest as decodeCosmosCircuitV1QueryAccountRequest, decodeCosmosCircuitAccountResponse as decodeCosmosCircuitV1AccountResponse, decodeCosmosCircuitQueryAccountsRequest as decodeCosmosCircuitV1QueryAccountsRequest, decodeCosmosCircuitAccountsResponse as decodeCosmosCircuitV1AccountsResponse, decodeCosmosCircuitQueryDisabledListRequest as decodeCosmosCircuitV1QueryDisabledListRequest, decodeCosmosCircuitDisabledListResponse as decodeCosmosCircuitV1DisabledListResponse } from './cosmos/circuit/v1/query.js';
import { encodeCosmosCircuitMsgAuthorizeCircuitBreaker as encodeCosmosCircuitV1MsgAuthorizeCircuitBreaker, encodeCosmosCircuitMsgAuthorizeCircuitBreakerResponse as encodeCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse, encodeCosmosCircuitMsgTripCircuitBreaker as encodeCosmosCircuitV1MsgTripCircuitBreaker, encodeCosmosCircuitMsgTripCircuitBreakerResponse as encodeCosmosCircuitV1MsgTripCircuitBreakerResponse, encodeCosmosCircuitMsgResetCircuitBreaker as encodeCosmosCircuitV1MsgResetCircuitBreaker, encodeCosmosCircuitMsgResetCircuitBreakerResponse as encodeCosmosCircuitV1MsgResetCircuitBreakerResponse, decodeCosmosCircuitMsgAuthorizeCircuitBreaker as decodeCosmosCircuitV1MsgAuthorizeCircuitBreaker, decodeCosmosCircuitMsgAuthorizeCircuitBreakerResponse as decodeCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse, decodeCosmosCircuitMsgTripCircuitBreaker as decodeCosmosCircuitV1MsgTripCircuitBreaker, decodeCosmosCircuitMsgTripCircuitBreakerResponse as decodeCosmosCircuitV1MsgTripCircuitBreakerResponse, decodeCosmosCircuitMsgResetCircuitBreaker as decodeCosmosCircuitV1MsgResetCircuitBreaker, decodeCosmosCircuitMsgResetCircuitBreakerResponse as decodeCosmosCircuitV1MsgResetCircuitBreakerResponse } from './cosmos/circuit/v1/tx.js';
import { decodeCosmosCircuitPermissions as decodeCosmosCircuitV1Permissions, encodeCosmosCircuitPermissions as encodeCosmosCircuitV1Permissions, JsonToProtoEnumCosmosCircuitPermissionsLevel as JsonToProtoEnumCosmosCircuitV1PermissionsLevel, ProtoToJsonEnumCosmosCircuitPermissionsLevel as ProtoToJsonEnumCosmosCircuitV1PermissionsLevel, encodeCosmosCircuitGenesisAccountPermissions as encodeCosmosCircuitV1GenesisAccountPermissions, encodeCosmosCircuitGenesisState as encodeCosmosCircuitV1GenesisState, decodeCosmosCircuitGenesisAccountPermissions as decodeCosmosCircuitV1GenesisAccountPermissions, decodeCosmosCircuitGenesisState as decodeCosmosCircuitV1GenesisState } from './cosmos/circuit/v1/types.js';
import { encodeCosmosConsensusModuleModule as encodeCosmosConsensusModuleV1Module, decodeCosmosConsensusModuleModule as decodeCosmosConsensusModuleV1Module } from './cosmos/consensus/module/v1/module.js';
import { encodeCosmosConsensusQueryParamsRequest as encodeCosmosConsensusV1QueryParamsRequest, encodeCosmosConsensusQueryParamsResponse as encodeCosmosConsensusV1QueryParamsResponse, decodeCosmosConsensusQueryParamsRequest as decodeCosmosConsensusV1QueryParamsRequest, decodeCosmosConsensusQueryParamsResponse as decodeCosmosConsensusV1QueryParamsResponse } from './cosmos/consensus/v1/query.js';
import { encodeCosmosConsensusMsgUpdateParams as encodeCosmosConsensusV1MsgUpdateParams, encodeCosmosConsensusMsgUpdateParamsResponse as encodeCosmosConsensusV1MsgUpdateParamsResponse, decodeCosmosConsensusMsgUpdateParams as decodeCosmosConsensusV1MsgUpdateParams, decodeCosmosConsensusMsgUpdateParamsResponse as decodeCosmosConsensusV1MsgUpdateParamsResponse } from './cosmos/consensus/v1/tx.js';
import { encodeCosmosCrisisModuleModule as encodeCosmosCrisisModuleV1Module, decodeCosmosCrisisModuleModule as decodeCosmosCrisisModuleV1Module } from './cosmos/crisis/module/v1/module.js';
import { encodeCosmosCrisisGenesisState as encodeCosmosCrisisV1beta1GenesisState, decodeCosmosCrisisGenesisState as decodeCosmosCrisisV1beta1GenesisState } from './cosmos/crisis/v1beta1/genesis.js';
import { encodeCosmosCrisisMsgVerifyInvariant as encodeCosmosCrisisV1beta1MsgVerifyInvariant, encodeCosmosCrisisMsgVerifyInvariantResponse as encodeCosmosCrisisV1beta1MsgVerifyInvariantResponse, encodeCosmosCrisisMsgUpdateParams as encodeCosmosCrisisV1beta1MsgUpdateParams, encodeCosmosCrisisMsgUpdateParamsResponse as encodeCosmosCrisisV1beta1MsgUpdateParamsResponse, decodeCosmosCrisisMsgVerifyInvariant as decodeCosmosCrisisV1beta1MsgVerifyInvariant, decodeCosmosCrisisMsgVerifyInvariantResponse as decodeCosmosCrisisV1beta1MsgVerifyInvariantResponse, decodeCosmosCrisisMsgUpdateParams as decodeCosmosCrisisV1beta1MsgUpdateParams, decodeCosmosCrisisMsgUpdateParamsResponse as decodeCosmosCrisisV1beta1MsgUpdateParamsResponse } from './cosmos/crisis/v1beta1/tx.js';
import { encodeCosmosCryptoEd25519PubKey, encodeCosmosCryptoEd25519PrivKey, decodeCosmosCryptoEd25519PubKey, decodeCosmosCryptoEd25519PrivKey } from './cosmos/crypto/ed25519/keys.js';
import { encodeCosmosCryptoHdBIP44Params as encodeCosmosCryptoHdV1BIP44Params, decodeCosmosCryptoHdBIP44Params as decodeCosmosCryptoHdV1BIP44Params } from './cosmos/crypto/hd/v1/hd.js';
import { encodeCosmosCryptoKeyringRecord as encodeCosmosCryptoKeyringV1Record, decodeCosmosCryptoKeyringRecordLocal as decodeCosmosCryptoKeyringV1RecordLocal, decodeCosmosCryptoKeyringRecordLedger as decodeCosmosCryptoKeyringV1RecordLedger, decodeCosmosCryptoKeyringRecordMulti as decodeCosmosCryptoKeyringV1RecordMulti, decodeCosmosCryptoKeyringRecordOffline as decodeCosmosCryptoKeyringV1RecordOffline, encodeCosmosCryptoKeyringRecordLocal as encodeCosmosCryptoKeyringV1RecordLocal, encodeCosmosCryptoKeyringRecordLedger as encodeCosmosCryptoKeyringV1RecordLedger, encodeCosmosCryptoKeyringRecordMulti as encodeCosmosCryptoKeyringV1RecordMulti, encodeCosmosCryptoKeyringRecordOffline as encodeCosmosCryptoKeyringV1RecordOffline, decodeCosmosCryptoKeyringRecord as decodeCosmosCryptoKeyringV1Record } from './cosmos/crypto/keyring/v1/record.js';
import { encodeCosmosCryptoMultisigLegacyAminoPubKey, decodeCosmosCryptoMultisigLegacyAminoPubKey } from './cosmos/crypto/multisig/keys.js';
import { encodeCosmosCryptoMultisigMultiSignature as encodeCosmosCryptoMultisigV1beta1MultiSignature, encodeCosmosCryptoMultisigCompactBitArray as encodeCosmosCryptoMultisigV1beta1CompactBitArray, decodeCosmosCryptoMultisigCompactBitArray as decodeCosmosCryptoMultisigV1beta1CompactBitArray, decodeCosmosCryptoMultisigMultiSignature as decodeCosmosCryptoMultisigV1beta1MultiSignature } from './cosmos/crypto/multisig/v1beta1/multisig.js';
import { encodeCosmosCryptoSecp256k1PubKey, encodeCosmosCryptoSecp256k1PrivKey, decodeCosmosCryptoSecp256k1PubKey, decodeCosmosCryptoSecp256k1PrivKey } from './cosmos/crypto/secp256k1/keys.js';
import { encodeCosmosCryptoSecp256r1PubKey, encodeCosmosCryptoSecp256r1PrivKey, decodeCosmosCryptoSecp256r1PubKey, decodeCosmosCryptoSecp256r1PrivKey } from './cosmos/crypto/secp256r1/keys.js';
import { encodeCosmosDistributionModuleModule as encodeCosmosDistributionModuleV1Module, decodeCosmosDistributionModuleModule as decodeCosmosDistributionModuleV1Module } from './cosmos/distribution/module/v1/module.js';
import { decodeCosmosDistributionParams as decodeCosmosDistributionV1beta1Params, encodeCosmosDistributionParams as encodeCosmosDistributionV1beta1Params, encodeCosmosDistributionValidatorHistoricalRewards as encodeCosmosDistributionV1beta1ValidatorHistoricalRewards, encodeCosmosDistributionValidatorCurrentRewards as encodeCosmosDistributionV1beta1ValidatorCurrentRewards, encodeCosmosDistributionValidatorAccumulatedCommission as encodeCosmosDistributionV1beta1ValidatorAccumulatedCommission, encodeCosmosDistributionValidatorOutstandingRewards as encodeCosmosDistributionV1beta1ValidatorOutstandingRewards, encodeCosmosDistributionValidatorSlashEvent as encodeCosmosDistributionV1beta1ValidatorSlashEvent, encodeCosmosDistributionValidatorSlashEvents as encodeCosmosDistributionV1beta1ValidatorSlashEvents, decodeCosmosDistributionValidatorSlashEvent as decodeCosmosDistributionV1beta1ValidatorSlashEvent, encodeCosmosDistributionFeePool as encodeCosmosDistributionV1beta1FeePool, encodeCosmosDistributionCommunityPoolSpendProposal as encodeCosmosDistributionV1beta1CommunityPoolSpendProposal, encodeCosmosDistributionDelegatorStartingInfo as encodeCosmosDistributionV1beta1DelegatorStartingInfo, encodeCosmosDistributionDelegationDelegatorReward as encodeCosmosDistributionV1beta1DelegationDelegatorReward, encodeCosmosDistributionCommunityPoolSpendProposalWithDeposit as encodeCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit, decodeCosmosDistributionValidatorOutstandingRewards as decodeCosmosDistributionV1beta1ValidatorOutstandingRewards, decodeCosmosDistributionValidatorAccumulatedCommission as decodeCosmosDistributionV1beta1ValidatorAccumulatedCommission, decodeCosmosDistributionDelegationDelegatorReward as decodeCosmosDistributionV1beta1DelegationDelegatorReward, decodeCosmosDistributionValidatorHistoricalRewards as decodeCosmosDistributionV1beta1ValidatorHistoricalRewards, decodeCosmosDistributionValidatorCurrentRewards as decodeCosmosDistributionV1beta1ValidatorCurrentRewards, decodeCosmosDistributionDelegatorStartingInfo as decodeCosmosDistributionV1beta1DelegatorStartingInfo, decodeCosmosDistributionFeePool as decodeCosmosDistributionV1beta1FeePool, decodeCosmosDistributionValidatorSlashEvents as decodeCosmosDistributionV1beta1ValidatorSlashEvents, decodeCosmosDistributionCommunityPoolSpendProposal as decodeCosmosDistributionV1beta1CommunityPoolSpendProposal, decodeCosmosDistributionCommunityPoolSpendProposalWithDeposit as decodeCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit } from './cosmos/distribution/v1beta1/distribution.js';
import { encodeCosmosDistributionDelegatorWithdrawInfo as encodeCosmosDistributionV1beta1DelegatorWithdrawInfo, encodeCosmosDistributionValidatorOutstandingRewardsRecord as encodeCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord, encodeCosmosDistributionValidatorAccumulatedCommissionRecord as encodeCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord, encodeCosmosDistributionValidatorHistoricalRewardsRecord as encodeCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord, encodeCosmosDistributionValidatorCurrentRewardsRecord as encodeCosmosDistributionV1beta1ValidatorCurrentRewardsRecord, encodeCosmosDistributionDelegatorStartingInfoRecord as encodeCosmosDistributionV1beta1DelegatorStartingInfoRecord, encodeCosmosDistributionValidatorSlashEventRecord as encodeCosmosDistributionV1beta1ValidatorSlashEventRecord, encodeCosmosDistributionGenesisState as encodeCosmosDistributionV1beta1GenesisState, decodeCosmosDistributionDelegatorWithdrawInfo as decodeCosmosDistributionV1beta1DelegatorWithdrawInfo, decodeCosmosDistributionValidatorOutstandingRewardsRecord as decodeCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord, decodeCosmosDistributionValidatorAccumulatedCommissionRecord as decodeCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord, decodeCosmosDistributionValidatorHistoricalRewardsRecord as decodeCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord, decodeCosmosDistributionValidatorCurrentRewardsRecord as decodeCosmosDistributionV1beta1ValidatorCurrentRewardsRecord, decodeCosmosDistributionDelegatorStartingInfoRecord as decodeCosmosDistributionV1beta1DelegatorStartingInfoRecord, decodeCosmosDistributionValidatorSlashEventRecord as decodeCosmosDistributionV1beta1ValidatorSlashEventRecord, decodeCosmosDistributionGenesisState as decodeCosmosDistributionV1beta1GenesisState } from './cosmos/distribution/v1beta1/genesis.js';
import { encodeCosmosDistributionQueryParamsRequest as encodeCosmosDistributionV1beta1QueryParamsRequest, encodeCosmosDistributionQueryParamsResponse as encodeCosmosDistributionV1beta1QueryParamsResponse, encodeCosmosDistributionQueryValidatorDistributionInfoRequest as encodeCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest, encodeCosmosDistributionQueryValidatorDistributionInfoResponse as encodeCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse, encodeCosmosDistributionQueryValidatorOutstandingRewardsRequest as encodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest, encodeCosmosDistributionQueryValidatorOutstandingRewardsResponse as encodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse, encodeCosmosDistributionQueryValidatorCommissionRequest as encodeCosmosDistributionV1beta1QueryValidatorCommissionRequest, encodeCosmosDistributionQueryValidatorCommissionResponse as encodeCosmosDistributionV1beta1QueryValidatorCommissionResponse, encodeCosmosDistributionQueryValidatorSlashesRequest as encodeCosmosDistributionV1beta1QueryValidatorSlashesRequest, encodeCosmosDistributionQueryValidatorSlashesResponse as encodeCosmosDistributionV1beta1QueryValidatorSlashesResponse, encodeCosmosDistributionQueryDelegationRewardsRequest as encodeCosmosDistributionV1beta1QueryDelegationRewardsRequest, encodeCosmosDistributionQueryDelegationRewardsResponse as encodeCosmosDistributionV1beta1QueryDelegationRewardsResponse, encodeCosmosDistributionQueryDelegationTotalRewardsRequest as encodeCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest, encodeCosmosDistributionQueryDelegationTotalRewardsResponse as encodeCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse, encodeCosmosDistributionQueryDelegatorValidatorsRequest as encodeCosmosDistributionV1beta1QueryDelegatorValidatorsRequest, encodeCosmosDistributionQueryDelegatorValidatorsResponse as encodeCosmosDistributionV1beta1QueryDelegatorValidatorsResponse, encodeCosmosDistributionQueryDelegatorWithdrawAddressRequest as encodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest, encodeCosmosDistributionQueryDelegatorWithdrawAddressResponse as encodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse, encodeCosmosDistributionQueryCommunityPoolRequest as encodeCosmosDistributionV1beta1QueryCommunityPoolRequest, encodeCosmosDistributionQueryCommunityPoolResponse as encodeCosmosDistributionV1beta1QueryCommunityPoolResponse, decodeCosmosDistributionQueryParamsRequest as decodeCosmosDistributionV1beta1QueryParamsRequest, decodeCosmosDistributionQueryParamsResponse as decodeCosmosDistributionV1beta1QueryParamsResponse, decodeCosmosDistributionQueryValidatorDistributionInfoRequest as decodeCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest, decodeCosmosDistributionQueryValidatorDistributionInfoResponse as decodeCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse, decodeCosmosDistributionQueryValidatorOutstandingRewardsRequest as decodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest, decodeCosmosDistributionQueryValidatorOutstandingRewardsResponse as decodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse, decodeCosmosDistributionQueryValidatorCommissionRequest as decodeCosmosDistributionV1beta1QueryValidatorCommissionRequest, decodeCosmosDistributionQueryValidatorCommissionResponse as decodeCosmosDistributionV1beta1QueryValidatorCommissionResponse, decodeCosmosDistributionQueryValidatorSlashesRequest as decodeCosmosDistributionV1beta1QueryValidatorSlashesRequest, decodeCosmosDistributionQueryValidatorSlashesResponse as decodeCosmosDistributionV1beta1QueryValidatorSlashesResponse, decodeCosmosDistributionQueryDelegationRewardsRequest as decodeCosmosDistributionV1beta1QueryDelegationRewardsRequest, decodeCosmosDistributionQueryDelegationRewardsResponse as decodeCosmosDistributionV1beta1QueryDelegationRewardsResponse, decodeCosmosDistributionQueryDelegationTotalRewardsRequest as decodeCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest, decodeCosmosDistributionQueryDelegationTotalRewardsResponse as decodeCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse, decodeCosmosDistributionQueryDelegatorValidatorsRequest as decodeCosmosDistributionV1beta1QueryDelegatorValidatorsRequest, decodeCosmosDistributionQueryDelegatorValidatorsResponse as decodeCosmosDistributionV1beta1QueryDelegatorValidatorsResponse, decodeCosmosDistributionQueryDelegatorWithdrawAddressRequest as decodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest, decodeCosmosDistributionQueryDelegatorWithdrawAddressResponse as decodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse, decodeCosmosDistributionQueryCommunityPoolRequest as decodeCosmosDistributionV1beta1QueryCommunityPoolRequest, decodeCosmosDistributionQueryCommunityPoolResponse as decodeCosmosDistributionV1beta1QueryCommunityPoolResponse } from './cosmos/distribution/v1beta1/query.js';
import { encodeCosmosDistributionMsgSetWithdrawAddress as encodeCosmosDistributionV1beta1MsgSetWithdrawAddress, encodeCosmosDistributionMsgSetWithdrawAddressResponse as encodeCosmosDistributionV1beta1MsgSetWithdrawAddressResponse, encodeCosmosDistributionMsgWithdrawDelegatorReward as encodeCosmosDistributionV1beta1MsgWithdrawDelegatorReward, encodeCosmosDistributionMsgWithdrawDelegatorRewardResponse as encodeCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse, encodeCosmosDistributionMsgWithdrawValidatorCommission as encodeCosmosDistributionV1beta1MsgWithdrawValidatorCommission, encodeCosmosDistributionMsgWithdrawValidatorCommissionResponse as encodeCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse, encodeCosmosDistributionMsgFundCommunityPool as encodeCosmosDistributionV1beta1MsgFundCommunityPool, encodeCosmosDistributionMsgFundCommunityPoolResponse as encodeCosmosDistributionV1beta1MsgFundCommunityPoolResponse, encodeCosmosDistributionMsgUpdateParams as encodeCosmosDistributionV1beta1MsgUpdateParams, encodeCosmosDistributionMsgUpdateParamsResponse as encodeCosmosDistributionV1beta1MsgUpdateParamsResponse, encodeCosmosDistributionMsgCommunityPoolSpend as encodeCosmosDistributionV1beta1MsgCommunityPoolSpend, encodeCosmosDistributionMsgCommunityPoolSpendResponse as encodeCosmosDistributionV1beta1MsgCommunityPoolSpendResponse, encodeCosmosDistributionMsgDepositValidatorRewardsPool as encodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPool, encodeCosmosDistributionMsgDepositValidatorRewardsPoolResponse as encodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse, decodeCosmosDistributionMsgSetWithdrawAddress as decodeCosmosDistributionV1beta1MsgSetWithdrawAddress, decodeCosmosDistributionMsgSetWithdrawAddressResponse as decodeCosmosDistributionV1beta1MsgSetWithdrawAddressResponse, decodeCosmosDistributionMsgWithdrawDelegatorReward as decodeCosmosDistributionV1beta1MsgWithdrawDelegatorReward, decodeCosmosDistributionMsgWithdrawDelegatorRewardResponse as decodeCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse, decodeCosmosDistributionMsgWithdrawValidatorCommission as decodeCosmosDistributionV1beta1MsgWithdrawValidatorCommission, decodeCosmosDistributionMsgWithdrawValidatorCommissionResponse as decodeCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse, decodeCosmosDistributionMsgFundCommunityPool as decodeCosmosDistributionV1beta1MsgFundCommunityPool, decodeCosmosDistributionMsgFundCommunityPoolResponse as decodeCosmosDistributionV1beta1MsgFundCommunityPoolResponse, decodeCosmosDistributionMsgUpdateParams as decodeCosmosDistributionV1beta1MsgUpdateParams, decodeCosmosDistributionMsgUpdateParamsResponse as decodeCosmosDistributionV1beta1MsgUpdateParamsResponse, decodeCosmosDistributionMsgCommunityPoolSpend as decodeCosmosDistributionV1beta1MsgCommunityPoolSpend, decodeCosmosDistributionMsgCommunityPoolSpendResponse as decodeCosmosDistributionV1beta1MsgCommunityPoolSpendResponse, decodeCosmosDistributionMsgDepositValidatorRewardsPool as decodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPool, decodeCosmosDistributionMsgDepositValidatorRewardsPoolResponse as decodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse } from './cosmos/distribution/v1beta1/tx.js';
import { encodeCosmosEvidenceModuleModule as encodeCosmosEvidenceModuleV1Module, decodeCosmosEvidenceModuleModule as decodeCosmosEvidenceModuleV1Module } from './cosmos/evidence/module/v1/module.js';
import { encodeCosmosEvidenceEquivocation as encodeCosmosEvidenceV1beta1Equivocation, decodeCosmosEvidenceEquivocation as decodeCosmosEvidenceV1beta1Equivocation } from './cosmos/evidence/v1beta1/evidence.js';
import { encodeCosmosEvidenceGenesisState as encodeCosmosEvidenceV1beta1GenesisState, decodeCosmosEvidenceGenesisState as decodeCosmosEvidenceV1beta1GenesisState } from './cosmos/evidence/v1beta1/genesis.js';
import { encodeCosmosEvidenceQueryEvidenceRequest as encodeCosmosEvidenceV1beta1QueryEvidenceRequest, encodeCosmosEvidenceQueryEvidenceResponse as encodeCosmosEvidenceV1beta1QueryEvidenceResponse, encodeCosmosEvidenceQueryAllEvidenceRequest as encodeCosmosEvidenceV1beta1QueryAllEvidenceRequest, encodeCosmosEvidenceQueryAllEvidenceResponse as encodeCosmosEvidenceV1beta1QueryAllEvidenceResponse, decodeCosmosEvidenceQueryEvidenceRequest as decodeCosmosEvidenceV1beta1QueryEvidenceRequest, decodeCosmosEvidenceQueryEvidenceResponse as decodeCosmosEvidenceV1beta1QueryEvidenceResponse, decodeCosmosEvidenceQueryAllEvidenceRequest as decodeCosmosEvidenceV1beta1QueryAllEvidenceRequest, decodeCosmosEvidenceQueryAllEvidenceResponse as decodeCosmosEvidenceV1beta1QueryAllEvidenceResponse } from './cosmos/evidence/v1beta1/query.js';
import { encodeCosmosEvidenceMsgSubmitEvidence as encodeCosmosEvidenceV1beta1MsgSubmitEvidence, encodeCosmosEvidenceMsgSubmitEvidenceResponse as encodeCosmosEvidenceV1beta1MsgSubmitEvidenceResponse, decodeCosmosEvidenceMsgSubmitEvidence as decodeCosmosEvidenceV1beta1MsgSubmitEvidence, decodeCosmosEvidenceMsgSubmitEvidenceResponse as decodeCosmosEvidenceV1beta1MsgSubmitEvidenceResponse } from './cosmos/evidence/v1beta1/tx.js';
import { encodeCosmosFeegrantModuleModule as encodeCosmosFeegrantModuleV1Module, decodeCosmosFeegrantModuleModule as decodeCosmosFeegrantModuleV1Module } from './cosmos/feegrant/module/v1/module.js';
import { decodeCosmosFeegrantGrant as decodeCosmosFeegrantV1beta1Grant, encodeCosmosFeegrantGrant as encodeCosmosFeegrantV1beta1Grant, encodeCosmosFeegrantBasicAllowance as encodeCosmosFeegrantV1beta1BasicAllowance, encodeCosmosFeegrantPeriodicAllowance as encodeCosmosFeegrantV1beta1PeriodicAllowance, decodeCosmosFeegrantBasicAllowance as decodeCosmosFeegrantV1beta1BasicAllowance, encodeCosmosFeegrantAllowedMsgAllowance as encodeCosmosFeegrantV1beta1AllowedMsgAllowance, decodeCosmosFeegrantPeriodicAllowance as decodeCosmosFeegrantV1beta1PeriodicAllowance, decodeCosmosFeegrantAllowedMsgAllowance as decodeCosmosFeegrantV1beta1AllowedMsgAllowance } from './cosmos/feegrant/v1beta1/feegrant.js';
import { encodeCosmosFeegrantGenesisState as encodeCosmosFeegrantV1beta1GenesisState, decodeCosmosFeegrantGenesisState as decodeCosmosFeegrantV1beta1GenesisState } from './cosmos/feegrant/v1beta1/genesis.js';
import { encodeCosmosFeegrantQueryAllowanceRequest as encodeCosmosFeegrantV1beta1QueryAllowanceRequest, encodeCosmosFeegrantQueryAllowanceResponse as encodeCosmosFeegrantV1beta1QueryAllowanceResponse, encodeCosmosFeegrantQueryAllowancesRequest as encodeCosmosFeegrantV1beta1QueryAllowancesRequest, encodeCosmosFeegrantQueryAllowancesResponse as encodeCosmosFeegrantV1beta1QueryAllowancesResponse, encodeCosmosFeegrantQueryAllowancesByGranterRequest as encodeCosmosFeegrantV1beta1QueryAllowancesByGranterRequest, encodeCosmosFeegrantQueryAllowancesByGranterResponse as encodeCosmosFeegrantV1beta1QueryAllowancesByGranterResponse, decodeCosmosFeegrantQueryAllowanceRequest as decodeCosmosFeegrantV1beta1QueryAllowanceRequest, decodeCosmosFeegrantQueryAllowanceResponse as decodeCosmosFeegrantV1beta1QueryAllowanceResponse, decodeCosmosFeegrantQueryAllowancesRequest as decodeCosmosFeegrantV1beta1QueryAllowancesRequest, decodeCosmosFeegrantQueryAllowancesResponse as decodeCosmosFeegrantV1beta1QueryAllowancesResponse, decodeCosmosFeegrantQueryAllowancesByGranterRequest as decodeCosmosFeegrantV1beta1QueryAllowancesByGranterRequest, decodeCosmosFeegrantQueryAllowancesByGranterResponse as decodeCosmosFeegrantV1beta1QueryAllowancesByGranterResponse } from './cosmos/feegrant/v1beta1/query.js';
import { encodeCosmosFeegrantMsgGrantAllowance as encodeCosmosFeegrantV1beta1MsgGrantAllowance, encodeCosmosFeegrantMsgGrantAllowanceResponse as encodeCosmosFeegrantV1beta1MsgGrantAllowanceResponse, encodeCosmosFeegrantMsgRevokeAllowance as encodeCosmosFeegrantV1beta1MsgRevokeAllowance, encodeCosmosFeegrantMsgRevokeAllowanceResponse as encodeCosmosFeegrantV1beta1MsgRevokeAllowanceResponse, decodeCosmosFeegrantMsgGrantAllowance as decodeCosmosFeegrantV1beta1MsgGrantAllowance, decodeCosmosFeegrantMsgGrantAllowanceResponse as decodeCosmosFeegrantV1beta1MsgGrantAllowanceResponse, decodeCosmosFeegrantMsgRevokeAllowance as decodeCosmosFeegrantV1beta1MsgRevokeAllowance, decodeCosmosFeegrantMsgRevokeAllowanceResponse as decodeCosmosFeegrantV1beta1MsgRevokeAllowanceResponse } from './cosmos/feegrant/v1beta1/tx.js';
import { encodeCosmosGenutilModuleModule as encodeCosmosGenutilModuleV1Module, decodeCosmosGenutilModuleModule as decodeCosmosGenutilModuleV1Module } from './cosmos/genutil/module/v1/module.js';
import { encodeCosmosGenutilGenesisState as encodeCosmosGenutilV1beta1GenesisState, decodeCosmosGenutilGenesisState as decodeCosmosGenutilV1beta1GenesisState } from './cosmos/genutil/v1beta1/genesis.js';
import { encodeCosmosGovModuleModule as encodeCosmosGovModuleV1Module, decodeCosmosGovModuleModule as decodeCosmosGovModuleV1Module } from './cosmos/gov/module/v1/module.js';
import { encodeCosmosGovGenesisState as encodeCosmosGovV1GenesisState, decodeCosmosGovGenesisState as decodeCosmosGovV1GenesisState } from './cosmos/gov/v1/genesis.js';
import { JsonToProtoEnumCosmosGovVoteOption as JsonToProtoEnumCosmosGovV1VoteOption, ProtoToJsonEnumCosmosGovVoteOption as ProtoToJsonEnumCosmosGovV1VoteOption, decodeCosmosGovWeightedVoteOption as decodeCosmosGovV1WeightedVoteOption, encodeCosmosGovWeightedVoteOption as encodeCosmosGovV1WeightedVoteOption, decodeCosmosGovParams as decodeCosmosGovV1Params, encodeCosmosGovParams as encodeCosmosGovV1Params, encodeCosmosGovDeposit as encodeCosmosGovV1Deposit, encodeCosmosGovProposal as encodeCosmosGovV1Proposal, JsonToProtoEnumCosmosGovProposalStatus as JsonToProtoEnumCosmosGovV1ProposalStatus, decodeCosmosGovTallyResult as decodeCosmosGovV1TallyResult, ProtoToJsonEnumCosmosGovProposalStatus as ProtoToJsonEnumCosmosGovV1ProposalStatus, encodeCosmosGovTallyResult as encodeCosmosGovV1TallyResult, encodeCosmosGovVote as encodeCosmosGovV1Vote, encodeCosmosGovDepositParams as encodeCosmosGovV1DepositParams, encodeCosmosGovVotingParams as encodeCosmosGovV1VotingParams, encodeCosmosGovTallyParams as encodeCosmosGovV1TallyParams, decodeCosmosGovProposal as decodeCosmosGovV1Proposal, decodeCosmosGovVote as decodeCosmosGovV1Vote, decodeCosmosGovVotingParams as decodeCosmosGovV1VotingParams, decodeCosmosGovDepositParams as decodeCosmosGovV1DepositParams, decodeCosmosGovTallyParams as decodeCosmosGovV1TallyParams, decodeCosmosGovDeposit as decodeCosmosGovV1Deposit } from './cosmos/gov/v1/gov.js';
import { encodeCosmosGovQueryConstitutionRequest as encodeCosmosGovV1QueryConstitutionRequest, encodeCosmosGovQueryConstitutionResponse as encodeCosmosGovV1QueryConstitutionResponse, encodeCosmosGovQueryProposalRequest as encodeCosmosGovV1QueryProposalRequest, encodeCosmosGovQueryProposalResponse as encodeCosmosGovV1QueryProposalResponse, encodeCosmosGovQueryProposalsRequest as encodeCosmosGovV1QueryProposalsRequest, encodeCosmosGovQueryProposalsResponse as encodeCosmosGovV1QueryProposalsResponse, encodeCosmosGovQueryVoteRequest as encodeCosmosGovV1QueryVoteRequest, encodeCosmosGovQueryVoteResponse as encodeCosmosGovV1QueryVoteResponse, encodeCosmosGovQueryVotesRequest as encodeCosmosGovV1QueryVotesRequest, encodeCosmosGovQueryVotesResponse as encodeCosmosGovV1QueryVotesResponse, encodeCosmosGovQueryParamsRequest as encodeCosmosGovV1QueryParamsRequest, encodeCosmosGovQueryParamsResponse as encodeCosmosGovV1QueryParamsResponse, encodeCosmosGovQueryDepositRequest as encodeCosmosGovV1QueryDepositRequest, encodeCosmosGovQueryDepositResponse as encodeCosmosGovV1QueryDepositResponse, encodeCosmosGovQueryDepositsRequest as encodeCosmosGovV1QueryDepositsRequest, encodeCosmosGovQueryDepositsResponse as encodeCosmosGovV1QueryDepositsResponse, encodeCosmosGovQueryTallyResultRequest as encodeCosmosGovV1QueryTallyResultRequest, encodeCosmosGovQueryTallyResultResponse as encodeCosmosGovV1QueryTallyResultResponse, decodeCosmosGovQueryConstitutionRequest as decodeCosmosGovV1QueryConstitutionRequest, decodeCosmosGovQueryConstitutionResponse as decodeCosmosGovV1QueryConstitutionResponse, decodeCosmosGovQueryProposalRequest as decodeCosmosGovV1QueryProposalRequest, decodeCosmosGovQueryProposalResponse as decodeCosmosGovV1QueryProposalResponse, decodeCosmosGovQueryProposalsRequest as decodeCosmosGovV1QueryProposalsRequest, decodeCosmosGovQueryProposalsResponse as decodeCosmosGovV1QueryProposalsResponse, decodeCosmosGovQueryVoteRequest as decodeCosmosGovV1QueryVoteRequest, decodeCosmosGovQueryVoteResponse as decodeCosmosGovV1QueryVoteResponse, decodeCosmosGovQueryVotesRequest as decodeCosmosGovV1QueryVotesRequest, decodeCosmosGovQueryVotesResponse as decodeCosmosGovV1QueryVotesResponse, decodeCosmosGovQueryParamsRequest as decodeCosmosGovV1QueryParamsRequest, decodeCosmosGovQueryParamsResponse as decodeCosmosGovV1QueryParamsResponse, decodeCosmosGovQueryDepositRequest as decodeCosmosGovV1QueryDepositRequest, decodeCosmosGovQueryDepositResponse as decodeCosmosGovV1QueryDepositResponse, decodeCosmosGovQueryDepositsRequest as decodeCosmosGovV1QueryDepositsRequest, decodeCosmosGovQueryDepositsResponse as decodeCosmosGovV1QueryDepositsResponse, decodeCosmosGovQueryTallyResultRequest as decodeCosmosGovV1QueryTallyResultRequest, decodeCosmosGovQueryTallyResultResponse as decodeCosmosGovV1QueryTallyResultResponse } from './cosmos/gov/v1/query.js';
import { encodeCosmosGovMsgSubmitProposal as encodeCosmosGovV1MsgSubmitProposal, encodeCosmosGovMsgSubmitProposalResponse as encodeCosmosGovV1MsgSubmitProposalResponse, encodeCosmosGovMsgExecLegacyContent as encodeCosmosGovV1MsgExecLegacyContent, encodeCosmosGovMsgExecLegacyContentResponse as encodeCosmosGovV1MsgExecLegacyContentResponse, encodeCosmosGovMsgVote as encodeCosmosGovV1MsgVote, encodeCosmosGovMsgVoteResponse as encodeCosmosGovV1MsgVoteResponse, encodeCosmosGovMsgVoteWeighted as encodeCosmosGovV1MsgVoteWeighted, encodeCosmosGovMsgVoteWeightedResponse as encodeCosmosGovV1MsgVoteWeightedResponse, encodeCosmosGovMsgDeposit as encodeCosmosGovV1MsgDeposit, encodeCosmosGovMsgDepositResponse as encodeCosmosGovV1MsgDepositResponse, encodeCosmosGovMsgUpdateParams as encodeCosmosGovV1MsgUpdateParams, encodeCosmosGovMsgUpdateParamsResponse as encodeCosmosGovV1MsgUpdateParamsResponse, encodeCosmosGovMsgCancelProposal as encodeCosmosGovV1MsgCancelProposal, encodeCosmosGovMsgCancelProposalResponse as encodeCosmosGovV1MsgCancelProposalResponse, decodeCosmosGovMsgSubmitProposal as decodeCosmosGovV1MsgSubmitProposal, decodeCosmosGovMsgSubmitProposalResponse as decodeCosmosGovV1MsgSubmitProposalResponse, decodeCosmosGovMsgExecLegacyContent as decodeCosmosGovV1MsgExecLegacyContent, decodeCosmosGovMsgExecLegacyContentResponse as decodeCosmosGovV1MsgExecLegacyContentResponse, decodeCosmosGovMsgVote as decodeCosmosGovV1MsgVote, decodeCosmosGovMsgVoteResponse as decodeCosmosGovV1MsgVoteResponse, decodeCosmosGovMsgVoteWeighted as decodeCosmosGovV1MsgVoteWeighted, decodeCosmosGovMsgVoteWeightedResponse as decodeCosmosGovV1MsgVoteWeightedResponse, decodeCosmosGovMsgDeposit as decodeCosmosGovV1MsgDeposit, decodeCosmosGovMsgDepositResponse as decodeCosmosGovV1MsgDepositResponse, decodeCosmosGovMsgUpdateParams as decodeCosmosGovV1MsgUpdateParams, decodeCosmosGovMsgUpdateParamsResponse as decodeCosmosGovV1MsgUpdateParamsResponse, decodeCosmosGovMsgCancelProposal as decodeCosmosGovV1MsgCancelProposal, decodeCosmosGovMsgCancelProposalResponse as decodeCosmosGovV1MsgCancelProposalResponse } from './cosmos/gov/v1/tx.js';
import { encodeCosmosGovGenesisState as encodeCosmosGovV1beta1GenesisState, decodeCosmosGovGenesisState as decodeCosmosGovV1beta1GenesisState } from './cosmos/gov/v1beta1/genesis.js';
import { JsonToProtoEnumCosmosGovVoteOption as JsonToProtoEnumCosmosGovV1beta1VoteOption, ProtoToJsonEnumCosmosGovVoteOption as ProtoToJsonEnumCosmosGovV1beta1VoteOption, decodeCosmosGovWeightedVoteOption as decodeCosmosGovV1beta1WeightedVoteOption, encodeCosmosGovWeightedVoteOption as encodeCosmosGovV1beta1WeightedVoteOption, encodeCosmosGovTextProposal as encodeCosmosGovV1beta1TextProposal, encodeCosmosGovDeposit as encodeCosmosGovV1beta1Deposit, encodeCosmosGovProposal as encodeCosmosGovV1beta1Proposal, JsonToProtoEnumCosmosGovProposalStatus as JsonToProtoEnumCosmosGovV1beta1ProposalStatus, decodeCosmosGovTallyResult as decodeCosmosGovV1beta1TallyResult, ProtoToJsonEnumCosmosGovProposalStatus as ProtoToJsonEnumCosmosGovV1beta1ProposalStatus, encodeCosmosGovTallyResult as encodeCosmosGovV1beta1TallyResult, encodeCosmosGovVote as encodeCosmosGovV1beta1Vote, encodeCosmosGovDepositParams as encodeCosmosGovV1beta1DepositParams, encodeCosmosGovVotingParams as encodeCosmosGovV1beta1VotingParams, encodeCosmosGovTallyParams as encodeCosmosGovV1beta1TallyParams, decodeCosmosGovProposal as decodeCosmosGovV1beta1Proposal, decodeCosmosGovVote as decodeCosmosGovV1beta1Vote, decodeCosmosGovVotingParams as decodeCosmosGovV1beta1VotingParams, decodeCosmosGovDepositParams as decodeCosmosGovV1beta1DepositParams, decodeCosmosGovTallyParams as decodeCosmosGovV1beta1TallyParams, decodeCosmosGovDeposit as decodeCosmosGovV1beta1Deposit, decodeCosmosGovTextProposal as decodeCosmosGovV1beta1TextProposal } from './cosmos/gov/v1beta1/gov.js';
import { encodeCosmosGovQueryProposalRequest as encodeCosmosGovV1beta1QueryProposalRequest, encodeCosmosGovQueryProposalResponse as encodeCosmosGovV1beta1QueryProposalResponse, encodeCosmosGovQueryProposalsRequest as encodeCosmosGovV1beta1QueryProposalsRequest, encodeCosmosGovQueryProposalsResponse as encodeCosmosGovV1beta1QueryProposalsResponse, encodeCosmosGovQueryVoteRequest as encodeCosmosGovV1beta1QueryVoteRequest, encodeCosmosGovQueryVoteResponse as encodeCosmosGovV1beta1QueryVoteResponse, encodeCosmosGovQueryVotesRequest as encodeCosmosGovV1beta1QueryVotesRequest, encodeCosmosGovQueryVotesResponse as encodeCosmosGovV1beta1QueryVotesResponse, encodeCosmosGovQueryParamsRequest as encodeCosmosGovV1beta1QueryParamsRequest, encodeCosmosGovQueryParamsResponse as encodeCosmosGovV1beta1QueryParamsResponse, encodeCosmosGovQueryDepositRequest as encodeCosmosGovV1beta1QueryDepositRequest, encodeCosmosGovQueryDepositResponse as encodeCosmosGovV1beta1QueryDepositResponse, encodeCosmosGovQueryDepositsRequest as encodeCosmosGovV1beta1QueryDepositsRequest, encodeCosmosGovQueryDepositsResponse as encodeCosmosGovV1beta1QueryDepositsResponse, encodeCosmosGovQueryTallyResultRequest as encodeCosmosGovV1beta1QueryTallyResultRequest, encodeCosmosGovQueryTallyResultResponse as encodeCosmosGovV1beta1QueryTallyResultResponse, decodeCosmosGovQueryProposalRequest as decodeCosmosGovV1beta1QueryProposalRequest, decodeCosmosGovQueryProposalResponse as decodeCosmosGovV1beta1QueryProposalResponse, decodeCosmosGovQueryProposalsRequest as decodeCosmosGovV1beta1QueryProposalsRequest, decodeCosmosGovQueryProposalsResponse as decodeCosmosGovV1beta1QueryProposalsResponse, decodeCosmosGovQueryVoteRequest as decodeCosmosGovV1beta1QueryVoteRequest, decodeCosmosGovQueryVoteResponse as decodeCosmosGovV1beta1QueryVoteResponse, decodeCosmosGovQueryVotesRequest as decodeCosmosGovV1beta1QueryVotesRequest, decodeCosmosGovQueryVotesResponse as decodeCosmosGovV1beta1QueryVotesResponse, decodeCosmosGovQueryParamsRequest as decodeCosmosGovV1beta1QueryParamsRequest, decodeCosmosGovQueryParamsResponse as decodeCosmosGovV1beta1QueryParamsResponse, decodeCosmosGovQueryDepositRequest as decodeCosmosGovV1beta1QueryDepositRequest, decodeCosmosGovQueryDepositResponse as decodeCosmosGovV1beta1QueryDepositResponse, decodeCosmosGovQueryDepositsRequest as decodeCosmosGovV1beta1QueryDepositsRequest, decodeCosmosGovQueryDepositsResponse as decodeCosmosGovV1beta1QueryDepositsResponse, decodeCosmosGovQueryTallyResultRequest as decodeCosmosGovV1beta1QueryTallyResultRequest, decodeCosmosGovQueryTallyResultResponse as decodeCosmosGovV1beta1QueryTallyResultResponse } from './cosmos/gov/v1beta1/query.js';
import { encodeCosmosGovMsgSubmitProposal as encodeCosmosGovV1beta1MsgSubmitProposal, encodeCosmosGovMsgSubmitProposalResponse as encodeCosmosGovV1beta1MsgSubmitProposalResponse, encodeCosmosGovMsgVote as encodeCosmosGovV1beta1MsgVote, encodeCosmosGovMsgVoteResponse as encodeCosmosGovV1beta1MsgVoteResponse, encodeCosmosGovMsgVoteWeighted as encodeCosmosGovV1beta1MsgVoteWeighted, encodeCosmosGovMsgVoteWeightedResponse as encodeCosmosGovV1beta1MsgVoteWeightedResponse, encodeCosmosGovMsgDeposit as encodeCosmosGovV1beta1MsgDeposit, encodeCosmosGovMsgDepositResponse as encodeCosmosGovV1beta1MsgDepositResponse, decodeCosmosGovMsgSubmitProposal as decodeCosmosGovV1beta1MsgSubmitProposal, decodeCosmosGovMsgSubmitProposalResponse as decodeCosmosGovV1beta1MsgSubmitProposalResponse, decodeCosmosGovMsgVote as decodeCosmosGovV1beta1MsgVote, decodeCosmosGovMsgVoteResponse as decodeCosmosGovV1beta1MsgVoteResponse, decodeCosmosGovMsgVoteWeighted as decodeCosmosGovV1beta1MsgVoteWeighted, decodeCosmosGovMsgVoteWeightedResponse as decodeCosmosGovV1beta1MsgVoteWeightedResponse, decodeCosmosGovMsgDeposit as decodeCosmosGovV1beta1MsgDeposit, decodeCosmosGovMsgDepositResponse as decodeCosmosGovV1beta1MsgDepositResponse } from './cosmos/gov/v1beta1/tx.js';
import { encodeCosmosGroupModuleModule as encodeCosmosGroupModuleV1Module, decodeCosmosGroupModuleModule as decodeCosmosGroupModuleV1Module } from './cosmos/group/module/v1/module.js';
import { encodeCosmosGroupEventCreateGroup as encodeCosmosGroupV1EventCreateGroup, encodeCosmosGroupEventUpdateGroup as encodeCosmosGroupV1EventUpdateGroup, encodeCosmosGroupEventCreateGroupPolicy as encodeCosmosGroupV1EventCreateGroupPolicy, encodeCosmosGroupEventUpdateGroupPolicy as encodeCosmosGroupV1EventUpdateGroupPolicy, encodeCosmosGroupEventSubmitProposal as encodeCosmosGroupV1EventSubmitProposal, encodeCosmosGroupEventWithdrawProposal as encodeCosmosGroupV1EventWithdrawProposal, encodeCosmosGroupEventVote as encodeCosmosGroupV1EventVote, encodeCosmosGroupEventExec as encodeCosmosGroupV1EventExec, encodeCosmosGroupEventLeaveGroup as encodeCosmosGroupV1EventLeaveGroup, encodeCosmosGroupEventProposalPruned as encodeCosmosGroupV1EventProposalPruned, decodeCosmosGroupEventCreateGroup as decodeCosmosGroupV1EventCreateGroup, decodeCosmosGroupEventUpdateGroup as decodeCosmosGroupV1EventUpdateGroup, decodeCosmosGroupEventCreateGroupPolicy as decodeCosmosGroupV1EventCreateGroupPolicy, decodeCosmosGroupEventUpdateGroupPolicy as decodeCosmosGroupV1EventUpdateGroupPolicy, decodeCosmosGroupEventSubmitProposal as decodeCosmosGroupV1EventSubmitProposal, decodeCosmosGroupEventWithdrawProposal as decodeCosmosGroupV1EventWithdrawProposal, decodeCosmosGroupEventVote as decodeCosmosGroupV1EventVote, decodeCosmosGroupEventExec as decodeCosmosGroupV1EventExec, decodeCosmosGroupEventLeaveGroup as decodeCosmosGroupV1EventLeaveGroup, decodeCosmosGroupEventProposalPruned as decodeCosmosGroupV1EventProposalPruned } from './cosmos/group/v1/events.js';
import { encodeCosmosGroupGenesisState as encodeCosmosGroupV1GenesisState, decodeCosmosGroupGenesisState as decodeCosmosGroupV1GenesisState } from './cosmos/group/v1/genesis.js';
import { encodeCosmosGroupQueryGroupInfoRequest as encodeCosmosGroupV1QueryGroupInfoRequest, encodeCosmosGroupQueryGroupInfoResponse as encodeCosmosGroupV1QueryGroupInfoResponse, encodeCosmosGroupQueryGroupPolicyInfoRequest as encodeCosmosGroupV1QueryGroupPolicyInfoRequest, encodeCosmosGroupQueryGroupPolicyInfoResponse as encodeCosmosGroupV1QueryGroupPolicyInfoResponse, encodeCosmosGroupQueryGroupMembersRequest as encodeCosmosGroupV1QueryGroupMembersRequest, encodeCosmosGroupQueryGroupMembersResponse as encodeCosmosGroupV1QueryGroupMembersResponse, encodeCosmosGroupQueryGroupsByAdminRequest as encodeCosmosGroupV1QueryGroupsByAdminRequest, encodeCosmosGroupQueryGroupsByAdminResponse as encodeCosmosGroupV1QueryGroupsByAdminResponse, encodeCosmosGroupQueryGroupPoliciesByGroupRequest as encodeCosmosGroupV1QueryGroupPoliciesByGroupRequest, encodeCosmosGroupQueryGroupPoliciesByGroupResponse as encodeCosmosGroupV1QueryGroupPoliciesByGroupResponse, encodeCosmosGroupQueryGroupPoliciesByAdminRequest as encodeCosmosGroupV1QueryGroupPoliciesByAdminRequest, encodeCosmosGroupQueryGroupPoliciesByAdminResponse as encodeCosmosGroupV1QueryGroupPoliciesByAdminResponse, encodeCosmosGroupQueryProposalRequest as encodeCosmosGroupV1QueryProposalRequest, encodeCosmosGroupQueryProposalResponse as encodeCosmosGroupV1QueryProposalResponse, encodeCosmosGroupQueryProposalsByGroupPolicyRequest as encodeCosmosGroupV1QueryProposalsByGroupPolicyRequest, encodeCosmosGroupQueryProposalsByGroupPolicyResponse as encodeCosmosGroupV1QueryProposalsByGroupPolicyResponse, encodeCosmosGroupQueryVoteByProposalVoterRequest as encodeCosmosGroupV1QueryVoteByProposalVoterRequest, encodeCosmosGroupQueryVoteByProposalVoterResponse as encodeCosmosGroupV1QueryVoteByProposalVoterResponse, encodeCosmosGroupQueryVotesByProposalRequest as encodeCosmosGroupV1QueryVotesByProposalRequest, encodeCosmosGroupQueryVotesByProposalResponse as encodeCosmosGroupV1QueryVotesByProposalResponse, encodeCosmosGroupQueryVotesByVoterRequest as encodeCosmosGroupV1QueryVotesByVoterRequest, encodeCosmosGroupQueryVotesByVoterResponse as encodeCosmosGroupV1QueryVotesByVoterResponse, encodeCosmosGroupQueryGroupsByMemberRequest as encodeCosmosGroupV1QueryGroupsByMemberRequest, encodeCosmosGroupQueryGroupsByMemberResponse as encodeCosmosGroupV1QueryGroupsByMemberResponse, encodeCosmosGroupQueryTallyResultRequest as encodeCosmosGroupV1QueryTallyResultRequest, encodeCosmosGroupQueryTallyResultResponse as encodeCosmosGroupV1QueryTallyResultResponse, encodeCosmosGroupQueryGroupsRequest as encodeCosmosGroupV1QueryGroupsRequest, encodeCosmosGroupQueryGroupsResponse as encodeCosmosGroupV1QueryGroupsResponse, decodeCosmosGroupQueryGroupInfoRequest as decodeCosmosGroupV1QueryGroupInfoRequest, decodeCosmosGroupQueryGroupInfoResponse as decodeCosmosGroupV1QueryGroupInfoResponse, decodeCosmosGroupQueryGroupPolicyInfoRequest as decodeCosmosGroupV1QueryGroupPolicyInfoRequest, decodeCosmosGroupQueryGroupPolicyInfoResponse as decodeCosmosGroupV1QueryGroupPolicyInfoResponse, decodeCosmosGroupQueryGroupMembersRequest as decodeCosmosGroupV1QueryGroupMembersRequest, decodeCosmosGroupQueryGroupMembersResponse as decodeCosmosGroupV1QueryGroupMembersResponse, decodeCosmosGroupQueryGroupsByAdminRequest as decodeCosmosGroupV1QueryGroupsByAdminRequest, decodeCosmosGroupQueryGroupsByAdminResponse as decodeCosmosGroupV1QueryGroupsByAdminResponse, decodeCosmosGroupQueryGroupPoliciesByGroupRequest as decodeCosmosGroupV1QueryGroupPoliciesByGroupRequest, decodeCosmosGroupQueryGroupPoliciesByGroupResponse as decodeCosmosGroupV1QueryGroupPoliciesByGroupResponse, decodeCosmosGroupQueryGroupPoliciesByAdminRequest as decodeCosmosGroupV1QueryGroupPoliciesByAdminRequest, decodeCosmosGroupQueryGroupPoliciesByAdminResponse as decodeCosmosGroupV1QueryGroupPoliciesByAdminResponse, decodeCosmosGroupQueryProposalRequest as decodeCosmosGroupV1QueryProposalRequest, decodeCosmosGroupQueryProposalResponse as decodeCosmosGroupV1QueryProposalResponse, decodeCosmosGroupQueryProposalsByGroupPolicyRequest as decodeCosmosGroupV1QueryProposalsByGroupPolicyRequest, decodeCosmosGroupQueryProposalsByGroupPolicyResponse as decodeCosmosGroupV1QueryProposalsByGroupPolicyResponse, decodeCosmosGroupQueryVoteByProposalVoterRequest as decodeCosmosGroupV1QueryVoteByProposalVoterRequest, decodeCosmosGroupQueryVoteByProposalVoterResponse as decodeCosmosGroupV1QueryVoteByProposalVoterResponse, decodeCosmosGroupQueryVotesByProposalRequest as decodeCosmosGroupV1QueryVotesByProposalRequest, decodeCosmosGroupQueryVotesByProposalResponse as decodeCosmosGroupV1QueryVotesByProposalResponse, decodeCosmosGroupQueryVotesByVoterRequest as decodeCosmosGroupV1QueryVotesByVoterRequest, decodeCosmosGroupQueryVotesByVoterResponse as decodeCosmosGroupV1QueryVotesByVoterResponse, decodeCosmosGroupQueryGroupsByMemberRequest as decodeCosmosGroupV1QueryGroupsByMemberRequest, decodeCosmosGroupQueryGroupsByMemberResponse as decodeCosmosGroupV1QueryGroupsByMemberResponse, decodeCosmosGroupQueryTallyResultRequest as decodeCosmosGroupV1QueryTallyResultRequest, decodeCosmosGroupQueryTallyResultResponse as decodeCosmosGroupV1QueryTallyResultResponse, decodeCosmosGroupQueryGroupsRequest as decodeCosmosGroupV1QueryGroupsRequest, decodeCosmosGroupQueryGroupsResponse as decodeCosmosGroupV1QueryGroupsResponse } from './cosmos/group/v1/query.js';
import { encodeCosmosGroupMsgCreateGroup as encodeCosmosGroupV1MsgCreateGroup, encodeCosmosGroupMsgCreateGroupResponse as encodeCosmosGroupV1MsgCreateGroupResponse, encodeCosmosGroupMsgUpdateGroupMembers as encodeCosmosGroupV1MsgUpdateGroupMembers, encodeCosmosGroupMsgUpdateGroupMembersResponse as encodeCosmosGroupV1MsgUpdateGroupMembersResponse, encodeCosmosGroupMsgUpdateGroupAdmin as encodeCosmosGroupV1MsgUpdateGroupAdmin, encodeCosmosGroupMsgUpdateGroupAdminResponse as encodeCosmosGroupV1MsgUpdateGroupAdminResponse, encodeCosmosGroupMsgUpdateGroupMetadata as encodeCosmosGroupV1MsgUpdateGroupMetadata, encodeCosmosGroupMsgUpdateGroupMetadataResponse as encodeCosmosGroupV1MsgUpdateGroupMetadataResponse, encodeCosmosGroupMsgCreateGroupPolicy as encodeCosmosGroupV1MsgCreateGroupPolicy, encodeCosmosGroupMsgCreateGroupPolicyResponse as encodeCosmosGroupV1MsgCreateGroupPolicyResponse, encodeCosmosGroupMsgUpdateGroupPolicyAdmin as encodeCosmosGroupV1MsgUpdateGroupPolicyAdmin, encodeCosmosGroupMsgUpdateGroupPolicyAdminResponse as encodeCosmosGroupV1MsgUpdateGroupPolicyAdminResponse, encodeCosmosGroupMsgCreateGroupWithPolicy as encodeCosmosGroupV1MsgCreateGroupWithPolicy, encodeCosmosGroupMsgCreateGroupWithPolicyResponse as encodeCosmosGroupV1MsgCreateGroupWithPolicyResponse, encodeCosmosGroupMsgUpdateGroupPolicyDecisionPolicy as encodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy, encodeCosmosGroupMsgUpdateGroupPolicyDecisionPolicyResponse as encodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse, encodeCosmosGroupMsgUpdateGroupPolicyMetadata as encodeCosmosGroupV1MsgUpdateGroupPolicyMetadata, encodeCosmosGroupMsgUpdateGroupPolicyMetadataResponse as encodeCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse, encodeCosmosGroupMsgSubmitProposal as encodeCosmosGroupV1MsgSubmitProposal, JsonToProtoEnumCosmosGroupExec as JsonToProtoEnumCosmosGroupV1Exec, ProtoToJsonEnumCosmosGroupExec as ProtoToJsonEnumCosmosGroupV1Exec, encodeCosmosGroupMsgSubmitProposalResponse as encodeCosmosGroupV1MsgSubmitProposalResponse, encodeCosmosGroupMsgWithdrawProposal as encodeCosmosGroupV1MsgWithdrawProposal, encodeCosmosGroupMsgWithdrawProposalResponse as encodeCosmosGroupV1MsgWithdrawProposalResponse, encodeCosmosGroupMsgVote as encodeCosmosGroupV1MsgVote, encodeCosmosGroupMsgVoteResponse as encodeCosmosGroupV1MsgVoteResponse, encodeCosmosGroupMsgExec as encodeCosmosGroupV1MsgExec, encodeCosmosGroupMsgExecResponse as encodeCosmosGroupV1MsgExecResponse, encodeCosmosGroupMsgLeaveGroup as encodeCosmosGroupV1MsgLeaveGroup, encodeCosmosGroupMsgLeaveGroupResponse as encodeCosmosGroupV1MsgLeaveGroupResponse, decodeCosmosGroupMsgCreateGroup as decodeCosmosGroupV1MsgCreateGroup, decodeCosmosGroupMsgCreateGroupResponse as decodeCosmosGroupV1MsgCreateGroupResponse, decodeCosmosGroupMsgUpdateGroupMembers as decodeCosmosGroupV1MsgUpdateGroupMembers, decodeCosmosGroupMsgUpdateGroupMembersResponse as decodeCosmosGroupV1MsgUpdateGroupMembersResponse, decodeCosmosGroupMsgUpdateGroupAdmin as decodeCosmosGroupV1MsgUpdateGroupAdmin, decodeCosmosGroupMsgUpdateGroupAdminResponse as decodeCosmosGroupV1MsgUpdateGroupAdminResponse, decodeCosmosGroupMsgUpdateGroupMetadata as decodeCosmosGroupV1MsgUpdateGroupMetadata, decodeCosmosGroupMsgUpdateGroupMetadataResponse as decodeCosmosGroupV1MsgUpdateGroupMetadataResponse, decodeCosmosGroupMsgCreateGroupPolicy as decodeCosmosGroupV1MsgCreateGroupPolicy, decodeCosmosGroupMsgCreateGroupPolicyResponse as decodeCosmosGroupV1MsgCreateGroupPolicyResponse, decodeCosmosGroupMsgUpdateGroupPolicyAdmin as decodeCosmosGroupV1MsgUpdateGroupPolicyAdmin, decodeCosmosGroupMsgUpdateGroupPolicyAdminResponse as decodeCosmosGroupV1MsgUpdateGroupPolicyAdminResponse, decodeCosmosGroupMsgCreateGroupWithPolicy as decodeCosmosGroupV1MsgCreateGroupWithPolicy, decodeCosmosGroupMsgCreateGroupWithPolicyResponse as decodeCosmosGroupV1MsgCreateGroupWithPolicyResponse, decodeCosmosGroupMsgUpdateGroupPolicyDecisionPolicy as decodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy, decodeCosmosGroupMsgUpdateGroupPolicyDecisionPolicyResponse as decodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse, decodeCosmosGroupMsgUpdateGroupPolicyMetadata as decodeCosmosGroupV1MsgUpdateGroupPolicyMetadata, decodeCosmosGroupMsgUpdateGroupPolicyMetadataResponse as decodeCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse, decodeCosmosGroupMsgSubmitProposal as decodeCosmosGroupV1MsgSubmitProposal, decodeCosmosGroupMsgSubmitProposalResponse as decodeCosmosGroupV1MsgSubmitProposalResponse, decodeCosmosGroupMsgWithdrawProposal as decodeCosmosGroupV1MsgWithdrawProposal, decodeCosmosGroupMsgWithdrawProposalResponse as decodeCosmosGroupV1MsgWithdrawProposalResponse, decodeCosmosGroupMsgVote as decodeCosmosGroupV1MsgVote, decodeCosmosGroupMsgVoteResponse as decodeCosmosGroupV1MsgVoteResponse, decodeCosmosGroupMsgExec as decodeCosmosGroupV1MsgExec, decodeCosmosGroupMsgExecResponse as decodeCosmosGroupV1MsgExecResponse, decodeCosmosGroupMsgLeaveGroup as decodeCosmosGroupV1MsgLeaveGroup, decodeCosmosGroupMsgLeaveGroupResponse as decodeCosmosGroupV1MsgLeaveGroupResponse } from './cosmos/group/v1/tx.js';
import { decodeCosmosGroupMemberRequest as decodeCosmosGroupV1MemberRequest, encodeCosmosGroupMemberRequest as encodeCosmosGroupV1MemberRequest, JsonToProtoEnumCosmosGroupVoteOption as JsonToProtoEnumCosmosGroupV1VoteOption, ProtoToJsonEnumCosmosGroupVoteOption as ProtoToJsonEnumCosmosGroupV1VoteOption, JsonToProtoEnumCosmosGroupProposalExecutorResult as JsonToProtoEnumCosmosGroupV1ProposalExecutorResult, ProtoToJsonEnumCosmosGroupProposalExecutorResult as ProtoToJsonEnumCosmosGroupV1ProposalExecutorResult, JsonToProtoEnumCosmosGroupProposalStatus as JsonToProtoEnumCosmosGroupV1ProposalStatus, decodeCosmosGroupTallyResult as decodeCosmosGroupV1TallyResult, ProtoToJsonEnumCosmosGroupProposalStatus as ProtoToJsonEnumCosmosGroupV1ProposalStatus, encodeCosmosGroupTallyResult as encodeCosmosGroupV1TallyResult, encodeCosmosGroupMember as encodeCosmosGroupV1Member, encodeCosmosGroupThresholdDecisionPolicy as encodeCosmosGroupV1ThresholdDecisionPolicy, decodeCosmosGroupDecisionPolicyWindows as decodeCosmosGroupV1DecisionPolicyWindows, encodeCosmosGroupDecisionPolicyWindows as encodeCosmosGroupV1DecisionPolicyWindows, encodeCosmosGroupPercentageDecisionPolicy as encodeCosmosGroupV1PercentageDecisionPolicy, encodeCosmosGroupGroupInfo as encodeCosmosGroupV1GroupInfo, encodeCosmosGroupGroupMember as encodeCosmosGroupV1GroupMember, decodeCosmosGroupMember as decodeCosmosGroupV1Member, encodeCosmosGroupGroupPolicyInfo as encodeCosmosGroupV1GroupPolicyInfo, encodeCosmosGroupProposal as encodeCosmosGroupV1Proposal, encodeCosmosGroupVote as encodeCosmosGroupV1Vote, decodeCosmosGroupGroupInfo as decodeCosmosGroupV1GroupInfo, decodeCosmosGroupGroupPolicyInfo as decodeCosmosGroupV1GroupPolicyInfo, decodeCosmosGroupGroupMember as decodeCosmosGroupV1GroupMember, decodeCosmosGroupProposal as decodeCosmosGroupV1Proposal, decodeCosmosGroupVote as decodeCosmosGroupV1Vote, decodeCosmosGroupThresholdDecisionPolicy as decodeCosmosGroupV1ThresholdDecisionPolicy, decodeCosmosGroupPercentageDecisionPolicy as decodeCosmosGroupV1PercentageDecisionPolicy } from './cosmos/group/v1/types.js';
import { encodeCosmosIcs23ExistenceProof as encodeCosmosIcs23V1ExistenceProof, decodeCosmosIcs23LeafOp as decodeCosmosIcs23V1LeafOp, decodeCosmosIcs23InnerOp as decodeCosmosIcs23V1InnerOp, encodeCosmosIcs23LeafOp as encodeCosmosIcs23V1LeafOp, JsonToProtoEnumCosmosIcs23HashOp as JsonToProtoEnumCosmosIcs23V1HashOp, JsonToProtoEnumCosmosIcs23LengthOp as JsonToProtoEnumCosmosIcs23V1LengthOp, ProtoToJsonEnumCosmosIcs23HashOp as ProtoToJsonEnumCosmosIcs23V1HashOp, ProtoToJsonEnumCosmosIcs23LengthOp as ProtoToJsonEnumCosmosIcs23V1LengthOp, encodeCosmosIcs23InnerOp as encodeCosmosIcs23V1InnerOp, encodeCosmosIcs23NonExistenceProof as encodeCosmosIcs23V1NonExistenceProof, decodeCosmosIcs23ExistenceProof as decodeCosmosIcs23V1ExistenceProof, encodeCosmosIcs23CommitmentProof as encodeCosmosIcs23V1CommitmentProof, decodeCosmosIcs23NonExistenceProof as decodeCosmosIcs23V1NonExistenceProof, decodeCosmosIcs23BatchProof as decodeCosmosIcs23V1BatchProof, decodeCosmosIcs23CompressedBatchProof as decodeCosmosIcs23V1CompressedBatchProof, encodeCosmosIcs23BatchProof as encodeCosmosIcs23V1BatchProof, decodeCosmosIcs23BatchEntry as decodeCosmosIcs23V1BatchEntry, encodeCosmosIcs23BatchEntry as encodeCosmosIcs23V1BatchEntry, encodeCosmosIcs23CompressedBatchProof as encodeCosmosIcs23V1CompressedBatchProof, decodeCosmosIcs23CompressedBatchEntry as decodeCosmosIcs23V1CompressedBatchEntry, encodeCosmosIcs23CompressedBatchEntry as encodeCosmosIcs23V1CompressedBatchEntry, decodeCosmosIcs23CompressedExistenceProof as decodeCosmosIcs23V1CompressedExistenceProof, decodeCosmosIcs23CompressedNonExistenceProof as decodeCosmosIcs23V1CompressedNonExistenceProof, encodeCosmosIcs23CompressedExistenceProof as encodeCosmosIcs23V1CompressedExistenceProof, encodeCosmosIcs23CompressedNonExistenceProof as encodeCosmosIcs23V1CompressedNonExistenceProof, encodeCosmosIcs23ProofSpec as encodeCosmosIcs23V1ProofSpec, decodeCosmosIcs23InnerSpec as decodeCosmosIcs23V1InnerSpec, encodeCosmosIcs23InnerSpec as encodeCosmosIcs23V1InnerSpec, decodeCosmosIcs23CommitmentProof as decodeCosmosIcs23V1CommitmentProof, decodeCosmosIcs23ProofSpec as decodeCosmosIcs23V1ProofSpec } from './cosmos/ics23/v1/proofs.js';
import { encodeCosmosMintModuleModule as encodeCosmosMintModuleV1Module, decodeCosmosMintModuleModule as decodeCosmosMintModuleV1Module } from './cosmos/mint/module/v1/module.js';
import { encodeCosmosMintGenesisState as encodeCosmosMintV1beta1GenesisState, decodeCosmosMintGenesisState as decodeCosmosMintV1beta1GenesisState } from './cosmos/mint/v1beta1/genesis.js';
import { decodeCosmosMintParams as decodeCosmosMintV1beta1Params, encodeCosmosMintParams as encodeCosmosMintV1beta1Params, decodeCosmosMintMinter as decodeCosmosMintV1beta1Minter, encodeCosmosMintMinter as encodeCosmosMintV1beta1Minter } from './cosmos/mint/v1beta1/mint.js';
import { encodeCosmosMintQueryParamsRequest as encodeCosmosMintV1beta1QueryParamsRequest, encodeCosmosMintQueryParamsResponse as encodeCosmosMintV1beta1QueryParamsResponse, encodeCosmosMintQueryInflationRequest as encodeCosmosMintV1beta1QueryInflationRequest, encodeCosmosMintQueryInflationResponse as encodeCosmosMintV1beta1QueryInflationResponse, encodeCosmosMintQueryAnnualProvisionsRequest as encodeCosmosMintV1beta1QueryAnnualProvisionsRequest, encodeCosmosMintQueryAnnualProvisionsResponse as encodeCosmosMintV1beta1QueryAnnualProvisionsResponse, decodeCosmosMintQueryParamsRequest as decodeCosmosMintV1beta1QueryParamsRequest, decodeCosmosMintQueryParamsResponse as decodeCosmosMintV1beta1QueryParamsResponse, decodeCosmosMintQueryInflationRequest as decodeCosmosMintV1beta1QueryInflationRequest, decodeCosmosMintQueryInflationResponse as decodeCosmosMintV1beta1QueryInflationResponse, decodeCosmosMintQueryAnnualProvisionsRequest as decodeCosmosMintV1beta1QueryAnnualProvisionsRequest, decodeCosmosMintQueryAnnualProvisionsResponse as decodeCosmosMintV1beta1QueryAnnualProvisionsResponse } from './cosmos/mint/v1beta1/query.js';
import { encodeCosmosMintMsgUpdateParams as encodeCosmosMintV1beta1MsgUpdateParams, encodeCosmosMintMsgUpdateParamsResponse as encodeCosmosMintV1beta1MsgUpdateParamsResponse, decodeCosmosMintMsgUpdateParams as decodeCosmosMintV1beta1MsgUpdateParams, decodeCosmosMintMsgUpdateParamsResponse as decodeCosmosMintV1beta1MsgUpdateParamsResponse } from './cosmos/mint/v1beta1/tx.js';
import { encodeCosmosNftModuleModule as encodeCosmosNftModuleV1Module, decodeCosmosNftModuleModule as decodeCosmosNftModuleV1Module } from './cosmos/nft/module/v1/module.js';
import { encodeCosmosNftEventSend as encodeCosmosNftV1beta1EventSend, encodeCosmosNftEventMint as encodeCosmosNftV1beta1EventMint, encodeCosmosNftEventBurn as encodeCosmosNftV1beta1EventBurn, decodeCosmosNftEventSend as decodeCosmosNftV1beta1EventSend, decodeCosmosNftEventMint as decodeCosmosNftV1beta1EventMint, decodeCosmosNftEventBurn as decodeCosmosNftV1beta1EventBurn } from './cosmos/nft/v1beta1/event.js';
import { encodeCosmosNftGenesisState as encodeCosmosNftV1beta1GenesisState, decodeCosmosNftEntry as decodeCosmosNftV1beta1Entry, encodeCosmosNftEntry as encodeCosmosNftV1beta1Entry, decodeCosmosNftGenesisState as decodeCosmosNftV1beta1GenesisState } from './cosmos/nft/v1beta1/genesis.js';
import { decodeCosmosNftNFT as decodeCosmosNftV1beta1NFT, encodeCosmosNftNFT as encodeCosmosNftV1beta1NFT, decodeCosmosNftClass as decodeCosmosNftV1beta1Class, encodeCosmosNftClass as encodeCosmosNftV1beta1Class } from './cosmos/nft/v1beta1/nft.js';
import { encodeCosmosNftQueryBalanceRequest as encodeCosmosNftV1beta1QueryBalanceRequest, encodeCosmosNftQueryBalanceResponse as encodeCosmosNftV1beta1QueryBalanceResponse, encodeCosmosNftQueryOwnerRequest as encodeCosmosNftV1beta1QueryOwnerRequest, encodeCosmosNftQueryOwnerResponse as encodeCosmosNftV1beta1QueryOwnerResponse, encodeCosmosNftQuerySupplyRequest as encodeCosmosNftV1beta1QuerySupplyRequest, encodeCosmosNftQuerySupplyResponse as encodeCosmosNftV1beta1QuerySupplyResponse, encodeCosmosNftQueryNFTsRequest as encodeCosmosNftV1beta1QueryNFTsRequest, encodeCosmosNftQueryNFTsResponse as encodeCosmosNftV1beta1QueryNFTsResponse, encodeCosmosNftQueryNFTRequest as encodeCosmosNftV1beta1QueryNFTRequest, encodeCosmosNftQueryNFTResponse as encodeCosmosNftV1beta1QueryNFTResponse, encodeCosmosNftQueryClassRequest as encodeCosmosNftV1beta1QueryClassRequest, encodeCosmosNftQueryClassResponse as encodeCosmosNftV1beta1QueryClassResponse, encodeCosmosNftQueryClassesRequest as encodeCosmosNftV1beta1QueryClassesRequest, encodeCosmosNftQueryClassesResponse as encodeCosmosNftV1beta1QueryClassesResponse, decodeCosmosNftQueryBalanceRequest as decodeCosmosNftV1beta1QueryBalanceRequest, decodeCosmosNftQueryBalanceResponse as decodeCosmosNftV1beta1QueryBalanceResponse, decodeCosmosNftQueryOwnerRequest as decodeCosmosNftV1beta1QueryOwnerRequest, decodeCosmosNftQueryOwnerResponse as decodeCosmosNftV1beta1QueryOwnerResponse, decodeCosmosNftQuerySupplyRequest as decodeCosmosNftV1beta1QuerySupplyRequest, decodeCosmosNftQuerySupplyResponse as decodeCosmosNftV1beta1QuerySupplyResponse, decodeCosmosNftQueryNFTsRequest as decodeCosmosNftV1beta1QueryNFTsRequest, decodeCosmosNftQueryNFTsResponse as decodeCosmosNftV1beta1QueryNFTsResponse, decodeCosmosNftQueryNFTRequest as decodeCosmosNftV1beta1QueryNFTRequest, decodeCosmosNftQueryNFTResponse as decodeCosmosNftV1beta1QueryNFTResponse, decodeCosmosNftQueryClassRequest as decodeCosmosNftV1beta1QueryClassRequest, decodeCosmosNftQueryClassResponse as decodeCosmosNftV1beta1QueryClassResponse, decodeCosmosNftQueryClassesRequest as decodeCosmosNftV1beta1QueryClassesRequest, decodeCosmosNftQueryClassesResponse as decodeCosmosNftV1beta1QueryClassesResponse } from './cosmos/nft/v1beta1/query.js';
import { encodeCosmosNftMsgSend as encodeCosmosNftV1beta1MsgSend, encodeCosmosNftMsgSendResponse as encodeCosmosNftV1beta1MsgSendResponse, decodeCosmosNftMsgSend as decodeCosmosNftV1beta1MsgSend, decodeCosmosNftMsgSendResponse as decodeCosmosNftV1beta1MsgSendResponse } from './cosmos/nft/v1beta1/tx.js';
import { encodeCosmosOrmModuleModule as encodeCosmosOrmModuleV1alpha1Module, decodeCosmosOrmModuleModule as decodeCosmosOrmModuleV1alpha1Module } from './cosmos/orm/module/v1alpha1/module.js';
import { encodeCosmosOrmQueryGetRequest as encodeCosmosOrmQueryV1alpha1GetRequest, decodeCosmosOrmQueryIndexValue as decodeCosmosOrmQueryV1alpha1IndexValue, encodeCosmosOrmQueryIndexValue as encodeCosmosOrmQueryV1alpha1IndexValue, encodeCosmosOrmQueryGetResponse as encodeCosmosOrmQueryV1alpha1GetResponse, encodeCosmosOrmQueryListRequest as encodeCosmosOrmQueryV1alpha1ListRequest, decodeCosmosOrmQueryListRequestPrefix as decodeCosmosOrmQueryV1alpha1ListRequestPrefix, decodeCosmosOrmQueryListRequestRange as decodeCosmosOrmQueryV1alpha1ListRequestRange, encodeCosmosOrmQueryListRequestPrefix as encodeCosmosOrmQueryV1alpha1ListRequestPrefix, encodeCosmosOrmQueryListRequestRange as encodeCosmosOrmQueryV1alpha1ListRequestRange, encodeCosmosOrmQueryListResponse as encodeCosmosOrmQueryV1alpha1ListResponse, decodeCosmosOrmQueryGetRequest as decodeCosmosOrmQueryV1alpha1GetRequest, decodeCosmosOrmQueryGetResponse as decodeCosmosOrmQueryV1alpha1GetResponse, decodeCosmosOrmQueryListRequest as decodeCosmosOrmQueryV1alpha1ListRequest, decodeCosmosOrmQueryListResponse as decodeCosmosOrmQueryV1alpha1ListResponse } from './cosmos/orm/query/v1alpha1/query.js';
import { encodeCosmosOrmTableDescriptor as encodeCosmosOrmV1TableDescriptor, decodeCosmosOrmPrimaryKeyDescriptor as decodeCosmosOrmV1PrimaryKeyDescriptor, decodeCosmosOrmSecondaryIndexDescriptor as decodeCosmosOrmV1SecondaryIndexDescriptor, encodeCosmosOrmPrimaryKeyDescriptor as encodeCosmosOrmV1PrimaryKeyDescriptor, encodeCosmosOrmSecondaryIndexDescriptor as encodeCosmosOrmV1SecondaryIndexDescriptor, encodeCosmosOrmSingletonDescriptor as encodeCosmosOrmV1SingletonDescriptor, decodeCosmosOrmTableDescriptor as decodeCosmosOrmV1TableDescriptor, decodeCosmosOrmSingletonDescriptor as decodeCosmosOrmV1SingletonDescriptor } from './cosmos/orm/v1/orm.js';
import { encodeCosmosOrmModuleSchemaDescriptor as encodeCosmosOrmV1alpha1ModuleSchemaDescriptor, decodeCosmosOrmModuleSchemaDescriptorFileEntry as decodeCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry, encodeCosmosOrmModuleSchemaDescriptorFileEntry as encodeCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry, JsonToProtoEnumCosmosOrmStorageType as JsonToProtoEnumCosmosOrmV1alpha1StorageType, ProtoToJsonEnumCosmosOrmStorageType as ProtoToJsonEnumCosmosOrmV1alpha1StorageType, decodeCosmosOrmModuleSchemaDescriptor as decodeCosmosOrmV1alpha1ModuleSchemaDescriptor } from './cosmos/orm/v1alpha1/schema.js';
import { encodeCosmosParamsModuleModule as encodeCosmosParamsModuleV1Module, decodeCosmosParamsModuleModule as decodeCosmosParamsModuleV1Module } from './cosmos/params/module/v1/module.js';
import { decodeCosmosParamsParamChange as decodeCosmosParamsV1beta1ParamChange, encodeCosmosParamsParamChange as encodeCosmosParamsV1beta1ParamChange, encodeCosmosParamsParameterChangeProposal as encodeCosmosParamsV1beta1ParameterChangeProposal, decodeCosmosParamsParameterChangeProposal as decodeCosmosParamsV1beta1ParameterChangeProposal } from './cosmos/params/v1beta1/params.js';
import { encodeCosmosParamsQueryParamsRequest as encodeCosmosParamsV1beta1QueryParamsRequest, encodeCosmosParamsQueryParamsResponse as encodeCosmosParamsV1beta1QueryParamsResponse, encodeCosmosParamsQuerySubspacesRequest as encodeCosmosParamsV1beta1QuerySubspacesRequest, encodeCosmosParamsQuerySubspacesResponse as encodeCosmosParamsV1beta1QuerySubspacesResponse, decodeCosmosParamsSubspace as decodeCosmosParamsV1beta1Subspace, encodeCosmosParamsSubspace as encodeCosmosParamsV1beta1Subspace, decodeCosmosParamsQueryParamsRequest as decodeCosmosParamsV1beta1QueryParamsRequest, decodeCosmosParamsQueryParamsResponse as decodeCosmosParamsV1beta1QueryParamsResponse, decodeCosmosParamsQuerySubspacesRequest as decodeCosmosParamsV1beta1QuerySubspacesRequest, decodeCosmosParamsQuerySubspacesResponse as decodeCosmosParamsV1beta1QuerySubspacesResponse } from './cosmos/params/v1beta1/query.js';
import { encodeCosmosProtocolpoolModuleModule as encodeCosmosProtocolpoolModuleV1Module, decodeCosmosProtocolpoolModuleModule as decodeCosmosProtocolpoolModuleV1Module } from './cosmos/protocolpool/module/v1/module.js';
import { encodeCosmosProtocolpoolQueryCommunityPoolRequest as encodeCosmosProtocolpoolV1QueryCommunityPoolRequest, encodeCosmosProtocolpoolQueryCommunityPoolResponse as encodeCosmosProtocolpoolV1QueryCommunityPoolResponse, decodeCosmosProtocolpoolQueryCommunityPoolRequest as decodeCosmosProtocolpoolV1QueryCommunityPoolRequest, decodeCosmosProtocolpoolQueryCommunityPoolResponse as decodeCosmosProtocolpoolV1QueryCommunityPoolResponse } from './cosmos/protocolpool/v1/query.js';
import { encodeCosmosProtocolpoolMsgFundCommunityPool as encodeCosmosProtocolpoolV1MsgFundCommunityPool, encodeCosmosProtocolpoolMsgFundCommunityPoolResponse as encodeCosmosProtocolpoolV1MsgFundCommunityPoolResponse, encodeCosmosProtocolpoolMsgCommunityPoolSpend as encodeCosmosProtocolpoolV1MsgCommunityPoolSpend, encodeCosmosProtocolpoolMsgCommunityPoolSpendResponse as encodeCosmosProtocolpoolV1MsgCommunityPoolSpendResponse, decodeCosmosProtocolpoolMsgFundCommunityPool as decodeCosmosProtocolpoolV1MsgFundCommunityPool, decodeCosmosProtocolpoolMsgFundCommunityPoolResponse as decodeCosmosProtocolpoolV1MsgFundCommunityPoolResponse, decodeCosmosProtocolpoolMsgCommunityPoolSpend as decodeCosmosProtocolpoolV1MsgCommunityPoolSpend, decodeCosmosProtocolpoolMsgCommunityPoolSpendResponse as decodeCosmosProtocolpoolV1MsgCommunityPoolSpendResponse } from './cosmos/protocolpool/v1/tx.js';
import { encodeCosmosReflectionFileDescriptorsRequest as encodeCosmosReflectionV1FileDescriptorsRequest, encodeCosmosReflectionFileDescriptorsResponse as encodeCosmosReflectionV1FileDescriptorsResponse, decodeCosmosReflectionFileDescriptorsRequest as decodeCosmosReflectionV1FileDescriptorsRequest, decodeCosmosReflectionFileDescriptorsResponse as decodeCosmosReflectionV1FileDescriptorsResponse } from './cosmos/reflection/v1/reflection.js';
import { encodeCosmosSlashingModuleModule as encodeCosmosSlashingModuleV1Module, decodeCosmosSlashingModuleModule as decodeCosmosSlashingModuleV1Module } from './cosmos/slashing/module/v1/module.js';
import { encodeCosmosSlashingGenesisState as encodeCosmosSlashingV1beta1GenesisState, decodeCosmosSlashingSigningInfo as decodeCosmosSlashingV1beta1SigningInfo, decodeCosmosSlashingValidatorMissedBlocks as decodeCosmosSlashingV1beta1ValidatorMissedBlocks, encodeCosmosSlashingSigningInfo as encodeCosmosSlashingV1beta1SigningInfo, encodeCosmosSlashingValidatorMissedBlocks as encodeCosmosSlashingV1beta1ValidatorMissedBlocks, decodeCosmosSlashingMissedBlock as decodeCosmosSlashingV1beta1MissedBlock, encodeCosmosSlashingMissedBlock as encodeCosmosSlashingV1beta1MissedBlock, decodeCosmosSlashingGenesisState as decodeCosmosSlashingV1beta1GenesisState } from './cosmos/slashing/v1beta1/genesis.js';
import { encodeCosmosSlashingQueryParamsRequest as encodeCosmosSlashingV1beta1QueryParamsRequest, encodeCosmosSlashingQueryParamsResponse as encodeCosmosSlashingV1beta1QueryParamsResponse, encodeCosmosSlashingQuerySigningInfoRequest as encodeCosmosSlashingV1beta1QuerySigningInfoRequest, encodeCosmosSlashingQuerySigningInfoResponse as encodeCosmosSlashingV1beta1QuerySigningInfoResponse, encodeCosmosSlashingQuerySigningInfosRequest as encodeCosmosSlashingV1beta1QuerySigningInfosRequest, encodeCosmosSlashingQuerySigningInfosResponse as encodeCosmosSlashingV1beta1QuerySigningInfosResponse, decodeCosmosSlashingQueryParamsRequest as decodeCosmosSlashingV1beta1QueryParamsRequest, decodeCosmosSlashingQueryParamsResponse as decodeCosmosSlashingV1beta1QueryParamsResponse, decodeCosmosSlashingQuerySigningInfoRequest as decodeCosmosSlashingV1beta1QuerySigningInfoRequest, decodeCosmosSlashingQuerySigningInfoResponse as decodeCosmosSlashingV1beta1QuerySigningInfoResponse, decodeCosmosSlashingQuerySigningInfosRequest as decodeCosmosSlashingV1beta1QuerySigningInfosRequest, decodeCosmosSlashingQuerySigningInfosResponse as decodeCosmosSlashingV1beta1QuerySigningInfosResponse } from './cosmos/slashing/v1beta1/query.js';
import { decodeCosmosSlashingParams as decodeCosmosSlashingV1beta1Params, encodeCosmosSlashingParams as encodeCosmosSlashingV1beta1Params, encodeCosmosSlashingValidatorSigningInfo as encodeCosmosSlashingV1beta1ValidatorSigningInfo, decodeCosmosSlashingValidatorSigningInfo as decodeCosmosSlashingV1beta1ValidatorSigningInfo } from './cosmos/slashing/v1beta1/slashing.js';
import { encodeCosmosSlashingMsgUnjail as encodeCosmosSlashingV1beta1MsgUnjail, encodeCosmosSlashingMsgUnjailResponse as encodeCosmosSlashingV1beta1MsgUnjailResponse, encodeCosmosSlashingMsgUpdateParams as encodeCosmosSlashingV1beta1MsgUpdateParams, encodeCosmosSlashingMsgUpdateParamsResponse as encodeCosmosSlashingV1beta1MsgUpdateParamsResponse, decodeCosmosSlashingMsgUnjail as decodeCosmosSlashingV1beta1MsgUnjail, decodeCosmosSlashingMsgUnjailResponse as decodeCosmosSlashingV1beta1MsgUnjailResponse, decodeCosmosSlashingMsgUpdateParams as decodeCosmosSlashingV1beta1MsgUpdateParams, decodeCosmosSlashingMsgUpdateParamsResponse as decodeCosmosSlashingV1beta1MsgUpdateParamsResponse } from './cosmos/slashing/v1beta1/tx.js';
import { encodeCosmosStakingModuleModule as encodeCosmosStakingModuleV1Module, decodeCosmosStakingModuleModule as decodeCosmosStakingModuleV1Module } from './cosmos/staking/module/v1/module.js';
import { encodeCosmosStakingStakeAuthorization as encodeCosmosStakingV1beta1StakeAuthorization, decodeCosmosStakingStakeAuthorizationValidators as decodeCosmosStakingV1beta1StakeAuthorizationValidators, JsonToProtoEnumCosmosStakingAuthorizationType as JsonToProtoEnumCosmosStakingV1beta1AuthorizationType, ProtoToJsonEnumCosmosStakingAuthorizationType as ProtoToJsonEnumCosmosStakingV1beta1AuthorizationType, encodeCosmosStakingStakeAuthorizationValidators as encodeCosmosStakingV1beta1StakeAuthorizationValidators, decodeCosmosStakingStakeAuthorization as decodeCosmosStakingV1beta1StakeAuthorization } from './cosmos/staking/v1beta1/authz.js';
import { encodeCosmosStakingGenesisState as encodeCosmosStakingV1beta1GenesisState, decodeCosmosStakingLastValidatorPower as decodeCosmosStakingV1beta1LastValidatorPower, encodeCosmosStakingLastValidatorPower as encodeCosmosStakingV1beta1LastValidatorPower, decodeCosmosStakingGenesisState as decodeCosmosStakingV1beta1GenesisState } from './cosmos/staking/v1beta1/genesis.js';
import { encodeCosmosStakingQueryValidatorsRequest as encodeCosmosStakingV1beta1QueryValidatorsRequest, encodeCosmosStakingQueryValidatorsResponse as encodeCosmosStakingV1beta1QueryValidatorsResponse, encodeCosmosStakingQueryValidatorRequest as encodeCosmosStakingV1beta1QueryValidatorRequest, encodeCosmosStakingQueryValidatorResponse as encodeCosmosStakingV1beta1QueryValidatorResponse, encodeCosmosStakingQueryValidatorDelegationsRequest as encodeCosmosStakingV1beta1QueryValidatorDelegationsRequest, encodeCosmosStakingQueryValidatorDelegationsResponse as encodeCosmosStakingV1beta1QueryValidatorDelegationsResponse, encodeCosmosStakingQueryValidatorUnbondingDelegationsRequest as encodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest, encodeCosmosStakingQueryValidatorUnbondingDelegationsResponse as encodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse, encodeCosmosStakingQueryDelegationRequest as encodeCosmosStakingV1beta1QueryDelegationRequest, encodeCosmosStakingQueryDelegationResponse as encodeCosmosStakingV1beta1QueryDelegationResponse, encodeCosmosStakingQueryUnbondingDelegationRequest as encodeCosmosStakingV1beta1QueryUnbondingDelegationRequest, encodeCosmosStakingQueryUnbondingDelegationResponse as encodeCosmosStakingV1beta1QueryUnbondingDelegationResponse, encodeCosmosStakingQueryDelegatorDelegationsRequest as encodeCosmosStakingV1beta1QueryDelegatorDelegationsRequest, encodeCosmosStakingQueryDelegatorDelegationsResponse as encodeCosmosStakingV1beta1QueryDelegatorDelegationsResponse, encodeCosmosStakingQueryDelegatorUnbondingDelegationsRequest as encodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest, encodeCosmosStakingQueryDelegatorUnbondingDelegationsResponse as encodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse, encodeCosmosStakingQueryRedelegationsRequest as encodeCosmosStakingV1beta1QueryRedelegationsRequest, encodeCosmosStakingQueryRedelegationsResponse as encodeCosmosStakingV1beta1QueryRedelegationsResponse, encodeCosmosStakingQueryDelegatorValidatorsRequest as encodeCosmosStakingV1beta1QueryDelegatorValidatorsRequest, encodeCosmosStakingQueryDelegatorValidatorsResponse as encodeCosmosStakingV1beta1QueryDelegatorValidatorsResponse, encodeCosmosStakingQueryDelegatorValidatorRequest as encodeCosmosStakingV1beta1QueryDelegatorValidatorRequest, encodeCosmosStakingQueryDelegatorValidatorResponse as encodeCosmosStakingV1beta1QueryDelegatorValidatorResponse, encodeCosmosStakingQueryHistoricalInfoRequest as encodeCosmosStakingV1beta1QueryHistoricalInfoRequest, encodeCosmosStakingQueryHistoricalInfoResponse as encodeCosmosStakingV1beta1QueryHistoricalInfoResponse, encodeCosmosStakingQueryPoolRequest as encodeCosmosStakingV1beta1QueryPoolRequest, encodeCosmosStakingQueryPoolResponse as encodeCosmosStakingV1beta1QueryPoolResponse, encodeCosmosStakingQueryParamsRequest as encodeCosmosStakingV1beta1QueryParamsRequest, encodeCosmosStakingQueryParamsResponse as encodeCosmosStakingV1beta1QueryParamsResponse, decodeCosmosStakingQueryValidatorsRequest as decodeCosmosStakingV1beta1QueryValidatorsRequest, decodeCosmosStakingQueryValidatorsResponse as decodeCosmosStakingV1beta1QueryValidatorsResponse, decodeCosmosStakingQueryValidatorRequest as decodeCosmosStakingV1beta1QueryValidatorRequest, decodeCosmosStakingQueryValidatorResponse as decodeCosmosStakingV1beta1QueryValidatorResponse, decodeCosmosStakingQueryValidatorDelegationsRequest as decodeCosmosStakingV1beta1QueryValidatorDelegationsRequest, decodeCosmosStakingQueryValidatorDelegationsResponse as decodeCosmosStakingV1beta1QueryValidatorDelegationsResponse, decodeCosmosStakingQueryValidatorUnbondingDelegationsRequest as decodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest, decodeCosmosStakingQueryValidatorUnbondingDelegationsResponse as decodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse, decodeCosmosStakingQueryDelegationRequest as decodeCosmosStakingV1beta1QueryDelegationRequest, decodeCosmosStakingQueryDelegationResponse as decodeCosmosStakingV1beta1QueryDelegationResponse, decodeCosmosStakingQueryUnbondingDelegationRequest as decodeCosmosStakingV1beta1QueryUnbondingDelegationRequest, decodeCosmosStakingQueryUnbondingDelegationResponse as decodeCosmosStakingV1beta1QueryUnbondingDelegationResponse, decodeCosmosStakingQueryDelegatorDelegationsRequest as decodeCosmosStakingV1beta1QueryDelegatorDelegationsRequest, decodeCosmosStakingQueryDelegatorDelegationsResponse as decodeCosmosStakingV1beta1QueryDelegatorDelegationsResponse, decodeCosmosStakingQueryDelegatorUnbondingDelegationsRequest as decodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest, decodeCosmosStakingQueryDelegatorUnbondingDelegationsResponse as decodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse, decodeCosmosStakingQueryRedelegationsRequest as decodeCosmosStakingV1beta1QueryRedelegationsRequest, decodeCosmosStakingQueryRedelegationsResponse as decodeCosmosStakingV1beta1QueryRedelegationsResponse, decodeCosmosStakingQueryDelegatorValidatorsRequest as decodeCosmosStakingV1beta1QueryDelegatorValidatorsRequest, decodeCosmosStakingQueryDelegatorValidatorsResponse as decodeCosmosStakingV1beta1QueryDelegatorValidatorsResponse, decodeCosmosStakingQueryDelegatorValidatorRequest as decodeCosmosStakingV1beta1QueryDelegatorValidatorRequest, decodeCosmosStakingQueryDelegatorValidatorResponse as decodeCosmosStakingV1beta1QueryDelegatorValidatorResponse, decodeCosmosStakingQueryHistoricalInfoRequest as decodeCosmosStakingV1beta1QueryHistoricalInfoRequest, decodeCosmosStakingQueryHistoricalInfoResponse as decodeCosmosStakingV1beta1QueryHistoricalInfoResponse, decodeCosmosStakingQueryPoolRequest as decodeCosmosStakingV1beta1QueryPoolRequest, decodeCosmosStakingQueryPoolResponse as decodeCosmosStakingV1beta1QueryPoolResponse, decodeCosmosStakingQueryParamsRequest as decodeCosmosStakingV1beta1QueryParamsRequest, decodeCosmosStakingQueryParamsResponse as decodeCosmosStakingV1beta1QueryParamsResponse } from './cosmos/staking/v1beta1/query.js';
import { decodeCosmosStakingDescription as decodeCosmosStakingV1beta1Description, decodeCosmosStakingCommissionRates as decodeCosmosStakingV1beta1CommissionRates, encodeCosmosStakingDescription as encodeCosmosStakingV1beta1Description, encodeCosmosStakingCommissionRates as encodeCosmosStakingV1beta1CommissionRates, decodeCosmosStakingParams as decodeCosmosStakingV1beta1Params, encodeCosmosStakingParams as encodeCosmosStakingV1beta1Params, decodeCosmosStakingValidator as decodeCosmosStakingV1beta1Validator, encodeCosmosStakingValidator as encodeCosmosStakingV1beta1Validator, JsonToProtoEnumCosmosStakingBondStatus as JsonToProtoEnumCosmosStakingV1beta1BondStatus, decodeCosmosStakingCommission as decodeCosmosStakingV1beta1Commission, ProtoToJsonEnumCosmosStakingBondStatus as ProtoToJsonEnumCosmosStakingV1beta1BondStatus, encodeCosmosStakingCommission as encodeCosmosStakingV1beta1Commission, decodeCosmosStakingDelegationResponse as decodeCosmosStakingV1beta1DelegationResponse, encodeCosmosStakingDelegationResponse as encodeCosmosStakingV1beta1DelegationResponse, decodeCosmosStakingDelegation as decodeCosmosStakingV1beta1Delegation, encodeCosmosStakingDelegation as encodeCosmosStakingV1beta1Delegation, decodeCosmosStakingUnbondingDelegation as decodeCosmosStakingV1beta1UnbondingDelegation, encodeCosmosStakingUnbondingDelegation as encodeCosmosStakingV1beta1UnbondingDelegation, decodeCosmosStakingUnbondingDelegationEntry as decodeCosmosStakingV1beta1UnbondingDelegationEntry, encodeCosmosStakingUnbondingDelegationEntry as encodeCosmosStakingV1beta1UnbondingDelegationEntry, decodeCosmosStakingRedelegationResponse as decodeCosmosStakingV1beta1RedelegationResponse, encodeCosmosStakingRedelegationResponse as encodeCosmosStakingV1beta1RedelegationResponse, decodeCosmosStakingRedelegation as decodeCosmosStakingV1beta1Redelegation, decodeCosmosStakingRedelegationEntryResponse as decodeCosmosStakingV1beta1RedelegationEntryResponse, encodeCosmosStakingRedelegation as encodeCosmosStakingV1beta1Redelegation, decodeCosmosStakingRedelegationEntry as decodeCosmosStakingV1beta1RedelegationEntry, encodeCosmosStakingRedelegationEntry as encodeCosmosStakingV1beta1RedelegationEntry, encodeCosmosStakingRedelegationEntryResponse as encodeCosmosStakingV1beta1RedelegationEntryResponse, decodeCosmosStakingHistoricalInfo as decodeCosmosStakingV1beta1HistoricalInfo, decodeCosmosStakingHistoricalRecord as decodeCosmosStakingV1beta1HistoricalRecord, encodeCosmosStakingHistoricalInfo as encodeCosmosStakingV1beta1HistoricalInfo, encodeCosmosStakingHistoricalRecord as encodeCosmosStakingV1beta1HistoricalRecord, decodeCosmosStakingPool as decodeCosmosStakingV1beta1Pool, encodeCosmosStakingPool as encodeCosmosStakingV1beta1Pool, encodeCosmosStakingValAddresses as encodeCosmosStakingV1beta1ValAddresses, encodeCosmosStakingDVPair as encodeCosmosStakingV1beta1DVPair, encodeCosmosStakingDVPairs as encodeCosmosStakingV1beta1DVPairs, decodeCosmosStakingDVPair as decodeCosmosStakingV1beta1DVPair, encodeCosmosStakingDVVTriplet as encodeCosmosStakingV1beta1DVVTriplet, encodeCosmosStakingDVVTriplets as encodeCosmosStakingV1beta1DVVTriplets, decodeCosmosStakingDVVTriplet as decodeCosmosStakingV1beta1DVVTriplet, encodeCosmosStakingValidatorUpdates as encodeCosmosStakingV1beta1ValidatorUpdates, decodeCosmosStakingValAddresses as decodeCosmosStakingV1beta1ValAddresses, decodeCosmosStakingDVPairs as decodeCosmosStakingV1beta1DVPairs, decodeCosmosStakingDVVTriplets as decodeCosmosStakingV1beta1DVVTriplets, decodeCosmosStakingValidatorUpdates as decodeCosmosStakingV1beta1ValidatorUpdates } from './cosmos/staking/v1beta1/staking.js';
import { encodeCosmosStakingMsgCreateValidator as encodeCosmosStakingV1beta1MsgCreateValidator, encodeCosmosStakingMsgCreateValidatorResponse as encodeCosmosStakingV1beta1MsgCreateValidatorResponse, encodeCosmosStakingMsgEditValidator as encodeCosmosStakingV1beta1MsgEditValidator, encodeCosmosStakingMsgEditValidatorResponse as encodeCosmosStakingV1beta1MsgEditValidatorResponse, encodeCosmosStakingMsgDelegate as encodeCosmosStakingV1beta1MsgDelegate, encodeCosmosStakingMsgDelegateResponse as encodeCosmosStakingV1beta1MsgDelegateResponse, encodeCosmosStakingMsgBeginRedelegate as encodeCosmosStakingV1beta1MsgBeginRedelegate, encodeCosmosStakingMsgBeginRedelegateResponse as encodeCosmosStakingV1beta1MsgBeginRedelegateResponse, encodeCosmosStakingMsgUndelegate as encodeCosmosStakingV1beta1MsgUndelegate, encodeCosmosStakingMsgUndelegateResponse as encodeCosmosStakingV1beta1MsgUndelegateResponse, encodeCosmosStakingMsgCancelUnbondingDelegation as encodeCosmosStakingV1beta1MsgCancelUnbondingDelegation, encodeCosmosStakingMsgCancelUnbondingDelegationResponse as encodeCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse, encodeCosmosStakingMsgUpdateParams as encodeCosmosStakingV1beta1MsgUpdateParams, encodeCosmosStakingMsgUpdateParamsResponse as encodeCosmosStakingV1beta1MsgUpdateParamsResponse, decodeCosmosStakingMsgCreateValidator as decodeCosmosStakingV1beta1MsgCreateValidator, decodeCosmosStakingMsgCreateValidatorResponse as decodeCosmosStakingV1beta1MsgCreateValidatorResponse, decodeCosmosStakingMsgEditValidator as decodeCosmosStakingV1beta1MsgEditValidator, decodeCosmosStakingMsgEditValidatorResponse as decodeCosmosStakingV1beta1MsgEditValidatorResponse, decodeCosmosStakingMsgDelegate as decodeCosmosStakingV1beta1MsgDelegate, decodeCosmosStakingMsgDelegateResponse as decodeCosmosStakingV1beta1MsgDelegateResponse, decodeCosmosStakingMsgBeginRedelegate as decodeCosmosStakingV1beta1MsgBeginRedelegate, decodeCosmosStakingMsgBeginRedelegateResponse as decodeCosmosStakingV1beta1MsgBeginRedelegateResponse, decodeCosmosStakingMsgUndelegate as decodeCosmosStakingV1beta1MsgUndelegate, decodeCosmosStakingMsgUndelegateResponse as decodeCosmosStakingV1beta1MsgUndelegateResponse, decodeCosmosStakingMsgCancelUnbondingDelegation as decodeCosmosStakingV1beta1MsgCancelUnbondingDelegation, decodeCosmosStakingMsgCancelUnbondingDelegationResponse as decodeCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse, decodeCosmosStakingMsgUpdateParams as decodeCosmosStakingV1beta1MsgUpdateParams, decodeCosmosStakingMsgUpdateParamsResponse as decodeCosmosStakingV1beta1MsgUpdateParamsResponse } from './cosmos/staking/v1beta1/tx.js';
import { encodeCosmosStoreInternalKvPairs as encodeCosmosStoreInternalKvV1beta1Pairs, decodeCosmosStoreInternalKvPair as decodeCosmosStoreInternalKvV1beta1Pair, encodeCosmosStoreInternalKvPair as encodeCosmosStoreInternalKvV1beta1Pair, decodeCosmosStoreInternalKvPairs as decodeCosmosStoreInternalKvV1beta1Pairs } from './cosmos/store/internal/kv/v1beta1/kv.js';
import { encodeCosmosStoreSnapshotsSnapshot as encodeCosmosStoreSnapshotsV1Snapshot, decodeCosmosStoreSnapshotsMetadata as decodeCosmosStoreSnapshotsV1Metadata, encodeCosmosStoreSnapshotsMetadata as encodeCosmosStoreSnapshotsV1Metadata, encodeCosmosStoreSnapshotsSnapshotItem as encodeCosmosStoreSnapshotsV1SnapshotItem, decodeCosmosStoreSnapshotsSnapshotStoreItem as decodeCosmosStoreSnapshotsV1SnapshotStoreItem, decodeCosmosStoreSnapshotsSnapshotIAVLItem as decodeCosmosStoreSnapshotsV1SnapshotIAVLItem, decodeCosmosStoreSnapshotsSnapshotExtensionMeta as decodeCosmosStoreSnapshotsV1SnapshotExtensionMeta, decodeCosmosStoreSnapshotsSnapshotExtensionPayload as decodeCosmosStoreSnapshotsV1SnapshotExtensionPayload, encodeCosmosStoreSnapshotsSnapshotStoreItem as encodeCosmosStoreSnapshotsV1SnapshotStoreItem, encodeCosmosStoreSnapshotsSnapshotIAVLItem as encodeCosmosStoreSnapshotsV1SnapshotIAVLItem, encodeCosmosStoreSnapshotsSnapshotExtensionMeta as encodeCosmosStoreSnapshotsV1SnapshotExtensionMeta, encodeCosmosStoreSnapshotsSnapshotExtensionPayload as encodeCosmosStoreSnapshotsV1SnapshotExtensionPayload, decodeCosmosStoreSnapshotsSnapshot as decodeCosmosStoreSnapshotsV1Snapshot, decodeCosmosStoreSnapshotsSnapshotItem as decodeCosmosStoreSnapshotsV1SnapshotItem } from './cosmos/store/snapshots/v1/snapshot.js';
import { encodeCosmosStoreStreamingAbciListenFinalizeBlockRequest, encodeCosmosStoreStreamingAbciListenFinalizeBlockResponse, encodeCosmosStoreStreamingAbciListenCommitRequest, encodeCosmosStoreStreamingAbciListenCommitResponse, decodeCosmosStoreStreamingAbciListenFinalizeBlockRequest, decodeCosmosStoreStreamingAbciListenFinalizeBlockResponse, decodeCosmosStoreStreamingAbciListenCommitRequest, decodeCosmosStoreStreamingAbciListenCommitResponse } from './cosmos/store/streaming/abci/grpc.js';
import { encodeCosmosStoreCommitInfo as encodeCosmosStoreV1beta1CommitInfo, decodeCosmosStoreStoreInfo as decodeCosmosStoreV1beta1StoreInfo, encodeCosmosStoreStoreInfo as encodeCosmosStoreV1beta1StoreInfo, decodeCosmosStoreCommitID as decodeCosmosStoreV1beta1CommitID, encodeCosmosStoreCommitID as encodeCosmosStoreV1beta1CommitID, decodeCosmosStoreCommitInfo as decodeCosmosStoreV1beta1CommitInfo } from './cosmos/store/v1beta1/commit_info.js';
import { decodeCosmosStoreStoreKVPair as decodeCosmosStoreV1beta1StoreKVPair, encodeCosmosStoreStoreKVPair as encodeCosmosStoreV1beta1StoreKVPair, encodeCosmosStoreBlockMetadata as encodeCosmosStoreV1beta1BlockMetadata, decodeCosmosStoreBlockMetadata as decodeCosmosStoreV1beta1BlockMetadata } from './cosmos/store/v1beta1/listening.js';
import { encodeCosmosTxConfigConfig as encodeCosmosTxConfigV1Config, decodeCosmosTxConfigConfig as decodeCosmosTxConfigV1Config } from './cosmos/tx/config/v1/config.js';
import { encodeCosmosTxSigningSignatureDescriptors as encodeCosmosTxSigningV1beta1SignatureDescriptors, decodeCosmosTxSigningSignatureDescriptor as decodeCosmosTxSigningV1beta1SignatureDescriptor, encodeCosmosTxSigningSignatureDescriptor as encodeCosmosTxSigningV1beta1SignatureDescriptor, decodeCosmosTxSigningSignatureDescriptorData as decodeCosmosTxSigningV1beta1SignatureDescriptorData, encodeCosmosTxSigningSignatureDescriptorData as encodeCosmosTxSigningV1beta1SignatureDescriptorData, decodeCosmosTxSigningSignatureDescriptorDataSingle as decodeCosmosTxSigningV1beta1SignatureDescriptorDataSingle, decodeCosmosTxSigningSignatureDescriptorDataMulti as decodeCosmosTxSigningV1beta1SignatureDescriptorDataMulti, encodeCosmosTxSigningSignatureDescriptorDataSingle as encodeCosmosTxSigningV1beta1SignatureDescriptorDataSingle, JsonToProtoEnumCosmosTxSigningSignMode as JsonToProtoEnumCosmosTxSigningV1beta1SignMode, ProtoToJsonEnumCosmosTxSigningSignMode as ProtoToJsonEnumCosmosTxSigningV1beta1SignMode, encodeCosmosTxSigningSignatureDescriptorDataMulti as encodeCosmosTxSigningV1beta1SignatureDescriptorDataMulti, decodeCosmosTxSigningSignatureDescriptors as decodeCosmosTxSigningV1beta1SignatureDescriptors } from './cosmos/tx/signing/v1beta1/signing.js';
import { encodeCosmosTxGetTxsEventRequest as encodeCosmosTxV1beta1GetTxsEventRequest, JsonToProtoEnumCosmosTxOrderBy as JsonToProtoEnumCosmosTxV1beta1OrderBy, ProtoToJsonEnumCosmosTxOrderBy as ProtoToJsonEnumCosmosTxV1beta1OrderBy, encodeCosmosTxGetTxsEventResponse as encodeCosmosTxV1beta1GetTxsEventResponse, encodeCosmosTxBroadcastTxRequest as encodeCosmosTxV1beta1BroadcastTxRequest, JsonToProtoEnumCosmosTxBroadcastMode as JsonToProtoEnumCosmosTxV1beta1BroadcastMode, ProtoToJsonEnumCosmosTxBroadcastMode as ProtoToJsonEnumCosmosTxV1beta1BroadcastMode, encodeCosmosTxBroadcastTxResponse as encodeCosmosTxV1beta1BroadcastTxResponse, encodeCosmosTxSimulateRequest as encodeCosmosTxV1beta1SimulateRequest, encodeCosmosTxSimulateResponse as encodeCosmosTxV1beta1SimulateResponse, encodeCosmosTxGetTxRequest as encodeCosmosTxV1beta1GetTxRequest, encodeCosmosTxGetTxResponse as encodeCosmosTxV1beta1GetTxResponse, encodeCosmosTxGetBlockWithTxsRequest as encodeCosmosTxV1beta1GetBlockWithTxsRequest, encodeCosmosTxGetBlockWithTxsResponse as encodeCosmosTxV1beta1GetBlockWithTxsResponse, encodeCosmosTxTxDecodeRequest as encodeCosmosTxV1beta1TxDecodeRequest, encodeCosmosTxTxDecodeResponse as encodeCosmosTxV1beta1TxDecodeResponse, encodeCosmosTxTxEncodeRequest as encodeCosmosTxV1beta1TxEncodeRequest, encodeCosmosTxTxEncodeResponse as encodeCosmosTxV1beta1TxEncodeResponse, encodeCosmosTxTxEncodeAminoRequest as encodeCosmosTxV1beta1TxEncodeAminoRequest, encodeCosmosTxTxEncodeAminoResponse as encodeCosmosTxV1beta1TxEncodeAminoResponse, encodeCosmosTxTxDecodeAminoRequest as encodeCosmosTxV1beta1TxDecodeAminoRequest, encodeCosmosTxTxDecodeAminoResponse as encodeCosmosTxV1beta1TxDecodeAminoResponse, decodeCosmosTxGetTxsEventRequest as decodeCosmosTxV1beta1GetTxsEventRequest, decodeCosmosTxGetTxsEventResponse as decodeCosmosTxV1beta1GetTxsEventResponse, decodeCosmosTxBroadcastTxRequest as decodeCosmosTxV1beta1BroadcastTxRequest, decodeCosmosTxBroadcastTxResponse as decodeCosmosTxV1beta1BroadcastTxResponse, decodeCosmosTxSimulateRequest as decodeCosmosTxV1beta1SimulateRequest, decodeCosmosTxSimulateResponse as decodeCosmosTxV1beta1SimulateResponse, decodeCosmosTxGetTxRequest as decodeCosmosTxV1beta1GetTxRequest, decodeCosmosTxGetTxResponse as decodeCosmosTxV1beta1GetTxResponse, decodeCosmosTxGetBlockWithTxsRequest as decodeCosmosTxV1beta1GetBlockWithTxsRequest, decodeCosmosTxGetBlockWithTxsResponse as decodeCosmosTxV1beta1GetBlockWithTxsResponse, decodeCosmosTxTxDecodeRequest as decodeCosmosTxV1beta1TxDecodeRequest, decodeCosmosTxTxDecodeResponse as decodeCosmosTxV1beta1TxDecodeResponse, decodeCosmosTxTxEncodeRequest as decodeCosmosTxV1beta1TxEncodeRequest, decodeCosmosTxTxEncodeResponse as decodeCosmosTxV1beta1TxEncodeResponse, decodeCosmosTxTxEncodeAminoRequest as decodeCosmosTxV1beta1TxEncodeAminoRequest, decodeCosmosTxTxEncodeAminoResponse as decodeCosmosTxV1beta1TxEncodeAminoResponse, decodeCosmosTxTxDecodeAminoRequest as decodeCosmosTxV1beta1TxDecodeAminoRequest, decodeCosmosTxTxDecodeAminoResponse as decodeCosmosTxV1beta1TxDecodeAminoResponse } from './cosmos/tx/v1beta1/service.js';
import { encodeCosmosTxTx as encodeCosmosTxV1beta1Tx, decodeCosmosTxTxBody as decodeCosmosTxV1beta1TxBody, decodeCosmosTxAuthInfo as decodeCosmosTxV1beta1AuthInfo, encodeCosmosTxTxBody as encodeCosmosTxV1beta1TxBody, encodeCosmosTxAuthInfo as encodeCosmosTxV1beta1AuthInfo, decodeCosmosTxSignerInfo as decodeCosmosTxV1beta1SignerInfo, decodeCosmosTxFee as decodeCosmosTxV1beta1Fee, decodeCosmosTxTip as decodeCosmosTxV1beta1Tip, encodeCosmosTxSignerInfo as encodeCosmosTxV1beta1SignerInfo, decodeCosmosTxModeInfo as decodeCosmosTxV1beta1ModeInfo, encodeCosmosTxModeInfo as encodeCosmosTxV1beta1ModeInfo, decodeCosmosTxModeInfoSingle as decodeCosmosTxV1beta1ModeInfoSingle, decodeCosmosTxModeInfoMulti as decodeCosmosTxV1beta1ModeInfoMulti, encodeCosmosTxModeInfoSingle as encodeCosmosTxV1beta1ModeInfoSingle, encodeCosmosTxModeInfoMulti as encodeCosmosTxV1beta1ModeInfoMulti, encodeCosmosTxFee as encodeCosmosTxV1beta1Fee, encodeCosmosTxTip as encodeCosmosTxV1beta1Tip, encodeCosmosTxTxRaw as encodeCosmosTxV1beta1TxRaw, encodeCosmosTxSignDoc as encodeCosmosTxV1beta1SignDoc, encodeCosmosTxSignDocDirectAux as encodeCosmosTxV1beta1SignDocDirectAux, encodeCosmosTxAuxSignerData as encodeCosmosTxV1beta1AuxSignerData, decodeCosmosTxSignDocDirectAux as decodeCosmosTxV1beta1SignDocDirectAux, decodeCosmosTxTx as decodeCosmosTxV1beta1Tx, decodeCosmosTxTxRaw as decodeCosmosTxV1beta1TxRaw, decodeCosmosTxSignDoc as decodeCosmosTxV1beta1SignDoc, decodeCosmosTxAuxSignerData as decodeCosmosTxV1beta1AuxSignerData } from './cosmos/tx/v1beta1/tx.js';
import { encodeCosmosUpgradeModuleModule as encodeCosmosUpgradeModuleV1Module, decodeCosmosUpgradeModuleModule as decodeCosmosUpgradeModuleV1Module } from './cosmos/upgrade/module/v1/module.js';
import { encodeCosmosUpgradeQueryCurrentPlanRequest as encodeCosmosUpgradeV1beta1QueryCurrentPlanRequest, encodeCosmosUpgradeQueryCurrentPlanResponse as encodeCosmosUpgradeV1beta1QueryCurrentPlanResponse, encodeCosmosUpgradeQueryAppliedPlanRequest as encodeCosmosUpgradeV1beta1QueryAppliedPlanRequest, encodeCosmosUpgradeQueryAppliedPlanResponse as encodeCosmosUpgradeV1beta1QueryAppliedPlanResponse, encodeCosmosUpgradeQueryUpgradedConsensusStateRequest as encodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest, encodeCosmosUpgradeQueryUpgradedConsensusStateResponse as encodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse, encodeCosmosUpgradeQueryModuleVersionsRequest as encodeCosmosUpgradeV1beta1QueryModuleVersionsRequest, encodeCosmosUpgradeQueryModuleVersionsResponse as encodeCosmosUpgradeV1beta1QueryModuleVersionsResponse, encodeCosmosUpgradeQueryAuthorityRequest as encodeCosmosUpgradeV1beta1QueryAuthorityRequest, encodeCosmosUpgradeQueryAuthorityResponse as encodeCosmosUpgradeV1beta1QueryAuthorityResponse, decodeCosmosUpgradeQueryCurrentPlanRequest as decodeCosmosUpgradeV1beta1QueryCurrentPlanRequest, decodeCosmosUpgradeQueryCurrentPlanResponse as decodeCosmosUpgradeV1beta1QueryCurrentPlanResponse, decodeCosmosUpgradeQueryAppliedPlanRequest as decodeCosmosUpgradeV1beta1QueryAppliedPlanRequest, decodeCosmosUpgradeQueryAppliedPlanResponse as decodeCosmosUpgradeV1beta1QueryAppliedPlanResponse, decodeCosmosUpgradeQueryUpgradedConsensusStateRequest as decodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest, decodeCosmosUpgradeQueryUpgradedConsensusStateResponse as decodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse, decodeCosmosUpgradeQueryModuleVersionsRequest as decodeCosmosUpgradeV1beta1QueryModuleVersionsRequest, decodeCosmosUpgradeQueryModuleVersionsResponse as decodeCosmosUpgradeV1beta1QueryModuleVersionsResponse, decodeCosmosUpgradeQueryAuthorityRequest as decodeCosmosUpgradeV1beta1QueryAuthorityRequest, decodeCosmosUpgradeQueryAuthorityResponse as decodeCosmosUpgradeV1beta1QueryAuthorityResponse } from './cosmos/upgrade/v1beta1/query.js';
import { encodeCosmosUpgradeMsgSoftwareUpgrade as encodeCosmosUpgradeV1beta1MsgSoftwareUpgrade, encodeCosmosUpgradeMsgSoftwareUpgradeResponse as encodeCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse, encodeCosmosUpgradeMsgCancelUpgrade as encodeCosmosUpgradeV1beta1MsgCancelUpgrade, encodeCosmosUpgradeMsgCancelUpgradeResponse as encodeCosmosUpgradeV1beta1MsgCancelUpgradeResponse, decodeCosmosUpgradeMsgSoftwareUpgrade as decodeCosmosUpgradeV1beta1MsgSoftwareUpgrade, decodeCosmosUpgradeMsgSoftwareUpgradeResponse as decodeCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse, decodeCosmosUpgradeMsgCancelUpgrade as decodeCosmosUpgradeV1beta1MsgCancelUpgrade, decodeCosmosUpgradeMsgCancelUpgradeResponse as decodeCosmosUpgradeV1beta1MsgCancelUpgradeResponse } from './cosmos/upgrade/v1beta1/tx.js';
import { decodeCosmosUpgradePlan as decodeCosmosUpgradeV1beta1Plan, encodeCosmosUpgradePlan as encodeCosmosUpgradeV1beta1Plan, encodeCosmosUpgradeSoftwareUpgradeProposal as encodeCosmosUpgradeV1beta1SoftwareUpgradeProposal, encodeCosmosUpgradeCancelSoftwareUpgradeProposal as encodeCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal, encodeCosmosUpgradeModuleVersion as encodeCosmosUpgradeV1beta1ModuleVersion, decodeCosmosUpgradeModuleVersion as decodeCosmosUpgradeV1beta1ModuleVersion, decodeCosmosUpgradeSoftwareUpgradeProposal as decodeCosmosUpgradeV1beta1SoftwareUpgradeProposal, decodeCosmosUpgradeCancelSoftwareUpgradeProposal as decodeCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal } from './cosmos/upgrade/v1beta1/upgrade.js';
import { encodeCosmosVestingModuleModule as encodeCosmosVestingModuleV1Module, decodeCosmosVestingModuleModule as decodeCosmosVestingModuleV1Module } from './cosmos/vesting/module/v1/module.js';
import { encodeCosmosVestingMsgCreateVestingAccount as encodeCosmosVestingV1beta1MsgCreateVestingAccount, encodeCosmosVestingMsgCreateVestingAccountResponse as encodeCosmosVestingV1beta1MsgCreateVestingAccountResponse, encodeCosmosVestingMsgCreatePermanentLockedAccount as encodeCosmosVestingV1beta1MsgCreatePermanentLockedAccount, encodeCosmosVestingMsgCreatePermanentLockedAccountResponse as encodeCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse, encodeCosmosVestingMsgCreatePeriodicVestingAccount as encodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccount, encodeCosmosVestingMsgCreatePeriodicVestingAccountResponse as encodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse, decodeCosmosVestingMsgCreateVestingAccount as decodeCosmosVestingV1beta1MsgCreateVestingAccount, decodeCosmosVestingMsgCreateVestingAccountResponse as decodeCosmosVestingV1beta1MsgCreateVestingAccountResponse, decodeCosmosVestingMsgCreatePermanentLockedAccount as decodeCosmosVestingV1beta1MsgCreatePermanentLockedAccount, decodeCosmosVestingMsgCreatePermanentLockedAccountResponse as decodeCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse, decodeCosmosVestingMsgCreatePeriodicVestingAccount as decodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccount, decodeCosmosVestingMsgCreatePeriodicVestingAccountResponse as decodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse } from './cosmos/vesting/v1beta1/tx.js';
import { decodeCosmosVestingPeriod as decodeCosmosVestingV1beta1Period, encodeCosmosVestingPeriod as encodeCosmosVestingV1beta1Period, encodeCosmosVestingBaseVestingAccount as encodeCosmosVestingV1beta1BaseVestingAccount, encodeCosmosVestingContinuousVestingAccount as encodeCosmosVestingV1beta1ContinuousVestingAccount, decodeCosmosVestingBaseVestingAccount as decodeCosmosVestingV1beta1BaseVestingAccount, encodeCosmosVestingDelayedVestingAccount as encodeCosmosVestingV1beta1DelayedVestingAccount, encodeCosmosVestingPeriodicVestingAccount as encodeCosmosVestingV1beta1PeriodicVestingAccount, encodeCosmosVestingPermanentLockedAccount as encodeCosmosVestingV1beta1PermanentLockedAccount, decodeCosmosVestingContinuousVestingAccount as decodeCosmosVestingV1beta1ContinuousVestingAccount, decodeCosmosVestingDelayedVestingAccount as decodeCosmosVestingV1beta1DelayedVestingAccount, decodeCosmosVestingPeriodicVestingAccount as decodeCosmosVestingV1beta1PeriodicVestingAccount, decodeCosmosVestingPermanentLockedAccount as decodeCosmosVestingV1beta1PermanentLockedAccount } from './cosmos/vesting/v1beta1/vesting.js';
import { encodeCosmwasmWasmStoreCodeAuthorization as encodeCosmwasmWasmV1StoreCodeAuthorization, decodeCosmwasmWasmCodeGrant as decodeCosmwasmWasmV1CodeGrant, encodeCosmwasmWasmCodeGrant as encodeCosmwasmWasmV1CodeGrant, encodeCosmwasmWasmContractExecutionAuthorization as encodeCosmwasmWasmV1ContractExecutionAuthorization, decodeCosmwasmWasmContractGrant as decodeCosmwasmWasmV1ContractGrant, encodeCosmwasmWasmContractGrant as encodeCosmwasmWasmV1ContractGrant, encodeCosmwasmWasmContractMigrationAuthorization as encodeCosmwasmWasmV1ContractMigrationAuthorization, encodeCosmwasmWasmMaxCallsLimit as encodeCosmwasmWasmV1MaxCallsLimit, encodeCosmwasmWasmMaxFundsLimit as encodeCosmwasmWasmV1MaxFundsLimit, encodeCosmwasmWasmCombinedLimit as encodeCosmwasmWasmV1CombinedLimit, encodeCosmwasmWasmAllowAllMessagesFilter as encodeCosmwasmWasmV1AllowAllMessagesFilter, encodeCosmwasmWasmAcceptedMessageKeysFilter as encodeCosmwasmWasmV1AcceptedMessageKeysFilter, encodeCosmwasmWasmAcceptedMessagesFilter as encodeCosmwasmWasmV1AcceptedMessagesFilter, decodeCosmwasmWasmStoreCodeAuthorization as decodeCosmwasmWasmV1StoreCodeAuthorization, decodeCosmwasmWasmContractExecutionAuthorization as decodeCosmwasmWasmV1ContractExecutionAuthorization, decodeCosmwasmWasmContractMigrationAuthorization as decodeCosmwasmWasmV1ContractMigrationAuthorization, decodeCosmwasmWasmMaxCallsLimit as decodeCosmwasmWasmV1MaxCallsLimit, decodeCosmwasmWasmMaxFundsLimit as decodeCosmwasmWasmV1MaxFundsLimit, decodeCosmwasmWasmCombinedLimit as decodeCosmwasmWasmV1CombinedLimit, decodeCosmwasmWasmAllowAllMessagesFilter as decodeCosmwasmWasmV1AllowAllMessagesFilter, decodeCosmwasmWasmAcceptedMessageKeysFilter as decodeCosmwasmWasmV1AcceptedMessageKeysFilter, decodeCosmwasmWasmAcceptedMessagesFilter as decodeCosmwasmWasmV1AcceptedMessagesFilter } from './cosmwasm/wasm/v1/authz.js';
import { encodeCosmwasmWasmGenesisState as encodeCosmwasmWasmV1GenesisState, decodeCosmwasmWasmCode as decodeCosmwasmWasmV1Code, decodeCosmwasmWasmContract as decodeCosmwasmWasmV1Contract, decodeCosmwasmWasmSequence as decodeCosmwasmWasmV1Sequence, encodeCosmwasmWasmCode as encodeCosmwasmWasmV1Code, encodeCosmwasmWasmContract as encodeCosmwasmWasmV1Contract, encodeCosmwasmWasmSequence as encodeCosmwasmWasmV1Sequence, decodeCosmwasmWasmGenesisState as decodeCosmwasmWasmV1GenesisState } from './cosmwasm/wasm/v1/genesis.js';
import { encodeCosmwasmWasmMsgIBCSend as encodeCosmwasmWasmV1MsgIBCSend, encodeCosmwasmWasmMsgIBCSendResponse as encodeCosmwasmWasmV1MsgIBCSendResponse, encodeCosmwasmWasmMsgIBCCloseChannel as encodeCosmwasmWasmV1MsgIBCCloseChannel, decodeCosmwasmWasmMsgIBCSend as decodeCosmwasmWasmV1MsgIBCSend, decodeCosmwasmWasmMsgIBCSendResponse as decodeCosmwasmWasmV1MsgIBCSendResponse, decodeCosmwasmWasmMsgIBCCloseChannel as decodeCosmwasmWasmV1MsgIBCCloseChannel } from './cosmwasm/wasm/v1/ibc.js';
import { encodeCosmwasmWasmQueryContractInfoRequest as encodeCosmwasmWasmV1QueryContractInfoRequest, encodeCosmwasmWasmQueryContractInfoResponse as encodeCosmwasmWasmV1QueryContractInfoResponse, encodeCosmwasmWasmQueryContractHistoryRequest as encodeCosmwasmWasmV1QueryContractHistoryRequest, encodeCosmwasmWasmQueryContractHistoryResponse as encodeCosmwasmWasmV1QueryContractHistoryResponse, encodeCosmwasmWasmQueryContractsByCodeRequest as encodeCosmwasmWasmV1QueryContractsByCodeRequest, encodeCosmwasmWasmQueryContractsByCodeResponse as encodeCosmwasmWasmV1QueryContractsByCodeResponse, encodeCosmwasmWasmQueryAllContractStateRequest as encodeCosmwasmWasmV1QueryAllContractStateRequest, encodeCosmwasmWasmQueryAllContractStateResponse as encodeCosmwasmWasmV1QueryAllContractStateResponse, encodeCosmwasmWasmQueryRawContractStateRequest as encodeCosmwasmWasmV1QueryRawContractStateRequest, encodeCosmwasmWasmQueryRawContractStateResponse as encodeCosmwasmWasmV1QueryRawContractStateResponse, encodeCosmwasmWasmQuerySmartContractStateRequest as encodeCosmwasmWasmV1QuerySmartContractStateRequest, encodeCosmwasmWasmQuerySmartContractStateResponse as encodeCosmwasmWasmV1QuerySmartContractStateResponse, encodeCosmwasmWasmQueryCodeRequest as encodeCosmwasmWasmV1QueryCodeRequest, encodeCosmwasmWasmCodeInfoResponse as encodeCosmwasmWasmV1CodeInfoResponse, encodeCosmwasmWasmQueryCodeResponse as encodeCosmwasmWasmV1QueryCodeResponse, decodeCosmwasmWasmCodeInfoResponse as decodeCosmwasmWasmV1CodeInfoResponse, encodeCosmwasmWasmQueryCodesRequest as encodeCosmwasmWasmV1QueryCodesRequest, encodeCosmwasmWasmQueryCodesResponse as encodeCosmwasmWasmV1QueryCodesResponse, encodeCosmwasmWasmQueryPinnedCodesRequest as encodeCosmwasmWasmV1QueryPinnedCodesRequest, encodeCosmwasmWasmQueryPinnedCodesResponse as encodeCosmwasmWasmV1QueryPinnedCodesResponse, encodeCosmwasmWasmQueryParamsRequest as encodeCosmwasmWasmV1QueryParamsRequest, encodeCosmwasmWasmQueryParamsResponse as encodeCosmwasmWasmV1QueryParamsResponse, encodeCosmwasmWasmQueryContractsByCreatorRequest as encodeCosmwasmWasmV1QueryContractsByCreatorRequest, encodeCosmwasmWasmQueryContractsByCreatorResponse as encodeCosmwasmWasmV1QueryContractsByCreatorResponse, decodeCosmwasmWasmQueryContractInfoRequest as decodeCosmwasmWasmV1QueryContractInfoRequest, decodeCosmwasmWasmQueryContractInfoResponse as decodeCosmwasmWasmV1QueryContractInfoResponse, decodeCosmwasmWasmQueryContractHistoryRequest as decodeCosmwasmWasmV1QueryContractHistoryRequest, decodeCosmwasmWasmQueryContractHistoryResponse as decodeCosmwasmWasmV1QueryContractHistoryResponse, decodeCosmwasmWasmQueryContractsByCodeRequest as decodeCosmwasmWasmV1QueryContractsByCodeRequest, decodeCosmwasmWasmQueryContractsByCodeResponse as decodeCosmwasmWasmV1QueryContractsByCodeResponse, decodeCosmwasmWasmQueryAllContractStateRequest as decodeCosmwasmWasmV1QueryAllContractStateRequest, decodeCosmwasmWasmQueryAllContractStateResponse as decodeCosmwasmWasmV1QueryAllContractStateResponse, decodeCosmwasmWasmQueryRawContractStateRequest as decodeCosmwasmWasmV1QueryRawContractStateRequest, decodeCosmwasmWasmQueryRawContractStateResponse as decodeCosmwasmWasmV1QueryRawContractStateResponse, decodeCosmwasmWasmQuerySmartContractStateRequest as decodeCosmwasmWasmV1QuerySmartContractStateRequest, decodeCosmwasmWasmQuerySmartContractStateResponse as decodeCosmwasmWasmV1QuerySmartContractStateResponse, decodeCosmwasmWasmQueryCodeRequest as decodeCosmwasmWasmV1QueryCodeRequest, decodeCosmwasmWasmQueryCodeResponse as decodeCosmwasmWasmV1QueryCodeResponse, decodeCosmwasmWasmQueryCodesRequest as decodeCosmwasmWasmV1QueryCodesRequest, decodeCosmwasmWasmQueryCodesResponse as decodeCosmwasmWasmV1QueryCodesResponse, decodeCosmwasmWasmQueryPinnedCodesRequest as decodeCosmwasmWasmV1QueryPinnedCodesRequest, decodeCosmwasmWasmQueryPinnedCodesResponse as decodeCosmwasmWasmV1QueryPinnedCodesResponse, decodeCosmwasmWasmQueryParamsRequest as decodeCosmwasmWasmV1QueryParamsRequest, decodeCosmwasmWasmQueryParamsResponse as decodeCosmwasmWasmV1QueryParamsResponse, decodeCosmwasmWasmQueryContractsByCreatorRequest as decodeCosmwasmWasmV1QueryContractsByCreatorRequest, decodeCosmwasmWasmQueryContractsByCreatorResponse as decodeCosmwasmWasmV1QueryContractsByCreatorResponse } from './cosmwasm/wasm/v1/query.js';
import { encodeCosmwasmWasmMsgStoreCode as encodeCosmwasmWasmV1MsgStoreCode, encodeCosmwasmWasmMsgStoreCodeResponse as encodeCosmwasmWasmV1MsgStoreCodeResponse, encodeCosmwasmWasmMsgInstantiateContract as encodeCosmwasmWasmV1MsgInstantiateContract, encodeCosmwasmWasmMsgInstantiateContractResponse as encodeCosmwasmWasmV1MsgInstantiateContractResponse, encodeCosmwasmWasmMsgInstantiateContract2 as encodeCosmwasmWasmV1MsgInstantiateContract2, encodeCosmwasmWasmMsgInstantiateContract2Response as encodeCosmwasmWasmV1MsgInstantiateContract2Response, encodeCosmwasmWasmMsgExecuteContract as encodeCosmwasmWasmV1MsgExecuteContract, encodeCosmwasmWasmMsgExecuteContractResponse as encodeCosmwasmWasmV1MsgExecuteContractResponse, encodeCosmwasmWasmMsgMigrateContract as encodeCosmwasmWasmV1MsgMigrateContract, encodeCosmwasmWasmMsgMigrateContractResponse as encodeCosmwasmWasmV1MsgMigrateContractResponse, encodeCosmwasmWasmMsgUpdateAdmin as encodeCosmwasmWasmV1MsgUpdateAdmin, encodeCosmwasmWasmMsgUpdateAdminResponse as encodeCosmwasmWasmV1MsgUpdateAdminResponse, encodeCosmwasmWasmMsgClearAdmin as encodeCosmwasmWasmV1MsgClearAdmin, encodeCosmwasmWasmMsgClearAdminResponse as encodeCosmwasmWasmV1MsgClearAdminResponse, encodeCosmwasmWasmAccessConfigUpdate as encodeCosmwasmWasmV1AccessConfigUpdate, encodeCosmwasmWasmMsgUpdateInstantiateConfig as encodeCosmwasmWasmV1MsgUpdateInstantiateConfig, encodeCosmwasmWasmMsgUpdateInstantiateConfigResponse as encodeCosmwasmWasmV1MsgUpdateInstantiateConfigResponse, encodeCosmwasmWasmMsgUpdateParams as encodeCosmwasmWasmV1MsgUpdateParams, encodeCosmwasmWasmMsgUpdateParamsResponse as encodeCosmwasmWasmV1MsgUpdateParamsResponse, encodeCosmwasmWasmMsgSudoContract as encodeCosmwasmWasmV1MsgSudoContract, encodeCosmwasmWasmMsgSudoContractResponse as encodeCosmwasmWasmV1MsgSudoContractResponse, encodeCosmwasmWasmMsgPinCodes as encodeCosmwasmWasmV1MsgPinCodes, encodeCosmwasmWasmMsgPinCodesResponse as encodeCosmwasmWasmV1MsgPinCodesResponse, encodeCosmwasmWasmMsgUnpinCodes as encodeCosmwasmWasmV1MsgUnpinCodes, encodeCosmwasmWasmMsgUnpinCodesResponse as encodeCosmwasmWasmV1MsgUnpinCodesResponse, encodeCosmwasmWasmMsgStoreAndInstantiateContract as encodeCosmwasmWasmV1MsgStoreAndInstantiateContract, encodeCosmwasmWasmMsgStoreAndInstantiateContractResponse as encodeCosmwasmWasmV1MsgStoreAndInstantiateContractResponse, encodeCosmwasmWasmMsgAddCodeUploadParamsAddresses as encodeCosmwasmWasmV1MsgAddCodeUploadParamsAddresses, encodeCosmwasmWasmMsgAddCodeUploadParamsAddressesResponse as encodeCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse, encodeCosmwasmWasmMsgRemoveCodeUploadParamsAddresses as encodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses, encodeCosmwasmWasmMsgRemoveCodeUploadParamsAddressesResponse as encodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse, encodeCosmwasmWasmMsgStoreAndMigrateContract as encodeCosmwasmWasmV1MsgStoreAndMigrateContract, encodeCosmwasmWasmMsgStoreAndMigrateContractResponse as encodeCosmwasmWasmV1MsgStoreAndMigrateContractResponse, encodeCosmwasmWasmMsgUpdateContractLabel as encodeCosmwasmWasmV1MsgUpdateContractLabel, encodeCosmwasmWasmMsgUpdateContractLabelResponse as encodeCosmwasmWasmV1MsgUpdateContractLabelResponse, decodeCosmwasmWasmMsgStoreCode as decodeCosmwasmWasmV1MsgStoreCode, decodeCosmwasmWasmMsgStoreCodeResponse as decodeCosmwasmWasmV1MsgStoreCodeResponse, decodeCosmwasmWasmMsgInstantiateContract as decodeCosmwasmWasmV1MsgInstantiateContract, decodeCosmwasmWasmMsgInstantiateContractResponse as decodeCosmwasmWasmV1MsgInstantiateContractResponse, decodeCosmwasmWasmMsgInstantiateContract2 as decodeCosmwasmWasmV1MsgInstantiateContract2, decodeCosmwasmWasmMsgInstantiateContract2Response as decodeCosmwasmWasmV1MsgInstantiateContract2Response, decodeCosmwasmWasmMsgExecuteContract as decodeCosmwasmWasmV1MsgExecuteContract, decodeCosmwasmWasmMsgExecuteContractResponse as decodeCosmwasmWasmV1MsgExecuteContractResponse, decodeCosmwasmWasmMsgMigrateContract as decodeCosmwasmWasmV1MsgMigrateContract, decodeCosmwasmWasmMsgMigrateContractResponse as decodeCosmwasmWasmV1MsgMigrateContractResponse, decodeCosmwasmWasmMsgUpdateAdmin as decodeCosmwasmWasmV1MsgUpdateAdmin, decodeCosmwasmWasmMsgUpdateAdminResponse as decodeCosmwasmWasmV1MsgUpdateAdminResponse, decodeCosmwasmWasmMsgClearAdmin as decodeCosmwasmWasmV1MsgClearAdmin, decodeCosmwasmWasmMsgClearAdminResponse as decodeCosmwasmWasmV1MsgClearAdminResponse, decodeCosmwasmWasmAccessConfigUpdate as decodeCosmwasmWasmV1AccessConfigUpdate, decodeCosmwasmWasmMsgUpdateInstantiateConfig as decodeCosmwasmWasmV1MsgUpdateInstantiateConfig, decodeCosmwasmWasmMsgUpdateInstantiateConfigResponse as decodeCosmwasmWasmV1MsgUpdateInstantiateConfigResponse, decodeCosmwasmWasmMsgUpdateParams as decodeCosmwasmWasmV1MsgUpdateParams, decodeCosmwasmWasmMsgUpdateParamsResponse as decodeCosmwasmWasmV1MsgUpdateParamsResponse, decodeCosmwasmWasmMsgSudoContract as decodeCosmwasmWasmV1MsgSudoContract, decodeCosmwasmWasmMsgSudoContractResponse as decodeCosmwasmWasmV1MsgSudoContractResponse, decodeCosmwasmWasmMsgPinCodes as decodeCosmwasmWasmV1MsgPinCodes, decodeCosmwasmWasmMsgPinCodesResponse as decodeCosmwasmWasmV1MsgPinCodesResponse, decodeCosmwasmWasmMsgUnpinCodes as decodeCosmwasmWasmV1MsgUnpinCodes, decodeCosmwasmWasmMsgUnpinCodesResponse as decodeCosmwasmWasmV1MsgUnpinCodesResponse, decodeCosmwasmWasmMsgStoreAndInstantiateContract as decodeCosmwasmWasmV1MsgStoreAndInstantiateContract, decodeCosmwasmWasmMsgStoreAndInstantiateContractResponse as decodeCosmwasmWasmV1MsgStoreAndInstantiateContractResponse, decodeCosmwasmWasmMsgAddCodeUploadParamsAddresses as decodeCosmwasmWasmV1MsgAddCodeUploadParamsAddresses, decodeCosmwasmWasmMsgAddCodeUploadParamsAddressesResponse as decodeCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse, decodeCosmwasmWasmMsgRemoveCodeUploadParamsAddresses as decodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses, decodeCosmwasmWasmMsgRemoveCodeUploadParamsAddressesResponse as decodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse, decodeCosmwasmWasmMsgStoreAndMigrateContract as decodeCosmwasmWasmV1MsgStoreAndMigrateContract, decodeCosmwasmWasmMsgStoreAndMigrateContractResponse as decodeCosmwasmWasmV1MsgStoreAndMigrateContractResponse, decodeCosmwasmWasmMsgUpdateContractLabel as decodeCosmwasmWasmV1MsgUpdateContractLabel, decodeCosmwasmWasmMsgUpdateContractLabelResponse as decodeCosmwasmWasmV1MsgUpdateContractLabelResponse } from './cosmwasm/wasm/v1/tx.js';
import { decodeCosmwasmWasmAccessConfig as decodeCosmwasmWasmV1AccessConfig, encodeCosmwasmWasmAccessConfig as encodeCosmwasmWasmV1AccessConfig, JsonToProtoEnumCosmwasmWasmAccessType as JsonToProtoEnumCosmwasmWasmV1AccessType, ProtoToJsonEnumCosmwasmWasmAccessType as ProtoToJsonEnumCosmwasmWasmV1AccessType, decodeCosmwasmWasmParams as decodeCosmwasmWasmV1Params, encodeCosmwasmWasmParams as encodeCosmwasmWasmV1Params, encodeCosmwasmWasmAccessTypeParam as encodeCosmwasmWasmV1AccessTypeParam, encodeCosmwasmWasmCodeInfo as encodeCosmwasmWasmV1CodeInfo, encodeCosmwasmWasmContractInfo as encodeCosmwasmWasmV1ContractInfo, decodeCosmwasmWasmAbsoluteTxPosition as decodeCosmwasmWasmV1AbsoluteTxPosition, encodeCosmwasmWasmAbsoluteTxPosition as encodeCosmwasmWasmV1AbsoluteTxPosition, encodeCosmwasmWasmContractCodeHistoryEntry as encodeCosmwasmWasmV1ContractCodeHistoryEntry, JsonToProtoEnumCosmwasmWasmContractCodeHistoryOperationType as JsonToProtoEnumCosmwasmWasmV1ContractCodeHistoryOperationType, ProtoToJsonEnumCosmwasmWasmContractCodeHistoryOperationType as ProtoToJsonEnumCosmwasmWasmV1ContractCodeHistoryOperationType, encodeCosmwasmWasmModel as encodeCosmwasmWasmV1Model, decodeCosmwasmWasmContractInfo as decodeCosmwasmWasmV1ContractInfo, decodeCosmwasmWasmContractCodeHistoryEntry as decodeCosmwasmWasmV1ContractCodeHistoryEntry, decodeCosmwasmWasmModel as decodeCosmwasmWasmV1Model, decodeCosmwasmWasmCodeInfo as decodeCosmwasmWasmV1CodeInfo, decodeCosmwasmWasmAccessTypeParam as decodeCosmwasmWasmV1AccessTypeParam } from './cosmwasm/wasm/v1/types.js';
import { decodeGaiaGlobalfeeParams as decodeGaiaGlobalfeeV1beta1Params, encodeGaiaGlobalfeeParams as encodeGaiaGlobalfeeV1beta1Params, encodeGaiaGlobalfeeGenesisState as encodeGaiaGlobalfeeV1beta1GenesisState, decodeGaiaGlobalfeeGenesisState as decodeGaiaGlobalfeeV1beta1GenesisState } from './gaia/globalfee/v1beta1/genesis.js';
import { encodeGaiaGlobalfeeQueryParamsRequest as encodeGaiaGlobalfeeV1beta1QueryParamsRequest, encodeGaiaGlobalfeeQueryParamsResponse as encodeGaiaGlobalfeeV1beta1QueryParamsResponse, decodeGaiaGlobalfeeQueryParamsRequest as decodeGaiaGlobalfeeV1beta1QueryParamsRequest, decodeGaiaGlobalfeeQueryParamsResponse as decodeGaiaGlobalfeeV1beta1QueryParamsResponse } from './gaia/globalfee/v1beta1/query.js';
import { decodeGoogleProtobufAny, encodeGoogleProtobufAny } from './google/protobuf/any.js';
import { decodeGoogleProtobufFileDescriptorProto, encodeGoogleProtobufFileDescriptorProto, decodeGoogleProtobufDescriptorProto, decodeGoogleProtobufEnumDescriptorProto, decodeGoogleProtobufServiceDescriptorProto, decodeGoogleProtobufFieldDescriptorProto, decodeGoogleProtobufFileOptions, decodeGoogleProtobufSourceCodeInfo, JsonToProtoEnumGoogleProtobufEdition, ProtoToJsonEnumGoogleProtobufEdition, encodeGoogleProtobufDescriptorProto, decodeGoogleProtobufDescriptorProtoExtensionRange, decodeGoogleProtobufMessageOptions, decodeGoogleProtobufOneofDescriptorProto, decodeGoogleProtobufDescriptorProtoReservedRange, encodeGoogleProtobufFieldDescriptorProto, JsonToProtoEnumGoogleProtobufFieldDescriptorProtoLabel, JsonToProtoEnumGoogleProtobufFieldDescriptorProtoType, decodeGoogleProtobufFieldOptions, ProtoToJsonEnumGoogleProtobufFieldDescriptorProtoLabel, ProtoToJsonEnumGoogleProtobufFieldDescriptorProtoType, encodeGoogleProtobufFieldOptions, JsonToProtoEnumGoogleProtobufFieldOptionsCType, JsonToProtoEnumGoogleProtobufFieldOptionsJSType, JsonToProtoEnumGoogleProtobufFieldOptionsOptionRetention, ProtoToJsonEnumGoogleProtobufFieldOptionsOptionTargetType, JsonToProtoEnumGoogleProtobufFieldOptionsOptionTargetType, decodeGoogleProtobufFieldOptionsEditionDefault, decodeGoogleProtobufFeatureSet, decodeGoogleProtobufUninterpretedOption, ProtoToJsonEnumGoogleProtobufFieldOptionsCType, ProtoToJsonEnumGoogleProtobufFieldOptionsJSType, ProtoToJsonEnumGoogleProtobufFieldOptionsOptionRetention, encodeGoogleProtobufFieldOptionsEditionDefault, encodeGoogleProtobufFeatureSet, JsonToProtoEnumGoogleProtobufFeatureSetFieldPresence, JsonToProtoEnumGoogleProtobufFeatureSetEnumType, JsonToProtoEnumGoogleProtobufFeatureSetRepeatedFieldEncoding, JsonToProtoEnumGoogleProtobufFeatureSetUtf8Validation, JsonToProtoEnumGoogleProtobufFeatureSetMessageEncoding, JsonToProtoEnumGoogleProtobufFeatureSetJsonFormat, ProtoToJsonEnumGoogleProtobufFeatureSetFieldPresence, ProtoToJsonEnumGoogleProtobufFeatureSetEnumType, ProtoToJsonEnumGoogleProtobufFeatureSetRepeatedFieldEncoding, ProtoToJsonEnumGoogleProtobufFeatureSetUtf8Validation, ProtoToJsonEnumGoogleProtobufFeatureSetMessageEncoding, ProtoToJsonEnumGoogleProtobufFeatureSetJsonFormat, encodeGoogleProtobufUninterpretedOption, decodeGoogleProtobufUninterpretedOptionNamePart, encodeGoogleProtobufUninterpretedOptionNamePart, encodeGoogleProtobufEnumDescriptorProto, decodeGoogleProtobufEnumValueDescriptorProto, decodeGoogleProtobufEnumOptions, decodeGoogleProtobufEnumDescriptorProtoEnumReservedRange, encodeGoogleProtobufEnumValueDescriptorProto, decodeGoogleProtobufEnumValueOptions, encodeGoogleProtobufEnumValueOptions, encodeGoogleProtobufEnumOptions, encodeGoogleProtobufEnumDescriptorProtoEnumReservedRange, encodeGoogleProtobufDescriptorProtoExtensionRange, decodeGoogleProtobufExtensionRangeOptions, encodeGoogleProtobufExtensionRangeOptions, decodeGoogleProtobufExtensionRangeOptionsDeclaration, JsonToProtoEnumGoogleProtobufExtensionRangeOptionsVerificationState, ProtoToJsonEnumGoogleProtobufExtensionRangeOptionsVerificationState, encodeGoogleProtobufExtensionRangeOptionsDeclaration, encodeGoogleProtobufMessageOptions, encodeGoogleProtobufOneofDescriptorProto, decodeGoogleProtobufOneofOptions, encodeGoogleProtobufOneofOptions, encodeGoogleProtobufDescriptorProtoReservedRange, encodeGoogleProtobufServiceDescriptorProto, decodeGoogleProtobufMethodDescriptorProto, decodeGoogleProtobufServiceOptions, encodeGoogleProtobufMethodDescriptorProto, decodeGoogleProtobufMethodOptions, encodeGoogleProtobufMethodOptions, JsonToProtoEnumGoogleProtobufMethodOptionsIdempotencyLevel, ProtoToJsonEnumGoogleProtobufMethodOptionsIdempotencyLevel, encodeGoogleProtobufServiceOptions, encodeGoogleProtobufFileOptions, JsonToProtoEnumGoogleProtobufFileOptionsOptimizeMode, ProtoToJsonEnumGoogleProtobufFileOptionsOptimizeMode, encodeGoogleProtobufSourceCodeInfo, decodeGoogleProtobufSourceCodeInfoLocation, encodeGoogleProtobufSourceCodeInfoLocation } from './google/protobuf/descriptor.js';
import { decodeGoogleProtobufDuration, encodeGoogleProtobufDuration } from './google/protobuf/duration.js';
import { decodeGoogleProtobufTimestamp, encodeGoogleProtobufTimestamp } from './google/protobuf/timestamp.js';
import { encodeIbcApplicationsFeeIncentivizedAcknowledgement as encodeIbcApplicationsFeeV1IncentivizedAcknowledgement, decodeIbcApplicationsFeeIncentivizedAcknowledgement as decodeIbcApplicationsFeeV1IncentivizedAcknowledgement } from './ibc/applications/fee/v1/ack.js';
import { decodeIbcApplicationsFeeFee as decodeIbcApplicationsFeeV1Fee, encodeIbcApplicationsFeeFee as encodeIbcApplicationsFeeV1Fee, decodeIbcApplicationsFeePacketFee as decodeIbcApplicationsFeeV1PacketFee, encodeIbcApplicationsFeePacketFee as encodeIbcApplicationsFeeV1PacketFee, decodeIbcApplicationsFeeIdentifiedPacketFees as decodeIbcApplicationsFeeV1IdentifiedPacketFees, encodeIbcApplicationsFeeIdentifiedPacketFees as encodeIbcApplicationsFeeV1IdentifiedPacketFees, encodeIbcApplicationsFeePacketFees as encodeIbcApplicationsFeeV1PacketFees, decodeIbcApplicationsFeePacketFees as decodeIbcApplicationsFeeV1PacketFees } from './ibc/applications/fee/v1/fee.js';
import { decodeIbcApplicationsFeeFeeEnabledChannel as decodeIbcApplicationsFeeV1FeeEnabledChannel, encodeIbcApplicationsFeeFeeEnabledChannel as encodeIbcApplicationsFeeV1FeeEnabledChannel, encodeIbcApplicationsFeeGenesisState as encodeIbcApplicationsFeeV1GenesisState, decodeIbcApplicationsFeeRegisteredPayee as decodeIbcApplicationsFeeV1RegisteredPayee, decodeIbcApplicationsFeeRegisteredCounterpartyPayee as decodeIbcApplicationsFeeV1RegisteredCounterpartyPayee, decodeIbcApplicationsFeeForwardRelayerAddress as decodeIbcApplicationsFeeV1ForwardRelayerAddress, encodeIbcApplicationsFeeRegisteredPayee as encodeIbcApplicationsFeeV1RegisteredPayee, encodeIbcApplicationsFeeRegisteredCounterpartyPayee as encodeIbcApplicationsFeeV1RegisteredCounterpartyPayee, encodeIbcApplicationsFeeForwardRelayerAddress as encodeIbcApplicationsFeeV1ForwardRelayerAddress, decodeIbcApplicationsFeeGenesisState as decodeIbcApplicationsFeeV1GenesisState } from './ibc/applications/fee/v1/genesis.js';
import { encodeIbcApplicationsFeeMetadata as encodeIbcApplicationsFeeV1Metadata, decodeIbcApplicationsFeeMetadata as decodeIbcApplicationsFeeV1Metadata } from './ibc/applications/fee/v1/metadata.js';
import { encodeIbcApplicationsFeeQueryIncentivizedPacketsRequest as encodeIbcApplicationsFeeV1QueryIncentivizedPacketsRequest, encodeIbcApplicationsFeeQueryIncentivizedPacketsResponse as encodeIbcApplicationsFeeV1QueryIncentivizedPacketsResponse, encodeIbcApplicationsFeeQueryIncentivizedPacketRequest as encodeIbcApplicationsFeeV1QueryIncentivizedPacketRequest, encodeIbcApplicationsFeeQueryIncentivizedPacketResponse as encodeIbcApplicationsFeeV1QueryIncentivizedPacketResponse, encodeIbcApplicationsFeeQueryIncentivizedPacketsForChannelRequest as encodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest, encodeIbcApplicationsFeeQueryIncentivizedPacketsForChannelResponse as encodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse, encodeIbcApplicationsFeeQueryTotalRecvFeesRequest as encodeIbcApplicationsFeeV1QueryTotalRecvFeesRequest, encodeIbcApplicationsFeeQueryTotalRecvFeesResponse as encodeIbcApplicationsFeeV1QueryTotalRecvFeesResponse, encodeIbcApplicationsFeeQueryTotalAckFeesRequest as encodeIbcApplicationsFeeV1QueryTotalAckFeesRequest, encodeIbcApplicationsFeeQueryTotalAckFeesResponse as encodeIbcApplicationsFeeV1QueryTotalAckFeesResponse, encodeIbcApplicationsFeeQueryTotalTimeoutFeesRequest as encodeIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest, encodeIbcApplicationsFeeQueryTotalTimeoutFeesResponse as encodeIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse, encodeIbcApplicationsFeeQueryPayeeRequest as encodeIbcApplicationsFeeV1QueryPayeeRequest, encodeIbcApplicationsFeeQueryPayeeResponse as encodeIbcApplicationsFeeV1QueryPayeeResponse, encodeIbcApplicationsFeeQueryCounterpartyPayeeRequest as encodeIbcApplicationsFeeV1QueryCounterpartyPayeeRequest, encodeIbcApplicationsFeeQueryCounterpartyPayeeResponse as encodeIbcApplicationsFeeV1QueryCounterpartyPayeeResponse, encodeIbcApplicationsFeeQueryFeeEnabledChannelsRequest as encodeIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest, encodeIbcApplicationsFeeQueryFeeEnabledChannelsResponse as encodeIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse, encodeIbcApplicationsFeeQueryFeeEnabledChannelRequest as encodeIbcApplicationsFeeV1QueryFeeEnabledChannelRequest, encodeIbcApplicationsFeeQueryFeeEnabledChannelResponse as encodeIbcApplicationsFeeV1QueryFeeEnabledChannelResponse, decodeIbcApplicationsFeeQueryIncentivizedPacketsRequest as decodeIbcApplicationsFeeV1QueryIncentivizedPacketsRequest, decodeIbcApplicationsFeeQueryIncentivizedPacketsResponse as decodeIbcApplicationsFeeV1QueryIncentivizedPacketsResponse, decodeIbcApplicationsFeeQueryIncentivizedPacketRequest as decodeIbcApplicationsFeeV1QueryIncentivizedPacketRequest, decodeIbcApplicationsFeeQueryIncentivizedPacketResponse as decodeIbcApplicationsFeeV1QueryIncentivizedPacketResponse, decodeIbcApplicationsFeeQueryIncentivizedPacketsForChannelRequest as decodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest, decodeIbcApplicationsFeeQueryIncentivizedPacketsForChannelResponse as decodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse, decodeIbcApplicationsFeeQueryTotalRecvFeesRequest as decodeIbcApplicationsFeeV1QueryTotalRecvFeesRequest, decodeIbcApplicationsFeeQueryTotalRecvFeesResponse as decodeIbcApplicationsFeeV1QueryTotalRecvFeesResponse, decodeIbcApplicationsFeeQueryTotalAckFeesRequest as decodeIbcApplicationsFeeV1QueryTotalAckFeesRequest, decodeIbcApplicationsFeeQueryTotalAckFeesResponse as decodeIbcApplicationsFeeV1QueryTotalAckFeesResponse, decodeIbcApplicationsFeeQueryTotalTimeoutFeesRequest as decodeIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest, decodeIbcApplicationsFeeQueryTotalTimeoutFeesResponse as decodeIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse, decodeIbcApplicationsFeeQueryPayeeRequest as decodeIbcApplicationsFeeV1QueryPayeeRequest, decodeIbcApplicationsFeeQueryPayeeResponse as decodeIbcApplicationsFeeV1QueryPayeeResponse, decodeIbcApplicationsFeeQueryCounterpartyPayeeRequest as decodeIbcApplicationsFeeV1QueryCounterpartyPayeeRequest, decodeIbcApplicationsFeeQueryCounterpartyPayeeResponse as decodeIbcApplicationsFeeV1QueryCounterpartyPayeeResponse, decodeIbcApplicationsFeeQueryFeeEnabledChannelsRequest as decodeIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest, decodeIbcApplicationsFeeQueryFeeEnabledChannelsResponse as decodeIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse, decodeIbcApplicationsFeeQueryFeeEnabledChannelRequest as decodeIbcApplicationsFeeV1QueryFeeEnabledChannelRequest, decodeIbcApplicationsFeeQueryFeeEnabledChannelResponse as decodeIbcApplicationsFeeV1QueryFeeEnabledChannelResponse } from './ibc/applications/fee/v1/query.js';
import { encodeIbcApplicationsFeeMsgRegisterPayee as encodeIbcApplicationsFeeV1MsgRegisterPayee, encodeIbcApplicationsFeeMsgRegisterPayeeResponse as encodeIbcApplicationsFeeV1MsgRegisterPayeeResponse, encodeIbcApplicationsFeeMsgRegisterCounterpartyPayee as encodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayee, encodeIbcApplicationsFeeMsgRegisterCounterpartyPayeeResponse as encodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse, encodeIbcApplicationsFeeMsgPayPacketFee as encodeIbcApplicationsFeeV1MsgPayPacketFee, encodeIbcApplicationsFeeMsgPayPacketFeeResponse as encodeIbcApplicationsFeeV1MsgPayPacketFeeResponse, encodeIbcApplicationsFeeMsgPayPacketFeeAsync as encodeIbcApplicationsFeeV1MsgPayPacketFeeAsync, encodeIbcApplicationsFeeMsgPayPacketFeeAsyncResponse as encodeIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse, decodeIbcApplicationsFeeMsgRegisterPayee as decodeIbcApplicationsFeeV1MsgRegisterPayee, decodeIbcApplicationsFeeMsgRegisterPayeeResponse as decodeIbcApplicationsFeeV1MsgRegisterPayeeResponse, decodeIbcApplicationsFeeMsgRegisterCounterpartyPayee as decodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayee, decodeIbcApplicationsFeeMsgRegisterCounterpartyPayeeResponse as decodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse, decodeIbcApplicationsFeeMsgPayPacketFee as decodeIbcApplicationsFeeV1MsgPayPacketFee, decodeIbcApplicationsFeeMsgPayPacketFeeResponse as decodeIbcApplicationsFeeV1MsgPayPacketFeeResponse, decodeIbcApplicationsFeeMsgPayPacketFeeAsync as decodeIbcApplicationsFeeV1MsgPayPacketFeeAsync, decodeIbcApplicationsFeeMsgPayPacketFeeAsyncResponse as decodeIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse } from './ibc/applications/fee/v1/tx.js';
import { decodeIbcApplicationsInterchainAccountsControllerParams as decodeIbcApplicationsInterchainAccountsControllerV1Params, encodeIbcApplicationsInterchainAccountsControllerParams as encodeIbcApplicationsInterchainAccountsControllerV1Params } from './ibc/applications/interchain_accounts/controller/v1/controller.js';
import { encodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest as encodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest, encodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse as encodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse, encodeIbcApplicationsInterchainAccountsControllerQueryParamsRequest as encodeIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest, encodeIbcApplicationsInterchainAccountsControllerQueryParamsResponse as encodeIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse, decodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountRequest as decodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest, decodeIbcApplicationsInterchainAccountsControllerQueryInterchainAccountResponse as decodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse, decodeIbcApplicationsInterchainAccountsControllerQueryParamsRequest as decodeIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest, decodeIbcApplicationsInterchainAccountsControllerQueryParamsResponse as decodeIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse } from './ibc/applications/interchain_accounts/controller/v1/query.js';
import { encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount as encodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount, encodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse as encodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse, encodeIbcApplicationsInterchainAccountsControllerMsgSendTx as encodeIbcApplicationsInterchainAccountsControllerV1MsgSendTx, encodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse as encodeIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse, encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams as encodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams, encodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse as encodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse, decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccount as decodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount, decodeIbcApplicationsInterchainAccountsControllerMsgRegisterInterchainAccountResponse as decodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse, decodeIbcApplicationsInterchainAccountsControllerMsgSendTx as decodeIbcApplicationsInterchainAccountsControllerV1MsgSendTx, decodeIbcApplicationsInterchainAccountsControllerMsgSendTxResponse as decodeIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse, decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParams as decodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams, decodeIbcApplicationsInterchainAccountsControllerMsgUpdateParamsResponse as decodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse } from './ibc/applications/interchain_accounts/controller/v1/tx.js';
import { encodeIbcApplicationsInterchainAccountsGenesisGenesisState as encodeIbcApplicationsInterchainAccountsGenesisV1GenesisState, decodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState as decodeIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState, decodeIbcApplicationsInterchainAccountsGenesisHostGenesisState as decodeIbcApplicationsInterchainAccountsGenesisV1HostGenesisState, encodeIbcApplicationsInterchainAccountsGenesisControllerGenesisState as encodeIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState, decodeIbcApplicationsInterchainAccountsGenesisActiveChannel as decodeIbcApplicationsInterchainAccountsGenesisV1ActiveChannel, decodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount as decodeIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount, encodeIbcApplicationsInterchainAccountsGenesisActiveChannel as encodeIbcApplicationsInterchainAccountsGenesisV1ActiveChannel, encodeIbcApplicationsInterchainAccountsGenesisRegisteredInterchainAccount as encodeIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount, encodeIbcApplicationsInterchainAccountsGenesisHostGenesisState as encodeIbcApplicationsInterchainAccountsGenesisV1HostGenesisState, decodeIbcApplicationsInterchainAccountsGenesisGenesisState as decodeIbcApplicationsInterchainAccountsGenesisV1GenesisState } from './ibc/applications/interchain_accounts/genesis/v1/genesis.js';
import { decodeIbcApplicationsInterchainAccountsHostParams as decodeIbcApplicationsInterchainAccountsHostV1Params, encodeIbcApplicationsInterchainAccountsHostParams as encodeIbcApplicationsInterchainAccountsHostV1Params } from './ibc/applications/interchain_accounts/host/v1/host.js';
import { encodeIbcApplicationsInterchainAccountsHostQueryParamsRequest as encodeIbcApplicationsInterchainAccountsHostV1QueryParamsRequest, encodeIbcApplicationsInterchainAccountsHostQueryParamsResponse as encodeIbcApplicationsInterchainAccountsHostV1QueryParamsResponse, decodeIbcApplicationsInterchainAccountsHostQueryParamsRequest as decodeIbcApplicationsInterchainAccountsHostV1QueryParamsRequest, decodeIbcApplicationsInterchainAccountsHostQueryParamsResponse as decodeIbcApplicationsInterchainAccountsHostV1QueryParamsResponse } from './ibc/applications/interchain_accounts/host/v1/query.js';
import { encodeIbcApplicationsInterchainAccountsHostMsgUpdateParams as encodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParams, encodeIbcApplicationsInterchainAccountsHostMsgUpdateParamsResponse as encodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse, decodeIbcApplicationsInterchainAccountsHostMsgUpdateParams as decodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParams, decodeIbcApplicationsInterchainAccountsHostMsgUpdateParamsResponse as decodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse } from './ibc/applications/interchain_accounts/host/v1/tx.js';
import { encodeIbcApplicationsInterchainAccountsInterchainAccount as encodeIbcApplicationsInterchainAccountsV1InterchainAccount, decodeIbcApplicationsInterchainAccountsInterchainAccount as decodeIbcApplicationsInterchainAccountsV1InterchainAccount } from './ibc/applications/interchain_accounts/v1/account.js';
import { encodeIbcApplicationsInterchainAccountsMetadata as encodeIbcApplicationsInterchainAccountsV1Metadata, decodeIbcApplicationsInterchainAccountsMetadata as decodeIbcApplicationsInterchainAccountsV1Metadata } from './ibc/applications/interchain_accounts/v1/metadata.js';
import { encodeIbcApplicationsInterchainAccountsInterchainAccountPacketData as encodeIbcApplicationsInterchainAccountsV1InterchainAccountPacketData, JsonToProtoEnumIbcApplicationsInterchainAccountsType as JsonToProtoEnumIbcApplicationsInterchainAccountsV1Type, ProtoToJsonEnumIbcApplicationsInterchainAccountsType as ProtoToJsonEnumIbcApplicationsInterchainAccountsV1Type, encodeIbcApplicationsInterchainAccountsCosmosTx as encodeIbcApplicationsInterchainAccountsV1CosmosTx, decodeIbcApplicationsInterchainAccountsInterchainAccountPacketData as decodeIbcApplicationsInterchainAccountsV1InterchainAccountPacketData, decodeIbcApplicationsInterchainAccountsCosmosTx as decodeIbcApplicationsInterchainAccountsV1CosmosTx } from './ibc/applications/interchain_accounts/v1/packet.js';
import { encodeIbcApplicationsTransferAllocation as encodeIbcApplicationsTransferV1Allocation, encodeIbcApplicationsTransferTransferAuthorization as encodeIbcApplicationsTransferV1TransferAuthorization, decodeIbcApplicationsTransferAllocation as decodeIbcApplicationsTransferV1Allocation, decodeIbcApplicationsTransferTransferAuthorization as decodeIbcApplicationsTransferV1TransferAuthorization } from './ibc/applications/transfer/v1/authz.js';
import { encodeIbcApplicationsTransferGenesisState as encodeIbcApplicationsTransferV1GenesisState, decodeIbcApplicationsTransferGenesisState as decodeIbcApplicationsTransferV1GenesisState } from './ibc/applications/transfer/v1/genesis.js';
import { encodeIbcApplicationsTransferQueryDenomTraceRequest as encodeIbcApplicationsTransferV1QueryDenomTraceRequest, encodeIbcApplicationsTransferQueryDenomTraceResponse as encodeIbcApplicationsTransferV1QueryDenomTraceResponse, encodeIbcApplicationsTransferQueryDenomTracesRequest as encodeIbcApplicationsTransferV1QueryDenomTracesRequest, encodeIbcApplicationsTransferQueryDenomTracesResponse as encodeIbcApplicationsTransferV1QueryDenomTracesResponse, encodeIbcApplicationsTransferQueryParamsRequest as encodeIbcApplicationsTransferV1QueryParamsRequest, encodeIbcApplicationsTransferQueryParamsResponse as encodeIbcApplicationsTransferV1QueryParamsResponse, encodeIbcApplicationsTransferQueryDenomHashRequest as encodeIbcApplicationsTransferV1QueryDenomHashRequest, encodeIbcApplicationsTransferQueryDenomHashResponse as encodeIbcApplicationsTransferV1QueryDenomHashResponse, encodeIbcApplicationsTransferQueryEscrowAddressRequest as encodeIbcApplicationsTransferV1QueryEscrowAddressRequest, encodeIbcApplicationsTransferQueryEscrowAddressResponse as encodeIbcApplicationsTransferV1QueryEscrowAddressResponse, encodeIbcApplicationsTransferQueryTotalEscrowForDenomRequest as encodeIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest, encodeIbcApplicationsTransferQueryTotalEscrowForDenomResponse as encodeIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse, decodeIbcApplicationsTransferQueryDenomTraceRequest as decodeIbcApplicationsTransferV1QueryDenomTraceRequest, decodeIbcApplicationsTransferQueryDenomTraceResponse as decodeIbcApplicationsTransferV1QueryDenomTraceResponse, decodeIbcApplicationsTransferQueryDenomTracesRequest as decodeIbcApplicationsTransferV1QueryDenomTracesRequest, decodeIbcApplicationsTransferQueryDenomTracesResponse as decodeIbcApplicationsTransferV1QueryDenomTracesResponse, decodeIbcApplicationsTransferQueryParamsRequest as decodeIbcApplicationsTransferV1QueryParamsRequest, decodeIbcApplicationsTransferQueryParamsResponse as decodeIbcApplicationsTransferV1QueryParamsResponse, decodeIbcApplicationsTransferQueryDenomHashRequest as decodeIbcApplicationsTransferV1QueryDenomHashRequest, decodeIbcApplicationsTransferQueryDenomHashResponse as decodeIbcApplicationsTransferV1QueryDenomHashResponse, decodeIbcApplicationsTransferQueryEscrowAddressRequest as decodeIbcApplicationsTransferV1QueryEscrowAddressRequest, decodeIbcApplicationsTransferQueryEscrowAddressResponse as decodeIbcApplicationsTransferV1QueryEscrowAddressResponse, decodeIbcApplicationsTransferQueryTotalEscrowForDenomRequest as decodeIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest, decodeIbcApplicationsTransferQueryTotalEscrowForDenomResponse as decodeIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse } from './ibc/applications/transfer/v1/query.js';
import { decodeIbcApplicationsTransferParams as decodeIbcApplicationsTransferV1Params, encodeIbcApplicationsTransferParams as encodeIbcApplicationsTransferV1Params, encodeIbcApplicationsTransferDenomTrace as encodeIbcApplicationsTransferV1DenomTrace, decodeIbcApplicationsTransferDenomTrace as decodeIbcApplicationsTransferV1DenomTrace } from './ibc/applications/transfer/v1/transfer.js';
import { encodeIbcApplicationsTransferMsgTransfer as encodeIbcApplicationsTransferV1MsgTransfer, encodeIbcApplicationsTransferMsgTransferResponse as encodeIbcApplicationsTransferV1MsgTransferResponse, encodeIbcApplicationsTransferMsgUpdateParams as encodeIbcApplicationsTransferV1MsgUpdateParams, encodeIbcApplicationsTransferMsgUpdateParamsResponse as encodeIbcApplicationsTransferV1MsgUpdateParamsResponse, decodeIbcApplicationsTransferMsgTransfer as decodeIbcApplicationsTransferV1MsgTransfer, decodeIbcApplicationsTransferMsgTransferResponse as decodeIbcApplicationsTransferV1MsgTransferResponse, decodeIbcApplicationsTransferMsgUpdateParams as decodeIbcApplicationsTransferV1MsgUpdateParams, decodeIbcApplicationsTransferMsgUpdateParamsResponse as decodeIbcApplicationsTransferV1MsgUpdateParamsResponse } from './ibc/applications/transfer/v1/tx.js';
import { encodeIbcApplicationsTransferFungibleTokenPacketData as encodeIbcApplicationsTransferV2FungibleTokenPacketData, decodeIbcApplicationsTransferFungibleTokenPacketData as decodeIbcApplicationsTransferV2FungibleTokenPacketData } from './ibc/applications/transfer/v2/packet.js';
import { decodeIbcCoreChannelIdentifiedChannel as decodeIbcCoreChannelV1IdentifiedChannel, decodeIbcCoreChannelPacketState as decodeIbcCoreChannelV1PacketState, decodeIbcCoreChannelParams as decodeIbcCoreChannelV1Params, encodeIbcCoreChannelIdentifiedChannel as encodeIbcCoreChannelV1IdentifiedChannel, JsonToProtoEnumIbcCoreChannelState as JsonToProtoEnumIbcCoreChannelV1State, JsonToProtoEnumIbcCoreChannelOrder as JsonToProtoEnumIbcCoreChannelV1Order, decodeIbcCoreChannelCounterparty as decodeIbcCoreChannelV1Counterparty, ProtoToJsonEnumIbcCoreChannelState as ProtoToJsonEnumIbcCoreChannelV1State, ProtoToJsonEnumIbcCoreChannelOrder as ProtoToJsonEnumIbcCoreChannelV1Order, encodeIbcCoreChannelCounterparty as encodeIbcCoreChannelV1Counterparty, encodeIbcCoreChannelPacketState as encodeIbcCoreChannelV1PacketState, encodeIbcCoreChannelParams as encodeIbcCoreChannelV1Params, decodeIbcCoreChannelTimeout as decodeIbcCoreChannelV1Timeout, encodeIbcCoreChannelTimeout as encodeIbcCoreChannelV1Timeout, decodeIbcCoreChannelChannel as decodeIbcCoreChannelV1Channel, encodeIbcCoreChannelChannel as encodeIbcCoreChannelV1Channel, decodeIbcCoreChannelPacket as decodeIbcCoreChannelV1Packet, encodeIbcCoreChannelPacket as encodeIbcCoreChannelV1Packet, encodeIbcCoreChannelPacketId as encodeIbcCoreChannelV1PacketId, encodeIbcCoreChannelAcknowledgement as encodeIbcCoreChannelV1Acknowledgement, decodeIbcCoreChannelPacketId as decodeIbcCoreChannelV1PacketId, decodeIbcCoreChannelAcknowledgement as decodeIbcCoreChannelV1Acknowledgement } from './ibc/core/channel/v1/channel.js';
import { decodeIbcCoreChannelGenesisState as decodeIbcCoreChannelV1GenesisState, encodeIbcCoreChannelGenesisState as encodeIbcCoreChannelV1GenesisState, decodeIbcCoreChannelPacketSequence as decodeIbcCoreChannelV1PacketSequence, encodeIbcCoreChannelPacketSequence as encodeIbcCoreChannelV1PacketSequence } from './ibc/core/channel/v1/genesis.js';
import { encodeIbcCoreChannelQueryChannelRequest as encodeIbcCoreChannelV1QueryChannelRequest, encodeIbcCoreChannelQueryChannelResponse as encodeIbcCoreChannelV1QueryChannelResponse, encodeIbcCoreChannelQueryChannelsRequest as encodeIbcCoreChannelV1QueryChannelsRequest, encodeIbcCoreChannelQueryChannelsResponse as encodeIbcCoreChannelV1QueryChannelsResponse, encodeIbcCoreChannelQueryConnectionChannelsRequest as encodeIbcCoreChannelV1QueryConnectionChannelsRequest, encodeIbcCoreChannelQueryConnectionChannelsResponse as encodeIbcCoreChannelV1QueryConnectionChannelsResponse, encodeIbcCoreChannelQueryChannelClientStateRequest as encodeIbcCoreChannelV1QueryChannelClientStateRequest, encodeIbcCoreChannelQueryChannelClientStateResponse as encodeIbcCoreChannelV1QueryChannelClientStateResponse, encodeIbcCoreChannelQueryChannelConsensusStateRequest as encodeIbcCoreChannelV1QueryChannelConsensusStateRequest, encodeIbcCoreChannelQueryChannelConsensusStateResponse as encodeIbcCoreChannelV1QueryChannelConsensusStateResponse, encodeIbcCoreChannelQueryPacketCommitmentRequest as encodeIbcCoreChannelV1QueryPacketCommitmentRequest, encodeIbcCoreChannelQueryPacketCommitmentResponse as encodeIbcCoreChannelV1QueryPacketCommitmentResponse, encodeIbcCoreChannelQueryPacketCommitmentsRequest as encodeIbcCoreChannelV1QueryPacketCommitmentsRequest, encodeIbcCoreChannelQueryPacketCommitmentsResponse as encodeIbcCoreChannelV1QueryPacketCommitmentsResponse, encodeIbcCoreChannelQueryPacketReceiptRequest as encodeIbcCoreChannelV1QueryPacketReceiptRequest, encodeIbcCoreChannelQueryPacketReceiptResponse as encodeIbcCoreChannelV1QueryPacketReceiptResponse, encodeIbcCoreChannelQueryPacketAcknowledgementRequest as encodeIbcCoreChannelV1QueryPacketAcknowledgementRequest, encodeIbcCoreChannelQueryPacketAcknowledgementResponse as encodeIbcCoreChannelV1QueryPacketAcknowledgementResponse, encodeIbcCoreChannelQueryPacketAcknowledgementsRequest as encodeIbcCoreChannelV1QueryPacketAcknowledgementsRequest, encodeIbcCoreChannelQueryPacketAcknowledgementsResponse as encodeIbcCoreChannelV1QueryPacketAcknowledgementsResponse, encodeIbcCoreChannelQueryUnreceivedPacketsRequest as encodeIbcCoreChannelV1QueryUnreceivedPacketsRequest, encodeIbcCoreChannelQueryUnreceivedPacketsResponse as encodeIbcCoreChannelV1QueryUnreceivedPacketsResponse, encodeIbcCoreChannelQueryUnreceivedAcksRequest as encodeIbcCoreChannelV1QueryUnreceivedAcksRequest, encodeIbcCoreChannelQueryUnreceivedAcksResponse as encodeIbcCoreChannelV1QueryUnreceivedAcksResponse, encodeIbcCoreChannelQueryNextSequenceReceiveRequest as encodeIbcCoreChannelV1QueryNextSequenceReceiveRequest, encodeIbcCoreChannelQueryNextSequenceReceiveResponse as encodeIbcCoreChannelV1QueryNextSequenceReceiveResponse, encodeIbcCoreChannelQueryNextSequenceSendRequest as encodeIbcCoreChannelV1QueryNextSequenceSendRequest, encodeIbcCoreChannelQueryNextSequenceSendResponse as encodeIbcCoreChannelV1QueryNextSequenceSendResponse, encodeIbcCoreChannelQueryUpgradeErrorRequest as encodeIbcCoreChannelV1QueryUpgradeErrorRequest, encodeIbcCoreChannelQueryUpgradeErrorResponse as encodeIbcCoreChannelV1QueryUpgradeErrorResponse, encodeIbcCoreChannelQueryUpgradeRequest as encodeIbcCoreChannelV1QueryUpgradeRequest, encodeIbcCoreChannelQueryUpgradeResponse as encodeIbcCoreChannelV1QueryUpgradeResponse, encodeIbcCoreChannelQueryChannelParamsRequest as encodeIbcCoreChannelV1QueryChannelParamsRequest, encodeIbcCoreChannelQueryChannelParamsResponse as encodeIbcCoreChannelV1QueryChannelParamsResponse, decodeIbcCoreChannelQueryChannelRequest as decodeIbcCoreChannelV1QueryChannelRequest, decodeIbcCoreChannelQueryChannelResponse as decodeIbcCoreChannelV1QueryChannelResponse, decodeIbcCoreChannelQueryChannelsRequest as decodeIbcCoreChannelV1QueryChannelsRequest, decodeIbcCoreChannelQueryChannelsResponse as decodeIbcCoreChannelV1QueryChannelsResponse, decodeIbcCoreChannelQueryConnectionChannelsRequest as decodeIbcCoreChannelV1QueryConnectionChannelsRequest, decodeIbcCoreChannelQueryConnectionChannelsResponse as decodeIbcCoreChannelV1QueryConnectionChannelsResponse, decodeIbcCoreChannelQueryChannelClientStateRequest as decodeIbcCoreChannelV1QueryChannelClientStateRequest, decodeIbcCoreChannelQueryChannelClientStateResponse as decodeIbcCoreChannelV1QueryChannelClientStateResponse, decodeIbcCoreChannelQueryChannelConsensusStateRequest as decodeIbcCoreChannelV1QueryChannelConsensusStateRequest, decodeIbcCoreChannelQueryChannelConsensusStateResponse as decodeIbcCoreChannelV1QueryChannelConsensusStateResponse, decodeIbcCoreChannelQueryPacketCommitmentRequest as decodeIbcCoreChannelV1QueryPacketCommitmentRequest, decodeIbcCoreChannelQueryPacketCommitmentResponse as decodeIbcCoreChannelV1QueryPacketCommitmentResponse, decodeIbcCoreChannelQueryPacketCommitmentsRequest as decodeIbcCoreChannelV1QueryPacketCommitmentsRequest, decodeIbcCoreChannelQueryPacketCommitmentsResponse as decodeIbcCoreChannelV1QueryPacketCommitmentsResponse, decodeIbcCoreChannelQueryPacketReceiptRequest as decodeIbcCoreChannelV1QueryPacketReceiptRequest, decodeIbcCoreChannelQueryPacketReceiptResponse as decodeIbcCoreChannelV1QueryPacketReceiptResponse, decodeIbcCoreChannelQueryPacketAcknowledgementRequest as decodeIbcCoreChannelV1QueryPacketAcknowledgementRequest, decodeIbcCoreChannelQueryPacketAcknowledgementResponse as decodeIbcCoreChannelV1QueryPacketAcknowledgementResponse, decodeIbcCoreChannelQueryPacketAcknowledgementsRequest as decodeIbcCoreChannelV1QueryPacketAcknowledgementsRequest, decodeIbcCoreChannelQueryPacketAcknowledgementsResponse as decodeIbcCoreChannelV1QueryPacketAcknowledgementsResponse, decodeIbcCoreChannelQueryUnreceivedPacketsRequest as decodeIbcCoreChannelV1QueryUnreceivedPacketsRequest, decodeIbcCoreChannelQueryUnreceivedPacketsResponse as decodeIbcCoreChannelV1QueryUnreceivedPacketsResponse, decodeIbcCoreChannelQueryUnreceivedAcksRequest as decodeIbcCoreChannelV1QueryUnreceivedAcksRequest, decodeIbcCoreChannelQueryUnreceivedAcksResponse as decodeIbcCoreChannelV1QueryUnreceivedAcksResponse, decodeIbcCoreChannelQueryNextSequenceReceiveRequest as decodeIbcCoreChannelV1QueryNextSequenceReceiveRequest, decodeIbcCoreChannelQueryNextSequenceReceiveResponse as decodeIbcCoreChannelV1QueryNextSequenceReceiveResponse, decodeIbcCoreChannelQueryNextSequenceSendRequest as decodeIbcCoreChannelV1QueryNextSequenceSendRequest, decodeIbcCoreChannelQueryNextSequenceSendResponse as decodeIbcCoreChannelV1QueryNextSequenceSendResponse, decodeIbcCoreChannelQueryUpgradeErrorRequest as decodeIbcCoreChannelV1QueryUpgradeErrorRequest, decodeIbcCoreChannelQueryUpgradeErrorResponse as decodeIbcCoreChannelV1QueryUpgradeErrorResponse, decodeIbcCoreChannelQueryUpgradeRequest as decodeIbcCoreChannelV1QueryUpgradeRequest, decodeIbcCoreChannelQueryUpgradeResponse as decodeIbcCoreChannelV1QueryUpgradeResponse, decodeIbcCoreChannelQueryChannelParamsRequest as decodeIbcCoreChannelV1QueryChannelParamsRequest, decodeIbcCoreChannelQueryChannelParamsResponse as decodeIbcCoreChannelV1QueryChannelParamsResponse } from './ibc/core/channel/v1/query.js';
import { encodeIbcCoreChannelMsgChannelOpenInit as encodeIbcCoreChannelV1MsgChannelOpenInit, encodeIbcCoreChannelMsgChannelOpenInitResponse as encodeIbcCoreChannelV1MsgChannelOpenInitResponse, encodeIbcCoreChannelMsgChannelOpenTry as encodeIbcCoreChannelV1MsgChannelOpenTry, encodeIbcCoreChannelMsgChannelOpenTryResponse as encodeIbcCoreChannelV1MsgChannelOpenTryResponse, encodeIbcCoreChannelMsgChannelOpenAck as encodeIbcCoreChannelV1MsgChannelOpenAck, encodeIbcCoreChannelMsgChannelOpenAckResponse as encodeIbcCoreChannelV1MsgChannelOpenAckResponse, encodeIbcCoreChannelMsgChannelOpenConfirm as encodeIbcCoreChannelV1MsgChannelOpenConfirm, encodeIbcCoreChannelMsgChannelOpenConfirmResponse as encodeIbcCoreChannelV1MsgChannelOpenConfirmResponse, encodeIbcCoreChannelMsgChannelCloseInit as encodeIbcCoreChannelV1MsgChannelCloseInit, encodeIbcCoreChannelMsgChannelCloseInitResponse as encodeIbcCoreChannelV1MsgChannelCloseInitResponse, encodeIbcCoreChannelMsgChannelCloseConfirm as encodeIbcCoreChannelV1MsgChannelCloseConfirm, encodeIbcCoreChannelMsgChannelCloseConfirmResponse as encodeIbcCoreChannelV1MsgChannelCloseConfirmResponse, encodeIbcCoreChannelMsgRecvPacket as encodeIbcCoreChannelV1MsgRecvPacket, encodeIbcCoreChannelMsgRecvPacketResponse as encodeIbcCoreChannelV1MsgRecvPacketResponse, JsonToProtoEnumIbcCoreChannelResponseResultType as JsonToProtoEnumIbcCoreChannelV1ResponseResultType, ProtoToJsonEnumIbcCoreChannelResponseResultType as ProtoToJsonEnumIbcCoreChannelV1ResponseResultType, encodeIbcCoreChannelMsgTimeout as encodeIbcCoreChannelV1MsgTimeout, encodeIbcCoreChannelMsgTimeoutResponse as encodeIbcCoreChannelV1MsgTimeoutResponse, encodeIbcCoreChannelMsgTimeoutOnClose as encodeIbcCoreChannelV1MsgTimeoutOnClose, encodeIbcCoreChannelMsgTimeoutOnCloseResponse as encodeIbcCoreChannelV1MsgTimeoutOnCloseResponse, encodeIbcCoreChannelMsgAcknowledgement as encodeIbcCoreChannelV1MsgAcknowledgement, encodeIbcCoreChannelMsgAcknowledgementResponse as encodeIbcCoreChannelV1MsgAcknowledgementResponse, encodeIbcCoreChannelMsgChannelUpgradeInit as encodeIbcCoreChannelV1MsgChannelUpgradeInit, encodeIbcCoreChannelMsgChannelUpgradeInitResponse as encodeIbcCoreChannelV1MsgChannelUpgradeInitResponse, encodeIbcCoreChannelMsgChannelUpgradeTry as encodeIbcCoreChannelV1MsgChannelUpgradeTry, encodeIbcCoreChannelMsgChannelUpgradeTryResponse as encodeIbcCoreChannelV1MsgChannelUpgradeTryResponse, encodeIbcCoreChannelMsgChannelUpgradeAck as encodeIbcCoreChannelV1MsgChannelUpgradeAck, encodeIbcCoreChannelMsgChannelUpgradeAckResponse as encodeIbcCoreChannelV1MsgChannelUpgradeAckResponse, encodeIbcCoreChannelMsgChannelUpgradeConfirm as encodeIbcCoreChannelV1MsgChannelUpgradeConfirm, encodeIbcCoreChannelMsgChannelUpgradeConfirmResponse as encodeIbcCoreChannelV1MsgChannelUpgradeConfirmResponse, encodeIbcCoreChannelMsgChannelUpgradeOpen as encodeIbcCoreChannelV1MsgChannelUpgradeOpen, encodeIbcCoreChannelMsgChannelUpgradeOpenResponse as encodeIbcCoreChannelV1MsgChannelUpgradeOpenResponse, encodeIbcCoreChannelMsgChannelUpgradeTimeout as encodeIbcCoreChannelV1MsgChannelUpgradeTimeout, encodeIbcCoreChannelMsgChannelUpgradeTimeoutResponse as encodeIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse, encodeIbcCoreChannelMsgChannelUpgradeCancel as encodeIbcCoreChannelV1MsgChannelUpgradeCancel, encodeIbcCoreChannelMsgChannelUpgradeCancelResponse as encodeIbcCoreChannelV1MsgChannelUpgradeCancelResponse, encodeIbcCoreChannelMsgUpdateParams as encodeIbcCoreChannelV1MsgUpdateParams, encodeIbcCoreChannelMsgUpdateParamsResponse as encodeIbcCoreChannelV1MsgUpdateParamsResponse, encodeIbcCoreChannelMsgPruneAcknowledgements as encodeIbcCoreChannelV1MsgPruneAcknowledgements, encodeIbcCoreChannelMsgPruneAcknowledgementsResponse as encodeIbcCoreChannelV1MsgPruneAcknowledgementsResponse, decodeIbcCoreChannelMsgChannelOpenInit as decodeIbcCoreChannelV1MsgChannelOpenInit, decodeIbcCoreChannelMsgChannelOpenInitResponse as decodeIbcCoreChannelV1MsgChannelOpenInitResponse, decodeIbcCoreChannelMsgChannelOpenTry as decodeIbcCoreChannelV1MsgChannelOpenTry, decodeIbcCoreChannelMsgChannelOpenTryResponse as decodeIbcCoreChannelV1MsgChannelOpenTryResponse, decodeIbcCoreChannelMsgChannelOpenAck as decodeIbcCoreChannelV1MsgChannelOpenAck, decodeIbcCoreChannelMsgChannelOpenAckResponse as decodeIbcCoreChannelV1MsgChannelOpenAckResponse, decodeIbcCoreChannelMsgChannelOpenConfirm as decodeIbcCoreChannelV1MsgChannelOpenConfirm, decodeIbcCoreChannelMsgChannelOpenConfirmResponse as decodeIbcCoreChannelV1MsgChannelOpenConfirmResponse, decodeIbcCoreChannelMsgChannelCloseInit as decodeIbcCoreChannelV1MsgChannelCloseInit, decodeIbcCoreChannelMsgChannelCloseInitResponse as decodeIbcCoreChannelV1MsgChannelCloseInitResponse, decodeIbcCoreChannelMsgChannelCloseConfirm as decodeIbcCoreChannelV1MsgChannelCloseConfirm, decodeIbcCoreChannelMsgChannelCloseConfirmResponse as decodeIbcCoreChannelV1MsgChannelCloseConfirmResponse, decodeIbcCoreChannelMsgRecvPacket as decodeIbcCoreChannelV1MsgRecvPacket, decodeIbcCoreChannelMsgRecvPacketResponse as decodeIbcCoreChannelV1MsgRecvPacketResponse, decodeIbcCoreChannelMsgTimeout as decodeIbcCoreChannelV1MsgTimeout, decodeIbcCoreChannelMsgTimeoutResponse as decodeIbcCoreChannelV1MsgTimeoutResponse, decodeIbcCoreChannelMsgTimeoutOnClose as decodeIbcCoreChannelV1MsgTimeoutOnClose, decodeIbcCoreChannelMsgTimeoutOnCloseResponse as decodeIbcCoreChannelV1MsgTimeoutOnCloseResponse, decodeIbcCoreChannelMsgAcknowledgement as decodeIbcCoreChannelV1MsgAcknowledgement, decodeIbcCoreChannelMsgAcknowledgementResponse as decodeIbcCoreChannelV1MsgAcknowledgementResponse, decodeIbcCoreChannelMsgChannelUpgradeInit as decodeIbcCoreChannelV1MsgChannelUpgradeInit, decodeIbcCoreChannelMsgChannelUpgradeInitResponse as decodeIbcCoreChannelV1MsgChannelUpgradeInitResponse, decodeIbcCoreChannelMsgChannelUpgradeTry as decodeIbcCoreChannelV1MsgChannelUpgradeTry, decodeIbcCoreChannelMsgChannelUpgradeTryResponse as decodeIbcCoreChannelV1MsgChannelUpgradeTryResponse, decodeIbcCoreChannelMsgChannelUpgradeAck as decodeIbcCoreChannelV1MsgChannelUpgradeAck, decodeIbcCoreChannelMsgChannelUpgradeAckResponse as decodeIbcCoreChannelV1MsgChannelUpgradeAckResponse, decodeIbcCoreChannelMsgChannelUpgradeConfirm as decodeIbcCoreChannelV1MsgChannelUpgradeConfirm, decodeIbcCoreChannelMsgChannelUpgradeConfirmResponse as decodeIbcCoreChannelV1MsgChannelUpgradeConfirmResponse, decodeIbcCoreChannelMsgChannelUpgradeOpen as decodeIbcCoreChannelV1MsgChannelUpgradeOpen, decodeIbcCoreChannelMsgChannelUpgradeOpenResponse as decodeIbcCoreChannelV1MsgChannelUpgradeOpenResponse, decodeIbcCoreChannelMsgChannelUpgradeTimeout as decodeIbcCoreChannelV1MsgChannelUpgradeTimeout, decodeIbcCoreChannelMsgChannelUpgradeTimeoutResponse as decodeIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse, decodeIbcCoreChannelMsgChannelUpgradeCancel as decodeIbcCoreChannelV1MsgChannelUpgradeCancel, decodeIbcCoreChannelMsgChannelUpgradeCancelResponse as decodeIbcCoreChannelV1MsgChannelUpgradeCancelResponse, decodeIbcCoreChannelMsgUpdateParams as decodeIbcCoreChannelV1MsgUpdateParams, decodeIbcCoreChannelMsgUpdateParamsResponse as decodeIbcCoreChannelV1MsgUpdateParamsResponse, decodeIbcCoreChannelMsgPruneAcknowledgements as decodeIbcCoreChannelV1MsgPruneAcknowledgements, decodeIbcCoreChannelMsgPruneAcknowledgementsResponse as decodeIbcCoreChannelV1MsgPruneAcknowledgementsResponse } from './ibc/core/channel/v1/tx.js';
import { decodeIbcCoreChannelUpgradeFields as decodeIbcCoreChannelV1UpgradeFields, encodeIbcCoreChannelUpgradeFields as encodeIbcCoreChannelV1UpgradeFields, decodeIbcCoreChannelUpgrade as decodeIbcCoreChannelV1Upgrade, encodeIbcCoreChannelUpgrade as encodeIbcCoreChannelV1Upgrade, decodeIbcCoreChannelErrorReceipt as decodeIbcCoreChannelV1ErrorReceipt, encodeIbcCoreChannelErrorReceipt as encodeIbcCoreChannelV1ErrorReceipt } from './ibc/core/channel/v1/upgrade.js';
import { decodeIbcCoreClientIdentifiedClientState as decodeIbcCoreClientV1IdentifiedClientState, decodeIbcCoreClientClientConsensusStates as decodeIbcCoreClientV1ClientConsensusStates, decodeIbcCoreClientParams as decodeIbcCoreClientV1Params, encodeIbcCoreClientIdentifiedClientState as encodeIbcCoreClientV1IdentifiedClientState, encodeIbcCoreClientClientConsensusStates as encodeIbcCoreClientV1ClientConsensusStates, decodeIbcCoreClientConsensusStateWithHeight as decodeIbcCoreClientV1ConsensusStateWithHeight, encodeIbcCoreClientConsensusStateWithHeight as encodeIbcCoreClientV1ConsensusStateWithHeight, decodeIbcCoreClientHeight as decodeIbcCoreClientV1Height, encodeIbcCoreClientHeight as encodeIbcCoreClientV1Height, encodeIbcCoreClientParams as encodeIbcCoreClientV1Params, encodeIbcCoreClientClientUpdateProposal as encodeIbcCoreClientV1ClientUpdateProposal, encodeIbcCoreClientUpgradeProposal as encodeIbcCoreClientV1UpgradeProposal, decodeIbcCoreClientClientUpdateProposal as decodeIbcCoreClientV1ClientUpdateProposal, decodeIbcCoreClientUpgradeProposal as decodeIbcCoreClientV1UpgradeProposal } from './ibc/core/client/v1/client.js';
import { decodeIbcCoreClientGenesisState as decodeIbcCoreClientV1GenesisState, encodeIbcCoreClientGenesisState as encodeIbcCoreClientV1GenesisState, decodeIbcCoreClientIdentifiedGenesisMetadata as decodeIbcCoreClientV1IdentifiedGenesisMetadata, encodeIbcCoreClientIdentifiedGenesisMetadata as encodeIbcCoreClientV1IdentifiedGenesisMetadata, decodeIbcCoreClientGenesisMetadata as decodeIbcCoreClientV1GenesisMetadata, encodeIbcCoreClientGenesisMetadata as encodeIbcCoreClientV1GenesisMetadata } from './ibc/core/client/v1/genesis.js';
import { encodeIbcCoreClientQueryClientStateRequest as encodeIbcCoreClientV1QueryClientStateRequest, encodeIbcCoreClientQueryClientStateResponse as encodeIbcCoreClientV1QueryClientStateResponse, encodeIbcCoreClientQueryClientStatesRequest as encodeIbcCoreClientV1QueryClientStatesRequest, encodeIbcCoreClientQueryClientStatesResponse as encodeIbcCoreClientV1QueryClientStatesResponse, encodeIbcCoreClientQueryConsensusStateRequest as encodeIbcCoreClientV1QueryConsensusStateRequest, encodeIbcCoreClientQueryConsensusStateResponse as encodeIbcCoreClientV1QueryConsensusStateResponse, encodeIbcCoreClientQueryConsensusStatesRequest as encodeIbcCoreClientV1QueryConsensusStatesRequest, encodeIbcCoreClientQueryConsensusStatesResponse as encodeIbcCoreClientV1QueryConsensusStatesResponse, encodeIbcCoreClientQueryConsensusStateHeightsRequest as encodeIbcCoreClientV1QueryConsensusStateHeightsRequest, encodeIbcCoreClientQueryConsensusStateHeightsResponse as encodeIbcCoreClientV1QueryConsensusStateHeightsResponse, encodeIbcCoreClientQueryClientStatusRequest as encodeIbcCoreClientV1QueryClientStatusRequest, encodeIbcCoreClientQueryClientStatusResponse as encodeIbcCoreClientV1QueryClientStatusResponse, encodeIbcCoreClientQueryClientParamsRequest as encodeIbcCoreClientV1QueryClientParamsRequest, encodeIbcCoreClientQueryClientParamsResponse as encodeIbcCoreClientV1QueryClientParamsResponse, encodeIbcCoreClientQueryUpgradedClientStateRequest as encodeIbcCoreClientV1QueryUpgradedClientStateRequest, encodeIbcCoreClientQueryUpgradedClientStateResponse as encodeIbcCoreClientV1QueryUpgradedClientStateResponse, encodeIbcCoreClientQueryUpgradedConsensusStateRequest as encodeIbcCoreClientV1QueryUpgradedConsensusStateRequest, encodeIbcCoreClientQueryUpgradedConsensusStateResponse as encodeIbcCoreClientV1QueryUpgradedConsensusStateResponse, decodeIbcCoreClientQueryClientStateRequest as decodeIbcCoreClientV1QueryClientStateRequest, decodeIbcCoreClientQueryClientStateResponse as decodeIbcCoreClientV1QueryClientStateResponse, decodeIbcCoreClientQueryClientStatesRequest as decodeIbcCoreClientV1QueryClientStatesRequest, decodeIbcCoreClientQueryClientStatesResponse as decodeIbcCoreClientV1QueryClientStatesResponse, decodeIbcCoreClientQueryConsensusStateRequest as decodeIbcCoreClientV1QueryConsensusStateRequest, decodeIbcCoreClientQueryConsensusStateResponse as decodeIbcCoreClientV1QueryConsensusStateResponse, decodeIbcCoreClientQueryConsensusStatesRequest as decodeIbcCoreClientV1QueryConsensusStatesRequest, decodeIbcCoreClientQueryConsensusStatesResponse as decodeIbcCoreClientV1QueryConsensusStatesResponse, decodeIbcCoreClientQueryConsensusStateHeightsRequest as decodeIbcCoreClientV1QueryConsensusStateHeightsRequest, decodeIbcCoreClientQueryConsensusStateHeightsResponse as decodeIbcCoreClientV1QueryConsensusStateHeightsResponse, decodeIbcCoreClientQueryClientStatusRequest as decodeIbcCoreClientV1QueryClientStatusRequest, decodeIbcCoreClientQueryClientStatusResponse as decodeIbcCoreClientV1QueryClientStatusResponse, decodeIbcCoreClientQueryClientParamsRequest as decodeIbcCoreClientV1QueryClientParamsRequest, decodeIbcCoreClientQueryClientParamsResponse as decodeIbcCoreClientV1QueryClientParamsResponse, decodeIbcCoreClientQueryUpgradedClientStateRequest as decodeIbcCoreClientV1QueryUpgradedClientStateRequest, decodeIbcCoreClientQueryUpgradedClientStateResponse as decodeIbcCoreClientV1QueryUpgradedClientStateResponse, decodeIbcCoreClientQueryUpgradedConsensusStateRequest as decodeIbcCoreClientV1QueryUpgradedConsensusStateRequest, decodeIbcCoreClientQueryUpgradedConsensusStateResponse as decodeIbcCoreClientV1QueryUpgradedConsensusStateResponse } from './ibc/core/client/v1/query.js';
import { encodeIbcCoreClientMsgCreateClient as encodeIbcCoreClientV1MsgCreateClient, encodeIbcCoreClientMsgCreateClientResponse as encodeIbcCoreClientV1MsgCreateClientResponse, encodeIbcCoreClientMsgUpdateClient as encodeIbcCoreClientV1MsgUpdateClient, encodeIbcCoreClientMsgUpdateClientResponse as encodeIbcCoreClientV1MsgUpdateClientResponse, encodeIbcCoreClientMsgUpgradeClient as encodeIbcCoreClientV1MsgUpgradeClient, encodeIbcCoreClientMsgUpgradeClientResponse as encodeIbcCoreClientV1MsgUpgradeClientResponse, encodeIbcCoreClientMsgSubmitMisbehaviour as encodeIbcCoreClientV1MsgSubmitMisbehaviour, encodeIbcCoreClientMsgSubmitMisbehaviourResponse as encodeIbcCoreClientV1MsgSubmitMisbehaviourResponse, encodeIbcCoreClientMsgRecoverClient as encodeIbcCoreClientV1MsgRecoverClient, encodeIbcCoreClientMsgRecoverClientResponse as encodeIbcCoreClientV1MsgRecoverClientResponse, encodeIbcCoreClientMsgIBCSoftwareUpgrade as encodeIbcCoreClientV1MsgIBCSoftwareUpgrade, encodeIbcCoreClientMsgIBCSoftwareUpgradeResponse as encodeIbcCoreClientV1MsgIBCSoftwareUpgradeResponse, encodeIbcCoreClientMsgUpdateParams as encodeIbcCoreClientV1MsgUpdateParams, encodeIbcCoreClientMsgUpdateParamsResponse as encodeIbcCoreClientV1MsgUpdateParamsResponse, decodeIbcCoreClientMsgCreateClient as decodeIbcCoreClientV1MsgCreateClient, decodeIbcCoreClientMsgCreateClientResponse as decodeIbcCoreClientV1MsgCreateClientResponse, decodeIbcCoreClientMsgUpdateClient as decodeIbcCoreClientV1MsgUpdateClient, decodeIbcCoreClientMsgUpdateClientResponse as decodeIbcCoreClientV1MsgUpdateClientResponse, decodeIbcCoreClientMsgUpgradeClient as decodeIbcCoreClientV1MsgUpgradeClient, decodeIbcCoreClientMsgUpgradeClientResponse as decodeIbcCoreClientV1MsgUpgradeClientResponse, decodeIbcCoreClientMsgSubmitMisbehaviour as decodeIbcCoreClientV1MsgSubmitMisbehaviour, decodeIbcCoreClientMsgSubmitMisbehaviourResponse as decodeIbcCoreClientV1MsgSubmitMisbehaviourResponse, decodeIbcCoreClientMsgRecoverClient as decodeIbcCoreClientV1MsgRecoverClient, decodeIbcCoreClientMsgRecoverClientResponse as decodeIbcCoreClientV1MsgRecoverClientResponse, decodeIbcCoreClientMsgIBCSoftwareUpgrade as decodeIbcCoreClientV1MsgIBCSoftwareUpgrade, decodeIbcCoreClientMsgIBCSoftwareUpgradeResponse as decodeIbcCoreClientV1MsgIBCSoftwareUpgradeResponse, decodeIbcCoreClientMsgUpdateParams as decodeIbcCoreClientV1MsgUpdateParams, decodeIbcCoreClientMsgUpdateParamsResponse as decodeIbcCoreClientV1MsgUpdateParamsResponse } from './ibc/core/client/v1/tx.js';
import { decodeIbcCoreCommitmentMerklePrefix as decodeIbcCoreCommitmentV1MerklePrefix, encodeIbcCoreCommitmentMerklePrefix as encodeIbcCoreCommitmentV1MerklePrefix, encodeIbcCoreCommitmentMerkleRoot as encodeIbcCoreCommitmentV1MerkleRoot, encodeIbcCoreCommitmentMerklePath as encodeIbcCoreCommitmentV1MerklePath, encodeIbcCoreCommitmentMerkleProof as encodeIbcCoreCommitmentV1MerkleProof, decodeIbcCoreCommitmentMerkleRoot as decodeIbcCoreCommitmentV1MerkleRoot, decodeIbcCoreCommitmentMerklePath as decodeIbcCoreCommitmentV1MerklePath, decodeIbcCoreCommitmentMerkleProof as decodeIbcCoreCommitmentV1MerkleProof } from './ibc/core/commitment/v1/commitment.js';
import { decodeIbcCoreConnectionIdentifiedConnection as decodeIbcCoreConnectionV1IdentifiedConnection, decodeIbcCoreConnectionConnectionPaths as decodeIbcCoreConnectionV1ConnectionPaths, decodeIbcCoreConnectionParams as decodeIbcCoreConnectionV1Params, encodeIbcCoreConnectionIdentifiedConnection as encodeIbcCoreConnectionV1IdentifiedConnection, decodeIbcCoreConnectionVersion as decodeIbcCoreConnectionV1Version, JsonToProtoEnumIbcCoreConnectionState as JsonToProtoEnumIbcCoreConnectionV1State, decodeIbcCoreConnectionCounterparty as decodeIbcCoreConnectionV1Counterparty, ProtoToJsonEnumIbcCoreConnectionState as ProtoToJsonEnumIbcCoreConnectionV1State, encodeIbcCoreConnectionVersion as encodeIbcCoreConnectionV1Version, encodeIbcCoreConnectionCounterparty as encodeIbcCoreConnectionV1Counterparty, encodeIbcCoreConnectionConnectionPaths as encodeIbcCoreConnectionV1ConnectionPaths, encodeIbcCoreConnectionParams as encodeIbcCoreConnectionV1Params, decodeIbcCoreConnectionConnectionEnd as decodeIbcCoreConnectionV1ConnectionEnd, encodeIbcCoreConnectionConnectionEnd as encodeIbcCoreConnectionV1ConnectionEnd, encodeIbcCoreConnectionClientPaths as encodeIbcCoreConnectionV1ClientPaths, decodeIbcCoreConnectionClientPaths as decodeIbcCoreConnectionV1ClientPaths } from './ibc/core/connection/v1/connection.js';
import { decodeIbcCoreConnectionGenesisState as decodeIbcCoreConnectionV1GenesisState, encodeIbcCoreConnectionGenesisState as encodeIbcCoreConnectionV1GenesisState } from './ibc/core/connection/v1/genesis.js';
import { encodeIbcCoreConnectionQueryConnectionRequest as encodeIbcCoreConnectionV1QueryConnectionRequest, encodeIbcCoreConnectionQueryConnectionResponse as encodeIbcCoreConnectionV1QueryConnectionResponse, encodeIbcCoreConnectionQueryConnectionsRequest as encodeIbcCoreConnectionV1QueryConnectionsRequest, encodeIbcCoreConnectionQueryConnectionsResponse as encodeIbcCoreConnectionV1QueryConnectionsResponse, encodeIbcCoreConnectionQueryClientConnectionsRequest as encodeIbcCoreConnectionV1QueryClientConnectionsRequest, encodeIbcCoreConnectionQueryClientConnectionsResponse as encodeIbcCoreConnectionV1QueryClientConnectionsResponse, encodeIbcCoreConnectionQueryConnectionClientStateRequest as encodeIbcCoreConnectionV1QueryConnectionClientStateRequest, encodeIbcCoreConnectionQueryConnectionClientStateResponse as encodeIbcCoreConnectionV1QueryConnectionClientStateResponse, encodeIbcCoreConnectionQueryConnectionConsensusStateRequest as encodeIbcCoreConnectionV1QueryConnectionConsensusStateRequest, encodeIbcCoreConnectionQueryConnectionConsensusStateResponse as encodeIbcCoreConnectionV1QueryConnectionConsensusStateResponse, encodeIbcCoreConnectionQueryConnectionParamsRequest as encodeIbcCoreConnectionV1QueryConnectionParamsRequest, encodeIbcCoreConnectionQueryConnectionParamsResponse as encodeIbcCoreConnectionV1QueryConnectionParamsResponse, decodeIbcCoreConnectionQueryConnectionRequest as decodeIbcCoreConnectionV1QueryConnectionRequest, decodeIbcCoreConnectionQueryConnectionResponse as decodeIbcCoreConnectionV1QueryConnectionResponse, decodeIbcCoreConnectionQueryConnectionsRequest as decodeIbcCoreConnectionV1QueryConnectionsRequest, decodeIbcCoreConnectionQueryConnectionsResponse as decodeIbcCoreConnectionV1QueryConnectionsResponse, decodeIbcCoreConnectionQueryClientConnectionsRequest as decodeIbcCoreConnectionV1QueryClientConnectionsRequest, decodeIbcCoreConnectionQueryClientConnectionsResponse as decodeIbcCoreConnectionV1QueryClientConnectionsResponse, decodeIbcCoreConnectionQueryConnectionClientStateRequest as decodeIbcCoreConnectionV1QueryConnectionClientStateRequest, decodeIbcCoreConnectionQueryConnectionClientStateResponse as decodeIbcCoreConnectionV1QueryConnectionClientStateResponse, decodeIbcCoreConnectionQueryConnectionConsensusStateRequest as decodeIbcCoreConnectionV1QueryConnectionConsensusStateRequest, decodeIbcCoreConnectionQueryConnectionConsensusStateResponse as decodeIbcCoreConnectionV1QueryConnectionConsensusStateResponse, decodeIbcCoreConnectionQueryConnectionParamsRequest as decodeIbcCoreConnectionV1QueryConnectionParamsRequest, decodeIbcCoreConnectionQueryConnectionParamsResponse as decodeIbcCoreConnectionV1QueryConnectionParamsResponse } from './ibc/core/connection/v1/query.js';
import { encodeIbcCoreConnectionMsgConnectionOpenInit as encodeIbcCoreConnectionV1MsgConnectionOpenInit, encodeIbcCoreConnectionMsgConnectionOpenInitResponse as encodeIbcCoreConnectionV1MsgConnectionOpenInitResponse, encodeIbcCoreConnectionMsgConnectionOpenTry as encodeIbcCoreConnectionV1MsgConnectionOpenTry, encodeIbcCoreConnectionMsgConnectionOpenTryResponse as encodeIbcCoreConnectionV1MsgConnectionOpenTryResponse, encodeIbcCoreConnectionMsgConnectionOpenAck as encodeIbcCoreConnectionV1MsgConnectionOpenAck, encodeIbcCoreConnectionMsgConnectionOpenAckResponse as encodeIbcCoreConnectionV1MsgConnectionOpenAckResponse, encodeIbcCoreConnectionMsgConnectionOpenConfirm as encodeIbcCoreConnectionV1MsgConnectionOpenConfirm, encodeIbcCoreConnectionMsgConnectionOpenConfirmResponse as encodeIbcCoreConnectionV1MsgConnectionOpenConfirmResponse, encodeIbcCoreConnectionMsgUpdateParams as encodeIbcCoreConnectionV1MsgUpdateParams, encodeIbcCoreConnectionMsgUpdateParamsResponse as encodeIbcCoreConnectionV1MsgUpdateParamsResponse, decodeIbcCoreConnectionMsgConnectionOpenInit as decodeIbcCoreConnectionV1MsgConnectionOpenInit, decodeIbcCoreConnectionMsgConnectionOpenInitResponse as decodeIbcCoreConnectionV1MsgConnectionOpenInitResponse, decodeIbcCoreConnectionMsgConnectionOpenTry as decodeIbcCoreConnectionV1MsgConnectionOpenTry, decodeIbcCoreConnectionMsgConnectionOpenTryResponse as decodeIbcCoreConnectionV1MsgConnectionOpenTryResponse, decodeIbcCoreConnectionMsgConnectionOpenAck as decodeIbcCoreConnectionV1MsgConnectionOpenAck, decodeIbcCoreConnectionMsgConnectionOpenAckResponse as decodeIbcCoreConnectionV1MsgConnectionOpenAckResponse, decodeIbcCoreConnectionMsgConnectionOpenConfirm as decodeIbcCoreConnectionV1MsgConnectionOpenConfirm, decodeIbcCoreConnectionMsgConnectionOpenConfirmResponse as decodeIbcCoreConnectionV1MsgConnectionOpenConfirmResponse, decodeIbcCoreConnectionMsgUpdateParams as decodeIbcCoreConnectionV1MsgUpdateParams, decodeIbcCoreConnectionMsgUpdateParamsResponse as decodeIbcCoreConnectionV1MsgUpdateParamsResponse } from './ibc/core/connection/v1/tx.js';
import { encodeIbcCoreTypesGenesisState as encodeIbcCoreTypesV1GenesisState, decodeIbcCoreTypesGenesisState as decodeIbcCoreTypesV1GenesisState } from './ibc/core/types/v1/genesis.js';
import { encodeIbcLightclientsLocalhostClientState as encodeIbcLightclientsLocalhostV2ClientState, decodeIbcLightclientsLocalhostClientState as decodeIbcLightclientsLocalhostV2ClientState } from './ibc/lightclients/localhost/v2/localhost.js';
import { encodeIbcLightclientsSolomachineClientState as encodeIbcLightclientsSolomachineV2ClientState, decodeIbcLightclientsSolomachineConsensusState as decodeIbcLightclientsSolomachineV2ConsensusState, encodeIbcLightclientsSolomachineConsensusState as encodeIbcLightclientsSolomachineV2ConsensusState, encodeIbcLightclientsSolomachineHeader as encodeIbcLightclientsSolomachineV2Header, encodeIbcLightclientsSolomachineMisbehaviour as encodeIbcLightclientsSolomachineV2Misbehaviour, decodeIbcLightclientsSolomachineSignatureAndData as decodeIbcLightclientsSolomachineV2SignatureAndData, encodeIbcLightclientsSolomachineSignatureAndData as encodeIbcLightclientsSolomachineV2SignatureAndData, JsonToProtoEnumIbcLightclientsSolomachineDataType as JsonToProtoEnumIbcLightclientsSolomachineV2DataType, ProtoToJsonEnumIbcLightclientsSolomachineDataType as ProtoToJsonEnumIbcLightclientsSolomachineV2DataType, encodeIbcLightclientsSolomachineTimestampedSignatureData as encodeIbcLightclientsSolomachineV2TimestampedSignatureData, encodeIbcLightclientsSolomachineSignBytes as encodeIbcLightclientsSolomachineV2SignBytes, encodeIbcLightclientsSolomachineHeaderData as encodeIbcLightclientsSolomachineV2HeaderData, encodeIbcLightclientsSolomachineClientStateData as encodeIbcLightclientsSolomachineV2ClientStateData, encodeIbcLightclientsSolomachineConsensusStateData as encodeIbcLightclientsSolomachineV2ConsensusStateData, encodeIbcLightclientsSolomachineConnectionStateData as encodeIbcLightclientsSolomachineV2ConnectionStateData, encodeIbcLightclientsSolomachineChannelStateData as encodeIbcLightclientsSolomachineV2ChannelStateData, encodeIbcLightclientsSolomachinePacketCommitmentData as encodeIbcLightclientsSolomachineV2PacketCommitmentData, encodeIbcLightclientsSolomachinePacketAcknowledgementData as encodeIbcLightclientsSolomachineV2PacketAcknowledgementData, encodeIbcLightclientsSolomachinePacketReceiptAbsenceData as encodeIbcLightclientsSolomachineV2PacketReceiptAbsenceData, encodeIbcLightclientsSolomachineNextSequenceRecvData as encodeIbcLightclientsSolomachineV2NextSequenceRecvData, decodeIbcLightclientsSolomachineClientState as decodeIbcLightclientsSolomachineV2ClientState, decodeIbcLightclientsSolomachineHeader as decodeIbcLightclientsSolomachineV2Header, decodeIbcLightclientsSolomachineMisbehaviour as decodeIbcLightclientsSolomachineV2Misbehaviour, decodeIbcLightclientsSolomachineTimestampedSignatureData as decodeIbcLightclientsSolomachineV2TimestampedSignatureData, decodeIbcLightclientsSolomachineSignBytes as decodeIbcLightclientsSolomachineV2SignBytes, decodeIbcLightclientsSolomachineHeaderData as decodeIbcLightclientsSolomachineV2HeaderData, decodeIbcLightclientsSolomachineClientStateData as decodeIbcLightclientsSolomachineV2ClientStateData, decodeIbcLightclientsSolomachineConsensusStateData as decodeIbcLightclientsSolomachineV2ConsensusStateData, decodeIbcLightclientsSolomachineConnectionStateData as decodeIbcLightclientsSolomachineV2ConnectionStateData, decodeIbcLightclientsSolomachineChannelStateData as decodeIbcLightclientsSolomachineV2ChannelStateData, decodeIbcLightclientsSolomachinePacketCommitmentData as decodeIbcLightclientsSolomachineV2PacketCommitmentData, decodeIbcLightclientsSolomachinePacketAcknowledgementData as decodeIbcLightclientsSolomachineV2PacketAcknowledgementData, decodeIbcLightclientsSolomachinePacketReceiptAbsenceData as decodeIbcLightclientsSolomachineV2PacketReceiptAbsenceData, decodeIbcLightclientsSolomachineNextSequenceRecvData as decodeIbcLightclientsSolomachineV2NextSequenceRecvData } from './ibc/lightclients/solomachine/v2/solomachine.js';
import { encodeIbcLightclientsSolomachineClientState as encodeIbcLightclientsSolomachineV3ClientState, decodeIbcLightclientsSolomachineConsensusState as decodeIbcLightclientsSolomachineV3ConsensusState, encodeIbcLightclientsSolomachineConsensusState as encodeIbcLightclientsSolomachineV3ConsensusState, encodeIbcLightclientsSolomachineHeader as encodeIbcLightclientsSolomachineV3Header, encodeIbcLightclientsSolomachineMisbehaviour as encodeIbcLightclientsSolomachineV3Misbehaviour, decodeIbcLightclientsSolomachineSignatureAndData as decodeIbcLightclientsSolomachineV3SignatureAndData, encodeIbcLightclientsSolomachineSignatureAndData as encodeIbcLightclientsSolomachineV3SignatureAndData, encodeIbcLightclientsSolomachineTimestampedSignatureData as encodeIbcLightclientsSolomachineV3TimestampedSignatureData, encodeIbcLightclientsSolomachineSignBytes as encodeIbcLightclientsSolomachineV3SignBytes, encodeIbcLightclientsSolomachineHeaderData as encodeIbcLightclientsSolomachineV3HeaderData, decodeIbcLightclientsSolomachineClientState as decodeIbcLightclientsSolomachineV3ClientState, decodeIbcLightclientsSolomachineHeader as decodeIbcLightclientsSolomachineV3Header, decodeIbcLightclientsSolomachineMisbehaviour as decodeIbcLightclientsSolomachineV3Misbehaviour, decodeIbcLightclientsSolomachineTimestampedSignatureData as decodeIbcLightclientsSolomachineV3TimestampedSignatureData, decodeIbcLightclientsSolomachineSignBytes as decodeIbcLightclientsSolomachineV3SignBytes, decodeIbcLightclientsSolomachineHeaderData as decodeIbcLightclientsSolomachineV3HeaderData } from './ibc/lightclients/solomachine/v3/solomachine.js';
import { encodeIbcLightclientsTendermintClientState as encodeIbcLightclientsTendermintV1ClientState, decodeIbcLightclientsTendermintFraction as decodeIbcLightclientsTendermintV1Fraction, encodeIbcLightclientsTendermintFraction as encodeIbcLightclientsTendermintV1Fraction, encodeIbcLightclientsTendermintConsensusState as encodeIbcLightclientsTendermintV1ConsensusState, encodeIbcLightclientsTendermintMisbehaviour as encodeIbcLightclientsTendermintV1Misbehaviour, decodeIbcLightclientsTendermintHeader as decodeIbcLightclientsTendermintV1Header, encodeIbcLightclientsTendermintHeader as encodeIbcLightclientsTendermintV1Header, decodeIbcLightclientsTendermintClientState as decodeIbcLightclientsTendermintV1ClientState, decodeIbcLightclientsTendermintConsensusState as decodeIbcLightclientsTendermintV1ConsensusState, decodeIbcLightclientsTendermintMisbehaviour as decodeIbcLightclientsTendermintV1Misbehaviour } from './ibc/lightclients/tendermint/v1/tendermint.js';
import { encodeIbcLightclientsWasmGenesisState as encodeIbcLightclientsWasmV1GenesisState, decodeIbcLightclientsWasmContract as decodeIbcLightclientsWasmV1Contract, encodeIbcLightclientsWasmContract as encodeIbcLightclientsWasmV1Contract, decodeIbcLightclientsWasmGenesisState as decodeIbcLightclientsWasmV1GenesisState } from './ibc/lightclients/wasm/v1/genesis.js';
import { encodeIbcLightclientsWasmQueryChecksumsRequest as encodeIbcLightclientsWasmV1QueryChecksumsRequest, encodeIbcLightclientsWasmQueryChecksumsResponse as encodeIbcLightclientsWasmV1QueryChecksumsResponse, encodeIbcLightclientsWasmQueryCodeRequest as encodeIbcLightclientsWasmV1QueryCodeRequest, encodeIbcLightclientsWasmQueryCodeResponse as encodeIbcLightclientsWasmV1QueryCodeResponse, decodeIbcLightclientsWasmQueryChecksumsRequest as decodeIbcLightclientsWasmV1QueryChecksumsRequest, decodeIbcLightclientsWasmQueryChecksumsResponse as decodeIbcLightclientsWasmV1QueryChecksumsResponse, decodeIbcLightclientsWasmQueryCodeRequest as decodeIbcLightclientsWasmV1QueryCodeRequest, decodeIbcLightclientsWasmQueryCodeResponse as decodeIbcLightclientsWasmV1QueryCodeResponse } from './ibc/lightclients/wasm/v1/query.js';
import { encodeIbcLightclientsWasmMsgStoreCode as encodeIbcLightclientsWasmV1MsgStoreCode, encodeIbcLightclientsWasmMsgStoreCodeResponse as encodeIbcLightclientsWasmV1MsgStoreCodeResponse, encodeIbcLightclientsWasmMsgRemoveChecksum as encodeIbcLightclientsWasmV1MsgRemoveChecksum, encodeIbcLightclientsWasmMsgRemoveChecksumResponse as encodeIbcLightclientsWasmV1MsgRemoveChecksumResponse, encodeIbcLightclientsWasmMsgMigrateContract as encodeIbcLightclientsWasmV1MsgMigrateContract, encodeIbcLightclientsWasmMsgMigrateContractResponse as encodeIbcLightclientsWasmV1MsgMigrateContractResponse, decodeIbcLightclientsWasmMsgStoreCode as decodeIbcLightclientsWasmV1MsgStoreCode, decodeIbcLightclientsWasmMsgStoreCodeResponse as decodeIbcLightclientsWasmV1MsgStoreCodeResponse, decodeIbcLightclientsWasmMsgRemoveChecksum as decodeIbcLightclientsWasmV1MsgRemoveChecksum, decodeIbcLightclientsWasmMsgRemoveChecksumResponse as decodeIbcLightclientsWasmV1MsgRemoveChecksumResponse, decodeIbcLightclientsWasmMsgMigrateContract as decodeIbcLightclientsWasmV1MsgMigrateContract, decodeIbcLightclientsWasmMsgMigrateContractResponse as decodeIbcLightclientsWasmV1MsgMigrateContractResponse } from './ibc/lightclients/wasm/v1/tx.js';
import { encodeIbcLightclientsWasmClientState as encodeIbcLightclientsWasmV1ClientState, encodeIbcLightclientsWasmConsensusState as encodeIbcLightclientsWasmV1ConsensusState, encodeIbcLightclientsWasmClientMessage as encodeIbcLightclientsWasmV1ClientMessage, encodeIbcLightclientsWasmChecksums as encodeIbcLightclientsWasmV1Checksums, decodeIbcLightclientsWasmClientState as decodeIbcLightclientsWasmV1ClientState, decodeIbcLightclientsWasmConsensusState as decodeIbcLightclientsWasmV1ConsensusState, decodeIbcLightclientsWasmClientMessage as decodeIbcLightclientsWasmV1ClientMessage, decodeIbcLightclientsWasmChecksums as decodeIbcLightclientsWasmV1Checksums } from './ibc/lightclients/wasm/v1/wasm.js';
import { encodeJunoClockClockContract as encodeJunoClockV1ClockContract, decodeJunoClockClockContract as decodeJunoClockV1ClockContract } from './juno/clock/v1/clock.js';
import { decodeJunoClockParams as decodeJunoClockV1Params, encodeJunoClockParams as encodeJunoClockV1Params, encodeJunoClockGenesisState as encodeJunoClockV1GenesisState, decodeJunoClockGenesisState as decodeJunoClockV1GenesisState } from './juno/clock/v1/genesis.js';
import { encodeJunoClockQueryClockContracts as encodeJunoClockV1QueryClockContracts, encodeJunoClockQueryClockContractsResponse as encodeJunoClockV1QueryClockContractsResponse, encodeJunoClockQueryClockContract as encodeJunoClockV1QueryClockContract, encodeJunoClockQueryClockContractResponse as encodeJunoClockV1QueryClockContractResponse, encodeJunoClockQueryParamsRequest as encodeJunoClockV1QueryParamsRequest, encodeJunoClockQueryParamsResponse as encodeJunoClockV1QueryParamsResponse, decodeJunoClockQueryClockContracts as decodeJunoClockV1QueryClockContracts, decodeJunoClockQueryClockContractsResponse as decodeJunoClockV1QueryClockContractsResponse, decodeJunoClockQueryClockContract as decodeJunoClockV1QueryClockContract, decodeJunoClockQueryClockContractResponse as decodeJunoClockV1QueryClockContractResponse, decodeJunoClockQueryParamsRequest as decodeJunoClockV1QueryParamsRequest, decodeJunoClockQueryParamsResponse as decodeJunoClockV1QueryParamsResponse } from './juno/clock/v1/query.js';
import { encodeJunoClockMsgRegisterClockContract as encodeJunoClockV1MsgRegisterClockContract, encodeJunoClockMsgRegisterClockContractResponse as encodeJunoClockV1MsgRegisterClockContractResponse, encodeJunoClockMsgUnregisterClockContract as encodeJunoClockV1MsgUnregisterClockContract, encodeJunoClockMsgUnregisterClockContractResponse as encodeJunoClockV1MsgUnregisterClockContractResponse, encodeJunoClockMsgUnjailClockContract as encodeJunoClockV1MsgUnjailClockContract, encodeJunoClockMsgUnjailClockContractResponse as encodeJunoClockV1MsgUnjailClockContractResponse, encodeJunoClockMsgUpdateParams as encodeJunoClockV1MsgUpdateParams, encodeJunoClockMsgUpdateParamsResponse as encodeJunoClockV1MsgUpdateParamsResponse, decodeJunoClockMsgRegisterClockContract as decodeJunoClockV1MsgRegisterClockContract, decodeJunoClockMsgRegisterClockContractResponse as decodeJunoClockV1MsgRegisterClockContractResponse, decodeJunoClockMsgUnregisterClockContract as decodeJunoClockV1MsgUnregisterClockContract, decodeJunoClockMsgUnregisterClockContractResponse as decodeJunoClockV1MsgUnregisterClockContractResponse, decodeJunoClockMsgUnjailClockContract as decodeJunoClockV1MsgUnjailClockContract, decodeJunoClockMsgUnjailClockContractResponse as decodeJunoClockV1MsgUnjailClockContractResponse, decodeJunoClockMsgUpdateParams as decodeJunoClockV1MsgUpdateParams, decodeJunoClockMsgUpdateParamsResponse as decodeJunoClockV1MsgUpdateParamsResponse } from './juno/clock/v1/tx.js';
import { decodeJunoCwhooksParams as decodeJunoCwhooksV1Params, encodeJunoCwhooksParams as encodeJunoCwhooksV1Params, encodeJunoCwhooksGenesisState as encodeJunoCwhooksV1GenesisState, decodeJunoCwhooksGenesisState as decodeJunoCwhooksV1GenesisState } from './juno/cwhooks/v1/genesis.js';
import { encodeJunoCwhooksQueryParamsRequest as encodeJunoCwhooksV1QueryParamsRequest, encodeJunoCwhooksQueryParamsResponse as encodeJunoCwhooksV1QueryParamsResponse, encodeJunoCwhooksQueryStakingContractsRequest as encodeJunoCwhooksV1QueryStakingContractsRequest, encodeJunoCwhooksQueryStakingContractsResponse as encodeJunoCwhooksV1QueryStakingContractsResponse, encodeJunoCwhooksQueryGovernanceContractsRequest as encodeJunoCwhooksV1QueryGovernanceContractsRequest, encodeJunoCwhooksQueryGovernanceContractsResponse as encodeJunoCwhooksV1QueryGovernanceContractsResponse, decodeJunoCwhooksQueryParamsRequest as decodeJunoCwhooksV1QueryParamsRequest, decodeJunoCwhooksQueryParamsResponse as decodeJunoCwhooksV1QueryParamsResponse, decodeJunoCwhooksQueryStakingContractsRequest as decodeJunoCwhooksV1QueryStakingContractsRequest, decodeJunoCwhooksQueryStakingContractsResponse as decodeJunoCwhooksV1QueryStakingContractsResponse, decodeJunoCwhooksQueryGovernanceContractsRequest as decodeJunoCwhooksV1QueryGovernanceContractsRequest, decodeJunoCwhooksQueryGovernanceContractsResponse as decodeJunoCwhooksV1QueryGovernanceContractsResponse } from './juno/cwhooks/v1/query.js';
import { encodeJunoCwhooksMsgUpdateParams as encodeJunoCwhooksV1MsgUpdateParams, encodeJunoCwhooksMsgUpdateParamsResponse as encodeJunoCwhooksV1MsgUpdateParamsResponse, encodeJunoCwhooksMsgRegisterStaking as encodeJunoCwhooksV1MsgRegisterStaking, encodeJunoCwhooksMsgRegisterStakingResponse as encodeJunoCwhooksV1MsgRegisterStakingResponse, encodeJunoCwhooksMsgRegisterGovernance as encodeJunoCwhooksV1MsgRegisterGovernance, encodeJunoCwhooksMsgRegisterGovernanceResponse as encodeJunoCwhooksV1MsgRegisterGovernanceResponse, encodeJunoCwhooksMsgUnregisterGovernance as encodeJunoCwhooksV1MsgUnregisterGovernance, encodeJunoCwhooksMsgUnregisterGovernanceResponse as encodeJunoCwhooksV1MsgUnregisterGovernanceResponse, encodeJunoCwhooksMsgUnregisterStaking as encodeJunoCwhooksV1MsgUnregisterStaking, encodeJunoCwhooksMsgUnregisterStakingResponse as encodeJunoCwhooksV1MsgUnregisterStakingResponse, decodeJunoCwhooksMsgUpdateParams as decodeJunoCwhooksV1MsgUpdateParams, decodeJunoCwhooksMsgUpdateParamsResponse as decodeJunoCwhooksV1MsgUpdateParamsResponse, decodeJunoCwhooksMsgRegisterStaking as decodeJunoCwhooksV1MsgRegisterStaking, decodeJunoCwhooksMsgRegisterStakingResponse as decodeJunoCwhooksV1MsgRegisterStakingResponse, decodeJunoCwhooksMsgRegisterGovernance as decodeJunoCwhooksV1MsgRegisterGovernance, decodeJunoCwhooksMsgRegisterGovernanceResponse as decodeJunoCwhooksV1MsgRegisterGovernanceResponse, decodeJunoCwhooksMsgUnregisterGovernance as decodeJunoCwhooksV1MsgUnregisterGovernance, decodeJunoCwhooksMsgUnregisterGovernanceResponse as decodeJunoCwhooksV1MsgUnregisterGovernanceResponse, decodeJunoCwhooksMsgUnregisterStaking as decodeJunoCwhooksV1MsgUnregisterStaking, decodeJunoCwhooksMsgUnregisterStakingResponse as decodeJunoCwhooksV1MsgUnregisterStakingResponse } from './juno/cwhooks/v1/tx.js';
import { decodeJunoDripParams as decodeJunoDripV1Params, encodeJunoDripParams as encodeJunoDripV1Params, encodeJunoDripGenesisState as encodeJunoDripV1GenesisState, decodeJunoDripGenesisState as decodeJunoDripV1GenesisState } from './juno/drip/v1/genesis.js';
import { encodeJunoDripQueryParamsRequest as encodeJunoDripV1QueryParamsRequest, encodeJunoDripQueryParamsResponse as encodeJunoDripV1QueryParamsResponse, decodeJunoDripQueryParamsRequest as decodeJunoDripV1QueryParamsRequest, decodeJunoDripQueryParamsResponse as decodeJunoDripV1QueryParamsResponse } from './juno/drip/v1/query.js';
import { encodeJunoDripMsgDistributeTokens as encodeJunoDripV1MsgDistributeTokens, encodeJunoDripMsgDistributeTokensResponse as encodeJunoDripV1MsgDistributeTokensResponse, encodeJunoDripMsgUpdateParams as encodeJunoDripV1MsgUpdateParams, encodeJunoDripMsgUpdateParamsResponse as encodeJunoDripV1MsgUpdateParamsResponse, decodeJunoDripMsgDistributeTokens as decodeJunoDripV1MsgDistributeTokens, decodeJunoDripMsgDistributeTokensResponse as decodeJunoDripV1MsgDistributeTokensResponse, decodeJunoDripMsgUpdateParams as decodeJunoDripV1MsgUpdateParams, decodeJunoDripMsgUpdateParamsResponse as decodeJunoDripV1MsgUpdateParamsResponse } from './juno/drip/v1/tx.js';
import { decodeJunoFeepayFeePayContract as decodeJunoFeepayV1FeePayContract, encodeJunoFeepayFeePayContract as encodeJunoFeepayV1FeePayContract, encodeJunoFeepayFeePayWalletUsage as encodeJunoFeepayV1FeePayWalletUsage, decodeJunoFeepayFeePayWalletUsage as decodeJunoFeepayV1FeePayWalletUsage } from './juno/feepay/v1/feepay.js';
import { decodeJunoFeepayParams as decodeJunoFeepayV1Params, encodeJunoFeepayParams as encodeJunoFeepayV1Params, encodeJunoFeepayGenesisState as encodeJunoFeepayV1GenesisState, decodeJunoFeepayGenesisState as decodeJunoFeepayV1GenesisState } from './juno/feepay/v1/genesis.js';
import { encodeJunoFeepayQueryFeePayContract as encodeJunoFeepayV1QueryFeePayContract, encodeJunoFeepayQueryFeePayContractResponse as encodeJunoFeepayV1QueryFeePayContractResponse, encodeJunoFeepayQueryFeePayContracts as encodeJunoFeepayV1QueryFeePayContracts, encodeJunoFeepayQueryFeePayContractsResponse as encodeJunoFeepayV1QueryFeePayContractsResponse, encodeJunoFeepayQueryFeePayContractUses as encodeJunoFeepayV1QueryFeePayContractUses, encodeJunoFeepayQueryFeePayContractUsesResponse as encodeJunoFeepayV1QueryFeePayContractUsesResponse, encodeJunoFeepayQueryFeePayWalletIsEligible as encodeJunoFeepayV1QueryFeePayWalletIsEligible, encodeJunoFeepayQueryFeePayWalletIsEligibleResponse as encodeJunoFeepayV1QueryFeePayWalletIsEligibleResponse, encodeJunoFeepayQueryParamsRequest as encodeJunoFeepayV1QueryParamsRequest, encodeJunoFeepayQueryParamsResponse as encodeJunoFeepayV1QueryParamsResponse, decodeJunoFeepayQueryFeePayContract as decodeJunoFeepayV1QueryFeePayContract, decodeJunoFeepayQueryFeePayContractResponse as decodeJunoFeepayV1QueryFeePayContractResponse, decodeJunoFeepayQueryFeePayContracts as decodeJunoFeepayV1QueryFeePayContracts, decodeJunoFeepayQueryFeePayContractsResponse as decodeJunoFeepayV1QueryFeePayContractsResponse, decodeJunoFeepayQueryFeePayContractUses as decodeJunoFeepayV1QueryFeePayContractUses, decodeJunoFeepayQueryFeePayContractUsesResponse as decodeJunoFeepayV1QueryFeePayContractUsesResponse, decodeJunoFeepayQueryFeePayWalletIsEligible as decodeJunoFeepayV1QueryFeePayWalletIsEligible, decodeJunoFeepayQueryFeePayWalletIsEligibleResponse as decodeJunoFeepayV1QueryFeePayWalletIsEligibleResponse, decodeJunoFeepayQueryParamsRequest as decodeJunoFeepayV1QueryParamsRequest, decodeJunoFeepayQueryParamsResponse as decodeJunoFeepayV1QueryParamsResponse } from './juno/feepay/v1/query.js';
import { encodeJunoFeepayMsgRegisterFeePayContract as encodeJunoFeepayV1MsgRegisterFeePayContract, encodeJunoFeepayMsgRegisterFeePayContractResponse as encodeJunoFeepayV1MsgRegisterFeePayContractResponse, encodeJunoFeepayMsgUnregisterFeePayContract as encodeJunoFeepayV1MsgUnregisterFeePayContract, encodeJunoFeepayMsgUnregisterFeePayContractResponse as encodeJunoFeepayV1MsgUnregisterFeePayContractResponse, encodeJunoFeepayMsgFundFeePayContract as encodeJunoFeepayV1MsgFundFeePayContract, encodeJunoFeepayMsgFundFeePayContractResponse as encodeJunoFeepayV1MsgFundFeePayContractResponse, encodeJunoFeepayMsgUpdateFeePayContractWalletLimit as encodeJunoFeepayV1MsgUpdateFeePayContractWalletLimit, encodeJunoFeepayMsgUpdateFeePayContractWalletLimitResponse as encodeJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse, encodeJunoFeepayMsgUpdateParams as encodeJunoFeepayV1MsgUpdateParams, encodeJunoFeepayMsgUpdateParamsResponse as encodeJunoFeepayV1MsgUpdateParamsResponse, decodeJunoFeepayMsgRegisterFeePayContract as decodeJunoFeepayV1MsgRegisterFeePayContract, decodeJunoFeepayMsgRegisterFeePayContractResponse as decodeJunoFeepayV1MsgRegisterFeePayContractResponse, decodeJunoFeepayMsgUnregisterFeePayContract as decodeJunoFeepayV1MsgUnregisterFeePayContract, decodeJunoFeepayMsgUnregisterFeePayContractResponse as decodeJunoFeepayV1MsgUnregisterFeePayContractResponse, decodeJunoFeepayMsgFundFeePayContract as decodeJunoFeepayV1MsgFundFeePayContract, decodeJunoFeepayMsgFundFeePayContractResponse as decodeJunoFeepayV1MsgFundFeePayContractResponse, decodeJunoFeepayMsgUpdateFeePayContractWalletLimit as decodeJunoFeepayV1MsgUpdateFeePayContractWalletLimit, decodeJunoFeepayMsgUpdateFeePayContractWalletLimitResponse as decodeJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse, decodeJunoFeepayMsgUpdateParams as decodeJunoFeepayV1MsgUpdateParams, decodeJunoFeepayMsgUpdateParamsResponse as decodeJunoFeepayV1MsgUpdateParamsResponse } from './juno/feepay/v1/tx.js';
import { decodeJunoFeeshareFeeShare as decodeJunoFeeshareV1FeeShare, encodeJunoFeeshareFeeShare as encodeJunoFeeshareV1FeeShare } from './juno/feeshare/v1/feeshare.js';
import { decodeJunoFeeshareParams as decodeJunoFeeshareV1Params, encodeJunoFeeshareParams as encodeJunoFeeshareV1Params, encodeJunoFeeshareGenesisState as encodeJunoFeeshareV1GenesisState, decodeJunoFeeshareGenesisState as decodeJunoFeeshareV1GenesisState } from './juno/feeshare/v1/genesis.js';
import { encodeJunoFeeshareQueryFeeSharesRequest as encodeJunoFeeshareV1QueryFeeSharesRequest, encodeJunoFeeshareQueryFeeSharesResponse as encodeJunoFeeshareV1QueryFeeSharesResponse, encodeJunoFeeshareQueryFeeShareRequest as encodeJunoFeeshareV1QueryFeeShareRequest, encodeJunoFeeshareQueryFeeShareResponse as encodeJunoFeeshareV1QueryFeeShareResponse, encodeJunoFeeshareQueryParamsRequest as encodeJunoFeeshareV1QueryParamsRequest, encodeJunoFeeshareQueryParamsResponse as encodeJunoFeeshareV1QueryParamsResponse, encodeJunoFeeshareQueryDeployerFeeSharesRequest as encodeJunoFeeshareV1QueryDeployerFeeSharesRequest, encodeJunoFeeshareQueryDeployerFeeSharesResponse as encodeJunoFeeshareV1QueryDeployerFeeSharesResponse, encodeJunoFeeshareQueryWithdrawerFeeSharesRequest as encodeJunoFeeshareV1QueryWithdrawerFeeSharesRequest, encodeJunoFeeshareQueryWithdrawerFeeSharesResponse as encodeJunoFeeshareV1QueryWithdrawerFeeSharesResponse, decodeJunoFeeshareQueryFeeSharesRequest as decodeJunoFeeshareV1QueryFeeSharesRequest, decodeJunoFeeshareQueryFeeSharesResponse as decodeJunoFeeshareV1QueryFeeSharesResponse, decodeJunoFeeshareQueryFeeShareRequest as decodeJunoFeeshareV1QueryFeeShareRequest, decodeJunoFeeshareQueryFeeShareResponse as decodeJunoFeeshareV1QueryFeeShareResponse, decodeJunoFeeshareQueryParamsRequest as decodeJunoFeeshareV1QueryParamsRequest, decodeJunoFeeshareQueryParamsResponse as decodeJunoFeeshareV1QueryParamsResponse, decodeJunoFeeshareQueryDeployerFeeSharesRequest as decodeJunoFeeshareV1QueryDeployerFeeSharesRequest, decodeJunoFeeshareQueryDeployerFeeSharesResponse as decodeJunoFeeshareV1QueryDeployerFeeSharesResponse, decodeJunoFeeshareQueryWithdrawerFeeSharesRequest as decodeJunoFeeshareV1QueryWithdrawerFeeSharesRequest, decodeJunoFeeshareQueryWithdrawerFeeSharesResponse as decodeJunoFeeshareV1QueryWithdrawerFeeSharesResponse } from './juno/feeshare/v1/query.js';
import { encodeJunoFeeshareMsgRegisterFeeShare as encodeJunoFeeshareV1MsgRegisterFeeShare, encodeJunoFeeshareMsgRegisterFeeShareResponse as encodeJunoFeeshareV1MsgRegisterFeeShareResponse, encodeJunoFeeshareMsgUpdateFeeShare as encodeJunoFeeshareV1MsgUpdateFeeShare, encodeJunoFeeshareMsgUpdateFeeShareResponse as encodeJunoFeeshareV1MsgUpdateFeeShareResponse, encodeJunoFeeshareMsgCancelFeeShare as encodeJunoFeeshareV1MsgCancelFeeShare, encodeJunoFeeshareMsgCancelFeeShareResponse as encodeJunoFeeshareV1MsgCancelFeeShareResponse, encodeJunoFeeshareMsgUpdateParams as encodeJunoFeeshareV1MsgUpdateParams, encodeJunoFeeshareMsgUpdateParamsResponse as encodeJunoFeeshareV1MsgUpdateParamsResponse, decodeJunoFeeshareMsgRegisterFeeShare as decodeJunoFeeshareV1MsgRegisterFeeShare, decodeJunoFeeshareMsgRegisterFeeShareResponse as decodeJunoFeeshareV1MsgRegisterFeeShareResponse, decodeJunoFeeshareMsgUpdateFeeShare as decodeJunoFeeshareV1MsgUpdateFeeShare, decodeJunoFeeshareMsgUpdateFeeShareResponse as decodeJunoFeeshareV1MsgUpdateFeeShareResponse, decodeJunoFeeshareMsgCancelFeeShare as decodeJunoFeeshareV1MsgCancelFeeShare, decodeJunoFeeshareMsgCancelFeeShareResponse as decodeJunoFeeshareV1MsgCancelFeeShareResponse, decodeJunoFeeshareMsgUpdateParams as decodeJunoFeeshareV1MsgUpdateParams, decodeJunoFeeshareMsgUpdateParamsResponse as decodeJunoFeeshareV1MsgUpdateParamsResponse } from './juno/feeshare/v1/tx.js';
import { encodeJunoMintGenesisState, decodeJunoMintGenesisState } from './juno/mint/genesis.js';
import { decodeJunoMintParams, encodeJunoMintParams, decodeJunoMintMinter, encodeJunoMintMinter } from './juno/mint/mint.js';
import { encodeJunoMintQueryParamsRequest, encodeJunoMintQueryParamsResponse, encodeJunoMintQueryInflationRequest, encodeJunoMintQueryInflationResponse, encodeJunoMintQueryAnnualProvisionsRequest, encodeJunoMintQueryAnnualProvisionsResponse, encodeJunoMintQueryTargetSupplyRequest, encodeJunoMintQueryTargetSupplyResponse, decodeJunoMintQueryParamsRequest, decodeJunoMintQueryParamsResponse, decodeJunoMintQueryInflationRequest, decodeJunoMintQueryInflationResponse, decodeJunoMintQueryAnnualProvisionsRequest, decodeJunoMintQueryAnnualProvisionsResponse, decodeJunoMintQueryTargetSupplyRequest, decodeJunoMintQueryTargetSupplyResponse } from './juno/mint/query.js';
import { encodeJunoMintMsgUpdateParams, encodeJunoMintMsgUpdateParamsResponse, decodeJunoMintMsgUpdateParams, decodeJunoMintMsgUpdateParamsResponse } from './juno/mint/tx.js';
import { encodeOsmosisAccumAccumulatorContent as encodeOsmosisAccumV1beta1AccumulatorContent, encodeOsmosisAccumOptions as encodeOsmosisAccumV1beta1Options, encodeOsmosisAccumRecord as encodeOsmosisAccumV1beta1Record, decodeOsmosisAccumOptions as decodeOsmosisAccumV1beta1Options, decodeOsmosisAccumAccumulatorContent as decodeOsmosisAccumV1beta1AccumulatorContent, decodeOsmosisAccumRecord as decodeOsmosisAccumV1beta1Record } from './osmosis/accum/v1beta1/accum.js';
import { encodeOsmosisConcentratedliquidityFullTick as encodeOsmosisConcentratedliquidityV1beta1FullTick, encodeOsmosisConcentratedliquidityPoolData as encodeOsmosisConcentratedliquidityV1beta1PoolData, decodeOsmosisConcentratedliquidityFullTick as decodeOsmosisConcentratedliquidityV1beta1FullTick, decodeOsmosisConcentratedliquidityAccumObject as decodeOsmosisConcentratedliquidityV1beta1AccumObject, encodeOsmosisConcentratedliquidityAccumObject as encodeOsmosisConcentratedliquidityV1beta1AccumObject, encodeOsmosisConcentratedliquidityPositionData as encodeOsmosisConcentratedliquidityV1beta1PositionData, encodeOsmosisConcentratedliquidityGenesisState as encodeOsmosisConcentratedliquidityV1beta1GenesisState, decodeOsmosisConcentratedliquidityPoolData as decodeOsmosisConcentratedliquidityV1beta1PoolData, decodeOsmosisConcentratedliquidityPositionData as decodeOsmosisConcentratedliquidityV1beta1PositionData, decodeOsmosisConcentratedliquidityGenesisState as decodeOsmosisConcentratedliquidityV1beta1GenesisState } from './osmosis/concentrated-liquidity/genesis.js';
import { encodeOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal as encodeOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal, decodeOsmosisConcentratedliquidityPoolRecord as decodeOsmosisConcentratedliquidityV1beta1PoolRecord, encodeOsmosisConcentratedliquidityPoolRecord as encodeOsmosisConcentratedliquidityV1beta1PoolRecord, encodeOsmosisConcentratedliquidityTickSpacingDecreaseProposal as encodeOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal, decodeOsmosisConcentratedliquidityPoolIdToTickSpacingRecord as decodeOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord, encodeOsmosisConcentratedliquidityPoolIdToTickSpacingRecord as encodeOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord, decodeOsmosisConcentratedliquidityCreateConcentratedLiquidityPoolsProposal as decodeOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal, decodeOsmosisConcentratedliquidityTickSpacingDecreaseProposal as decodeOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal } from './osmosis/concentrated-liquidity/gov.js';
import { encodeOsmosisConcentratedliquidityIncentiveRecord as encodeOsmosisConcentratedliquidityV1beta1IncentiveRecord, decodeOsmosisConcentratedliquidityIncentiveRecordBody as decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordBody, encodeOsmosisConcentratedliquidityIncentiveRecordBody as encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordBody, decodeOsmosisConcentratedliquidityIncentiveRecord as decodeOsmosisConcentratedliquidityV1beta1IncentiveRecord } from './osmosis/concentrated-liquidity/incentive_record.js';
import { decodeOsmosisConcentratedliquidityParams, encodeOsmosisConcentratedliquidityParams } from './osmosis/concentrated-liquidity/params.js';
import { encodeOsmosisConcentratedliquidityPool as encodeOsmosisConcentratedliquidityV1beta1Pool, decodeOsmosisConcentratedliquidityPool as decodeOsmosisConcentratedliquidityV1beta1Pool } from './osmosis/concentrated-liquidity/pool.js';
import { encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool as encodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool, encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse as encodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse, decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool as decodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool, decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse as decodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse } from './osmosis/concentrated-liquidity/pool-model/concentrated/tx.js';
import { encodeOsmosisConcentratedliquidityPosition as encodeOsmosisConcentratedliquidityV1beta1Position, encodeOsmosisConcentratedliquidityFullPositionBreakdown as encodeOsmosisConcentratedliquidityV1beta1FullPositionBreakdown, decodeOsmosisConcentratedliquidityPosition as decodeOsmosisConcentratedliquidityV1beta1Position, encodeOsmosisConcentratedliquidityPositionWithPeriodLock as encodeOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock, decodeOsmosisConcentratedliquidityFullPositionBreakdown as decodeOsmosisConcentratedliquidityV1beta1FullPositionBreakdown, decodeOsmosisConcentratedliquidityPositionWithPeriodLock as decodeOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock } from './osmosis/concentrated-liquidity/position.js';
import { encodeOsmosisConcentratedliquidityUserPositionsRequest as encodeOsmosisConcentratedliquidityV1beta1UserPositionsRequest, encodeOsmosisConcentratedliquidityUserPositionsResponse as encodeOsmosisConcentratedliquidityV1beta1UserPositionsResponse, encodeOsmosisConcentratedliquidityPositionByIdRequest as encodeOsmosisConcentratedliquidityV1beta1PositionByIdRequest, encodeOsmosisConcentratedliquidityPositionByIdResponse as encodeOsmosisConcentratedliquidityV1beta1PositionByIdResponse, encodeOsmosisConcentratedliquidityPoolsRequest as encodeOsmosisConcentratedliquidityV1beta1PoolsRequest, encodeOsmosisConcentratedliquidityPoolsResponse as encodeOsmosisConcentratedliquidityV1beta1PoolsResponse, encodeOsmosisConcentratedliquidityParamsRequest as encodeOsmosisConcentratedliquidityV1beta1ParamsRequest, encodeOsmosisConcentratedliquidityParamsResponse as encodeOsmosisConcentratedliquidityV1beta1ParamsResponse, encodeOsmosisConcentratedliquidityTickLiquidityNet as encodeOsmosisConcentratedliquidityV1beta1TickLiquidityNet, encodeOsmosisConcentratedliquidityLiquidityDepthWithRange as encodeOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange, encodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest as encodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest, encodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse as encodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse, decodeOsmosisConcentratedliquidityTickLiquidityNet as decodeOsmosisConcentratedliquidityV1beta1TickLiquidityNet, encodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest as encodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest, encodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse as encodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse, decodeOsmosisConcentratedliquidityLiquidityDepthWithRange as decodeOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange, encodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest as encodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest, encodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse as encodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse, encodeOsmosisConcentratedliquidityClaimableIncentivesRequest as encodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest, encodeOsmosisConcentratedliquidityClaimableIncentivesResponse as encodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse, encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest as encodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest, encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse as encodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse, encodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest as encodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest, encodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse as encodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse, encodeOsmosisConcentratedliquidityIncentiveRecordsRequest as encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest, encodeOsmosisConcentratedliquidityIncentiveRecordsResponse as encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse, encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest as encodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest, encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse as encodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse, encodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest as encodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest, encodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse as encodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse, encodeOsmosisConcentratedliquidityGetTotalLiquidityRequest as encodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest, encodeOsmosisConcentratedliquidityGetTotalLiquidityResponse as encodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse, encodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest as encodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest, encodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse as encodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse, decodeOsmosisConcentratedliquidityUserPositionsRequest as decodeOsmosisConcentratedliquidityV1beta1UserPositionsRequest, decodeOsmosisConcentratedliquidityUserPositionsResponse as decodeOsmosisConcentratedliquidityV1beta1UserPositionsResponse, decodeOsmosisConcentratedliquidityPositionByIdRequest as decodeOsmosisConcentratedliquidityV1beta1PositionByIdRequest, decodeOsmosisConcentratedliquidityPositionByIdResponse as decodeOsmosisConcentratedliquidityV1beta1PositionByIdResponse, decodeOsmosisConcentratedliquidityPoolsRequest as decodeOsmosisConcentratedliquidityV1beta1PoolsRequest, decodeOsmosisConcentratedliquidityPoolsResponse as decodeOsmosisConcentratedliquidityV1beta1PoolsResponse, decodeOsmosisConcentratedliquidityParamsRequest as decodeOsmosisConcentratedliquidityV1beta1ParamsRequest, decodeOsmosisConcentratedliquidityParamsResponse as decodeOsmosisConcentratedliquidityV1beta1ParamsResponse, decodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest as decodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest, decodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse as decodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse, decodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest as decodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest, decodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse as decodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse, decodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest as decodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest, decodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse as decodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse, decodeOsmosisConcentratedliquidityClaimableIncentivesRequest as decodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest, decodeOsmosisConcentratedliquidityClaimableIncentivesResponse as decodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse, decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest as decodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest, decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse as decodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse, decodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest as decodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest, decodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse as decodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse, decodeOsmosisConcentratedliquidityIncentiveRecordsRequest as decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest, decodeOsmosisConcentratedliquidityIncentiveRecordsResponse as decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse, decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest as decodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest, decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse as decodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse, decodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest as decodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest, decodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse as decodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse, decodeOsmosisConcentratedliquidityGetTotalLiquidityRequest as decodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest, decodeOsmosisConcentratedliquidityGetTotalLiquidityResponse as decodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse, decodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest as decodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest, decodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse as decodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse } from './osmosis/concentrated-liquidity/query.js';
import { encodeOsmosisConcentratedliquidityTickInfo as encodeOsmosisConcentratedliquidityV1beta1TickInfo, decodeOsmosisConcentratedliquidityUptimeTrackers as decodeOsmosisConcentratedliquidityV1beta1UptimeTrackers, encodeOsmosisConcentratedliquidityUptimeTrackers as encodeOsmosisConcentratedliquidityV1beta1UptimeTrackers, decodeOsmosisConcentratedliquidityUptimeTracker as decodeOsmosisConcentratedliquidityV1beta1UptimeTracker, encodeOsmosisConcentratedliquidityUptimeTracker as encodeOsmosisConcentratedliquidityV1beta1UptimeTracker, decodeOsmosisConcentratedliquidityTickInfo as decodeOsmosisConcentratedliquidityV1beta1TickInfo } from './osmosis/concentrated-liquidity/tickInfo.js';
import { encodeOsmosisConcentratedliquidityMsgCreatePosition as encodeOsmosisConcentratedliquidityV1beta1MsgCreatePosition, encodeOsmosisConcentratedliquidityMsgCreatePositionResponse as encodeOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse, encodeOsmosisConcentratedliquidityMsgAddToPosition as encodeOsmosisConcentratedliquidityV1beta1MsgAddToPosition, encodeOsmosisConcentratedliquidityMsgAddToPositionResponse as encodeOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse, encodeOsmosisConcentratedliquidityMsgWithdrawPosition as encodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition, encodeOsmosisConcentratedliquidityMsgWithdrawPositionResponse as encodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse, encodeOsmosisConcentratedliquidityMsgCollectSpreadRewards as encodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards, encodeOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse as encodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse, encodeOsmosisConcentratedliquidityMsgCollectIncentives as encodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentives, encodeOsmosisConcentratedliquidityMsgCollectIncentivesResponse as encodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse, encodeOsmosisConcentratedliquidityMsgFungifyChargedPositions as encodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions, encodeOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse as encodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse, encodeOsmosisConcentratedliquidityMsgTransferPositions as encodeOsmosisConcentratedliquidityV1beta1MsgTransferPositions, encodeOsmosisConcentratedliquidityMsgTransferPositionsResponse as encodeOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse, decodeOsmosisConcentratedliquidityMsgCreatePosition as decodeOsmosisConcentratedliquidityV1beta1MsgCreatePosition, decodeOsmosisConcentratedliquidityMsgCreatePositionResponse as decodeOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse, decodeOsmosisConcentratedliquidityMsgAddToPosition as decodeOsmosisConcentratedliquidityV1beta1MsgAddToPosition, decodeOsmosisConcentratedliquidityMsgAddToPositionResponse as decodeOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse, decodeOsmosisConcentratedliquidityMsgWithdrawPosition as decodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition, decodeOsmosisConcentratedliquidityMsgWithdrawPositionResponse as decodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse, decodeOsmosisConcentratedliquidityMsgCollectSpreadRewards as decodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards, decodeOsmosisConcentratedliquidityMsgCollectSpreadRewardsResponse as decodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse, decodeOsmosisConcentratedliquidityMsgCollectIncentives as decodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentives, decodeOsmosisConcentratedliquidityMsgCollectIncentivesResponse as decodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse, decodeOsmosisConcentratedliquidityMsgFungifyChargedPositions as decodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions, decodeOsmosisConcentratedliquidityMsgFungifyChargedPositionsResponse as decodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse, decodeOsmosisConcentratedliquidityMsgTransferPositions as decodeOsmosisConcentratedliquidityV1beta1MsgTransferPositions, decodeOsmosisConcentratedliquidityMsgTransferPositionsResponse as decodeOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse } from './osmosis/concentrated-liquidity/tx.js';
import { encodeOsmosisCosmwasmpoolGenesisState as encodeOsmosisCosmwasmpoolV1beta1GenesisState, decodeOsmosisCosmwasmpoolGenesisState as decodeOsmosisCosmwasmpoolV1beta1GenesisState } from './osmosis/cosmwasmpool/v1beta1/genesis.js';
import { encodeOsmosisCosmwasmpoolUploadCosmWasmPoolCodeAndWhiteListProposal as encodeOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal, encodeOsmosisCosmwasmpoolMigratePoolContractsProposal as encodeOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal, decodeOsmosisCosmwasmpoolUploadCosmWasmPoolCodeAndWhiteListProposal as decodeOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal, decodeOsmosisCosmwasmpoolMigratePoolContractsProposal as decodeOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal } from './osmosis/cosmwasmpool/v1beta1/gov.js';
import { encodeOsmosisCosmwasmpoolInstantiateMsg as encodeOsmosisCosmwasmpoolV1beta1InstantiateMsg, decodeOsmosisCosmwasmpoolInstantiateMsg as decodeOsmosisCosmwasmpoolV1beta1InstantiateMsg } from './osmosis/cosmwasmpool/v1beta1/model/instantiate_msg.js';
import { encodeOsmosisCosmwasmpoolCalcOutAmtGivenIn as encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn, encodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest as encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest, decodeOsmosisCosmwasmpoolCalcOutAmtGivenIn as decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn, encodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse as encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse, encodeOsmosisCosmwasmpoolCalcInAmtGivenOut as encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut, encodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest as encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest, decodeOsmosisCosmwasmpoolCalcInAmtGivenOut as decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut, encodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse as encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse, decodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest as decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest, decodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse as decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse, decodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest as decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest, decodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse as decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse } from './osmosis/cosmwasmpool/v1beta1/model/module_query_msg.js';
import { encodeOsmosisCosmwasmpoolSwapExactAmountIn as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountIn, encodeOsmosisCosmwasmpoolSwapExactAmountInSudoMsg as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg, decodeOsmosisCosmwasmpoolSwapExactAmountIn as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountIn, encodeOsmosisCosmwasmpoolSwapExactAmountInSudoMsgResponse as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse, encodeOsmosisCosmwasmpoolSwapExactAmountOut as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOut, encodeOsmosisCosmwasmpoolSwapExactAmountOutSudoMsg as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg, decodeOsmosisCosmwasmpoolSwapExactAmountOut as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOut, encodeOsmosisCosmwasmpoolSwapExactAmountOutSudoMsgResponse as encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse, decodeOsmosisCosmwasmpoolSwapExactAmountInSudoMsg as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg, decodeOsmosisCosmwasmpoolSwapExactAmountInSudoMsgResponse as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse, decodeOsmosisCosmwasmpoolSwapExactAmountOutSudoMsg as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg, decodeOsmosisCosmwasmpoolSwapExactAmountOutSudoMsgResponse as decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse } from './osmosis/cosmwasmpool/v1beta1/model/module_sudo_msg.js';
import { encodeOsmosisCosmwasmpoolCosmWasmPool as encodeOsmosisCosmwasmpoolV1beta1CosmWasmPool, decodeOsmosisCosmwasmpoolCosmWasmPool as decodeOsmosisCosmwasmpoolV1beta1CosmWasmPool } from './osmosis/cosmwasmpool/v1beta1/model/pool.js';
import { encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg as encodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg, decodeOsmosisCosmwasmpoolEmptyStruct as decodeOsmosisCosmwasmpoolV1beta1EmptyStruct, encodeOsmosisCosmwasmpoolEmptyStruct as encodeOsmosisCosmwasmpoolV1beta1EmptyStruct, encodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse as encodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse, encodeOsmosisCosmwasmpoolSpotPrice as encodeOsmosisCosmwasmpoolV1beta1SpotPrice, encodeOsmosisCosmwasmpoolSpotPriceQueryMsg as encodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg, decodeOsmosisCosmwasmpoolSpotPrice as decodeOsmosisCosmwasmpoolV1beta1SpotPrice, encodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse as encodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse, encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg as encodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg, encodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse as encodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse, encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg as encodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg, encodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse as encodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse, decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsg as decodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg, decodeOsmosisCosmwasmpoolGetSwapFeeQueryMsgResponse as decodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse, decodeOsmosisCosmwasmpoolSpotPriceQueryMsg as decodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg, decodeOsmosisCosmwasmpoolSpotPriceQueryMsgResponse as decodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse, decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsg as decodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg, decodeOsmosisCosmwasmpoolGetTotalPoolLiquidityQueryMsgResponse as decodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse, decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsg as decodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg, decodeOsmosisCosmwasmpoolGetTotalSharesQueryMsgResponse as decodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse } from './osmosis/cosmwasmpool/v1beta1/model/pool_query_msg.js';
import { encodeOsmosisCosmwasmpoolEmptyRequest as encodeOsmosisCosmwasmpoolV1beta1EmptyRequest, encodeOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest as encodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest, decodeOsmosisCosmwasmpoolEmptyRequest as decodeOsmosisCosmwasmpoolV1beta1EmptyRequest, encodeOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse as encodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse, encodeOsmosisCosmwasmpoolExitPoolExecuteMsgRequest as encodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest, encodeOsmosisCosmwasmpoolExitPoolExecuteMsgResponse as encodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse, decodeOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest as decodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest, decodeOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse as decodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse, decodeOsmosisCosmwasmpoolExitPoolExecuteMsgRequest as decodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest, decodeOsmosisCosmwasmpoolExitPoolExecuteMsgResponse as decodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse } from './osmosis/cosmwasmpool/v1beta1/model/transmuter_msgs.js';
import { encodeOsmosisCosmwasmpoolMsgCreateCosmWasmPool as encodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool, encodeOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse as encodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse, decodeOsmosisCosmwasmpoolMsgCreateCosmWasmPool as decodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool, decodeOsmosisCosmwasmpoolMsgCreateCosmWasmPoolResponse as decodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse } from './osmosis/cosmwasmpool/v1beta1/model/tx.js';
import { decodeOsmosisCosmwasmpoolParams as decodeOsmosisCosmwasmpoolV1beta1Params, encodeOsmosisCosmwasmpoolParams as encodeOsmosisCosmwasmpoolV1beta1Params } from './osmosis/cosmwasmpool/v1beta1/params.js';
import { encodeOsmosisCosmwasmpoolParamsRequest as encodeOsmosisCosmwasmpoolV1beta1ParamsRequest, encodeOsmosisCosmwasmpoolParamsResponse as encodeOsmosisCosmwasmpoolV1beta1ParamsResponse, encodeOsmosisCosmwasmpoolPoolsRequest as encodeOsmosisCosmwasmpoolV1beta1PoolsRequest, encodeOsmosisCosmwasmpoolPoolsResponse as encodeOsmosisCosmwasmpoolV1beta1PoolsResponse, encodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest as encodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest, encodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse as encodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse, decodeOsmosisCosmwasmpoolParamsRequest as decodeOsmosisCosmwasmpoolV1beta1ParamsRequest, decodeOsmosisCosmwasmpoolParamsResponse as decodeOsmosisCosmwasmpoolV1beta1ParamsResponse, decodeOsmosisCosmwasmpoolPoolsRequest as decodeOsmosisCosmwasmpoolV1beta1PoolsRequest, decodeOsmosisCosmwasmpoolPoolsResponse as decodeOsmosisCosmwasmpoolV1beta1PoolsResponse, decodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest as decodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest, decodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse as decodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse } from './osmosis/cosmwasmpool/v1beta1/query.js';
import { JsonToProtoEnumOsmosisDowntimedetectorDowntime as JsonToProtoEnumOsmosisDowntimedetectorV1beta1Downtime, ProtoToJsonEnumOsmosisDowntimedetectorDowntime as ProtoToJsonEnumOsmosisDowntimedetectorV1beta1Downtime } from './osmosis/downtime-detector/v1beta1/downtime_duration.js';
import { encodeOsmosisDowntimedetectorGenesisDowntimeEntry as encodeOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry, encodeOsmosisDowntimedetectorGenesisState as encodeOsmosisDowntimedetectorV1beta1GenesisState, decodeOsmosisDowntimedetectorGenesisDowntimeEntry as decodeOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry, decodeOsmosisDowntimedetectorGenesisState as decodeOsmosisDowntimedetectorV1beta1GenesisState } from './osmosis/downtime-detector/v1beta1/genesis.js';
import { encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest as encodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest, encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse as encodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse, decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest as decodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest, decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse as decodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse } from './osmosis/downtime-detector/v1beta1/query.js';
import { decodeOsmosisEpochsEpochInfo as decodeOsmosisEpochsV1beta1EpochInfo, encodeOsmosisEpochsEpochInfo as encodeOsmosisEpochsV1beta1EpochInfo, encodeOsmosisEpochsGenesisState as encodeOsmosisEpochsV1beta1GenesisState, decodeOsmosisEpochsGenesisState as decodeOsmosisEpochsV1beta1GenesisState } from './osmosis/epochs/genesis.js';
import { encodeOsmosisEpochsQueryEpochsInfoRequest as encodeOsmosisEpochsV1beta1QueryEpochsInfoRequest, encodeOsmosisEpochsQueryEpochsInfoResponse as encodeOsmosisEpochsV1beta1QueryEpochsInfoResponse, encodeOsmosisEpochsQueryCurrentEpochRequest as encodeOsmosisEpochsV1beta1QueryCurrentEpochRequest, encodeOsmosisEpochsQueryCurrentEpochResponse as encodeOsmosisEpochsV1beta1QueryCurrentEpochResponse, decodeOsmosisEpochsQueryEpochsInfoRequest as decodeOsmosisEpochsV1beta1QueryEpochsInfoRequest, decodeOsmosisEpochsQueryEpochsInfoResponse as decodeOsmosisEpochsV1beta1QueryEpochsInfoResponse, decodeOsmosisEpochsQueryCurrentEpochRequest as decodeOsmosisEpochsV1beta1QueryCurrentEpochRequest, decodeOsmosisEpochsQueryCurrentEpochResponse as decodeOsmosisEpochsV1beta1QueryCurrentEpochResponse } from './osmosis/epochs/query.js';
import { decodeOsmosisGammPoolParams as decodeOsmosisGammV1beta1PoolParams, decodeOsmosisGammPoolAsset as decodeOsmosisGammV1beta1PoolAsset, encodeOsmosisGammPoolParams as encodeOsmosisGammV1beta1PoolParams, decodeOsmosisGammSmoothWeightChangeParams as decodeOsmosisGammV1beta1SmoothWeightChangeParams, encodeOsmosisGammSmoothWeightChangeParams as encodeOsmosisGammV1beta1SmoothWeightChangeParams, encodeOsmosisGammPoolAsset as encodeOsmosisGammV1beta1PoolAsset, encodeOsmosisGammPool as encodeOsmosisGammV1beta1Pool, decodeOsmosisGammPool as decodeOsmosisGammV1beta1Pool } from './osmosis/gamm/pool-models/balancer/balancerPool.js';
import { encodeOsmosisGammPoolmodelsBalancerMsgCreateBalancerPool as encodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool, encodeOsmosisGammPoolmodelsBalancerMsgCreateBalancerPoolResponse as encodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse, decodeOsmosisGammPoolmodelsBalancerMsgCreateBalancerPool as decodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool, decodeOsmosisGammPoolmodelsBalancerMsgCreateBalancerPoolResponse as decodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse } from './osmosis/gamm/pool-models/balancer/tx/tx.js';
import { decodeOsmosisGammPoolmodelsStableswapPoolParams as decodeOsmosisGammPoolmodelsStableswapV1beta1PoolParams, encodeOsmosisGammPoolmodelsStableswapPoolParams as encodeOsmosisGammPoolmodelsStableswapV1beta1PoolParams, encodeOsmosisGammPoolmodelsStableswapPool as encodeOsmosisGammPoolmodelsStableswapV1beta1Pool, decodeOsmosisGammPoolmodelsStableswapPool as decodeOsmosisGammPoolmodelsStableswapV1beta1Pool } from './osmosis/gamm/pool-models/stableswap/stableswap_pool.js';
import { encodeOsmosisGammPoolmodelsStableswapMsgCreateStableswapPool as encodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool, encodeOsmosisGammPoolmodelsStableswapMsgCreateStableswapPoolResponse as encodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse, encodeOsmosisGammPoolmodelsStableswapMsgStableSwapAdjustScalingFactors as encodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors, encodeOsmosisGammPoolmodelsStableswapMsgStableSwapAdjustScalingFactorsResponse as encodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse, decodeOsmosisGammPoolmodelsStableswapMsgCreateStableswapPool as decodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool, decodeOsmosisGammPoolmodelsStableswapMsgCreateStableswapPoolResponse as decodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse, decodeOsmosisGammPoolmodelsStableswapMsgStableSwapAdjustScalingFactors as decodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors, decodeOsmosisGammPoolmodelsStableswapMsgStableSwapAdjustScalingFactorsResponse as decodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse } from './osmosis/gamm/pool-models/stableswap/tx.js';
import { encodeOsmosisGammParams as encodeOsmosisGammV1beta1Params, encodeOsmosisGammGenesisState as encodeOsmosisGammV1beta1GenesisState, decodeOsmosisGammParams as decodeOsmosisGammV1beta1Params, decodeOsmosisGammGenesisState as decodeOsmosisGammV1beta1GenesisState } from './osmosis/gamm/v1beta1/genesis.js';
import { encodeOsmosisGammReplaceMigrationRecordsProposal as encodeOsmosisGammV1beta1ReplaceMigrationRecordsProposal, encodeOsmosisGammUpdateMigrationRecordsProposal as encodeOsmosisGammV1beta1UpdateMigrationRecordsProposal, encodeOsmosisGammPoolRecordWithCFMMLink as encodeOsmosisGammV1beta1PoolRecordWithCFMMLink, encodeOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal as encodeOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal, decodeOsmosisGammPoolRecordWithCFMMLink as decodeOsmosisGammV1beta1PoolRecordWithCFMMLink, encodeOsmosisGammSetScalingFactorControllerProposal as encodeOsmosisGammV1beta1SetScalingFactorControllerProposal, decodeOsmosisGammReplaceMigrationRecordsProposal as decodeOsmosisGammV1beta1ReplaceMigrationRecordsProposal, decodeOsmosisGammUpdateMigrationRecordsProposal as decodeOsmosisGammV1beta1UpdateMigrationRecordsProposal, decodeOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal as decodeOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal, decodeOsmosisGammSetScalingFactorControllerProposal as decodeOsmosisGammV1beta1SetScalingFactorControllerProposal } from './osmosis/gamm/v1beta1/gov.js';
import { encodeOsmosisGammQueryPoolRequest as encodeOsmosisGammV1beta1QueryPoolRequest, encodeOsmosisGammQueryPoolResponse as encodeOsmosisGammV1beta1QueryPoolResponse, encodeOsmosisGammQueryPoolsRequest as encodeOsmosisGammV1beta1QueryPoolsRequest, encodeOsmosisGammQueryPoolsResponse as encodeOsmosisGammV1beta1QueryPoolsResponse, encodeOsmosisGammQueryNumPoolsRequest as encodeOsmosisGammV1beta1QueryNumPoolsRequest, encodeOsmosisGammQueryNumPoolsResponse as encodeOsmosisGammV1beta1QueryNumPoolsResponse, encodeOsmosisGammQueryPoolTypeRequest as encodeOsmosisGammV1beta1QueryPoolTypeRequest, encodeOsmosisGammQueryPoolTypeResponse as encodeOsmosisGammV1beta1QueryPoolTypeResponse, encodeOsmosisGammQueryCalcJoinPoolSharesRequest as encodeOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest, encodeOsmosisGammQueryCalcJoinPoolSharesResponse as encodeOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse, encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest as encodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest, encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse as encodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse, encodeOsmosisGammQueryPoolParamsRequest as encodeOsmosisGammV1beta1QueryPoolParamsRequest, encodeOsmosisGammQueryPoolParamsResponse as encodeOsmosisGammV1beta1QueryPoolParamsResponse, encodeOsmosisGammQueryTotalPoolLiquidityRequest as encodeOsmosisGammV1beta1QueryTotalPoolLiquidityRequest, encodeOsmosisGammQueryTotalPoolLiquidityResponse as encodeOsmosisGammV1beta1QueryTotalPoolLiquidityResponse, encodeOsmosisGammQueryTotalSharesRequest as encodeOsmosisGammV1beta1QueryTotalSharesRequest, encodeOsmosisGammQueryTotalSharesResponse as encodeOsmosisGammV1beta1QueryTotalSharesResponse, encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest as encodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest, encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse as encodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse, encodeOsmosisGammQuerySpotPriceRequest as encodeOsmosisGammV1beta1QuerySpotPriceRequest, encodeOsmosisGammQueryPoolsWithFilterRequest as encodeOsmosisGammV1beta1QueryPoolsWithFilterRequest, encodeOsmosisGammQueryPoolsWithFilterResponse as encodeOsmosisGammV1beta1QueryPoolsWithFilterResponse, encodeOsmosisGammQuerySpotPriceResponse as encodeOsmosisGammV1beta1QuerySpotPriceResponse, encodeOsmosisGammQuerySwapExactAmountInRequest as encodeOsmosisGammV1beta1QuerySwapExactAmountInRequest, encodeOsmosisGammQuerySwapExactAmountInResponse as encodeOsmosisGammV1beta1QuerySwapExactAmountInResponse, encodeOsmosisGammQuerySwapExactAmountOutRequest as encodeOsmosisGammV1beta1QuerySwapExactAmountOutRequest, encodeOsmosisGammQuerySwapExactAmountOutResponse as encodeOsmosisGammV1beta1QuerySwapExactAmountOutResponse, encodeOsmosisGammQueryTotalLiquidityRequest as encodeOsmosisGammV1beta1QueryTotalLiquidityRequest, encodeOsmosisGammQueryTotalLiquidityResponse as encodeOsmosisGammV1beta1QueryTotalLiquidityResponse, encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest as encodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest, encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse as encodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse, encodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest as encodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest, encodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse as encodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse, decodeOsmosisGammQueryPoolRequest as decodeOsmosisGammV1beta1QueryPoolRequest, decodeOsmosisGammQueryPoolResponse as decodeOsmosisGammV1beta1QueryPoolResponse, decodeOsmosisGammQueryPoolsRequest as decodeOsmosisGammV1beta1QueryPoolsRequest, decodeOsmosisGammQueryPoolsResponse as decodeOsmosisGammV1beta1QueryPoolsResponse, decodeOsmosisGammQueryNumPoolsRequest as decodeOsmosisGammV1beta1QueryNumPoolsRequest, decodeOsmosisGammQueryNumPoolsResponse as decodeOsmosisGammV1beta1QueryNumPoolsResponse, decodeOsmosisGammQueryPoolTypeRequest as decodeOsmosisGammV1beta1QueryPoolTypeRequest, decodeOsmosisGammQueryPoolTypeResponse as decodeOsmosisGammV1beta1QueryPoolTypeResponse, decodeOsmosisGammQueryCalcJoinPoolSharesRequest as decodeOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest, decodeOsmosisGammQueryCalcJoinPoolSharesResponse as decodeOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse, decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest as decodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest, decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse as decodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse, decodeOsmosisGammQueryPoolParamsRequest as decodeOsmosisGammV1beta1QueryPoolParamsRequest, decodeOsmosisGammQueryPoolParamsResponse as decodeOsmosisGammV1beta1QueryPoolParamsResponse, decodeOsmosisGammQueryTotalPoolLiquidityRequest as decodeOsmosisGammV1beta1QueryTotalPoolLiquidityRequest, decodeOsmosisGammQueryTotalPoolLiquidityResponse as decodeOsmosisGammV1beta1QueryTotalPoolLiquidityResponse, decodeOsmosisGammQueryTotalSharesRequest as decodeOsmosisGammV1beta1QueryTotalSharesRequest, decodeOsmosisGammQueryTotalSharesResponse as decodeOsmosisGammV1beta1QueryTotalSharesResponse, decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest as decodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest, decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse as decodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse, decodeOsmosisGammQuerySpotPriceRequest as decodeOsmosisGammV1beta1QuerySpotPriceRequest, decodeOsmosisGammQueryPoolsWithFilterRequest as decodeOsmosisGammV1beta1QueryPoolsWithFilterRequest, decodeOsmosisGammQueryPoolsWithFilterResponse as decodeOsmosisGammV1beta1QueryPoolsWithFilterResponse, decodeOsmosisGammQuerySpotPriceResponse as decodeOsmosisGammV1beta1QuerySpotPriceResponse, decodeOsmosisGammQuerySwapExactAmountInRequest as decodeOsmosisGammV1beta1QuerySwapExactAmountInRequest, decodeOsmosisGammQuerySwapExactAmountInResponse as decodeOsmosisGammV1beta1QuerySwapExactAmountInResponse, decodeOsmosisGammQuerySwapExactAmountOutRequest as decodeOsmosisGammV1beta1QuerySwapExactAmountOutRequest, decodeOsmosisGammQuerySwapExactAmountOutResponse as decodeOsmosisGammV1beta1QuerySwapExactAmountOutResponse, decodeOsmosisGammQueryTotalLiquidityRequest as decodeOsmosisGammV1beta1QueryTotalLiquidityRequest, decodeOsmosisGammQueryTotalLiquidityResponse as decodeOsmosisGammV1beta1QueryTotalLiquidityResponse, decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest as decodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest, decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse as decodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse, decodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest as decodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest, decodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse as decodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse } from './osmosis/gamm/v1beta1/query.js';
import { decodeOsmosisGammBalancerToConcentratedPoolLink as decodeOsmosisGammV1beta1BalancerToConcentratedPoolLink, encodeOsmosisGammBalancerToConcentratedPoolLink as encodeOsmosisGammV1beta1BalancerToConcentratedPoolLink, decodeOsmosisGammMigrationRecords as decodeOsmosisGammV1beta1MigrationRecords, encodeOsmosisGammMigrationRecords as encodeOsmosisGammV1beta1MigrationRecords } from './osmosis/gamm/v1beta1/shared.js';
import { encodeOsmosisGammMsgJoinPool as encodeOsmosisGammV1beta1MsgJoinPool, encodeOsmosisGammMsgJoinPoolResponse as encodeOsmosisGammV1beta1MsgJoinPoolResponse, encodeOsmosisGammMsgExitPool as encodeOsmosisGammV1beta1MsgExitPool, encodeOsmosisGammMsgExitPoolResponse as encodeOsmosisGammV1beta1MsgExitPoolResponse, encodeOsmosisGammMsgSwapExactAmountIn as encodeOsmosisGammV1beta1MsgSwapExactAmountIn, encodeOsmosisGammMsgSwapExactAmountInResponse as encodeOsmosisGammV1beta1MsgSwapExactAmountInResponse, encodeOsmosisGammMsgSwapExactAmountOut as encodeOsmosisGammV1beta1MsgSwapExactAmountOut, encodeOsmosisGammMsgSwapExactAmountOutResponse as encodeOsmosisGammV1beta1MsgSwapExactAmountOutResponse, encodeOsmosisGammMsgJoinSwapExternAmountIn as encodeOsmosisGammV1beta1MsgJoinSwapExternAmountIn, encodeOsmosisGammMsgJoinSwapExternAmountInResponse as encodeOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse, encodeOsmosisGammMsgJoinSwapShareAmountOut as encodeOsmosisGammV1beta1MsgJoinSwapShareAmountOut, encodeOsmosisGammMsgJoinSwapShareAmountOutResponse as encodeOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse, encodeOsmosisGammMsgExitSwapShareAmountIn as encodeOsmosisGammV1beta1MsgExitSwapShareAmountIn, encodeOsmosisGammMsgExitSwapShareAmountInResponse as encodeOsmosisGammV1beta1MsgExitSwapShareAmountInResponse, encodeOsmosisGammMsgExitSwapExternAmountOut as encodeOsmosisGammV1beta1MsgExitSwapExternAmountOut, encodeOsmosisGammMsgExitSwapExternAmountOutResponse as encodeOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse, decodeOsmosisGammMsgJoinPool as decodeOsmosisGammV1beta1MsgJoinPool, decodeOsmosisGammMsgJoinPoolResponse as decodeOsmosisGammV1beta1MsgJoinPoolResponse, decodeOsmosisGammMsgExitPool as decodeOsmosisGammV1beta1MsgExitPool, decodeOsmosisGammMsgExitPoolResponse as decodeOsmosisGammV1beta1MsgExitPoolResponse, decodeOsmosisGammMsgSwapExactAmountIn as decodeOsmosisGammV1beta1MsgSwapExactAmountIn, decodeOsmosisGammMsgSwapExactAmountInResponse as decodeOsmosisGammV1beta1MsgSwapExactAmountInResponse, decodeOsmosisGammMsgSwapExactAmountOut as decodeOsmosisGammV1beta1MsgSwapExactAmountOut, decodeOsmosisGammMsgSwapExactAmountOutResponse as decodeOsmosisGammV1beta1MsgSwapExactAmountOutResponse, decodeOsmosisGammMsgJoinSwapExternAmountIn as decodeOsmosisGammV1beta1MsgJoinSwapExternAmountIn, decodeOsmosisGammMsgJoinSwapExternAmountInResponse as decodeOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse, decodeOsmosisGammMsgJoinSwapShareAmountOut as decodeOsmosisGammV1beta1MsgJoinSwapShareAmountOut, decodeOsmosisGammMsgJoinSwapShareAmountOutResponse as decodeOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse, decodeOsmosisGammMsgExitSwapShareAmountIn as decodeOsmosisGammV1beta1MsgExitSwapShareAmountIn, decodeOsmosisGammMsgExitSwapShareAmountInResponse as decodeOsmosisGammV1beta1MsgExitSwapShareAmountInResponse, decodeOsmosisGammMsgExitSwapExternAmountOut as decodeOsmosisGammV1beta1MsgExitSwapExternAmountOut, decodeOsmosisGammMsgExitSwapExternAmountOutResponse as decodeOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse } from './osmosis/gamm/v1beta1/tx.js';
import { encodeOsmosisGammQuerySpotPriceRequest as encodeOsmosisGammV2QuerySpotPriceRequest, encodeOsmosisGammQuerySpotPriceResponse as encodeOsmosisGammV2QuerySpotPriceResponse, decodeOsmosisGammQuerySpotPriceRequest as decodeOsmosisGammV2QuerySpotPriceRequest, decodeOsmosisGammQuerySpotPriceResponse as decodeOsmosisGammV2QuerySpotPriceResponse } from './osmosis/gamm/v2/query.js';
import { encodeOsmosisIbchooksGenesisState, decodeOsmosisIbchooksGenesisState } from './osmosis/ibc-hooks/genesis.js';
import { decodeOsmosisIbchooksParams, encodeOsmosisIbchooksParams } from './osmosis/ibc-hooks/params.js';
import { encodeOsmosisIbchooksMsgEmitIBCAck, encodeOsmosisIbchooksMsgEmitIBCAckResponse, decodeOsmosisIbchooksMsgEmitIBCAck, decodeOsmosisIbchooksMsgEmitIBCAckResponse } from './osmosis/ibc-hooks/tx.js';
import { encodeOsmosisIbcratelimitGenesisState as encodeOsmosisIbcratelimitV1beta1GenesisState, decodeOsmosisIbcratelimitGenesisState as decodeOsmosisIbcratelimitV1beta1GenesisState } from './osmosis/ibc-rate-limit/v1beta1/genesis.js';
import { decodeOsmosisIbcratelimitParams as decodeOsmosisIbcratelimitV1beta1Params, encodeOsmosisIbcratelimitParams as encodeOsmosisIbcratelimitV1beta1Params } from './osmosis/ibc-rate-limit/v1beta1/params.js';
import { encodeOsmosisIbcratelimitParamsRequest as encodeOsmosisIbcratelimitV1beta1ParamsRequest, encodeOsmosisIbcratelimitParamsResponse as encodeOsmosisIbcratelimitV1beta1ParamsResponse, decodeOsmosisIbcratelimitParamsRequest as decodeOsmosisIbcratelimitV1beta1ParamsRequest, decodeOsmosisIbcratelimitParamsResponse as decodeOsmosisIbcratelimitV1beta1ParamsResponse } from './osmosis/ibc-rate-limit/v1beta1/query.js';
import { decodeOsmosisIncentivesGauge, encodeOsmosisIncentivesGauge, encodeOsmosisIncentivesLockableDurationsInfo, decodeOsmosisIncentivesLockableDurationsInfo } from './osmosis/incentives/gauge.js';
import { encodeOsmosisIncentivesGenesisState, decodeOsmosisIncentivesGenesisState } from './osmosis/incentives/genesis.js';
import { encodeOsmosisIncentivesCreateGroupsProposal, decodeOsmosisIncentivesCreateGroupsProposal } from './osmosis/incentives/gov.js';
import { decodeOsmosisIncentivesCreateGroup, encodeOsmosisIncentivesCreateGroup, encodeOsmosisIncentivesInternalGaugeInfo, decodeOsmosisIncentivesInternalGaugeRecord, encodeOsmosisIncentivesInternalGaugeRecord, encodeOsmosisIncentivesGroup, decodeOsmosisIncentivesInternalGaugeInfo, JsonToProtoEnumOsmosisIncentivesSplittingPolicy, ProtoToJsonEnumOsmosisIncentivesSplittingPolicy, encodeOsmosisIncentivesGroupsWithGauge, decodeOsmosisIncentivesGroup, decodeOsmosisIncentivesGroupsWithGauge } from './osmosis/incentives/group.js';
import { decodeOsmosisIncentivesParams, encodeOsmosisIncentivesParams } from './osmosis/incentives/params.js';
import { encodeOsmosisIncentivesModuleToDistributeCoinsRequest, encodeOsmosisIncentivesModuleToDistributeCoinsResponse, encodeOsmosisIncentivesGaugeByIDRequest, encodeOsmosisIncentivesGaugeByIDResponse, encodeOsmosisIncentivesGaugesRequest, encodeOsmosisIncentivesGaugesResponse, encodeOsmosisIncentivesActiveGaugesRequest, encodeOsmosisIncentivesActiveGaugesResponse, encodeOsmosisIncentivesActiveGaugesPerDenomRequest, encodeOsmosisIncentivesActiveGaugesPerDenomResponse, encodeOsmosisIncentivesUpcomingGaugesRequest, encodeOsmosisIncentivesUpcomingGaugesResponse, encodeOsmosisIncentivesUpcomingGaugesPerDenomRequest, encodeOsmosisIncentivesUpcomingGaugesPerDenomResponse, encodeOsmosisIncentivesRewardsEstRequest, encodeOsmosisIncentivesRewardsEstResponse, encodeOsmosisIncentivesQueryLockableDurationsRequest, encodeOsmosisIncentivesQueryLockableDurationsResponse, encodeOsmosisIncentivesQueryAllGroupsRequest, encodeOsmosisIncentivesQueryAllGroupsResponse, encodeOsmosisIncentivesQueryAllGroupsGaugesRequest, encodeOsmosisIncentivesQueryAllGroupsGaugesResponse, encodeOsmosisIncentivesQueryAllGroupsWithGaugeRequest, encodeOsmosisIncentivesQueryAllGroupsWithGaugeResponse, encodeOsmosisIncentivesQueryGroupByGroupGaugeIDRequest, encodeOsmosisIncentivesQueryGroupByGroupGaugeIDResponse, encodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest, encodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse, decodeOsmosisIncentivesGaugeWeight, encodeOsmosisIncentivesGaugeWeight, decodeOsmosisIncentivesModuleToDistributeCoinsRequest, decodeOsmosisIncentivesModuleToDistributeCoinsResponse, decodeOsmosisIncentivesGaugeByIDRequest, decodeOsmosisIncentivesGaugeByIDResponse, decodeOsmosisIncentivesGaugesRequest, decodeOsmosisIncentivesGaugesResponse, decodeOsmosisIncentivesActiveGaugesRequest, decodeOsmosisIncentivesActiveGaugesResponse, decodeOsmosisIncentivesActiveGaugesPerDenomRequest, decodeOsmosisIncentivesActiveGaugesPerDenomResponse, decodeOsmosisIncentivesUpcomingGaugesRequest, decodeOsmosisIncentivesUpcomingGaugesResponse, decodeOsmosisIncentivesUpcomingGaugesPerDenomRequest, decodeOsmosisIncentivesUpcomingGaugesPerDenomResponse, decodeOsmosisIncentivesRewardsEstRequest, decodeOsmosisIncentivesRewardsEstResponse, decodeOsmosisIncentivesQueryLockableDurationsRequest, decodeOsmosisIncentivesQueryLockableDurationsResponse, decodeOsmosisIncentivesQueryAllGroupsRequest, decodeOsmosisIncentivesQueryAllGroupsResponse, decodeOsmosisIncentivesQueryAllGroupsGaugesRequest, decodeOsmosisIncentivesQueryAllGroupsGaugesResponse, decodeOsmosisIncentivesQueryAllGroupsWithGaugeRequest, decodeOsmosisIncentivesQueryAllGroupsWithGaugeResponse, decodeOsmosisIncentivesQueryGroupByGroupGaugeIDRequest, decodeOsmosisIncentivesQueryGroupByGroupGaugeIDResponse, decodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest, decodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse } from './osmosis/incentives/query.js';
import { encodeOsmosisIncentivesMsgCreateGauge, encodeOsmosisIncentivesMsgCreateGaugeResponse, encodeOsmosisIncentivesMsgAddToGauge, encodeOsmosisIncentivesMsgAddToGaugeResponse, encodeOsmosisIncentivesMsgCreateGroup, encodeOsmosisIncentivesMsgCreateGroupResponse, decodeOsmosisIncentivesMsgCreateGauge, decodeOsmosisIncentivesMsgCreateGaugeResponse, decodeOsmosisIncentivesMsgAddToGauge, decodeOsmosisIncentivesMsgAddToGaugeResponse, decodeOsmosisIncentivesMsgCreateGroup, decodeOsmosisIncentivesMsgCreateGroupResponse } from './osmosis/incentives/tx.js';
import { encodeOsmosisLockupGenesisState, decodeOsmosisLockupGenesisState } from './osmosis/lockup/genesis.js';
import { decodeOsmosisLockupQueryCondition, encodeOsmosisLockupQueryCondition, JsonToProtoEnumOsmosisLockupLockQueryType, ProtoToJsonEnumOsmosisLockupLockQueryType, decodeOsmosisLockupSyntheticLock, encodeOsmosisLockupSyntheticLock, decodeOsmosisLockupPeriodLock, encodeOsmosisLockupPeriodLock } from './osmosis/lockup/lock.js';
import { decodeOsmosisLockupParams, encodeOsmosisLockupParams } from './osmosis/lockup/params.js';
import { encodeOsmosisLockupModuleBalanceRequest, encodeOsmosisLockupModuleBalanceResponse, encodeOsmosisLockupModuleLockedAmountRequest, encodeOsmosisLockupModuleLockedAmountResponse, encodeOsmosisLockupAccountUnlockableCoinsRequest, encodeOsmosisLockupAccountUnlockableCoinsResponse, encodeOsmosisLockupAccountUnlockingCoinsRequest, encodeOsmosisLockupAccountUnlockingCoinsResponse, encodeOsmosisLockupAccountLockedCoinsRequest, encodeOsmosisLockupAccountLockedCoinsResponse, encodeOsmosisLockupAccountLockedPastTimeRequest, encodeOsmosisLockupAccountLockedPastTimeResponse, encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest, encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse, encodeOsmosisLockupAccountUnlockedBeforeTimeRequest, encodeOsmosisLockupAccountUnlockedBeforeTimeResponse, encodeOsmosisLockupAccountLockedPastTimeDenomRequest, encodeOsmosisLockupAccountLockedPastTimeDenomResponse, encodeOsmosisLockupLockedDenomRequest, encodeOsmosisLockupLockedDenomResponse, encodeOsmosisLockupLockedRequest, encodeOsmosisLockupLockedResponse, encodeOsmosisLockupLockRewardReceiverRequest, encodeOsmosisLockupLockRewardReceiverResponse, encodeOsmosisLockupNextLockIDRequest, encodeOsmosisLockupNextLockIDResponse, encodeOsmosisLockupSyntheticLockupsByLockupIDRequest, encodeOsmosisLockupSyntheticLockupsByLockupIDResponse, encodeOsmosisLockupSyntheticLockupByLockupIDRequest, encodeOsmosisLockupSyntheticLockupByLockupIDResponse, encodeOsmosisLockupAccountLockedLongerDurationRequest, encodeOsmosisLockupAccountLockedLongerDurationResponse, encodeOsmosisLockupAccountLockedDurationRequest, encodeOsmosisLockupAccountLockedDurationResponse, encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest, encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse, encodeOsmosisLockupAccountLockedLongerDurationDenomRequest, encodeOsmosisLockupAccountLockedLongerDurationDenomResponse, encodeOsmosisLockupQueryParamsRequest, encodeOsmosisLockupQueryParamsResponse, decodeOsmosisLockupModuleBalanceRequest, decodeOsmosisLockupModuleBalanceResponse, decodeOsmosisLockupModuleLockedAmountRequest, decodeOsmosisLockupModuleLockedAmountResponse, decodeOsmosisLockupAccountUnlockableCoinsRequest, decodeOsmosisLockupAccountUnlockableCoinsResponse, decodeOsmosisLockupAccountUnlockingCoinsRequest, decodeOsmosisLockupAccountUnlockingCoinsResponse, decodeOsmosisLockupAccountLockedCoinsRequest, decodeOsmosisLockupAccountLockedCoinsResponse, decodeOsmosisLockupAccountLockedPastTimeRequest, decodeOsmosisLockupAccountLockedPastTimeResponse, decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest, decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse, decodeOsmosisLockupAccountUnlockedBeforeTimeRequest, decodeOsmosisLockupAccountUnlockedBeforeTimeResponse, decodeOsmosisLockupAccountLockedPastTimeDenomRequest, decodeOsmosisLockupAccountLockedPastTimeDenomResponse, decodeOsmosisLockupLockedDenomRequest, decodeOsmosisLockupLockedDenomResponse, decodeOsmosisLockupLockedRequest, decodeOsmosisLockupLockedResponse, decodeOsmosisLockupLockRewardReceiverRequest, decodeOsmosisLockupLockRewardReceiverResponse, decodeOsmosisLockupNextLockIDRequest, decodeOsmosisLockupNextLockIDResponse, decodeOsmosisLockupSyntheticLockupsByLockupIDRequest, decodeOsmosisLockupSyntheticLockupsByLockupIDResponse, decodeOsmosisLockupSyntheticLockupByLockupIDRequest, decodeOsmosisLockupSyntheticLockupByLockupIDResponse, decodeOsmosisLockupAccountLockedLongerDurationRequest, decodeOsmosisLockupAccountLockedLongerDurationResponse, decodeOsmosisLockupAccountLockedDurationRequest, decodeOsmosisLockupAccountLockedDurationResponse, decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest, decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse, decodeOsmosisLockupAccountLockedLongerDurationDenomRequest, decodeOsmosisLockupAccountLockedLongerDurationDenomResponse, decodeOsmosisLockupQueryParamsRequest, decodeOsmosisLockupQueryParamsResponse } from './osmosis/lockup/query.js';
import { encodeOsmosisLockupMsgLockTokens, encodeOsmosisLockupMsgLockTokensResponse, encodeOsmosisLockupMsgBeginUnlockingAll, encodeOsmosisLockupMsgBeginUnlockingAllResponse, encodeOsmosisLockupMsgBeginUnlocking, encodeOsmosisLockupMsgBeginUnlockingResponse, encodeOsmosisLockupMsgExtendLockup, encodeOsmosisLockupMsgExtendLockupResponse, encodeOsmosisLockupMsgForceUnlock, encodeOsmosisLockupMsgForceUnlockResponse, encodeOsmosisLockupMsgSetRewardReceiverAddress, encodeOsmosisLockupMsgSetRewardReceiverAddressResponse, decodeOsmosisLockupMsgLockTokens, decodeOsmosisLockupMsgLockTokensResponse, decodeOsmosisLockupMsgBeginUnlockingAll, decodeOsmosisLockupMsgBeginUnlockingAllResponse, decodeOsmosisLockupMsgBeginUnlocking, decodeOsmosisLockupMsgBeginUnlockingResponse, decodeOsmosisLockupMsgExtendLockup, decodeOsmosisLockupMsgExtendLockupResponse, decodeOsmosisLockupMsgForceUnlock, decodeOsmosisLockupMsgForceUnlockResponse, decodeOsmosisLockupMsgSetRewardReceiverAddress, decodeOsmosisLockupMsgSetRewardReceiverAddressResponse } from './osmosis/lockup/tx.js';
import { encodeOsmosisMintGenesisState as encodeOsmosisMintV1beta1GenesisState, decodeOsmosisMintGenesisState as decodeOsmosisMintV1beta1GenesisState } from './osmosis/mint/v1beta1/genesis.js';
import { decodeOsmosisMintParams as decodeOsmosisMintV1beta1Params, encodeOsmosisMintParams as encodeOsmosisMintV1beta1Params, decodeOsmosisMintDistributionProportions as decodeOsmosisMintV1beta1DistributionProportions, decodeOsmosisMintWeightedAddress as decodeOsmosisMintV1beta1WeightedAddress, encodeOsmosisMintDistributionProportions as encodeOsmosisMintV1beta1DistributionProportions, encodeOsmosisMintWeightedAddress as encodeOsmosisMintV1beta1WeightedAddress, decodeOsmosisMintMinter as decodeOsmosisMintV1beta1Minter, encodeOsmosisMintMinter as encodeOsmosisMintV1beta1Minter } from './osmosis/mint/v1beta1/mint.js';
import { encodeOsmosisMintQueryParamsRequest as encodeOsmosisMintV1beta1QueryParamsRequest, encodeOsmosisMintQueryParamsResponse as encodeOsmosisMintV1beta1QueryParamsResponse, encodeOsmosisMintQueryEpochProvisionsRequest as encodeOsmosisMintV1beta1QueryEpochProvisionsRequest, encodeOsmosisMintQueryEpochProvisionsResponse as encodeOsmosisMintV1beta1QueryEpochProvisionsResponse, decodeOsmosisMintQueryParamsRequest as decodeOsmosisMintV1beta1QueryParamsRequest, decodeOsmosisMintQueryParamsResponse as decodeOsmosisMintV1beta1QueryParamsResponse, decodeOsmosisMintQueryEpochProvisionsRequest as decodeOsmosisMintV1beta1QueryEpochProvisionsRequest, decodeOsmosisMintQueryEpochProvisionsResponse as decodeOsmosisMintV1beta1QueryEpochProvisionsResponse } from './osmosis/mint/v1beta1/query.js';
import { encodeOsmosisPoolincentivesGenesisState as encodeOsmosisPoolincentivesV1beta1GenesisState, decodeOsmosisPoolincentivesGenesisState as decodeOsmosisPoolincentivesV1beta1GenesisState } from './osmosis/pool-incentives/v1beta1/genesis.js';
import { encodeOsmosisPoolincentivesReplacePoolIncentivesProposal as encodeOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal, encodeOsmosisPoolincentivesUpdatePoolIncentivesProposal as encodeOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal, decodeOsmosisPoolincentivesReplacePoolIncentivesProposal as decodeOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal, decodeOsmosisPoolincentivesUpdatePoolIncentivesProposal as decodeOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal } from './osmosis/pool-incentives/v1beta1/gov.js';
import { decodeOsmosisPoolincentivesDistrRecord as decodeOsmosisPoolincentivesV1beta1DistrRecord, encodeOsmosisPoolincentivesDistrRecord as encodeOsmosisPoolincentivesV1beta1DistrRecord, encodeOsmosisPoolincentivesParams as encodeOsmosisPoolincentivesV1beta1Params, encodeOsmosisPoolincentivesLockableDurationsInfo as encodeOsmosisPoolincentivesV1beta1LockableDurationsInfo, encodeOsmosisPoolincentivesDistrInfo as encodeOsmosisPoolincentivesV1beta1DistrInfo, encodeOsmosisPoolincentivesPoolToGauge as encodeOsmosisPoolincentivesV1beta1PoolToGauge, encodeOsmosisPoolincentivesAnyPoolToInternalGauges as encodeOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges, decodeOsmosisPoolincentivesPoolToGauge as decodeOsmosisPoolincentivesV1beta1PoolToGauge, encodeOsmosisPoolincentivesConcentratedPoolToNoLockGauges as encodeOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges, decodeOsmosisPoolincentivesDistrInfo as decodeOsmosisPoolincentivesV1beta1DistrInfo, decodeOsmosisPoolincentivesParams as decodeOsmosisPoolincentivesV1beta1Params, decodeOsmosisPoolincentivesAnyPoolToInternalGauges as decodeOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges, decodeOsmosisPoolincentivesConcentratedPoolToNoLockGauges as decodeOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges, decodeOsmosisPoolincentivesLockableDurationsInfo as decodeOsmosisPoolincentivesV1beta1LockableDurationsInfo } from './osmosis/pool-incentives/v1beta1/incentives.js';
import { encodeOsmosisPoolincentivesQueryGaugeIdsRequest as encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest, encodeOsmosisPoolincentivesQueryGaugeIdsResponse as encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse, decodeOsmosisPoolincentivesQueryGaugeIdsResponseGaugeIdWithDuration as decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration, encodeOsmosisPoolincentivesQueryGaugeIdsResponseGaugeIdWithDuration as encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration, encodeOsmosisPoolincentivesQueryDistrInfoRequest as encodeOsmosisPoolincentivesV1beta1QueryDistrInfoRequest, encodeOsmosisPoolincentivesQueryDistrInfoResponse as encodeOsmosisPoolincentivesV1beta1QueryDistrInfoResponse, encodeOsmosisPoolincentivesQueryParamsRequest as encodeOsmosisPoolincentivesV1beta1QueryParamsRequest, encodeOsmosisPoolincentivesQueryParamsResponse as encodeOsmosisPoolincentivesV1beta1QueryParamsResponse, encodeOsmosisPoolincentivesQueryLockableDurationsRequest as encodeOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest, encodeOsmosisPoolincentivesQueryLockableDurationsResponse as encodeOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse, encodeOsmosisPoolincentivesQueryIncentivizedPoolsRequest as encodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest, encodeOsmosisPoolincentivesIncentivizedPool as encodeOsmosisPoolincentivesV1beta1IncentivizedPool, encodeOsmosisPoolincentivesQueryIncentivizedPoolsResponse as encodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse, decodeOsmosisPoolincentivesIncentivizedPool as decodeOsmosisPoolincentivesV1beta1IncentivizedPool, encodeOsmosisPoolincentivesQueryExternalIncentiveGaugesRequest as encodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest, encodeOsmosisPoolincentivesQueryExternalIncentiveGaugesResponse as encodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse, decodeOsmosisPoolincentivesQueryGaugeIdsRequest as decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest, decodeOsmosisPoolincentivesQueryGaugeIdsResponse as decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse, decodeOsmosisPoolincentivesQueryDistrInfoRequest as decodeOsmosisPoolincentivesV1beta1QueryDistrInfoRequest, decodeOsmosisPoolincentivesQueryDistrInfoResponse as decodeOsmosisPoolincentivesV1beta1QueryDistrInfoResponse, decodeOsmosisPoolincentivesQueryParamsRequest as decodeOsmosisPoolincentivesV1beta1QueryParamsRequest, decodeOsmosisPoolincentivesQueryParamsResponse as decodeOsmosisPoolincentivesV1beta1QueryParamsResponse, decodeOsmosisPoolincentivesQueryLockableDurationsRequest as decodeOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest, decodeOsmosisPoolincentivesQueryLockableDurationsResponse as decodeOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse, decodeOsmosisPoolincentivesQueryIncentivizedPoolsRequest as decodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest, decodeOsmosisPoolincentivesQueryIncentivizedPoolsResponse as decodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse, decodeOsmosisPoolincentivesQueryExternalIncentiveGaugesRequest as decodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest, decodeOsmosisPoolincentivesQueryExternalIncentiveGaugesResponse as decodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse } from './osmosis/pool-incentives/v1beta1/query.js';
import { encodeOsmosisPoolincentivesMigrationRecords as encodeOsmosisPoolincentivesV1beta1MigrationRecords, decodeOsmosisPoolincentivesBalancerToConcentratedPoolLink as decodeOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink, encodeOsmosisPoolincentivesBalancerToConcentratedPoolLink as encodeOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink, decodeOsmosisPoolincentivesMigrationRecords as decodeOsmosisPoolincentivesV1beta1MigrationRecords } from './osmosis/pool-incentives/v1beta1/shared.js';
import { decodeOsmosisPoolmanagerParams as decodeOsmosisPoolmanagerV1beta1Params, encodeOsmosisPoolmanagerParams as encodeOsmosisPoolmanagerV1beta1Params, decodeOsmosisPoolmanagerTakerFeeParams as decodeOsmosisPoolmanagerV1beta1TakerFeeParams, encodeOsmosisPoolmanagerTakerFeeParams as encodeOsmosisPoolmanagerV1beta1TakerFeeParams, decodeOsmosisPoolmanagerTakerFeeDistributionPercentage as decodeOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage, encodeOsmosisPoolmanagerTakerFeeDistributionPercentage as encodeOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage, encodeOsmosisPoolmanagerGenesisState as encodeOsmosisPoolmanagerV1beta1GenesisState, decodeOsmosisPoolmanagerGenesisState as decodeOsmosisPoolmanagerV1beta1GenesisState } from './osmosis/poolmanager/v1beta1/genesis.js';
import { encodeOsmosisPoolmanagerDenomPairTakerFeeProposal as encodeOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal, decodeOsmosisPoolmanagerDenomPairTakerFeeProposal as decodeOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal } from './osmosis/poolmanager/v1beta1/gov.js';
import { encodeOsmosisPoolmanagerModuleRoute as encodeOsmosisPoolmanagerV1beta1ModuleRoute, JsonToProtoEnumOsmosisPoolmanagerPoolType as JsonToProtoEnumOsmosisPoolmanagerV1beta1PoolType, ProtoToJsonEnumOsmosisPoolmanagerPoolType as ProtoToJsonEnumOsmosisPoolmanagerV1beta1PoolType, decodeOsmosisPoolmanagerModuleRoute as decodeOsmosisPoolmanagerV1beta1ModuleRoute } from './osmosis/poolmanager/v1beta1/module_route.js';
import { encodeOsmosisPoolmanagerParamsRequest as encodeOsmosisPoolmanagerV1beta1ParamsRequest, encodeOsmosisPoolmanagerParamsResponse as encodeOsmosisPoolmanagerV1beta1ParamsResponse, encodeOsmosisPoolmanagerEstimateSwapExactAmountInRequest as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest, encodeOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest, encodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest as encodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest, encodeOsmosisPoolmanagerEstimateSwapExactAmountInResponse as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse, encodeOsmosisPoolmanagerEstimateSwapExactAmountOutRequest as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest, encodeOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest, encodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest as encodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest, encodeOsmosisPoolmanagerEstimateSwapExactAmountOutResponse as encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse, encodeOsmosisPoolmanagerNumPoolsRequest as encodeOsmosisPoolmanagerV1beta1NumPoolsRequest, encodeOsmosisPoolmanagerNumPoolsResponse as encodeOsmosisPoolmanagerV1beta1NumPoolsResponse, encodeOsmosisPoolmanagerPoolRequest as encodeOsmosisPoolmanagerV1beta1PoolRequest, encodeOsmosisPoolmanagerPoolResponse as encodeOsmosisPoolmanagerV1beta1PoolResponse, encodeOsmosisPoolmanagerAllPoolsRequest as encodeOsmosisPoolmanagerV1beta1AllPoolsRequest, encodeOsmosisPoolmanagerAllPoolsResponse as encodeOsmosisPoolmanagerV1beta1AllPoolsResponse, encodeOsmosisPoolmanagerSpotPriceRequest as encodeOsmosisPoolmanagerV1beta1SpotPriceRequest, encodeOsmosisPoolmanagerSpotPriceResponse as encodeOsmosisPoolmanagerV1beta1SpotPriceResponse, encodeOsmosisPoolmanagerTotalPoolLiquidityRequest as encodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest, encodeOsmosisPoolmanagerTotalPoolLiquidityResponse as encodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse, encodeOsmosisPoolmanagerTotalLiquidityRequest as encodeOsmosisPoolmanagerV1beta1TotalLiquidityRequest, encodeOsmosisPoolmanagerTotalLiquidityResponse as encodeOsmosisPoolmanagerV1beta1TotalLiquidityResponse, encodeOsmosisPoolmanagerTotalVolumeForPoolRequest as encodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest, encodeOsmosisPoolmanagerTotalVolumeForPoolResponse as encodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse, encodeOsmosisPoolmanagerTradingPairTakerFeeRequest as encodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest, encodeOsmosisPoolmanagerTradingPairTakerFeeResponse as encodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse, encodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest as encodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest, encodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse as encodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse, decodeOsmosisPoolmanagerParamsRequest as decodeOsmosisPoolmanagerV1beta1ParamsRequest, decodeOsmosisPoolmanagerParamsResponse as decodeOsmosisPoolmanagerV1beta1ParamsResponse, decodeOsmosisPoolmanagerEstimateSwapExactAmountInRequest as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest, decodeOsmosisPoolmanagerEstimateSwapExactAmountInWithPrimitiveTypesRequest as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest, decodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountInRequest as decodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest, decodeOsmosisPoolmanagerEstimateSwapExactAmountInResponse as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse, decodeOsmosisPoolmanagerEstimateSwapExactAmountOutRequest as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest, decodeOsmosisPoolmanagerEstimateSwapExactAmountOutWithPrimitiveTypesRequest as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest, decodeOsmosisPoolmanagerEstimateSinglePoolSwapExactAmountOutRequest as decodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest, decodeOsmosisPoolmanagerEstimateSwapExactAmountOutResponse as decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse, decodeOsmosisPoolmanagerNumPoolsRequest as decodeOsmosisPoolmanagerV1beta1NumPoolsRequest, decodeOsmosisPoolmanagerNumPoolsResponse as decodeOsmosisPoolmanagerV1beta1NumPoolsResponse, decodeOsmosisPoolmanagerPoolRequest as decodeOsmosisPoolmanagerV1beta1PoolRequest, decodeOsmosisPoolmanagerPoolResponse as decodeOsmosisPoolmanagerV1beta1PoolResponse, decodeOsmosisPoolmanagerAllPoolsRequest as decodeOsmosisPoolmanagerV1beta1AllPoolsRequest, decodeOsmosisPoolmanagerAllPoolsResponse as decodeOsmosisPoolmanagerV1beta1AllPoolsResponse, decodeOsmosisPoolmanagerSpotPriceRequest as decodeOsmosisPoolmanagerV1beta1SpotPriceRequest, decodeOsmosisPoolmanagerSpotPriceResponse as decodeOsmosisPoolmanagerV1beta1SpotPriceResponse, decodeOsmosisPoolmanagerTotalPoolLiquidityRequest as decodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest, decodeOsmosisPoolmanagerTotalPoolLiquidityResponse as decodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse, decodeOsmosisPoolmanagerTotalLiquidityRequest as decodeOsmosisPoolmanagerV1beta1TotalLiquidityRequest, decodeOsmosisPoolmanagerTotalLiquidityResponse as decodeOsmosisPoolmanagerV1beta1TotalLiquidityResponse, decodeOsmosisPoolmanagerTotalVolumeForPoolRequest as decodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest, decodeOsmosisPoolmanagerTotalVolumeForPoolResponse as decodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse, decodeOsmosisPoolmanagerTradingPairTakerFeeRequest as decodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest, decodeOsmosisPoolmanagerTradingPairTakerFeeResponse as decodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse, decodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactRequest as decodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest, decodeOsmosisPoolmanagerEstimateTradeBasedOnPriceImpactResponse as decodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse } from './osmosis/poolmanager/v1beta1/query.js';
import { decodeOsmosisPoolmanagerSwapAmountInRoute as decodeOsmosisPoolmanagerV1beta1SwapAmountInRoute, encodeOsmosisPoolmanagerSwapAmountInRoute as encodeOsmosisPoolmanagerV1beta1SwapAmountInRoute, decodeOsmosisPoolmanagerSwapAmountOutRoute as decodeOsmosisPoolmanagerV1beta1SwapAmountOutRoute, encodeOsmosisPoolmanagerSwapAmountOutRoute as encodeOsmosisPoolmanagerV1beta1SwapAmountOutRoute, decodeOsmosisPoolmanagerSwapAmountInSplitRoute as decodeOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute, encodeOsmosisPoolmanagerSwapAmountInSplitRoute as encodeOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute, decodeOsmosisPoolmanagerSwapAmountOutSplitRoute as decodeOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute, encodeOsmosisPoolmanagerSwapAmountOutSplitRoute as encodeOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute } from './osmosis/poolmanager/v1beta1/swap_route.js';
import { encodeOsmosisPoolmanagerTrackedVolume as encodeOsmosisPoolmanagerV1beta1TrackedVolume, decodeOsmosisPoolmanagerTrackedVolume as decodeOsmosisPoolmanagerV1beta1TrackedVolume } from './osmosis/poolmanager/v1beta1/tracked_volume.js';
import { encodeOsmosisPoolmanagerMsgSwapExactAmountIn as encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn, encodeOsmosisPoolmanagerMsgSwapExactAmountInResponse as encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse, encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn as encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn, encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse as encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse, encodeOsmosisPoolmanagerMsgSwapExactAmountOut as encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut, encodeOsmosisPoolmanagerMsgSwapExactAmountOutResponse as encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse, encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut as encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut, encodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse as encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse, encodeOsmosisPoolmanagerMsgSetDenomPairTakerFee as encodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee, decodeOsmosisPoolmanagerDenomPairTakerFee as decodeOsmosisPoolmanagerV1beta1DenomPairTakerFee, encodeOsmosisPoolmanagerDenomPairTakerFee as encodeOsmosisPoolmanagerV1beta1DenomPairTakerFee, encodeOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse as encodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse, decodeOsmosisPoolmanagerMsgSwapExactAmountIn as decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn, decodeOsmosisPoolmanagerMsgSwapExactAmountInResponse as decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse, decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountIn as decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn, decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountInResponse as decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse, decodeOsmosisPoolmanagerMsgSwapExactAmountOut as decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut, decodeOsmosisPoolmanagerMsgSwapExactAmountOutResponse as decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse, decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOut as decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut, decodeOsmosisPoolmanagerMsgSplitRouteSwapExactAmountOutResponse as decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse, decodeOsmosisPoolmanagerMsgSetDenomPairTakerFee as decodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee, decodeOsmosisPoolmanagerMsgSetDenomPairTakerFeeResponse as decodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse } from './osmosis/poolmanager/v1beta1/tx.js';
import { encodeOsmosisPoolmanagerSpotPriceRequest as encodeOsmosisPoolmanagerV2SpotPriceRequest, encodeOsmosisPoolmanagerSpotPriceResponse as encodeOsmosisPoolmanagerV2SpotPriceResponse, decodeOsmosisPoolmanagerSpotPriceRequest as decodeOsmosisPoolmanagerV2SpotPriceRequest, decodeOsmosisPoolmanagerSpotPriceResponse as decodeOsmosisPoolmanagerV2SpotPriceResponse } from './osmosis/poolmanager/v2/query.js';
import { encodeOsmosisProtorevGenesisState as encodeOsmosisProtorevV1beta1GenesisState, decodeOsmosisProtorevGenesisState as decodeOsmosisProtorevV1beta1GenesisState } from './osmosis/protorev/v1beta1/genesis.js';
import { encodeOsmosisProtorevSetProtoRevEnabledProposal as encodeOsmosisProtorevV1beta1SetProtoRevEnabledProposal, encodeOsmosisProtorevSetProtoRevAdminAccountProposal as encodeOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal, decodeOsmosisProtorevSetProtoRevEnabledProposal as decodeOsmosisProtorevV1beta1SetProtoRevEnabledProposal, decodeOsmosisProtorevSetProtoRevAdminAccountProposal as decodeOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal } from './osmosis/protorev/v1beta1/gov.js';
import { decodeOsmosisProtorevParams as decodeOsmosisProtorevV1beta1Params, encodeOsmosisProtorevParams as encodeOsmosisProtorevV1beta1Params } from './osmosis/protorev/v1beta1/params.js';
import { decodeOsmosisProtorevTokenPairArbRoutes as decodeOsmosisProtorevV1beta1TokenPairArbRoutes, encodeOsmosisProtorevTokenPairArbRoutes as encodeOsmosisProtorevV1beta1TokenPairArbRoutes, decodeOsmosisProtorevRoute as decodeOsmosisProtorevV1beta1Route, encodeOsmosisProtorevRoute as encodeOsmosisProtorevV1beta1Route, decodeOsmosisProtorevTrade as decodeOsmosisProtorevV1beta1Trade, encodeOsmosisProtorevTrade as encodeOsmosisProtorevV1beta1Trade, decodeOsmosisProtorevInfoByPoolType as decodeOsmosisProtorevV1beta1InfoByPoolType, encodeOsmosisProtorevInfoByPoolType as encodeOsmosisProtorevV1beta1InfoByPoolType, decodeOsmosisProtorevStablePoolInfo as decodeOsmosisProtorevV1beta1StablePoolInfo, decodeOsmosisProtorevBalancerPoolInfo as decodeOsmosisProtorevV1beta1BalancerPoolInfo, decodeOsmosisProtorevConcentratedPoolInfo as decodeOsmosisProtorevV1beta1ConcentratedPoolInfo, decodeOsmosisProtorevCosmwasmPoolInfo as decodeOsmosisProtorevV1beta1CosmwasmPoolInfo, encodeOsmosisProtorevStablePoolInfo as encodeOsmosisProtorevV1beta1StablePoolInfo, encodeOsmosisProtorevBalancerPoolInfo as encodeOsmosisProtorevV1beta1BalancerPoolInfo, encodeOsmosisProtorevConcentratedPoolInfo as encodeOsmosisProtorevV1beta1ConcentratedPoolInfo, encodeOsmosisProtorevCosmwasmPoolInfo as encodeOsmosisProtorevV1beta1CosmwasmPoolInfo, decodeOsmosisProtorevWeightMap as decodeOsmosisProtorevV1beta1WeightMap, encodeOsmosisProtorevWeightMap as encodeOsmosisProtorevV1beta1WeightMap, decodeOsmosisProtorevBaseDenom as decodeOsmosisProtorevV1beta1BaseDenom, encodeOsmosisProtorevBaseDenom as encodeOsmosisProtorevV1beta1BaseDenom, encodeOsmosisProtorevRouteStatistics as encodeOsmosisProtorevV1beta1RouteStatistics, encodeOsmosisProtorevPoolWeights as encodeOsmosisProtorevV1beta1PoolWeights, decodeOsmosisProtorevRouteStatistics as decodeOsmosisProtorevV1beta1RouteStatistics, decodeOsmosisProtorevPoolWeights as decodeOsmosisProtorevV1beta1PoolWeights } from './osmosis/protorev/v1beta1/protorev.js';
import { encodeOsmosisProtorevQueryParamsRequest as encodeOsmosisProtorevV1beta1QueryParamsRequest, encodeOsmosisProtorevQueryParamsResponse as encodeOsmosisProtorevV1beta1QueryParamsResponse, encodeOsmosisProtorevQueryGetProtoRevNumberOfTradesRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest, encodeOsmosisProtorevQueryGetProtoRevNumberOfTradesResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse, encodeOsmosisProtorevQueryGetProtoRevProfitsByDenomRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest, encodeOsmosisProtorevQueryGetProtoRevProfitsByDenomResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse, encodeOsmosisProtorevQueryGetProtoRevAllProfitsRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest, encodeOsmosisProtorevQueryGetProtoRevAllProfitsResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse, encodeOsmosisProtorevQueryGetProtoRevStatisticsByRouteRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest, encodeOsmosisProtorevQueryGetProtoRevStatisticsByRouteResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse, encodeOsmosisProtorevQueryGetProtoRevAllRouteStatisticsRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest, encodeOsmosisProtorevQueryGetProtoRevAllRouteStatisticsResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse, encodeOsmosisProtorevQueryGetProtoRevTokenPairArbRoutesRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest, encodeOsmosisProtorevQueryGetProtoRevTokenPairArbRoutesResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse, encodeOsmosisProtorevQueryGetProtoRevAdminAccountRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest, encodeOsmosisProtorevQueryGetProtoRevAdminAccountResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse, encodeOsmosisProtorevQueryGetProtoRevDeveloperAccountRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest, encodeOsmosisProtorevQueryGetProtoRevDeveloperAccountResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse, encodeOsmosisProtorevQueryGetProtoRevInfoByPoolTypeRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest, encodeOsmosisProtorevQueryGetProtoRevInfoByPoolTypeResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse, encodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerBlockRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest, encodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerBlockResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse, encodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerTxRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest, encodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerTxResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse, encodeOsmosisProtorevQueryGetProtoRevBaseDenomsRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest, encodeOsmosisProtorevQueryGetProtoRevBaseDenomsResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse, encodeOsmosisProtorevQueryGetProtoRevEnabledRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest, encodeOsmosisProtorevQueryGetProtoRevEnabledResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse, encodeOsmosisProtorevQueryGetProtoRevPoolRequest as encodeOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest, encodeOsmosisProtorevQueryGetProtoRevPoolResponse as encodeOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse, decodeOsmosisProtorevQueryParamsRequest as decodeOsmosisProtorevV1beta1QueryParamsRequest, decodeOsmosisProtorevQueryParamsResponse as decodeOsmosisProtorevV1beta1QueryParamsResponse, decodeOsmosisProtorevQueryGetProtoRevNumberOfTradesRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest, decodeOsmosisProtorevQueryGetProtoRevNumberOfTradesResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse, decodeOsmosisProtorevQueryGetProtoRevProfitsByDenomRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest, decodeOsmosisProtorevQueryGetProtoRevProfitsByDenomResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse, decodeOsmosisProtorevQueryGetProtoRevAllProfitsRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest, decodeOsmosisProtorevQueryGetProtoRevAllProfitsResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse, decodeOsmosisProtorevQueryGetProtoRevStatisticsByRouteRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest, decodeOsmosisProtorevQueryGetProtoRevStatisticsByRouteResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse, decodeOsmosisProtorevQueryGetProtoRevAllRouteStatisticsRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest, decodeOsmosisProtorevQueryGetProtoRevAllRouteStatisticsResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse, decodeOsmosisProtorevQueryGetProtoRevTokenPairArbRoutesRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest, decodeOsmosisProtorevQueryGetProtoRevTokenPairArbRoutesResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse, decodeOsmosisProtorevQueryGetProtoRevAdminAccountRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest, decodeOsmosisProtorevQueryGetProtoRevAdminAccountResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse, decodeOsmosisProtorevQueryGetProtoRevDeveloperAccountRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest, decodeOsmosisProtorevQueryGetProtoRevDeveloperAccountResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse, decodeOsmosisProtorevQueryGetProtoRevInfoByPoolTypeRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest, decodeOsmosisProtorevQueryGetProtoRevInfoByPoolTypeResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse, decodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerBlockRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest, decodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerBlockResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse, decodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerTxRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest, decodeOsmosisProtorevQueryGetProtoRevMaxPoolPointsPerTxResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse, decodeOsmosisProtorevQueryGetProtoRevBaseDenomsRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest, decodeOsmosisProtorevQueryGetProtoRevBaseDenomsResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse, decodeOsmosisProtorevQueryGetProtoRevEnabledRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest, decodeOsmosisProtorevQueryGetProtoRevEnabledResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse, decodeOsmosisProtorevQueryGetProtoRevPoolRequest as decodeOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest, decodeOsmosisProtorevQueryGetProtoRevPoolResponse as decodeOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse } from './osmosis/protorev/v1beta1/query.js';
import { encodeOsmosisProtorevMsgSetHotRoutes as encodeOsmosisProtorevV1beta1MsgSetHotRoutes, encodeOsmosisProtorevMsgSetHotRoutesResponse as encodeOsmosisProtorevV1beta1MsgSetHotRoutesResponse, encodeOsmosisProtorevMsgSetDeveloperAccount as encodeOsmosisProtorevV1beta1MsgSetDeveloperAccount, encodeOsmosisProtorevMsgSetDeveloperAccountResponse as encodeOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse, encodeOsmosisProtorevMsgSetInfoByPoolType as encodeOsmosisProtorevV1beta1MsgSetInfoByPoolType, encodeOsmosisProtorevMsgSetInfoByPoolTypeResponse as encodeOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse, encodeOsmosisProtorevMsgSetMaxPoolPointsPerTx as encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx, encodeOsmosisProtorevMsgSetMaxPoolPointsPerTxResponse as encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse, encodeOsmosisProtorevMsgSetMaxPoolPointsPerBlock as encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock, encodeOsmosisProtorevMsgSetMaxPoolPointsPerBlockResponse as encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse, encodeOsmosisProtorevMsgSetBaseDenoms as encodeOsmosisProtorevV1beta1MsgSetBaseDenoms, encodeOsmosisProtorevMsgSetBaseDenomsResponse as encodeOsmosisProtorevV1beta1MsgSetBaseDenomsResponse, decodeOsmosisProtorevMsgSetHotRoutes as decodeOsmosisProtorevV1beta1MsgSetHotRoutes, decodeOsmosisProtorevMsgSetHotRoutesResponse as decodeOsmosisProtorevV1beta1MsgSetHotRoutesResponse, decodeOsmosisProtorevMsgSetDeveloperAccount as decodeOsmosisProtorevV1beta1MsgSetDeveloperAccount, decodeOsmosisProtorevMsgSetDeveloperAccountResponse as decodeOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse, decodeOsmosisProtorevMsgSetInfoByPoolType as decodeOsmosisProtorevV1beta1MsgSetInfoByPoolType, decodeOsmosisProtorevMsgSetInfoByPoolTypeResponse as decodeOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse, decodeOsmosisProtorevMsgSetMaxPoolPointsPerTx as decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx, decodeOsmosisProtorevMsgSetMaxPoolPointsPerTxResponse as decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse, decodeOsmosisProtorevMsgSetMaxPoolPointsPerBlock as decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock, decodeOsmosisProtorevMsgSetMaxPoolPointsPerBlockResponse as decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse, decodeOsmosisProtorevMsgSetBaseDenoms as decodeOsmosisProtorevV1beta1MsgSetBaseDenoms, decodeOsmosisProtorevMsgSetBaseDenomsResponse as decodeOsmosisProtorevV1beta1MsgSetBaseDenomsResponse } from './osmosis/protorev/v1beta1/tx.js';
import { encodeOsmosisStoreNode as encodeOsmosisStoreV1beta1Node, decodeOsmosisStoreChild as decodeOsmosisStoreV1beta1Child, encodeOsmosisStoreChild as encodeOsmosisStoreV1beta1Child, encodeOsmosisStoreLeaf as encodeOsmosisStoreV1beta1Leaf, decodeOsmosisStoreNode as decodeOsmosisStoreV1beta1Node, decodeOsmosisStoreLeaf as decodeOsmosisStoreV1beta1Leaf } from './osmosis/sumtree/v1beta1/tree.js';
import { encodeOsmosisSuperfluidGenesisState, decodeOsmosisSuperfluidGenesisState } from './osmosis/superfluid/genesis.js';
import { decodeOsmosisSuperfluidParams, encodeOsmosisSuperfluidParams } from './osmosis/superfluid/params.js';
import { encodeOsmosisSuperfluidQueryParamsRequest, encodeOsmosisSuperfluidQueryParamsResponse, encodeOsmosisSuperfluidAssetTypeRequest, encodeOsmosisSuperfluidAssetTypeResponse, encodeOsmosisSuperfluidAllAssetsRequest, encodeOsmosisSuperfluidAllAssetsResponse, encodeOsmosisSuperfluidAssetMultiplierRequest, encodeOsmosisSuperfluidAssetMultiplierResponse, encodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo, encodeOsmosisSuperfluidAllIntermediaryAccountsRequest, encodeOsmosisSuperfluidAllIntermediaryAccountsResponse, decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo, encodeOsmosisSuperfluidConnectedIntermediaryAccountRequest, encodeOsmosisSuperfluidConnectedIntermediaryAccountResponse, encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest, encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse, decodeOsmosisSuperfluidDelegations, encodeOsmosisSuperfluidDelegations, encodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest, encodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse, encodeOsmosisSuperfluidSuperfluidDelegationAmountRequest, encodeOsmosisSuperfluidSuperfluidDelegationAmountResponse, encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest, encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse, encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest, encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse, encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest, encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse, encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest, encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse, encodeOsmosisSuperfluidQueryUnpoolWhitelistRequest, encodeOsmosisSuperfluidQueryUnpoolWhitelistResponse, encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest, encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse, encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest, encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse, decodeOsmosisSuperfluidQueryParamsRequest, decodeOsmosisSuperfluidQueryParamsResponse, decodeOsmosisSuperfluidAssetTypeRequest, decodeOsmosisSuperfluidAssetTypeResponse, decodeOsmosisSuperfluidAllAssetsRequest, decodeOsmosisSuperfluidAllAssetsResponse, decodeOsmosisSuperfluidAssetMultiplierRequest, decodeOsmosisSuperfluidAssetMultiplierResponse, decodeOsmosisSuperfluidAllIntermediaryAccountsRequest, decodeOsmosisSuperfluidAllIntermediaryAccountsResponse, decodeOsmosisSuperfluidConnectedIntermediaryAccountRequest, decodeOsmosisSuperfluidConnectedIntermediaryAccountResponse, decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest, decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse, decodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest, decodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse, decodeOsmosisSuperfluidSuperfluidDelegationAmountRequest, decodeOsmosisSuperfluidSuperfluidDelegationAmountResponse, decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest, decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse, decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest, decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse, decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest, decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse, decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest, decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse, decodeOsmosisSuperfluidQueryUnpoolWhitelistRequest, decodeOsmosisSuperfluidQueryUnpoolWhitelistResponse, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse } from './osmosis/superfluid/query.js';
import { JsonToProtoEnumOsmosisSuperfluidSuperfluidAssetType, ProtoToJsonEnumOsmosisSuperfluidSuperfluidAssetType, decodeOsmosisSuperfluidSuperfluidAsset, encodeOsmosisSuperfluidSuperfluidAsset, decodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord, encodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord, decodeOsmosisSuperfluidSuperfluidDelegationRecord, encodeOsmosisSuperfluidSuperfluidDelegationRecord, decodeOsmosisSuperfluidConcentratedPoolUserPositionRecord, encodeOsmosisSuperfluidConcentratedPoolUserPositionRecord, decodeOsmosisSuperfluidSuperfluidIntermediaryAccount, decodeOsmosisSuperfluidLockIdIntermediaryAccountConnection, encodeOsmosisSuperfluidSuperfluidIntermediaryAccount, encodeOsmosisSuperfluidLockIdIntermediaryAccountConnection, encodeOsmosisSuperfluidUnpoolWhitelistedPools, decodeOsmosisSuperfluidUnpoolWhitelistedPools } from './osmosis/superfluid/superfluid.js';
import { encodeOsmosisSuperfluidMsgSuperfluidDelegate, encodeOsmosisSuperfluidMsgSuperfluidDelegateResponse, encodeOsmosisSuperfluidMsgSuperfluidUndelegate, encodeOsmosisSuperfluidMsgSuperfluidUndelegateResponse, encodeOsmosisSuperfluidMsgSuperfluidUnbondLock, encodeOsmosisSuperfluidMsgSuperfluidUnbondLockResponse, encodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock, encodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse, encodeOsmosisSuperfluidMsgLockAndSuperfluidDelegate, encodeOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse, encodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate, encodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse, encodeOsmosisSuperfluidMsgUnPoolWhitelistedPool, encodeOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse, encodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition, encodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse, encodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition, encodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse, encodeOsmosisSuperfluidMsgUnbondConvertAndStake, encodeOsmosisSuperfluidMsgUnbondConvertAndStakeResponse, decodeOsmosisSuperfluidMsgSuperfluidDelegate, decodeOsmosisSuperfluidMsgSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgSuperfluidUndelegate, decodeOsmosisSuperfluidMsgSuperfluidUndelegateResponse, decodeOsmosisSuperfluidMsgSuperfluidUnbondLock, decodeOsmosisSuperfluidMsgSuperfluidUnbondLockResponse, decodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock, decodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse, decodeOsmosisSuperfluidMsgLockAndSuperfluidDelegate, decodeOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate, decodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgUnPoolWhitelistedPool, decodeOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse, decodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition, decodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse, decodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition, decodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse, decodeOsmosisSuperfluidMsgUnbondConvertAndStake, decodeOsmosisSuperfluidMsgUnbondConvertAndStakeResponse } from './osmosis/superfluid/tx.js';
import { encodeOsmosisSuperfluidSetSuperfluidAssetsProposal as encodeOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal, encodeOsmosisSuperfluidRemoveSuperfluidAssetsProposal as encodeOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal, encodeOsmosisSuperfluidUpdateUnpoolWhiteListProposal as encodeOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal, decodeOsmosisSuperfluidSetSuperfluidAssetsProposal as decodeOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal, decodeOsmosisSuperfluidRemoveSuperfluidAssetsProposal as decodeOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal, decodeOsmosisSuperfluidUpdateUnpoolWhiteListProposal as decodeOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal } from './osmosis/superfluid/v1beta1/gov.js';
import { decodeOsmosisTokenfactoryDenomAuthorityMetadata as decodeOsmosisTokenfactoryV1beta1DenomAuthorityMetadata, encodeOsmosisTokenfactoryDenomAuthorityMetadata as encodeOsmosisTokenfactoryV1beta1DenomAuthorityMetadata } from './osmosis/tokenfactory/v1beta1/authorityMetadata.js';
import { encodeOsmosisTokenfactoryGenesisState as encodeOsmosisTokenfactoryV1beta1GenesisState, decodeOsmosisTokenfactoryGenesisDenom as decodeOsmosisTokenfactoryV1beta1GenesisDenom, encodeOsmosisTokenfactoryGenesisDenom as encodeOsmosisTokenfactoryV1beta1GenesisDenom, decodeOsmosisTokenfactoryGenesisState as decodeOsmosisTokenfactoryV1beta1GenesisState } from './osmosis/tokenfactory/v1beta1/genesis.js';
import { decodeOsmosisTokenfactoryParams as decodeOsmosisTokenfactoryV1beta1Params, encodeOsmosisTokenfactoryParams as encodeOsmosisTokenfactoryV1beta1Params } from './osmosis/tokenfactory/v1beta1/params.js';
import { encodeOsmosisTokenfactoryQueryParamsRequest as encodeOsmosisTokenfactoryV1beta1QueryParamsRequest, encodeOsmosisTokenfactoryQueryParamsResponse as encodeOsmosisTokenfactoryV1beta1QueryParamsResponse, encodeOsmosisTokenfactoryQueryDenomAuthorityMetadataRequest as encodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest, encodeOsmosisTokenfactoryQueryDenomAuthorityMetadataResponse as encodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse, encodeOsmosisTokenfactoryQueryDenomsFromCreatorRequest as encodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest, encodeOsmosisTokenfactoryQueryDenomsFromCreatorResponse as encodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse, encodeOsmosisTokenfactoryQueryBeforeSendHookAddressRequest as encodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest, encodeOsmosisTokenfactoryQueryBeforeSendHookAddressResponse as encodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse, decodeOsmosisTokenfactoryQueryParamsRequest as decodeOsmosisTokenfactoryV1beta1QueryParamsRequest, decodeOsmosisTokenfactoryQueryParamsResponse as decodeOsmosisTokenfactoryV1beta1QueryParamsResponse, decodeOsmosisTokenfactoryQueryDenomAuthorityMetadataRequest as decodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest, decodeOsmosisTokenfactoryQueryDenomAuthorityMetadataResponse as decodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse, decodeOsmosisTokenfactoryQueryDenomsFromCreatorRequest as decodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest, decodeOsmosisTokenfactoryQueryDenomsFromCreatorResponse as decodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse, decodeOsmosisTokenfactoryQueryBeforeSendHookAddressRequest as decodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest, decodeOsmosisTokenfactoryQueryBeforeSendHookAddressResponse as decodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse } from './osmosis/tokenfactory/v1beta1/query.js';
import { encodeOsmosisTokenfactoryMsgCreateDenom as encodeOsmosisTokenfactoryV1beta1MsgCreateDenom, encodeOsmosisTokenfactoryMsgCreateDenomResponse as encodeOsmosisTokenfactoryV1beta1MsgCreateDenomResponse, encodeOsmosisTokenfactoryMsgMint as encodeOsmosisTokenfactoryV1beta1MsgMint, encodeOsmosisTokenfactoryMsgMintResponse as encodeOsmosisTokenfactoryV1beta1MsgMintResponse, encodeOsmosisTokenfactoryMsgBurn as encodeOsmosisTokenfactoryV1beta1MsgBurn, encodeOsmosisTokenfactoryMsgBurnResponse as encodeOsmosisTokenfactoryV1beta1MsgBurnResponse, encodeOsmosisTokenfactoryMsgChangeAdmin as encodeOsmosisTokenfactoryV1beta1MsgChangeAdmin, encodeOsmosisTokenfactoryMsgChangeAdminResponse as encodeOsmosisTokenfactoryV1beta1MsgChangeAdminResponse, encodeOsmosisTokenfactoryMsgSetBeforeSendHook as encodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook, encodeOsmosisTokenfactoryMsgSetBeforeSendHookResponse as encodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse, encodeOsmosisTokenfactoryMsgSetDenomMetadata as encodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadata, encodeOsmosisTokenfactoryMsgSetDenomMetadataResponse as encodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse, encodeOsmosisTokenfactoryMsgForceTransfer as encodeOsmosisTokenfactoryV1beta1MsgForceTransfer, encodeOsmosisTokenfactoryMsgForceTransferResponse as encodeOsmosisTokenfactoryV1beta1MsgForceTransferResponse, decodeOsmosisTokenfactoryMsgCreateDenom as decodeOsmosisTokenfactoryV1beta1MsgCreateDenom, decodeOsmosisTokenfactoryMsgCreateDenomResponse as decodeOsmosisTokenfactoryV1beta1MsgCreateDenomResponse, decodeOsmosisTokenfactoryMsgMint as decodeOsmosisTokenfactoryV1beta1MsgMint, decodeOsmosisTokenfactoryMsgMintResponse as decodeOsmosisTokenfactoryV1beta1MsgMintResponse, decodeOsmosisTokenfactoryMsgBurn as decodeOsmosisTokenfactoryV1beta1MsgBurn, decodeOsmosisTokenfactoryMsgBurnResponse as decodeOsmosisTokenfactoryV1beta1MsgBurnResponse, decodeOsmosisTokenfactoryMsgChangeAdmin as decodeOsmosisTokenfactoryV1beta1MsgChangeAdmin, decodeOsmosisTokenfactoryMsgChangeAdminResponse as decodeOsmosisTokenfactoryV1beta1MsgChangeAdminResponse, decodeOsmosisTokenfactoryMsgSetBeforeSendHook as decodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook, decodeOsmosisTokenfactoryMsgSetBeforeSendHookResponse as decodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse, decodeOsmosisTokenfactoryMsgSetDenomMetadata as decodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadata, decodeOsmosisTokenfactoryMsgSetDenomMetadataResponse as decodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse, decodeOsmosisTokenfactoryMsgForceTransfer as decodeOsmosisTokenfactoryV1beta1MsgForceTransfer, decodeOsmosisTokenfactoryMsgForceTransferResponse as decodeOsmosisTokenfactoryV1beta1MsgForceTransferResponse } from './osmosis/tokenfactory/v1beta1/tx.js';
import { decodeOsmosisTwapParams as decodeOsmosisTwapV1beta1Params, encodeOsmosisTwapParams as encodeOsmosisTwapV1beta1Params, encodeOsmosisTwapGenesisState as encodeOsmosisTwapV1beta1GenesisState, decodeOsmosisTwapGenesisState as decodeOsmosisTwapV1beta1GenesisState } from './osmosis/twap/v1beta1/genesis.js';
import { encodeOsmosisTwapArithmeticTwapRequest as encodeOsmosisTwapV1beta1ArithmeticTwapRequest, encodeOsmosisTwapArithmeticTwapResponse as encodeOsmosisTwapV1beta1ArithmeticTwapResponse, encodeOsmosisTwapArithmeticTwapToNowRequest as encodeOsmosisTwapV1beta1ArithmeticTwapToNowRequest, encodeOsmosisTwapArithmeticTwapToNowResponse as encodeOsmosisTwapV1beta1ArithmeticTwapToNowResponse, encodeOsmosisTwapGeometricTwapRequest as encodeOsmosisTwapV1beta1GeometricTwapRequest, encodeOsmosisTwapGeometricTwapResponse as encodeOsmosisTwapV1beta1GeometricTwapResponse, encodeOsmosisTwapGeometricTwapToNowRequest as encodeOsmosisTwapV1beta1GeometricTwapToNowRequest, encodeOsmosisTwapGeometricTwapToNowResponse as encodeOsmosisTwapV1beta1GeometricTwapToNowResponse, encodeOsmosisTwapParamsRequest as encodeOsmosisTwapV1beta1ParamsRequest, encodeOsmosisTwapParamsResponse as encodeOsmosisTwapV1beta1ParamsResponse, decodeOsmosisTwapArithmeticTwapRequest as decodeOsmosisTwapV1beta1ArithmeticTwapRequest, decodeOsmosisTwapArithmeticTwapResponse as decodeOsmosisTwapV1beta1ArithmeticTwapResponse, decodeOsmosisTwapArithmeticTwapToNowRequest as decodeOsmosisTwapV1beta1ArithmeticTwapToNowRequest, decodeOsmosisTwapArithmeticTwapToNowResponse as decodeOsmosisTwapV1beta1ArithmeticTwapToNowResponse, decodeOsmosisTwapGeometricTwapRequest as decodeOsmosisTwapV1beta1GeometricTwapRequest, decodeOsmosisTwapGeometricTwapResponse as decodeOsmosisTwapV1beta1GeometricTwapResponse, decodeOsmosisTwapGeometricTwapToNowRequest as decodeOsmosisTwapV1beta1GeometricTwapToNowRequest, decodeOsmosisTwapGeometricTwapToNowResponse as decodeOsmosisTwapV1beta1GeometricTwapToNowResponse, decodeOsmosisTwapParamsRequest as decodeOsmosisTwapV1beta1ParamsRequest, decodeOsmosisTwapParamsResponse as decodeOsmosisTwapV1beta1ParamsResponse } from './osmosis/twap/v1beta1/query.js';
import { decodeOsmosisTwapTwapRecord as decodeOsmosisTwapV1beta1TwapRecord, encodeOsmosisTwapTwapRecord as encodeOsmosisTwapV1beta1TwapRecord } from './osmosis/twap/v1beta1/twap_record.js';
import { decodeOsmosisTxfeesFeeToken as decodeOsmosisTxfeesV1beta1FeeToken, encodeOsmosisTxfeesFeeToken as encodeOsmosisTxfeesV1beta1FeeToken } from './osmosis/txfees/v1beta1/feetoken.js';
import { encodeOsmosisTxfeesGenesisState as encodeOsmosisTxfeesV1beta1GenesisState, decodeOsmosisTxfeesGenesisState as decodeOsmosisTxfeesV1beta1GenesisState } from './osmosis/txfees/v1beta1/genesis.js';
import { encodeOsmosisTxfeesUpdateFeeTokenProposal as encodeOsmosisTxfeesV1beta1UpdateFeeTokenProposal, decodeOsmosisTxfeesUpdateFeeTokenProposal as decodeOsmosisTxfeesV1beta1UpdateFeeTokenProposal } from './osmosis/txfees/v1beta1/gov.js';
import { encodeOsmosisTxfeesQueryFeeTokensRequest as encodeOsmosisTxfeesV1beta1QueryFeeTokensRequest, encodeOsmosisTxfeesQueryFeeTokensResponse as encodeOsmosisTxfeesV1beta1QueryFeeTokensResponse, encodeOsmosisTxfeesQueryDenomSpotPriceRequest as encodeOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest, encodeOsmosisTxfeesQueryDenomSpotPriceResponse as encodeOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse, encodeOsmosisTxfeesQueryDenomPoolIdRequest as encodeOsmosisTxfeesV1beta1QueryDenomPoolIdRequest, encodeOsmosisTxfeesQueryDenomPoolIdResponse as encodeOsmosisTxfeesV1beta1QueryDenomPoolIdResponse, encodeOsmosisTxfeesQueryBaseDenomRequest as encodeOsmosisTxfeesV1beta1QueryBaseDenomRequest, encodeOsmosisTxfeesQueryBaseDenomResponse as encodeOsmosisTxfeesV1beta1QueryBaseDenomResponse, decodeOsmosisTxfeesQueryFeeTokensRequest as decodeOsmosisTxfeesV1beta1QueryFeeTokensRequest, decodeOsmosisTxfeesQueryFeeTokensResponse as decodeOsmosisTxfeesV1beta1QueryFeeTokensResponse, decodeOsmosisTxfeesQueryDenomSpotPriceRequest as decodeOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest, decodeOsmosisTxfeesQueryDenomSpotPriceResponse as decodeOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse, decodeOsmosisTxfeesQueryDenomPoolIdRequest as decodeOsmosisTxfeesV1beta1QueryDenomPoolIdRequest, decodeOsmosisTxfeesQueryDenomPoolIdResponse as decodeOsmosisTxfeesV1beta1QueryDenomPoolIdResponse, decodeOsmosisTxfeesQueryBaseDenomRequest as decodeOsmosisTxfeesV1beta1QueryBaseDenomRequest, decodeOsmosisTxfeesQueryBaseDenomResponse as decodeOsmosisTxfeesV1beta1QueryBaseDenomResponse } from './osmosis/txfees/v1beta1/query.js';
import { encodeOsmosisValsetprefUserValidatorPreferencesRequest as encodeOsmosisValsetprefV1beta1UserValidatorPreferencesRequest, encodeOsmosisValsetprefUserValidatorPreferencesResponse as encodeOsmosisValsetprefV1beta1UserValidatorPreferencesResponse, decodeOsmosisValsetprefUserValidatorPreferencesRequest as decodeOsmosisValsetprefV1beta1UserValidatorPreferencesRequest, decodeOsmosisValsetprefUserValidatorPreferencesResponse as decodeOsmosisValsetprefV1beta1UserValidatorPreferencesResponse } from './osmosis/valset-pref/v1beta1/query.js';
import { decodeOsmosisValsetprefValidatorPreference as decodeOsmosisValsetprefV1beta1ValidatorPreference, encodeOsmosisValsetprefValidatorPreference as encodeOsmosisValsetprefV1beta1ValidatorPreference, encodeOsmosisValsetprefValidatorSetPreferences as encodeOsmosisValsetprefV1beta1ValidatorSetPreferences, decodeOsmosisValsetprefValidatorSetPreferences as decodeOsmosisValsetprefV1beta1ValidatorSetPreferences } from './osmosis/valset-pref/v1beta1/state.js';
import { encodeOsmosisValsetprefMsgSetValidatorSetPreference as encodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreference, encodeOsmosisValsetprefMsgSetValidatorSetPreferenceResponse as encodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse, encodeOsmosisValsetprefMsgDelegateToValidatorSet as encodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSet, encodeOsmosisValsetprefMsgDelegateToValidatorSetResponse as encodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse, encodeOsmosisValsetprefMsgUndelegateFromValidatorSet as encodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet, encodeOsmosisValsetprefMsgUndelegateFromValidatorSetResponse as encodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse, encodeOsmosisValsetprefMsgUndelegateFromRebalancedValidatorSet as encodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet, encodeOsmosisValsetprefMsgUndelegateFromRebalancedValidatorSetResponse as encodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse, encodeOsmosisValsetprefMsgRedelegateValidatorSet as encodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSet, encodeOsmosisValsetprefMsgRedelegateValidatorSetResponse as encodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse, encodeOsmosisValsetprefMsgWithdrawDelegationRewards as encodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards, encodeOsmosisValsetprefMsgWithdrawDelegationRewardsResponse as encodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse, encodeOsmosisValsetprefMsgDelegateBondedTokens as encodeOsmosisValsetprefV1beta1MsgDelegateBondedTokens, encodeOsmosisValsetprefMsgDelegateBondedTokensResponse as encodeOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse, decodeOsmosisValsetprefMsgSetValidatorSetPreference as decodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreference, decodeOsmosisValsetprefMsgSetValidatorSetPreferenceResponse as decodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse, decodeOsmosisValsetprefMsgDelegateToValidatorSet as decodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSet, decodeOsmosisValsetprefMsgDelegateToValidatorSetResponse as decodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse, decodeOsmosisValsetprefMsgUndelegateFromValidatorSet as decodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet, decodeOsmosisValsetprefMsgUndelegateFromValidatorSetResponse as decodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse, decodeOsmosisValsetprefMsgUndelegateFromRebalancedValidatorSet as decodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet, decodeOsmosisValsetprefMsgUndelegateFromRebalancedValidatorSetResponse as decodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse, decodeOsmosisValsetprefMsgRedelegateValidatorSet as decodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSet, decodeOsmosisValsetprefMsgRedelegateValidatorSetResponse as decodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse, decodeOsmosisValsetprefMsgWithdrawDelegationRewards as decodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards, decodeOsmosisValsetprefMsgWithdrawDelegationRewardsResponse as decodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse, decodeOsmosisValsetprefMsgDelegateBondedTokens as decodeOsmosisValsetprefV1beta1MsgDelegateBondedTokens, decodeOsmosisValsetprefMsgDelegateBondedTokensResponse as decodeOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse } from './osmosis/valset-pref/v1beta1/tx.js';
import { encodeSecretComputeGenesisState as encodeSecretComputeV1beta1GenesisState, decodeSecretComputeCode as decodeSecretComputeV1beta1Code, decodeSecretComputeContract as decodeSecretComputeV1beta1Contract, decodeSecretComputeSequence as decodeSecretComputeV1beta1Sequence, encodeSecretComputeCode as encodeSecretComputeV1beta1Code, encodeSecretComputeContract as encodeSecretComputeV1beta1Contract, encodeSecretComputeSequence as encodeSecretComputeV1beta1Sequence, decodeSecretComputeGenesisState as decodeSecretComputeV1beta1GenesisState } from './secret/compute/v1beta1/genesis.js';
import { encodeSecretComputeMsgStoreCode as encodeSecretComputeV1beta1MsgStoreCode, encodeSecretComputeMsgStoreCodeResponse as encodeSecretComputeV1beta1MsgStoreCodeResponse, encodeSecretComputeMsgInstantiateContract as encodeSecretComputeV1beta1MsgInstantiateContract, encodeSecretComputeMsgInstantiateContractResponse as encodeSecretComputeV1beta1MsgInstantiateContractResponse, encodeSecretComputeMsgExecuteContract as encodeSecretComputeV1beta1MsgExecuteContract, encodeSecretComputeMsgExecuteContractResponse as encodeSecretComputeV1beta1MsgExecuteContractResponse, encodeSecretComputeMsgMigrateContract as encodeSecretComputeV1beta1MsgMigrateContract, encodeSecretComputeMsgMigrateContractResponse as encodeSecretComputeV1beta1MsgMigrateContractResponse, encodeSecretComputeMsgUpdateAdmin as encodeSecretComputeV1beta1MsgUpdateAdmin, encodeSecretComputeMsgUpdateAdminResponse as encodeSecretComputeV1beta1MsgUpdateAdminResponse, encodeSecretComputeMsgClearAdmin as encodeSecretComputeV1beta1MsgClearAdmin, encodeSecretComputeMsgClearAdminResponse as encodeSecretComputeV1beta1MsgClearAdminResponse, decodeSecretComputeMsgStoreCode as decodeSecretComputeV1beta1MsgStoreCode, decodeSecretComputeMsgStoreCodeResponse as decodeSecretComputeV1beta1MsgStoreCodeResponse, decodeSecretComputeMsgInstantiateContract as decodeSecretComputeV1beta1MsgInstantiateContract, decodeSecretComputeMsgInstantiateContractResponse as decodeSecretComputeV1beta1MsgInstantiateContractResponse, decodeSecretComputeMsgExecuteContract as decodeSecretComputeV1beta1MsgExecuteContract, decodeSecretComputeMsgExecuteContractResponse as decodeSecretComputeV1beta1MsgExecuteContractResponse, decodeSecretComputeMsgMigrateContract as decodeSecretComputeV1beta1MsgMigrateContract, decodeSecretComputeMsgMigrateContractResponse as decodeSecretComputeV1beta1MsgMigrateContractResponse, decodeSecretComputeMsgUpdateAdmin as decodeSecretComputeV1beta1MsgUpdateAdmin, decodeSecretComputeMsgUpdateAdminResponse as decodeSecretComputeV1beta1MsgUpdateAdminResponse, decodeSecretComputeMsgClearAdmin as decodeSecretComputeV1beta1MsgClearAdmin, decodeSecretComputeMsgClearAdminResponse as decodeSecretComputeV1beta1MsgClearAdminResponse } from './secret/compute/v1beta1/msg.js';
import { encodeSecretComputeQuerySecretContractRequest as encodeSecretComputeV1beta1QuerySecretContractRequest, encodeSecretComputeQueryByLabelRequest as encodeSecretComputeV1beta1QueryByLabelRequest, encodeSecretComputeQueryByContractAddressRequest as encodeSecretComputeV1beta1QueryByContractAddressRequest, encodeSecretComputeQueryByCodeIdRequest as encodeSecretComputeV1beta1QueryByCodeIdRequest, encodeSecretComputeQuerySecretContractResponse as encodeSecretComputeV1beta1QuerySecretContractResponse, encodeSecretComputeQueryContractInfoResponse as encodeSecretComputeV1beta1QueryContractInfoResponse, encodeSecretComputeContractInfoWithAddress as encodeSecretComputeV1beta1ContractInfoWithAddress, encodeSecretComputeQueryContractsByCodeIdResponse as encodeSecretComputeV1beta1QueryContractsByCodeIdResponse, decodeSecretComputeContractInfoWithAddress as decodeSecretComputeV1beta1ContractInfoWithAddress, encodeSecretComputeCodeInfoResponse as encodeSecretComputeV1beta1CodeInfoResponse, encodeSecretComputeQueryCodeResponse as encodeSecretComputeV1beta1QueryCodeResponse, decodeSecretComputeCodeInfoResponse as decodeSecretComputeV1beta1CodeInfoResponse, encodeSecretComputeQueryCodesResponse as encodeSecretComputeV1beta1QueryCodesResponse, encodeSecretComputeQueryContractAddressResponse as encodeSecretComputeV1beta1QueryContractAddressResponse, encodeSecretComputeQueryContractLabelResponse as encodeSecretComputeV1beta1QueryContractLabelResponse, encodeSecretComputeQueryCodeHashResponse as encodeSecretComputeV1beta1QueryCodeHashResponse, encodeSecretComputeDecryptedAnswer as encodeSecretComputeV1beta1DecryptedAnswer, encodeSecretComputeDecryptedAnswers as encodeSecretComputeV1beta1DecryptedAnswers, decodeSecretComputeDecryptedAnswer as decodeSecretComputeV1beta1DecryptedAnswer, encodeSecretComputeQueryContractHistoryRequest as encodeSecretComputeV1beta1QueryContractHistoryRequest, encodeSecretComputeQueryContractHistoryResponse as encodeSecretComputeV1beta1QueryContractHistoryResponse, decodeSecretComputeQuerySecretContractRequest as decodeSecretComputeV1beta1QuerySecretContractRequest, decodeSecretComputeQueryByLabelRequest as decodeSecretComputeV1beta1QueryByLabelRequest, decodeSecretComputeQueryByContractAddressRequest as decodeSecretComputeV1beta1QueryByContractAddressRequest, decodeSecretComputeQueryByCodeIdRequest as decodeSecretComputeV1beta1QueryByCodeIdRequest, decodeSecretComputeQuerySecretContractResponse as decodeSecretComputeV1beta1QuerySecretContractResponse, decodeSecretComputeQueryContractInfoResponse as decodeSecretComputeV1beta1QueryContractInfoResponse, decodeSecretComputeQueryContractsByCodeIdResponse as decodeSecretComputeV1beta1QueryContractsByCodeIdResponse, decodeSecretComputeQueryCodeResponse as decodeSecretComputeV1beta1QueryCodeResponse, decodeSecretComputeQueryCodesResponse as decodeSecretComputeV1beta1QueryCodesResponse, decodeSecretComputeQueryContractAddressResponse as decodeSecretComputeV1beta1QueryContractAddressResponse, decodeSecretComputeQueryContractLabelResponse as decodeSecretComputeV1beta1QueryContractLabelResponse, decodeSecretComputeQueryCodeHashResponse as decodeSecretComputeV1beta1QueryCodeHashResponse, decodeSecretComputeDecryptedAnswers as decodeSecretComputeV1beta1DecryptedAnswers, decodeSecretComputeQueryContractHistoryRequest as decodeSecretComputeV1beta1QueryContractHistoryRequest, decodeSecretComputeQueryContractHistoryResponse as decodeSecretComputeV1beta1QueryContractHistoryResponse } from './secret/compute/v1beta1/query.js';
import { encodeSecretComputeAccessTypeParam as encodeSecretComputeV1beta1AccessTypeParam, JsonToProtoEnumSecretComputeAccessType as JsonToProtoEnumSecretComputeV1beta1AccessType, ProtoToJsonEnumSecretComputeAccessType as ProtoToJsonEnumSecretComputeV1beta1AccessType, encodeSecretComputeCodeInfo as encodeSecretComputeV1beta1CodeInfo, encodeSecretComputeContractKey as encodeSecretComputeV1beta1ContractKey, encodeSecretComputeContractCustomInfo as encodeSecretComputeV1beta1ContractCustomInfo, decodeSecretComputeContractKey as decodeSecretComputeV1beta1ContractKey, encodeSecretComputeContractInfo as encodeSecretComputeV1beta1ContractInfo, decodeSecretComputeAbsoluteTxPosition as decodeSecretComputeV1beta1AbsoluteTxPosition, encodeSecretComputeAbsoluteTxPosition as encodeSecretComputeV1beta1AbsoluteTxPosition, encodeSecretComputeModel as encodeSecretComputeV1beta1Model, encodeSecretComputeContractCodeHistoryEntry as encodeSecretComputeV1beta1ContractCodeHistoryEntry, JsonToProtoEnumSecretComputeContractCodeHistoryOperationType as JsonToProtoEnumSecretComputeV1beta1ContractCodeHistoryOperationType, ProtoToJsonEnumSecretComputeContractCodeHistoryOperationType as ProtoToJsonEnumSecretComputeV1beta1ContractCodeHistoryOperationType, decodeSecretComputeContractInfo as decodeSecretComputeV1beta1ContractInfo, decodeSecretComputeContractCodeHistoryEntry as decodeSecretComputeV1beta1ContractCodeHistoryEntry, decodeSecretComputeCodeInfo as decodeSecretComputeV1beta1CodeInfo, decodeSecretComputeModel as decodeSecretComputeV1beta1Model, decodeSecretComputeContractCustomInfo as decodeSecretComputeV1beta1ContractCustomInfo, decodeSecretComputeAccessTypeParam as decodeSecretComputeV1beta1AccessTypeParam } from './secret/compute/v1beta1/types.js';
import { encodeSecretEmergencybuttonGenesisState as encodeSecretEmergencybuttonV1beta1GenesisState, decodeSecretEmergencybuttonGenesisState as decodeSecretEmergencybuttonV1beta1GenesisState } from './secret/emergencybutton/v1beta1/genesis.js';
import { decodeSecretEmergencybuttonParams as decodeSecretEmergencybuttonV1beta1Params, encodeSecretEmergencybuttonParams as encodeSecretEmergencybuttonV1beta1Params } from './secret/emergencybutton/v1beta1/params.js';
import { encodeSecretEmergencybuttonParamsRequest as encodeSecretEmergencybuttonV1beta1ParamsRequest, encodeSecretEmergencybuttonParamsResponse as encodeSecretEmergencybuttonV1beta1ParamsResponse, decodeSecretEmergencybuttonParamsRequest as decodeSecretEmergencybuttonV1beta1ParamsRequest, decodeSecretEmergencybuttonParamsResponse as decodeSecretEmergencybuttonV1beta1ParamsResponse } from './secret/emergencybutton/v1beta1/query.js';
import { encodeSecretEmergencybuttonMsgToggleIbcSwitch as encodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitch, encodeSecretEmergencybuttonMsgToggleIbcSwitchResponse as encodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse, decodeSecretEmergencybuttonMsgToggleIbcSwitch as decodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitch, decodeSecretEmergencybuttonMsgToggleIbcSwitchResponse as decodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse } from './secret/emergencybutton/v1beta1/tx.js';
import { encodeSecretIntertxQueryInterchainAccountFromAddressRequest as encodeSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest, encodeSecretIntertxQueryInterchainAccountFromAddressResponse as encodeSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse, decodeSecretIntertxQueryInterchainAccountFromAddressRequest as decodeSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest, decodeSecretIntertxQueryInterchainAccountFromAddressResponse as decodeSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse } from './secret/intertx/v1beta1/query.js';
import { encodeSecretIntertxMsgRegisterAccount as encodeSecretIntertxV1beta1MsgRegisterAccount, encodeSecretIntertxMsgRegisterAccountResponse as encodeSecretIntertxV1beta1MsgRegisterAccountResponse, encodeSecretIntertxMsgSubmitTx as encodeSecretIntertxV1beta1MsgSubmitTx, encodeSecretIntertxMsgSubmitTxResponse as encodeSecretIntertxV1beta1MsgSubmitTxResponse, decodeSecretIntertxMsgRegisterAccount as decodeSecretIntertxV1beta1MsgRegisterAccount, decodeSecretIntertxMsgRegisterAccountResponse as decodeSecretIntertxV1beta1MsgRegisterAccountResponse, decodeSecretIntertxMsgSubmitTx as decodeSecretIntertxV1beta1MsgSubmitTx, decodeSecretIntertxMsgSubmitTxResponse as decodeSecretIntertxV1beta1MsgSubmitTxResponse } from './secret/intertx/v1beta1/tx.js';
import { encodeSecretRegistrationGenesisState as encodeSecretRegistrationV1beta1GenesisState, decodeSecretRegistrationGenesisState as decodeSecretRegistrationV1beta1GenesisState } from './secret/registration/v1beta1/genesis.js';
import { decodeSecretRegistrationMasterKey as decodeSecretRegistrationV1beta1MasterKey, encodeSecretRegistrationMasterKey as encodeSecretRegistrationV1beta1MasterKey, encodeSecretRegistrationRaAuthenticate as encodeSecretRegistrationV1beta1RaAuthenticate, encodeSecretRegistrationKey as encodeSecretRegistrationV1beta1Key, decodeSecretRegistrationRaAuthenticate as decodeSecretRegistrationV1beta1RaAuthenticate, decodeSecretRegistrationKey as decodeSecretRegistrationV1beta1Key } from './secret/registration/v1beta1/msg.js';
import { encodeSecretRegistrationQueryEncryptedSeedRequest as encodeSecretRegistrationV1beta1QueryEncryptedSeedRequest, encodeSecretRegistrationQueryEncryptedSeedResponse as encodeSecretRegistrationV1beta1QueryEncryptedSeedResponse, decodeSecretRegistrationQueryEncryptedSeedRequest as decodeSecretRegistrationV1beta1QueryEncryptedSeedRequest, decodeSecretRegistrationQueryEncryptedSeedResponse as decodeSecretRegistrationV1beta1QueryEncryptedSeedResponse } from './secret/registration/v1beta1/query.js';
import { encodeSecretRegistrationRemoteAttestationQuoteReport as encodeSecretRegistrationRemoteAttestationV1beta1QuoteReport, encodeSecretRegistrationRemoteAttestationQuoteReportBody as encodeSecretRegistrationRemoteAttestationV1beta1QuoteReportBody, encodeSecretRegistrationRemoteAttestationQuoteReportData as encodeSecretRegistrationRemoteAttestationV1beta1QuoteReportData, decodeSecretRegistrationRemoteAttestationQuoteReportBody as decodeSecretRegistrationRemoteAttestationV1beta1QuoteReportBody, encodeSecretRegistrationRemoteAttestationEndorsedAttestationReport as encodeSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport, encodeSecretRegistrationRemoteAttestationSGXEC256Signature as encodeSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature, encodeSecretRegistrationRemoteAttestationPlatformInfoBlob as encodeSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob, decodeSecretRegistrationRemoteAttestationSGXEC256Signature as decodeSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature, decodeSecretRegistrationRemoteAttestationQuoteReport as decodeSecretRegistrationRemoteAttestationV1beta1QuoteReport, decodeSecretRegistrationRemoteAttestationQuoteReportData as decodeSecretRegistrationRemoteAttestationV1beta1QuoteReportData, decodeSecretRegistrationRemoteAttestationEndorsedAttestationReport as decodeSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport, decodeSecretRegistrationRemoteAttestationPlatformInfoBlob as decodeSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob } from './secret/registration/v1beta1/remote_attestation/types.js';
import { encodeSecretRegistrationSeedConfig as encodeSecretRegistrationV1beta1SeedConfig, encodeSecretRegistrationLegacySeedConfig as encodeSecretRegistrationV1beta1LegacySeedConfig, encodeSecretRegistrationRegistrationNodeInfo as encodeSecretRegistrationV1beta1RegistrationNodeInfo, decodeSecretRegistrationRegistrationNodeInfo as decodeSecretRegistrationV1beta1RegistrationNodeInfo, decodeSecretRegistrationSeedConfig as decodeSecretRegistrationV1beta1SeedConfig, decodeSecretRegistrationLegacySeedConfig as decodeSecretRegistrationV1beta1LegacySeedConfig } from './secret/registration/v1beta1/types.js';
import { encodeTendermintAbciRequest, decodeTendermintAbciRequestEcho, decodeTendermintAbciRequestFlush, decodeTendermintAbciRequestInfo, decodeTendermintAbciRequestInitChain, decodeTendermintAbciRequestQuery, decodeTendermintAbciRequestCheckTx, decodeTendermintAbciRequestCommit, decodeTendermintAbciRequestListSnapshots, decodeTendermintAbciRequestOfferSnapshot, decodeTendermintAbciRequestLoadSnapshotChunk, decodeTendermintAbciRequestApplySnapshotChunk, decodeTendermintAbciRequestPrepareProposal, decodeTendermintAbciRequestProcessProposal, decodeTendermintAbciRequestExtendVote, decodeTendermintAbciRequestVerifyVoteExtension, decodeTendermintAbciRequestFinalizeBlock, encodeTendermintAbciRequestEcho, encodeTendermintAbciRequestFlush, encodeTendermintAbciRequestInfo, encodeTendermintAbciRequestInitChain, decodeTendermintAbciValidatorUpdate, encodeTendermintAbciValidatorUpdate, encodeTendermintAbciRequestQuery, encodeTendermintAbciRequestCheckTx, JsonToProtoEnumTendermintAbciCheckTxType, ProtoToJsonEnumTendermintAbciCheckTxType, encodeTendermintAbciRequestCommit, encodeTendermintAbciRequestListSnapshots, encodeTendermintAbciRequestOfferSnapshot, decodeTendermintAbciSnapshot, encodeTendermintAbciSnapshot, encodeTendermintAbciRequestLoadSnapshotChunk, encodeTendermintAbciRequestApplySnapshotChunk, encodeTendermintAbciRequestPrepareProposal, decodeTendermintAbciExtendedCommitInfo, decodeTendermintAbciMisbehavior, encodeTendermintAbciExtendedCommitInfo, decodeTendermintAbciExtendedVoteInfo, encodeTendermintAbciExtendedVoteInfo, decodeTendermintAbciValidator, encodeTendermintAbciValidator, encodeTendermintAbciMisbehavior, JsonToProtoEnumTendermintAbciMisbehaviorType, ProtoToJsonEnumTendermintAbciMisbehaviorType, encodeTendermintAbciRequestProcessProposal, decodeTendermintAbciCommitInfo, encodeTendermintAbciCommitInfo, decodeTendermintAbciVoteInfo, encodeTendermintAbciVoteInfo, encodeTendermintAbciRequestExtendVote, encodeTendermintAbciRequestVerifyVoteExtension, encodeTendermintAbciRequestFinalizeBlock, encodeTendermintAbciResponse, decodeTendermintAbciResponseException, decodeTendermintAbciResponseEcho, decodeTendermintAbciResponseFlush, decodeTendermintAbciResponseInfo, decodeTendermintAbciResponseInitChain, decodeTendermintAbciResponseQuery, decodeTendermintAbciResponseCheckTx, decodeTendermintAbciResponseCommit, decodeTendermintAbciResponseListSnapshots, decodeTendermintAbciResponseOfferSnapshot, decodeTendermintAbciResponseLoadSnapshotChunk, decodeTendermintAbciResponseApplySnapshotChunk, decodeTendermintAbciResponsePrepareProposal, decodeTendermintAbciResponseProcessProposal, decodeTendermintAbciResponseExtendVote, decodeTendermintAbciResponseVerifyVoteExtension, decodeTendermintAbciResponseFinalizeBlock, encodeTendermintAbciResponseException, encodeTendermintAbciResponseEcho, encodeTendermintAbciResponseFlush, encodeTendermintAbciResponseInfo, encodeTendermintAbciResponseInitChain, encodeTendermintAbciResponseQuery, encodeTendermintAbciResponseCheckTx, decodeTendermintAbciEvent, encodeTendermintAbciEvent, decodeTendermintAbciEventAttribute, encodeTendermintAbciEventAttribute, encodeTendermintAbciResponseCommit, encodeTendermintAbciResponseListSnapshots, encodeTendermintAbciResponseOfferSnapshot, JsonToProtoEnumTendermintAbciResponseOfferSnapshotResult, ProtoToJsonEnumTendermintAbciResponseOfferSnapshotResult, encodeTendermintAbciResponseLoadSnapshotChunk, encodeTendermintAbciResponseApplySnapshotChunk, JsonToProtoEnumTendermintAbciResponseApplySnapshotChunkResult, ProtoToJsonEnumTendermintAbciResponseApplySnapshotChunkResult, encodeTendermintAbciResponsePrepareProposal, encodeTendermintAbciResponseProcessProposal, JsonToProtoEnumTendermintAbciResponseProcessProposalProposalStatus, ProtoToJsonEnumTendermintAbciResponseProcessProposalProposalStatus, encodeTendermintAbciResponseExtendVote, encodeTendermintAbciResponseVerifyVoteExtension, JsonToProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus, ProtoToJsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus, encodeTendermintAbciResponseFinalizeBlock, decodeTendermintAbciExecTxResult, encodeTendermintAbciExecTxResult, encodeTendermintAbciTxResult, decodeTendermintAbciRequest, decodeTendermintAbciResponse, decodeTendermintAbciTxResult } from './tendermint/abci/types.js';
import { encodeTendermintCryptoPublicKey, decodeTendermintCryptoPublicKey } from './tendermint/crypto/keys.js';
import { encodeTendermintCryptoProof, encodeTendermintCryptoValueOp, decodeTendermintCryptoProof, encodeTendermintCryptoDominoOp, encodeTendermintCryptoProofOp, encodeTendermintCryptoProofOps, decodeTendermintCryptoProofOp, decodeTendermintCryptoProofOps, decodeTendermintCryptoValueOp, decodeTendermintCryptoDominoOp } from './tendermint/crypto/proof.js';
import { encodeTendermintLibsBitsBitArray, decodeTendermintLibsBitsBitArray } from './tendermint/libs/bits/types.js';
import { encodeTendermintP2pNetAddress, encodeTendermintP2pProtocolVersion, encodeTendermintP2pDefaultNodeInfo, decodeTendermintP2pProtocolVersion, decodeTendermintP2pDefaultNodeInfoOther, encodeTendermintP2pDefaultNodeInfoOther, decodeTendermintP2pDefaultNodeInfo, decodeTendermintP2pNetAddress } from './tendermint/p2p/types.js';
import { encodeTendermintTypesBlock, decodeTendermintTypesBlock } from './tendermint/types/block.js';
import { encodeTendermintTypesEvidence, decodeTendermintTypesDuplicateVoteEvidence, decodeTendermintTypesLightClientAttackEvidence, encodeTendermintTypesDuplicateVoteEvidence, encodeTendermintTypesLightClientAttackEvidence, encodeTendermintTypesEvidenceList, decodeTendermintTypesEvidence, decodeTendermintTypesEvidenceList } from './tendermint/types/evidence.js';
import { decodeTendermintTypesConsensusParams, encodeTendermintTypesConsensusParams, decodeTendermintTypesBlockParams, decodeTendermintTypesEvidenceParams, decodeTendermintTypesValidatorParams, decodeTendermintTypesVersionParams, decodeTendermintTypesABCIParams, encodeTendermintTypesBlockParams, encodeTendermintTypesEvidenceParams, encodeTendermintTypesValidatorParams, encodeTendermintTypesVersionParams, encodeTendermintTypesABCIParams, encodeTendermintTypesHashedParams, decodeTendermintTypesHashedParams } from './tendermint/types/params.js';
import { decodeTendermintTypesVote, encodeTendermintTypesVote, JsonToProtoEnumTendermintTypesSignedMsgType, decodeTendermintTypesBlockID, ProtoToJsonEnumTendermintTypesSignedMsgType, encodeTendermintTypesBlockID, decodeTendermintTypesPartSetHeader, encodeTendermintTypesPartSetHeader, decodeTendermintTypesLightBlock, encodeTendermintTypesLightBlock, decodeTendermintTypesSignedHeader, encodeTendermintTypesSignedHeader, decodeTendermintTypesHeader, decodeTendermintTypesCommit, encodeTendermintTypesHeader, encodeTendermintTypesCommit, decodeTendermintTypesCommitSig, encodeTendermintTypesCommitSig, encodeTendermintTypesPart, encodeTendermintTypesData, encodeTendermintTypesExtendedCommit, decodeTendermintTypesExtendedCommitSig, encodeTendermintTypesExtendedCommitSig, encodeTendermintTypesProposal, encodeTendermintTypesBlockMeta, encodeTendermintTypesTxProof, decodeTendermintTypesData, decodeTendermintTypesPart, decodeTendermintTypesExtendedCommit, decodeTendermintTypesProposal, decodeTendermintTypesBlockMeta, decodeTendermintTypesTxProof } from './tendermint/types/types.js';
import { JsonToProtoEnumTendermintTypesBlockIDFlag, ProtoToJsonEnumTendermintTypesBlockIDFlag, decodeTendermintTypesValidator, decodeTendermintTypesValidatorSet, encodeTendermintTypesValidatorSet, encodeTendermintTypesValidator, encodeTendermintTypesSimpleValidator, decodeTendermintTypesSimpleValidator } from './tendermint/types/validator.js';
import { decodeTendermintVersionConsensus, encodeTendermintVersionConsensus, encodeTendermintVersionApp, decodeTendermintVersionApp } from './tendermint/version/types.js';
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoProof}
 */
export const condenseTendermintCryptoProof = (g_msg) => encodeTendermintCryptoProof(g_msg.total, g_msg.index, safe_base64_to_bytes(g_msg.leaf_hash), map(g_msg.aunts, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.Proof` -
 */
export const expandTendermintCryptoProof = ([sg_total, sg_index, atu8_leaf_hash, a_aunts]) => ({
    total: sg_total,
    index: sg_index,
    leaf_hash: safe_bytes_to_base64(atu8_leaf_hash),
    aunts: map(a_aunts, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoValueOp}
 */
export const condenseTendermintCryptoValueOp = (g_msg) => encodeTendermintCryptoValueOp(safe_base64_to_bytes(g_msg.key), apply_opt(g_msg.proof, condenseTendermintCryptoProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.ValueOp` -
 */
export const expandTendermintCryptoValueOp = ([atu8_key, a_proof]) => ({
    key: safe_bytes_to_base64(atu8_key),
    proof: a_proof && expandTendermintCryptoProof(a_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoDominoOp}
 */
export const condenseTendermintCryptoDominoOp = (g_msg) => encodeTendermintCryptoDominoOp(g_msg.key, g_msg.input, g_msg.output);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.DominoOp` -
 */
export const expandTendermintCryptoDominoOp = ([s_key, s_input, s_output]) => ({
    key: s_key,
    input: s_input,
    output: s_output,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoProofOp}
 */
export const condenseTendermintCryptoProofOp = (g_msg) => encodeTendermintCryptoProofOp(g_msg.type, safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.ProofOp` - defines an operation used for calculating Merkle root The data could be arbitrary format, providing nessecary data for example neighbouring node hash
 */
export const expandTendermintCryptoProofOp = ([s_type, atu8_key, atu8_data]) => ({
    type: s_type,
    key: safe_bytes_to_base64(atu8_key),
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoProofOps}
 */
export const condenseTendermintCryptoProofOps = (g_msg) => encodeTendermintCryptoProofOps(map(g_msg.ops, condenseTendermintCryptoProofOp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.ProofOps` - Merkle proof defined by the list of ProofOps
 */
export const expandTendermintCryptoProofOps = ([a_ops]) => ({
    ops: a_ops && map(a_ops, expandTendermintCryptoProofOp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintCryptoPublicKey}
 */
export const condenseTendermintCryptoPublicKey = (g_msg) => encodeTendermintCryptoPublicKey(safe_base64_to_bytes(g_msg.ed25519), safe_base64_to_bytes(g_msg.secp256k1));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.crypto.PublicKey` - defines the keys available for use with Validators
 */
export const expandTendermintCryptoPublicKey = ([atu8_ed25519, atu8_secp256k1]) => ({
    ed25519: safe_bytes_to_base64(atu8_ed25519),
    secp256k1: safe_bytes_to_base64(atu8_secp256k1),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequest}
 */
export const condenseTendermintAbciRequest = (g_msg) => encodeTendermintAbciRequest(apply_opt(g_msg.echo, condenseTendermintAbciRequestEcho), apply_opt(g_msg.flush, condenseTendermintAbciRequestFlush), apply_opt(g_msg.info, condenseTendermintAbciRequestInfo), apply_opt(g_msg.init_chain, condenseTendermintAbciRequestInitChain), apply_opt(g_msg.query, condenseTendermintAbciRequestQuery), apply_opt(g_msg.check_tx, condenseTendermintAbciRequestCheckTx), apply_opt(g_msg.commit, condenseTendermintAbciRequestCommit), apply_opt(g_msg.list_snapshots, condenseTendermintAbciRequestListSnapshots), apply_opt(g_msg.offer_snapshot, condenseTendermintAbciRequestOfferSnapshot), apply_opt(g_msg.load_snapshot_chunk, condenseTendermintAbciRequestLoadSnapshotChunk), apply_opt(g_msg.apply_snapshot_chunk, condenseTendermintAbciRequestApplySnapshotChunk), apply_opt(g_msg.prepare_proposal, condenseTendermintAbciRequestPrepareProposal), apply_opt(g_msg.process_proposal, condenseTendermintAbciRequestProcessProposal), apply_opt(g_msg.extend_vote, condenseTendermintAbciRequestExtendVote), apply_opt(g_msg.verify_vote_extension, condenseTendermintAbciRequestVerifyVoteExtension), apply_opt(g_msg.finalize_block, condenseTendermintAbciRequestFinalizeBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Request` -
 */
export const expandTendermintAbciRequest = ([a_echo, a_flush, a_info, , a_init_chain, a_query, , a_check_tx, , , a_commit, a_list_snapshots, a_offer_snapshot, a_load_snapshot_chunk, a_apply_snapshot_chunk, a_prepare_proposal, a_process_proposal, a_extend_vote, a_verify_vote_extension, a_finalize_block]) => ({
    echo: a_echo && expandTendermintAbciRequestEcho(a_echo),
    flush: a_flush && expandTendermintAbciRequestFlush(a_flush),
    info: a_info && expandTendermintAbciRequestInfo(a_info),
    init_chain: a_init_chain && expandTendermintAbciRequestInitChain(a_init_chain),
    query: a_query && expandTendermintAbciRequestQuery(a_query),
    check_tx: a_check_tx && expandTendermintAbciRequestCheckTx(a_check_tx),
    commit: a_commit && expandTendermintAbciRequestCommit(a_commit),
    list_snapshots: a_list_snapshots && expandTendermintAbciRequestListSnapshots(a_list_snapshots),
    offer_snapshot: a_offer_snapshot && expandTendermintAbciRequestOfferSnapshot(a_offer_snapshot),
    load_snapshot_chunk: a_load_snapshot_chunk && expandTendermintAbciRequestLoadSnapshotChunk(a_load_snapshot_chunk),
    apply_snapshot_chunk: a_apply_snapshot_chunk && expandTendermintAbciRequestApplySnapshotChunk(a_apply_snapshot_chunk),
    prepare_proposal: a_prepare_proposal && expandTendermintAbciRequestPrepareProposal(a_prepare_proposal),
    process_proposal: a_process_proposal && expandTendermintAbciRequestProcessProposal(a_process_proposal),
    extend_vote: a_extend_vote && expandTendermintAbciRequestExtendVote(a_extend_vote),
    verify_vote_extension: a_verify_vote_extension && expandTendermintAbciRequestVerifyVoteExtension(a_verify_vote_extension),
    finalize_block: a_finalize_block && expandTendermintAbciRequestFinalizeBlock(a_finalize_block),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestEcho}
 */
export const condenseTendermintAbciRequestEcho = (g_msg) => encodeTendermintAbciRequestEcho(g_msg.message);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestEcho` -
 */
export const expandTendermintAbciRequestEcho = ([s_message]) => ({
    message: s_message,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestFlush}
 */
export const condenseTendermintAbciRequestFlush = (g_msg) => encodeTendermintAbciRequestFlush();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestFlush` -
 */
export const expandTendermintAbciRequestFlush = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestInfo}
 */
export const condenseTendermintAbciRequestInfo = (g_msg) => encodeTendermintAbciRequestInfo(g_msg.version, g_msg.block_version, g_msg.p2p_version, g_msg.abci_version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestInfo` -
 */
export const expandTendermintAbciRequestInfo = ([s_version, sg_block_version, sg_p2p_version, s_abci_version]) => ({
    version: s_version,
    block_version: sg_block_version,
    p2p_version: sg_p2p_version,
    abci_version: s_abci_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestInitChain}
 */
export const condenseTendermintAbciRequestInitChain = (g_msg) => encodeTendermintAbciRequestInitChain(parse_timestamp(g_msg.time), g_msg.chain_id, apply_opt(g_msg.consensus_params, condenseTendermintTypesConsensusParams), map(g_msg.validators, condenseTendermintAbciValidatorUpdate), safe_base64_to_bytes(g_msg.app_state_bytes), g_msg.initial_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestInitChain` -
 */
export const expandTendermintAbciRequestInitChain = ([a_time, si_chain, a_consensus_params, a_validators, atu8_app_state_bytes, sg_initial_height]) => ({
    time: expand_timestamp(a_time),
    chain_id: si_chain,
    consensus_params: a_consensus_params && expandTendermintTypesConsensusParams(a_consensus_params),
    validators: a_validators && map(a_validators, expandTendermintAbciValidatorUpdate),
    app_state_bytes: safe_bytes_to_base64(atu8_app_state_bytes),
    initial_height: sg_initial_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufTimestamp}
 */
export const condenseGoogleProtobufTimestamp = (g_msg) => encodeGoogleProtobufTimestamp(g_msg.seconds, g_msg.nanos);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.Timestamp` - A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one. All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear). The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings. # Examples Example 1: Compute Timestamp from POSIX `time()`. Timestamp timestamp; timestamp.set_seconds(time(NULL)); timestamp.set_nanos(0); Example 2: Compute Timestamp from POSIX `gettimeofday()`. struct timeval tv; gettimeofday(&tv, NULL); Timestamp timestamp; timestamp.set_seconds(tv.tv_sec); timestamp.set_nanos(tv.tv_usec * 1000); Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`. FILETIME ft; GetSystemTimeAsFileTime(&ft); UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime; // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z. Timestamp timestamp; timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL)); timestamp.set_nanos((INT32) ((ticks % 10000000) * 100)); Example 4: Compute Timestamp from Java `System.currentTimeMillis()`. long millis = System.currentTimeMillis(); Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000) .setNanos((int) ((millis % 1000) * 1000000)).build(); Example 5: Compute Timestamp from Java `Instant.now()`. Instant now = Instant.now(); Timestamp timestamp = Timestamp.newBuilder().setSeconds(now.getEpochSecond()) .setNanos(now.getNano()).build(); Example 6: Compute Timestamp from current time in Python. timestamp = Timestamp() timestamp.GetCurrentTime() # JSON Mapping In JSON format, the Timestamp type is encoded as a string in the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z" where {year} is always expressed using four digits while {month}, {day}, {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution), are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone is required. A proto3 JSON serializer should always use UTC (as indicated by "Z") when printing the Timestamp type and a proto3 JSON parser should be able to accept both UTC and other timezones (as indicated by an offset). For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past 01:30 UTC on January 15, 2017. In JavaScript, one can convert a Date object to this format using the standard [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString) method. In Python, a standard `datetime.datetime` object can be converted to this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use the Joda Time's [`ISODateTimeFormat.dateTime()`]( http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime() ) to obtain a formatter capable of generating timestamps in this format.
 */
export const expandGoogleProtobufTimestamp = ([sg_seconds, n_nanos]) => ({
    seconds: sg_seconds,
    nanos: n_nanos,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesConsensusParams}
 */
export const condenseTendermintTypesConsensusParams = (g_msg) => encodeTendermintTypesConsensusParams(apply_opt(g_msg.block, condenseTendermintTypesBlockParams), apply_opt(g_msg.evidence, condenseTendermintTypesEvidenceParams), apply_opt(g_msg.validator, condenseTendermintTypesValidatorParams), apply_opt(g_msg.version, condenseTendermintTypesVersionParams), apply_opt(g_msg.abci, condenseTendermintTypesABCIParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ConsensusParams` - contains consensus critical parameters that determine the validity of blocks.
 */
export const expandTendermintTypesConsensusParams = ([a_block, a_evidence, a_validator, a_version, a_abci]) => ({
    block: a_block && expandTendermintTypesBlockParams(a_block),
    evidence: a_evidence && expandTendermintTypesEvidenceParams(a_evidence),
    validator: a_validator && expandTendermintTypesValidatorParams(a_validator),
    version: a_version && expandTendermintTypesVersionParams(a_version),
    abci: a_abci && expandTendermintTypesABCIParams(a_abci),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesBlockParams}
 */
export const condenseTendermintTypesBlockParams = (g_msg) => encodeTendermintTypesBlockParams(g_msg.max_bytes, g_msg.max_gas);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.BlockParams` - contains limits on the block size.
 */
export const expandTendermintTypesBlockParams = ([sg_max_bytes, sg_max_gas]) => ({
    max_bytes: sg_max_bytes,
    max_gas: sg_max_gas,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesEvidenceParams}
 */
export const condenseTendermintTypesEvidenceParams = (g_msg) => encodeTendermintTypesEvidenceParams(g_msg.max_age_num_blocks, parse_duration(g_msg.max_age_duration), g_msg.max_bytes);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.EvidenceParams` - determine how we handle evidence of malfeasance.
 */
export const expandTendermintTypesEvidenceParams = ([sg_max_age_num_blocks, a_max_age_duration, sg_max_bytes]) => ({
    max_age_num_blocks: sg_max_age_num_blocks,
    max_age_duration: expand_duration(a_max_age_duration),
    max_bytes: sg_max_bytes,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufDuration}
 */
export const condenseGoogleProtobufDuration = (g_msg) => encodeGoogleProtobufDuration(g_msg.seconds, g_msg.nanos);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.Duration` - A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years. # Examples Example 1: Compute Duration from two Timestamps in pseudo code. Timestamp start = ...; Timestamp end = ...; Duration duration = ...; duration.seconds = end.seconds - start.seconds; duration.nanos = end.nanos - start.nanos; if (duration.seconds < 0 && duration.nanos > 0) { duration.seconds += 1; duration.nanos -= 1000000000; } else if (duration.seconds > 0 && duration.nanos < 0) { duration.seconds -= 1; duration.nanos += 1000000000; } Example 2: Compute Timestamp from Timestamp + Duration in pseudo code. Timestamp start = ...; Duration duration = ...; Timestamp end = ...; end.seconds = start.seconds + duration.seconds; end.nanos = start.nanos + duration.nanos; if (end.nanos < 0) { end.seconds -= 1; end.nanos += 1000000000; } else if (end.nanos >= 1000000000) { end.seconds += 1; end.nanos -= 1000000000; } Example 3: Compute Duration from datetime.timedelta in Python. td = datetime.timedelta(days=3, minutes=10) duration = Duration() duration.FromTimedelta(td) # JSON Mapping In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds. For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s", and 3 seconds and 1 microsecond should be expressed in JSON format as "3.000001s".
 */
export const expandGoogleProtobufDuration = ([sg_seconds, n_nanos]) => ({
    seconds: sg_seconds,
    nanos: n_nanos,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesValidatorParams}
 */
export const condenseTendermintTypesValidatorParams = (g_msg) => encodeTendermintTypesValidatorParams(g_msg.pub_key_types);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ValidatorParams` - restrict the public key types validators can use. NOTE: uses ABCI pubkey naming, not Amino names.
 */
export const expandTendermintTypesValidatorParams = ([a_pub_key_types]) => ({
    pub_key_types: a_pub_key_types,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesVersionParams}
 */
export const condenseTendermintTypesVersionParams = (g_msg) => encodeTendermintTypesVersionParams(g_msg.app);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.VersionParams` - contains the ABCI application version.
 */
export const expandTendermintTypesVersionParams = ([sg_app]) => ({
    app: sg_app,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesABCIParams}
 */
export const condenseTendermintTypesABCIParams = (g_msg) => encodeTendermintTypesABCIParams(g_msg.vote_extensions_enable_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ABCIParams` - configure functionality specific to the Application Blockchain Interface.
 */
export const expandTendermintTypesABCIParams = ([sg_vote_extensions_enable_height]) => ({
    vote_extensions_enable_height: sg_vote_extensions_enable_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciValidatorUpdate}
 */
export const condenseTendermintAbciValidatorUpdate = (g_msg) => encodeTendermintAbciValidatorUpdate(apply_opt(g_msg.pub_key, condenseTendermintCryptoPublicKey), g_msg.power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ValidatorUpdate` -
 */
export const expandTendermintAbciValidatorUpdate = ([a_pub_key, sg_power]) => ({
    pub_key: a_pub_key && expandTendermintCryptoPublicKey(a_pub_key),
    power: sg_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestQuery}
 */
export const condenseTendermintAbciRequestQuery = (g_msg) => encodeTendermintAbciRequestQuery(safe_base64_to_bytes(g_msg.data), g_msg.path, g_msg.height, g_msg.prove);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestQuery` -
 */
export const expandTendermintAbciRequestQuery = ([atu8_data, s_path, sg_height, b_prove]) => ({
    data: safe_bytes_to_base64(atu8_data),
    path: s_path,
    height: sg_height,
    prove: !!b_prove,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestCheckTx}
 */
export const condenseTendermintAbciRequestCheckTx = (g_msg) => encodeTendermintAbciRequestCheckTx(safe_base64_to_bytes(g_msg.tx), JsonToProtoEnumTendermintAbciCheckTxType[g_msg.type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestCheckTx` -
 */
export const expandTendermintAbciRequestCheckTx = ([atu8_tx, xc_type]) => ({
    tx: safe_bytes_to_base64(atu8_tx),
    type: xc_type >= 0 ? ProtoToJsonEnumTendermintAbciCheckTxType[xc_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestCommit}
 */
export const condenseTendermintAbciRequestCommit = (g_msg) => encodeTendermintAbciRequestCommit();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestCommit` -
 */
export const expandTendermintAbciRequestCommit = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestListSnapshots}
 */
export const condenseTendermintAbciRequestListSnapshots = (g_msg) => encodeTendermintAbciRequestListSnapshots();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestListSnapshots` - lists available snapshots
 */
export const expandTendermintAbciRequestListSnapshots = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestOfferSnapshot}
 */
export const condenseTendermintAbciRequestOfferSnapshot = (g_msg) => encodeTendermintAbciRequestOfferSnapshot(apply_opt(g_msg.snapshot, condenseTendermintAbciSnapshot), safe_base64_to_bytes(g_msg.app_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestOfferSnapshot` - offers a snapshot to the application
 */
export const expandTendermintAbciRequestOfferSnapshot = ([a_snapshot, atu8_app_hash]) => ({
    snapshot: a_snapshot && expandTendermintAbciSnapshot(a_snapshot),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciSnapshot}
 */
export const condenseTendermintAbciSnapshot = (g_msg) => encodeTendermintAbciSnapshot(g_msg.height, g_msg.format, g_msg.chunks, safe_base64_to_bytes(g_msg.hash), safe_base64_to_bytes(g_msg.metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Snapshot` -
 */
export const expandTendermintAbciSnapshot = ([sg_height, n_format, n_chunks, atu8_hash, atu8_metadata]) => ({
    height: sg_height,
    format: n_format,
    chunks: n_chunks,
    hash: safe_bytes_to_base64(atu8_hash),
    metadata: safe_bytes_to_base64(atu8_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestLoadSnapshotChunk}
 */
export const condenseTendermintAbciRequestLoadSnapshotChunk = (g_msg) => encodeTendermintAbciRequestLoadSnapshotChunk(g_msg.height, g_msg.format, g_msg.chunk);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestLoadSnapshotChunk` - loads a snapshot chunk
 */
export const expandTendermintAbciRequestLoadSnapshotChunk = ([sg_height, n_format, n_chunk]) => ({
    height: sg_height,
    format: n_format,
    chunk: n_chunk,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestApplySnapshotChunk}
 */
export const condenseTendermintAbciRequestApplySnapshotChunk = (g_msg) => encodeTendermintAbciRequestApplySnapshotChunk(g_msg.index, safe_base64_to_bytes(g_msg.chunk), g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestApplySnapshotChunk` - Applies a snapshot chunk
 */
export const expandTendermintAbciRequestApplySnapshotChunk = ([n_index, atu8_chunk, sa_sender]) => ({
    index: n_index,
    chunk: safe_bytes_to_base64(atu8_chunk),
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestPrepareProposal}
 */
export const condenseTendermintAbciRequestPrepareProposal = (g_msg) => encodeTendermintAbciRequestPrepareProposal(g_msg.max_tx_bytes, map(g_msg.txs, safe_base64_to_bytes), apply_opt(g_msg.local_last_commit, condenseTendermintAbciExtendedCommitInfo), map(g_msg.misbehavior, condenseTendermintAbciMisbehavior), g_msg.height, parse_timestamp(g_msg.time), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.proposer_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestPrepareProposal` -
 */
export const expandTendermintAbciRequestPrepareProposal = ([sg_max_tx_bytes, a_txs, a_local_last_commit, a_misbehavior, sg_height, a_time, atu8_next_validators_hash, atu8_proposer_address]) => ({
    max_tx_bytes: sg_max_tx_bytes,
    txs: map(a_txs, safe_bytes_to_base64),
    local_last_commit: a_local_last_commit && expandTendermintAbciExtendedCommitInfo(a_local_last_commit),
    misbehavior: a_misbehavior && map(a_misbehavior, expandTendermintAbciMisbehavior),
    height: sg_height,
    time: expand_timestamp(a_time),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    proposer_address: safe_bytes_to_base64(atu8_proposer_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciExtendedCommitInfo}
 */
export const condenseTendermintAbciExtendedCommitInfo = (g_msg) => encodeTendermintAbciExtendedCommitInfo(g_msg.round, map(g_msg.votes, condenseTendermintAbciExtendedVoteInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ExtendedCommitInfo` - similar to CommitInfo except that it is only used in the PrepareProposal request such that CometBFT can provide vote extensions to the application.
 */
export const expandTendermintAbciExtendedCommitInfo = ([n_round, a_votes]) => ({
    round: n_round,
    votes: a_votes && map(a_votes, expandTendermintAbciExtendedVoteInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciExtendedVoteInfo}
 */
export const condenseTendermintAbciExtendedVoteInfo = (g_msg) => encodeTendermintAbciExtendedVoteInfo(apply_opt(g_msg.validator, condenseTendermintAbciValidator), safe_base64_to_bytes(g_msg.vote_extension), safe_base64_to_bytes(g_msg.extension_signature), JsonToProtoEnumTendermintTypesBlockIDFlag[g_msg.block_id_flag]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ExtendedVoteInfo` -
 */
export const expandTendermintAbciExtendedVoteInfo = ([a_validator, , atu8_vote_extension, atu8_extension_signature, xc_block_id_flag]) => ({
    validator: a_validator && expandTendermintAbciValidator(a_validator),
    vote_extension: safe_bytes_to_base64(atu8_vote_extension),
    extension_signature: safe_bytes_to_base64(atu8_extension_signature),
    block_id_flag: xc_block_id_flag >= 0 ? ProtoToJsonEnumTendermintTypesBlockIDFlag[xc_block_id_flag] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciValidator}
 */
export const condenseTendermintAbciValidator = (g_msg) => encodeTendermintAbciValidator(safe_base64_to_bytes(g_msg.address), g_msg.power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Validator` -
 */
export const expandTendermintAbciValidator = ([atu8_address, , sg_power]) => ({
    address: safe_bytes_to_base64(atu8_address),
    power: sg_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciMisbehavior}
 */
export const condenseTendermintAbciMisbehavior = (g_msg) => encodeTendermintAbciMisbehavior(JsonToProtoEnumTendermintAbciMisbehaviorType[g_msg.type], apply_opt(g_msg.validator, condenseTendermintAbciValidator), g_msg.height, parse_timestamp(g_msg.time), g_msg.total_voting_power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Misbehavior` -
 */
export const expandTendermintAbciMisbehavior = ([xc_type, a_validator, sg_height, a_time, sg_total_voting_power]) => ({
    type: xc_type >= 0 ? ProtoToJsonEnumTendermintAbciMisbehaviorType[xc_type] : __UNDEFINED,
    validator: a_validator && expandTendermintAbciValidator(a_validator),
    height: sg_height,
    time: expand_timestamp(a_time),
    total_voting_power: sg_total_voting_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestProcessProposal}
 */
export const condenseTendermintAbciRequestProcessProposal = (g_msg) => encodeTendermintAbciRequestProcessProposal(map(g_msg.txs, safe_base64_to_bytes), apply_opt(g_msg.proposed_last_commit, condenseTendermintAbciCommitInfo), map(g_msg.misbehavior, condenseTendermintAbciMisbehavior), safe_base64_to_bytes(g_msg.hash), g_msg.height, parse_timestamp(g_msg.time), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.proposer_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestProcessProposal` -
 */
export const expandTendermintAbciRequestProcessProposal = ([a_txs, a_proposed_last_commit, a_misbehavior, atu8_hash, sg_height, a_time, atu8_next_validators_hash, atu8_proposer_address]) => ({
    txs: map(a_txs, safe_bytes_to_base64),
    proposed_last_commit: a_proposed_last_commit && expandTendermintAbciCommitInfo(a_proposed_last_commit),
    misbehavior: a_misbehavior && map(a_misbehavior, expandTendermintAbciMisbehavior),
    hash: safe_bytes_to_base64(atu8_hash),
    height: sg_height,
    time: expand_timestamp(a_time),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    proposer_address: safe_bytes_to_base64(atu8_proposer_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciCommitInfo}
 */
export const condenseTendermintAbciCommitInfo = (g_msg) => encodeTendermintAbciCommitInfo(g_msg.round, map(g_msg.votes, condenseTendermintAbciVoteInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.CommitInfo` -
 */
export const expandTendermintAbciCommitInfo = ([n_round, a_votes]) => ({
    round: n_round,
    votes: a_votes && map(a_votes, expandTendermintAbciVoteInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciVoteInfo}
 */
export const condenseTendermintAbciVoteInfo = (g_msg) => encodeTendermintAbciVoteInfo(apply_opt(g_msg.validator, condenseTendermintAbciValidator), JsonToProtoEnumTendermintTypesBlockIDFlag[g_msg.block_id_flag]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.VoteInfo` -
 */
export const expandTendermintAbciVoteInfo = ([a_validator, , xc_block_id_flag]) => ({
    validator: a_validator && expandTendermintAbciValidator(a_validator),
    block_id_flag: xc_block_id_flag >= 0 ? ProtoToJsonEnumTendermintTypesBlockIDFlag[xc_block_id_flag] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestExtendVote}
 */
export const condenseTendermintAbciRequestExtendVote = (g_msg) => encodeTendermintAbciRequestExtendVote(safe_base64_to_bytes(g_msg.hash), g_msg.height, parse_timestamp(g_msg.time), map(g_msg.txs, safe_base64_to_bytes), apply_opt(g_msg.proposed_last_commit, condenseTendermintAbciCommitInfo), map(g_msg.misbehavior, condenseTendermintAbciMisbehavior), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.proposer_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestExtendVote` - Extends a vote with application-injected data
 */
export const expandTendermintAbciRequestExtendVote = ([atu8_hash, sg_height, a_time, a_txs, a_proposed_last_commit, a_misbehavior, atu8_next_validators_hash, atu8_proposer_address]) => ({
    hash: safe_bytes_to_base64(atu8_hash),
    height: sg_height,
    time: expand_timestamp(a_time),
    txs: map(a_txs, safe_bytes_to_base64),
    proposed_last_commit: a_proposed_last_commit && expandTendermintAbciCommitInfo(a_proposed_last_commit),
    misbehavior: a_misbehavior && map(a_misbehavior, expandTendermintAbciMisbehavior),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    proposer_address: safe_bytes_to_base64(atu8_proposer_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestVerifyVoteExtension}
 */
export const condenseTendermintAbciRequestVerifyVoteExtension = (g_msg) => encodeTendermintAbciRequestVerifyVoteExtension(safe_base64_to_bytes(g_msg.hash), safe_base64_to_bytes(g_msg.validator_address), g_msg.height, safe_base64_to_bytes(g_msg.vote_extension));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestVerifyVoteExtension` - Verify the vote extension
 */
export const expandTendermintAbciRequestVerifyVoteExtension = ([atu8_hash, atu8_validator_address, sg_height, atu8_vote_extension]) => ({
    hash: safe_bytes_to_base64(atu8_hash),
    validator_address: safe_bytes_to_base64(atu8_validator_address),
    height: sg_height,
    vote_extension: safe_bytes_to_base64(atu8_vote_extension),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciRequestFinalizeBlock}
 */
export const condenseTendermintAbciRequestFinalizeBlock = (g_msg) => encodeTendermintAbciRequestFinalizeBlock(map(g_msg.txs, safe_base64_to_bytes), apply_opt(g_msg.decided_last_commit, condenseTendermintAbciCommitInfo), map(g_msg.misbehavior, condenseTendermintAbciMisbehavior), safe_base64_to_bytes(g_msg.hash), g_msg.height, parse_timestamp(g_msg.time), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.proposer_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.RequestFinalizeBlock` -
 */
export const expandTendermintAbciRequestFinalizeBlock = ([a_txs, a_decided_last_commit, a_misbehavior, atu8_hash, sg_height, a_time, atu8_next_validators_hash, atu8_proposer_address]) => ({
    txs: map(a_txs, safe_bytes_to_base64),
    decided_last_commit: a_decided_last_commit && expandTendermintAbciCommitInfo(a_decided_last_commit),
    misbehavior: a_misbehavior && map(a_misbehavior, expandTendermintAbciMisbehavior),
    hash: safe_bytes_to_base64(atu8_hash),
    height: sg_height,
    time: expand_timestamp(a_time),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    proposer_address: safe_bytes_to_base64(atu8_proposer_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponse}
 */
export const condenseTendermintAbciResponse = (g_msg) => encodeTendermintAbciResponse(apply_opt(g_msg.exception, condenseTendermintAbciResponseException), apply_opt(g_msg.echo, condenseTendermintAbciResponseEcho), apply_opt(g_msg.flush, condenseTendermintAbciResponseFlush), apply_opt(g_msg.info, condenseTendermintAbciResponseInfo), apply_opt(g_msg.init_chain, condenseTendermintAbciResponseInitChain), apply_opt(g_msg.query, condenseTendermintAbciResponseQuery), apply_opt(g_msg.check_tx, condenseTendermintAbciResponseCheckTx), apply_opt(g_msg.commit, condenseTendermintAbciResponseCommit), apply_opt(g_msg.list_snapshots, condenseTendermintAbciResponseListSnapshots), apply_opt(g_msg.offer_snapshot, condenseTendermintAbciResponseOfferSnapshot), apply_opt(g_msg.load_snapshot_chunk, condenseTendermintAbciResponseLoadSnapshotChunk), apply_opt(g_msg.apply_snapshot_chunk, condenseTendermintAbciResponseApplySnapshotChunk), apply_opt(g_msg.prepare_proposal, condenseTendermintAbciResponsePrepareProposal), apply_opt(g_msg.process_proposal, condenseTendermintAbciResponseProcessProposal), apply_opt(g_msg.extend_vote, condenseTendermintAbciResponseExtendVote), apply_opt(g_msg.verify_vote_extension, condenseTendermintAbciResponseVerifyVoteExtension), apply_opt(g_msg.finalize_block, condenseTendermintAbciResponseFinalizeBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Response` -
 */
export const expandTendermintAbciResponse = ([a_exception, a_echo, a_flush, a_info, , a_init_chain, a_query, , a_check_tx, , , a_commit, a_list_snapshots, a_offer_snapshot, a_load_snapshot_chunk, a_apply_snapshot_chunk, a_prepare_proposal, a_process_proposal, a_extend_vote, a_verify_vote_extension, a_finalize_block]) => ({
    exception: a_exception && expandTendermintAbciResponseException(a_exception),
    echo: a_echo && expandTendermintAbciResponseEcho(a_echo),
    flush: a_flush && expandTendermintAbciResponseFlush(a_flush),
    info: a_info && expandTendermintAbciResponseInfo(a_info),
    init_chain: a_init_chain && expandTendermintAbciResponseInitChain(a_init_chain),
    query: a_query && expandTendermintAbciResponseQuery(a_query),
    check_tx: a_check_tx && expandTendermintAbciResponseCheckTx(a_check_tx),
    commit: a_commit && expandTendermintAbciResponseCommit(a_commit),
    list_snapshots: a_list_snapshots && expandTendermintAbciResponseListSnapshots(a_list_snapshots),
    offer_snapshot: a_offer_snapshot && expandTendermintAbciResponseOfferSnapshot(a_offer_snapshot),
    load_snapshot_chunk: a_load_snapshot_chunk && expandTendermintAbciResponseLoadSnapshotChunk(a_load_snapshot_chunk),
    apply_snapshot_chunk: a_apply_snapshot_chunk && expandTendermintAbciResponseApplySnapshotChunk(a_apply_snapshot_chunk),
    prepare_proposal: a_prepare_proposal && expandTendermintAbciResponsePrepareProposal(a_prepare_proposal),
    process_proposal: a_process_proposal && expandTendermintAbciResponseProcessProposal(a_process_proposal),
    extend_vote: a_extend_vote && expandTendermintAbciResponseExtendVote(a_extend_vote),
    verify_vote_extension: a_verify_vote_extension && expandTendermintAbciResponseVerifyVoteExtension(a_verify_vote_extension),
    finalize_block: a_finalize_block && expandTendermintAbciResponseFinalizeBlock(a_finalize_block),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseException}
 */
export const condenseTendermintAbciResponseException = (g_msg) => encodeTendermintAbciResponseException(g_msg.error);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseException` - nondeterministic
 */
export const expandTendermintAbciResponseException = ([s_error]) => ({
    error: s_error,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseEcho}
 */
export const condenseTendermintAbciResponseEcho = (g_msg) => encodeTendermintAbciResponseEcho(g_msg.message);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseEcho` -
 */
export const expandTendermintAbciResponseEcho = ([s_message]) => ({
    message: s_message,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseFlush}
 */
export const condenseTendermintAbciResponseFlush = (g_msg) => encodeTendermintAbciResponseFlush();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseFlush` -
 */
export const expandTendermintAbciResponseFlush = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseInfo}
 */
export const condenseTendermintAbciResponseInfo = (g_msg) => encodeTendermintAbciResponseInfo(g_msg.data, g_msg.version, g_msg.app_version, g_msg.last_block_height, safe_base64_to_bytes(g_msg.last_block_app_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseInfo` -
 */
export const expandTendermintAbciResponseInfo = ([s_data, s_version, sg_app_version, sg_last_block_height, atu8_last_block_app_hash]) => ({
    data: s_data,
    version: s_version,
    app_version: sg_app_version,
    last_block_height: sg_last_block_height,
    last_block_app_hash: safe_bytes_to_base64(atu8_last_block_app_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseInitChain}
 */
export const condenseTendermintAbciResponseInitChain = (g_msg) => encodeTendermintAbciResponseInitChain(apply_opt(g_msg.consensus_params, condenseTendermintTypesConsensusParams), map(g_msg.validators, condenseTendermintAbciValidatorUpdate), safe_base64_to_bytes(g_msg.app_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseInitChain` -
 */
export const expandTendermintAbciResponseInitChain = ([a_consensus_params, a_validators, atu8_app_hash]) => ({
    consensus_params: a_consensus_params && expandTendermintTypesConsensusParams(a_consensus_params),
    validators: a_validators && map(a_validators, expandTendermintAbciValidatorUpdate),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseQuery}
 */
export const condenseTendermintAbciResponseQuery = (g_msg) => encodeTendermintAbciResponseQuery(g_msg.code, g_msg.log, g_msg.info, g_msg.index, safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value), apply_opt(g_msg.proof_ops, condenseTendermintCryptoProofOps), g_msg.height, g_msg.codespace);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseQuery` -
 */
export const expandTendermintAbciResponseQuery = ([n_code, , s_log, s_info, sg_index, atu8_key, atu8_value, a_proof_ops, sg_height, s_codespace]) => ({
    code: n_code,
    log: s_log,
    info: s_info,
    index: sg_index,
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
    proof_ops: a_proof_ops && expandTendermintCryptoProofOps(a_proof_ops),
    height: sg_height,
    codespace: s_codespace,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseCheckTx}
 */
export const condenseTendermintAbciResponseCheckTx = (g_msg) => encodeTendermintAbciResponseCheckTx(g_msg.code, safe_base64_to_bytes(g_msg.data), g_msg.log, g_msg.info, g_msg.gas_wanted, g_msg.gas_used, map(g_msg.events, condenseTendermintAbciEvent), g_msg.codespace);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseCheckTx` -
 */
export const expandTendermintAbciResponseCheckTx = ([n_code, atu8_data, s_log, s_info, sg_gas_wanted, sg_gas_used, a_events, s_codespace]) => ({
    code: n_code,
    data: safe_bytes_to_base64(atu8_data),
    log: s_log,
    info: s_info,
    gas_wanted: sg_gas_wanted,
    gas_used: sg_gas_used,
    events: a_events && map(a_events, expandTendermintAbciEvent),
    codespace: s_codespace,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciEvent}
 */
export const condenseTendermintAbciEvent = (g_msg) => encodeTendermintAbciEvent(g_msg.type, map(g_msg.attributes, condenseTendermintAbciEventAttribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.Event` - allows application developers to attach additional information to ResponseFinalizeBlock and ResponseCheckTx. Later, transactions may be queried using these events.
 */
export const expandTendermintAbciEvent = ([s_type, a_attributes]) => ({
    type: s_type,
    attributes: a_attributes && map(a_attributes, expandTendermintAbciEventAttribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciEventAttribute}
 */
export const condenseTendermintAbciEventAttribute = (g_msg) => encodeTendermintAbciEventAttribute(g_msg.key, g_msg.value, g_msg.index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.EventAttribute` - a single key-value pair, associated with an event.
 */
export const expandTendermintAbciEventAttribute = ([s_key, s_value, b_index]) => ({
    key: s_key,
    value: s_value,
    index: !!b_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseCommit}
 */
export const condenseTendermintAbciResponseCommit = (g_msg) => encodeTendermintAbciResponseCommit(g_msg.retain_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseCommit` -
 */
export const expandTendermintAbciResponseCommit = ([, , sg_retain_height]) => ({
    retain_height: sg_retain_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseListSnapshots}
 */
export const condenseTendermintAbciResponseListSnapshots = (g_msg) => encodeTendermintAbciResponseListSnapshots(map(g_msg.snapshots, condenseTendermintAbciSnapshot));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseListSnapshots` -
 */
export const expandTendermintAbciResponseListSnapshots = ([a_snapshots]) => ({
    snapshots: a_snapshots && map(a_snapshots, expandTendermintAbciSnapshot),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseOfferSnapshot}
 */
export const condenseTendermintAbciResponseOfferSnapshot = (g_msg) => encodeTendermintAbciResponseOfferSnapshot(JsonToProtoEnumTendermintAbciResponseOfferSnapshotResult[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseOfferSnapshot` -
 */
export const expandTendermintAbciResponseOfferSnapshot = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumTendermintAbciResponseOfferSnapshotResult[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseLoadSnapshotChunk}
 */
export const condenseTendermintAbciResponseLoadSnapshotChunk = (g_msg) => encodeTendermintAbciResponseLoadSnapshotChunk(safe_base64_to_bytes(g_msg.chunk));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseLoadSnapshotChunk` -
 */
export const expandTendermintAbciResponseLoadSnapshotChunk = ([atu8_chunk]) => ({
    chunk: safe_bytes_to_base64(atu8_chunk),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseApplySnapshotChunk}
 */
export const condenseTendermintAbciResponseApplySnapshotChunk = (g_msg) => encodeTendermintAbciResponseApplySnapshotChunk(JsonToProtoEnumTendermintAbciResponseApplySnapshotChunkResult[g_msg.result], g_msg.refetch_chunks, g_msg.reject_senders);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseApplySnapshotChunk` -
 */
export const expandTendermintAbciResponseApplySnapshotChunk = ([xc_result, a_refetch_chunks, a_reject_senders]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumTendermintAbciResponseApplySnapshotChunkResult[xc_result] : __UNDEFINED,
    refetch_chunks: a_refetch_chunks,
    reject_senders: a_reject_senders,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponsePrepareProposal}
 */
export const condenseTendermintAbciResponsePrepareProposal = (g_msg) => encodeTendermintAbciResponsePrepareProposal(map(g_msg.txs, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponsePrepareProposal` -
 */
export const expandTendermintAbciResponsePrepareProposal = ([a_txs]) => ({
    txs: map(a_txs, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseProcessProposal}
 */
export const condenseTendermintAbciResponseProcessProposal = (g_msg) => encodeTendermintAbciResponseProcessProposal(JsonToProtoEnumTendermintAbciResponseProcessProposalProposalStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseProcessProposal` -
 */
export const expandTendermintAbciResponseProcessProposal = ([xc_status]) => ({
    status: xc_status >= 0 ? ProtoToJsonEnumTendermintAbciResponseProcessProposalProposalStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseExtendVote}
 */
export const condenseTendermintAbciResponseExtendVote = (g_msg) => encodeTendermintAbciResponseExtendVote(safe_base64_to_bytes(g_msg.vote_extension));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseExtendVote` -
 */
export const expandTendermintAbciResponseExtendVote = ([atu8_vote_extension]) => ({
    vote_extension: safe_bytes_to_base64(atu8_vote_extension),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseVerifyVoteExtension}
 */
export const condenseTendermintAbciResponseVerifyVoteExtension = (g_msg) => encodeTendermintAbciResponseVerifyVoteExtension(JsonToProtoEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseVerifyVoteExtension` -
 */
export const expandTendermintAbciResponseVerifyVoteExtension = ([xc_status]) => ({
    status: xc_status >= 0 ? ProtoToJsonEnumTendermintAbciResponseVerifyVoteExtensionVerifyStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciResponseFinalizeBlock}
 */
export const condenseTendermintAbciResponseFinalizeBlock = (g_msg) => encodeTendermintAbciResponseFinalizeBlock(map(g_msg.events, condenseTendermintAbciEvent), map(g_msg.tx_results, condenseTendermintAbciExecTxResult), map(g_msg.validator_updates, condenseTendermintAbciValidatorUpdate), apply_opt(g_msg.consensus_param_updates, condenseTendermintTypesConsensusParams), safe_base64_to_bytes(g_msg.app_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ResponseFinalizeBlock` -
 */
export const expandTendermintAbciResponseFinalizeBlock = ([a_events, a_tx_results, a_validator_updates, a_consensus_param_updates, atu8_app_hash]) => ({
    events: a_events && map(a_events, expandTendermintAbciEvent),
    tx_results: a_tx_results && map(a_tx_results, expandTendermintAbciExecTxResult),
    validator_updates: a_validator_updates && map(a_validator_updates, expandTendermintAbciValidatorUpdate),
    consensus_param_updates: a_consensus_param_updates && expandTendermintTypesConsensusParams(a_consensus_param_updates),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciExecTxResult}
 */
export const condenseTendermintAbciExecTxResult = (g_msg) => encodeTendermintAbciExecTxResult(g_msg.code, safe_base64_to_bytes(g_msg.data), g_msg.log, g_msg.info, g_msg.gas_wanted, g_msg.gas_used, map(g_msg.events, condenseTendermintAbciEvent), g_msg.codespace);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.ExecTxResult` - contains results of executing one individual transaction. * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
 */
export const expandTendermintAbciExecTxResult = ([n_code, atu8_data, s_log, s_info, sg_gas_wanted, sg_gas_used, a_events, s_codespace]) => ({
    code: n_code,
    data: safe_bytes_to_base64(atu8_data),
    log: s_log,
    info: s_info,
    gas_wanted: sg_gas_wanted,
    gas_used: sg_gas_used,
    events: a_events && map(a_events, expandTendermintAbciEvent),
    codespace: s_codespace,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintAbciTxResult}
 */
export const condenseTendermintAbciTxResult = (g_msg) => encodeTendermintAbciTxResult(g_msg.height, g_msg.index, safe_base64_to_bytes(g_msg.tx), apply_opt(g_msg.result, condenseTendermintAbciExecTxResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.abci.TxResult` - contains results of executing the transaction. One usage is indexing transaction results.
 */
export const expandTendermintAbciTxResult = ([sg_height, n_index, atu8_tx, a_result]) => ({
    height: sg_height,
    index: n_index,
    tx: safe_bytes_to_base64(atu8_tx),
    result: a_result && expandTendermintAbciExecTxResult(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesEvidence}
 */
export const condenseTendermintTypesEvidence = (g_msg) => encodeTendermintTypesEvidence(apply_opt(g_msg.duplicate_vote_evidence, condenseTendermintTypesDuplicateVoteEvidence), apply_opt(g_msg.light_client_attack_evidence, condenseTendermintTypesLightClientAttackEvidence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Evidence` -
 */
export const expandTendermintTypesEvidence = ([a_duplicate_vote_evidence, a_light_client_attack_evidence]) => ({
    duplicate_vote_evidence: a_duplicate_vote_evidence && expandTendermintTypesDuplicateVoteEvidence(a_duplicate_vote_evidence),
    light_client_attack_evidence: a_light_client_attack_evidence && expandTendermintTypesLightClientAttackEvidence(a_light_client_attack_evidence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesDuplicateVoteEvidence}
 */
export const condenseTendermintTypesDuplicateVoteEvidence = (g_msg) => encodeTendermintTypesDuplicateVoteEvidence(apply_opt(g_msg.vote_a, condenseTendermintTypesVote), apply_opt(g_msg.vote_b, condenseTendermintTypesVote), g_msg.total_voting_power, g_msg.validator_power, parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.DuplicateVoteEvidence` - contains evidence of a validator signed two conflicting votes.
 */
export const expandTendermintTypesDuplicateVoteEvidence = ([a_vote_a, a_vote_b, sg_total_voting_power, sg_validator_power, a_timestamp]) => ({
    vote_a: a_vote_a && expandTendermintTypesVote(a_vote_a),
    vote_b: a_vote_b && expandTendermintTypesVote(a_vote_b),
    total_voting_power: sg_total_voting_power,
    validator_power: sg_validator_power,
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesVote}
 */
export const condenseTendermintTypesVote = (g_msg) => encodeTendermintTypesVote(JsonToProtoEnumTendermintTypesSignedMsgType[g_msg.type], g_msg.height, g_msg.round, apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), parse_timestamp(g_msg.timestamp), safe_base64_to_bytes(g_msg.validator_address), g_msg.validator_index, safe_base64_to_bytes(g_msg.signature), safe_base64_to_bytes(g_msg.extension), safe_base64_to_bytes(g_msg.extension_signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Vote` - represents a prevote or precommit vote from validators for consensus.
 */
export const expandTendermintTypesVote = ([xc_type, sg_height, n_round, a_block_id, a_timestamp, atu8_validator_address, n_validator_index, atu8_signature, atu8_extension, atu8_extension_signature]) => ({
    type: xc_type >= 0 ? ProtoToJsonEnumTendermintTypesSignedMsgType[xc_type] : __UNDEFINED,
    height: sg_height,
    round: n_round,
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    timestamp: expand_timestamp(a_timestamp),
    validator_address: safe_bytes_to_base64(atu8_validator_address),
    validator_index: n_validator_index,
    signature: safe_bytes_to_base64(atu8_signature),
    extension: safe_bytes_to_base64(atu8_extension),
    extension_signature: safe_bytes_to_base64(atu8_extension_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesBlockID}
 */
export const condenseTendermintTypesBlockID = (g_msg) => encodeTendermintTypesBlockID(safe_base64_to_bytes(g_msg.hash), apply_opt(g_msg.part_set_header, condenseTendermintTypesPartSetHeader));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.BlockID` -
 */
export const expandTendermintTypesBlockID = ([atu8_hash, a_part_set_header]) => ({
    hash: safe_bytes_to_base64(atu8_hash),
    part_set_header: a_part_set_header && expandTendermintTypesPartSetHeader(a_part_set_header),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesPartSetHeader}
 */
export const condenseTendermintTypesPartSetHeader = (g_msg) => encodeTendermintTypesPartSetHeader(g_msg.total, safe_base64_to_bytes(g_msg.hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.PartSetHeader` - PartsetHeader
 */
export const expandTendermintTypesPartSetHeader = ([n_total, atu8_hash]) => ({
    total: n_total,
    hash: safe_bytes_to_base64(atu8_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesLightClientAttackEvidence}
 */
export const condenseTendermintTypesLightClientAttackEvidence = (g_msg) => encodeTendermintTypesLightClientAttackEvidence(apply_opt(g_msg.conflicting_block, condenseTendermintTypesLightBlock), g_msg.common_height, map(g_msg.byzantine_validators, condenseTendermintTypesValidator), g_msg.total_voting_power, parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.LightClientAttackEvidence` - contains evidence of a set of validators attempting to mislead a light client.
 */
export const expandTendermintTypesLightClientAttackEvidence = ([a_conflicting_block, sg_common_height, a_byzantine_validators, sg_total_voting_power, a_timestamp]) => ({
    conflicting_block: a_conflicting_block && expandTendermintTypesLightBlock(a_conflicting_block),
    common_height: sg_common_height,
    byzantine_validators: a_byzantine_validators && map(a_byzantine_validators, expandTendermintTypesValidator),
    total_voting_power: sg_total_voting_power,
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesLightBlock}
 */
export const condenseTendermintTypesLightBlock = (g_msg) => encodeTendermintTypesLightBlock(apply_opt(g_msg.signed_header, condenseTendermintTypesSignedHeader), apply_opt(g_msg.validator_set, condenseTendermintTypesValidatorSet));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.LightBlock` -
 */
export const expandTendermintTypesLightBlock = ([a_signed_header, a_validator_set]) => ({
    signed_header: a_signed_header && expandTendermintTypesSignedHeader(a_signed_header),
    validator_set: a_validator_set && expandTendermintTypesValidatorSet(a_validator_set),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesSignedHeader}
 */
export const condenseTendermintTypesSignedHeader = (g_msg) => encodeTendermintTypesSignedHeader(apply_opt(g_msg.header, condenseTendermintTypesHeader), apply_opt(g_msg.commit, condenseTendermintTypesCommit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.SignedHeader` -
 */
export const expandTendermintTypesSignedHeader = ([a_header, a_commit]) => ({
    header: a_header && expandTendermintTypesHeader(a_header),
    commit: a_commit && expandTendermintTypesCommit(a_commit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesHeader}
 */
export const condenseTendermintTypesHeader = (g_msg) => encodeTendermintTypesHeader(apply_opt(g_msg.version, condenseTendermintVersionConsensus), g_msg.chain_id, g_msg.height, parse_timestamp(g_msg.time), apply_opt(g_msg.last_block_id, condenseTendermintTypesBlockID), safe_base64_to_bytes(g_msg.last_commit_hash), safe_base64_to_bytes(g_msg.data_hash), safe_base64_to_bytes(g_msg.validators_hash), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.consensus_hash), safe_base64_to_bytes(g_msg.app_hash), safe_base64_to_bytes(g_msg.last_results_hash), safe_base64_to_bytes(g_msg.evidence_hash), safe_base64_to_bytes(g_msg.proposer_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Header` - defines the structure of a block header.
 */
export const expandTendermintTypesHeader = ([a_version, si_chain, sg_height, a_time, a_last_block_id, atu8_last_commit_hash, atu8_data_hash, atu8_validators_hash, atu8_next_validators_hash, atu8_consensus_hash, atu8_app_hash, atu8_last_results_hash, atu8_evidence_hash, atu8_proposer_address]) => ({
    version: a_version && expandTendermintVersionConsensus(a_version),
    chain_id: si_chain,
    height: sg_height,
    time: expand_timestamp(a_time),
    last_block_id: a_last_block_id && expandTendermintTypesBlockID(a_last_block_id),
    last_commit_hash: safe_bytes_to_base64(atu8_last_commit_hash),
    data_hash: safe_bytes_to_base64(atu8_data_hash),
    validators_hash: safe_bytes_to_base64(atu8_validators_hash),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    consensus_hash: safe_bytes_to_base64(atu8_consensus_hash),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
    last_results_hash: safe_bytes_to_base64(atu8_last_results_hash),
    evidence_hash: safe_bytes_to_base64(atu8_evidence_hash),
    proposer_address: safe_bytes_to_base64(atu8_proposer_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintVersionConsensus}
 */
export const condenseTendermintVersionConsensus = (g_msg) => encodeTendermintVersionConsensus(g_msg.block, g_msg.app);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.version.Consensus` - captures the consensus rules for processing a block in the blockchain, including all blockchain data structures and the rules of the application's state transition machine.
 */
export const expandTendermintVersionConsensus = ([sg_block, sg_app]) => ({
    block: sg_block,
    app: sg_app,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesCommit}
 */
export const condenseTendermintTypesCommit = (g_msg) => encodeTendermintTypesCommit(g_msg.height, g_msg.round, apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), map(g_msg.signatures, condenseTendermintTypesCommitSig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Commit` - contains the evidence that a block was committed by a set of validators.
 */
export const expandTendermintTypesCommit = ([sg_height, n_round, a_block_id, a_signatures]) => ({
    height: sg_height,
    round: n_round,
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    signatures: a_signatures && map(a_signatures, expandTendermintTypesCommitSig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesCommitSig}
 */
export const condenseTendermintTypesCommitSig = (g_msg) => encodeTendermintTypesCommitSig(JsonToProtoEnumTendermintTypesBlockIDFlag[g_msg.block_id_flag], safe_base64_to_bytes(g_msg.validator_address), parse_timestamp(g_msg.timestamp), safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.CommitSig` - a part of the Vote included in a Commit.
 */
export const expandTendermintTypesCommitSig = ([xc_block_id_flag, atu8_validator_address, a_timestamp, atu8_signature]) => ({
    block_id_flag: xc_block_id_flag >= 0 ? ProtoToJsonEnumTendermintTypesBlockIDFlag[xc_block_id_flag] : __UNDEFINED,
    validator_address: safe_bytes_to_base64(atu8_validator_address),
    timestamp: expand_timestamp(a_timestamp),
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesValidatorSet}
 */
export const condenseTendermintTypesValidatorSet = (g_msg) => encodeTendermintTypesValidatorSet(map(g_msg.validators, condenseTendermintTypesValidator), apply_opt(g_msg.proposer, condenseTendermintTypesValidator), g_msg.total_voting_power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ValidatorSet` -
 */
export const expandTendermintTypesValidatorSet = ([a_validators, a_proposer, sg_total_voting_power]) => ({
    validators: a_validators && map(a_validators, expandTendermintTypesValidator),
    proposer: a_proposer && expandTendermintTypesValidator(a_proposer),
    total_voting_power: sg_total_voting_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesValidator}
 */
export const condenseTendermintTypesValidator = (g_msg) => encodeTendermintTypesValidator(safe_base64_to_bytes(g_msg.address), apply_opt(g_msg.pub_key, condenseTendermintCryptoPublicKey), g_msg.voting_power, g_msg.proposer_priority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Validator` -
 */
export const expandTendermintTypesValidator = ([atu8_address, a_pub_key, sg_voting_power, sg_proposer_priority]) => ({
    address: safe_bytes_to_base64(atu8_address),
    pub_key: a_pub_key && expandTendermintCryptoPublicKey(a_pub_key),
    voting_power: sg_voting_power,
    proposer_priority: sg_proposer_priority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesEvidenceList}
 */
export const condenseTendermintTypesEvidenceList = (g_msg) => encodeTendermintTypesEvidenceList(map(g_msg.evidence, condenseTendermintTypesEvidence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.EvidenceList` -
 */
export const expandTendermintTypesEvidenceList = ([a_evidence]) => ({
    evidence: a_evidence && map(a_evidence, expandTendermintTypesEvidence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesPart}
 */
export const condenseTendermintTypesPart = (g_msg) => encodeTendermintTypesPart(g_msg.index, safe_base64_to_bytes(g_msg.bytes), apply_opt(g_msg.proof, condenseTendermintCryptoProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Part` -
 */
export const expandTendermintTypesPart = ([n_index, atu8_bytes, a_proof]) => ({
    index: n_index,
    bytes: safe_bytes_to_base64(atu8_bytes),
    proof: a_proof && expandTendermintCryptoProof(a_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesData}
 */
export const condenseTendermintTypesData = (g_msg) => encodeTendermintTypesData(map(g_msg.txs, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Data` - contains the set of transactions included in the block
 */
export const expandTendermintTypesData = ([a_txs]) => ({
    txs: map(a_txs, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesExtendedCommit}
 */
export const condenseTendermintTypesExtendedCommit = (g_msg) => encodeTendermintTypesExtendedCommit(g_msg.height, g_msg.round, apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), map(g_msg.extended_signatures, condenseTendermintTypesExtendedCommitSig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ExtendedCommit` -
 */
export const expandTendermintTypesExtendedCommit = ([sg_height, n_round, a_block_id, a_extended_signatures]) => ({
    height: sg_height,
    round: n_round,
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    extended_signatures: a_extended_signatures && map(a_extended_signatures, expandTendermintTypesExtendedCommitSig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesExtendedCommitSig}
 */
export const condenseTendermintTypesExtendedCommitSig = (g_msg) => encodeTendermintTypesExtendedCommitSig(JsonToProtoEnumTendermintTypesBlockIDFlag[g_msg.block_id_flag], safe_base64_to_bytes(g_msg.validator_address), parse_timestamp(g_msg.timestamp), safe_base64_to_bytes(g_msg.signature), safe_base64_to_bytes(g_msg.extension), safe_base64_to_bytes(g_msg.extension_signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.ExtendedCommitSig` - retains all the same fields as CommitSig but adds vote extension-related fields. We use two signatures to ensure backwards compatibility. That is the digest of the original signature is still the same in prior versions
 */
export const expandTendermintTypesExtendedCommitSig = ([xc_block_id_flag, atu8_validator_address, a_timestamp, atu8_signature, atu8_extension, atu8_extension_signature]) => ({
    block_id_flag: xc_block_id_flag >= 0 ? ProtoToJsonEnumTendermintTypesBlockIDFlag[xc_block_id_flag] : __UNDEFINED,
    validator_address: safe_bytes_to_base64(atu8_validator_address),
    timestamp: expand_timestamp(a_timestamp),
    signature: safe_bytes_to_base64(atu8_signature),
    extension: safe_bytes_to_base64(atu8_extension),
    extension_signature: safe_bytes_to_base64(atu8_extension_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesProposal}
 */
export const condenseTendermintTypesProposal = (g_msg) => encodeTendermintTypesProposal(JsonToProtoEnumTendermintTypesSignedMsgType[g_msg.type], g_msg.height, g_msg.round, g_msg.pol_round, apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), parse_timestamp(g_msg.timestamp), safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Proposal` -
 */
export const expandTendermintTypesProposal = ([xc_type, sg_height, n_round, n_pol_round, a_block_id, a_timestamp, atu8_signature]) => ({
    type: xc_type >= 0 ? ProtoToJsonEnumTendermintTypesSignedMsgType[xc_type] : __UNDEFINED,
    height: sg_height,
    round: n_round,
    pol_round: n_pol_round,
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    timestamp: expand_timestamp(a_timestamp),
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesBlockMeta}
 */
export const condenseTendermintTypesBlockMeta = (g_msg) => encodeTendermintTypesBlockMeta(apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), g_msg.block_size, apply_opt(g_msg.header, condenseTendermintTypesHeader), g_msg.num_txs);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.BlockMeta` -
 */
export const expandTendermintTypesBlockMeta = ([a_block_id, sg_block_size, a_header, sg_num_txs]) => ({
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    block_size: sg_block_size,
    header: a_header && expandTendermintTypesHeader(a_header),
    num_txs: sg_num_txs,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesTxProof}
 */
export const condenseTendermintTypesTxProof = (g_msg) => encodeTendermintTypesTxProof(safe_base64_to_bytes(g_msg.root_hash), safe_base64_to_bytes(g_msg.data), apply_opt(g_msg.proof, condenseTendermintCryptoProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.TxProof` - represents a Merkle proof of the presence of a transaction in the Merkle tree.
 */
export const expandTendermintTypesTxProof = ([atu8_root_hash, atu8_data, a_proof]) => ({
    root_hash: safe_bytes_to_base64(atu8_root_hash),
    data: safe_bytes_to_base64(atu8_data),
    proof: a_proof && expandTendermintCryptoProof(a_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesSimpleValidator}
 */
export const condenseTendermintTypesSimpleValidator = (g_msg) => encodeTendermintTypesSimpleValidator(apply_opt(g_msg.pub_key, condenseTendermintCryptoPublicKey), g_msg.voting_power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.SimpleValidator` -
 */
export const expandTendermintTypesSimpleValidator = ([a_pub_key, sg_voting_power]) => ({
    pub_key: a_pub_key && expandTendermintCryptoPublicKey(a_pub_key),
    voting_power: sg_voting_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesBlock}
 */
export const condenseTendermintTypesBlock = (g_msg) => encodeTendermintTypesBlock(apply_opt(g_msg.header, condenseTendermintTypesHeader), apply_opt(g_msg.data, condenseTendermintTypesData), apply_opt(g_msg.evidence, condenseTendermintTypesEvidenceList), apply_opt(g_msg.last_commit, condenseTendermintTypesCommit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.Block` -
 */
export const expandTendermintTypesBlock = ([a_header, a_data, a_evidence, a_last_commit]) => ({
    header: a_header && expandTendermintTypesHeader(a_header),
    data: a_data && expandTendermintTypesData(a_data),
    evidence: a_evidence && expandTendermintTypesEvidenceList(a_evidence),
    last_commit: a_last_commit && expandTendermintTypesCommit(a_last_commit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintTypesHashedParams}
 */
export const condenseTendermintTypesHashedParams = (g_msg) => encodeTendermintTypesHashedParams(g_msg.block_max_bytes, g_msg.block_max_gas);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.types.HashedParams` - a subset of ConsensusParams. It is hashed into the Header.ConsensusHash.
 */
export const expandTendermintTypesHashedParams = ([sg_block_max_bytes, sg_block_max_gas]) => ({
    block_max_bytes: sg_block_max_bytes,
    block_max_gas: sg_block_max_gas,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintLibsBitsBitArray}
 */
export const condenseTendermintLibsBitsBitArray = (g_msg) => encodeTendermintLibsBitsBitArray(g_msg.bits, g_msg.elems);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.libs.bits.BitArray` -
 */
export const expandTendermintLibsBitsBitArray = ([sg_bits, a_elems]) => ({
    bits: sg_bits,
    elems: a_elems,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintVersionApp}
 */
export const condenseTendermintVersionApp = (g_msg) => encodeTendermintVersionApp(g_msg.protocol, g_msg.software);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.version.App` - includes the protocol and software version for the application. This information is included in ResponseInfo. The App.Protocol can be updated in ResponseEndBlock.
 */
export const expandTendermintVersionApp = ([sg_protocol, s_software]) => ({
    protocol: sg_protocol,
    software: s_software,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintP2pNetAddress}
 */
export const condenseTendermintP2pNetAddress = (g_msg) => encodeTendermintP2pNetAddress(g_msg.id, g_msg.ip, g_msg.port);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.p2p.NetAddress` -
 */
export const expandTendermintP2pNetAddress = ([s_id, s_ip, n_port]) => ({
    id: s_id,
    ip: s_ip,
    port: n_port,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintP2pProtocolVersion}
 */
export const condenseTendermintP2pProtocolVersion = (g_msg) => encodeTendermintP2pProtocolVersion(g_msg.p2p, g_msg.block, g_msg.app);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.p2p.ProtocolVersion` -
 */
export const expandTendermintP2pProtocolVersion = ([sg_p2p, sg_block, sg_app]) => ({
    p2p: sg_p2p,
    block: sg_block,
    app: sg_app,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintP2pDefaultNodeInfo}
 */
export const condenseTendermintP2pDefaultNodeInfo = (g_msg) => encodeTendermintP2pDefaultNodeInfo(apply_opt(g_msg.protocol_version, condenseTendermintP2pProtocolVersion), g_msg.default_node_id, g_msg.listen_addr, g_msg.network, g_msg.version, safe_base64_to_bytes(g_msg.channels), g_msg.moniker, apply_opt(g_msg.other, condenseTendermintP2pDefaultNodeInfoOther));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.p2p.DefaultNodeInfo` -
 */
export const expandTendermintP2pDefaultNodeInfo = ([a_protocol_version, si_default_node, sa_listen_addr, s_network, s_version, atu8_channels, s_moniker, a_other]) => ({
    protocol_version: a_protocol_version && expandTendermintP2pProtocolVersion(a_protocol_version),
    default_node_id: si_default_node,
    listen_addr: sa_listen_addr,
    network: s_network,
    version: s_version,
    channels: safe_bytes_to_base64(atu8_channels),
    moniker: s_moniker,
    other: a_other && expandTendermintP2pDefaultNodeInfoOther(a_other),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedTendermintP2pDefaultNodeInfoOther}
 */
export const condenseTendermintP2pDefaultNodeInfoOther = (g_msg) => encodeTendermintP2pDefaultNodeInfoOther(g_msg.tx_index, g_msg.rpc_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `tendermint.p2p.DefaultNodeInfoOther` -
 */
export const expandTendermintP2pDefaultNodeInfoOther = ([s_tx_index, sa_rpc]) => ({
    tx_index: s_tx_index,
    rpc_address: sa_rpc,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosConsensusV1MsgUpdateParams}
 */
export const condenseCosmosConsensusV1MsgUpdateParams = (g_msg) => encodeCosmosConsensusV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.block, condenseTendermintTypesBlockParams), apply_opt(g_msg.evidence, condenseTendermintTypesEvidenceParams), apply_opt(g_msg.validator, condenseTendermintTypesValidatorParams), apply_opt(g_msg.abci, condenseTendermintTypesABCIParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.consensus.v1.MsgUpdateParams` - the Msg/UpdateParams request type.
 */
export const expandCosmosConsensusV1MsgUpdateParams = ([s_authority, a_block, a_evidence, a_validator, a_abci]) => ({
    authority: s_authority,
    block: a_block && expandTendermintTypesBlockParams(a_block),
    evidence: a_evidence && expandTendermintTypesEvidenceParams(a_evidence),
    validator: a_validator && expandTendermintTypesValidatorParams(a_validator),
    abci: a_abci && expandTendermintTypesABCIParams(a_abci),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosConsensusV1MsgUpdateParamsResponse}
 */
export const condenseCosmosConsensusV1MsgUpdateParamsResponse = (g_msg) => encodeCosmosConsensusV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.consensus.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message.
 */
export const expandCosmosConsensusV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosConsensusV1QueryParamsRequest}
 */
export const condenseCosmosConsensusV1QueryParamsRequest = (g_msg) => encodeCosmosConsensusV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.consensus.v1.QueryParamsRequest` - defines the request type for querying x/consensus parameters.
 */
export const expandCosmosConsensusV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosConsensusV1QueryParamsResponse}
 */
export const condenseCosmosConsensusV1QueryParamsResponse = (g_msg) => encodeCosmosConsensusV1QueryParamsResponse(apply_opt(g_msg.params, condenseTendermintTypesConsensusParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.consensus.v1.QueryParamsResponse` - defines the response type for querying x/consensus parameters.
 */
export const expandCosmosConsensusV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandTendermintTypesConsensusParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosConsensusModuleV1Module}
 */
export const condenseCosmosConsensusModuleV1Module = (g_msg) => encodeCosmosConsensusModuleV1Module(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.consensus.module.v1.Module` - the config object of the consensus module.
 */
export const expandCosmosConsensusModuleV1Module = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoHdV1BIP44Params}
 */
export const condenseCosmosCryptoHdV1BIP44Params = (g_msg) => encodeCosmosCryptoHdV1BIP44Params(g_msg.purpose, g_msg.coin_type, g_msg.account, g_msg.change, g_msg.address_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.hd.v1.BIP44Params` - used as path field in ledger item in Record.
 */
export const expandCosmosCryptoHdV1BIP44Params = ([n_purpose, n_coin_type, n_account, b_change, n_address_index]) => ({
    purpose: n_purpose,
    coin_type: n_coin_type,
    account: n_account,
    change: !!b_change,
    address_index: n_address_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoSecp256r1PubKey}
 */
export const condenseCosmosCryptoSecp256r1PubKey = (g_msg) => encodeCosmosCryptoSecp256r1PubKey(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.secp256r1.PubKey` - defines a secp256r1 ECDSA public key.
 */
export const expandCosmosCryptoSecp256r1PubKey = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoSecp256r1PrivKey}
 */
export const condenseCosmosCryptoSecp256r1PrivKey = (g_msg) => encodeCosmosCryptoSecp256r1PrivKey(safe_base64_to_bytes(g_msg.secret));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.secp256r1.PrivKey` - defines a secp256r1 ECDSA private key.
 */
export const expandCosmosCryptoSecp256r1PrivKey = ([atu8_secret]) => ({
    secret: safe_bytes_to_base64(atu8_secret),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoMultisigV1beta1MultiSignature}
 */
export const condenseCosmosCryptoMultisigV1beta1MultiSignature = (g_msg) => encodeCosmosCryptoMultisigV1beta1MultiSignature(map(g_msg.signatures, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.multisig.v1beta1.MultiSignature` - wraps the signatures from a multisig.LegacyAminoPubKey. See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers signed and with which modes.
 */
export const expandCosmosCryptoMultisigV1beta1MultiSignature = ([a_signatures]) => ({
    signatures: map(a_signatures, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoMultisigV1beta1CompactBitArray}
 */
export const condenseCosmosCryptoMultisigV1beta1CompactBitArray = (g_msg) => encodeCosmosCryptoMultisigV1beta1CompactBitArray(g_msg.extra_bits_stored, safe_base64_to_bytes(g_msg.elems));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.multisig.v1beta1.CompactBitArray` - an implementation of a space efficient bit array. This is used to ensure that the encoded data takes up a minimal amount of space after proto encoding. This is not thread safe, and is not intended for concurrent usage.
 */
export const expandCosmosCryptoMultisigV1beta1CompactBitArray = ([n_extra_bits_stored, atu8_elems]) => ({
    extra_bits_stored: n_extra_bits_stored,
    elems: safe_bytes_to_base64(atu8_elems),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoMultisigLegacyAminoPubKey}
 */
export const condenseCosmosCryptoMultisigLegacyAminoPubKey = (g_msg) => encodeCosmosCryptoMultisigLegacyAminoPubKey(g_msg.threshold, map(g_msg.public_keys, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.multisig.LegacyAminoPubKey` - specifies a public key type which nests multiple public keys and a threshold, it uses legacy amino address rules.
 */
export const expandCosmosCryptoMultisigLegacyAminoPubKey = ([n_threshold, a_public_keys]) => ({
    threshold: n_threshold,
    public_keys: a_public_keys && map(a_public_keys, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufAny}
 */
export const condenseGoogleProtobufAny = (g_msg) => encodeGoogleProtobufAny(g_msg.type_url, safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.Any` - `Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++. Foo foo = ...; Any any; any.PackFrom(foo); ... if (any.UnpackTo(&foo)) { ... } Example 2: Pack and unpack a message in Java. Foo foo = ...; Any any = Any.pack(foo); ... if (any.is(Foo.class)) { foo = any.unpack(Foo.class); } // or ... if (any.isSameTypeAs(Foo.getDefaultInstance())) { foo = any.unpack(Foo.getDefaultInstance()); } Example 3: Pack and unpack a message in Python. foo = Foo(...) any = Any() any.Pack(foo) ... if any.Is(Foo.DESCRIPTOR): any.Unpack(foo) ... Example 4: Pack and unpack a message in Go foo := &pb.Foo{...} any, err := anypb.New(foo) if err != nil { ... } ... foo := &pb.Foo{} if err := any.UnmarshalTo(foo); err != nil { ... } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example: package google.profile; message Person { string first_name = 1; string last_name = 2; } { "@type": "type.googleapis.com/google.profile.Person", "firstName": <string>, "lastName": <string> } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]): { "@type": "type.googleapis.com/google.protobuf.Duration", "value": "1.212s" }
 */
export const expandGoogleProtobufAny = ([s_type_url, atu8_value]) => ({
    type_url: s_type_url,
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoSecp256k1PubKey}
 */
export const condenseCosmosCryptoSecp256k1PubKey = (g_msg) => encodeCosmosCryptoSecp256k1PubKey(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.secp256k1.PubKey` - defines a secp256k1 public key Key is the compressed form of the pubkey. The first byte depends is a 0x02 byte if the y-coordinate is the lexicographically largest of the two associated with the x-coordinate. Otherwise the first byte is a 0x03. This prefix is followed with the x-coordinate.
 */
export const expandCosmosCryptoSecp256k1PubKey = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoSecp256k1PrivKey}
 */
export const condenseCosmosCryptoSecp256k1PrivKey = (g_msg) => encodeCosmosCryptoSecp256k1PrivKey(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.secp256k1.PrivKey` - defines a secp256k1 private key.
 */
export const expandCosmosCryptoSecp256k1PrivKey = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoKeyringV1Record}
 */
export const condenseCosmosCryptoKeyringV1Record = (g_msg) => encodeCosmosCryptoKeyringV1Record(g_msg.name, condenseJsonAny(g_msg.pub_key), apply_opt(g_msg.local, condenseCosmosCryptoKeyringV1RecordLocal), apply_opt(g_msg.ledger, condenseCosmosCryptoKeyringV1RecordLedger), apply_opt(g_msg.multi, condenseCosmosCryptoKeyringV1RecordMulti), apply_opt(g_msg.offline, condenseCosmosCryptoKeyringV1RecordOffline));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.keyring.v1.Record` - used for representing a key in the keyring.
 */
export const expandCosmosCryptoKeyringV1Record = ([s_name, a_pub_key, a_local, a_ledger, a_multi, a_offline]) => ({
    name: s_name,
    pub_key: a_pub_key && expandJsonAny(a_pub_key),
    local: a_local && expandCosmosCryptoKeyringV1RecordLocal(a_local),
    ledger: a_ledger && expandCosmosCryptoKeyringV1RecordLedger(a_ledger),
    multi: a_multi && expandCosmosCryptoKeyringV1RecordMulti(a_multi),
    offline: a_offline && expandCosmosCryptoKeyringV1RecordOffline(a_offline),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoKeyringV1RecordLocal}
 */
export const condenseCosmosCryptoKeyringV1RecordLocal = (g_msg) => encodeCosmosCryptoKeyringV1RecordLocal(condenseJsonAny(g_msg.priv_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.keyring.v1.Record.Local` -
 */
export const expandCosmosCryptoKeyringV1RecordLocal = ([a_priv_key]) => ({
    priv_key: a_priv_key && expandJsonAny(a_priv_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoKeyringV1RecordLedger}
 */
export const condenseCosmosCryptoKeyringV1RecordLedger = (g_msg) => encodeCosmosCryptoKeyringV1RecordLedger(apply_opt(g_msg.path, condenseCosmosCryptoHdV1BIP44Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.keyring.v1.Record.Ledger` -
 */
export const expandCosmosCryptoKeyringV1RecordLedger = ([a_path]) => ({
    path: a_path && expandCosmosCryptoHdV1BIP44Params(a_path),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoKeyringV1RecordMulti}
 */
export const condenseCosmosCryptoKeyringV1RecordMulti = (g_msg) => encodeCosmosCryptoKeyringV1RecordMulti();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.keyring.v1.Record.Multi` -
 */
export const expandCosmosCryptoKeyringV1RecordMulti = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoKeyringV1RecordOffline}
 */
export const condenseCosmosCryptoKeyringV1RecordOffline = (g_msg) => encodeCosmosCryptoKeyringV1RecordOffline();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.keyring.v1.Record.Offline` -
 */
export const expandCosmosCryptoKeyringV1RecordOffline = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoEd25519PubKey}
 */
export const condenseCosmosCryptoEd25519PubKey = (g_msg) => encodeCosmosCryptoEd25519PubKey(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.ed25519.PubKey` - an ed25519 public key for handling Tendermint keys in SDK. It's needed for Any serialization and SDK compatibility. It must not be used in a non Tendermint key context because it doesn't implement ADR-28. Nevertheless, you will like to use ed25519 in app user level then you must create a new proto message and follow ADR-28 for Address construction.
 */
export const expandCosmosCryptoEd25519PubKey = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCryptoEd25519PrivKey}
 */
export const condenseCosmosCryptoEd25519PrivKey = (g_msg) => encodeCosmosCryptoEd25519PrivKey(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crypto.ed25519.PrivKey` - defines a ed25519 private key. NOTE: ed25519 keys must not be used in SDK apps except in a tendermint validator context.
 */
export const expandCosmosCryptoEd25519PrivKey = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeModuleV1Module}
 */
export const condenseCosmosUpgradeModuleV1Module = (g_msg) => encodeCosmosUpgradeModuleV1Module(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.module.v1.Module` - the config object of the upgrade module.
 */
export const expandCosmosUpgradeModuleV1Module = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1MsgSoftwareUpgrade}
 */
export const condenseCosmosUpgradeV1beta1MsgSoftwareUpgrade = (g_msg) => encodeCosmosUpgradeV1beta1MsgSoftwareUpgrade(g_msg.authority, apply_opt(g_msg.plan, condenseCosmosUpgradeV1beta1Plan));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.MsgSoftwareUpgrade` - the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1MsgSoftwareUpgrade = ([s_authority, a_plan]) => ({
    authority: s_authority,
    plan: a_plan && expandCosmosUpgradeV1beta1Plan(a_plan),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1Plan}
 */
export const condenseCosmosUpgradeV1beta1Plan = (g_msg) => encodeCosmosUpgradeV1beta1Plan(g_msg.name, parse_timestamp(g_msg.time), g_msg.height, g_msg.info, condenseJsonAny(g_msg.upgraded_client_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.Plan` - specifies information about a planned upgrade and when it should occur.
 */
export const expandCosmosUpgradeV1beta1Plan = ([s_name, a_time, sg_height, s_info, a_upgraded_client_state]) => ({
    name: s_name,
    time: expand_timestamp(a_time),
    height: sg_height,
    info: s_info,
    upgraded_client_state: a_upgraded_client_state && expandJsonAny(a_upgraded_client_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse}
 */
export const condenseCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse = (g_msg) => encodeCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse` - the Msg/SoftwareUpgrade response type. Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1MsgCancelUpgrade}
 */
export const condenseCosmosUpgradeV1beta1MsgCancelUpgrade = (g_msg) => encodeCosmosUpgradeV1beta1MsgCancelUpgrade(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.MsgCancelUpgrade` - the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1MsgCancelUpgrade = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1MsgCancelUpgradeResponse}
 */
export const condenseCosmosUpgradeV1beta1MsgCancelUpgradeResponse = (g_msg) => encodeCosmosUpgradeV1beta1MsgCancelUpgradeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse` - the Msg/CancelUpgrade response type. Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1MsgCancelUpgradeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1SoftwareUpgradeProposal}
 */
export const condenseCosmosUpgradeV1beta1SoftwareUpgradeProposal = (g_msg) => encodeCosmosUpgradeV1beta1SoftwareUpgradeProposal(g_msg.title, g_msg.description, apply_opt(g_msg.plan, condenseCosmosUpgradeV1beta1Plan));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.SoftwareUpgradeProposal` - a gov Content type for initiating a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgSoftwareUpgrade.
 */
export const expandCosmosUpgradeV1beta1SoftwareUpgradeProposal = ([s_title, s_description, a_plan]) => ({
    title: s_title,
    description: s_description,
    plan: a_plan && expandCosmosUpgradeV1beta1Plan(a_plan),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal}
 */
export const condenseCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal = (g_msg) => encodeCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal(g_msg.title, g_msg.description);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal` - a gov Content type for cancelling a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgCancelUpgrade.
 */
export const expandCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal = ([s_title, s_description]) => ({
    title: s_title,
    description: s_description,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1ModuleVersion}
 */
export const condenseCosmosUpgradeV1beta1ModuleVersion = (g_msg) => encodeCosmosUpgradeV1beta1ModuleVersion(g_msg.name, g_msg.version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.ModuleVersion` - specifies a module and its consensus version. Since: cosmos-sdk 0.43
 */
export const expandCosmosUpgradeV1beta1ModuleVersion = ([s_name, sg_version]) => ({
    name: s_name,
    version: sg_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryCurrentPlanRequest}
 */
export const condenseCosmosUpgradeV1beta1QueryCurrentPlanRequest = (g_msg) => encodeCosmosUpgradeV1beta1QueryCurrentPlanRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryCurrentPlanRequest` - the request type for the Query/CurrentPlan RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryCurrentPlanRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryCurrentPlanResponse}
 */
export const condenseCosmosUpgradeV1beta1QueryCurrentPlanResponse = (g_msg) => encodeCosmosUpgradeV1beta1QueryCurrentPlanResponse(apply_opt(g_msg.plan, condenseCosmosUpgradeV1beta1Plan));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryCurrentPlanResponse` - the response type for the Query/CurrentPlan RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryCurrentPlanResponse = ([a_plan]) => ({
    plan: a_plan && expandCosmosUpgradeV1beta1Plan(a_plan),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryAppliedPlanRequest}
 */
export const condenseCosmosUpgradeV1beta1QueryAppliedPlanRequest = (g_msg) => encodeCosmosUpgradeV1beta1QueryAppliedPlanRequest(g_msg.name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryAppliedPlanRequest` - QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryAppliedPlanRequest = ([s_name]) => ({
    name: s_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryAppliedPlanResponse}
 */
export const condenseCosmosUpgradeV1beta1QueryAppliedPlanResponse = (g_msg) => encodeCosmosUpgradeV1beta1QueryAppliedPlanResponse(g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryAppliedPlanResponse` - the response type for the Query/AppliedPlan RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryAppliedPlanResponse = ([sg_height]) => ({
    height: sg_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest}
 */
export const condenseCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest = (g_msg) => encodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest(g_msg.last_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest` - the request type for the Query/UpgradedConsensusState RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest = ([sg_last_height]) => ({
    last_height: sg_last_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse}
 */
export const condenseCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse = (g_msg) => encodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse(safe_base64_to_bytes(g_msg.upgraded_consensus_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse` - the response type for the Query/UpgradedConsensusState RPC method.
 */
export const expandCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse = ([, atu8_upgraded_consensus_state]) => ({
    upgraded_consensus_state: safe_bytes_to_base64(atu8_upgraded_consensus_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryModuleVersionsRequest}
 */
export const condenseCosmosUpgradeV1beta1QueryModuleVersionsRequest = (g_msg) => encodeCosmosUpgradeV1beta1QueryModuleVersionsRequest(g_msg.module_name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryModuleVersionsRequest` - the request type for the Query/ModuleVersions RPC method. Since: cosmos-sdk 0.43
 */
export const expandCosmosUpgradeV1beta1QueryModuleVersionsRequest = ([s_module_name]) => ({
    module_name: s_module_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryModuleVersionsResponse}
 */
export const condenseCosmosUpgradeV1beta1QueryModuleVersionsResponse = (g_msg) => encodeCosmosUpgradeV1beta1QueryModuleVersionsResponse(map(g_msg.module_versions, condenseCosmosUpgradeV1beta1ModuleVersion));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryModuleVersionsResponse` - the response type for the Query/ModuleVersions RPC method. Since: cosmos-sdk 0.43
 */
export const expandCosmosUpgradeV1beta1QueryModuleVersionsResponse = ([a_module_versions]) => ({
    module_versions: a_module_versions && map(a_module_versions, expandCosmosUpgradeV1beta1ModuleVersion),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryAuthorityRequest}
 */
export const condenseCosmosUpgradeV1beta1QueryAuthorityRequest = (g_msg) => encodeCosmosUpgradeV1beta1QueryAuthorityRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryAuthorityRequest` - the request type for Query/Authority Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1QueryAuthorityRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosUpgradeV1beta1QueryAuthorityResponse}
 */
export const condenseCosmosUpgradeV1beta1QueryAuthorityResponse = (g_msg) => encodeCosmosUpgradeV1beta1QueryAuthorityResponse(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.upgrade.v1beta1.QueryAuthorityResponse` - the response type for Query/Authority Since: cosmos-sdk 0.46
 */
export const expandCosmosUpgradeV1beta1QueryAuthorityResponse = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantModuleV1Module}
 */
export const condenseCosmosFeegrantModuleV1Module = (g_msg) => encodeCosmosFeegrantModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.module.v1.Module` - the config object of the feegrant module.
 */
export const expandCosmosFeegrantModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1MsgGrantAllowance}
 */
export const condenseCosmosFeegrantV1beta1MsgGrantAllowance = (g_msg) => encodeCosmosFeegrantV1beta1MsgGrantAllowance(g_msg.granter, g_msg.grantee, condenseJsonAny(g_msg.allowance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.MsgGrantAllowance` - adds permission for Grantee to spend up to Allowance of fees from the account of Granter.
 */
export const expandCosmosFeegrantV1beta1MsgGrantAllowance = ([sa_granter, sa_grantee, a_allowance]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    allowance: a_allowance && expandJsonAny(a_allowance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1MsgGrantAllowanceResponse}
 */
export const condenseCosmosFeegrantV1beta1MsgGrantAllowanceResponse = (g_msg) => encodeCosmosFeegrantV1beta1MsgGrantAllowanceResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse` - defines the Msg/GrantAllowanceResponse response type.
 */
export const expandCosmosFeegrantV1beta1MsgGrantAllowanceResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1MsgRevokeAllowance}
 */
export const condenseCosmosFeegrantV1beta1MsgRevokeAllowance = (g_msg) => encodeCosmosFeegrantV1beta1MsgRevokeAllowance(g_msg.granter, g_msg.grantee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.MsgRevokeAllowance` - removes any existing Allowance from Granter to Grantee.
 */
export const expandCosmosFeegrantV1beta1MsgRevokeAllowance = ([sa_granter, sa_grantee]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1MsgRevokeAllowanceResponse}
 */
export const condenseCosmosFeegrantV1beta1MsgRevokeAllowanceResponse = (g_msg) => encodeCosmosFeegrantV1beta1MsgRevokeAllowanceResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse` - defines the Msg/RevokeAllowanceResponse response type.
 */
export const expandCosmosFeegrantV1beta1MsgRevokeAllowanceResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowanceRequest}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowanceRequest = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowanceRequest(g_msg.granter, g_msg.grantee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowanceRequest` - the request type for the Query/Allowance RPC method.
 */
export const expandCosmosFeegrantV1beta1QueryAllowanceRequest = ([sa_granter, sa_grantee]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowanceResponse}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowanceResponse = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowanceResponse(apply_opt(g_msg.allowance, condenseCosmosFeegrantV1beta1Grant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowanceResponse` - the response type for the Query/Allowance RPC method.
 */
export const expandCosmosFeegrantV1beta1QueryAllowanceResponse = ([a_allowance]) => ({
    allowance: a_allowance && expandCosmosFeegrantV1beta1Grant(a_allowance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1Grant}
 */
export const condenseCosmosFeegrantV1beta1Grant = (g_msg) => encodeCosmosFeegrantV1beta1Grant(g_msg.granter, g_msg.grantee, condenseJsonAny(g_msg.allowance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.Grant` - stored in the KVStore to record a grant with full context
 */
export const expandCosmosFeegrantV1beta1Grant = ([sa_granter, sa_grantee, a_allowance]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    allowance: a_allowance && expandJsonAny(a_allowance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowancesRequest}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowancesRequest = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowancesRequest(g_msg.grantee, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowancesRequest` - the request type for the Query/Allowances RPC method.
 */
export const expandCosmosFeegrantV1beta1QueryAllowancesRequest = ([sa_grantee, a_pagination]) => ({
    grantee: sa_grantee,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseQueryV1beta1PageRequest}
 */
export const condenseCosmosBaseQueryV1beta1PageRequest = (g_msg) => encodeCosmosBaseQueryV1beta1PageRequest(safe_base64_to_bytes(g_msg.key), g_msg.offset, g_msg.limit, g_msg.count_total, g_msg.reverse);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.query.v1beta1.PageRequest` - to be embedded in gRPC request messages for efficient pagination. Ex: message SomeRequest { Foo some_parameter = 1; PageRequest pagination = 2; }
 */
export const expandCosmosBaseQueryV1beta1PageRequest = ([atu8_key, sg_offset, sg_limit, b_count_total, b_reverse]) => ({
    key: safe_bytes_to_base64(atu8_key),
    offset: sg_offset,
    limit: sg_limit,
    count_total: !!b_count_total,
    reverse: !!b_reverse,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowancesResponse}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowancesResponse = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowancesResponse(map(g_msg.allowances, condenseCosmosFeegrantV1beta1Grant), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowancesResponse` - the response type for the Query/Allowances RPC method.
 */
export const expandCosmosFeegrantV1beta1QueryAllowancesResponse = ([a_allowances, a_pagination]) => ({
    allowances: a_allowances && map(a_allowances, expandCosmosFeegrantV1beta1Grant),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseQueryV1beta1PageResponse}
 */
export const condenseCosmosBaseQueryV1beta1PageResponse = (g_msg) => encodeCosmosBaseQueryV1beta1PageResponse(safe_base64_to_bytes(g_msg.next_key), g_msg.total);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.query.v1beta1.PageResponse` - to be embedded in gRPC response messages where the corresponding request message has used PageRequest. message SomeResponse { repeated Bar results = 1; PageResponse page = 2; }
 */
export const expandCosmosBaseQueryV1beta1PageResponse = ([atu8_next_key, sg_total]) => ({
    next_key: safe_bytes_to_base64(atu8_next_key),
    total: sg_total,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowancesByGranterRequest}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowancesByGranterRequest = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowancesByGranterRequest(g_msg.granter, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest` - the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 */
export const expandCosmosFeegrantV1beta1QueryAllowancesByGranterRequest = ([sa_granter, a_pagination]) => ({
    granter: sa_granter,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1QueryAllowancesByGranterResponse}
 */
export const condenseCosmosFeegrantV1beta1QueryAllowancesByGranterResponse = (g_msg) => encodeCosmosFeegrantV1beta1QueryAllowancesByGranterResponse(map(g_msg.allowances, condenseCosmosFeegrantV1beta1Grant), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse` - the response type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 */
export const expandCosmosFeegrantV1beta1QueryAllowancesByGranterResponse = ([a_allowances, a_pagination]) => ({
    allowances: a_allowances && map(a_allowances, expandCosmosFeegrantV1beta1Grant),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1GenesisState}
 */
export const condenseCosmosFeegrantV1beta1GenesisState = (g_msg) => encodeCosmosFeegrantV1beta1GenesisState(map(g_msg.allowances, condenseCosmosFeegrantV1beta1Grant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.GenesisState` - contains a set of fee allowances, persisted from the store
 */
export const expandCosmosFeegrantV1beta1GenesisState = ([a_allowances]) => ({
    allowances: a_allowances && map(a_allowances, expandCosmosFeegrantV1beta1Grant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1BasicAllowance}
 */
export const condenseCosmosFeegrantV1beta1BasicAllowance = (g_msg) => encodeCosmosFeegrantV1beta1BasicAllowance(map(g_msg.spend_limit, slimify_coin), parse_timestamp(g_msg.expiration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.BasicAllowance` - implements Allowance with a one-time grant of coins that optionally expires. The grantee can use up to SpendLimit to cover fees.
 */
export const expandCosmosFeegrantV1beta1BasicAllowance = ([a_spend_limit, a_expiration]) => ({
    spend_limit: a_spend_limit && map(a_spend_limit, expand_coin),
    expiration: expand_timestamp(a_expiration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseV1beta1Coin}
 */
export const condenseCosmosBaseV1beta1Coin = (g_msg) => encodeCosmosBaseV1beta1Coin(g_msg.denom, g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.v1beta1.Coin` - defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto.
 */
export const expandCosmosBaseV1beta1Coin = ([s_denom, s_amount]) => ({
    denom: s_denom,
    amount: s_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1PeriodicAllowance}
 */
export const condenseCosmosFeegrantV1beta1PeriodicAllowance = (g_msg) => encodeCosmosFeegrantV1beta1PeriodicAllowance(apply_opt(g_msg.basic, condenseCosmosFeegrantV1beta1BasicAllowance), parse_duration(g_msg.period), map(g_msg.period_spend_limit, slimify_coin), map(g_msg.period_can_spend, slimify_coin), parse_timestamp(g_msg.period_reset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.PeriodicAllowance` - extends Allowance to allow for both a maximum cap, as well as a limit per time period.
 */
export const expandCosmosFeegrantV1beta1PeriodicAllowance = ([a_basic, a_period, a_period_spend_limit, a_period_can_spend, a_period_reset]) => ({
    basic: a_basic && expandCosmosFeegrantV1beta1BasicAllowance(a_basic),
    period: expand_duration(a_period),
    period_spend_limit: a_period_spend_limit && map(a_period_spend_limit, expand_coin),
    period_can_spend: a_period_can_spend && map(a_period_can_spend, expand_coin),
    period_reset: expand_timestamp(a_period_reset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosFeegrantV1beta1AllowedMsgAllowance}
 */
export const condenseCosmosFeegrantV1beta1AllowedMsgAllowance = (g_msg) => encodeCosmosFeegrantV1beta1AllowedMsgAllowance(condenseJsonAny(g_msg.allowance), g_msg.allowed_messages);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.feegrant.v1beta1.AllowedMsgAllowance` - creates allowance only for specified message types.
 */
export const expandCosmosFeegrantV1beta1AllowedMsgAllowance = ([a_allowance, a_allowed_messages]) => ({
    allowance: a_allowance && expandJsonAny(a_allowance),
    allowed_messages: a_allowed_messages,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintModuleV1Module}
 */
export const condenseCosmosMintModuleV1Module = (g_msg) => encodeCosmosMintModuleV1Module(g_msg.fee_collector_name, g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.module.v1.Module` - the config object of the mint module.
 */
export const expandCosmosMintModuleV1Module = ([s_fee_collector_name, s_authority]) => ({
    fee_collector_name: s_fee_collector_name,
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1MsgUpdateParams}
 */
export const condenseCosmosMintV1beta1MsgUpdateParams = (g_msg) => encodeCosmosMintV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosMintV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosMintV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosMintV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1Params}
 */
export const condenseCosmosMintV1beta1Params = (g_msg) => encodeCosmosMintV1beta1Params(g_msg.mint_denom, g_msg.inflation_rate_change, g_msg.inflation_max, g_msg.inflation_min, g_msg.goal_bonded, g_msg.blocks_per_year);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.Params` - defines the parameters for the x/mint module.
 */
export const expandCosmosMintV1beta1Params = ([s_mint_denom, s_inflation_rate_change, s_inflation_max, s_inflation_min, s_goal_bonded, sg_blocks_per_year]) => ({
    mint_denom: s_mint_denom,
    inflation_rate_change: s_inflation_rate_change,
    inflation_max: s_inflation_max,
    inflation_min: s_inflation_min,
    goal_bonded: s_goal_bonded,
    blocks_per_year: sg_blocks_per_year,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosMintV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosMintV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosMintV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryParamsRequest}
 */
export const condenseCosmosMintV1beta1QueryParamsRequest = (g_msg) => encodeCosmosMintV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmosMintV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryParamsResponse}
 */
export const condenseCosmosMintV1beta1QueryParamsResponse = (g_msg) => encodeCosmosMintV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosMintV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmosMintV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosMintV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryInflationRequest}
 */
export const condenseCosmosMintV1beta1QueryInflationRequest = (g_msg) => encodeCosmosMintV1beta1QueryInflationRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryInflationRequest` - the request type for the Query/Inflation RPC method.
 */
export const expandCosmosMintV1beta1QueryInflationRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryInflationResponse}
 */
export const condenseCosmosMintV1beta1QueryInflationResponse = (g_msg) => encodeCosmosMintV1beta1QueryInflationResponse(safe_base64_to_bytes(g_msg.inflation));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryInflationResponse` - the response type for the Query/Inflation RPC method.
 */
export const expandCosmosMintV1beta1QueryInflationResponse = ([atu8_inflation]) => ({
    inflation: safe_bytes_to_base64(atu8_inflation),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryAnnualProvisionsRequest}
 */
export const condenseCosmosMintV1beta1QueryAnnualProvisionsRequest = (g_msg) => encodeCosmosMintV1beta1QueryAnnualProvisionsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryAnnualProvisionsRequest` - the request type for the Query/AnnualProvisions RPC method.
 */
export const expandCosmosMintV1beta1QueryAnnualProvisionsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1QueryAnnualProvisionsResponse}
 */
export const condenseCosmosMintV1beta1QueryAnnualProvisionsResponse = (g_msg) => encodeCosmosMintV1beta1QueryAnnualProvisionsResponse(safe_base64_to_bytes(g_msg.annual_provisions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.QueryAnnualProvisionsResponse` - the response type for the Query/AnnualProvisions RPC method.
 */
export const expandCosmosMintV1beta1QueryAnnualProvisionsResponse = ([atu8_annual_provisions]) => ({
    annual_provisions: safe_bytes_to_base64(atu8_annual_provisions),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1GenesisState}
 */
export const condenseCosmosMintV1beta1GenesisState = (g_msg) => encodeCosmosMintV1beta1GenesisState(apply_opt(g_msg.minter, condenseCosmosMintV1beta1Minter), apply_opt(g_msg.params, condenseCosmosMintV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.GenesisState` - defines the mint module's genesis state.
 */
export const expandCosmosMintV1beta1GenesisState = ([a_minter, a_params]) => ({
    minter: a_minter && expandCosmosMintV1beta1Minter(a_minter),
    params: a_params && expandCosmosMintV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosMintV1beta1Minter}
 */
export const condenseCosmosMintV1beta1Minter = (g_msg) => encodeCosmosMintV1beta1Minter(g_msg.inflation, g_msg.annual_provisions);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.mint.v1beta1.Minter` - represents the minting state.
 */
export const expandCosmosMintV1beta1Minter = ([s_inflation, s_annual_provisions]) => ({
    inflation: s_inflation,
    annual_provisions: s_annual_provisions,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppRuntimeV1alpha1Module}
 */
export const condenseCosmosAppRuntimeV1alpha1Module = (g_msg) => encodeCosmosAppRuntimeV1alpha1Module(g_msg.app_name, g_msg.begin_blockers, g_msg.end_blockers, g_msg.init_genesis, g_msg.export_genesis, map(g_msg.override_store_keys, condenseCosmosAppRuntimeV1alpha1StoreKeyConfig), g_msg.order_migrations, g_msg.precommiters, g_msg.prepare_check_staters, g_msg.pre_blockers);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.runtime.v1alpha1.Module` - the config object for the runtime module.
 */
export const expandCosmosAppRuntimeV1alpha1Module = ([s_app_name, a_begin_blockers, a_end_blockers, a_init_genesis, a_export_genesis, a_override_store_keys, a_order_migrations, a_precommiters, a_prepare_check_staters, a_pre_blockers]) => ({
    app_name: s_app_name,
    begin_blockers: a_begin_blockers,
    end_blockers: a_end_blockers,
    init_genesis: a_init_genesis,
    export_genesis: a_export_genesis,
    override_store_keys: a_override_store_keys && map(a_override_store_keys, expandCosmosAppRuntimeV1alpha1StoreKeyConfig),
    order_migrations: a_order_migrations,
    precommiters: a_precommiters,
    prepare_check_staters: a_prepare_check_staters,
    pre_blockers: a_pre_blockers,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppRuntimeV1alpha1StoreKeyConfig}
 */
export const condenseCosmosAppRuntimeV1alpha1StoreKeyConfig = (g_msg) => encodeCosmosAppRuntimeV1alpha1StoreKeyConfig(g_msg.module_name, g_msg.kv_store_key);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.runtime.v1alpha1.StoreKeyConfig` - may be supplied to override the default module store key, which is the module name.
 */
export const expandCosmosAppRuntimeV1alpha1StoreKeyConfig = ([s_module_name, s_kv_store_key]) => ({
    module_name: s_module_name,
    kv_store_key: s_kv_store_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1ModuleDescriptor}
 */
export const condenseCosmosAppV1alpha1ModuleDescriptor = (g_msg) => encodeCosmosAppV1alpha1ModuleDescriptor(g_msg.go_import, map(g_msg.use_package, condenseCosmosAppV1alpha1PackageReference), map(g_msg.can_migrate_from, condenseCosmosAppV1alpha1MigrateFromInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.ModuleDescriptor` - describes an app module.
 */
export const expandCosmosAppV1alpha1ModuleDescriptor = ([s_go_import, a_use_package, a_can_migrate_from]) => ({
    go_import: s_go_import,
    use_package: a_use_package && map(a_use_package, expandCosmosAppV1alpha1PackageReference),
    can_migrate_from: a_can_migrate_from && map(a_can_migrate_from, expandCosmosAppV1alpha1MigrateFromInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1PackageReference}
 */
export const condenseCosmosAppV1alpha1PackageReference = (g_msg) => encodeCosmosAppV1alpha1PackageReference(g_msg.name, g_msg.revision);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.PackageReference` - a reference to a protobuf package used by a module.
 */
export const expandCosmosAppV1alpha1PackageReference = ([s_name, n_revision]) => ({
    name: s_name,
    revision: n_revision,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1MigrateFromInfo}
 */
export const condenseCosmosAppV1alpha1MigrateFromInfo = (g_msg) => encodeCosmosAppV1alpha1MigrateFromInfo(g_msg.module);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.MigrateFromInfo` - information on a module version that a newer module can migrate from.
 */
export const expandCosmosAppV1alpha1MigrateFromInfo = ([s_module]) => ({
    module: s_module,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1QueryConfigRequest}
 */
export const condenseCosmosAppV1alpha1QueryConfigRequest = (g_msg) => encodeCosmosAppV1alpha1QueryConfigRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.QueryConfigRequest` - the Query/Config request type.
 */
export const expandCosmosAppV1alpha1QueryConfigRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1QueryConfigResponse}
 */
export const condenseCosmosAppV1alpha1QueryConfigResponse = (g_msg) => encodeCosmosAppV1alpha1QueryConfigResponse(apply_opt(g_msg.config, condenseCosmosAppV1alpha1Config));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.QueryConfigResponse` - QueryConfigRequest is the Query/Config response type.
 */
export const expandCosmosAppV1alpha1QueryConfigResponse = ([a_config]) => ({
    config: a_config && expandCosmosAppV1alpha1Config(a_config),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1Config}
 */
export const condenseCosmosAppV1alpha1Config = (g_msg) => encodeCosmosAppV1alpha1Config(map(g_msg.modules, condenseCosmosAppV1alpha1ModuleConfig), map(g_msg.golang_bindings, condenseCosmosAppV1alpha1GolangBinding));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.Config` - represents the configuration for a Cosmos SDK ABCI app. It is intended that all state machine logic including the version of baseapp and tx handlers (and possibly even Tendermint) that an app needs can be described in a config object. For compatibility, the framework should allow a mixture of declarative and imperative app wiring, however, apps that strive for the maximum ease of maintainability should be able to describe their state machine with a config object alone.
 */
export const expandCosmosAppV1alpha1Config = ([a_modules, a_golang_bindings]) => ({
    modules: a_modules && map(a_modules, expandCosmosAppV1alpha1ModuleConfig),
    golang_bindings: a_golang_bindings && map(a_golang_bindings, expandCosmosAppV1alpha1GolangBinding),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1ModuleConfig}
 */
export const condenseCosmosAppV1alpha1ModuleConfig = (g_msg) => encodeCosmosAppV1alpha1ModuleConfig(g_msg.name, condenseJsonAny(g_msg.config), map(g_msg.golang_bindings, condenseCosmosAppV1alpha1GolangBinding));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.ModuleConfig` - a module configuration for an app.
 */
export const expandCosmosAppV1alpha1ModuleConfig = ([s_name, a_config, a_golang_bindings]) => ({
    name: s_name,
    config: a_config && expandJsonAny(a_config),
    golang_bindings: a_golang_bindings && map(a_golang_bindings, expandCosmosAppV1alpha1GolangBinding),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAppV1alpha1GolangBinding}
 */
export const condenseCosmosAppV1alpha1GolangBinding = (g_msg) => encodeCosmosAppV1alpha1GolangBinding(g_msg.interface_type, g_msg.implementation);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.app.v1alpha1.GolangBinding` - an explicit interface type to implementing type binding for dependency injection.
 */
export const expandCosmosAppV1alpha1GolangBinding = ([s_interface_type, s_implementation]) => ({
    interface_type: s_interface_type,
    implementation: s_implementation,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceModuleV1Module}
 */
export const condenseCosmosEvidenceModuleV1Module = (g_msg) => encodeCosmosEvidenceModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.module.v1.Module` - the config object of the evidence module.
 */
export const expandCosmosEvidenceModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1MsgSubmitEvidence}
 */
export const condenseCosmosEvidenceV1beta1MsgSubmitEvidence = (g_msg) => encodeCosmosEvidenceV1beta1MsgSubmitEvidence(g_msg.submitter, condenseJsonAny(g_msg.evidence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.MsgSubmitEvidence` - represents a message that supports submitting arbitrary Evidence of misbehavior such as equivocation or counterfactual signing.
 */
export const expandCosmosEvidenceV1beta1MsgSubmitEvidence = ([s_submitter, a_evidence]) => ({
    submitter: s_submitter,
    evidence: a_evidence && expandJsonAny(a_evidence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1MsgSubmitEvidenceResponse}
 */
export const condenseCosmosEvidenceV1beta1MsgSubmitEvidenceResponse = (g_msg) => encodeCosmosEvidenceV1beta1MsgSubmitEvidenceResponse(safe_base64_to_bytes(g_msg.hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse` - defines the Msg/SubmitEvidence response type.
 */
export const expandCosmosEvidenceV1beta1MsgSubmitEvidenceResponse = ([, , , atu8_hash]) => ({
    hash: safe_bytes_to_base64(atu8_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1Equivocation}
 */
export const condenseCosmosEvidenceV1beta1Equivocation = (g_msg) => encodeCosmosEvidenceV1beta1Equivocation(g_msg.height, parse_timestamp(g_msg.time), g_msg.power, g_msg.consensus_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.Equivocation` - implements the Evidence interface and defines evidence of double signing misbehavior.
 */
export const expandCosmosEvidenceV1beta1Equivocation = ([sg_height, a_time, sg_power, sa_consensus]) => ({
    height: sg_height,
    time: expand_timestamp(a_time),
    power: sg_power,
    consensus_address: sa_consensus,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1QueryEvidenceRequest}
 */
export const condenseCosmosEvidenceV1beta1QueryEvidenceRequest = (g_msg) => encodeCosmosEvidenceV1beta1QueryEvidenceRequest(safe_base64_to_bytes(g_msg.evidence_hash), g_msg.hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.QueryEvidenceRequest` - the request type for the Query/Evidence RPC method.
 */
export const expandCosmosEvidenceV1beta1QueryEvidenceRequest = ([atu8_evidence_hash, s_hash]) => ({
    evidence_hash: safe_bytes_to_base64(atu8_evidence_hash),
    hash: s_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1QueryEvidenceResponse}
 */
export const condenseCosmosEvidenceV1beta1QueryEvidenceResponse = (g_msg) => encodeCosmosEvidenceV1beta1QueryEvidenceResponse(condenseJsonAny(g_msg.evidence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.QueryEvidenceResponse` - the response type for the Query/Evidence RPC method.
 */
export const expandCosmosEvidenceV1beta1QueryEvidenceResponse = ([a_evidence]) => ({
    evidence: a_evidence && expandJsonAny(a_evidence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1QueryAllEvidenceRequest}
 */
export const condenseCosmosEvidenceV1beta1QueryAllEvidenceRequest = (g_msg) => encodeCosmosEvidenceV1beta1QueryAllEvidenceRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.QueryAllEvidenceRequest` - QueryEvidenceRequest is the request type for the Query/AllEvidence RPC method.
 */
export const expandCosmosEvidenceV1beta1QueryAllEvidenceRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1QueryAllEvidenceResponse}
 */
export const condenseCosmosEvidenceV1beta1QueryAllEvidenceResponse = (g_msg) => encodeCosmosEvidenceV1beta1QueryAllEvidenceResponse(map(g_msg.evidence, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.QueryAllEvidenceResponse` - the response type for the Query/AllEvidence RPC method.
 */
export const expandCosmosEvidenceV1beta1QueryAllEvidenceResponse = ([a_evidence, a_pagination]) => ({
    evidence: a_evidence && map(a_evidence, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosEvidenceV1beta1GenesisState}
 */
export const condenseCosmosEvidenceV1beta1GenesisState = (g_msg) => encodeCosmosEvidenceV1beta1GenesisState(map(g_msg.evidence, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.evidence.v1beta1.GenesisState` - defines the evidence module's genesis state.
 */
export const expandCosmosEvidenceV1beta1GenesisState = ([a_evidence]) => ({
    evidence: a_evidence && map(a_evidence, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftModuleV1Module}
 */
export const condenseCosmosNftModuleV1Module = (g_msg) => encodeCosmosNftModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.module.v1.Module` - the config object of the nft module.
 */
export const expandCosmosNftModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1MsgSend}
 */
export const condenseCosmosNftV1beta1MsgSend = (g_msg) => encodeCosmosNftV1beta1MsgSend(g_msg.class_id, g_msg.id, g_msg.sender, g_msg.receiver);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.MsgSend` - represents a message to send a nft from one account to another account.
 */
export const expandCosmosNftV1beta1MsgSend = ([si_class, s_id, sa_sender, sa_receiver]) => ({
    class_id: si_class,
    id: s_id,
    sender: sa_sender,
    receiver: sa_receiver,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1MsgSendResponse}
 */
export const condenseCosmosNftV1beta1MsgSendResponse = (g_msg) => encodeCosmosNftV1beta1MsgSendResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.MsgSendResponse` - defines the Msg/Send response type.
 */
export const expandCosmosNftV1beta1MsgSendResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryBalanceRequest}
 */
export const condenseCosmosNftV1beta1QueryBalanceRequest = (g_msg) => encodeCosmosNftV1beta1QueryBalanceRequest(g_msg.class_id, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryBalanceRequest` - the request type for the Query/Balance RPC method
 */
export const expandCosmosNftV1beta1QueryBalanceRequest = ([si_class, sa_owner]) => ({
    class_id: si_class,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryBalanceResponse}
 */
export const condenseCosmosNftV1beta1QueryBalanceResponse = (g_msg) => encodeCosmosNftV1beta1QueryBalanceResponse(g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryBalanceResponse` - the response type for the Query/Balance RPC method
 */
export const expandCosmosNftV1beta1QueryBalanceResponse = ([sg_amount]) => ({
    amount: sg_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryOwnerRequest}
 */
export const condenseCosmosNftV1beta1QueryOwnerRequest = (g_msg) => encodeCosmosNftV1beta1QueryOwnerRequest(g_msg.class_id, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryOwnerRequest` - the request type for the Query/Owner RPC method
 */
export const expandCosmosNftV1beta1QueryOwnerRequest = ([si_class, s_id]) => ({
    class_id: si_class,
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryOwnerResponse}
 */
export const condenseCosmosNftV1beta1QueryOwnerResponse = (g_msg) => encodeCosmosNftV1beta1QueryOwnerResponse(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryOwnerResponse` - the response type for the Query/Owner RPC method
 */
export const expandCosmosNftV1beta1QueryOwnerResponse = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QuerySupplyRequest}
 */
export const condenseCosmosNftV1beta1QuerySupplyRequest = (g_msg) => encodeCosmosNftV1beta1QuerySupplyRequest(g_msg.class_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QuerySupplyRequest` - the request type for the Query/Supply RPC method
 */
export const expandCosmosNftV1beta1QuerySupplyRequest = ([si_class]) => ({
    class_id: si_class,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QuerySupplyResponse}
 */
export const condenseCosmosNftV1beta1QuerySupplyResponse = (g_msg) => encodeCosmosNftV1beta1QuerySupplyResponse(g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QuerySupplyResponse` - the response type for the Query/Supply RPC method
 */
export const expandCosmosNftV1beta1QuerySupplyResponse = ([sg_amount]) => ({
    amount: sg_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryNFTsRequest}
 */
export const condenseCosmosNftV1beta1QueryNFTsRequest = (g_msg) => encodeCosmosNftV1beta1QueryNFTsRequest(g_msg.class_id, g_msg.owner, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryNFTsRequest` - QueryNFTstRequest is the request type for the Query/NFTs RPC method
 */
export const expandCosmosNftV1beta1QueryNFTsRequest = ([si_class, sa_owner, a_pagination]) => ({
    class_id: si_class,
    owner: sa_owner,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryNFTsResponse}
 */
export const condenseCosmosNftV1beta1QueryNFTsResponse = (g_msg) => encodeCosmosNftV1beta1QueryNFTsResponse(map(g_msg.nfts, condenseCosmosNftV1beta1NFT), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryNFTsResponse` - the response type for the Query/NFTs RPC methods
 */
export const expandCosmosNftV1beta1QueryNFTsResponse = ([a_nfts, a_pagination]) => ({
    nfts: a_nfts && map(a_nfts, expandCosmosNftV1beta1NFT),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1NFT}
 */
export const condenseCosmosNftV1beta1NFT = (g_msg) => encodeCosmosNftV1beta1NFT(g_msg.class_id, g_msg.id, g_msg.uri, g_msg.uri_hash, condenseJsonAny(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.NFT` - defines the NFT.
 */
export const expandCosmosNftV1beta1NFT = ([si_class, s_id, s_uri, s_uri_hash, , , , , , a_data]) => ({
    class_id: si_class,
    id: s_id,
    uri: s_uri,
    uri_hash: s_uri_hash,
    data: a_data && expandJsonAny(a_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryNFTRequest}
 */
export const condenseCosmosNftV1beta1QueryNFTRequest = (g_msg) => encodeCosmosNftV1beta1QueryNFTRequest(g_msg.class_id, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryNFTRequest` - the request type for the Query/NFT RPC method
 */
export const expandCosmosNftV1beta1QueryNFTRequest = ([si_class, s_id]) => ({
    class_id: si_class,
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryNFTResponse}
 */
export const condenseCosmosNftV1beta1QueryNFTResponse = (g_msg) => encodeCosmosNftV1beta1QueryNFTResponse(apply_opt(g_msg.nft, condenseCosmosNftV1beta1NFT));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryNFTResponse` - the response type for the Query/NFT RPC method
 */
export const expandCosmosNftV1beta1QueryNFTResponse = ([a_nft]) => ({
    nft: a_nft && expandCosmosNftV1beta1NFT(a_nft),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryClassRequest}
 */
export const condenseCosmosNftV1beta1QueryClassRequest = (g_msg) => encodeCosmosNftV1beta1QueryClassRequest(g_msg.class_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryClassRequest` - the request type for the Query/Class RPC method
 */
export const expandCosmosNftV1beta1QueryClassRequest = ([si_class]) => ({
    class_id: si_class,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryClassResponse}
 */
export const condenseCosmosNftV1beta1QueryClassResponse = (g_msg) => encodeCosmosNftV1beta1QueryClassResponse(apply_opt(g_msg.class, condenseCosmosNftV1beta1Class));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryClassResponse` - the response type for the Query/Class RPC method
 */
export const expandCosmosNftV1beta1QueryClassResponse = ([a_class]) => ({
    class: a_class && expandCosmosNftV1beta1Class(a_class),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1Class}
 */
export const condenseCosmosNftV1beta1Class = (g_msg) => encodeCosmosNftV1beta1Class(g_msg.id, g_msg.name, g_msg.symbol, g_msg.description, g_msg.uri, g_msg.uri_hash, condenseJsonAny(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.Class` - defines the class of the nft type.
 */
export const expandCosmosNftV1beta1Class = ([s_id, s_name, s_symbol, s_description, s_uri, s_uri_hash, a_data]) => ({
    id: s_id,
    name: s_name,
    symbol: s_symbol,
    description: s_description,
    uri: s_uri,
    uri_hash: s_uri_hash,
    data: a_data && expandJsonAny(a_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryClassesRequest}
 */
export const condenseCosmosNftV1beta1QueryClassesRequest = (g_msg) => encodeCosmosNftV1beta1QueryClassesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryClassesRequest` - the request type for the Query/Classes RPC method
 */
export const expandCosmosNftV1beta1QueryClassesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1QueryClassesResponse}
 */
export const condenseCosmosNftV1beta1QueryClassesResponse = (g_msg) => encodeCosmosNftV1beta1QueryClassesResponse(map(g_msg.classes, condenseCosmosNftV1beta1Class), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.QueryClassesResponse` - the response type for the Query/Classes RPC method
 */
export const expandCosmosNftV1beta1QueryClassesResponse = ([a_classes, a_pagination]) => ({
    classes: a_classes && map(a_classes, expandCosmosNftV1beta1Class),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1EventSend}
 */
export const condenseCosmosNftV1beta1EventSend = (g_msg) => encodeCosmosNftV1beta1EventSend(g_msg.class_id, g_msg.id, g_msg.sender, g_msg.receiver);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.EventSend` - emitted on Msg/Send
 */
export const expandCosmosNftV1beta1EventSend = ([si_class, s_id, sa_sender, sa_receiver]) => ({
    class_id: si_class,
    id: s_id,
    sender: sa_sender,
    receiver: sa_receiver,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1EventMint}
 */
export const condenseCosmosNftV1beta1EventMint = (g_msg) => encodeCosmosNftV1beta1EventMint(g_msg.class_id, g_msg.id, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.EventMint` - emitted on Mint
 */
export const expandCosmosNftV1beta1EventMint = ([si_class, s_id, sa_owner]) => ({
    class_id: si_class,
    id: s_id,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1EventBurn}
 */
export const condenseCosmosNftV1beta1EventBurn = (g_msg) => encodeCosmosNftV1beta1EventBurn(g_msg.class_id, g_msg.id, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.EventBurn` - emitted on Burn
 */
export const expandCosmosNftV1beta1EventBurn = ([si_class, s_id, sa_owner]) => ({
    class_id: si_class,
    id: s_id,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1GenesisState}
 */
export const condenseCosmosNftV1beta1GenesisState = (g_msg) => encodeCosmosNftV1beta1GenesisState(map(g_msg.classes, condenseCosmosNftV1beta1Class), map(g_msg.entries, condenseCosmosNftV1beta1Entry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.GenesisState` - defines the nft module's genesis state.
 */
export const expandCosmosNftV1beta1GenesisState = ([a_classes, a_entries]) => ({
    classes: a_classes && map(a_classes, expandCosmosNftV1beta1Class),
    entries: a_entries && map(a_entries, expandCosmosNftV1beta1Entry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosNftV1beta1Entry}
 */
export const condenseCosmosNftV1beta1Entry = (g_msg) => encodeCosmosNftV1beta1Entry(g_msg.owner, map(g_msg.nfts, condenseCosmosNftV1beta1NFT));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.nft.v1beta1.Entry` - Defines all nft owned by a person
 */
export const expandCosmosNftV1beta1Entry = ([sa_owner, a_nfts]) => ({
    owner: sa_owner,
    nfts: a_nfts && map(a_nfts, expandCosmosNftV1beta1NFT),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthModuleV1Module}
 */
export const condenseCosmosAuthModuleV1Module = (g_msg) => encodeCosmosAuthModuleV1Module(g_msg.bech32_prefix, map(g_msg.module_account_permissions, condenseCosmosAuthModuleV1ModuleAccountPermission), g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.module.v1.Module` - the config object for the auth module.
 */
export const expandCosmosAuthModuleV1Module = ([s_bech32_prefix, a_module_account_permissions, s_authority]) => ({
    bech32_prefix: s_bech32_prefix,
    module_account_permissions: a_module_account_permissions && map(a_module_account_permissions, expandCosmosAuthModuleV1ModuleAccountPermission),
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthModuleV1ModuleAccountPermission}
 */
export const condenseCosmosAuthModuleV1ModuleAccountPermission = (g_msg) => encodeCosmosAuthModuleV1ModuleAccountPermission(g_msg.account, g_msg.permissions);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.module.v1.ModuleAccountPermission` - represents permissions for a module account.
 */
export const expandCosmosAuthModuleV1ModuleAccountPermission = ([s_account, a_permissions]) => ({
    account: s_account,
    permissions: a_permissions,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1MsgUpdateParams}
 */
export const condenseCosmosAuthV1beta1MsgUpdateParams = (g_msg) => encodeCosmosAuthV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosAuthV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosAuthV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosAuthV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1Params}
 */
export const condenseCosmosAuthV1beta1Params = (g_msg) => encodeCosmosAuthV1beta1Params(g_msg.max_memo_characters, g_msg.tx_sig_limit, g_msg.tx_size_cost_per_byte, g_msg.sig_verify_cost_ed25519, g_msg.sig_verify_cost_secp256k1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.Params` - defines the parameters for the auth module.
 */
export const expandCosmosAuthV1beta1Params = ([sg_max_memo_characters, sg_tx_sig_limit, sg_tx_size_cost_per_byte, sg_sig_verify_cost_ed25519, sg_sig_verify_cost_secp256k1]) => ({
    max_memo_characters: sg_max_memo_characters,
    tx_sig_limit: sg_tx_sig_limit,
    tx_size_cost_per_byte: sg_tx_size_cost_per_byte,
    sig_verify_cost_ed25519: sg_sig_verify_cost_ed25519,
    sig_verify_cost_secp256k1: sg_sig_verify_cost_secp256k1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosAuthV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosAuthV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosAuthV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountsRequest}
 */
export const condenseCosmosAuthV1beta1QueryAccountsRequest = (g_msg) => encodeCosmosAuthV1beta1QueryAccountsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountsRequest` - the request type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 */
export const expandCosmosAuthV1beta1QueryAccountsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountsResponse}
 */
export const condenseCosmosAuthV1beta1QueryAccountsResponse = (g_msg) => encodeCosmosAuthV1beta1QueryAccountsResponse(map(g_msg.accounts, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountsResponse` - the response type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43
 */
export const expandCosmosAuthV1beta1QueryAccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountRequest}
 */
export const condenseCosmosAuthV1beta1QueryAccountRequest = (g_msg) => encodeCosmosAuthV1beta1QueryAccountRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountRequest` - the request type for the Query/Account RPC method.
 */
export const expandCosmosAuthV1beta1QueryAccountRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountResponse}
 */
export const condenseCosmosAuthV1beta1QueryAccountResponse = (g_msg) => encodeCosmosAuthV1beta1QueryAccountResponse(condenseJsonAny(g_msg.account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountResponse` - the response type for the Query/Account RPC method.
 */
export const expandCosmosAuthV1beta1QueryAccountResponse = ([a_account]) => ({
    account: a_account && expandJsonAny(a_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryParamsRequest}
 */
export const condenseCosmosAuthV1beta1QueryParamsRequest = (g_msg) => encodeCosmosAuthV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmosAuthV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryParamsResponse}
 */
export const condenseCosmosAuthV1beta1QueryParamsResponse = (g_msg) => encodeCosmosAuthV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosAuthV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmosAuthV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosAuthV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryModuleAccountsRequest}
 */
export const condenseCosmosAuthV1beta1QueryModuleAccountsRequest = (g_msg) => encodeCosmosAuthV1beta1QueryModuleAccountsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryModuleAccountsRequest` - the request type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1QueryModuleAccountsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryModuleAccountsResponse}
 */
export const condenseCosmosAuthV1beta1QueryModuleAccountsResponse = (g_msg) => encodeCosmosAuthV1beta1QueryModuleAccountsResponse(map(g_msg.accounts, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryModuleAccountsResponse` - the response type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1QueryModuleAccountsResponse = ([a_accounts]) => ({
    accounts: a_accounts && map(a_accounts, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryModuleAccountByNameRequest}
 */
export const condenseCosmosAuthV1beta1QueryModuleAccountByNameRequest = (g_msg) => encodeCosmosAuthV1beta1QueryModuleAccountByNameRequest(g_msg.name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryModuleAccountByNameRequest` - the request type for the Query/ModuleAccountByName RPC method.
 */
export const expandCosmosAuthV1beta1QueryModuleAccountByNameRequest = ([s_name]) => ({
    name: s_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryModuleAccountByNameResponse}
 */
export const condenseCosmosAuthV1beta1QueryModuleAccountByNameResponse = (g_msg) => encodeCosmosAuthV1beta1QueryModuleAccountByNameResponse(condenseJsonAny(g_msg.account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryModuleAccountByNameResponse` - the response type for the Query/ModuleAccountByName RPC method.
 */
export const expandCosmosAuthV1beta1QueryModuleAccountByNameResponse = ([a_account]) => ({
    account: a_account && expandJsonAny(a_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1Bech32PrefixRequest}
 */
export const condenseCosmosAuthV1beta1Bech32PrefixRequest = (g_msg) => encodeCosmosAuthV1beta1Bech32PrefixRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.Bech32PrefixRequest` - the request type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1Bech32PrefixRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1Bech32PrefixResponse}
 */
export const condenseCosmosAuthV1beta1Bech32PrefixResponse = (g_msg) => encodeCosmosAuthV1beta1Bech32PrefixResponse(g_msg.bech32_prefix);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.Bech32PrefixResponse` - the response type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1Bech32PrefixResponse = ([s_bech32_prefix]) => ({
    bech32_prefix: s_bech32_prefix,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1AddressBytesToStringRequest}
 */
export const condenseCosmosAuthV1beta1AddressBytesToStringRequest = (g_msg) => encodeCosmosAuthV1beta1AddressBytesToStringRequest(safe_base64_to_bytes(g_msg.address_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.AddressBytesToStringRequest` - the request type for AddressString rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1AddressBytesToStringRequest = ([atu8_address_bytes]) => ({
    address_bytes: safe_bytes_to_base64(atu8_address_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1AddressBytesToStringResponse}
 */
export const condenseCosmosAuthV1beta1AddressBytesToStringResponse = (g_msg) => encodeCosmosAuthV1beta1AddressBytesToStringResponse(g_msg.address_string);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.AddressBytesToStringResponse` - the response type for AddressString rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1AddressBytesToStringResponse = ([s_address_string]) => ({
    address_string: s_address_string,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1AddressStringToBytesRequest}
 */
export const condenseCosmosAuthV1beta1AddressStringToBytesRequest = (g_msg) => encodeCosmosAuthV1beta1AddressStringToBytesRequest(g_msg.address_string);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.AddressStringToBytesRequest` - the request type for AccountBytes rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1AddressStringToBytesRequest = ([s_address_string]) => ({
    address_string: s_address_string,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1AddressStringToBytesResponse}
 */
export const condenseCosmosAuthV1beta1AddressStringToBytesResponse = (g_msg) => encodeCosmosAuthV1beta1AddressStringToBytesResponse(safe_base64_to_bytes(g_msg.address_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.AddressStringToBytesResponse` - the response type for AddressBytes rpc method. Since: cosmos-sdk 0.46
 */
export const expandCosmosAuthV1beta1AddressStringToBytesResponse = ([atu8_address_bytes]) => ({
    address_bytes: safe_bytes_to_base64(atu8_address_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountAddressByIDRequest}
 */
export const condenseCosmosAuthV1beta1QueryAccountAddressByIDRequest = (g_msg) => encodeCosmosAuthV1beta1QueryAccountAddressByIDRequest(g_msg.id, g_msg.account_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountAddressByIDRequest` - the request type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 */
export const expandCosmosAuthV1beta1QueryAccountAddressByIDRequest = ([sg_id, sg_account_id]) => ({
    id: sg_id,
    account_id: sg_account_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountAddressByIDResponse}
 */
export const condenseCosmosAuthV1beta1QueryAccountAddressByIDResponse = (g_msg) => encodeCosmosAuthV1beta1QueryAccountAddressByIDResponse(g_msg.account_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountAddressByIDResponse` - the response type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2
 */
export const expandCosmosAuthV1beta1QueryAccountAddressByIDResponse = ([sa_account]) => ({
    account_address: sa_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountInfoRequest}
 */
export const condenseCosmosAuthV1beta1QueryAccountInfoRequest = (g_msg) => encodeCosmosAuthV1beta1QueryAccountInfoRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountInfoRequest` - the Query/AccountInfo request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosAuthV1beta1QueryAccountInfoRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1QueryAccountInfoResponse}
 */
export const condenseCosmosAuthV1beta1QueryAccountInfoResponse = (g_msg) => encodeCosmosAuthV1beta1QueryAccountInfoResponse(apply_opt(g_msg.info, condenseCosmosAuthV1beta1BaseAccount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.QueryAccountInfoResponse` - the Query/AccountInfo response type. Since: cosmos-sdk 0.47
 */
export const expandCosmosAuthV1beta1QueryAccountInfoResponse = ([a_info]) => ({
    info: a_info && expandCosmosAuthV1beta1BaseAccount(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1BaseAccount}
 */
export const condenseCosmosAuthV1beta1BaseAccount = (g_msg) => encodeCosmosAuthV1beta1BaseAccount(g_msg.address, condenseJsonAny(g_msg.pub_key), g_msg.account_number, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.BaseAccount` - defines a base account type. It contains all the necessary fields for basic account functionality. Any custom account type should extend this type for additional functionality (e.g. vesting).
 */
export const expandCosmosAuthV1beta1BaseAccount = ([sa_address, a_pub_key, sg_account_number, sg_sequence]) => ({
    address: sa_address,
    pub_key: a_pub_key && expandJsonAny(a_pub_key),
    account_number: sg_account_number,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1GenesisState}
 */
export const condenseCosmosAuthV1beta1GenesisState = (g_msg) => encodeCosmosAuthV1beta1GenesisState(apply_opt(g_msg.params, condenseCosmosAuthV1beta1Params), map(g_msg.accounts, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.GenesisState` - defines the auth module's genesis state.
 */
export const expandCosmosAuthV1beta1GenesisState = ([a_params, a_accounts]) => ({
    params: a_params && expandCosmosAuthV1beta1Params(a_params),
    accounts: a_accounts && map(a_accounts, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1ModuleAccount}
 */
export const condenseCosmosAuthV1beta1ModuleAccount = (g_msg) => encodeCosmosAuthV1beta1ModuleAccount(apply_opt(g_msg.base_account, condenseCosmosAuthV1beta1BaseAccount), g_msg.name, g_msg.permissions);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.ModuleAccount` - defines an account for modules that holds coins on a pool.
 */
export const expandCosmosAuthV1beta1ModuleAccount = ([a_base_account, s_name, a_permissions]) => ({
    base_account: a_base_account && expandCosmosAuthV1beta1BaseAccount(a_base_account),
    name: s_name,
    permissions: a_permissions,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthV1beta1ModuleCredential}
 */
export const condenseCosmosAuthV1beta1ModuleCredential = (g_msg) => encodeCosmosAuthV1beta1ModuleCredential(g_msg.module_name, map(g_msg.derivation_keys, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.auth.v1beta1.ModuleCredential` - represents a unclaimable pubkey for base accounts controlled by modules. Since: cosmos-sdk 0.47
 */
export const expandCosmosAuthV1beta1ModuleCredential = ([s_module_name, a_derivation_keys]) => ({
    module_name: s_module_name,
    derivation_keys: map(a_derivation_keys, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroup}
 */
export const condenseCosmosGroupV1MsgCreateGroup = (g_msg) => encodeCosmosGroupV1MsgCreateGroup(g_msg.admin, map(g_msg.members, condenseCosmosGroupV1MemberRequest), g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroup` - the Msg/CreateGroup request type.
 */
export const expandCosmosGroupV1MsgCreateGroup = ([s_admin, a_members, s_metadata]) => ({
    admin: s_admin,
    members: a_members && map(a_members, expandCosmosGroupV1MemberRequest),
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MemberRequest}
 */
export const condenseCosmosGroupV1MemberRequest = (g_msg) => encodeCosmosGroupV1MemberRequest(g_msg.address, g_msg.weight, g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MemberRequest` - represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests.
 */
export const expandCosmosGroupV1MemberRequest = ([sa_address, s_weight, s_metadata]) => ({
    address: sa_address,
    weight: s_weight,
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroupResponse}
 */
export const condenseCosmosGroupV1MsgCreateGroupResponse = (g_msg) => encodeCosmosGroupV1MsgCreateGroupResponse(g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroupResponse` - the Msg/CreateGroup response type.
 */
export const expandCosmosGroupV1MsgCreateGroupResponse = ([sg_group_id]) => ({
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupMembers}
 */
export const condenseCosmosGroupV1MsgUpdateGroupMembers = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupMembers(g_msg.admin, g_msg.group_id, map(g_msg.member_updates, condenseCosmosGroupV1MemberRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupMembers` - the Msg/UpdateGroupMembers request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupMembers = ([s_admin, sg_group_id, a_member_updates]) => ({
    admin: s_admin,
    group_id: sg_group_id,
    member_updates: a_member_updates && map(a_member_updates, expandCosmosGroupV1MemberRequest),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupMembersResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupMembersResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupMembersResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupMembersResponse` - the Msg/UpdateGroupMembers response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupMembersResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupAdmin}
 */
export const condenseCosmosGroupV1MsgUpdateGroupAdmin = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupAdmin(g_msg.admin, g_msg.group_id, g_msg.new_admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupAdmin` - the Msg/UpdateGroupAdmin request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupAdmin = ([s_admin, sg_group_id, s_new_admin]) => ({
    admin: s_admin,
    group_id: sg_group_id,
    new_admin: s_new_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupAdminResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupAdminResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupAdminResponse` - the Msg/UpdateGroupAdmin response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupMetadata}
 */
export const condenseCosmosGroupV1MsgUpdateGroupMetadata = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupMetadata(g_msg.admin, g_msg.group_id, g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupMetadata` - the Msg/UpdateGroupMetadata request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupMetadata = ([s_admin, sg_group_id, s_metadata]) => ({
    admin: s_admin,
    group_id: sg_group_id,
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupMetadataResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupMetadataResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupMetadataResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupMetadataResponse` - the Msg/UpdateGroupMetadata response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupMetadataResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroupPolicy}
 */
export const condenseCosmosGroupV1MsgCreateGroupPolicy = (g_msg) => encodeCosmosGroupV1MsgCreateGroupPolicy(g_msg.admin, g_msg.group_id, g_msg.metadata, condenseJsonAny(g_msg.decision_policy));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroupPolicy` - the Msg/CreateGroupPolicy request type.
 */
export const expandCosmosGroupV1MsgCreateGroupPolicy = ([s_admin, sg_group_id, s_metadata, a_decision_policy]) => ({
    admin: s_admin,
    group_id: sg_group_id,
    metadata: s_metadata,
    decision_policy: a_decision_policy && expandJsonAny(a_decision_policy),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroupPolicyResponse}
 */
export const condenseCosmosGroupV1MsgCreateGroupPolicyResponse = (g_msg) => encodeCosmosGroupV1MsgCreateGroupPolicyResponse(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroupPolicyResponse` - the Msg/CreateGroupPolicy response type.
 */
export const expandCosmosGroupV1MsgCreateGroupPolicyResponse = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyAdmin}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyAdmin = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyAdmin(g_msg.admin, g_msg.group_policy_address, g_msg.new_admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyAdmin` - the Msg/UpdateGroupPolicyAdmin request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyAdmin = ([s_admin, sa_group_policy, s_new_admin]) => ({
    admin: s_admin,
    group_policy_address: sa_group_policy,
    new_admin: s_new_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyAdminResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyAdminResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse` - the Msg/UpdateGroupPolicyAdmin response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroupWithPolicy}
 */
export const condenseCosmosGroupV1MsgCreateGroupWithPolicy = (g_msg) => encodeCosmosGroupV1MsgCreateGroupWithPolicy(g_msg.admin, map(g_msg.members, condenseCosmosGroupV1MemberRequest), g_msg.group_metadata, g_msg.group_policy_metadata, g_msg.group_policy_as_admin, condenseJsonAny(g_msg.decision_policy));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroupWithPolicy` - the Msg/CreateGroupWithPolicy request type.
 */
export const expandCosmosGroupV1MsgCreateGroupWithPolicy = ([s_admin, a_members, s_group_metadata, s_group_policy_metadata, b_group_policy_as_admin, a_decision_policy]) => ({
    admin: s_admin,
    members: a_members && map(a_members, expandCosmosGroupV1MemberRequest),
    group_metadata: s_group_metadata,
    group_policy_metadata: s_group_policy_metadata,
    group_policy_as_admin: !!b_group_policy_as_admin,
    decision_policy: a_decision_policy && expandJsonAny(a_decision_policy),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgCreateGroupWithPolicyResponse}
 */
export const condenseCosmosGroupV1MsgCreateGroupWithPolicyResponse = (g_msg) => encodeCosmosGroupV1MsgCreateGroupWithPolicyResponse(g_msg.group_id, g_msg.group_policy_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgCreateGroupWithPolicyResponse` - the Msg/CreateGroupWithPolicy response type.
 */
export const expandCosmosGroupV1MsgCreateGroupWithPolicyResponse = ([sg_group_id, sa_group_policy]) => ({
    group_id: sg_group_id,
    group_policy_address: sa_group_policy,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy(g_msg.admin, g_msg.group_policy_address, condenseJsonAny(g_msg.decision_policy));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy` - the Msg/UpdateGroupPolicyDecisionPolicy request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy = ([s_admin, sa_group_policy, a_decision_policy]) => ({
    admin: s_admin,
    group_policy_address: sa_group_policy,
    decision_policy: a_decision_policy && expandJsonAny(a_decision_policy),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse` - the Msg/UpdateGroupPolicyDecisionPolicy response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyMetadata}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyMetadata = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyMetadata(g_msg.admin, g_msg.group_policy_address, g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyMetadata` - the Msg/UpdateGroupPolicyMetadata request type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyMetadata = ([s_admin, sa_group_policy, s_metadata]) => ({
    admin: s_admin,
    group_policy_address: sa_group_policy,
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse}
 */
export const condenseCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse = (g_msg) => encodeCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse` - the Msg/UpdateGroupPolicyMetadata response type.
 */
export const expandCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgSubmitProposal}
 */
export const condenseCosmosGroupV1MsgSubmitProposal = (g_msg) => encodeCosmosGroupV1MsgSubmitProposal(g_msg.group_policy_address, g_msg.proposers, g_msg.metadata, map(g_msg.messages, condenseJsonAny), JsonToProtoEnumCosmosGroupV1Exec[g_msg.exec], g_msg.title, g_msg.summary);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgSubmitProposal` - the Msg/SubmitProposal request type.
 */
export const expandCosmosGroupV1MsgSubmitProposal = ([sa_group_policy, a_proposers, s_metadata, a_messages, xc_exec, s_title, s_summary]) => ({
    group_policy_address: sa_group_policy,
    proposers: a_proposers,
    metadata: s_metadata,
    messages: a_messages && map(a_messages, expandJsonAny),
    exec: xc_exec >= 0 ? ProtoToJsonEnumCosmosGroupV1Exec[xc_exec] : __UNDEFINED,
    title: s_title,
    summary: s_summary,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgSubmitProposalResponse}
 */
export const condenseCosmosGroupV1MsgSubmitProposalResponse = (g_msg) => encodeCosmosGroupV1MsgSubmitProposalResponse(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgSubmitProposalResponse` - the Msg/SubmitProposal response type.
 */
export const expandCosmosGroupV1MsgSubmitProposalResponse = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgWithdrawProposal}
 */
export const condenseCosmosGroupV1MsgWithdrawProposal = (g_msg) => encodeCosmosGroupV1MsgWithdrawProposal(g_msg.proposal_id, g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgWithdrawProposal` - the Msg/WithdrawProposal request type.
 */
export const expandCosmosGroupV1MsgWithdrawProposal = ([sg_proposal_id, sa_address]) => ({
    proposal_id: sg_proposal_id,
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgWithdrawProposalResponse}
 */
export const condenseCosmosGroupV1MsgWithdrawProposalResponse = (g_msg) => encodeCosmosGroupV1MsgWithdrawProposalResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgWithdrawProposalResponse` - the Msg/WithdrawProposal response type.
 */
export const expandCosmosGroupV1MsgWithdrawProposalResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgVote}
 */
export const condenseCosmosGroupV1MsgVote = (g_msg) => encodeCosmosGroupV1MsgVote(g_msg.proposal_id, g_msg.voter, JsonToProtoEnumCosmosGroupV1VoteOption[g_msg.option], g_msg.metadata, JsonToProtoEnumCosmosGroupV1Exec[g_msg.exec]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgVote` - the Msg/Vote request type.
 */
export const expandCosmosGroupV1MsgVote = ([sg_proposal_id, sa_voter, xc_option, s_metadata, xc_exec]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGroupV1VoteOption[xc_option] : __UNDEFINED,
    metadata: s_metadata,
    exec: xc_exec >= 0 ? ProtoToJsonEnumCosmosGroupV1Exec[xc_exec] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgVoteResponse}
 */
export const condenseCosmosGroupV1MsgVoteResponse = (g_msg) => encodeCosmosGroupV1MsgVoteResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgVoteResponse` - the Msg/Vote response type.
 */
export const expandCosmosGroupV1MsgVoteResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgExec}
 */
export const condenseCosmosGroupV1MsgExec = (g_msg) => encodeCosmosGroupV1MsgExec(g_msg.proposal_id, g_msg.executor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgExec` - the Msg/Exec request type.
 */
export const expandCosmosGroupV1MsgExec = ([sg_proposal_id, s_executor]) => ({
    proposal_id: sg_proposal_id,
    executor: s_executor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgExecResponse}
 */
export const condenseCosmosGroupV1MsgExecResponse = (g_msg) => encodeCosmosGroupV1MsgExecResponse(JsonToProtoEnumCosmosGroupV1ProposalExecutorResult[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgExecResponse` - the Msg/Exec request type.
 */
export const expandCosmosGroupV1MsgExecResponse = ([, xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumCosmosGroupV1ProposalExecutorResult[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgLeaveGroup}
 */
export const condenseCosmosGroupV1MsgLeaveGroup = (g_msg) => encodeCosmosGroupV1MsgLeaveGroup(g_msg.address, g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgLeaveGroup` - the Msg/LeaveGroup request type.
 */
export const expandCosmosGroupV1MsgLeaveGroup = ([sa_address, sg_group_id]) => ({
    address: sa_address,
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1MsgLeaveGroupResponse}
 */
export const condenseCosmosGroupV1MsgLeaveGroupResponse = (g_msg) => encodeCosmosGroupV1MsgLeaveGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.MsgLeaveGroupResponse` - the Msg/LeaveGroup response type.
 */
export const expandCosmosGroupV1MsgLeaveGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventCreateGroup}
 */
export const condenseCosmosGroupV1EventCreateGroup = (g_msg) => encodeCosmosGroupV1EventCreateGroup(g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventCreateGroup` - an event emitted when a group is created.
 */
export const expandCosmosGroupV1EventCreateGroup = ([sg_group_id]) => ({
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventUpdateGroup}
 */
export const condenseCosmosGroupV1EventUpdateGroup = (g_msg) => encodeCosmosGroupV1EventUpdateGroup(g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventUpdateGroup` - an event emitted when a group is updated.
 */
export const expandCosmosGroupV1EventUpdateGroup = ([sg_group_id]) => ({
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventCreateGroupPolicy}
 */
export const condenseCosmosGroupV1EventCreateGroupPolicy = (g_msg) => encodeCosmosGroupV1EventCreateGroupPolicy(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventCreateGroupPolicy` - an event emitted when a group policy is created.
 */
export const expandCosmosGroupV1EventCreateGroupPolicy = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventUpdateGroupPolicy}
 */
export const condenseCosmosGroupV1EventUpdateGroupPolicy = (g_msg) => encodeCosmosGroupV1EventUpdateGroupPolicy(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventUpdateGroupPolicy` - an event emitted when a group policy is updated.
 */
export const expandCosmosGroupV1EventUpdateGroupPolicy = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventSubmitProposal}
 */
export const condenseCosmosGroupV1EventSubmitProposal = (g_msg) => encodeCosmosGroupV1EventSubmitProposal(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventSubmitProposal` - an event emitted when a proposal is created.
 */
export const expandCosmosGroupV1EventSubmitProposal = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventWithdrawProposal}
 */
export const condenseCosmosGroupV1EventWithdrawProposal = (g_msg) => encodeCosmosGroupV1EventWithdrawProposal(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventWithdrawProposal` - an event emitted when a proposal is withdrawn.
 */
export const expandCosmosGroupV1EventWithdrawProposal = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventVote}
 */
export const condenseCosmosGroupV1EventVote = (g_msg) => encodeCosmosGroupV1EventVote(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventVote` - an event emitted when a voter votes on a proposal.
 */
export const expandCosmosGroupV1EventVote = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventExec}
 */
export const condenseCosmosGroupV1EventExec = (g_msg) => encodeCosmosGroupV1EventExec(g_msg.proposal_id, JsonToProtoEnumCosmosGroupV1ProposalExecutorResult[g_msg.result], g_msg.logs);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventExec` - an event emitted when a proposal is executed.
 */
export const expandCosmosGroupV1EventExec = ([sg_proposal_id, xc_result, s_logs]) => ({
    proposal_id: sg_proposal_id,
    result: xc_result >= 0 ? ProtoToJsonEnumCosmosGroupV1ProposalExecutorResult[xc_result] : __UNDEFINED,
    logs: s_logs,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventLeaveGroup}
 */
export const condenseCosmosGroupV1EventLeaveGroup = (g_msg) => encodeCosmosGroupV1EventLeaveGroup(g_msg.group_id, g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventLeaveGroup` - an event emitted when group member leaves the group.
 */
export const expandCosmosGroupV1EventLeaveGroup = ([sg_group_id, sa_address]) => ({
    group_id: sg_group_id,
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1EventProposalPruned}
 */
export const condenseCosmosGroupV1EventProposalPruned = (g_msg) => encodeCosmosGroupV1EventProposalPruned(g_msg.proposal_id, JsonToProtoEnumCosmosGroupV1ProposalStatus[g_msg.status], apply_opt(g_msg.tally_result, condenseCosmosGroupV1TallyResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.EventProposalPruned` - an event emitted when a proposal is pruned.
 */
export const expandCosmosGroupV1EventProposalPruned = ([sg_proposal_id, xc_status, a_tally_result]) => ({
    proposal_id: sg_proposal_id,
    status: xc_status >= 0 ? ProtoToJsonEnumCosmosGroupV1ProposalStatus[xc_status] : __UNDEFINED,
    tally_result: a_tally_result && expandCosmosGroupV1TallyResult(a_tally_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1TallyResult}
 */
export const condenseCosmosGroupV1TallyResult = (g_msg) => encodeCosmosGroupV1TallyResult(g_msg.yes_count, g_msg.abstain_count, g_msg.no_count, g_msg.no_with_veto_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.TallyResult` - represents the sum of weighted votes for each vote option.
 */
export const expandCosmosGroupV1TallyResult = ([s_yes_count, s_abstain_count, s_no_count, s_no_with_veto_count]) => ({
    yes_count: s_yes_count,
    abstain_count: s_abstain_count,
    no_count: s_no_count,
    no_with_veto_count: s_no_with_veto_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1Member}
 */
export const condenseCosmosGroupV1Member = (g_msg) => encodeCosmosGroupV1Member(g_msg.address, g_msg.weight, g_msg.metadata, parse_timestamp(g_msg.added_at));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.Member` - represents a group member with an account address, non-zero weight, metadata and added_at timestamp.
 */
export const expandCosmosGroupV1Member = ([sa_address, s_weight, s_metadata, a_added_at]) => ({
    address: sa_address,
    weight: s_weight,
    metadata: s_metadata,
    added_at: expand_timestamp(a_added_at),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1ThresholdDecisionPolicy}
 */
export const condenseCosmosGroupV1ThresholdDecisionPolicy = (g_msg) => encodeCosmosGroupV1ThresholdDecisionPolicy(g_msg.threshold, apply_opt(g_msg.windows, condenseCosmosGroupV1DecisionPolicyWindows));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.ThresholdDecisionPolicy` - a decision policy where a proposal passes when it satisfies the two following conditions: 1. The sum of all `YES` voter's weights is greater or equal than the defined `threshold`. 2. The voting and execution periods of the proposal respect the parameters given by `windows`.
 */
export const expandCosmosGroupV1ThresholdDecisionPolicy = ([s_threshold, a_windows]) => ({
    threshold: s_threshold,
    windows: a_windows && expandCosmosGroupV1DecisionPolicyWindows(a_windows),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1DecisionPolicyWindows}
 */
export const condenseCosmosGroupV1DecisionPolicyWindows = (g_msg) => encodeCosmosGroupV1DecisionPolicyWindows(parse_duration(g_msg.voting_period), parse_duration(g_msg.min_execution_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.DecisionPolicyWindows` - defines the different windows for voting and execution.
 */
export const expandCosmosGroupV1DecisionPolicyWindows = ([a_voting_period, a_min_execution_period]) => ({
    voting_period: expand_duration(a_voting_period),
    min_execution_period: expand_duration(a_min_execution_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1PercentageDecisionPolicy}
 */
export const condenseCosmosGroupV1PercentageDecisionPolicy = (g_msg) => encodeCosmosGroupV1PercentageDecisionPolicy(g_msg.percentage, apply_opt(g_msg.windows, condenseCosmosGroupV1DecisionPolicyWindows));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.PercentageDecisionPolicy` - a decision policy where a proposal passes when it satisfies the two following conditions: 1. The percentage of all `YES` voters' weights out of the total group weight is greater or equal than the given `percentage`. 2. The voting and execution periods of the proposal respect the parameters given by `windows`.
 */
export const expandCosmosGroupV1PercentageDecisionPolicy = ([s_percentage, a_windows]) => ({
    percentage: s_percentage,
    windows: a_windows && expandCosmosGroupV1DecisionPolicyWindows(a_windows),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1GroupInfo}
 */
export const condenseCosmosGroupV1GroupInfo = (g_msg) => encodeCosmosGroupV1GroupInfo(g_msg.id, g_msg.admin, g_msg.metadata, g_msg.version, g_msg.total_weight, parse_timestamp(g_msg.created_at));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.GroupInfo` - represents the high-level on-chain information for a group.
 */
export const expandCosmosGroupV1GroupInfo = ([sg_id, s_admin, s_metadata, sg_version, s_total_weight, a_created_at]) => ({
    id: sg_id,
    admin: s_admin,
    metadata: s_metadata,
    version: sg_version,
    total_weight: s_total_weight,
    created_at: expand_timestamp(a_created_at),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1GroupMember}
 */
export const condenseCosmosGroupV1GroupMember = (g_msg) => encodeCosmosGroupV1GroupMember(g_msg.group_id, apply_opt(g_msg.member, condenseCosmosGroupV1Member));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.GroupMember` - represents the relationship between a group and a member.
 */
export const expandCosmosGroupV1GroupMember = ([sg_group_id, a_member]) => ({
    group_id: sg_group_id,
    member: a_member && expandCosmosGroupV1Member(a_member),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1GroupPolicyInfo}
 */
export const condenseCosmosGroupV1GroupPolicyInfo = (g_msg) => encodeCosmosGroupV1GroupPolicyInfo(g_msg.address, g_msg.group_id, g_msg.admin, g_msg.metadata, g_msg.version, condenseJsonAny(g_msg.decision_policy), parse_timestamp(g_msg.created_at));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.GroupPolicyInfo` - represents the high-level on-chain information for a group policy.
 */
export const expandCosmosGroupV1GroupPolicyInfo = ([sa_address, sg_group_id, s_admin, s_metadata, sg_version, a_decision_policy, a_created_at]) => ({
    address: sa_address,
    group_id: sg_group_id,
    admin: s_admin,
    metadata: s_metadata,
    version: sg_version,
    decision_policy: a_decision_policy && expandJsonAny(a_decision_policy),
    created_at: expand_timestamp(a_created_at),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1Proposal}
 */
export const condenseCosmosGroupV1Proposal = (g_msg) => encodeCosmosGroupV1Proposal(g_msg.id, g_msg.group_policy_address, g_msg.metadata, g_msg.proposers, parse_timestamp(g_msg.submit_time), g_msg.group_version, g_msg.group_policy_version, JsonToProtoEnumCosmosGroupV1ProposalStatus[g_msg.status], apply_opt(g_msg.final_tally_result, condenseCosmosGroupV1TallyResult), parse_timestamp(g_msg.voting_period_end), JsonToProtoEnumCosmosGroupV1ProposalExecutorResult[g_msg.executor_result], map(g_msg.messages, condenseJsonAny), g_msg.title, g_msg.summary);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.Proposal` - defines a group proposal. Any member of a group can submit a proposal for a group policy to decide upon. A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal passes as well as some optional metadata associated with the proposal.
 */
export const expandCosmosGroupV1Proposal = ([sg_id, sa_group_policy, s_metadata, a_proposers, a_submit_time, sg_group_version, sg_group_policy_version, xc_status, a_final_tally_result, a_voting_period_end, xc_executor_result, a_messages, s_title, s_summary]) => ({
    id: sg_id,
    group_policy_address: sa_group_policy,
    metadata: s_metadata,
    proposers: a_proposers,
    submit_time: expand_timestamp(a_submit_time),
    group_version: sg_group_version,
    group_policy_version: sg_group_policy_version,
    status: xc_status >= 0 ? ProtoToJsonEnumCosmosGroupV1ProposalStatus[xc_status] : __UNDEFINED,
    final_tally_result: a_final_tally_result && expandCosmosGroupV1TallyResult(a_final_tally_result),
    voting_period_end: expand_timestamp(a_voting_period_end),
    executor_result: xc_executor_result >= 0 ? ProtoToJsonEnumCosmosGroupV1ProposalExecutorResult[xc_executor_result] : __UNDEFINED,
    messages: a_messages && map(a_messages, expandJsonAny),
    title: s_title,
    summary: s_summary,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1Vote}
 */
export const condenseCosmosGroupV1Vote = (g_msg) => encodeCosmosGroupV1Vote(g_msg.proposal_id, g_msg.voter, JsonToProtoEnumCosmosGroupV1VoteOption[g_msg.option], g_msg.metadata, parse_timestamp(g_msg.submit_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.Vote` - represents a vote for a proposal.string metadata
 */
export const expandCosmosGroupV1Vote = ([sg_proposal_id, sa_voter, xc_option, s_metadata, a_submit_time]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGroupV1VoteOption[xc_option] : __UNDEFINED,
    metadata: s_metadata,
    submit_time: expand_timestamp(a_submit_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupInfoRequest}
 */
export const condenseCosmosGroupV1QueryGroupInfoRequest = (g_msg) => encodeCosmosGroupV1QueryGroupInfoRequest(g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupInfoRequest` - the Query/GroupInfo request type.
 */
export const expandCosmosGroupV1QueryGroupInfoRequest = ([sg_group_id]) => ({
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupInfoResponse}
 */
export const condenseCosmosGroupV1QueryGroupInfoResponse = (g_msg) => encodeCosmosGroupV1QueryGroupInfoResponse(apply_opt(g_msg.info, condenseCosmosGroupV1GroupInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupInfoResponse` - the Query/GroupInfo response type.
 */
export const expandCosmosGroupV1QueryGroupInfoResponse = ([a_info]) => ({
    info: a_info && expandCosmosGroupV1GroupInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPolicyInfoRequest}
 */
export const condenseCosmosGroupV1QueryGroupPolicyInfoRequest = (g_msg) => encodeCosmosGroupV1QueryGroupPolicyInfoRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPolicyInfoRequest` - the Query/GroupPolicyInfo request type.
 */
export const expandCosmosGroupV1QueryGroupPolicyInfoRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPolicyInfoResponse}
 */
export const condenseCosmosGroupV1QueryGroupPolicyInfoResponse = (g_msg) => encodeCosmosGroupV1QueryGroupPolicyInfoResponse(apply_opt(g_msg.info, condenseCosmosGroupV1GroupPolicyInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPolicyInfoResponse` - the Query/GroupPolicyInfo response type.
 */
export const expandCosmosGroupV1QueryGroupPolicyInfoResponse = ([a_info]) => ({
    info: a_info && expandCosmosGroupV1GroupPolicyInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupMembersRequest}
 */
export const condenseCosmosGroupV1QueryGroupMembersRequest = (g_msg) => encodeCosmosGroupV1QueryGroupMembersRequest(g_msg.group_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupMembersRequest` - the Query/GroupMembers request type.
 */
export const expandCosmosGroupV1QueryGroupMembersRequest = ([sg_group_id, a_pagination]) => ({
    group_id: sg_group_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupMembersResponse}
 */
export const condenseCosmosGroupV1QueryGroupMembersResponse = (g_msg) => encodeCosmosGroupV1QueryGroupMembersResponse(map(g_msg.members, condenseCosmosGroupV1GroupMember), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupMembersResponse` - the Query/GroupMembersResponse response type.
 */
export const expandCosmosGroupV1QueryGroupMembersResponse = ([a_members, a_pagination]) => ({
    members: a_members && map(a_members, expandCosmosGroupV1GroupMember),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsByAdminRequest}
 */
export const condenseCosmosGroupV1QueryGroupsByAdminRequest = (g_msg) => encodeCosmosGroupV1QueryGroupsByAdminRequest(g_msg.admin, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsByAdminRequest` - the Query/GroupsByAdmin request type.
 */
export const expandCosmosGroupV1QueryGroupsByAdminRequest = ([s_admin, a_pagination]) => ({
    admin: s_admin,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsByAdminResponse}
 */
export const condenseCosmosGroupV1QueryGroupsByAdminResponse = (g_msg) => encodeCosmosGroupV1QueryGroupsByAdminResponse(map(g_msg.groups, condenseCosmosGroupV1GroupInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsByAdminResponse` - the Query/GroupsByAdminResponse response type.
 */
export const expandCosmosGroupV1QueryGroupsByAdminResponse = ([a_groups, a_pagination]) => ({
    groups: a_groups && map(a_groups, expandCosmosGroupV1GroupInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPoliciesByGroupRequest}
 */
export const condenseCosmosGroupV1QueryGroupPoliciesByGroupRequest = (g_msg) => encodeCosmosGroupV1QueryGroupPoliciesByGroupRequest(g_msg.group_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPoliciesByGroupRequest` - the Query/GroupPoliciesByGroup request type.
 */
export const expandCosmosGroupV1QueryGroupPoliciesByGroupRequest = ([sg_group_id, a_pagination]) => ({
    group_id: sg_group_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPoliciesByGroupResponse}
 */
export const condenseCosmosGroupV1QueryGroupPoliciesByGroupResponse = (g_msg) => encodeCosmosGroupV1QueryGroupPoliciesByGroupResponse(map(g_msg.group_policies, condenseCosmosGroupV1GroupPolicyInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPoliciesByGroupResponse` - the Query/GroupPoliciesByGroup response type.
 */
export const expandCosmosGroupV1QueryGroupPoliciesByGroupResponse = ([a_group_policies, a_pagination]) => ({
    group_policies: a_group_policies && map(a_group_policies, expandCosmosGroupV1GroupPolicyInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPoliciesByAdminRequest}
 */
export const condenseCosmosGroupV1QueryGroupPoliciesByAdminRequest = (g_msg) => encodeCosmosGroupV1QueryGroupPoliciesByAdminRequest(g_msg.admin, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPoliciesByAdminRequest` - the Query/GroupPoliciesByAdmin request type.
 */
export const expandCosmosGroupV1QueryGroupPoliciesByAdminRequest = ([s_admin, a_pagination]) => ({
    admin: s_admin,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupPoliciesByAdminResponse}
 */
export const condenseCosmosGroupV1QueryGroupPoliciesByAdminResponse = (g_msg) => encodeCosmosGroupV1QueryGroupPoliciesByAdminResponse(map(g_msg.group_policies, condenseCosmosGroupV1GroupPolicyInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupPoliciesByAdminResponse` - the Query/GroupPoliciesByAdmin response type.
 */
export const expandCosmosGroupV1QueryGroupPoliciesByAdminResponse = ([a_group_policies, a_pagination]) => ({
    group_policies: a_group_policies && map(a_group_policies, expandCosmosGroupV1GroupPolicyInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryProposalRequest}
 */
export const condenseCosmosGroupV1QueryProposalRequest = (g_msg) => encodeCosmosGroupV1QueryProposalRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryProposalRequest` - the Query/Proposal request type.
 */
export const expandCosmosGroupV1QueryProposalRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryProposalResponse}
 */
export const condenseCosmosGroupV1QueryProposalResponse = (g_msg) => encodeCosmosGroupV1QueryProposalResponse(apply_opt(g_msg.proposal, condenseCosmosGroupV1Proposal));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryProposalResponse` - the Query/Proposal response type.
 */
export const expandCosmosGroupV1QueryProposalResponse = ([a_proposal]) => ({
    proposal: a_proposal && expandCosmosGroupV1Proposal(a_proposal),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryProposalsByGroupPolicyRequest}
 */
export const condenseCosmosGroupV1QueryProposalsByGroupPolicyRequest = (g_msg) => encodeCosmosGroupV1QueryProposalsByGroupPolicyRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryProposalsByGroupPolicyRequest` - the Query/ProposalByGroupPolicy request type.
 */
export const expandCosmosGroupV1QueryProposalsByGroupPolicyRequest = ([sa_address, a_pagination]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryProposalsByGroupPolicyResponse}
 */
export const condenseCosmosGroupV1QueryProposalsByGroupPolicyResponse = (g_msg) => encodeCosmosGroupV1QueryProposalsByGroupPolicyResponse(map(g_msg.proposals, condenseCosmosGroupV1Proposal), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryProposalsByGroupPolicyResponse` - the Query/ProposalByGroupPolicy response type.
 */
export const expandCosmosGroupV1QueryProposalsByGroupPolicyResponse = ([a_proposals, a_pagination]) => ({
    proposals: a_proposals && map(a_proposals, expandCosmosGroupV1Proposal),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVoteByProposalVoterRequest}
 */
export const condenseCosmosGroupV1QueryVoteByProposalVoterRequest = (g_msg) => encodeCosmosGroupV1QueryVoteByProposalVoterRequest(g_msg.proposal_id, g_msg.voter);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVoteByProposalVoterRequest` - the Query/VoteByProposalVoter request type.
 */
export const expandCosmosGroupV1QueryVoteByProposalVoterRequest = ([sg_proposal_id, sa_voter]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVoteByProposalVoterResponse}
 */
export const condenseCosmosGroupV1QueryVoteByProposalVoterResponse = (g_msg) => encodeCosmosGroupV1QueryVoteByProposalVoterResponse(apply_opt(g_msg.vote, condenseCosmosGroupV1Vote));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVoteByProposalVoterResponse` - the Query/VoteByProposalVoter response type.
 */
export const expandCosmosGroupV1QueryVoteByProposalVoterResponse = ([a_vote]) => ({
    vote: a_vote && expandCosmosGroupV1Vote(a_vote),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVotesByProposalRequest}
 */
export const condenseCosmosGroupV1QueryVotesByProposalRequest = (g_msg) => encodeCosmosGroupV1QueryVotesByProposalRequest(g_msg.proposal_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVotesByProposalRequest` - the Query/VotesByProposal request type.
 */
export const expandCosmosGroupV1QueryVotesByProposalRequest = ([sg_proposal_id, a_pagination]) => ({
    proposal_id: sg_proposal_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVotesByProposalResponse}
 */
export const condenseCosmosGroupV1QueryVotesByProposalResponse = (g_msg) => encodeCosmosGroupV1QueryVotesByProposalResponse(map(g_msg.votes, condenseCosmosGroupV1Vote), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVotesByProposalResponse` - the Query/VotesByProposal response type.
 */
export const expandCosmosGroupV1QueryVotesByProposalResponse = ([a_votes, a_pagination]) => ({
    votes: a_votes && map(a_votes, expandCosmosGroupV1Vote),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVotesByVoterRequest}
 */
export const condenseCosmosGroupV1QueryVotesByVoterRequest = (g_msg) => encodeCosmosGroupV1QueryVotesByVoterRequest(g_msg.voter, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVotesByVoterRequest` - the Query/VotesByVoter request type.
 */
export const expandCosmosGroupV1QueryVotesByVoterRequest = ([sa_voter, a_pagination]) => ({
    voter: sa_voter,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryVotesByVoterResponse}
 */
export const condenseCosmosGroupV1QueryVotesByVoterResponse = (g_msg) => encodeCosmosGroupV1QueryVotesByVoterResponse(map(g_msg.votes, condenseCosmosGroupV1Vote), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryVotesByVoterResponse` - the Query/VotesByVoter response type.
 */
export const expandCosmosGroupV1QueryVotesByVoterResponse = ([a_votes, a_pagination]) => ({
    votes: a_votes && map(a_votes, expandCosmosGroupV1Vote),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsByMemberRequest}
 */
export const condenseCosmosGroupV1QueryGroupsByMemberRequest = (g_msg) => encodeCosmosGroupV1QueryGroupsByMemberRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsByMemberRequest` - the Query/GroupsByMember request type.
 */
export const expandCosmosGroupV1QueryGroupsByMemberRequest = ([sa_address, a_pagination]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsByMemberResponse}
 */
export const condenseCosmosGroupV1QueryGroupsByMemberResponse = (g_msg) => encodeCosmosGroupV1QueryGroupsByMemberResponse(map(g_msg.groups, condenseCosmosGroupV1GroupInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsByMemberResponse` - the Query/GroupsByMember response type.
 */
export const expandCosmosGroupV1QueryGroupsByMemberResponse = ([a_groups, a_pagination]) => ({
    groups: a_groups && map(a_groups, expandCosmosGroupV1GroupInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryTallyResultRequest}
 */
export const condenseCosmosGroupV1QueryTallyResultRequest = (g_msg) => encodeCosmosGroupV1QueryTallyResultRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryTallyResultRequest` - the Query/TallyResult request type.
 */
export const expandCosmosGroupV1QueryTallyResultRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryTallyResultResponse}
 */
export const condenseCosmosGroupV1QueryTallyResultResponse = (g_msg) => encodeCosmosGroupV1QueryTallyResultResponse(apply_opt(g_msg.tally, condenseCosmosGroupV1TallyResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryTallyResultResponse` - the Query/TallyResult response type.
 */
export const expandCosmosGroupV1QueryTallyResultResponse = ([a_tally]) => ({
    tally: a_tally && expandCosmosGroupV1TallyResult(a_tally),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsRequest}
 */
export const condenseCosmosGroupV1QueryGroupsRequest = (g_msg) => encodeCosmosGroupV1QueryGroupsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsRequest` - the Query/Groups request type. Since: cosmos-sdk 0.47.1
 */
export const expandCosmosGroupV1QueryGroupsRequest = ([, a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1QueryGroupsResponse}
 */
export const condenseCosmosGroupV1QueryGroupsResponse = (g_msg) => encodeCosmosGroupV1QueryGroupsResponse(map(g_msg.groups, condenseCosmosGroupV1GroupInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.QueryGroupsResponse` - the Query/Groups response type. Since: cosmos-sdk 0.47.1
 */
export const expandCosmosGroupV1QueryGroupsResponse = ([a_groups, a_pagination]) => ({
    groups: a_groups && map(a_groups, expandCosmosGroupV1GroupInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupV1GenesisState}
 */
export const condenseCosmosGroupV1GenesisState = (g_msg) => encodeCosmosGroupV1GenesisState(g_msg.group_seq, map(g_msg.groups, condenseCosmosGroupV1GroupInfo), map(g_msg.group_members, condenseCosmosGroupV1GroupMember), g_msg.group_policy_seq, map(g_msg.group_policies, condenseCosmosGroupV1GroupPolicyInfo), g_msg.proposal_seq, map(g_msg.proposals, condenseCosmosGroupV1Proposal), map(g_msg.votes, condenseCosmosGroupV1Vote));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.v1.GenesisState` - defines the group module's genesis state.
 */
export const expandCosmosGroupV1GenesisState = ([sg_group_seq, a_groups, a_group_members, sg_group_policy_seq, a_group_policies, sg_proposal_seq, a_proposals, a_votes]) => ({
    group_seq: sg_group_seq,
    groups: a_groups && map(a_groups, expandCosmosGroupV1GroupInfo),
    group_members: a_group_members && map(a_group_members, expandCosmosGroupV1GroupMember),
    group_policy_seq: sg_group_policy_seq,
    group_policies: a_group_policies && map(a_group_policies, expandCosmosGroupV1GroupPolicyInfo),
    proposal_seq: sg_proposal_seq,
    proposals: a_proposals && map(a_proposals, expandCosmosGroupV1Proposal),
    votes: a_votes && map(a_votes, expandCosmosGroupV1Vote),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGroupModuleV1Module}
 */
export const condenseCosmosGroupModuleV1Module = (g_msg) => encodeCosmosGroupModuleV1Module(parse_duration(g_msg.max_execution_period), g_msg.max_metadata_len);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.group.module.v1.Module` - the config object of the group module.
 */
export const expandCosmosGroupModuleV1Module = ([a_max_execution_period, sg_max_metadata_len]) => ({
    max_execution_period: expand_duration(a_max_execution_period),
    max_metadata_len: sg_max_metadata_len,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1ExistenceProof}
 */
export const condenseCosmosIcs23V1ExistenceProof = (g_msg) => encodeCosmosIcs23V1ExistenceProof(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value), apply_opt(g_msg.leaf, condenseCosmosIcs23V1LeafOp), map(g_msg.path, condenseCosmosIcs23V1InnerOp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.ExistenceProof` - * ExistenceProof takes a key and a value and a set of steps to perform on it. The result of peforming all these steps will provide a "root hash", which can be compared to the value in a header. Since it is computationally infeasible to produce a hash collission for any of the used cryptographic hash functions, if someone can provide a series of operations to transform a given key and value into a root hash that matches some trusted root, these key and values must be in the referenced merkle tree. The only possible issue is maliablity in LeafOp, such as providing extra prefix data, which should be controlled by a spec. Eg. with lengthOp as NONE, prefix = FOO, key = BAR, value = CHOICE and prefix = F, key = OOBAR, value = CHOICE would produce the same value. With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field in the ProofSpec is valuable to prevent this mutability. And why all trees should length-prefix the data before hashing it.
 */
export const expandCosmosIcs23V1ExistenceProof = ([atu8_key, atu8_value, a_leaf, a_path]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
    leaf: a_leaf && expandCosmosIcs23V1LeafOp(a_leaf),
    path: a_path && map(a_path, expandCosmosIcs23V1InnerOp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1LeafOp}
 */
export const condenseCosmosIcs23V1LeafOp = (g_msg) => encodeCosmosIcs23V1LeafOp(JsonToProtoEnumCosmosIcs23V1HashOp[g_msg.hash], JsonToProtoEnumCosmosIcs23V1HashOp[g_msg.prehash_key], JsonToProtoEnumCosmosIcs23V1HashOp[g_msg.prehash_value], JsonToProtoEnumCosmosIcs23V1LengthOp[g_msg.length], safe_base64_to_bytes(g_msg.prefix));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.LeafOp` - * LeafOp represents the raw key-value data we wish to prove, and must be flexible to represent the internal transformation from the original key-value pairs into the basis hash, for many existing merkle trees. key and value are passed in. So that the signature of this operation is: leafOp(key, value) -> output To process this, first prehash the keys and values if needed (ANY means no hash in this case): hkey = prehashKey(key) hvalue = prehashValue(value) Then combine the bytes, and hash it output = hash(prefix || length(hkey) || hkey || length(hvalue) || hvalue)
 */
export const expandCosmosIcs23V1LeafOp = ([xc_hash, xc_prehash_key, xc_prehash_value, xc_length, atu8_prefix]) => ({
    hash: xc_hash >= 0 ? ProtoToJsonEnumCosmosIcs23V1HashOp[xc_hash] : __UNDEFINED,
    prehash_key: xc_prehash_key >= 0 ? ProtoToJsonEnumCosmosIcs23V1HashOp[xc_prehash_key] : __UNDEFINED,
    prehash_value: xc_prehash_value >= 0 ? ProtoToJsonEnumCosmosIcs23V1HashOp[xc_prehash_value] : __UNDEFINED,
    length: xc_length >= 0 ? ProtoToJsonEnumCosmosIcs23V1LengthOp[xc_length] : __UNDEFINED,
    prefix: safe_bytes_to_base64(atu8_prefix),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1InnerOp}
 */
export const condenseCosmosIcs23V1InnerOp = (g_msg) => encodeCosmosIcs23V1InnerOp(JsonToProtoEnumCosmosIcs23V1HashOp[g_msg.hash], safe_base64_to_bytes(g_msg.prefix), safe_base64_to_bytes(g_msg.suffix));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.InnerOp` - * InnerOp represents a merkle-proof step that is not a leaf. It represents concatenating two children and hashing them to provide the next result. The result of the previous step is passed in, so the signature of this op is: innerOp(child) -> output The result of applying InnerOp should be: output = op.hash(op.prefix || child || op.suffix) where the || operator is concatenation of binary data, and child is the result of hashing all the tree below this step. Any special data, like prepending child with the length, or prepending the entire operation with some value to differentiate from leaf nodes, should be included in prefix and suffix. If either of prefix or suffix is empty, we just treat it as an empty string
 */
export const expandCosmosIcs23V1InnerOp = ([xc_hash, atu8_prefix, atu8_suffix]) => ({
    hash: xc_hash >= 0 ? ProtoToJsonEnumCosmosIcs23V1HashOp[xc_hash] : __UNDEFINED,
    prefix: safe_bytes_to_base64(atu8_prefix),
    suffix: safe_bytes_to_base64(atu8_suffix),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1NonExistenceProof}
 */
export const condenseCosmosIcs23V1NonExistenceProof = (g_msg) => encodeCosmosIcs23V1NonExistenceProof(safe_base64_to_bytes(g_msg.key), apply_opt(g_msg.left, condenseCosmosIcs23V1ExistenceProof), apply_opt(g_msg.right, condenseCosmosIcs23V1ExistenceProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.NonExistenceProof` - takes a proof of two neighbors, one left of the desired key, one right of the desired key. If both proofs are valid AND they are neighbors, then there is no valid proof for the given key.
 */
export const expandCosmosIcs23V1NonExistenceProof = ([atu8_key, a_left, a_right]) => ({
    key: safe_bytes_to_base64(atu8_key),
    left: a_left && expandCosmosIcs23V1ExistenceProof(a_left),
    right: a_right && expandCosmosIcs23V1ExistenceProof(a_right),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1CommitmentProof}
 */
export const condenseCosmosIcs23V1CommitmentProof = (g_msg) => encodeCosmosIcs23V1CommitmentProof(apply_opt(g_msg.exist, condenseCosmosIcs23V1ExistenceProof), apply_opt(g_msg.nonexist, condenseCosmosIcs23V1NonExistenceProof), apply_opt(g_msg.batch, condenseCosmosIcs23V1BatchProof), apply_opt(g_msg.compressed, condenseCosmosIcs23V1CompressedBatchProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.CommitmentProof` - either an ExistenceProof or a NonExistenceProof, or a Batch of such messages
 */
export const expandCosmosIcs23V1CommitmentProof = ([a_exist, a_nonexist, a_batch, a_compressed]) => ({
    exist: a_exist && expandCosmosIcs23V1ExistenceProof(a_exist),
    nonexist: a_nonexist && expandCosmosIcs23V1NonExistenceProof(a_nonexist),
    batch: a_batch && expandCosmosIcs23V1BatchProof(a_batch),
    compressed: a_compressed && expandCosmosIcs23V1CompressedBatchProof(a_compressed),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1BatchProof}
 */
export const condenseCosmosIcs23V1BatchProof = (g_msg) => encodeCosmosIcs23V1BatchProof(map(g_msg.entries, condenseCosmosIcs23V1BatchEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.BatchProof` - a group of multiple proof types than can be compressed
 */
export const expandCosmosIcs23V1BatchProof = ([a_entries]) => ({
    entries: a_entries && map(a_entries, expandCosmosIcs23V1BatchEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1BatchEntry}
 */
export const condenseCosmosIcs23V1BatchEntry = (g_msg) => encodeCosmosIcs23V1BatchEntry(apply_opt(g_msg.exist, condenseCosmosIcs23V1ExistenceProof), apply_opt(g_msg.nonexist, condenseCosmosIcs23V1NonExistenceProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.BatchEntry` - Use BatchEntry not CommitmentProof, to avoid recursion
 */
export const expandCosmosIcs23V1BatchEntry = ([a_exist, a_nonexist]) => ({
    exist: a_exist && expandCosmosIcs23V1ExistenceProof(a_exist),
    nonexist: a_nonexist && expandCosmosIcs23V1NonExistenceProof(a_nonexist),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1CompressedBatchProof}
 */
export const condenseCosmosIcs23V1CompressedBatchProof = (g_msg) => encodeCosmosIcs23V1CompressedBatchProof(map(g_msg.entries, condenseCosmosIcs23V1CompressedBatchEntry), map(g_msg.lookup_inners, condenseCosmosIcs23V1InnerOp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.CompressedBatchProof` -
 */
export const expandCosmosIcs23V1CompressedBatchProof = ([a_entries, a_lookup_inners]) => ({
    entries: a_entries && map(a_entries, expandCosmosIcs23V1CompressedBatchEntry),
    lookup_inners: a_lookup_inners && map(a_lookup_inners, expandCosmosIcs23V1InnerOp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1CompressedBatchEntry}
 */
export const condenseCosmosIcs23V1CompressedBatchEntry = (g_msg) => encodeCosmosIcs23V1CompressedBatchEntry(apply_opt(g_msg.exist, condenseCosmosIcs23V1CompressedExistenceProof), apply_opt(g_msg.nonexist, condenseCosmosIcs23V1CompressedNonExistenceProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.CompressedBatchEntry` - Use BatchEntry not CommitmentProof, to avoid recursion
 */
export const expandCosmosIcs23V1CompressedBatchEntry = ([a_exist, a_nonexist]) => ({
    exist: a_exist && expandCosmosIcs23V1CompressedExistenceProof(a_exist),
    nonexist: a_nonexist && expandCosmosIcs23V1CompressedNonExistenceProof(a_nonexist),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1CompressedExistenceProof}
 */
export const condenseCosmosIcs23V1CompressedExistenceProof = (g_msg) => encodeCosmosIcs23V1CompressedExistenceProof(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value), apply_opt(g_msg.leaf, condenseCosmosIcs23V1LeafOp), g_msg.path);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.CompressedExistenceProof` -
 */
export const expandCosmosIcs23V1CompressedExistenceProof = ([atu8_key, atu8_value, a_leaf, a_paths]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
    leaf: a_leaf && expandCosmosIcs23V1LeafOp(a_leaf),
    path: a_paths,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1CompressedNonExistenceProof}
 */
export const condenseCosmosIcs23V1CompressedNonExistenceProof = (g_msg) => encodeCosmosIcs23V1CompressedNonExistenceProof(safe_base64_to_bytes(g_msg.key), apply_opt(g_msg.left, condenseCosmosIcs23V1CompressedExistenceProof), apply_opt(g_msg.right, condenseCosmosIcs23V1CompressedExistenceProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.CompressedNonExistenceProof` -
 */
export const expandCosmosIcs23V1CompressedNonExistenceProof = ([atu8_key, a_left, a_right]) => ({
    key: safe_bytes_to_base64(atu8_key),
    left: a_left && expandCosmosIcs23V1CompressedExistenceProof(a_left),
    right: a_right && expandCosmosIcs23V1CompressedExistenceProof(a_right),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1ProofSpec}
 */
export const condenseCosmosIcs23V1ProofSpec = (g_msg) => encodeCosmosIcs23V1ProofSpec(apply_opt(g_msg.leaf_spec, condenseCosmosIcs23V1LeafOp), apply_opt(g_msg.inner_spec, condenseCosmosIcs23V1InnerSpec), g_msg.max_depth, g_msg.min_depth, g_msg.prehash_key_before_comparison);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.ProofSpec` - * ProofSpec defines what the expected parameters are for a given proof type. This can be stored in the client and used to validate any incoming proofs. verify(ProofSpec, Proof) -> Proof | Error As demonstrated in tests, if we don't fix the algorithm used to calculate the LeafHash for a given tree, there are many possible key-value pairs that can generate a given hash (by interpretting the preimage differently). We need this for proper security, requires client knows a priori what tree format server uses. But not in code, rather a configuration object.
 */
export const expandCosmosIcs23V1ProofSpec = ([a_leaf_spec, a_inner_spec, n_max_depth, n_min_depth, b_prehash_key_before_comparison]) => ({
    leaf_spec: a_leaf_spec && expandCosmosIcs23V1LeafOp(a_leaf_spec),
    inner_spec: a_inner_spec && expandCosmosIcs23V1InnerSpec(a_inner_spec),
    max_depth: n_max_depth,
    min_depth: n_min_depth,
    prehash_key_before_comparison: !!b_prehash_key_before_comparison,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosIcs23V1InnerSpec}
 */
export const condenseCosmosIcs23V1InnerSpec = (g_msg) => encodeCosmosIcs23V1InnerSpec(g_msg.child_order, g_msg.child_size, g_msg.min_prefix_length, g_msg.max_prefix_length, safe_base64_to_bytes(g_msg.empty_child), JsonToProtoEnumCosmosIcs23V1HashOp[g_msg.hash]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.ics23.v1.InnerSpec` - contains all store-specific structure info to determine if two proofs from a given store are neighbors. This enables: isLeftMost(spec: InnerSpec, op: InnerOp) isRightMost(spec: InnerSpec, op: InnerOp) isLeftNeighbor(spec: InnerSpec, left: InnerOp, right: InnerOp)
 */
export const expandCosmosIcs23V1InnerSpec = ([a_child_orders, n_child_size, n_min_prefix_length, n_max_prefix_length, atu8_empty_child, xc_hash]) => ({
    child_order: a_child_orders,
    child_size: n_child_size,
    min_prefix_length: n_min_prefix_length,
    max_prefix_length: n_max_prefix_length,
    empty_child: safe_bytes_to_base64(atu8_empty_child),
    hash: xc_hash >= 0 ? ProtoToJsonEnumCosmosIcs23V1HashOp[xc_hash] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankModuleV1Module}
 */
export const condenseCosmosBankModuleV1Module = (g_msg) => encodeCosmosBankModuleV1Module(g_msg.blocked_module_accounts_override, g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.module.v1.Module` - the config object of the bank module.
 */
export const expandCosmosBankModuleV1Module = ([a_blocked_module_accounts_overrides, s_authority]) => ({
    blocked_module_accounts_override: a_blocked_module_accounts_overrides,
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgSend}
 */
export const condenseCosmosBankV1beta1MsgSend = (g_msg) => encodeCosmosBankV1beta1MsgSend(g_msg.from_address, g_msg.to_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgSend` - represents a message to send coins from one account to another.
 */
export const expandCosmosBankV1beta1MsgSend = ([sa_from, sa_to, a_amount]) => ({
    from_address: sa_from,
    to_address: sa_to,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgSendResponse}
 */
export const condenseCosmosBankV1beta1MsgSendResponse = (g_msg) => encodeCosmosBankV1beta1MsgSendResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgSendResponse` - defines the Msg/Send response type.
 */
export const expandCosmosBankV1beta1MsgSendResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgMultiSend}
 */
export const condenseCosmosBankV1beta1MsgMultiSend = (g_msg) => encodeCosmosBankV1beta1MsgMultiSend(map(g_msg.inputs, condenseCosmosBankV1beta1Input), map(g_msg.outputs, condenseCosmosBankV1beta1Output));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgMultiSend` - represents an arbitrary multi-in, multi-out send message.
 */
export const expandCosmosBankV1beta1MsgMultiSend = ([a_inputs, a_outputs]) => ({
    inputs: a_inputs && map(a_inputs, expandCosmosBankV1beta1Input),
    outputs: a_outputs && map(a_outputs, expandCosmosBankV1beta1Output),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Input}
 */
export const condenseCosmosBankV1beta1Input = (g_msg) => encodeCosmosBankV1beta1Input(g_msg.address, map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Input` - models transaction input.
 */
export const expandCosmosBankV1beta1Input = ([sa_address, a_coins]) => ({
    address: sa_address,
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Output}
 */
export const condenseCosmosBankV1beta1Output = (g_msg) => encodeCosmosBankV1beta1Output(g_msg.address, map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Output` - models transaction outputs.
 */
export const expandCosmosBankV1beta1Output = ([sa_address, a_coins]) => ({
    address: sa_address,
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgMultiSendResponse}
 */
export const condenseCosmosBankV1beta1MsgMultiSendResponse = (g_msg) => encodeCosmosBankV1beta1MsgMultiSendResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgMultiSendResponse` - defines the Msg/MultiSend response type.
 */
export const expandCosmosBankV1beta1MsgMultiSendResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgUpdateParams}
 */
export const condenseCosmosBankV1beta1MsgUpdateParams = (g_msg) => encodeCosmosBankV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosBankV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosBankV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Params}
 */
export const condenseCosmosBankV1beta1Params = (g_msg) => encodeCosmosBankV1beta1Params(map(g_msg.send_enabled, condenseCosmosBankV1beta1SendEnabled), g_msg.default_send_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Params` - defines the parameters for the bank module.
 */
export const expandCosmosBankV1beta1Params = ([a_send_enabled, b_default_send_enabled]) => ({
    send_enabled: a_send_enabled && map(a_send_enabled, expandCosmosBankV1beta1SendEnabled),
    default_send_enabled: !!b_default_send_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1SendEnabled}
 */
export const condenseCosmosBankV1beta1SendEnabled = (g_msg) => encodeCosmosBankV1beta1SendEnabled(g_msg.denom, g_msg.enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.SendEnabled` - maps coin denom to a send_enabled status (whether a denom is sendable).
 */
export const expandCosmosBankV1beta1SendEnabled = ([s_denom, b_enabled]) => ({
    denom: s_denom,
    enabled: !!b_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosBankV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosBankV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgSetSendEnabled}
 */
export const condenseCosmosBankV1beta1MsgSetSendEnabled = (g_msg) => encodeCosmosBankV1beta1MsgSetSendEnabled(g_msg.authority, map(g_msg.send_enabled, condenseCosmosBankV1beta1SendEnabled), g_msg.use_default_for);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgSetSendEnabled` - the Msg/SetSendEnabled request type. Only entries to add/update/delete need to be included. Existing SendEnabled entries that are not included in this message are left unchanged. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1MsgSetSendEnabled = ([s_authority, a_send_enabled, a_use_default_fors]) => ({
    authority: s_authority,
    send_enabled: a_send_enabled && map(a_send_enabled, expandCosmosBankV1beta1SendEnabled),
    use_default_for: a_use_default_fors,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgSetSendEnabledResponse}
 */
export const condenseCosmosBankV1beta1MsgSetSendEnabledResponse = (g_msg) => encodeCosmosBankV1beta1MsgSetSendEnabledResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgSetSendEnabledResponse` - defines the Msg/SetSendEnabled response type. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1MsgSetSendEnabledResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgBurn}
 */
export const condenseCosmosBankV1beta1MsgBurn = (g_msg) => encodeCosmosBankV1beta1MsgBurn(g_msg.from_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgBurn` - defines a message for burning coins. Since: cosmos-sdk 0.51
 */
export const expandCosmosBankV1beta1MsgBurn = ([sa_from, a_amount]) => ({
    from_address: sa_from,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1MsgBurnResponse}
 */
export const condenseCosmosBankV1beta1MsgBurnResponse = (g_msg) => encodeCosmosBankV1beta1MsgBurnResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.MsgBurnResponse` - defines the Msg/Burn response type. Since: cosmos-sdk 0.51
 */
export const expandCosmosBankV1beta1MsgBurnResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Supply}
 */
export const condenseCosmosBankV1beta1Supply = (g_msg) => encodeCosmosBankV1beta1Supply(map(g_msg.total, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Supply` - represents a struct that passively keeps track of the total supply amounts in the network. This message is deprecated now that supply is indexed by denom.
 */
export const expandCosmosBankV1beta1Supply = ([a_total]) => ({
    total: a_total && map(a_total, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1DenomUnit}
 */
export const condenseCosmosBankV1beta1DenomUnit = (g_msg) => encodeCosmosBankV1beta1DenomUnit(g_msg.denom, g_msg.exponent, g_msg.aliases);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.DenomUnit` - represents a struct that describes a given denomination unit of the basic token.
 */
export const expandCosmosBankV1beta1DenomUnit = ([s_denom, n_exponent, a_aliases]) => ({
    denom: s_denom,
    exponent: n_exponent,
    aliases: a_aliases,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Metadata}
 */
export const condenseCosmosBankV1beta1Metadata = (g_msg) => encodeCosmosBankV1beta1Metadata(g_msg.description, map(g_msg.denom_units, condenseCosmosBankV1beta1DenomUnit), g_msg.base, g_msg.display, g_msg.name, g_msg.symbol, g_msg.uri, g_msg.uri_hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Metadata` - represents a struct that describes a basic token.
 */
export const expandCosmosBankV1beta1Metadata = ([s_description, a_denom_units, s_base, s_display, s_name, s_symbol, s_uri, s_uri_hash]) => ({
    description: s_description,
    denom_units: a_denom_units && map(a_denom_units, expandCosmosBankV1beta1DenomUnit),
    base: s_base,
    display: s_display,
    name: s_name,
    symbol: s_symbol,
    uri: s_uri,
    uri_hash: s_uri_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryBalanceRequest}
 */
export const condenseCosmosBankV1beta1QueryBalanceRequest = (g_msg) => encodeCosmosBankV1beta1QueryBalanceRequest(g_msg.address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryBalanceRequest` - the request type for the Query/Balance RPC method.
 */
export const expandCosmosBankV1beta1QueryBalanceRequest = ([sa_address, s_denom]) => ({
    address: sa_address,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryBalanceResponse}
 */
export const condenseCosmosBankV1beta1QueryBalanceResponse = (g_msg) => encodeCosmosBankV1beta1QueryBalanceResponse(slimify_coin(g_msg.balance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryBalanceResponse` - the response type for the Query/Balance RPC method.
 */
export const expandCosmosBankV1beta1QueryBalanceResponse = ([a_balance]) => ({
    balance: a_balance && expand_coin(a_balance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryAllBalancesRequest}
 */
export const condenseCosmosBankV1beta1QueryAllBalancesRequest = (g_msg) => encodeCosmosBankV1beta1QueryAllBalancesRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), g_msg.resolve_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryAllBalancesRequest` - QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 */
export const expandCosmosBankV1beta1QueryAllBalancesRequest = ([sa_address, a_pagination, b_resolve_denom]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    resolve_denom: !!b_resolve_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryAllBalancesResponse}
 */
export const condenseCosmosBankV1beta1QueryAllBalancesResponse = (g_msg) => encodeCosmosBankV1beta1QueryAllBalancesResponse(map(g_msg.balances, slimify_coin), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryAllBalancesResponse` - the response type for the Query/AllBalances RPC method.
 */
export const expandCosmosBankV1beta1QueryAllBalancesResponse = ([a_balances, a_pagination]) => ({
    balances: a_balances && map(a_balances, expand_coin),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySpendableBalancesRequest}
 */
export const condenseCosmosBankV1beta1QuerySpendableBalancesRequest = (g_msg) => encodeCosmosBankV1beta1QuerySpendableBalancesRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySpendableBalancesRequest` - defines the gRPC request structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 */
export const expandCosmosBankV1beta1QuerySpendableBalancesRequest = ([sa_address, a_pagination]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySpendableBalancesResponse}
 */
export const condenseCosmosBankV1beta1QuerySpendableBalancesResponse = (g_msg) => encodeCosmosBankV1beta1QuerySpendableBalancesResponse(map(g_msg.balances, slimify_coin), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySpendableBalancesResponse` - defines the gRPC response structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 */
export const expandCosmosBankV1beta1QuerySpendableBalancesResponse = ([a_balances, a_pagination]) => ({
    balances: a_balances && map(a_balances, expand_coin),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySpendableBalanceByDenomRequest}
 */
export const condenseCosmosBankV1beta1QuerySpendableBalanceByDenomRequest = (g_msg) => encodeCosmosBankV1beta1QuerySpendableBalanceByDenomRequest(g_msg.address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest` - defines the gRPC request structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1QuerySpendableBalanceByDenomRequest = ([sa_address, s_denom]) => ({
    address: sa_address,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySpendableBalanceByDenomResponse}
 */
export const condenseCosmosBankV1beta1QuerySpendableBalanceByDenomResponse = (g_msg) => encodeCosmosBankV1beta1QuerySpendableBalanceByDenomResponse(slimify_coin(g_msg.balance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse` - defines the gRPC response structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1QuerySpendableBalanceByDenomResponse = ([a_balance]) => ({
    balance: a_balance && expand_coin(a_balance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryTotalSupplyRequest}
 */
export const condenseCosmosBankV1beta1QueryTotalSupplyRequest = (g_msg) => encodeCosmosBankV1beta1QueryTotalSupplyRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryTotalSupplyRequest` - the request type for the Query/TotalSupply RPC method.
 */
export const expandCosmosBankV1beta1QueryTotalSupplyRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryTotalSupplyResponse}
 */
export const condenseCosmosBankV1beta1QueryTotalSupplyResponse = (g_msg) => encodeCosmosBankV1beta1QueryTotalSupplyResponse(map(g_msg.supply, slimify_coin), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryTotalSupplyResponse` - the response type for the Query/TotalSupply RPC method
 */
export const expandCosmosBankV1beta1QueryTotalSupplyResponse = ([a_supply, a_pagination]) => ({
    supply: a_supply && map(a_supply, expand_coin),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySupplyOfRequest}
 */
export const condenseCosmosBankV1beta1QuerySupplyOfRequest = (g_msg) => encodeCosmosBankV1beta1QuerySupplyOfRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySupplyOfRequest` - the request type for the Query/SupplyOf RPC method.
 */
export const expandCosmosBankV1beta1QuerySupplyOfRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySupplyOfResponse}
 */
export const condenseCosmosBankV1beta1QuerySupplyOfResponse = (g_msg) => encodeCosmosBankV1beta1QuerySupplyOfResponse(slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySupplyOfResponse` - the response type for the Query/SupplyOf RPC method.
 */
export const expandCosmosBankV1beta1QuerySupplyOfResponse = ([a_amount]) => ({
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryParamsRequest}
 */
export const condenseCosmosBankV1beta1QueryParamsRequest = (g_msg) => encodeCosmosBankV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryParamsRequest` - defines the request type for querying x/bank parameters.
 */
export const expandCosmosBankV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryParamsResponse}
 */
export const condenseCosmosBankV1beta1QueryParamsResponse = (g_msg) => encodeCosmosBankV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosBankV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryParamsResponse` - defines the response type for querying x/bank parameters.
 */
export const expandCosmosBankV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosBankV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomsMetadataRequest}
 */
export const condenseCosmosBankV1beta1QueryDenomsMetadataRequest = (g_msg) => encodeCosmosBankV1beta1QueryDenomsMetadataRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomsMetadataRequest` - the request type for the Query/DenomsMetadata RPC method.
 */
export const expandCosmosBankV1beta1QueryDenomsMetadataRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomsMetadataResponse}
 */
export const condenseCosmosBankV1beta1QueryDenomsMetadataResponse = (g_msg) => encodeCosmosBankV1beta1QueryDenomsMetadataResponse(map(g_msg.metadatas, condenseCosmosBankV1beta1Metadata), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomsMetadataResponse` - the response type for the Query/DenomsMetadata RPC method.
 */
export const expandCosmosBankV1beta1QueryDenomsMetadataResponse = ([a_metadatas, a_pagination]) => ({
    metadatas: a_metadatas && map(a_metadatas, expandCosmosBankV1beta1Metadata),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomMetadataRequest}
 */
export const condenseCosmosBankV1beta1QueryDenomMetadataRequest = (g_msg) => encodeCosmosBankV1beta1QueryDenomMetadataRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomMetadataRequest` - the request type for the Query/DenomMetadata RPC method.
 */
export const expandCosmosBankV1beta1QueryDenomMetadataRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomMetadataResponse}
 */
export const condenseCosmosBankV1beta1QueryDenomMetadataResponse = (g_msg) => encodeCosmosBankV1beta1QueryDenomMetadataResponse(apply_opt(g_msg.metadata, condenseCosmosBankV1beta1Metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomMetadataResponse` - the response type for the Query/DenomMetadata RPC method.
 */
export const expandCosmosBankV1beta1QueryDenomMetadataResponse = ([a_metadata]) => ({
    metadata: a_metadata && expandCosmosBankV1beta1Metadata(a_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest}
 */
export const condenseCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest = (g_msg) => encodeCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest` - the request type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataRequest but receives denom as query string.
 */
export const expandCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse}
 */
export const condenseCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse = (g_msg) => encodeCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse(apply_opt(g_msg.metadata, condenseCosmosBankV1beta1Metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse` - the response type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
 */
export const expandCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse = ([a_metadata]) => ({
    metadata: a_metadata && expandCosmosBankV1beta1Metadata(a_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomOwnersRequest}
 */
export const condenseCosmosBankV1beta1QueryDenomOwnersRequest = (g_msg) => encodeCosmosBankV1beta1QueryDenomOwnersRequest(g_msg.denom, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomOwnersRequest` - defines the request type for the DenomOwners RPC query, which queries for a paginated set of all account holders of a particular denomination.
 */
export const expandCosmosBankV1beta1QueryDenomOwnersRequest = ([s_denom, a_pagination]) => ({
    denom: s_denom,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1DenomOwner}
 */
export const condenseCosmosBankV1beta1DenomOwner = (g_msg) => encodeCosmosBankV1beta1DenomOwner(g_msg.address, slimify_coin(g_msg.balance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.DenomOwner` - defines structure representing an account that owns or holds a particular denominated token. It contains the account address and account balance of the denominated token. Since: cosmos-sdk 0.46
 */
export const expandCosmosBankV1beta1DenomOwner = ([sa_address, a_balance]) => ({
    address: sa_address,
    balance: a_balance && expand_coin(a_balance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QueryDenomOwnersResponse}
 */
export const condenseCosmosBankV1beta1QueryDenomOwnersResponse = (g_msg) => encodeCosmosBankV1beta1QueryDenomOwnersResponse(map(g_msg.denom_owners, condenseCosmosBankV1beta1DenomOwner), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QueryDenomOwnersResponse` - defines the RPC response of a DenomOwners RPC query. Since: cosmos-sdk 0.46
 */
export const expandCosmosBankV1beta1QueryDenomOwnersResponse = ([a_denom_owners, a_pagination]) => ({
    denom_owners: a_denom_owners && map(a_denom_owners, expandCosmosBankV1beta1DenomOwner),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySendEnabledRequest}
 */
export const condenseCosmosBankV1beta1QuerySendEnabledRequest = (g_msg) => encodeCosmosBankV1beta1QuerySendEnabledRequest(g_msg.denoms, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySendEnabledRequest` - defines the RPC request for looking up SendEnabled entries. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1QuerySendEnabledRequest = (a_fields, [a_denoms] = a_fields, a_pagination = a_fields[98]) => ({
    denoms: a_denoms,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1QuerySendEnabledResponse}
 */
export const condenseCosmosBankV1beta1QuerySendEnabledResponse = (g_msg) => encodeCosmosBankV1beta1QuerySendEnabledResponse(map(g_msg.send_enabled, condenseCosmosBankV1beta1SendEnabled), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.QuerySendEnabledResponse` - defines the RPC response of a SendEnable query. Since: cosmos-sdk 0.47
 */
export const expandCosmosBankV1beta1QuerySendEnabledResponse = (a_fields, [a_send_enabled] = a_fields, a_pagination = a_fields[98]) => ({
    send_enabled: a_send_enabled && map(a_send_enabled, expandCosmosBankV1beta1SendEnabled),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1SendAuthorization}
 */
export const condenseCosmosBankV1beta1SendAuthorization = (g_msg) => encodeCosmosBankV1beta1SendAuthorization(map(g_msg.spend_limit, slimify_coin), g_msg.allow_list);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.SendAuthorization` - allows the grantee to spend up to spend_limit coins from the granter's account. Since: cosmos-sdk 0.43
 */
export const expandCosmosBankV1beta1SendAuthorization = ([a_spend_limit, a_allow_lists]) => ({
    spend_limit: a_spend_limit && map(a_spend_limit, expand_coin),
    allow_list: a_allow_lists,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1GenesisState}
 */
export const condenseCosmosBankV1beta1GenesisState = (g_msg) => encodeCosmosBankV1beta1GenesisState(apply_opt(g_msg.params, condenseCosmosBankV1beta1Params), map(g_msg.balances, condenseCosmosBankV1beta1Balance), map(g_msg.supply, slimify_coin), map(g_msg.denom_metadata, condenseCosmosBankV1beta1Metadata), map(g_msg.send_enabled, condenseCosmosBankV1beta1SendEnabled));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.GenesisState` - defines the bank module's genesis state.
 */
export const expandCosmosBankV1beta1GenesisState = ([a_params, a_balances, a_supply, a_denom_metadata, a_send_enabled]) => ({
    params: a_params && expandCosmosBankV1beta1Params(a_params),
    balances: a_balances && map(a_balances, expandCosmosBankV1beta1Balance),
    supply: a_supply && map(a_supply, expand_coin),
    denom_metadata: a_denom_metadata && map(a_denom_metadata, expandCosmosBankV1beta1Metadata),
    send_enabled: a_send_enabled && map(a_send_enabled, expandCosmosBankV1beta1SendEnabled),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBankV1beta1Balance}
 */
export const condenseCosmosBankV1beta1Balance = (g_msg) => encodeCosmosBankV1beta1Balance(g_msg.address, map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.bank.v1beta1.Balance` - defines an account address and balance pair used in the bank module's genesis state.
 */
export const expandCosmosBankV1beta1Balance = ([sa_address, a_coins]) => ({
    address: sa_address,
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgAuthorizeCircuitBreaker}
 */
export const condenseCosmosCircuitV1MsgAuthorizeCircuitBreaker = (g_msg) => encodeCosmosCircuitV1MsgAuthorizeCircuitBreaker(g_msg.granter, g_msg.grantee, apply_opt(g_msg.permissions, condenseCosmosCircuitV1Permissions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgAuthorizeCircuitBreaker` - defines the Msg/AuthorizeCircuitBreaker request type.
 */
export const expandCosmosCircuitV1MsgAuthorizeCircuitBreaker = ([sa_granter, sa_grantee, a_permissions]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    permissions: a_permissions && expandCosmosCircuitV1Permissions(a_permissions),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1Permissions}
 */
export const condenseCosmosCircuitV1Permissions = (g_msg) => encodeCosmosCircuitV1Permissions(JsonToProtoEnumCosmosCircuitV1PermissionsLevel[g_msg.level], g_msg.limit_type_urls);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.Permissions` - the permissions that an account has to trip or reset the circuit breaker.
 */
export const expandCosmosCircuitV1Permissions = ([xc_level, a_limit_type_urls]) => ({
    level: xc_level >= 0 ? ProtoToJsonEnumCosmosCircuitV1PermissionsLevel[xc_level] : __UNDEFINED,
    limit_type_urls: a_limit_type_urls,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse}
 */
export const condenseCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse = (g_msg) => encodeCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse` - defines the Msg/AuthorizeCircuitBreaker response type.
 */
export const expandCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgTripCircuitBreaker}
 */
export const condenseCosmosCircuitV1MsgTripCircuitBreaker = (g_msg) => encodeCosmosCircuitV1MsgTripCircuitBreaker(g_msg.authority, g_msg.msg_type_urls);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgTripCircuitBreaker` - defines the Msg/TripCircuitBreaker request type.
 */
export const expandCosmosCircuitV1MsgTripCircuitBreaker = ([s_authority, a_msg_type_urls]) => ({
    authority: s_authority,
    msg_type_urls: a_msg_type_urls,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgTripCircuitBreakerResponse}
 */
export const condenseCosmosCircuitV1MsgTripCircuitBreakerResponse = (g_msg) => encodeCosmosCircuitV1MsgTripCircuitBreakerResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgTripCircuitBreakerResponse` - defines the Msg/TripCircuitBreaker response type.
 */
export const expandCosmosCircuitV1MsgTripCircuitBreakerResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgResetCircuitBreaker}
 */
export const condenseCosmosCircuitV1MsgResetCircuitBreaker = (g_msg) => encodeCosmosCircuitV1MsgResetCircuitBreaker(g_msg.authority, g_msg.msg_type_urls);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgResetCircuitBreaker` - defines the Msg/ResetCircuitBreaker request type.
 */
export const expandCosmosCircuitV1MsgResetCircuitBreaker = ([s_authority, , a_msg_type_urls]) => ({
    authority: s_authority,
    msg_type_urls: a_msg_type_urls,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1MsgResetCircuitBreakerResponse}
 */
export const condenseCosmosCircuitV1MsgResetCircuitBreakerResponse = (g_msg) => encodeCosmosCircuitV1MsgResetCircuitBreakerResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.MsgResetCircuitBreakerResponse` - defines the Msg/ResetCircuitBreaker response type.
 */
export const expandCosmosCircuitV1MsgResetCircuitBreakerResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1GenesisAccountPermissions}
 */
export const condenseCosmosCircuitV1GenesisAccountPermissions = (g_msg) => encodeCosmosCircuitV1GenesisAccountPermissions(g_msg.address, apply_opt(g_msg.permissions, condenseCosmosCircuitV1Permissions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.GenesisAccountPermissions` - the account permissions for the circuit breaker in genesis
 */
export const expandCosmosCircuitV1GenesisAccountPermissions = ([sa_address, a_permissions]) => ({
    address: sa_address,
    permissions: a_permissions && expandCosmosCircuitV1Permissions(a_permissions),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1GenesisState}
 */
export const condenseCosmosCircuitV1GenesisState = (g_msg) => encodeCosmosCircuitV1GenesisState(map(g_msg.account_permissions, condenseCosmosCircuitV1GenesisAccountPermissions), g_msg.disabled_type_urls);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.GenesisState` - the state that must be provided at genesis.
 */
export const expandCosmosCircuitV1GenesisState = ([a_account_permissions, a_disabled_type_urls]) => ({
    account_permissions: a_account_permissions && map(a_account_permissions, expandCosmosCircuitV1GenesisAccountPermissions),
    disabled_type_urls: a_disabled_type_urls,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1QueryAccountRequest}
 */
export const condenseCosmosCircuitV1QueryAccountRequest = (g_msg) => encodeCosmosCircuitV1QueryAccountRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.QueryAccountRequest` - the request type for the Query/Account RPC method.
 */
export const expandCosmosCircuitV1QueryAccountRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1AccountResponse}
 */
export const condenseCosmosCircuitV1AccountResponse = (g_msg) => encodeCosmosCircuitV1AccountResponse(apply_opt(g_msg.permission, condenseCosmosCircuitV1Permissions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.AccountResponse` - the response type for the Query/Account RPC method.
 */
export const expandCosmosCircuitV1AccountResponse = ([a_permission]) => ({
    permission: a_permission && expandCosmosCircuitV1Permissions(a_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1QueryAccountsRequest}
 */
export const condenseCosmosCircuitV1QueryAccountsRequest = (g_msg) => encodeCosmosCircuitV1QueryAccountsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.QueryAccountsRequest` - the request type for the Query/Accounts RPC method.
 */
export const expandCosmosCircuitV1QueryAccountsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1AccountsResponse}
 */
export const condenseCosmosCircuitV1AccountsResponse = (g_msg) => encodeCosmosCircuitV1AccountsResponse(map(g_msg.accounts, condenseCosmosCircuitV1GenesisAccountPermissions), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.AccountsResponse` - the response type for the Query/Accounts RPC method.
 */
export const expandCosmosCircuitV1AccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandCosmosCircuitV1GenesisAccountPermissions),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1QueryDisabledListRequest}
 */
export const condenseCosmosCircuitV1QueryDisabledListRequest = (g_msg) => encodeCosmosCircuitV1QueryDisabledListRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.QueryDisabledListRequest` - QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 */
export const expandCosmosCircuitV1QueryDisabledListRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitV1DisabledListResponse}
 */
export const condenseCosmosCircuitV1DisabledListResponse = (g_msg) => encodeCosmosCircuitV1DisabledListResponse(g_msg.disabled_list);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.v1.DisabledListResponse` - the response type for the Query/DisabledList RPC method.
 */
export const expandCosmosCircuitV1DisabledListResponse = ([a_disabled_lists]) => ({
    disabled_list: a_disabled_lists,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCircuitModuleV1Module}
 */
export const condenseCosmosCircuitModuleV1Module = (g_msg) => encodeCosmosCircuitModuleV1Module(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.circuit.module.v1.Module` - the config object of the circuit module.
 */
export const expandCosmosCircuitModuleV1Module = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionModuleV1Module}
 */
export const condenseCosmosDistributionModuleV1Module = (g_msg) => encodeCosmosDistributionModuleV1Module(g_msg.fee_collector_name, g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.module.v1.Module` - the config object of the distribution module.
 */
export const expandCosmosDistributionModuleV1Module = ([s_fee_collector_name, s_authority]) => ({
    fee_collector_name: s_fee_collector_name,
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgSetWithdrawAddress}
 */
export const condenseCosmosDistributionV1beta1MsgSetWithdrawAddress = (g_msg) => encodeCosmosDistributionV1beta1MsgSetWithdrawAddress(g_msg.delegator_address, g_msg.withdraw_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgSetWithdrawAddress` - sets the withdraw address for a delegator (or validator self-delegation).
 */
export const expandCosmosDistributionV1beta1MsgSetWithdrawAddress = ([sa_delegator, sa_withdraw]) => ({
    delegator_address: sa_delegator,
    withdraw_address: sa_withdraw,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgSetWithdrawAddressResponse}
 */
export const condenseCosmosDistributionV1beta1MsgSetWithdrawAddressResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgSetWithdrawAddressResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse` - defines the Msg/SetWithdrawAddress response type.
 */
export const expandCosmosDistributionV1beta1MsgSetWithdrawAddressResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgWithdrawDelegatorReward}
 */
export const condenseCosmosDistributionV1beta1MsgWithdrawDelegatorReward = (g_msg) => encodeCosmosDistributionV1beta1MsgWithdrawDelegatorReward(g_msg.delegator_address, g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward` - represents delegation withdrawal to a delegator from a single validator.
 */
export const expandCosmosDistributionV1beta1MsgWithdrawDelegatorReward = ([sa_delegator, sa_validator]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse}
 */
export const condenseCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse(map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse` - defines the Msg/WithdrawDelegatorReward response type.
 */
export const expandCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse = ([a_amount]) => ({
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgWithdrawValidatorCommission}
 */
export const condenseCosmosDistributionV1beta1MsgWithdrawValidatorCommission = (g_msg) => encodeCosmosDistributionV1beta1MsgWithdrawValidatorCommission(g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission` - withdraws the full commission to the validator address.
 */
export const expandCosmosDistributionV1beta1MsgWithdrawValidatorCommission = ([sa_validator]) => ({
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse}
 */
export const condenseCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse(map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse` - defines the Msg/WithdrawValidatorCommission response type.
 */
export const expandCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse = ([a_amount]) => ({
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgFundCommunityPool}
 */
export const condenseCosmosDistributionV1beta1MsgFundCommunityPool = (g_msg) => encodeCosmosDistributionV1beta1MsgFundCommunityPool(map(g_msg.amount, slimify_coin), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgFundCommunityPool` - allows an account to directly fund the community pool. Deprecated: Use x/protocolpool module's MsgFundCommunityPool instead. Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgFundCommunityPool = ([a_amount, sa_depositor]) => ({
    amount: a_amount && map(a_amount, expand_coin),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgFundCommunityPoolResponse}
 */
export const condenseCosmosDistributionV1beta1MsgFundCommunityPoolResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgFundCommunityPoolResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse` - defines the Msg/FundCommunityPool response type. Deprecated Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgFundCommunityPoolResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgUpdateParams}
 */
export const condenseCosmosDistributionV1beta1MsgUpdateParams = (g_msg) => encodeCosmosDistributionV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosDistributionV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosDistributionV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosDistributionV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1Params}
 */
export const condenseCosmosDistributionV1beta1Params = (g_msg) => encodeCosmosDistributionV1beta1Params(g_msg.community_tax, g_msg.base_proposer_reward, g_msg.bonus_proposer_reward, g_msg.withdraw_addr_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.Params` - defines the set of params for the distribution module.
 */
export const expandCosmosDistributionV1beta1Params = ([s_community_tax, s_base_proposer_reward, s_bonus_proposer_reward, b_withdraw_addr_enabled]) => ({
    community_tax: s_community_tax,
    base_proposer_reward: s_base_proposer_reward,
    bonus_proposer_reward: s_bonus_proposer_reward,
    withdraw_addr_enabled: !!b_withdraw_addr_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosDistributionV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosDistributionV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgCommunityPoolSpend}
 */
export const condenseCosmosDistributionV1beta1MsgCommunityPoolSpend = (g_msg) => encodeCosmosDistributionV1beta1MsgCommunityPoolSpend(g_msg.authority, g_msg.recipient, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgCommunityPoolSpend` - Deprecated: Use x/protocolpool module's MsgCommunityPoolSpend instead Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgCommunityPoolSpend = ([s_authority, sa_recipient, a_amount]) => ({
    authority: s_authority,
    recipient: sa_recipient,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgCommunityPoolSpendResponse}
 */
export const condenseCosmosDistributionV1beta1MsgCommunityPoolSpendResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgCommunityPoolSpendResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse` - defines the response to executing a MsgCommunityPoolSpend message. Deprecated Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgCommunityPoolSpendResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgDepositValidatorRewardsPool}
 */
export const condenseCosmosDistributionV1beta1MsgDepositValidatorRewardsPool = (g_msg) => encodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPool(g_msg.depositor, g_msg.validator_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool` - DepositValidatorRewardsPool defines the request structure to provide additional rewards to delegators from a specific validator. Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgDepositValidatorRewardsPool = ([sa_depositor, sa_validator, a_amount]) => ({
    depositor: sa_depositor,
    validator_address: sa_validator,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse}
 */
export const condenseCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse = (g_msg) => encodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse` - defines the response to executing a MsgDepositValidatorRewardsPool message. Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorHistoricalRewards}
 */
export const condenseCosmosDistributionV1beta1ValidatorHistoricalRewards = (g_msg) => encodeCosmosDistributionV1beta1ValidatorHistoricalRewards(map(g_msg.cumulative_reward_ratio, condenseCosmosBaseV1beta1DecCoin), g_msg.reference_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorHistoricalRewards` - represents historical rewards for a validator. Height is implicit within the store key. Cumulative reward ratio is the sum from the zeroeth period until this period of rewards / tokens, per the spec. The reference count indicates the number of objects which might need to reference this historical entry at any point. ReferenceCount = number of outstanding delegations which ended the associated period (and might need to read that record) + number of slashes which ended the associated period (and might need to read that record) + one per validator for the zeroeth period, set on initialization
 */
export const expandCosmosDistributionV1beta1ValidatorHistoricalRewards = ([a_cumulative_reward_ratio, n_reference_count]) => ({
    cumulative_reward_ratio: a_cumulative_reward_ratio && map(a_cumulative_reward_ratio, expandCosmosBaseV1beta1DecCoin),
    reference_count: n_reference_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseV1beta1DecCoin}
 */
export const condenseCosmosBaseV1beta1DecCoin = (g_msg) => encodeCosmosBaseV1beta1DecCoin(g_msg.denom, g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.v1beta1.DecCoin` - defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto.
 */
export const expandCosmosBaseV1beta1DecCoin = ([s_denom, s_amount]) => ({
    denom: s_denom,
    amount: s_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorCurrentRewards}
 */
export const condenseCosmosDistributionV1beta1ValidatorCurrentRewards = (g_msg) => encodeCosmosDistributionV1beta1ValidatorCurrentRewards(map(g_msg.rewards, condenseCosmosBaseV1beta1DecCoin), g_msg.period);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorCurrentRewards` - represents current rewards and current period for a validator kept as a running counter and incremented each block as long as the validator's tokens remain constant.
 */
export const expandCosmosDistributionV1beta1ValidatorCurrentRewards = ([a_rewards, sg_period]) => ({
    rewards: a_rewards && map(a_rewards, expandCosmosBaseV1beta1DecCoin),
    period: sg_period,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorAccumulatedCommission}
 */
export const condenseCosmosDistributionV1beta1ValidatorAccumulatedCommission = (g_msg) => encodeCosmosDistributionV1beta1ValidatorAccumulatedCommission(map(g_msg.commission, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorAccumulatedCommission` - represents accumulated commission for a validator kept as a running counter, can be withdrawn at any time.
 */
export const expandCosmosDistributionV1beta1ValidatorAccumulatedCommission = ([a_commission]) => ({
    commission: a_commission && map(a_commission, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorOutstandingRewards}
 */
export const condenseCosmosDistributionV1beta1ValidatorOutstandingRewards = (g_msg) => encodeCosmosDistributionV1beta1ValidatorOutstandingRewards(map(g_msg.rewards, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorOutstandingRewards` - represents outstanding (un-withdrawn) rewards for a validator inexpensive to track, allows simple sanity checks.
 */
export const expandCosmosDistributionV1beta1ValidatorOutstandingRewards = ([a_rewards]) => ({
    rewards: a_rewards && map(a_rewards, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorSlashEvent}
 */
export const condenseCosmosDistributionV1beta1ValidatorSlashEvent = (g_msg) => encodeCosmosDistributionV1beta1ValidatorSlashEvent(g_msg.validator_period, g_msg.fraction);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorSlashEvent` - represents a validator slash event. Height is implicit within the store key. This is needed to calculate appropriate amount of staking tokens for delegations which are withdrawn after a slash has occurred.
 */
export const expandCosmosDistributionV1beta1ValidatorSlashEvent = ([sg_validator_period, s_fraction]) => ({
    validator_period: sg_validator_period,
    fraction: s_fraction,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorSlashEvents}
 */
export const condenseCosmosDistributionV1beta1ValidatorSlashEvents = (g_msg) => encodeCosmosDistributionV1beta1ValidatorSlashEvents(map(g_msg.validator_slash_events, condenseCosmosDistributionV1beta1ValidatorSlashEvent));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorSlashEvents` - a collection of ValidatorSlashEvent messages.
 */
export const expandCosmosDistributionV1beta1ValidatorSlashEvents = ([a_validator_slash_events]) => ({
    validator_slash_events: a_validator_slash_events && map(a_validator_slash_events, expandCosmosDistributionV1beta1ValidatorSlashEvent),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1FeePool}
 */
export const condenseCosmosDistributionV1beta1FeePool = (g_msg) => encodeCosmosDistributionV1beta1FeePool(map(g_msg.community_pool, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.FeePool` - the global fee pool for distribution.
 */
export const expandCosmosDistributionV1beta1FeePool = ([a_community_pool]) => ({
    community_pool: a_community_pool && map(a_community_pool, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1CommunityPoolSpendProposal}
 */
export const condenseCosmosDistributionV1beta1CommunityPoolSpendProposal = (g_msg) => encodeCosmosDistributionV1beta1CommunityPoolSpendProposal(g_msg.title, g_msg.description, g_msg.recipient, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.CommunityPoolSpendProposal` - details a proposal for use of community funds, together with how many coins are proposed to be spent, and to which recipient account. Deprecated: Do not use. As of the Cosmos SDK release v0.47.x, there is no longer a need for an explicit CommunityPoolSpendProposal. To spend community pool funds, a simple MsgCommunityPoolSpend can be invoked from the x/gov module via a v1 governance proposal.
 */
export const expandCosmosDistributionV1beta1CommunityPoolSpendProposal = ([s_title, s_description, sa_recipient, a_amount]) => ({
    title: s_title,
    description: s_description,
    recipient: sa_recipient,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1DelegatorStartingInfo}
 */
export const condenseCosmosDistributionV1beta1DelegatorStartingInfo = (g_msg) => encodeCosmosDistributionV1beta1DelegatorStartingInfo(g_msg.previous_period, g_msg.stake, g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.DelegatorStartingInfo` - represents the starting info for a delegator reward period. It tracks the previous validator period, the delegation's amount of staking token, and the creation height (to check later on if any slashes have occurred). NOTE: Even though validators are slashed to whole staking tokens, the delegators within the validator may be left with less than a full token, thus sdk.Dec is used.
 */
export const expandCosmosDistributionV1beta1DelegatorStartingInfo = ([sg_previous_period, s_stake, sg_height]) => ({
    previous_period: sg_previous_period,
    stake: s_stake,
    height: sg_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1DelegationDelegatorReward}
 */
export const condenseCosmosDistributionV1beta1DelegationDelegatorReward = (g_msg) => encodeCosmosDistributionV1beta1DelegationDelegatorReward(g_msg.validator_address, map(g_msg.reward, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.DelegationDelegatorReward` - represents the properties of a delegator's delegation reward.
 */
export const expandCosmosDistributionV1beta1DelegationDelegatorReward = ([sa_validator, a_reward]) => ({
    validator_address: sa_validator,
    reward: a_reward && map(a_reward, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit}
 */
export const condenseCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit = (g_msg) => encodeCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit(g_msg.title, g_msg.description, g_msg.recipient, g_msg.amount, g_msg.deposit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit` - defines a CommunityPoolSpendProposal with a deposit Deprecated: Do not use.
 */
export const expandCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit = ([s_title, s_description, sa_recipient, s_amount, s_deposit]) => ({
    title: s_title,
    description: s_description,
    recipient: sa_recipient,
    amount: s_amount,
    deposit: s_deposit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryParamsRequest}
 */
export const condenseCosmosDistributionV1beta1QueryParamsRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmosDistributionV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryParamsResponse}
 */
export const condenseCosmosDistributionV1beta1QueryParamsResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosDistributionV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmosDistributionV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosDistributionV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest(g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest` - the request type for the Query/ValidatorDistributionInfo RPC method.
 */
export const expandCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest = ([sa_validator]) => ({
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse(g_msg.operator_address, map(g_msg.self_bond_rewards, condenseCosmosBaseV1beta1DecCoin), map(g_msg.commission, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse` - the response type for the Query/ValidatorDistributionInfo RPC method.
 */
export const expandCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse = ([sa_operator, a_self_bond_rewards, a_commission]) => ({
    operator_address: sa_operator,
    self_bond_rewards: a_self_bond_rewards && map(a_self_bond_rewards, expandCosmosBaseV1beta1DecCoin),
    commission: a_commission && map(a_commission, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest(g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest` - the request type for the Query/ValidatorOutstandingRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest = ([sa_validator]) => ({
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse(apply_opt(g_msg.rewards, condenseCosmosDistributionV1beta1ValidatorOutstandingRewards));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse` - the response type for the Query/ValidatorOutstandingRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse = ([a_rewards]) => ({
    rewards: a_rewards && expandCosmosDistributionV1beta1ValidatorOutstandingRewards(a_rewards),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorCommissionRequest}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorCommissionRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorCommissionRequest(g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorCommissionRequest` - the request type for the Query/ValidatorCommission RPC method
 */
export const expandCosmosDistributionV1beta1QueryValidatorCommissionRequest = ([sa_validator]) => ({
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorCommissionResponse}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorCommissionResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorCommissionResponse(apply_opt(g_msg.commission, condenseCosmosDistributionV1beta1ValidatorAccumulatedCommission));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorCommissionResponse` - the response type for the Query/ValidatorCommission RPC method
 */
export const expandCosmosDistributionV1beta1QueryValidatorCommissionResponse = ([a_commission]) => ({
    commission: a_commission && expandCosmosDistributionV1beta1ValidatorAccumulatedCommission(a_commission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorSlashesRequest}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorSlashesRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorSlashesRequest(g_msg.validator_address, g_msg.starting_height, g_msg.ending_height, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorSlashesRequest` - the request type for the Query/ValidatorSlashes RPC method
 */
export const expandCosmosDistributionV1beta1QueryValidatorSlashesRequest = ([sa_validator, sg_starting_height, sg_ending_height, a_pagination]) => ({
    validator_address: sa_validator,
    starting_height: sg_starting_height,
    ending_height: sg_ending_height,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryValidatorSlashesResponse}
 */
export const condenseCosmosDistributionV1beta1QueryValidatorSlashesResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryValidatorSlashesResponse(map(g_msg.slashes, condenseCosmosDistributionV1beta1ValidatorSlashEvent), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryValidatorSlashesResponse` - the response type for the Query/ValidatorSlashes RPC method.
 */
export const expandCosmosDistributionV1beta1QueryValidatorSlashesResponse = ([a_slashes, a_pagination]) => ({
    slashes: a_slashes && map(a_slashes, expandCosmosDistributionV1beta1ValidatorSlashEvent),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegationRewardsRequest}
 */
export const condenseCosmosDistributionV1beta1QueryDelegationRewardsRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegationRewardsRequest(g_msg.delegator_address, g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegationRewardsRequest` - the request type for the Query/DelegationRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegationRewardsRequest = ([sa_delegator, sa_validator]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegationRewardsResponse}
 */
export const condenseCosmosDistributionV1beta1QueryDelegationRewardsResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegationRewardsResponse(map(g_msg.rewards, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegationRewardsResponse` - the response type for the Query/DelegationRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegationRewardsResponse = ([a_rewards]) => ({
    rewards: a_rewards && map(a_rewards, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest}
 */
export const condenseCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest` - the request type for the Query/DelegationTotalRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse}
 */
export const condenseCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse(map(g_msg.rewards, condenseCosmosDistributionV1beta1DelegationDelegatorReward), map(g_msg.total, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse` - the response type for the Query/DelegationTotalRewards RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse = ([a_rewards, a_total]) => ({
    rewards: a_rewards && map(a_rewards, expandCosmosDistributionV1beta1DelegationDelegatorReward),
    total: a_total && map(a_total, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegatorValidatorsRequest}
 */
export const condenseCosmosDistributionV1beta1QueryDelegatorValidatorsRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegatorValidatorsRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest` - the request type for the Query/DelegatorValidators RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegatorValidatorsRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegatorValidatorsResponse}
 */
export const condenseCosmosDistributionV1beta1QueryDelegatorValidatorsResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegatorValidatorsResponse(g_msg.validators);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse` - the response type for the Query/DelegatorValidators RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegatorValidatorsResponse = ([a_validators]) => ({
    validators: a_validators,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest}
 */
export const condenseCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest` - the request type for the Query/DelegatorWithdrawAddress RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse}
 */
export const condenseCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse(g_msg.withdraw_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse` - the response type for the Query/DelegatorWithdrawAddress RPC method.
 */
export const expandCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse = ([sa_withdraw]) => ({
    withdraw_address: sa_withdraw,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryCommunityPoolRequest}
 */
export const condenseCosmosDistributionV1beta1QueryCommunityPoolRequest = (g_msg) => encodeCosmosDistributionV1beta1QueryCommunityPoolRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryCommunityPoolRequest` - the request type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1QueryCommunityPoolRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1QueryCommunityPoolResponse}
 */
export const condenseCosmosDistributionV1beta1QueryCommunityPoolResponse = (g_msg) => encodeCosmosDistributionV1beta1QueryCommunityPoolResponse(map(g_msg.pool, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.QueryCommunityPoolResponse` - the response type for the Query/CommunityPool RPC method. Deprecated Since: cosmos-sdk 0.50
 */
export const expandCosmosDistributionV1beta1QueryCommunityPoolResponse = ([a_pool]) => ({
    pool: a_pool && map(a_pool, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1DelegatorWithdrawInfo}
 */
export const condenseCosmosDistributionV1beta1DelegatorWithdrawInfo = (g_msg) => encodeCosmosDistributionV1beta1DelegatorWithdrawInfo(g_msg.delegator_address, g_msg.withdraw_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.DelegatorWithdrawInfo` - the address for where distributions rewards are withdrawn to by default this struct is only used at genesis to feed in default withdraw addresses.
 */
export const expandCosmosDistributionV1beta1DelegatorWithdrawInfo = ([sa_delegator, sa_withdraw]) => ({
    delegator_address: sa_delegator,
    withdraw_address: sa_withdraw,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord}
 */
export const condenseCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord = (g_msg) => encodeCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord(g_msg.validator_address, map(g_msg.outstanding_rewards, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord` - used for import/export via genesis json.
 */
export const expandCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord = ([sa_validator, a_outstanding_rewards]) => ({
    validator_address: sa_validator,
    outstanding_rewards: a_outstanding_rewards && map(a_outstanding_rewards, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord}
 */
export const condenseCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord = (g_msg) => encodeCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord(g_msg.validator_address, apply_opt(g_msg.accumulated, condenseCosmosDistributionV1beta1ValidatorAccumulatedCommission));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord` - used for import / export via genesis json.
 */
export const expandCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord = ([sa_validator, a_accumulated]) => ({
    validator_address: sa_validator,
    accumulated: a_accumulated && expandCosmosDistributionV1beta1ValidatorAccumulatedCommission(a_accumulated),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord}
 */
export const condenseCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord = (g_msg) => encodeCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord(g_msg.validator_address, g_msg.period, apply_opt(g_msg.rewards, condenseCosmosDistributionV1beta1ValidatorHistoricalRewards));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord` - used for import / export via genesis json.
 */
export const expandCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord = ([sa_validator, sg_period, a_rewards]) => ({
    validator_address: sa_validator,
    period: sg_period,
    rewards: a_rewards && expandCosmosDistributionV1beta1ValidatorHistoricalRewards(a_rewards),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorCurrentRewardsRecord}
 */
export const condenseCosmosDistributionV1beta1ValidatorCurrentRewardsRecord = (g_msg) => encodeCosmosDistributionV1beta1ValidatorCurrentRewardsRecord(g_msg.validator_address, apply_opt(g_msg.rewards, condenseCosmosDistributionV1beta1ValidatorCurrentRewards));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord` - used for import / export via genesis json.
 */
export const expandCosmosDistributionV1beta1ValidatorCurrentRewardsRecord = ([sa_validator, a_rewards]) => ({
    validator_address: sa_validator,
    rewards: a_rewards && expandCosmosDistributionV1beta1ValidatorCurrentRewards(a_rewards),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1DelegatorStartingInfoRecord}
 */
export const condenseCosmosDistributionV1beta1DelegatorStartingInfoRecord = (g_msg) => encodeCosmosDistributionV1beta1DelegatorStartingInfoRecord(g_msg.delegator_address, g_msg.validator_address, apply_opt(g_msg.starting_info, condenseCosmosDistributionV1beta1DelegatorStartingInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.DelegatorStartingInfoRecord` - used for import / export via genesis json.
 */
export const expandCosmosDistributionV1beta1DelegatorStartingInfoRecord = ([sa_delegator, sa_validator, a_starting_info]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    starting_info: a_starting_info && expandCosmosDistributionV1beta1DelegatorStartingInfo(a_starting_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1ValidatorSlashEventRecord}
 */
export const condenseCosmosDistributionV1beta1ValidatorSlashEventRecord = (g_msg) => encodeCosmosDistributionV1beta1ValidatorSlashEventRecord(g_msg.validator_address, g_msg.height, g_msg.period, apply_opt(g_msg.validator_slash_event, condenseCosmosDistributionV1beta1ValidatorSlashEvent));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.ValidatorSlashEventRecord` - used for import / export via genesis json.
 */
export const expandCosmosDistributionV1beta1ValidatorSlashEventRecord = ([sa_validator, sg_height, sg_period, a_validator_slash_event]) => ({
    validator_address: sa_validator,
    height: sg_height,
    period: sg_period,
    validator_slash_event: a_validator_slash_event && expandCosmosDistributionV1beta1ValidatorSlashEvent(a_validator_slash_event),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosDistributionV1beta1GenesisState}
 */
export const condenseCosmosDistributionV1beta1GenesisState = (g_msg) => encodeCosmosDistributionV1beta1GenesisState(apply_opt(g_msg.params, condenseCosmosDistributionV1beta1Params), apply_opt(g_msg.fee_pool, condenseCosmosDistributionV1beta1FeePool), map(g_msg.delegator_withdraw_infos, condenseCosmosDistributionV1beta1DelegatorWithdrawInfo), g_msg.previous_proposer, map(g_msg.outstanding_rewards, condenseCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord), map(g_msg.validator_accumulated_commissions, condenseCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord), map(g_msg.validator_historical_rewards, condenseCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord), map(g_msg.validator_current_rewards, condenseCosmosDistributionV1beta1ValidatorCurrentRewardsRecord), map(g_msg.delegator_starting_infos, condenseCosmosDistributionV1beta1DelegatorStartingInfoRecord), map(g_msg.validator_slash_events, condenseCosmosDistributionV1beta1ValidatorSlashEventRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.distribution.v1beta1.GenesisState` - defines the distribution module's genesis state.
 */
export const expandCosmosDistributionV1beta1GenesisState = ([a_params, a_fee_pool, a_delegator_withdraw_infos, s_previous_proposer, a_outstanding_rewards, a_validator_accumulated_commissions, a_validator_historical_rewards, a_validator_current_rewards, a_delegator_starting_infos, a_validator_slash_events]) => ({
    params: a_params && expandCosmosDistributionV1beta1Params(a_params),
    fee_pool: a_fee_pool && expandCosmosDistributionV1beta1FeePool(a_fee_pool),
    delegator_withdraw_infos: a_delegator_withdraw_infos && map(a_delegator_withdraw_infos, expandCosmosDistributionV1beta1DelegatorWithdrawInfo),
    previous_proposer: s_previous_proposer,
    outstanding_rewards: a_outstanding_rewards && map(a_outstanding_rewards, expandCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord),
    validator_accumulated_commissions: a_validator_accumulated_commissions && map(a_validator_accumulated_commissions, expandCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord),
    validator_historical_rewards: a_validator_historical_rewards && map(a_validator_historical_rewards, expandCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord),
    validator_current_rewards: a_validator_current_rewards && map(a_validator_current_rewards, expandCosmosDistributionV1beta1ValidatorCurrentRewardsRecord),
    delegator_starting_infos: a_delegator_starting_infos && map(a_delegator_starting_infos, expandCosmosDistributionV1beta1DelegatorStartingInfoRecord),
    validator_slash_events: a_validator_slash_events && map(a_validator_slash_events, expandCosmosDistributionV1beta1ValidatorSlashEventRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisModuleV1Module}
 */
export const condenseCosmosCrisisModuleV1Module = (g_msg) => encodeCosmosCrisisModuleV1Module(g_msg.fee_collector_name, g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.module.v1.Module` - the config object of the crisis module.
 */
export const expandCosmosCrisisModuleV1Module = ([s_fee_collector_name, s_authority]) => ({
    fee_collector_name: s_fee_collector_name,
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisV1beta1MsgVerifyInvariant}
 */
export const condenseCosmosCrisisV1beta1MsgVerifyInvariant = (g_msg) => encodeCosmosCrisisV1beta1MsgVerifyInvariant(g_msg.sender, g_msg.invariant_module_name, g_msg.invariant_route);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.v1beta1.MsgVerifyInvariant` - represents a message to verify a particular invariance.
 */
export const expandCosmosCrisisV1beta1MsgVerifyInvariant = ([sa_sender, s_invariant_module_name, s_invariant_route]) => ({
    sender: sa_sender,
    invariant_module_name: s_invariant_module_name,
    invariant_route: s_invariant_route,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisV1beta1MsgVerifyInvariantResponse}
 */
export const condenseCosmosCrisisV1beta1MsgVerifyInvariantResponse = (g_msg) => encodeCosmosCrisisV1beta1MsgVerifyInvariantResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.v1beta1.MsgVerifyInvariantResponse` - defines the Msg/VerifyInvariant response type.
 */
export const expandCosmosCrisisV1beta1MsgVerifyInvariantResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisV1beta1MsgUpdateParams}
 */
export const condenseCosmosCrisisV1beta1MsgUpdateParams = (g_msg) => encodeCosmosCrisisV1beta1MsgUpdateParams(g_msg.authority, slimify_coin(g_msg.constant_fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosCrisisV1beta1MsgUpdateParams = ([s_authority, a_constant_fee]) => ({
    authority: s_authority,
    constant_fee: a_constant_fee && expand_coin(a_constant_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosCrisisV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosCrisisV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosCrisisV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosCrisisV1beta1GenesisState}
 */
export const condenseCosmosCrisisV1beta1GenesisState = (g_msg) => encodeCosmosCrisisV1beta1GenesisState(slimify_coin(g_msg.constant_fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.crisis.v1beta1.GenesisState` - defines the crisis module's genesis state.
 */
export const expandCosmosCrisisV1beta1GenesisState = ([, , a_constant_fee]) => ({
    constant_fee: a_constant_fee && expand_coin(a_constant_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxSigningV1beta1SignatureDescriptors}
 */
export const condenseCosmosTxSigningV1beta1SignatureDescriptors = (g_msg) => encodeCosmosTxSigningV1beta1SignatureDescriptors(map(g_msg.signatures, condenseCosmosTxSigningV1beta1SignatureDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.signing.v1beta1.SignatureDescriptors` - wraps multiple SignatureDescriptor's.
 */
export const expandCosmosTxSigningV1beta1SignatureDescriptors = ([a_signatures]) => ({
    signatures: a_signatures && map(a_signatures, expandCosmosTxSigningV1beta1SignatureDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxSigningV1beta1SignatureDescriptor}
 */
export const condenseCosmosTxSigningV1beta1SignatureDescriptor = (g_msg) => encodeCosmosTxSigningV1beta1SignatureDescriptor(condenseJsonAny(g_msg.public_key), apply_opt(g_msg.data, condenseCosmosTxSigningV1beta1SignatureDescriptorData), g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.signing.v1beta1.SignatureDescriptor` - a convenience type which represents the full data for a signature including the public key of the signer, signing modes and the signature itself. It is primarily used for coordinating signatures between clients.
 */
export const expandCosmosTxSigningV1beta1SignatureDescriptor = ([a_public_key, a_data, sg_sequence]) => ({
    public_key: a_public_key && expandJsonAny(a_public_key),
    data: a_data && expandCosmosTxSigningV1beta1SignatureDescriptorData(a_data),
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxSigningV1beta1SignatureDescriptorData}
 */
export const condenseCosmosTxSigningV1beta1SignatureDescriptorData = (g_msg) => encodeCosmosTxSigningV1beta1SignatureDescriptorData(apply_opt(g_msg.single, condenseCosmosTxSigningV1beta1SignatureDescriptorDataSingle), apply_opt(g_msg.multi, condenseCosmosTxSigningV1beta1SignatureDescriptorDataMulti));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.signing.v1beta1.SignatureDescriptor.Data` -
 */
export const expandCosmosTxSigningV1beta1SignatureDescriptorData = ([a_single, a_multi]) => ({
    single: a_single && expandCosmosTxSigningV1beta1SignatureDescriptorDataSingle(a_single),
    multi: a_multi && expandCosmosTxSigningV1beta1SignatureDescriptorDataMulti(a_multi),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxSigningV1beta1SignatureDescriptorDataSingle}
 */
export const condenseCosmosTxSigningV1beta1SignatureDescriptorDataSingle = (g_msg) => encodeCosmosTxSigningV1beta1SignatureDescriptorDataSingle(JsonToProtoEnumCosmosTxSigningV1beta1SignMode[g_msg.mode], safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single` -
 */
export const expandCosmosTxSigningV1beta1SignatureDescriptorDataSingle = ([xc_mode, atu8_signature]) => ({
    mode: xc_mode >= 0 ? ProtoToJsonEnumCosmosTxSigningV1beta1SignMode[xc_mode] : __UNDEFINED,
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxSigningV1beta1SignatureDescriptorDataMulti}
 */
export const condenseCosmosTxSigningV1beta1SignatureDescriptorDataMulti = (g_msg) => encodeCosmosTxSigningV1beta1SignatureDescriptorDataMulti(apply_opt(g_msg.bitarray, condenseCosmosCryptoMultisigV1beta1CompactBitArray), map(g_msg.signatures, condenseCosmosTxSigningV1beta1SignatureDescriptorData));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi` -
 */
export const expandCosmosTxSigningV1beta1SignatureDescriptorDataMulti = ([a_bitarray, a_signatures]) => ({
    bitarray: a_bitarray && expandCosmosCryptoMultisigV1beta1CompactBitArray(a_bitarray),
    signatures: a_signatures && map(a_signatures, expandCosmosTxSigningV1beta1SignatureDescriptorData),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxConfigV1Config}
 */
export const condenseCosmosTxConfigV1Config = (g_msg) => encodeCosmosTxConfigV1Config(g_msg.skip_ante_handler, g_msg.skip_post_handler);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.config.v1.Config` - the config object of the x/auth/tx package.
 */
export const expandCosmosTxConfigV1Config = ([b_skip_ante_handler, b_skip_post_handler]) => ({
    skip_ante_handler: !!b_skip_ante_handler,
    skip_post_handler: !!b_skip_post_handler,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1Tx}
 */
export const condenseCosmosTxV1beta1Tx = (g_msg) => encodeCosmosTxV1beta1Tx(apply_opt(g_msg.body, condenseCosmosTxV1beta1TxBody), apply_opt(g_msg.auth_info, condenseCosmosTxV1beta1AuthInfo), map(g_msg.signatures, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.Tx` - the standard type used for broadcasting transactions.
 */
export const expandCosmosTxV1beta1Tx = ([a_body, a_auth_info, a_signatures]) => ({
    body: a_body && expandCosmosTxV1beta1TxBody(a_body),
    auth_info: a_auth_info && expandCosmosTxV1beta1AuthInfo(a_auth_info),
    signatures: map(a_signatures, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxBody}
 */
export const condenseCosmosTxV1beta1TxBody = (g_msg) => encodeCosmosTxV1beta1TxBody(map(g_msg.messages, condenseJsonAny), g_msg.memo, g_msg.timeout_height, map(g_msg.extension_options, condenseJsonAny), map(g_msg.non_critical_extension_options, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxBody` - the body of a transaction that all signers sign over.
 */
export const expandCosmosTxV1beta1TxBody = (a_fields, [a_messages, s_memo, sg_timeout_height] = a_fields, { 1022: a_extension_options, 2046: a_non_critical_extension_options } = a_fields) => ({
    messages: a_messages && map(a_messages, expandJsonAny),
    memo: s_memo,
    timeout_height: sg_timeout_height,
    extension_options: a_extension_options && map(a_extension_options, expandJsonAny),
    non_critical_extension_options: a_non_critical_extension_options && map(a_non_critical_extension_options, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1AuthInfo}
 */
export const condenseCosmosTxV1beta1AuthInfo = (g_msg) => encodeCosmosTxV1beta1AuthInfo(map(g_msg.signer_infos, condenseCosmosTxV1beta1SignerInfo), apply_opt(g_msg.fee, condenseCosmosTxV1beta1Fee), apply_opt(g_msg.tip, condenseCosmosTxV1beta1Tip));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.AuthInfo` - describes the fee and signer modes that are used to sign a transaction.
 */
export const expandCosmosTxV1beta1AuthInfo = ([a_signer_infos, a_fee, a_tip]) => ({
    signer_infos: a_signer_infos && map(a_signer_infos, expandCosmosTxV1beta1SignerInfo),
    fee: a_fee && expandCosmosTxV1beta1Fee(a_fee),
    tip: a_tip && expandCosmosTxV1beta1Tip(a_tip),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1SignerInfo}
 */
export const condenseCosmosTxV1beta1SignerInfo = (g_msg) => encodeCosmosTxV1beta1SignerInfo(condenseJsonAny(g_msg.public_key), apply_opt(g_msg.mode_info, condenseCosmosTxV1beta1ModeInfo), g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.SignerInfo` - describes the public key and signing mode of a single top-level signer.
 */
export const expandCosmosTxV1beta1SignerInfo = ([a_public_key, a_mode_info, sg_sequence]) => ({
    public_key: a_public_key && expandJsonAny(a_public_key),
    mode_info: a_mode_info && expandCosmosTxV1beta1ModeInfo(a_mode_info),
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1ModeInfo}
 */
export const condenseCosmosTxV1beta1ModeInfo = (g_msg) => encodeCosmosTxV1beta1ModeInfo(apply_opt(g_msg.single, condenseCosmosTxV1beta1ModeInfoSingle), apply_opt(g_msg.multi, condenseCosmosTxV1beta1ModeInfoMulti));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.ModeInfo` - describes the signing mode of a single or nested multisig signer.
 */
export const expandCosmosTxV1beta1ModeInfo = ([a_single, a_multi]) => ({
    single: a_single && expandCosmosTxV1beta1ModeInfoSingle(a_single),
    multi: a_multi && expandCosmosTxV1beta1ModeInfoMulti(a_multi),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1ModeInfoSingle}
 */
export const condenseCosmosTxV1beta1ModeInfoSingle = (g_msg) => encodeCosmosTxV1beta1ModeInfoSingle(JsonToProtoEnumCosmosTxSigningV1beta1SignMode[g_msg.mode]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.ModeInfo.Single` -
 */
export const expandCosmosTxV1beta1ModeInfoSingle = ([xc_mode]) => ({
    mode: xc_mode >= 0 ? ProtoToJsonEnumCosmosTxSigningV1beta1SignMode[xc_mode] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1ModeInfoMulti}
 */
export const condenseCosmosTxV1beta1ModeInfoMulti = (g_msg) => encodeCosmosTxV1beta1ModeInfoMulti(apply_opt(g_msg.bitarray, condenseCosmosCryptoMultisigV1beta1CompactBitArray), map(g_msg.mode_infos, condenseCosmosTxV1beta1ModeInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.ModeInfo.Multi` -
 */
export const expandCosmosTxV1beta1ModeInfoMulti = ([a_bitarray, a_mode_infos]) => ({
    bitarray: a_bitarray && expandCosmosCryptoMultisigV1beta1CompactBitArray(a_bitarray),
    mode_infos: a_mode_infos && map(a_mode_infos, expandCosmosTxV1beta1ModeInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1Fee}
 */
export const condenseCosmosTxV1beta1Fee = (g_msg) => encodeCosmosTxV1beta1Fee(map(g_msg.amount, slimify_coin), g_msg.gas_limit, g_msg.payer, g_msg.granter);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.Fee` - includes the amount of coins paid in fees and the maximum gas to be used by the transaction. The ratio yields an effective "gasprice", which must be above some miminum to be accepted into the mempool.
 */
export const expandCosmosTxV1beta1Fee = ([a_amount, sg_gas_limit, sa_payer, sa_granter]) => ({
    amount: a_amount && map(a_amount, expand_coin),
    gas_limit: sg_gas_limit,
    payer: sa_payer,
    granter: sa_granter,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1Tip}
 */
export const condenseCosmosTxV1beta1Tip = (g_msg) => encodeCosmosTxV1beta1Tip(map(g_msg.amount, slimify_coin), g_msg.tipper);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.Tip` - the tip used for meta-transactions. Since: cosmos-sdk 0.46
 */
export const expandCosmosTxV1beta1Tip = ([a_amount, s_tipper]) => ({
    amount: a_amount && map(a_amount, expand_coin),
    tipper: s_tipper,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxRaw}
 */
export const condenseCosmosTxV1beta1TxRaw = (g_msg) => encodeCosmosTxV1beta1TxRaw(safe_base64_to_bytes(g_msg.body_bytes), safe_base64_to_bytes(g_msg.auth_info_bytes), map(g_msg.signatures, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxRaw` - a variant of Tx that pins the signer's exact binary representation of body and auth_info. This is used for signing, broadcasting and verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and the hash `sha256(serialize(tx: TxRaw))` becomes the "txhash", commonly used as the transaction ID.
 */
export const expandCosmosTxV1beta1TxRaw = ([atu8_body_bytes, atu8_auth_info_bytes, a_signatures]) => ({
    body_bytes: safe_bytes_to_base64(atu8_body_bytes),
    auth_info_bytes: safe_bytes_to_base64(atu8_auth_info_bytes),
    signatures: map(a_signatures, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1SignDoc}
 */
export const condenseCosmosTxV1beta1SignDoc = (g_msg) => encodeCosmosTxV1beta1SignDoc(safe_base64_to_bytes(g_msg.body_bytes), safe_base64_to_bytes(g_msg.auth_info_bytes), g_msg.chain_id, g_msg.account_number);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.SignDoc` - the type used for generating sign bytes for SIGN_MODE_DIRECT.
 */
export const expandCosmosTxV1beta1SignDoc = ([atu8_body_bytes, atu8_auth_info_bytes, si_chain, sg_account_number]) => ({
    body_bytes: safe_bytes_to_base64(atu8_body_bytes),
    auth_info_bytes: safe_bytes_to_base64(atu8_auth_info_bytes),
    chain_id: si_chain,
    account_number: sg_account_number,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1SignDocDirectAux}
 */
export const condenseCosmosTxV1beta1SignDocDirectAux = (g_msg) => encodeCosmosTxV1beta1SignDocDirectAux(safe_base64_to_bytes(g_msg.body_bytes), condenseJsonAny(g_msg.public_key), g_msg.chain_id, g_msg.account_number, g_msg.sequence, apply_opt(g_msg.tip, condenseCosmosTxV1beta1Tip));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.SignDocDirectAux` - the type used for generating sign bytes for SIGN_MODE_DIRECT_AUX. Since: cosmos-sdk 0.46
 */
export const expandCosmosTxV1beta1SignDocDirectAux = ([atu8_body_bytes, a_public_key, si_chain, sg_account_number, sg_sequence, a_tip]) => ({
    body_bytes: safe_bytes_to_base64(atu8_body_bytes),
    public_key: a_public_key && expandJsonAny(a_public_key),
    chain_id: si_chain,
    account_number: sg_account_number,
    sequence: sg_sequence,
    tip: a_tip && expandCosmosTxV1beta1Tip(a_tip),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1AuxSignerData}
 */
export const condenseCosmosTxV1beta1AuxSignerData = (g_msg) => encodeCosmosTxV1beta1AuxSignerData(g_msg.address, apply_opt(g_msg.sign_doc, condenseCosmosTxV1beta1SignDocDirectAux), JsonToProtoEnumCosmosTxSigningV1beta1SignMode[g_msg.mode], safe_base64_to_bytes(g_msg.sig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.AuxSignerData` - the intermediary format that an auxiliary signer (e.g. a tipper) builds and sends to the fee payer (who will build and broadcast the actual tx). AuxSignerData is not a valid tx in itself, and will be rejected by the node if sent directly as-is. Since: cosmos-sdk 0.46
 */
export const expandCosmosTxV1beta1AuxSignerData = ([sa_address, a_sign_doc, xc_mode, atu8_sig]) => ({
    address: sa_address,
    sign_doc: a_sign_doc && expandCosmosTxV1beta1SignDocDirectAux(a_sign_doc),
    mode: xc_mode >= 0 ? ProtoToJsonEnumCosmosTxSigningV1beta1SignMode[xc_mode] : __UNDEFINED,
    sig: safe_bytes_to_base64(atu8_sig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetTxsEventRequest}
 */
export const condenseCosmosTxV1beta1GetTxsEventRequest = (g_msg) => encodeCosmosTxV1beta1GetTxsEventRequest(g_msg.events, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), JsonToProtoEnumCosmosTxV1beta1OrderBy[g_msg.order_by], g_msg.page, g_msg.limit, g_msg.query);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetTxsEventRequest` - the request type for the Service.TxsByEvents RPC method.
 */
export const expandCosmosTxV1beta1GetTxsEventRequest = ([a_events, a_pagination, xc_order_by, sg_page, sg_limit, s_query]) => ({
    events: a_events,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    order_by: xc_order_by >= 0 ? ProtoToJsonEnumCosmosTxV1beta1OrderBy[xc_order_by] : __UNDEFINED,
    page: sg_page,
    limit: sg_limit,
    query: s_query,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetTxsEventResponse}
 */
export const condenseCosmosTxV1beta1GetTxsEventResponse = (g_msg) => encodeCosmosTxV1beta1GetTxsEventResponse(map(g_msg.txs, condenseCosmosTxV1beta1Tx), map(g_msg.tx_responses, condenseCosmosBaseAbciV1beta1TxResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), g_msg.total);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetTxsEventResponse` - the response type for the Service.TxsByEvents RPC method.
 */
export const expandCosmosTxV1beta1GetTxsEventResponse = ([a_txs, a_tx_responses, a_pagination, sg_total]) => ({
    txs: a_txs && map(a_txs, expandCosmosTxV1beta1Tx),
    tx_responses: a_tx_responses && map(a_tx_responses, expandCosmosBaseAbciV1beta1TxResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    total: sg_total,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1TxResponse}
 */
export const condenseCosmosBaseAbciV1beta1TxResponse = (g_msg) => encodeCosmosBaseAbciV1beta1TxResponse(g_msg.height, g_msg.txhash, g_msg.codespace, g_msg.code, g_msg.data, g_msg.raw_log, map(g_msg.logs, condenseCosmosBaseAbciV1beta1ABCIMessageLog), g_msg.info, g_msg.gas_wanted, g_msg.gas_used, condenseJsonAny(g_msg.tx), g_msg.timestamp, map(g_msg.events, condenseTendermintAbciEvent));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.TxResponse` - defines a structure containing relevant tx data and metadata. The tags are stringified and the log is JSON decoded.
 */
export const expandCosmosBaseAbciV1beta1TxResponse = ([sg_height, s_txhash, s_codespace, n_code, s_data, s_raw_log, a_logs, s_info, sg_gas_wanted, sg_gas_used, a_tx, s_timestamp, a_events]) => ({
    height: sg_height,
    txhash: s_txhash,
    codespace: s_codespace,
    code: n_code,
    data: s_data,
    raw_log: s_raw_log,
    logs: a_logs && map(a_logs, expandCosmosBaseAbciV1beta1ABCIMessageLog),
    info: s_info,
    gas_wanted: sg_gas_wanted,
    gas_used: sg_gas_used,
    tx: a_tx && expandJsonAny(a_tx),
    timestamp: s_timestamp,
    events: a_events && map(a_events, expandTendermintAbciEvent),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1ABCIMessageLog}
 */
export const condenseCosmosBaseAbciV1beta1ABCIMessageLog = (g_msg) => encodeCosmosBaseAbciV1beta1ABCIMessageLog(g_msg.msg_index, g_msg.log, map(g_msg.events, condenseCosmosBaseAbciV1beta1StringEvent));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.ABCIMessageLog` - defines a structure containing an indexed tx ABCI message log.
 */
export const expandCosmosBaseAbciV1beta1ABCIMessageLog = ([n_msg_index, s_log, a_events]) => ({
    msg_index: n_msg_index,
    log: s_log,
    events: a_events && map(a_events, expandCosmosBaseAbciV1beta1StringEvent),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1StringEvent}
 */
export const condenseCosmosBaseAbciV1beta1StringEvent = (g_msg) => encodeCosmosBaseAbciV1beta1StringEvent(g_msg.type, map(g_msg.attributes, condenseCosmosBaseAbciV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.StringEvent` - defines en Event object wrapper where all the attributes contain key/value pairs that are strings instead of raw bytes.
 */
export const expandCosmosBaseAbciV1beta1StringEvent = ([s_type, a_attributes]) => ({
    type: s_type,
    attributes: a_attributes && map(a_attributes, expandCosmosBaseAbciV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1Attribute}
 */
export const condenseCosmosBaseAbciV1beta1Attribute = (g_msg) => encodeCosmosBaseAbciV1beta1Attribute(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.Attribute` - defines an attribute wrapper where the key and value are strings instead of raw bytes.
 */
export const expandCosmosBaseAbciV1beta1Attribute = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1BroadcastTxRequest}
 */
export const condenseCosmosTxV1beta1BroadcastTxRequest = (g_msg) => encodeCosmosTxV1beta1BroadcastTxRequest(safe_base64_to_bytes(g_msg.tx_bytes), JsonToProtoEnumCosmosTxV1beta1BroadcastMode[g_msg.mode]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.BroadcastTxRequest` - the request type for the Service.BroadcastTxRequest RPC method.
 */
export const expandCosmosTxV1beta1BroadcastTxRequest = ([atu8_tx_bytes, xc_mode]) => ({
    tx_bytes: safe_bytes_to_base64(atu8_tx_bytes),
    mode: xc_mode >= 0 ? ProtoToJsonEnumCosmosTxV1beta1BroadcastMode[xc_mode] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1BroadcastTxResponse}
 */
export const condenseCosmosTxV1beta1BroadcastTxResponse = (g_msg) => encodeCosmosTxV1beta1BroadcastTxResponse(apply_opt(g_msg.tx_response, condenseCosmosBaseAbciV1beta1TxResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.BroadcastTxResponse` - the response type for the Service.BroadcastTx method.
 */
export const expandCosmosTxV1beta1BroadcastTxResponse = ([a_tx_response]) => ({
    tx_response: a_tx_response && expandCosmosBaseAbciV1beta1TxResponse(a_tx_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1SimulateRequest}
 */
export const condenseCosmosTxV1beta1SimulateRequest = (g_msg) => encodeCosmosTxV1beta1SimulateRequest(apply_opt(g_msg.tx, condenseCosmosTxV1beta1Tx), safe_base64_to_bytes(g_msg.tx_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.SimulateRequest` - the request type for the Service.Simulate RPC method.
 */
export const expandCosmosTxV1beta1SimulateRequest = ([a_tx, atu8_tx_bytes]) => ({
    tx: a_tx && expandCosmosTxV1beta1Tx(a_tx),
    tx_bytes: safe_bytes_to_base64(atu8_tx_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1SimulateResponse}
 */
export const condenseCosmosTxV1beta1SimulateResponse = (g_msg) => encodeCosmosTxV1beta1SimulateResponse(apply_opt(g_msg.gas_info, condenseCosmosBaseAbciV1beta1GasInfo), apply_opt(g_msg.result, condenseCosmosBaseAbciV1beta1Result));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.SimulateResponse` - the response type for the Service.SimulateRPC method.
 */
export const expandCosmosTxV1beta1SimulateResponse = ([a_gas_info, a_result]) => ({
    gas_info: a_gas_info && expandCosmosBaseAbciV1beta1GasInfo(a_gas_info),
    result: a_result && expandCosmosBaseAbciV1beta1Result(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1GasInfo}
 */
export const condenseCosmosBaseAbciV1beta1GasInfo = (g_msg) => encodeCosmosBaseAbciV1beta1GasInfo(g_msg.gas_wanted, g_msg.gas_used);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.GasInfo` - defines tx execution gas context.
 */
export const expandCosmosBaseAbciV1beta1GasInfo = ([sg_gas_wanted, sg_gas_used]) => ({
    gas_wanted: sg_gas_wanted,
    gas_used: sg_gas_used,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1Result}
 */
export const condenseCosmosBaseAbciV1beta1Result = (g_msg) => encodeCosmosBaseAbciV1beta1Result(safe_base64_to_bytes(g_msg.data), g_msg.log, map(g_msg.events, condenseTendermintAbciEvent), map(g_msg.msg_responses, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.Result` - the union of ResponseFormat and ResponseCheckTx.
 */
export const expandCosmosBaseAbciV1beta1Result = ([atu8_data, s_log, a_events, a_msg_responses]) => ({
    data: safe_bytes_to_base64(atu8_data),
    log: s_log,
    events: a_events && map(a_events, expandTendermintAbciEvent),
    msg_responses: a_msg_responses && map(a_msg_responses, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetTxRequest}
 */
export const condenseCosmosTxV1beta1GetTxRequest = (g_msg) => encodeCosmosTxV1beta1GetTxRequest(g_msg.hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetTxRequest` - the request type for the Service.GetTx RPC method.
 */
export const expandCosmosTxV1beta1GetTxRequest = ([s_hash]) => ({
    hash: s_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetTxResponse}
 */
export const condenseCosmosTxV1beta1GetTxResponse = (g_msg) => encodeCosmosTxV1beta1GetTxResponse(apply_opt(g_msg.tx, condenseCosmosTxV1beta1Tx), apply_opt(g_msg.tx_response, condenseCosmosBaseAbciV1beta1TxResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetTxResponse` - the response type for the Service.GetTx method.
 */
export const expandCosmosTxV1beta1GetTxResponse = ([a_tx, a_tx_response]) => ({
    tx: a_tx && expandCosmosTxV1beta1Tx(a_tx),
    tx_response: a_tx_response && expandCosmosBaseAbciV1beta1TxResponse(a_tx_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetBlockWithTxsRequest}
 */
export const condenseCosmosTxV1beta1GetBlockWithTxsRequest = (g_msg) => encodeCosmosTxV1beta1GetBlockWithTxsRequest(g_msg.height, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetBlockWithTxsRequest` - the request type for the Service.GetBlockWithTxs RPC method. Since: cosmos-sdk 0.45.2
 */
export const expandCosmosTxV1beta1GetBlockWithTxsRequest = ([sg_height, a_pagination]) => ({
    height: sg_height,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1GetBlockWithTxsResponse}
 */
export const condenseCosmosTxV1beta1GetBlockWithTxsResponse = (g_msg) => encodeCosmosTxV1beta1GetBlockWithTxsResponse(map(g_msg.txs, condenseCosmosTxV1beta1Tx), apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), apply_opt(g_msg.block, condenseTendermintTypesBlock), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.GetBlockWithTxsResponse` - the response type for the Service.GetBlockWithTxs method. Since: cosmos-sdk 0.45.2
 */
export const expandCosmosTxV1beta1GetBlockWithTxsResponse = ([a_txs, a_block_id, a_block, a_pagination]) => ({
    txs: a_txs && map(a_txs, expandCosmosTxV1beta1Tx),
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    block: a_block && expandTendermintTypesBlock(a_block),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxDecodeRequest}
 */
export const condenseCosmosTxV1beta1TxDecodeRequest = (g_msg) => encodeCosmosTxV1beta1TxDecodeRequest(safe_base64_to_bytes(g_msg.tx_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxDecodeRequest` - the request type for the Service.TxDecode RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxDecodeRequest = ([atu8_tx_bytes]) => ({
    tx_bytes: safe_bytes_to_base64(atu8_tx_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxDecodeResponse}
 */
export const condenseCosmosTxV1beta1TxDecodeResponse = (g_msg) => encodeCosmosTxV1beta1TxDecodeResponse(apply_opt(g_msg.tx, condenseCosmosTxV1beta1Tx));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxDecodeResponse` - the response type for the Service.TxDecode method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxDecodeResponse = ([a_tx]) => ({
    tx: a_tx && expandCosmosTxV1beta1Tx(a_tx),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxEncodeRequest}
 */
export const condenseCosmosTxV1beta1TxEncodeRequest = (g_msg) => encodeCosmosTxV1beta1TxEncodeRequest(apply_opt(g_msg.tx, condenseCosmosTxV1beta1Tx));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxEncodeRequest` - the request type for the Service.TxEncode RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxEncodeRequest = ([a_tx]) => ({
    tx: a_tx && expandCosmosTxV1beta1Tx(a_tx),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxEncodeResponse}
 */
export const condenseCosmosTxV1beta1TxEncodeResponse = (g_msg) => encodeCosmosTxV1beta1TxEncodeResponse(safe_base64_to_bytes(g_msg.tx_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxEncodeResponse` - the response type for the Service.TxEncode method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxEncodeResponse = ([atu8_tx_bytes]) => ({
    tx_bytes: safe_bytes_to_base64(atu8_tx_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxEncodeAminoRequest}
 */
export const condenseCosmosTxV1beta1TxEncodeAminoRequest = (g_msg) => encodeCosmosTxV1beta1TxEncodeAminoRequest(g_msg.amino_json);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxEncodeAminoRequest` - the request type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxEncodeAminoRequest = ([s_amino_json]) => ({
    amino_json: s_amino_json,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxEncodeAminoResponse}
 */
export const condenseCosmosTxV1beta1TxEncodeAminoResponse = (g_msg) => encodeCosmosTxV1beta1TxEncodeAminoResponse(safe_base64_to_bytes(g_msg.amino_binary));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxEncodeAminoResponse` - the response type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxEncodeAminoResponse = ([atu8_amino_binary]) => ({
    amino_binary: safe_bytes_to_base64(atu8_amino_binary),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxDecodeAminoRequest}
 */
export const condenseCosmosTxV1beta1TxDecodeAminoRequest = (g_msg) => encodeCosmosTxV1beta1TxDecodeAminoRequest(safe_base64_to_bytes(g_msg.amino_binary));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxDecodeAminoRequest` - the request type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxDecodeAminoRequest = ([atu8_amino_binary]) => ({
    amino_binary: safe_bytes_to_base64(atu8_amino_binary),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosTxV1beta1TxDecodeAminoResponse}
 */
export const condenseCosmosTxV1beta1TxDecodeAminoResponse = (g_msg) => encodeCosmosTxV1beta1TxDecodeAminoResponse(g_msg.amino_json);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.tx.v1beta1.TxDecodeAminoResponse` - the response type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export const expandCosmosTxV1beta1TxDecodeAminoResponse = ([s_amino_json]) => ({
    amino_json: s_amino_json,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingModuleV1Module}
 */
export const condenseCosmosVestingModuleV1Module = (g_msg) => encodeCosmosVestingModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.module.v1.Module` - the config object of the vesting module.
 */
export const expandCosmosVestingModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreateVestingAccount}
 */
export const condenseCosmosVestingV1beta1MsgCreateVestingAccount = (g_msg) => encodeCosmosVestingV1beta1MsgCreateVestingAccount(g_msg.from_address, g_msg.to_address, map(g_msg.amount, slimify_coin), g_msg.end_time, g_msg.delayed);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreateVestingAccount` - defines a message that enables creating a vesting account.
 */
export const expandCosmosVestingV1beta1MsgCreateVestingAccount = ([sa_from, sa_to, a_amount, sg_end_time, b_delayed]) => ({
    from_address: sa_from,
    to_address: sa_to,
    amount: a_amount && map(a_amount, expand_coin),
    end_time: sg_end_time,
    delayed: !!b_delayed,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreateVestingAccountResponse}
 */
export const condenseCosmosVestingV1beta1MsgCreateVestingAccountResponse = (g_msg) => encodeCosmosVestingV1beta1MsgCreateVestingAccountResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse` - defines the Msg/CreateVestingAccount response type.
 */
export const expandCosmosVestingV1beta1MsgCreateVestingAccountResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreatePermanentLockedAccount}
 */
export const condenseCosmosVestingV1beta1MsgCreatePermanentLockedAccount = (g_msg) => encodeCosmosVestingV1beta1MsgCreatePermanentLockedAccount(g_msg.from_address, g_msg.to_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount` - defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46
 */
export const expandCosmosVestingV1beta1MsgCreatePermanentLockedAccount = ([sa_from, sa_to, a_amount]) => ({
    from_address: sa_from,
    to_address: sa_to,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse}
 */
export const condenseCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse = (g_msg) => encodeCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse` - defines the Msg/CreatePermanentLockedAccount response type. Since: cosmos-sdk 0.46
 */
export const expandCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreatePeriodicVestingAccount}
 */
export const condenseCosmosVestingV1beta1MsgCreatePeriodicVestingAccount = (g_msg) => encodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccount(g_msg.from_address, g_msg.to_address, g_msg.start_time, map(g_msg.vesting_periods, condenseCosmosVestingV1beta1Period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount` - MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46
 */
export const expandCosmosVestingV1beta1MsgCreatePeriodicVestingAccount = ([sa_from, sa_to, sg_start_time, a_vesting_periods]) => ({
    from_address: sa_from,
    to_address: sa_to,
    start_time: sg_start_time,
    vesting_periods: a_vesting_periods && map(a_vesting_periods, expandCosmosVestingV1beta1Period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1Period}
 */
export const condenseCosmosVestingV1beta1Period = (g_msg) => encodeCosmosVestingV1beta1Period(g_msg.length, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.Period` - defines a length of time and amount of coins that will vest.
 */
export const expandCosmosVestingV1beta1Period = ([sg_length, a_amount]) => ({
    length: sg_length,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse}
 */
export const condenseCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse = (g_msg) => encodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse` - MsgCreateVestingAccountResponse defines the Msg/CreatePeriodicVestingAccount response type. Since: cosmos-sdk 0.46
 */
export const expandCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1BaseVestingAccount}
 */
export const condenseCosmosVestingV1beta1BaseVestingAccount = (g_msg) => encodeCosmosVestingV1beta1BaseVestingAccount(apply_opt(g_msg.base_account, condenseCosmosAuthV1beta1BaseAccount), map(g_msg.original_vesting, slimify_coin), map(g_msg.delegated_free, slimify_coin), map(g_msg.delegated_vesting, slimify_coin), g_msg.end_time);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.BaseVestingAccount` - implements the VestingAccount interface. It contains all the necessary fields needed for any vesting account implementation.
 */
export const expandCosmosVestingV1beta1BaseVestingAccount = ([a_base_account, a_original_vesting, a_delegated_free, a_delegated_vesting, sg_end_time]) => ({
    base_account: a_base_account && expandCosmosAuthV1beta1BaseAccount(a_base_account),
    original_vesting: a_original_vesting && map(a_original_vesting, expand_coin),
    delegated_free: a_delegated_free && map(a_delegated_free, expand_coin),
    delegated_vesting: a_delegated_vesting && map(a_delegated_vesting, expand_coin),
    end_time: sg_end_time,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1ContinuousVestingAccount}
 */
export const condenseCosmosVestingV1beta1ContinuousVestingAccount = (g_msg) => encodeCosmosVestingV1beta1ContinuousVestingAccount(apply_opt(g_msg.base_vesting_account, condenseCosmosVestingV1beta1BaseVestingAccount), g_msg.start_time);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.ContinuousVestingAccount` - implements the VestingAccount interface. It continuously vests by unlocking coins linearly with respect to time.
 */
export const expandCosmosVestingV1beta1ContinuousVestingAccount = ([a_base_vesting_account, sg_start_time]) => ({
    base_vesting_account: a_base_vesting_account && expandCosmosVestingV1beta1BaseVestingAccount(a_base_vesting_account),
    start_time: sg_start_time,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1DelayedVestingAccount}
 */
export const condenseCosmosVestingV1beta1DelayedVestingAccount = (g_msg) => encodeCosmosVestingV1beta1DelayedVestingAccount(apply_opt(g_msg.base_vesting_account, condenseCosmosVestingV1beta1BaseVestingAccount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.DelayedVestingAccount` - implements the VestingAccount interface. It vests all coins after a specific time, but non prior. In other words, it keeps them locked until a specified time.
 */
export const expandCosmosVestingV1beta1DelayedVestingAccount = ([a_base_vesting_account]) => ({
    base_vesting_account: a_base_vesting_account && expandCosmosVestingV1beta1BaseVestingAccount(a_base_vesting_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1PeriodicVestingAccount}
 */
export const condenseCosmosVestingV1beta1PeriodicVestingAccount = (g_msg) => encodeCosmosVestingV1beta1PeriodicVestingAccount(apply_opt(g_msg.base_vesting_account, condenseCosmosVestingV1beta1BaseVestingAccount), g_msg.start_time, map(g_msg.vesting_periods, condenseCosmosVestingV1beta1Period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.PeriodicVestingAccount` - implements the VestingAccount interface. It periodically vests by unlocking coins during each specified period.
 */
export const expandCosmosVestingV1beta1PeriodicVestingAccount = ([a_base_vesting_account, sg_start_time, a_vesting_periods]) => ({
    base_vesting_account: a_base_vesting_account && expandCosmosVestingV1beta1BaseVestingAccount(a_base_vesting_account),
    start_time: sg_start_time,
    vesting_periods: a_vesting_periods && map(a_vesting_periods, expandCosmosVestingV1beta1Period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosVestingV1beta1PermanentLockedAccount}
 */
export const condenseCosmosVestingV1beta1PermanentLockedAccount = (g_msg) => encodeCosmosVestingV1beta1PermanentLockedAccount(apply_opt(g_msg.base_vesting_account, condenseCosmosVestingV1beta1BaseVestingAccount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.vesting.v1beta1.PermanentLockedAccount` - implements the VestingAccount interface. It does not ever release coins, locking them indefinitely. Coins in this account can still be used for delegating and for governance votes even while locked. Since: cosmos-sdk 0.43
 */
export const expandCosmosVestingV1beta1PermanentLockedAccount = ([a_base_vesting_account]) => ({
    base_vesting_account: a_base_vesting_account && expandCosmosVestingV1beta1BaseVestingAccount(a_base_vesting_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1MsgInit}
 */
export const condenseCosmosAccountsV1MsgInit = (g_msg) => encodeCosmosAccountsV1MsgInit(g_msg.sender, g_msg.account_type, safe_base64_to_bytes(g_msg.message));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.MsgInit` - defines the Create request type for the Msg/Create RPC method.
 */
export const expandCosmosAccountsV1MsgInit = ([sa_sender, s_account_type, atu8_message]) => ({
    sender: sa_sender,
    account_type: s_account_type,
    message: safe_bytes_to_base64(atu8_message),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1MsgInitResponse}
 */
export const condenseCosmosAccountsV1MsgInitResponse = (g_msg) => encodeCosmosAccountsV1MsgInitResponse(g_msg.account_address, safe_base64_to_bytes(g_msg.response));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.MsgInitResponse` - defines the Create response type for the Msg/Create RPC method.
 */
export const expandCosmosAccountsV1MsgInitResponse = ([sa_account, atu8_response]) => ({
    account_address: sa_account,
    response: safe_bytes_to_base64(atu8_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1MsgExecute}
 */
export const condenseCosmosAccountsV1MsgExecute = (g_msg) => encodeCosmosAccountsV1MsgExecute(g_msg.sender, g_msg.target, safe_base64_to_bytes(g_msg.message));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.MsgExecute` - defines the Execute request type for the Msg/Execute RPC method.
 */
export const expandCosmosAccountsV1MsgExecute = ([sa_sender, s_target, atu8_message]) => ({
    sender: sa_sender,
    target: s_target,
    message: safe_bytes_to_base64(atu8_message),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1MsgExecuteResponse}
 */
export const condenseCosmosAccountsV1MsgExecuteResponse = (g_msg) => encodeCosmosAccountsV1MsgExecuteResponse(safe_base64_to_bytes(g_msg.response));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.MsgExecuteResponse` - defines the Execute response type for the Msg/Execute RPC method.
 */
export const expandCosmosAccountsV1MsgExecuteResponse = ([atu8_response]) => ({
    response: safe_bytes_to_base64(atu8_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1AccountQueryRequest}
 */
export const condenseCosmosAccountsV1AccountQueryRequest = (g_msg) => encodeCosmosAccountsV1AccountQueryRequest(g_msg.target, safe_base64_to_bytes(g_msg.request));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.AccountQueryRequest` - the request type for the Query/AccountQuery RPC
 */
export const expandCosmosAccountsV1AccountQueryRequest = ([s_target, atu8_request]) => ({
    target: s_target,
    request: safe_bytes_to_base64(atu8_request),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1AccountQueryResponse}
 */
export const condenseCosmosAccountsV1AccountQueryResponse = (g_msg) => encodeCosmosAccountsV1AccountQueryResponse(safe_base64_to_bytes(g_msg.response));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.AccountQueryResponse` - the response type for the Query/AccountQuery RPC method.
 */
export const expandCosmosAccountsV1AccountQueryResponse = ([atu8_response]) => ({
    response: safe_bytes_to_base64(atu8_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1GenesisState}
 */
export const condenseCosmosAccountsV1GenesisState = (g_msg) => encodeCosmosAccountsV1GenesisState(g_msg.account_number, map(g_msg.accounts, condenseCosmosAccountsV1GenesisAccount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.GenesisState` - defines the accounts' module's genesis state.
 */
export const expandCosmosAccountsV1GenesisState = ([sg_account_number, a_accounts]) => ({
    account_number: sg_account_number,
    accounts: a_accounts && map(a_accounts, expandCosmosAccountsV1GenesisAccount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1GenesisAccount}
 */
export const condenseCosmosAccountsV1GenesisAccount = (g_msg) => encodeCosmosAccountsV1GenesisAccount(g_msg.address, g_msg.account_type, map(g_msg.state, condenseCosmosAccountsV1KVPair));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.GenesisAccount` - defines an account to be initialized in the genesis state.
 */
export const expandCosmosAccountsV1GenesisAccount = ([sa_address, s_account_type, a_state]) => ({
    address: sa_address,
    account_type: s_account_type,
    state: a_state && map(a_state, expandCosmosAccountsV1KVPair),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsV1KVPair}
 */
export const condenseCosmosAccountsV1KVPair = (g_msg) => encodeCosmosAccountsV1KVPair(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.v1.KVPair` - defines a key value pair.
 */
export const expandCosmosAccountsV1KVPair = ([atu8_key, atu8_value]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAccountsModuleV1Module}
 */
export const condenseCosmosAccountsModuleV1Module = (g_msg) => encodeCosmosAccountsModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.accounts.module.v1.Module` - the config object of the accounts module.
 */
export const expandCosmosAccountsModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1MsgFundCommunityPool}
 */
export const condenseCosmosProtocolpoolV1MsgFundCommunityPool = (g_msg) => encodeCosmosProtocolpoolV1MsgFundCommunityPool(map(g_msg.amount, slimify_coin), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.MsgFundCommunityPool` - allows an account to directly fund the community pool.
 */
export const expandCosmosProtocolpoolV1MsgFundCommunityPool = ([a_amount, sa_depositor]) => ({
    amount: a_amount && map(a_amount, expand_coin),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1MsgFundCommunityPoolResponse}
 */
export const condenseCosmosProtocolpoolV1MsgFundCommunityPoolResponse = (g_msg) => encodeCosmosProtocolpoolV1MsgFundCommunityPoolResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.MsgFundCommunityPoolResponse` - defines the Msg/FundCommunityPool response type.
 */
export const expandCosmosProtocolpoolV1MsgFundCommunityPoolResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1MsgCommunityPoolSpend}
 */
export const condenseCosmosProtocolpoolV1MsgCommunityPoolSpend = (g_msg) => encodeCosmosProtocolpoolV1MsgCommunityPoolSpend(g_msg.authority, g_msg.recipient, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.MsgCommunityPoolSpend` - defines a message for sending tokens from the community pool to another account. This message is typically executed via a governance proposal with the governance module being the executing authority. Since: cosmos-sdk 0.50
 */
export const expandCosmosProtocolpoolV1MsgCommunityPoolSpend = ([s_authority, sa_recipient, a_amount]) => ({
    authority: s_authority,
    recipient: sa_recipient,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1MsgCommunityPoolSpendResponse}
 */
export const condenseCosmosProtocolpoolV1MsgCommunityPoolSpendResponse = (g_msg) => encodeCosmosProtocolpoolV1MsgCommunityPoolSpendResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse` - defines the response to executing a MsgCommunityPoolSpend message. Since: cosmos-sdk 0.50
 */
export const expandCosmosProtocolpoolV1MsgCommunityPoolSpendResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1QueryCommunityPoolRequest}
 */
export const condenseCosmosProtocolpoolV1QueryCommunityPoolRequest = (g_msg) => encodeCosmosProtocolpoolV1QueryCommunityPoolRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.QueryCommunityPoolRequest` - the request type for the Query/CommunityPool RPC method.
 */
export const expandCosmosProtocolpoolV1QueryCommunityPoolRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolV1QueryCommunityPoolResponse}
 */
export const condenseCosmosProtocolpoolV1QueryCommunityPoolResponse = (g_msg) => encodeCosmosProtocolpoolV1QueryCommunityPoolResponse(map(g_msg.pool, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.v1.QueryCommunityPoolResponse` - the response type for the Query/CommunityPool RPC method.
 */
export const expandCosmosProtocolpoolV1QueryCommunityPoolResponse = ([a_pool]) => ({
    pool: a_pool && map(a_pool, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosProtocolpoolModuleV1Module}
 */
export const condenseCosmosProtocolpoolModuleV1Module = (g_msg) => encodeCosmosProtocolpoolModuleV1Module(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.protocolpool.module.v1.Module` - the config object of the consensus module.
 */
export const expandCosmosProtocolpoolModuleV1Module = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingModuleV1Module}
 */
export const condenseCosmosStakingModuleV1Module = (g_msg) => encodeCosmosStakingModuleV1Module(g_msg.hooks_order, g_msg.authority, g_msg.bech32_prefix_validator, g_msg.bech32_prefix_consensus);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.module.v1.Module` - the config object of the staking module.
 */
export const expandCosmosStakingModuleV1Module = ([a_hooks_orders, s_authority, s_bech32_prefix_validator, s_bech32_prefix_consensus]) => ({
    hooks_order: a_hooks_orders,
    authority: s_authority,
    bech32_prefix_validator: s_bech32_prefix_validator,
    bech32_prefix_consensus: s_bech32_prefix_consensus,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgCreateValidator}
 */
export const condenseCosmosStakingV1beta1MsgCreateValidator = (g_msg) => encodeCosmosStakingV1beta1MsgCreateValidator(apply_opt(g_msg.description, condenseCosmosStakingV1beta1Description), apply_opt(g_msg.commission, condenseCosmosStakingV1beta1CommissionRates), g_msg.min_self_delegation, g_msg.delegator_address, g_msg.validator_address, condenseJsonAny(g_msg.pubkey), slimify_coin(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgCreateValidator` - defines a SDK message for creating a new validator.
 */
export const expandCosmosStakingV1beta1MsgCreateValidator = ([a_description, a_commission, s_min_self_delegation, sa_delegator, sa_validator, a_pubkey, a_value]) => ({
    description: a_description && expandCosmosStakingV1beta1Description(a_description),
    commission: a_commission && expandCosmosStakingV1beta1CommissionRates(a_commission),
    min_self_delegation: s_min_self_delegation,
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    pubkey: a_pubkey && expandJsonAny(a_pubkey),
    value: a_value && expand_coin(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Description}
 */
export const condenseCosmosStakingV1beta1Description = (g_msg) => encodeCosmosStakingV1beta1Description(g_msg.moniker, g_msg.identity, g_msg.website, g_msg.security_contact, g_msg.details);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Description` - defines a validator description.
 */
export const expandCosmosStakingV1beta1Description = ([s_moniker, s_identity, s_website, s_security_contact, s_details]) => ({
    moniker: s_moniker,
    identity: s_identity,
    website: s_website,
    security_contact: s_security_contact,
    details: s_details,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1CommissionRates}
 */
export const condenseCosmosStakingV1beta1CommissionRates = (g_msg) => encodeCosmosStakingV1beta1CommissionRates(g_msg.rate, g_msg.max_rate, g_msg.max_change_rate);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.CommissionRates` - defines the initial commission rates to be used for creating a validator.
 */
export const expandCosmosStakingV1beta1CommissionRates = ([s_rate, s_max_rate, s_max_change_rate]) => ({
    rate: s_rate,
    max_rate: s_max_rate,
    max_change_rate: s_max_change_rate,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgCreateValidatorResponse}
 */
export const condenseCosmosStakingV1beta1MsgCreateValidatorResponse = (g_msg) => encodeCosmosStakingV1beta1MsgCreateValidatorResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgCreateValidatorResponse` - defines the Msg/CreateValidator response type.
 */
export const expandCosmosStakingV1beta1MsgCreateValidatorResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgEditValidator}
 */
export const condenseCosmosStakingV1beta1MsgEditValidator = (g_msg) => encodeCosmosStakingV1beta1MsgEditValidator(apply_opt(g_msg.description, condenseCosmosStakingV1beta1Description), g_msg.validator_address, g_msg.commission_rate, g_msg.min_self_delegation);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgEditValidator` - defines a SDK message for editing an existing validator.
 */
export const expandCosmosStakingV1beta1MsgEditValidator = ([a_description, sa_validator, s_commission_rate, s_min_self_delegation]) => ({
    description: a_description && expandCosmosStakingV1beta1Description(a_description),
    validator_address: sa_validator,
    commission_rate: s_commission_rate,
    min_self_delegation: s_min_self_delegation,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgEditValidatorResponse}
 */
export const condenseCosmosStakingV1beta1MsgEditValidatorResponse = (g_msg) => encodeCosmosStakingV1beta1MsgEditValidatorResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgEditValidatorResponse` - defines the Msg/EditValidator response type.
 */
export const expandCosmosStakingV1beta1MsgEditValidatorResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgDelegate}
 */
export const condenseCosmosStakingV1beta1MsgDelegate = (g_msg) => encodeCosmosStakingV1beta1MsgDelegate(g_msg.delegator_address, g_msg.validator_address, slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgDelegate` - defines a SDK message for performing a delegation of coins from a delegator to a validator.
 */
export const expandCosmosStakingV1beta1MsgDelegate = ([sa_delegator, sa_validator, a_amount]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgDelegateResponse}
 */
export const condenseCosmosStakingV1beta1MsgDelegateResponse = (g_msg) => encodeCosmosStakingV1beta1MsgDelegateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgDelegateResponse` - defines the Msg/Delegate response type.
 */
export const expandCosmosStakingV1beta1MsgDelegateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgBeginRedelegate}
 */
export const condenseCosmosStakingV1beta1MsgBeginRedelegate = (g_msg) => encodeCosmosStakingV1beta1MsgBeginRedelegate(g_msg.delegator_address, g_msg.validator_src_address, g_msg.validator_dst_address, slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgBeginRedelegate` - defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator.
 */
export const expandCosmosStakingV1beta1MsgBeginRedelegate = ([sa_delegator, sa_validator_src, sa_validator_dst, a_amount]) => ({
    delegator_address: sa_delegator,
    validator_src_address: sa_validator_src,
    validator_dst_address: sa_validator_dst,
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgBeginRedelegateResponse}
 */
export const condenseCosmosStakingV1beta1MsgBeginRedelegateResponse = (g_msg) => encodeCosmosStakingV1beta1MsgBeginRedelegateResponse(parse_timestamp(g_msg.completion_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgBeginRedelegateResponse` - defines the Msg/BeginRedelegate response type.
 */
export const expandCosmosStakingV1beta1MsgBeginRedelegateResponse = ([a_completion_time]) => ({
    completion_time: expand_timestamp(a_completion_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgUndelegate}
 */
export const condenseCosmosStakingV1beta1MsgUndelegate = (g_msg) => encodeCosmosStakingV1beta1MsgUndelegate(g_msg.delegator_address, g_msg.validator_address, slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgUndelegate` - defines a SDK message for performing an undelegation from a delegate and a validator.
 */
export const expandCosmosStakingV1beta1MsgUndelegate = ([sa_delegator, sa_validator, a_amount]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgUndelegateResponse}
 */
export const condenseCosmosStakingV1beta1MsgUndelegateResponse = (g_msg) => encodeCosmosStakingV1beta1MsgUndelegateResponse(parse_timestamp(g_msg.completion_time), slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgUndelegateResponse` - defines the Msg/Undelegate response type.
 */
export const expandCosmosStakingV1beta1MsgUndelegateResponse = ([a_completion_time, a_amount]) => ({
    completion_time: expand_timestamp(a_completion_time),
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgCancelUnbondingDelegation}
 */
export const condenseCosmosStakingV1beta1MsgCancelUnbondingDelegation = (g_msg) => encodeCosmosStakingV1beta1MsgCancelUnbondingDelegation(g_msg.delegator_address, g_msg.validator_address, slimify_coin(g_msg.amount), g_msg.creation_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgCancelUnbondingDelegation` - defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46
 */
export const expandCosmosStakingV1beta1MsgCancelUnbondingDelegation = ([sa_delegator, sa_validator, a_amount, sg_creation_height]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    amount: a_amount && expand_coin(a_amount),
    creation_height: sg_creation_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse}
 */
export const condenseCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse = (g_msg) => encodeCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse` - Since: cosmos-sdk 0.46
 */
export const expandCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgUpdateParams}
 */
export const condenseCosmosStakingV1beta1MsgUpdateParams = (g_msg) => encodeCosmosStakingV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosStakingV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosStakingV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosStakingV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Params}
 */
export const condenseCosmosStakingV1beta1Params = (g_msg) => encodeCosmosStakingV1beta1Params(parse_duration(g_msg.unbonding_time), g_msg.max_validators, g_msg.max_entries, g_msg.historical_entries, g_msg.bond_denom, g_msg.min_commission_rate);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Params` - defines the parameters for the x/staking module.
 */
export const expandCosmosStakingV1beta1Params = ([a_unbonding_time, n_max_validators, n_max_entries, n_historical_entries, s_bond_denom, s_min_commission_rate]) => ({
    unbonding_time: expand_duration(a_unbonding_time),
    max_validators: n_max_validators,
    max_entries: n_max_entries,
    historical_entries: n_historical_entries,
    bond_denom: s_bond_denom,
    min_commission_rate: s_min_commission_rate,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosStakingV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosStakingV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosStakingV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorsRequest}
 */
export const condenseCosmosStakingV1beta1QueryValidatorsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorsRequest(g_msg.status, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorsRequest` - request type for Query/Validators RPC method.
 */
export const expandCosmosStakingV1beta1QueryValidatorsRequest = ([s_status, a_pagination]) => ({
    status: s_status,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorsResponse}
 */
export const condenseCosmosStakingV1beta1QueryValidatorsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorsResponse(map(g_msg.validators, condenseCosmosStakingV1beta1Validator), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorsResponse` - response type for the Query/Validators RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorsResponse = ([a_validators, a_pagination]) => ({
    validators: a_validators && map(a_validators, expandCosmosStakingV1beta1Validator),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Validator}
 */
export const condenseCosmosStakingV1beta1Validator = (g_msg) => encodeCosmosStakingV1beta1Validator(g_msg.operator_address, condenseJsonAny(g_msg.consensus_pubkey), g_msg.jailed, JsonToProtoEnumCosmosStakingV1beta1BondStatus[g_msg.status], g_msg.tokens, g_msg.delegator_shares, apply_opt(g_msg.description, condenseCosmosStakingV1beta1Description), g_msg.unbonding_height, parse_timestamp(g_msg.unbonding_time), apply_opt(g_msg.commission, condenseCosmosStakingV1beta1Commission), g_msg.min_self_delegation, g_msg.unbonding_on_hold_ref_count, g_msg.unbonding_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Validator` - defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate.
 */
export const expandCosmosStakingV1beta1Validator = ([sa_operator, a_consensus_pubkey, b_jailed, xc_status, s_tokens, s_delegator_shares, a_description, sg_unbonding_height, a_unbonding_time, a_commission, s_min_self_delegation, sg_unbonding_on_hold_ref_count, a_unbonding_ids]) => ({
    operator_address: sa_operator,
    consensus_pubkey: a_consensus_pubkey && expandJsonAny(a_consensus_pubkey),
    jailed: !!b_jailed,
    status: xc_status >= 0 ? ProtoToJsonEnumCosmosStakingV1beta1BondStatus[xc_status] : __UNDEFINED,
    tokens: s_tokens,
    delegator_shares: s_delegator_shares,
    description: a_description && expandCosmosStakingV1beta1Description(a_description),
    unbonding_height: sg_unbonding_height,
    unbonding_time: expand_timestamp(a_unbonding_time),
    commission: a_commission && expandCosmosStakingV1beta1Commission(a_commission),
    min_self_delegation: s_min_self_delegation,
    unbonding_on_hold_ref_count: sg_unbonding_on_hold_ref_count,
    unbonding_ids: a_unbonding_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Commission}
 */
export const condenseCosmosStakingV1beta1Commission = (g_msg) => encodeCosmosStakingV1beta1Commission(apply_opt(g_msg.commission_rates, condenseCosmosStakingV1beta1CommissionRates), parse_timestamp(g_msg.update_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Commission` - defines commission parameters for a given validator.
 */
export const expandCosmosStakingV1beta1Commission = ([a_commission_rates, a_update_time]) => ({
    commission_rates: a_commission_rates && expandCosmosStakingV1beta1CommissionRates(a_commission_rates),
    update_time: expand_timestamp(a_update_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorRequest}
 */
export const condenseCosmosStakingV1beta1QueryValidatorRequest = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorRequest(g_msg.validator_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorRequest` - response type for the Query/Validator RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorRequest = ([sa_validator]) => ({
    validator_addr: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorResponse}
 */
export const condenseCosmosStakingV1beta1QueryValidatorResponse = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorResponse(apply_opt(g_msg.validator, condenseCosmosStakingV1beta1Validator));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorResponse` - response type for the Query/Validator RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorResponse = ([a_validator]) => ({
    validator: a_validator && expandCosmosStakingV1beta1Validator(a_validator),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorDelegationsRequest}
 */
export const condenseCosmosStakingV1beta1QueryValidatorDelegationsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorDelegationsRequest(g_msg.validator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorDelegationsRequest` - request type for the Query/ValidatorDelegations RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorDelegationsRequest = ([sa_validator, a_pagination]) => ({
    validator_addr: sa_validator,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorDelegationsResponse}
 */
export const condenseCosmosStakingV1beta1QueryValidatorDelegationsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorDelegationsResponse(map(g_msg.delegation_responses, condenseCosmosStakingV1beta1DelegationResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorDelegationsResponse` - response type for the Query/ValidatorDelegations RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorDelegationsResponse = ([a_delegation_responses, a_pagination]) => ({
    delegation_responses: a_delegation_responses && map(a_delegation_responses, expandCosmosStakingV1beta1DelegationResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1DelegationResponse}
 */
export const condenseCosmosStakingV1beta1DelegationResponse = (g_msg) => encodeCosmosStakingV1beta1DelegationResponse(apply_opt(g_msg.delegation, condenseCosmosStakingV1beta1Delegation), slimify_coin(g_msg.balance));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.DelegationResponse` - equivalent to Delegation except that it contains a balance in addition to shares which is more suitable for client responses.
 */
export const expandCosmosStakingV1beta1DelegationResponse = ([a_delegation, a_balance]) => ({
    delegation: a_delegation && expandCosmosStakingV1beta1Delegation(a_delegation),
    balance: a_balance && expand_coin(a_balance),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Delegation}
 */
export const condenseCosmosStakingV1beta1Delegation = (g_msg) => encodeCosmosStakingV1beta1Delegation(g_msg.delegator_address, g_msg.validator_address, g_msg.shares);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Delegation` - represents the bond with tokens held by an account. It is owned by one delegator, and is associated with the voting power of one validator.
 */
export const expandCosmosStakingV1beta1Delegation = ([sa_delegator, sa_validator, s_shares]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    shares: s_shares,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest}
 */
export const condenseCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest(g_msg.validator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest` - required type for the Query/ValidatorUnbondingDelegations RPC method
 */
export const expandCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest = ([sa_validator, a_pagination]) => ({
    validator_addr: sa_validator,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse}
 */
export const condenseCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse(map(g_msg.unbonding_responses, condenseCosmosStakingV1beta1UnbondingDelegation), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse` - response type for the Query/ValidatorUnbondingDelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse = ([a_unbonding_responses, a_pagination]) => ({
    unbonding_responses: a_unbonding_responses && map(a_unbonding_responses, expandCosmosStakingV1beta1UnbondingDelegation),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1UnbondingDelegation}
 */
export const condenseCosmosStakingV1beta1UnbondingDelegation = (g_msg) => encodeCosmosStakingV1beta1UnbondingDelegation(g_msg.delegator_address, g_msg.validator_address, map(g_msg.entries, condenseCosmosStakingV1beta1UnbondingDelegationEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.UnbondingDelegation` - stores all of a single delegator's unbonding bonds for a single validator in an time-ordered list.
 */
export const expandCosmosStakingV1beta1UnbondingDelegation = ([sa_delegator, sa_validator, a_entries]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    entries: a_entries && map(a_entries, expandCosmosStakingV1beta1UnbondingDelegationEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1UnbondingDelegationEntry}
 */
export const condenseCosmosStakingV1beta1UnbondingDelegationEntry = (g_msg) => encodeCosmosStakingV1beta1UnbondingDelegationEntry(g_msg.creation_height, parse_timestamp(g_msg.completion_time), g_msg.initial_balance, g_msg.balance, g_msg.unbonding_id, g_msg.unbonding_on_hold_ref_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.UnbondingDelegationEntry` - defines an unbonding object with relevant metadata.
 */
export const expandCosmosStakingV1beta1UnbondingDelegationEntry = ([sg_creation_height, a_completion_time, s_initial_balance, s_balance, sg_unbonding_id, sg_unbonding_on_hold_ref_count]) => ({
    creation_height: sg_creation_height,
    completion_time: expand_timestamp(a_completion_time),
    initial_balance: s_initial_balance,
    balance: s_balance,
    unbonding_id: sg_unbonding_id,
    unbonding_on_hold_ref_count: sg_unbonding_on_hold_ref_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegationRequest}
 */
export const condenseCosmosStakingV1beta1QueryDelegationRequest = (g_msg) => encodeCosmosStakingV1beta1QueryDelegationRequest(g_msg.delegator_addr, g_msg.validator_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegationRequest` - request type for the Query/Delegation RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegationRequest = ([sa_delegator_addr, sa_validator]) => ({
    delegator_addr: sa_delegator_addr,
    validator_addr: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegationResponse}
 */
export const condenseCosmosStakingV1beta1QueryDelegationResponse = (g_msg) => encodeCosmosStakingV1beta1QueryDelegationResponse(apply_opt(g_msg.delegation_response, condenseCosmosStakingV1beta1DelegationResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegationResponse` - response type for the Query/Delegation RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegationResponse = ([a_delegation_response]) => ({
    delegation_response: a_delegation_response && expandCosmosStakingV1beta1DelegationResponse(a_delegation_response),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryUnbondingDelegationRequest}
 */
export const condenseCosmosStakingV1beta1QueryUnbondingDelegationRequest = (g_msg) => encodeCosmosStakingV1beta1QueryUnbondingDelegationRequest(g_msg.delegator_addr, g_msg.validator_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryUnbondingDelegationRequest` - request type for the Query/UnbondingDelegation RPC method.
 */
export const expandCosmosStakingV1beta1QueryUnbondingDelegationRequest = ([sa_delegator_addr, sa_validator]) => ({
    delegator_addr: sa_delegator_addr,
    validator_addr: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryUnbondingDelegationResponse}
 */
export const condenseCosmosStakingV1beta1QueryUnbondingDelegationResponse = (g_msg) => encodeCosmosStakingV1beta1QueryUnbondingDelegationResponse(apply_opt(g_msg.unbond, condenseCosmosStakingV1beta1UnbondingDelegation));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryUnbondingDelegationResponse` - QueryDelegationResponse is response type for the Query/UnbondingDelegation RPC method.
 */
export const expandCosmosStakingV1beta1QueryUnbondingDelegationResponse = ([a_unbond]) => ({
    unbond: a_unbond && expandCosmosStakingV1beta1UnbondingDelegation(a_unbond),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorDelegationsRequest}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorDelegationsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorDelegationsRequest(g_msg.delegator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest` - request type for the Query/DelegatorDelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorDelegationsRequest = ([sa_delegator_addr, a_pagination]) => ({
    delegator_addr: sa_delegator_addr,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorDelegationsResponse}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorDelegationsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorDelegationsResponse(map(g_msg.delegation_responses, condenseCosmosStakingV1beta1DelegationResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse` - response type for the Query/DelegatorDelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorDelegationsResponse = ([a_delegation_responses, a_pagination]) => ({
    delegation_responses: a_delegation_responses && map(a_delegation_responses, expandCosmosStakingV1beta1DelegationResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest(g_msg.delegator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest` - request type for the Query/DelegatorUnbondingDelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest = ([sa_delegator_addr, a_pagination]) => ({
    delegator_addr: sa_delegator_addr,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse(map(g_msg.unbonding_responses, condenseCosmosStakingV1beta1UnbondingDelegation), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse` - QueryUnbondingDelegatorDelegationsResponse is response type for the Query/UnbondingDelegatorDelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse = ([a_unbonding_responses, a_pagination]) => ({
    unbonding_responses: a_unbonding_responses && map(a_unbonding_responses, expandCosmosStakingV1beta1UnbondingDelegation),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryRedelegationsRequest}
 */
export const condenseCosmosStakingV1beta1QueryRedelegationsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryRedelegationsRequest(g_msg.delegator_addr, g_msg.src_validator_addr, g_msg.dst_validator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryRedelegationsRequest` - request type for the Query/Redelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryRedelegationsRequest = ([sa_delegator_addr, sa_src_validator, sa_dst_validator, a_pagination]) => ({
    delegator_addr: sa_delegator_addr,
    src_validator_addr: sa_src_validator,
    dst_validator_addr: sa_dst_validator,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryRedelegationsResponse}
 */
export const condenseCosmosStakingV1beta1QueryRedelegationsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryRedelegationsResponse(map(g_msg.redelegation_responses, condenseCosmosStakingV1beta1RedelegationResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryRedelegationsResponse` - response type for the Query/Redelegations RPC method.
 */
export const expandCosmosStakingV1beta1QueryRedelegationsResponse = ([a_redelegation_responses, a_pagination]) => ({
    redelegation_responses: a_redelegation_responses && map(a_redelegation_responses, expandCosmosStakingV1beta1RedelegationResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1RedelegationResponse}
 */
export const condenseCosmosStakingV1beta1RedelegationResponse = (g_msg) => encodeCosmosStakingV1beta1RedelegationResponse(apply_opt(g_msg.redelegation, condenseCosmosStakingV1beta1Redelegation), map(g_msg.entries, condenseCosmosStakingV1beta1RedelegationEntryResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.RedelegationResponse` - equivalent to a Redelegation except that its entries contain a balance in addition to shares which is more suitable for client responses.
 */
export const expandCosmosStakingV1beta1RedelegationResponse = ([a_redelegation, a_entries]) => ({
    redelegation: a_redelegation && expandCosmosStakingV1beta1Redelegation(a_redelegation),
    entries: a_entries && map(a_entries, expandCosmosStakingV1beta1RedelegationEntryResponse),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Redelegation}
 */
export const condenseCosmosStakingV1beta1Redelegation = (g_msg) => encodeCosmosStakingV1beta1Redelegation(g_msg.delegator_address, g_msg.validator_src_address, g_msg.validator_dst_address, map(g_msg.entries, condenseCosmosStakingV1beta1RedelegationEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Redelegation` - contains the list of a particular delegator's redelegating bonds from a particular source validator to a particular destination validator.
 */
export const expandCosmosStakingV1beta1Redelegation = ([sa_delegator, sa_validator_src, sa_validator_dst, a_entries]) => ({
    delegator_address: sa_delegator,
    validator_src_address: sa_validator_src,
    validator_dst_address: sa_validator_dst,
    entries: a_entries && map(a_entries, expandCosmosStakingV1beta1RedelegationEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1RedelegationEntry}
 */
export const condenseCosmosStakingV1beta1RedelegationEntry = (g_msg) => encodeCosmosStakingV1beta1RedelegationEntry(g_msg.creation_height, parse_timestamp(g_msg.completion_time), g_msg.initial_balance, g_msg.shares_dst, g_msg.unbonding_id, g_msg.unbonding_on_hold_ref_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.RedelegationEntry` - defines a redelegation object with relevant metadata.
 */
export const expandCosmosStakingV1beta1RedelegationEntry = ([sg_creation_height, a_completion_time, s_initial_balance, s_shares_dst, sg_unbonding_id, sg_unbonding_on_hold_ref_count]) => ({
    creation_height: sg_creation_height,
    completion_time: expand_timestamp(a_completion_time),
    initial_balance: s_initial_balance,
    shares_dst: s_shares_dst,
    unbonding_id: sg_unbonding_id,
    unbonding_on_hold_ref_count: sg_unbonding_on_hold_ref_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1RedelegationEntryResponse}
 */
export const condenseCosmosStakingV1beta1RedelegationEntryResponse = (g_msg) => encodeCosmosStakingV1beta1RedelegationEntryResponse(apply_opt(g_msg.redelegation_entry, condenseCosmosStakingV1beta1RedelegationEntry), g_msg.balance);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.RedelegationEntryResponse` - equivalent to a RedelegationEntry except that it contains a balance in addition to shares which is more suitable for client responses.
 */
export const expandCosmosStakingV1beta1RedelegationEntryResponse = ([a_redelegation_entry, , , s_balance]) => ({
    redelegation_entry: a_redelegation_entry && expandCosmosStakingV1beta1RedelegationEntry(a_redelegation_entry),
    balance: s_balance,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorValidatorsRequest}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorValidatorsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorValidatorsRequest(g_msg.delegator_addr, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest` - request type for the Query/DelegatorValidators RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorValidatorsRequest = ([sa_delegator_addr, a_pagination]) => ({
    delegator_addr: sa_delegator_addr,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorValidatorsResponse}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorValidatorsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorValidatorsResponse(map(g_msg.validators, condenseCosmosStakingV1beta1Validator), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse` - response type for the Query/DelegatorValidators RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorValidatorsResponse = ([a_validators, a_pagination]) => ({
    validators: a_validators && map(a_validators, expandCosmosStakingV1beta1Validator),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorValidatorRequest}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorValidatorRequest = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorValidatorRequest(g_msg.delegator_addr, g_msg.validator_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorValidatorRequest` - request type for the Query/DelegatorValidator RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorValidatorRequest = ([sa_delegator_addr, sa_validator]) => ({
    delegator_addr: sa_delegator_addr,
    validator_addr: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryDelegatorValidatorResponse}
 */
export const condenseCosmosStakingV1beta1QueryDelegatorValidatorResponse = (g_msg) => encodeCosmosStakingV1beta1QueryDelegatorValidatorResponse(apply_opt(g_msg.validator, condenseCosmosStakingV1beta1Validator));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryDelegatorValidatorResponse` - response type for the Query/DelegatorValidator RPC method.
 */
export const expandCosmosStakingV1beta1QueryDelegatorValidatorResponse = ([a_validator]) => ({
    validator: a_validator && expandCosmosStakingV1beta1Validator(a_validator),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryHistoricalInfoRequest}
 */
export const condenseCosmosStakingV1beta1QueryHistoricalInfoRequest = (g_msg) => encodeCosmosStakingV1beta1QueryHistoricalInfoRequest(g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryHistoricalInfoRequest` - request type for the Query/HistoricalInfo RPC method.
 */
export const expandCosmosStakingV1beta1QueryHistoricalInfoRequest = ([sg_height]) => ({
    height: sg_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryHistoricalInfoResponse}
 */
export const condenseCosmosStakingV1beta1QueryHistoricalInfoResponse = (g_msg) => encodeCosmosStakingV1beta1QueryHistoricalInfoResponse(apply_opt(g_msg.hist, condenseCosmosStakingV1beta1HistoricalInfo), apply_opt(g_msg.historical_record, condenseCosmosStakingV1beta1HistoricalRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryHistoricalInfoResponse` - response type for the Query/HistoricalInfo RPC method.
 */
export const expandCosmosStakingV1beta1QueryHistoricalInfoResponse = ([a_hist, a_historical_record]) => ({
    hist: a_hist && expandCosmosStakingV1beta1HistoricalInfo(a_hist),
    historical_record: a_historical_record && expandCosmosStakingV1beta1HistoricalRecord(a_historical_record),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1HistoricalInfo}
 */
export const condenseCosmosStakingV1beta1HistoricalInfo = (g_msg) => encodeCosmosStakingV1beta1HistoricalInfo(apply_opt(g_msg.header, condenseTendermintTypesHeader), map(g_msg.valset, condenseCosmosStakingV1beta1Validator));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.HistoricalInfo` - contains header and validator information for a given block. It is stored as part of staking module's state, which persists the `n` most recent HistoricalInfo (`n` is set by the staking module's `historical_entries` parameter).
 */
export const expandCosmosStakingV1beta1HistoricalInfo = ([a_header, a_valset]) => ({
    header: a_header && expandTendermintTypesHeader(a_header),
    valset: a_valset && map(a_valset, expandCosmosStakingV1beta1Validator),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1HistoricalRecord}
 */
export const condenseCosmosStakingV1beta1HistoricalRecord = (g_msg) => encodeCosmosStakingV1beta1HistoricalRecord(safe_base64_to_bytes(g_msg.apphash), parse_timestamp(g_msg.time), safe_base64_to_bytes(g_msg.validators_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.HistoricalRecord` - Historical contains a set of minimum values needed for evaluating historical validator sets and blocks. It is stored as part of staking module's state, which persists the `n` most recent HistoricalInfo (`n` is set by the staking module's `historical_entries` parameter).
 */
export const expandCosmosStakingV1beta1HistoricalRecord = ([atu8_apphash, a_time, atu8_validators_hash]) => ({
    apphash: safe_bytes_to_base64(atu8_apphash),
    time: expand_timestamp(a_time),
    validators_hash: safe_bytes_to_base64(atu8_validators_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryPoolRequest}
 */
export const condenseCosmosStakingV1beta1QueryPoolRequest = (g_msg) => encodeCosmosStakingV1beta1QueryPoolRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryPoolRequest` - request type for the Query/Pool RPC method.
 */
export const expandCosmosStakingV1beta1QueryPoolRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryPoolResponse}
 */
export const condenseCosmosStakingV1beta1QueryPoolResponse = (g_msg) => encodeCosmosStakingV1beta1QueryPoolResponse(apply_opt(g_msg.pool, condenseCosmosStakingV1beta1Pool));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryPoolResponse` - response type for the Query/Pool RPC method.
 */
export const expandCosmosStakingV1beta1QueryPoolResponse = ([a_pool]) => ({
    pool: a_pool && expandCosmosStakingV1beta1Pool(a_pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1Pool}
 */
export const condenseCosmosStakingV1beta1Pool = (g_msg) => encodeCosmosStakingV1beta1Pool(g_msg.not_bonded_tokens, g_msg.bonded_tokens);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.Pool` - used for tracking bonded and not-bonded token supply of the bond denomination.
 */
export const expandCosmosStakingV1beta1Pool = ([s_not_bonded_tokens, s_bonded_tokens]) => ({
    not_bonded_tokens: s_not_bonded_tokens,
    bonded_tokens: s_bonded_tokens,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryParamsRequest}
 */
export const condenseCosmosStakingV1beta1QueryParamsRequest = (g_msg) => encodeCosmosStakingV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryParamsRequest` - request type for the Query/Params RPC method.
 */
export const expandCosmosStakingV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1QueryParamsResponse}
 */
export const condenseCosmosStakingV1beta1QueryParamsResponse = (g_msg) => encodeCosmosStakingV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosStakingV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.QueryParamsResponse` - response type for the Query/Params RPC method.
 */
export const expandCosmosStakingV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosStakingV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1StakeAuthorization}
 */
export const condenseCosmosStakingV1beta1StakeAuthorization = (g_msg) => encodeCosmosStakingV1beta1StakeAuthorization(slimify_coin(g_msg.max_tokens), apply_opt(g_msg.allow_list, condenseCosmosStakingV1beta1StakeAuthorizationValidators), apply_opt(g_msg.deny_list, condenseCosmosStakingV1beta1StakeAuthorizationValidators), JsonToProtoEnumCosmosStakingV1beta1AuthorizationType[g_msg.authorization_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.StakeAuthorization` - defines authorization for delegate/undelegate/redelegate. Since: cosmos-sdk 0.43
 */
export const expandCosmosStakingV1beta1StakeAuthorization = ([a_max_tokens, a_allow_list, a_deny_list, xc_authorization_type]) => ({
    max_tokens: a_max_tokens && expand_coin(a_max_tokens),
    allow_list: a_allow_list && expandCosmosStakingV1beta1StakeAuthorizationValidators(a_allow_list),
    deny_list: a_deny_list && expandCosmosStakingV1beta1StakeAuthorizationValidators(a_deny_list),
    authorization_type: xc_authorization_type >= 0 ? ProtoToJsonEnumCosmosStakingV1beta1AuthorizationType[xc_authorization_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1StakeAuthorizationValidators}
 */
export const condenseCosmosStakingV1beta1StakeAuthorizationValidators = (g_msg) => encodeCosmosStakingV1beta1StakeAuthorizationValidators(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.StakeAuthorization.Validators` -
 */
export const expandCosmosStakingV1beta1StakeAuthorizationValidators = ([a_addresses]) => ({
    address: a_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1GenesisState}
 */
export const condenseCosmosStakingV1beta1GenesisState = (g_msg) => encodeCosmosStakingV1beta1GenesisState(apply_opt(g_msg.params, condenseCosmosStakingV1beta1Params), safe_base64_to_bytes(g_msg.last_total_power), map(g_msg.last_validator_powers, condenseCosmosStakingV1beta1LastValidatorPower), map(g_msg.validators, condenseCosmosStakingV1beta1Validator), map(g_msg.delegations, condenseCosmosStakingV1beta1Delegation), map(g_msg.unbonding_delegations, condenseCosmosStakingV1beta1UnbondingDelegation), map(g_msg.redelegations, condenseCosmosStakingV1beta1Redelegation), g_msg.exported);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.GenesisState` - defines the staking module's genesis state.
 */
export const expandCosmosStakingV1beta1GenesisState = ([a_params, atu8_last_total_power, a_last_validator_powers, a_validators, a_delegations, a_unbonding_delegations, a_redelegations, b_exported]) => ({
    params: a_params && expandCosmosStakingV1beta1Params(a_params),
    last_total_power: safe_bytes_to_base64(atu8_last_total_power),
    last_validator_powers: a_last_validator_powers && map(a_last_validator_powers, expandCosmosStakingV1beta1LastValidatorPower),
    validators: a_validators && map(a_validators, expandCosmosStakingV1beta1Validator),
    delegations: a_delegations && map(a_delegations, expandCosmosStakingV1beta1Delegation),
    unbonding_delegations: a_unbonding_delegations && map(a_unbonding_delegations, expandCosmosStakingV1beta1UnbondingDelegation),
    redelegations: a_redelegations && map(a_redelegations, expandCosmosStakingV1beta1Redelegation),
    exported: !!b_exported,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1LastValidatorPower}
 */
export const condenseCosmosStakingV1beta1LastValidatorPower = (g_msg) => encodeCosmosStakingV1beta1LastValidatorPower(g_msg.address, g_msg.power);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.LastValidatorPower` - required for validator set update logic.
 */
export const expandCosmosStakingV1beta1LastValidatorPower = ([sa_address, sg_power]) => ({
    address: sa_address,
    power: sg_power,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1ValAddresses}
 */
export const condenseCosmosStakingV1beta1ValAddresses = (g_msg) => encodeCosmosStakingV1beta1ValAddresses(g_msg.addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.ValAddresses` - defines a repeated set of validator addresses.
 */
export const expandCosmosStakingV1beta1ValAddresses = ([a_addresses]) => ({
    addresses: a_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1DVPair}
 */
export const condenseCosmosStakingV1beta1DVPair = (g_msg) => encodeCosmosStakingV1beta1DVPair(g_msg.delegator_address, g_msg.validator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.DVPair` - struct that just has a delegator-validator pair with no other data. It is intended to be used as a marshalable pointer. For example, a DVPair can be used to construct the key to getting an UnbondingDelegation from state.
 */
export const expandCosmosStakingV1beta1DVPair = ([sa_delegator, sa_validator]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1DVPairs}
 */
export const condenseCosmosStakingV1beta1DVPairs = (g_msg) => encodeCosmosStakingV1beta1DVPairs(map(g_msg.pairs, condenseCosmosStakingV1beta1DVPair));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.DVPairs` - defines an array of DVPair objects.
 */
export const expandCosmosStakingV1beta1DVPairs = ([a_pairs]) => ({
    pairs: a_pairs && map(a_pairs, expandCosmosStakingV1beta1DVPair),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1DVVTriplet}
 */
export const condenseCosmosStakingV1beta1DVVTriplet = (g_msg) => encodeCosmosStakingV1beta1DVVTriplet(g_msg.delegator_address, g_msg.validator_src_address, g_msg.validator_dst_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.DVVTriplet` - struct that just has a delegator-validator-validator triplet with no other data. It is intended to be used as a marshalable pointer. For example, a DVVTriplet can be used to construct the key to getting a Redelegation from state.
 */
export const expandCosmosStakingV1beta1DVVTriplet = ([sa_delegator, sa_validator_src, sa_validator_dst]) => ({
    delegator_address: sa_delegator,
    validator_src_address: sa_validator_src,
    validator_dst_address: sa_validator_dst,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1DVVTriplets}
 */
export const condenseCosmosStakingV1beta1DVVTriplets = (g_msg) => encodeCosmosStakingV1beta1DVVTriplets(map(g_msg.triplets, condenseCosmosStakingV1beta1DVVTriplet));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.DVVTriplets` - defines an array of DVVTriplet objects.
 */
export const expandCosmosStakingV1beta1DVVTriplets = ([a_triplets]) => ({
    triplets: a_triplets && map(a_triplets, expandCosmosStakingV1beta1DVVTriplet),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStakingV1beta1ValidatorUpdates}
 */
export const condenseCosmosStakingV1beta1ValidatorUpdates = (g_msg) => encodeCosmosStakingV1beta1ValidatorUpdates(map(g_msg.updates, condenseTendermintAbciValidatorUpdate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.staking.v1beta1.ValidatorUpdates` - defines an array of abci.ValidatorUpdate objects. TODO: explore moving this to proto/cosmos/base to separate modules from tendermint dependence
 */
export const expandCosmosStakingV1beta1ValidatorUpdates = ([a_updates]) => ({
    updates: a_updates && map(a_updates, expandTendermintAbciValidatorUpdate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGenutilModuleV1Module}
 */
export const condenseCosmosGenutilModuleV1Module = (g_msg) => encodeCosmosGenutilModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.genutil.module.v1.Module` - the config object for the genutil module.
 */
export const expandCosmosGenutilModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGenutilV1beta1GenesisState}
 */
export const condenseCosmosGenutilV1beta1GenesisState = (g_msg) => encodeCosmosGenutilV1beta1GenesisState(map(g_msg.gen_txs, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.genutil.v1beta1.GenesisState` - defines the raw genesis transaction in JSON.
 */
export const expandCosmosGenutilV1beta1GenesisState = ([a_gen_txs]) => ({
    gen_txs: map(a_gen_txs, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsModuleV1Module}
 */
export const condenseCosmosParamsModuleV1Module = (g_msg) => encodeCosmosParamsModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.module.v1.Module` - the config object of the params module.
 */
export const expandCosmosParamsModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1QueryParamsRequest}
 */
export const condenseCosmosParamsV1beta1QueryParamsRequest = (g_msg) => encodeCosmosParamsV1beta1QueryParamsRequest(g_msg.subspace, g_msg.key);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.QueryParamsRequest` - request type for the Query/Params RPC method.
 */
export const expandCosmosParamsV1beta1QueryParamsRequest = ([s_subspace, s_key]) => ({
    subspace: s_subspace,
    key: s_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1QueryParamsResponse}
 */
export const condenseCosmosParamsV1beta1QueryParamsResponse = (g_msg) => encodeCosmosParamsV1beta1QueryParamsResponse(apply_opt(g_msg.param, condenseCosmosParamsV1beta1ParamChange));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.QueryParamsResponse` - response type for the Query/Params RPC method.
 */
export const expandCosmosParamsV1beta1QueryParamsResponse = ([a_param]) => ({
    param: a_param && expandCosmosParamsV1beta1ParamChange(a_param),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1ParamChange}
 */
export const condenseCosmosParamsV1beta1ParamChange = (g_msg) => encodeCosmosParamsV1beta1ParamChange(g_msg.subspace, g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.ParamChange` - defines an individual parameter change, for use in ParameterChangeProposal.
 */
export const expandCosmosParamsV1beta1ParamChange = ([s_subspace, s_key, s_value]) => ({
    subspace: s_subspace,
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1QuerySubspacesRequest}
 */
export const condenseCosmosParamsV1beta1QuerySubspacesRequest = (g_msg) => encodeCosmosParamsV1beta1QuerySubspacesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.QuerySubspacesRequest` - defines a request type for querying for all registered subspaces and all keys for a subspace. Since: cosmos-sdk 0.46
 */
export const expandCosmosParamsV1beta1QuerySubspacesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1QuerySubspacesResponse}
 */
export const condenseCosmosParamsV1beta1QuerySubspacesResponse = (g_msg) => encodeCosmosParamsV1beta1QuerySubspacesResponse(map(g_msg.subspaces, condenseCosmosParamsV1beta1Subspace));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.QuerySubspacesResponse` - defines the response types for querying for all registered subspaces and all keys for a subspace. Since: cosmos-sdk 0.46
 */
export const expandCosmosParamsV1beta1QuerySubspacesResponse = ([a_subspaces]) => ({
    subspaces: a_subspaces && map(a_subspaces, expandCosmosParamsV1beta1Subspace),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1Subspace}
 */
export const condenseCosmosParamsV1beta1Subspace = (g_msg) => encodeCosmosParamsV1beta1Subspace(g_msg.subspace, g_msg.keys);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.Subspace` - defines a parameter subspace name and all the keys that exist for the subspace. Since: cosmos-sdk 0.46
 */
export const expandCosmosParamsV1beta1Subspace = ([s_subspace, a_keys]) => ({
    subspace: s_subspace,
    keys: a_keys,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosParamsV1beta1ParameterChangeProposal}
 */
export const condenseCosmosParamsV1beta1ParameterChangeProposal = (g_msg) => encodeCosmosParamsV1beta1ParameterChangeProposal(g_msg.title, g_msg.description, map(g_msg.changes, condenseCosmosParamsV1beta1ParamChange));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.params.v1beta1.ParameterChangeProposal` - defines a proposal to change one or more parameters.
 */
export const expandCosmosParamsV1beta1ParameterChangeProposal = ([s_title, s_description, a_changes]) => ({
    title: s_title,
    description: s_description,
    changes: a_changes && map(a_changes, expandCosmosParamsV1beta1ParamChange),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzModuleV1Module}
 */
export const condenseCosmosAuthzModuleV1Module = (g_msg) => encodeCosmosAuthzModuleV1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.module.v1.Module` - the config object of the authz module.
 */
export const expandCosmosAuthzModuleV1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgGrant}
 */
export const condenseCosmosAuthzV1beta1MsgGrant = (g_msg) => encodeCosmosAuthzV1beta1MsgGrant(g_msg.granter, g_msg.grantee, apply_opt(g_msg.grant, condenseCosmosAuthzV1beta1Grant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgGrant` - a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time.
 */
export const expandCosmosAuthzV1beta1MsgGrant = ([sa_granter, sa_grantee, a_grant]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    grant: a_grant && expandCosmosAuthzV1beta1Grant(a_grant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1Grant}
 */
export const condenseCosmosAuthzV1beta1Grant = (g_msg) => encodeCosmosAuthzV1beta1Grant(condenseJsonAny(g_msg.authorization), parse_timestamp(g_msg.expiration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.Grant` - gives permissions to execute the provide method with expiration time.
 */
export const expandCosmosAuthzV1beta1Grant = ([a_authorization, a_expiration]) => ({
    authorization: a_authorization && expandJsonAny(a_authorization),
    expiration: expand_timestamp(a_expiration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgGrantResponse}
 */
export const condenseCosmosAuthzV1beta1MsgGrantResponse = (g_msg) => encodeCosmosAuthzV1beta1MsgGrantResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgGrantResponse` - defines the Msg/MsgGrant response type.
 */
export const expandCosmosAuthzV1beta1MsgGrantResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgExec}
 */
export const condenseCosmosAuthzV1beta1MsgExec = (g_msg) => encodeCosmosAuthzV1beta1MsgExec(g_msg.grantee, map(g_msg.msgs, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgExec` - attempts to execute the provided messages using authorizations granted to the grantee. Each message should have only one signer corresponding to the granter of the authorization.
 */
export const expandCosmosAuthzV1beta1MsgExec = ([sa_grantee, a_msgs]) => ({
    grantee: sa_grantee,
    msgs: a_msgs && map(a_msgs, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgExecResponse}
 */
export const condenseCosmosAuthzV1beta1MsgExecResponse = (g_msg) => encodeCosmosAuthzV1beta1MsgExecResponse(map(g_msg.results, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgExecResponse` - defines the Msg/MsgExecResponse response type.
 */
export const expandCosmosAuthzV1beta1MsgExecResponse = ([a_results]) => ({
    results: map(a_results, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgRevoke}
 */
export const condenseCosmosAuthzV1beta1MsgRevoke = (g_msg) => encodeCosmosAuthzV1beta1MsgRevoke(g_msg.granter, g_msg.grantee, g_msg.msg_type_url);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgRevoke` - revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee.
 */
export const expandCosmosAuthzV1beta1MsgRevoke = ([sa_granter, sa_grantee, s_msg_type_url]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    msg_type_url: s_msg_type_url,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1MsgRevokeResponse}
 */
export const condenseCosmosAuthzV1beta1MsgRevokeResponse = (g_msg) => encodeCosmosAuthzV1beta1MsgRevokeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.MsgRevokeResponse` - defines the Msg/MsgRevokeResponse response type.
 */
export const expandCosmosAuthzV1beta1MsgRevokeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGrantsRequest}
 */
export const condenseCosmosAuthzV1beta1QueryGrantsRequest = (g_msg) => encodeCosmosAuthzV1beta1QueryGrantsRequest(g_msg.granter, g_msg.grantee, g_msg.msg_type_url, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGrantsRequest` - the request type for the Query/Grants RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGrantsRequest = ([sa_granter, sa_grantee, s_msg_type_url, a_pagination]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    msg_type_url: s_msg_type_url,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGrantsResponse}
 */
export const condenseCosmosAuthzV1beta1QueryGrantsResponse = (g_msg) => encodeCosmosAuthzV1beta1QueryGrantsResponse(map(g_msg.grants, condenseCosmosAuthzV1beta1Grant), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGrantsResponse` - the response type for the Query/Authorizations RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGrantsResponse = ([a_grants, a_pagination]) => ({
    grants: a_grants && map(a_grants, expandCosmosAuthzV1beta1Grant),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGranterGrantsRequest}
 */
export const condenseCosmosAuthzV1beta1QueryGranterGrantsRequest = (g_msg) => encodeCosmosAuthzV1beta1QueryGranterGrantsRequest(g_msg.granter, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGranterGrantsRequest` - the request type for the Query/GranterGrants RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGranterGrantsRequest = ([sa_granter, a_pagination]) => ({
    granter: sa_granter,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGranterGrantsResponse}
 */
export const condenseCosmosAuthzV1beta1QueryGranterGrantsResponse = (g_msg) => encodeCosmosAuthzV1beta1QueryGranterGrantsResponse(map(g_msg.grants, condenseCosmosAuthzV1beta1GrantAuthorization), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGranterGrantsResponse` - the response type for the Query/GranterGrants RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGranterGrantsResponse = ([a_grants, a_pagination]) => ({
    grants: a_grants && map(a_grants, expandCosmosAuthzV1beta1GrantAuthorization),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1GrantAuthorization}
 */
export const condenseCosmosAuthzV1beta1GrantAuthorization = (g_msg) => encodeCosmosAuthzV1beta1GrantAuthorization(g_msg.granter, g_msg.grantee, condenseJsonAny(g_msg.authorization), parse_timestamp(g_msg.expiration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.GrantAuthorization` - extends a grant with both the addresses of the grantee and granter. It is used in genesis.proto and query.proto
 */
export const expandCosmosAuthzV1beta1GrantAuthorization = ([sa_granter, sa_grantee, a_authorization, a_expiration]) => ({
    granter: sa_granter,
    grantee: sa_grantee,
    authorization: a_authorization && expandJsonAny(a_authorization),
    expiration: expand_timestamp(a_expiration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGranteeGrantsRequest}
 */
export const condenseCosmosAuthzV1beta1QueryGranteeGrantsRequest = (g_msg) => encodeCosmosAuthzV1beta1QueryGranteeGrantsRequest(g_msg.grantee, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGranteeGrantsRequest` - the request type for the Query/GranteeGrants RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGranteeGrantsRequest = ([sa_grantee, a_pagination]) => ({
    grantee: sa_grantee,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1QueryGranteeGrantsResponse}
 */
export const condenseCosmosAuthzV1beta1QueryGranteeGrantsResponse = (g_msg) => encodeCosmosAuthzV1beta1QueryGranteeGrantsResponse(map(g_msg.grants, condenseCosmosAuthzV1beta1GrantAuthorization), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.QueryGranteeGrantsResponse` - the response type for the Query/GranteeGrants RPC method.
 */
export const expandCosmosAuthzV1beta1QueryGranteeGrantsResponse = ([a_grants, a_pagination]) => ({
    grants: a_grants && map(a_grants, expandCosmosAuthzV1beta1GrantAuthorization),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1EventGrant}
 */
export const condenseCosmosAuthzV1beta1EventGrant = (g_msg) => encodeCosmosAuthzV1beta1EventGrant(g_msg.msg_type_url, g_msg.granter, g_msg.grantee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.EventGrant` - emitted on Msg/Grant
 */
export const expandCosmosAuthzV1beta1EventGrant = ([, s_msg_type_url, sa_granter, sa_grantee]) => ({
    msg_type_url: s_msg_type_url,
    granter: sa_granter,
    grantee: sa_grantee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1EventRevoke}
 */
export const condenseCosmosAuthzV1beta1EventRevoke = (g_msg) => encodeCosmosAuthzV1beta1EventRevoke(g_msg.msg_type_url, g_msg.granter, g_msg.grantee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.EventRevoke` - emitted on Msg/Revoke
 */
export const expandCosmosAuthzV1beta1EventRevoke = ([, s_msg_type_url, sa_granter, sa_grantee]) => ({
    msg_type_url: s_msg_type_url,
    granter: sa_granter,
    grantee: sa_grantee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1GenericAuthorization}
 */
export const condenseCosmosAuthzV1beta1GenericAuthorization = (g_msg) => encodeCosmosAuthzV1beta1GenericAuthorization(g_msg.msg);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.GenericAuthorization` - gives the grantee unrestricted permissions to execute the provided method on behalf of the granter's account.
 */
export const expandCosmosAuthzV1beta1GenericAuthorization = ([s_msg]) => ({
    msg: s_msg,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1GrantQueueItem}
 */
export const condenseCosmosAuthzV1beta1GrantQueueItem = (g_msg) => encodeCosmosAuthzV1beta1GrantQueueItem(g_msg.msg_type_urls);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.GrantQueueItem` - contains the list of TypeURL of a sdk.Msg.
 */
export const expandCosmosAuthzV1beta1GrantQueueItem = ([a_msg_type_urls]) => ({
    msg_type_urls: a_msg_type_urls,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAuthzV1beta1GenesisState}
 */
export const condenseCosmosAuthzV1beta1GenesisState = (g_msg) => encodeCosmosAuthzV1beta1GenesisState(map(g_msg.authorization, condenseCosmosAuthzV1beta1GrantAuthorization));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.authz.v1beta1.GenesisState` - defines the authz module's genesis state.
 */
export const expandCosmosAuthzV1beta1GenesisState = ([a_authorization]) => ({
    authorization: a_authorization && map(a_authorization, expandCosmosAuthzV1beta1GrantAuthorization),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1TableDescriptor}
 */
export const condenseCosmosOrmV1TableDescriptor = (g_msg) => encodeCosmosOrmV1TableDescriptor(apply_opt(g_msg.primary_key, condenseCosmosOrmV1PrimaryKeyDescriptor), map(g_msg.index, condenseCosmosOrmV1SecondaryIndexDescriptor), g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1.TableDescriptor` - describes an ORM table.
 */
export const expandCosmosOrmV1TableDescriptor = ([a_primary_key, a_index, n_id]) => ({
    primary_key: a_primary_key && expandCosmosOrmV1PrimaryKeyDescriptor(a_primary_key),
    index: a_index && map(a_index, expandCosmosOrmV1SecondaryIndexDescriptor),
    id: n_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1PrimaryKeyDescriptor}
 */
export const condenseCosmosOrmV1PrimaryKeyDescriptor = (g_msg) => encodeCosmosOrmV1PrimaryKeyDescriptor(g_msg.fields, g_msg.auto_increment);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1.PrimaryKeyDescriptor` - describes a table primary key.
 */
export const expandCosmosOrmV1PrimaryKeyDescriptor = ([s_fields, b_auto_increment]) => ({
    fields: s_fields,
    auto_increment: !!b_auto_increment,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1SecondaryIndexDescriptor}
 */
export const condenseCosmosOrmV1SecondaryIndexDescriptor = (g_msg) => encodeCosmosOrmV1SecondaryIndexDescriptor(g_msg.fields, g_msg.id, g_msg.unique);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1.SecondaryIndexDescriptor` - PrimaryKeyDescriptor describes a table secondary index.
 */
export const expandCosmosOrmV1SecondaryIndexDescriptor = ([s_fields, n_id, b_unique]) => ({
    fields: s_fields,
    id: n_id,
    unique: !!b_unique,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1SingletonDescriptor}
 */
export const condenseCosmosOrmV1SingletonDescriptor = (g_msg) => encodeCosmosOrmV1SingletonDescriptor(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1.SingletonDescriptor` - TableDescriptor describes an ORM singleton table which has at most one instance.
 */
export const expandCosmosOrmV1SingletonDescriptor = ([n_id]) => ({
    id: n_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmModuleV1alpha1Module}
 */
export const condenseCosmosOrmModuleV1alpha1Module = (g_msg) => encodeCosmosOrmModuleV1alpha1Module();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.module.v1alpha1.Module` - defines the ORM module which adds providers to the app container for ORM ModuleDB's and in the future will automatically register query services for modules that use the ORM.
 */
export const expandCosmosOrmModuleV1alpha1Module = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1alpha1ModuleSchemaDescriptor}
 */
export const condenseCosmosOrmV1alpha1ModuleSchemaDescriptor = (g_msg) => encodeCosmosOrmV1alpha1ModuleSchemaDescriptor(map(g_msg.schema_file, condenseCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry), safe_base64_to_bytes(g_msg.prefix));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1alpha1.ModuleSchemaDescriptor` - describe's a module's ORM schema.
 */
export const expandCosmosOrmV1alpha1ModuleSchemaDescriptor = ([a_schema_file, atu8_prefix]) => ({
    schema_file: a_schema_file && map(a_schema_file, expandCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry),
    prefix: safe_bytes_to_base64(atu8_prefix),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry}
 */
export const condenseCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry = (g_msg) => encodeCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry(g_msg.id, g_msg.proto_file_name, JsonToProtoEnumCosmosOrmV1alpha1StorageType[g_msg.storage_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.v1alpha1.ModuleSchemaDescriptor.FileEntry` -
 */
export const expandCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry = ([n_id, s_proto_file_name, xc_storage_type]) => ({
    id: n_id,
    proto_file_name: s_proto_file_name,
    storage_type: xc_storage_type >= 0 ? ProtoToJsonEnumCosmosOrmV1alpha1StorageType[xc_storage_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1GetRequest}
 */
export const condenseCosmosOrmQueryV1alpha1GetRequest = (g_msg) => encodeCosmosOrmQueryV1alpha1GetRequest(g_msg.message_name, g_msg.index, map(g_msg.values, condenseCosmosOrmQueryV1alpha1IndexValue));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.GetRequest` - the Query/Get request type.
 */
export const expandCosmosOrmQueryV1alpha1GetRequest = ([s_message_name, s_index, a_values]) => ({
    message_name: s_message_name,
    index: s_index,
    values: a_values && map(a_values, expandCosmosOrmQueryV1alpha1IndexValue),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1IndexValue}
 */
export const condenseCosmosOrmQueryV1alpha1IndexValue = (g_msg) => encodeCosmosOrmQueryV1alpha1IndexValue(g_msg.uint, g_msg.int, g_msg.str, safe_base64_to_bytes(g_msg.bytes), g_msg.enum, g_msg.bool, parse_timestamp(g_msg.timestamp), parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.IndexValue` - represents the value of a field in an ORM index expression.
 */
export const expandCosmosOrmQueryV1alpha1IndexValue = ([sg_uint, sg_int, s_str, atu8_bytes, s_enum, b_bool, a_timestamp, a_duration]) => ({
    uint: sg_uint,
    int: sg_int,
    str: s_str,
    bytes: safe_bytes_to_base64(atu8_bytes),
    enum: s_enum,
    bool: !!b_bool,
    timestamp: expand_timestamp(a_timestamp),
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1GetResponse}
 */
export const condenseCosmosOrmQueryV1alpha1GetResponse = (g_msg) => encodeCosmosOrmQueryV1alpha1GetResponse(condenseJsonAny(g_msg.result));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.GetResponse` - the Query/Get response type.
 */
export const expandCosmosOrmQueryV1alpha1GetResponse = ([a_result]) => ({
    result: a_result && expandJsonAny(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1ListRequest}
 */
export const condenseCosmosOrmQueryV1alpha1ListRequest = (g_msg) => encodeCosmosOrmQueryV1alpha1ListRequest(g_msg.message_name, g_msg.index, apply_opt(g_msg.prefix, condenseCosmosOrmQueryV1alpha1ListRequestPrefix), apply_opt(g_msg.range, condenseCosmosOrmQueryV1alpha1ListRequestRange), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.ListRequest` - the Query/List request type.
 */
export const expandCosmosOrmQueryV1alpha1ListRequest = ([s_message_name, s_index, a_prefix, a_range, a_pagination]) => ({
    message_name: s_message_name,
    index: s_index,
    prefix: a_prefix && expandCosmosOrmQueryV1alpha1ListRequestPrefix(a_prefix),
    range: a_range && expandCosmosOrmQueryV1alpha1ListRequestRange(a_range),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1ListRequestPrefix}
 */
export const condenseCosmosOrmQueryV1alpha1ListRequestPrefix = (g_msg) => encodeCosmosOrmQueryV1alpha1ListRequestPrefix(map(g_msg.values, condenseCosmosOrmQueryV1alpha1IndexValue));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.ListRequest.Prefix` -
 */
export const expandCosmosOrmQueryV1alpha1ListRequestPrefix = ([a_values]) => ({
    values: a_values && map(a_values, expandCosmosOrmQueryV1alpha1IndexValue),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1ListRequestRange}
 */
export const condenseCosmosOrmQueryV1alpha1ListRequestRange = (g_msg) => encodeCosmosOrmQueryV1alpha1ListRequestRange(map(g_msg.start, condenseCosmosOrmQueryV1alpha1IndexValue), map(g_msg.end, condenseCosmosOrmQueryV1alpha1IndexValue));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.ListRequest.Range` -
 */
export const expandCosmosOrmQueryV1alpha1ListRequestRange = ([a_start, a_end]) => ({
    start: a_start && map(a_start, expandCosmosOrmQueryV1alpha1IndexValue),
    end: a_end && map(a_end, expandCosmosOrmQueryV1alpha1IndexValue),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosOrmQueryV1alpha1ListResponse}
 */
export const condenseCosmosOrmQueryV1alpha1ListResponse = (g_msg) => encodeCosmosOrmQueryV1alpha1ListResponse(map(g_msg.results, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.orm.query.v1alpha1.ListResponse` - the Query/List response type.
 */
export const expandCosmosOrmQueryV1alpha1ListResponse = ([a_results, , , , a_pagination]) => ({
    results: a_results && map(a_results, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingModuleV1Module}
 */
export const condenseCosmosSlashingModuleV1Module = (g_msg) => encodeCosmosSlashingModuleV1Module(g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.module.v1.Module` - the config object of the slashing module.
 */
export const expandCosmosSlashingModuleV1Module = ([s_authority]) => ({
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1MsgUnjail}
 */
export const condenseCosmosSlashingV1beta1MsgUnjail = (g_msg) => encodeCosmosSlashingV1beta1MsgUnjail(g_msg.validator_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.MsgUnjail` - defines the Msg/Unjail request type
 */
export const expandCosmosSlashingV1beta1MsgUnjail = ([sa_validator]) => ({
    validator_addr: sa_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1MsgUnjailResponse}
 */
export const condenseCosmosSlashingV1beta1MsgUnjailResponse = (g_msg) => encodeCosmosSlashingV1beta1MsgUnjailResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.MsgUnjailResponse` - defines the Msg/Unjail response type
 */
export const expandCosmosSlashingV1beta1MsgUnjailResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1MsgUpdateParams}
 */
export const condenseCosmosSlashingV1beta1MsgUpdateParams = (g_msg) => encodeCosmosSlashingV1beta1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosSlashingV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosSlashingV1beta1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosSlashingV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1Params}
 */
export const condenseCosmosSlashingV1beta1Params = (g_msg) => encodeCosmosSlashingV1beta1Params(g_msg.signed_blocks_window, safe_base64_to_bytes(g_msg.min_signed_per_window), parse_duration(g_msg.downtime_jail_duration), safe_base64_to_bytes(g_msg.slash_fraction_double_sign), safe_base64_to_bytes(g_msg.slash_fraction_downtime));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.Params` - represents the parameters used for by the slashing module.
 */
export const expandCosmosSlashingV1beta1Params = ([sg_signed_blocks_window, atu8_min_signed_per_window, a_downtime_jail_duration, atu8_slash_fraction_double_sign, atu8_slash_fraction_downtime]) => ({
    signed_blocks_window: sg_signed_blocks_window,
    min_signed_per_window: safe_bytes_to_base64(atu8_min_signed_per_window),
    downtime_jail_duration: expand_duration(a_downtime_jail_duration),
    slash_fraction_double_sign: safe_bytes_to_base64(atu8_slash_fraction_double_sign),
    slash_fraction_downtime: safe_bytes_to_base64(atu8_slash_fraction_downtime),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1MsgUpdateParamsResponse}
 */
export const condenseCosmosSlashingV1beta1MsgUpdateParamsResponse = (g_msg) => encodeCosmosSlashingV1beta1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosSlashingV1beta1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1ValidatorSigningInfo}
 */
export const condenseCosmosSlashingV1beta1ValidatorSigningInfo = (g_msg) => encodeCosmosSlashingV1beta1ValidatorSigningInfo(g_msg.address, g_msg.start_height, g_msg.index_offset, parse_timestamp(g_msg.jailed_until), g_msg.tombstoned, g_msg.missed_blocks_counter);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.ValidatorSigningInfo` - defines a validator's signing info for monitoring their liveness activity.
 */
export const expandCosmosSlashingV1beta1ValidatorSigningInfo = ([sa_address, sg_start_height, sg_index_offset, a_jailed_until, b_tombstoned, sg_missed_blocks_counter]) => ({
    address: sa_address,
    start_height: sg_start_height,
    index_offset: sg_index_offset,
    jailed_until: expand_timestamp(a_jailed_until),
    tombstoned: !!b_tombstoned,
    missed_blocks_counter: sg_missed_blocks_counter,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QueryParamsRequest}
 */
export const condenseCosmosSlashingV1beta1QueryParamsRequest = (g_msg) => encodeCosmosSlashingV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method
 */
export const expandCosmosSlashingV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QueryParamsResponse}
 */
export const condenseCosmosSlashingV1beta1QueryParamsResponse = (g_msg) => encodeCosmosSlashingV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmosSlashingV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method
 */
export const expandCosmosSlashingV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmosSlashingV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QuerySigningInfoRequest}
 */
export const condenseCosmosSlashingV1beta1QuerySigningInfoRequest = (g_msg) => encodeCosmosSlashingV1beta1QuerySigningInfoRequest(g_msg.cons_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QuerySigningInfoRequest` - the request type for the Query/SigningInfo RPC method
 */
export const expandCosmosSlashingV1beta1QuerySigningInfoRequest = ([sa_cons]) => ({
    cons_address: sa_cons,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QuerySigningInfoResponse}
 */
export const condenseCosmosSlashingV1beta1QuerySigningInfoResponse = (g_msg) => encodeCosmosSlashingV1beta1QuerySigningInfoResponse(apply_opt(g_msg.val_signing_info, condenseCosmosSlashingV1beta1ValidatorSigningInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QuerySigningInfoResponse` - the response type for the Query/SigningInfo RPC method
 */
export const expandCosmosSlashingV1beta1QuerySigningInfoResponse = ([a_val_signing_info]) => ({
    val_signing_info: a_val_signing_info && expandCosmosSlashingV1beta1ValidatorSigningInfo(a_val_signing_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QuerySigningInfosRequest}
 */
export const condenseCosmosSlashingV1beta1QuerySigningInfosRequest = (g_msg) => encodeCosmosSlashingV1beta1QuerySigningInfosRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QuerySigningInfosRequest` - the request type for the Query/SigningInfos RPC method
 */
export const expandCosmosSlashingV1beta1QuerySigningInfosRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1QuerySigningInfosResponse}
 */
export const condenseCosmosSlashingV1beta1QuerySigningInfosResponse = (g_msg) => encodeCosmosSlashingV1beta1QuerySigningInfosResponse(map(g_msg.info, condenseCosmosSlashingV1beta1ValidatorSigningInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.QuerySigningInfosResponse` - the response type for the Query/SigningInfos RPC method
 */
export const expandCosmosSlashingV1beta1QuerySigningInfosResponse = ([a_info, a_pagination]) => ({
    info: a_info && map(a_info, expandCosmosSlashingV1beta1ValidatorSigningInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1GenesisState}
 */
export const condenseCosmosSlashingV1beta1GenesisState = (g_msg) => encodeCosmosSlashingV1beta1GenesisState(apply_opt(g_msg.params, condenseCosmosSlashingV1beta1Params), map(g_msg.signing_infos, condenseCosmosSlashingV1beta1SigningInfo), map(g_msg.missed_blocks, condenseCosmosSlashingV1beta1ValidatorMissedBlocks));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.GenesisState` - defines the slashing module's genesis state.
 */
export const expandCosmosSlashingV1beta1GenesisState = ([a_params, a_signing_infos, a_missed_blocks]) => ({
    params: a_params && expandCosmosSlashingV1beta1Params(a_params),
    signing_infos: a_signing_infos && map(a_signing_infos, expandCosmosSlashingV1beta1SigningInfo),
    missed_blocks: a_missed_blocks && map(a_missed_blocks, expandCosmosSlashingV1beta1ValidatorMissedBlocks),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1SigningInfo}
 */
export const condenseCosmosSlashingV1beta1SigningInfo = (g_msg) => encodeCosmosSlashingV1beta1SigningInfo(g_msg.address, apply_opt(g_msg.validator_signing_info, condenseCosmosSlashingV1beta1ValidatorSigningInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.SigningInfo` - stores validator signing info of corresponding address.
 */
export const expandCosmosSlashingV1beta1SigningInfo = ([sa_address, a_validator_signing_info]) => ({
    address: sa_address,
    validator_signing_info: a_validator_signing_info && expandCosmosSlashingV1beta1ValidatorSigningInfo(a_validator_signing_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1ValidatorMissedBlocks}
 */
export const condenseCosmosSlashingV1beta1ValidatorMissedBlocks = (g_msg) => encodeCosmosSlashingV1beta1ValidatorMissedBlocks(g_msg.address, map(g_msg.missed_blocks, condenseCosmosSlashingV1beta1MissedBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.ValidatorMissedBlocks` - contains array of missed blocks of corresponding address.
 */
export const expandCosmosSlashingV1beta1ValidatorMissedBlocks = ([sa_address, a_missed_blocks]) => ({
    address: sa_address,
    missed_blocks: a_missed_blocks && map(a_missed_blocks, expandCosmosSlashingV1beta1MissedBlock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosSlashingV1beta1MissedBlock}
 */
export const condenseCosmosSlashingV1beta1MissedBlock = (g_msg) => encodeCosmosSlashingV1beta1MissedBlock(g_msg.index, g_msg.missed);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.slashing.v1beta1.MissedBlock` - contains height and missed status as boolean.
 */
export const expandCosmosSlashingV1beta1MissedBlock = ([sg_index, b_missed]) => ({
    index: sg_index,
    missed: !!b_missed,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1AppOptionsRequest}
 */
export const condenseCosmosAutocliV1AppOptionsRequest = (g_msg) => encodeCosmosAutocliV1AppOptionsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.AppOptionsRequest` - the RemoteInfoService/AppOptions request type.
 */
export const expandCosmosAutocliV1AppOptionsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1AppOptionsResponse}
 */
export const condenseCosmosAutocliV1AppOptionsResponse = (g_msg) => encodeCosmosAutocliV1AppOptionsResponse(map(g_msg.module_options, condenseCosmosAutocliV1AppOptionsResponseModuleOptionsEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.AppOptionsResponse` - the RemoteInfoService/AppOptions response type.
 */
export const expandCosmosAutocliV1AppOptionsResponse = ([a_module_options]) => ({
    module_options: a_module_options && map(a_module_options, expandCosmosAutocliV1AppOptionsResponseModuleOptionsEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1AppOptionsResponseModuleOptionsEntry}
 */
export const condenseCosmosAutocliV1AppOptionsResponseModuleOptionsEntry = (g_msg) => encodeCosmosAutocliV1AppOptionsResponseModuleOptionsEntry(g_msg.key, apply_opt(g_msg.value, condenseCosmosAutocliV1ModuleOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.AppOptionsResponse.ModuleOptionsEntry` -
 */
export const expandCosmosAutocliV1AppOptionsResponseModuleOptionsEntry = ([s_key, a_value]) => ({
    key: s_key,
    value: a_value && expandCosmosAutocliV1ModuleOptions(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1ModuleOptions}
 */
export const condenseCosmosAutocliV1ModuleOptions = (g_msg) => encodeCosmosAutocliV1ModuleOptions(apply_opt(g_msg.tx, condenseCosmosAutocliV1ServiceCommandDescriptor), apply_opt(g_msg.query, condenseCosmosAutocliV1ServiceCommandDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.ModuleOptions` - describes the CLI options for a Cosmos SDK module.
 */
export const expandCosmosAutocliV1ModuleOptions = ([a_tx, a_query]) => ({
    tx: a_tx && expandCosmosAutocliV1ServiceCommandDescriptor(a_tx),
    query: a_query && expandCosmosAutocliV1ServiceCommandDescriptor(a_query),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1ServiceCommandDescriptor}
 */
export const condenseCosmosAutocliV1ServiceCommandDescriptor = (g_msg) => encodeCosmosAutocliV1ServiceCommandDescriptor(g_msg.service, map(g_msg.rpc_command_options, condenseCosmosAutocliV1RpcCommandOptions), map(g_msg.sub_commands, condenseCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry), g_msg.enhance_custom_command);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.ServiceCommandDescriptor` - describes a CLI command based on a protobuf service.
 */
export const expandCosmosAutocliV1ServiceCommandDescriptor = ([s_service, a_rpc_command_options, a_sub_commands, b_enhance_custom_command]) => ({
    service: s_service,
    rpc_command_options: a_rpc_command_options && map(a_rpc_command_options, expandCosmosAutocliV1RpcCommandOptions),
    sub_commands: a_sub_commands && map(a_sub_commands, expandCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry),
    enhance_custom_command: !!b_enhance_custom_command,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1RpcCommandOptions}
 */
export const condenseCosmosAutocliV1RpcCommandOptions = (g_msg) => encodeCosmosAutocliV1RpcCommandOptions(g_msg.rpc_method, g_msg.use, g_msg.long, g_msg.short, g_msg.example, g_msg.alias, g_msg.suggest_for, g_msg.deprecated, g_msg.version, map(g_msg.flag_options, condenseCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry), map(g_msg.positional_args, condenseCosmosAutocliV1PositionalArgDescriptor), g_msg.skip);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.RpcCommandOptions` - specifies options for commands generated from protobuf rpc methods.
 */
export const expandCosmosAutocliV1RpcCommandOptions = ([s_rpc_method, s_use, s_long, s_short, s_example, a_alias, a_suggest_fors, s_deprecated, s_version, a_flag_options, a_positional_args, b_skip]) => ({
    rpc_method: s_rpc_method,
    use: s_use,
    long: s_long,
    short: s_short,
    example: s_example,
    alias: a_alias,
    suggest_for: a_suggest_fors,
    deprecated: s_deprecated,
    version: s_version,
    flag_options: a_flag_options && map(a_flag_options, expandCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry),
    positional_args: a_positional_args && map(a_positional_args, expandCosmosAutocliV1PositionalArgDescriptor),
    skip: !!b_skip,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry}
 */
export const condenseCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry = (g_msg) => encodeCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry(g_msg.key, apply_opt(g_msg.value, condenseCosmosAutocliV1FlagOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.RpcCommandOptions.FlagOptionsEntry` -
 */
export const expandCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry = ([s_key, a_value]) => ({
    key: s_key,
    value: a_value && expandCosmosAutocliV1FlagOptions(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1FlagOptions}
 */
export const condenseCosmosAutocliV1FlagOptions = (g_msg) => encodeCosmosAutocliV1FlagOptions(g_msg.name, g_msg.shorthand, g_msg.usage, g_msg.default_value, g_msg.deprecated, g_msg.shorthand_deprecated, g_msg.hidden);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.FlagOptions` - options for flags generated from rpc request fields. By default, all request fields are configured as flags based on the kebab-case name of the field. Fields can be turned into positional arguments instead by using RpcCommandOptions.positional_args.
 */
export const expandCosmosAutocliV1FlagOptions = ([s_name, s_shorthand, s_usage, s_default_value, , s_deprecated, s_shorthand_deprecated, b_hidden]) => ({
    name: s_name,
    shorthand: s_shorthand,
    usage: s_usage,
    default_value: s_default_value,
    deprecated: s_deprecated,
    shorthand_deprecated: s_shorthand_deprecated,
    hidden: !!b_hidden,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1PositionalArgDescriptor}
 */
export const condenseCosmosAutocliV1PositionalArgDescriptor = (g_msg) => encodeCosmosAutocliV1PositionalArgDescriptor(g_msg.proto_field, g_msg.varargs, g_msg.optional);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.PositionalArgDescriptor` - describes a positional argument.
 */
export const expandCosmosAutocliV1PositionalArgDescriptor = ([s_proto_field, b_varargs, b_optional]) => ({
    proto_field: s_proto_field,
    varargs: !!b_varargs,
    optional: !!b_optional,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry}
 */
export const condenseCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry = (g_msg) => encodeCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry(g_msg.key, apply_opt(g_msg.value, condenseCosmosAutocliV1ServiceCommandDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.autocli.v1.ServiceCommandDescriptor.SubCommandsEntry` -
 */
export const expandCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry = ([s_key, a_value]) => ({
    key: s_key,
    value: a_value && expandCosmosAutocliV1ServiceCommandDescriptor(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1SimulationResponse}
 */
export const condenseCosmosBaseAbciV1beta1SimulationResponse = (g_msg) => encodeCosmosBaseAbciV1beta1SimulationResponse(apply_opt(g_msg.gas_info, condenseCosmosBaseAbciV1beta1GasInfo), apply_opt(g_msg.result, condenseCosmosBaseAbciV1beta1Result));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.SimulationResponse` - defines the response generated when a transaction is successfully simulated.
 */
export const expandCosmosBaseAbciV1beta1SimulationResponse = ([a_gas_info, a_result]) => ({
    gas_info: a_gas_info && expandCosmosBaseAbciV1beta1GasInfo(a_gas_info),
    result: a_result && expandCosmosBaseAbciV1beta1Result(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1MsgData}
 */
export const condenseCosmosBaseAbciV1beta1MsgData = (g_msg) => encodeCosmosBaseAbciV1beta1MsgData(g_msg.msg_type, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.MsgData` - defines the data returned in a Result object during message execution.
 */
export const expandCosmosBaseAbciV1beta1MsgData = ([s_msg_type, atu8_data]) => ({
    msg_type: s_msg_type,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1TxMsgData}
 */
export const condenseCosmosBaseAbciV1beta1TxMsgData = (g_msg) => encodeCosmosBaseAbciV1beta1TxMsgData(map(g_msg.data, condenseCosmosBaseAbciV1beta1MsgData), map(g_msg.msg_responses, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.TxMsgData` - defines a list of MsgData. A transaction will have a MsgData object for each message.
 */
export const expandCosmosBaseAbciV1beta1TxMsgData = ([a_data, a_msg_responses]) => ({
    data: a_data && map(a_data, expandCosmosBaseAbciV1beta1MsgData),
    msg_responses: a_msg_responses && map(a_msg_responses, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1SearchTxsResult}
 */
export const condenseCosmosBaseAbciV1beta1SearchTxsResult = (g_msg) => encodeCosmosBaseAbciV1beta1SearchTxsResult(g_msg.total_count, g_msg.count, g_msg.page_number, g_msg.page_total, g_msg.limit, map(g_msg.txs, condenseCosmosBaseAbciV1beta1TxResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.SearchTxsResult` - defines a structure for querying txs pageable
 */
export const expandCosmosBaseAbciV1beta1SearchTxsResult = ([sg_total_count, sg_count, sg_page_number, sg_page_total, sg_limit, a_txs]) => ({
    total_count: sg_total_count,
    count: sg_count,
    page_number: sg_page_number,
    page_total: sg_page_total,
    limit: sg_limit,
    txs: a_txs && map(a_txs, expandCosmosBaseAbciV1beta1TxResponse),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseAbciV1beta1SearchBlocksResult}
 */
export const condenseCosmosBaseAbciV1beta1SearchBlocksResult = (g_msg) => encodeCosmosBaseAbciV1beta1SearchBlocksResult(g_msg.total_count, g_msg.count, g_msg.page_number, g_msg.page_total, g_msg.limit, map(g_msg.blocks, condenseTendermintTypesBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.abci.v1beta1.SearchBlocksResult` - defines a structure for querying blocks pageable
 */
export const expandCosmosBaseAbciV1beta1SearchBlocksResult = ([sg_total_count, sg_count, sg_page_number, sg_page_total, sg_limit, a_blocks]) => ({
    total_count: sg_total_count,
    count: sg_count,
    page_number: sg_page_number,
    page_total: sg_page_total,
    limit: sg_limit,
    blocks: a_blocks && map(a_blocks, expandTendermintTypesBlock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1Block}
 */
export const condenseCosmosBaseTendermintV1beta1Block = (g_msg) => encodeCosmosBaseTendermintV1beta1Block(apply_opt(g_msg.header, condenseCosmosBaseTendermintV1beta1Header), apply_opt(g_msg.data, condenseTendermintTypesData), apply_opt(g_msg.evidence, condenseTendermintTypesEvidenceList), apply_opt(g_msg.last_commit, condenseTendermintTypesCommit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.Block` - tendermint type Block, with the Header proposer address field converted to bech32 string.
 */
export const expandCosmosBaseTendermintV1beta1Block = ([a_header, a_data, a_evidence, a_last_commit]) => ({
    header: a_header && expandCosmosBaseTendermintV1beta1Header(a_header),
    data: a_data && expandTendermintTypesData(a_data),
    evidence: a_evidence && expandTendermintTypesEvidenceList(a_evidence),
    last_commit: a_last_commit && expandTendermintTypesCommit(a_last_commit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1Header}
 */
export const condenseCosmosBaseTendermintV1beta1Header = (g_msg) => encodeCosmosBaseTendermintV1beta1Header(apply_opt(g_msg.version, condenseTendermintVersionConsensus), g_msg.chain_id, g_msg.height, parse_timestamp(g_msg.time), apply_opt(g_msg.last_block_id, condenseTendermintTypesBlockID), safe_base64_to_bytes(g_msg.last_commit_hash), safe_base64_to_bytes(g_msg.data_hash), safe_base64_to_bytes(g_msg.validators_hash), safe_base64_to_bytes(g_msg.next_validators_hash), safe_base64_to_bytes(g_msg.consensus_hash), safe_base64_to_bytes(g_msg.app_hash), safe_base64_to_bytes(g_msg.last_results_hash), safe_base64_to_bytes(g_msg.evidence_hash), g_msg.proposer_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.Header` - defines the structure of a Tendermint block header.
 */
export const expandCosmosBaseTendermintV1beta1Header = ([a_version, si_chain, sg_height, a_time, a_last_block_id, atu8_last_commit_hash, atu8_data_hash, atu8_validators_hash, atu8_next_validators_hash, atu8_consensus_hash, atu8_app_hash, atu8_last_results_hash, atu8_evidence_hash, sa_proposer]) => ({
    version: a_version && expandTendermintVersionConsensus(a_version),
    chain_id: si_chain,
    height: sg_height,
    time: expand_timestamp(a_time),
    last_block_id: a_last_block_id && expandTendermintTypesBlockID(a_last_block_id),
    last_commit_hash: safe_bytes_to_base64(atu8_last_commit_hash),
    data_hash: safe_bytes_to_base64(atu8_data_hash),
    validators_hash: safe_bytes_to_base64(atu8_validators_hash),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
    consensus_hash: safe_bytes_to_base64(atu8_consensus_hash),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
    last_results_hash: safe_bytes_to_base64(atu8_last_results_hash),
    evidence_hash: safe_bytes_to_base64(atu8_evidence_hash),
    proposer_address: sa_proposer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest(g_msg.height, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest` - the request type for the Query/GetValidatorSetByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest = ([sg_height, a_pagination]) => ({
    height: sg_height,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse(g_msg.block_height, map(g_msg.validators, condenseCosmosBaseTendermintV1beta1Validator), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse` - the response type for the Query/GetValidatorSetByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse = ([sg_block_height, a_validators, a_pagination]) => ({
    block_height: sg_block_height,
    validators: a_validators && map(a_validators, expandCosmosBaseTendermintV1beta1Validator),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1Validator}
 */
export const condenseCosmosBaseTendermintV1beta1Validator = (g_msg) => encodeCosmosBaseTendermintV1beta1Validator(g_msg.address, condenseJsonAny(g_msg.pub_key), g_msg.voting_power, g_msg.proposer_priority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.Validator` - the type for the validator-set.
 */
export const expandCosmosBaseTendermintV1beta1Validator = ([sa_address, a_pub_key, sg_voting_power, sg_proposer_priority]) => ({
    address: sa_address,
    pub_key: a_pub_key && expandJsonAny(a_pub_key),
    voting_power: sg_voting_power,
    proposer_priority: sg_proposer_priority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest` - the request type for the Query/GetValidatorSetByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse(g_msg.block_height, map(g_msg.validators, condenseCosmosBaseTendermintV1beta1Validator), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse` - the response type for the Query/GetValidatorSetByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse = ([sg_block_height, a_validators, a_pagination]) => ({
    block_height: sg_block_height,
    validators: a_validators && map(a_validators, expandCosmosBaseTendermintV1beta1Validator),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetBlockByHeightRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetBlockByHeightRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetBlockByHeightRequest(g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest` - the request type for the Query/GetBlockByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetBlockByHeightRequest = ([sg_height]) => ({
    height: sg_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetBlockByHeightResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetBlockByHeightResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetBlockByHeightResponse(apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), apply_opt(g_msg.block, condenseTendermintTypesBlock), apply_opt(g_msg.sdk_block, condenseCosmosBaseTendermintV1beta1Block));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse` - the response type for the Query/GetBlockByHeight RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetBlockByHeightResponse = ([a_block_id, a_block, a_sdk_block]) => ({
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    block: a_block && expandTendermintTypesBlock(a_block),
    sdk_block: a_sdk_block && expandCosmosBaseTendermintV1beta1Block(a_sdk_block),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetLatestBlockRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetLatestBlockRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetLatestBlockRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetLatestBlockRequest` - the request type for the Query/GetLatestBlock RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetLatestBlockRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetLatestBlockResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetLatestBlockResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetLatestBlockResponse(apply_opt(g_msg.block_id, condenseTendermintTypesBlockID), apply_opt(g_msg.block, condenseTendermintTypesBlock), apply_opt(g_msg.sdk_block, condenseCosmosBaseTendermintV1beta1Block));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetLatestBlockResponse` - the response type for the Query/GetLatestBlock RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetLatestBlockResponse = ([a_block_id, a_block, a_sdk_block]) => ({
    block_id: a_block_id && expandTendermintTypesBlockID(a_block_id),
    block: a_block && expandTendermintTypesBlock(a_block),
    sdk_block: a_sdk_block && expandCosmosBaseTendermintV1beta1Block(a_sdk_block),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetSyncingRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetSyncingRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetSyncingRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetSyncingRequest` - the request type for the Query/GetSyncing RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetSyncingRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetSyncingResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetSyncingResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetSyncingResponse(g_msg.syncing);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetSyncingResponse` - the response type for the Query/GetSyncing RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetSyncingResponse = ([b_syncing]) => ({
    syncing: !!b_syncing,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetNodeInfoRequest}
 */
export const condenseCosmosBaseTendermintV1beta1GetNodeInfoRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1GetNodeInfoRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetNodeInfoRequest` - the request type for the Query/GetNodeInfo RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetNodeInfoRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1GetNodeInfoResponse}
 */
export const condenseCosmosBaseTendermintV1beta1GetNodeInfoResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1GetNodeInfoResponse(apply_opt(g_msg.default_node_info, condenseTendermintP2pDefaultNodeInfo), apply_opt(g_msg.application_version, condenseCosmosBaseTendermintV1beta1VersionInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.GetNodeInfoResponse` - the response type for the Query/GetNodeInfo RPC method.
 */
export const expandCosmosBaseTendermintV1beta1GetNodeInfoResponse = ([a_default_node_info, a_application_version]) => ({
    default_node_info: a_default_node_info && expandTendermintP2pDefaultNodeInfo(a_default_node_info),
    application_version: a_application_version && expandCosmosBaseTendermintV1beta1VersionInfo(a_application_version),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1VersionInfo}
 */
export const condenseCosmosBaseTendermintV1beta1VersionInfo = (g_msg) => encodeCosmosBaseTendermintV1beta1VersionInfo(g_msg.name, g_msg.app_name, g_msg.version, g_msg.git_commit, g_msg.build_tags, g_msg.go_version, map(g_msg.build_deps, condenseCosmosBaseTendermintV1beta1Module), g_msg.cosmos_sdk_version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.VersionInfo` - the type for the GetNodeInfoResponse message.
 */
export const expandCosmosBaseTendermintV1beta1VersionInfo = ([s_name, s_app_name, s_version, s_git_commit, s_build_tags, s_go_version, a_build_deps, s_cosmos_sdk_version]) => ({
    name: s_name,
    app_name: s_app_name,
    version: s_version,
    git_commit: s_git_commit,
    build_tags: s_build_tags,
    go_version: s_go_version,
    build_deps: a_build_deps && map(a_build_deps, expandCosmosBaseTendermintV1beta1Module),
    cosmos_sdk_version: s_cosmos_sdk_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1Module}
 */
export const condenseCosmosBaseTendermintV1beta1Module = (g_msg) => encodeCosmosBaseTendermintV1beta1Module(g_msg.path, g_msg.version, g_msg.sum);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.Module` - the type for VersionInfo
 */
export const expandCosmosBaseTendermintV1beta1Module = ([s_path, s_version, s_sum]) => ({
    path: s_path,
    version: s_version,
    sum: s_sum,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1ABCIQueryRequest}
 */
export const condenseCosmosBaseTendermintV1beta1ABCIQueryRequest = (g_msg) => encodeCosmosBaseTendermintV1beta1ABCIQueryRequest(safe_base64_to_bytes(g_msg.data), g_msg.path, g_msg.height, g_msg.prove);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.ABCIQueryRequest` - defines the request structure for the ABCIQuery gRPC query.
 */
export const expandCosmosBaseTendermintV1beta1ABCIQueryRequest = ([atu8_data, s_path, sg_height, b_prove]) => ({
    data: safe_bytes_to_base64(atu8_data),
    path: s_path,
    height: sg_height,
    prove: !!b_prove,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1ABCIQueryResponse}
 */
export const condenseCosmosBaseTendermintV1beta1ABCIQueryResponse = (g_msg) => encodeCosmosBaseTendermintV1beta1ABCIQueryResponse(g_msg.code, g_msg.log, g_msg.info, g_msg.index, safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value), apply_opt(g_msg.proof_ops, condenseCosmosBaseTendermintV1beta1ProofOps), g_msg.height, g_msg.codespace);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.ABCIQueryResponse` - defines the response structure for the ABCIQuery gRPC query. Note: This type is a duplicate of the ResponseQuery proto type defined in Tendermint.
 */
export const expandCosmosBaseTendermintV1beta1ABCIQueryResponse = ([n_code, , s_log, s_info, sg_index, atu8_key, atu8_value, a_proof_ops, sg_height, s_codespace]) => ({
    code: n_code,
    log: s_log,
    info: s_info,
    index: sg_index,
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
    proof_ops: a_proof_ops && expandCosmosBaseTendermintV1beta1ProofOps(a_proof_ops),
    height: sg_height,
    codespace: s_codespace,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1ProofOps}
 */
export const condenseCosmosBaseTendermintV1beta1ProofOps = (g_msg) => encodeCosmosBaseTendermintV1beta1ProofOps(map(g_msg.ops, condenseCosmosBaseTendermintV1beta1ProofOp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.ProofOps` - Merkle proof defined by the list of ProofOps. Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
 */
export const expandCosmosBaseTendermintV1beta1ProofOps = ([a_ops]) => ({
    ops: a_ops && map(a_ops, expandCosmosBaseTendermintV1beta1ProofOp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseTendermintV1beta1ProofOp}
 */
export const condenseCosmosBaseTendermintV1beta1ProofOp = (g_msg) => encodeCosmosBaseTendermintV1beta1ProofOp(g_msg.type, safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.tendermint.v1beta1.ProofOp` - defines an operation used for calculating Merkle root. The data could be arbitrary format, providing necessary data for example neighbouring node hash. Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
 */
export const expandCosmosBaseTendermintV1beta1ProofOp = ([s_type, atu8_key, atu8_data]) => ({
    type: s_type,
    key: safe_bytes_to_base64(atu8_key),
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseNodeV1beta1ConfigRequest}
 */
export const condenseCosmosBaseNodeV1beta1ConfigRequest = (g_msg) => encodeCosmosBaseNodeV1beta1ConfigRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.node.v1beta1.ConfigRequest` - defines the request structure for the Config gRPC query.
 */
export const expandCosmosBaseNodeV1beta1ConfigRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseNodeV1beta1ConfigResponse}
 */
export const condenseCosmosBaseNodeV1beta1ConfigResponse = (g_msg) => encodeCosmosBaseNodeV1beta1ConfigResponse(g_msg.minimum_gas_price, g_msg.pruning_keep_recent, g_msg.pruning_interval);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.node.v1beta1.ConfigResponse` - defines the response structure for the Config gRPC query.
 */
export const expandCosmosBaseNodeV1beta1ConfigResponse = ([s_minimum_gas_price, s_pruning_keep_recent, s_pruning_interval]) => ({
    minimum_gas_price: s_minimum_gas_price,
    pruning_keep_recent: s_pruning_keep_recent,
    pruning_interval: s_pruning_interval,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseNodeV1beta1StatusRequest}
 */
export const condenseCosmosBaseNodeV1beta1StatusRequest = (g_msg) => encodeCosmosBaseNodeV1beta1StatusRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.node.v1beta1.StatusRequest` - StateRequest defines the request structure for the status of a node.
 */
export const expandCosmosBaseNodeV1beta1StatusRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseNodeV1beta1StatusResponse}
 */
export const condenseCosmosBaseNodeV1beta1StatusResponse = (g_msg) => encodeCosmosBaseNodeV1beta1StatusResponse(g_msg.earliest_store_height, g_msg.height, parse_timestamp(g_msg.timestamp), safe_base64_to_bytes(g_msg.app_hash), safe_base64_to_bytes(g_msg.validator_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.node.v1beta1.StatusResponse` - StateResponse defines the response structure for the status of a node.
 */
export const expandCosmosBaseNodeV1beta1StatusResponse = ([sg_earliest_store_height, sg_height, a_timestamp, atu8_app_hash, atu8_validator_hash]) => ({
    earliest_store_height: sg_earliest_store_height,
    height: sg_height,
    timestamp: expand_timestamp(a_timestamp),
    app_hash: safe_bytes_to_base64(atu8_app_hash),
    validator_hash: safe_bytes_to_base64(atu8_validator_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV1beta1ListAllInterfacesRequest}
 */
export const condenseCosmosBaseReflectionV1beta1ListAllInterfacesRequest = (g_msg) => encodeCosmosBaseReflectionV1beta1ListAllInterfacesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v1beta1.ListAllInterfacesRequest` - the request type of the ListAllInterfaces RPC.
 */
export const expandCosmosBaseReflectionV1beta1ListAllInterfacesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV1beta1ListAllInterfacesResponse}
 */
export const condenseCosmosBaseReflectionV1beta1ListAllInterfacesResponse = (g_msg) => encodeCosmosBaseReflectionV1beta1ListAllInterfacesResponse(g_msg.interface_names);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v1beta1.ListAllInterfacesResponse` - the response type of the ListAllInterfaces RPC.
 */
export const expandCosmosBaseReflectionV1beta1ListAllInterfacesResponse = ([a_interface_names]) => ({
    interface_names: a_interface_names,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV1beta1ListImplementationsRequest}
 */
export const condenseCosmosBaseReflectionV1beta1ListImplementationsRequest = (g_msg) => encodeCosmosBaseReflectionV1beta1ListImplementationsRequest(g_msg.interface_name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v1beta1.ListImplementationsRequest` - the request type of the ListImplementations RPC.
 */
export const expandCosmosBaseReflectionV1beta1ListImplementationsRequest = ([s_interface_name]) => ({
    interface_name: s_interface_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV1beta1ListImplementationsResponse}
 */
export const condenseCosmosBaseReflectionV1beta1ListImplementationsResponse = (g_msg) => encodeCosmosBaseReflectionV1beta1ListImplementationsResponse(g_msg.implementation_message_names);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v1beta1.ListImplementationsResponse` - the response type of the ListImplementations RPC.
 */
export const expandCosmosBaseReflectionV1beta1ListImplementationsResponse = ([a_implementation_message_names]) => ({
    implementation_message_names: a_implementation_message_names,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1AppDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1AppDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1AppDescriptor(apply_opt(g_msg.authn, condenseCosmosBaseReflectionV2alpha1AuthnDescriptor), apply_opt(g_msg.chain, condenseCosmosBaseReflectionV2alpha1ChainDescriptor), apply_opt(g_msg.codec, condenseCosmosBaseReflectionV2alpha1CodecDescriptor), apply_opt(g_msg.configuration, condenseCosmosBaseReflectionV2alpha1ConfigurationDescriptor), apply_opt(g_msg.query_services, condenseCosmosBaseReflectionV2alpha1QueryServicesDescriptor), apply_opt(g_msg.tx, condenseCosmosBaseReflectionV2alpha1TxDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.AppDescriptor` - describes a cosmos-sdk based application
 */
export const expandCosmosBaseReflectionV2alpha1AppDescriptor = ([a_authn, a_chain, a_codec, a_configuration, a_query_services, a_tx]) => ({
    authn: a_authn && expandCosmosBaseReflectionV2alpha1AuthnDescriptor(a_authn),
    chain: a_chain && expandCosmosBaseReflectionV2alpha1ChainDescriptor(a_chain),
    codec: a_codec && expandCosmosBaseReflectionV2alpha1CodecDescriptor(a_codec),
    configuration: a_configuration && expandCosmosBaseReflectionV2alpha1ConfigurationDescriptor(a_configuration),
    query_services: a_query_services && expandCosmosBaseReflectionV2alpha1QueryServicesDescriptor(a_query_services),
    tx: a_tx && expandCosmosBaseReflectionV2alpha1TxDescriptor(a_tx),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1AuthnDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1AuthnDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1AuthnDescriptor(map(g_msg.sign_modes, condenseCosmosBaseReflectionV2alpha1SigningModeDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.AuthnDescriptor` - provides information on how to sign transactions without relying on the online RPCs GetTxMetadata and CombineUnsignedTxAndSignatures
 */
export const expandCosmosBaseReflectionV2alpha1AuthnDescriptor = ([a_sign_modes]) => ({
    sign_modes: a_sign_modes && map(a_sign_modes, expandCosmosBaseReflectionV2alpha1SigningModeDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1SigningModeDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1SigningModeDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1SigningModeDescriptor(g_msg.name, g_msg.number, g_msg.authn_info_provider_method_fullname);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.SigningModeDescriptor` - provides information on a signing flow of the application NOTE(fdymylja): here we could go as far as providing an entire flow on how to sign a message given a SigningModeDescriptor, but it's better to think about this another time
 */
export const expandCosmosBaseReflectionV2alpha1SigningModeDescriptor = ([s_name, n_number, s_authn_info_provider_method_fullname]) => ({
    name: s_name,
    number: n_number,
    authn_info_provider_method_fullname: s_authn_info_provider_method_fullname,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1ChainDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1ChainDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1ChainDescriptor(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.ChainDescriptor` - describes chain information of the application
 */
export const expandCosmosBaseReflectionV2alpha1ChainDescriptor = ([s_id]) => ({
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1CodecDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1CodecDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1CodecDescriptor(map(g_msg.interfaces, condenseCosmosBaseReflectionV2alpha1InterfaceDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.CodecDescriptor` - describes the registered interfaces and provides metadata information on the types
 */
export const expandCosmosBaseReflectionV2alpha1CodecDescriptor = ([a_interfaces]) => ({
    interfaces: a_interfaces && map(a_interfaces, expandCosmosBaseReflectionV2alpha1InterfaceDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1InterfaceDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1InterfaceDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1InterfaceDescriptor(g_msg.fullname, map(g_msg.interface_accepting_messages, condenseCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor), map(g_msg.interface_implementers, condenseCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.InterfaceDescriptor` - describes the implementation of an interface
 */
export const expandCosmosBaseReflectionV2alpha1InterfaceDescriptor = ([s_fullname, a_interface_accepting_messages, a_interface_implementers]) => ({
    fullname: s_fullname,
    interface_accepting_messages: a_interface_accepting_messages && map(a_interface_accepting_messages, expandCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor),
    interface_implementers: a_interface_implementers && map(a_interface_implementers, expandCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor(g_msg.fullname, g_msg.field_descriptor_names);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor` - describes a protobuf message which contains an interface represented as a google.protobuf.Any
 */
export const expandCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor = ([s_fullname, a_field_descriptor_names]) => ({
    fullname: s_fullname,
    field_descriptor_names: a_field_descriptor_names,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor(g_msg.fullname, g_msg.type_url);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor` - describes an interface implementer
 */
export const expandCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor = ([s_fullname, s_type_url]) => ({
    fullname: s_fullname,
    type_url: s_type_url,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1ConfigurationDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1ConfigurationDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1ConfigurationDescriptor(g_msg.bech32_account_address_prefix);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.ConfigurationDescriptor` - contains metadata information on the sdk.Config
 */
export const expandCosmosBaseReflectionV2alpha1ConfigurationDescriptor = ([s_bech32_account_address_prefix]) => ({
    bech32_account_address_prefix: s_bech32_account_address_prefix,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1QueryServicesDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1QueryServicesDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1QueryServicesDescriptor(map(g_msg.query_services, condenseCosmosBaseReflectionV2alpha1QueryServiceDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.QueryServicesDescriptor` - contains the list of cosmos-sdk queriable services
 */
export const expandCosmosBaseReflectionV2alpha1QueryServicesDescriptor = ([a_query_services]) => ({
    query_services: a_query_services && map(a_query_services, expandCosmosBaseReflectionV2alpha1QueryServiceDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1QueryServiceDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1QueryServiceDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1QueryServiceDescriptor(g_msg.fullname, g_msg.is_module, map(g_msg.methods, condenseCosmosBaseReflectionV2alpha1QueryMethodDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.QueryServiceDescriptor` - describes a cosmos-sdk queryable service
 */
export const expandCosmosBaseReflectionV2alpha1QueryServiceDescriptor = ([s_fullname, b_is_module, a_methods]) => ({
    fullname: s_fullname,
    is_module: !!b_is_module,
    methods: a_methods && map(a_methods, expandCosmosBaseReflectionV2alpha1QueryMethodDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1QueryMethodDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1QueryMethodDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1QueryMethodDescriptor(g_msg.name, g_msg.full_query_path);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.QueryMethodDescriptor` - describes a queryable method of a query service no other info is provided beside method name and tendermint queryable path because it would be redundant with the grpc reflection service
 */
export const expandCosmosBaseReflectionV2alpha1QueryMethodDescriptor = ([s_name, s_full_query_path]) => ({
    name: s_name,
    full_query_path: s_full_query_path,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1TxDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1TxDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1TxDescriptor(g_msg.fullname, map(g_msg.msgs, condenseCosmosBaseReflectionV2alpha1MsgDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.TxDescriptor` - describes the accepted transaction type
 */
export const expandCosmosBaseReflectionV2alpha1TxDescriptor = ([s_fullname, a_msgs]) => ({
    fullname: s_fullname,
    msgs: a_msgs && map(a_msgs, expandCosmosBaseReflectionV2alpha1MsgDescriptor),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1MsgDescriptor}
 */
export const condenseCosmosBaseReflectionV2alpha1MsgDescriptor = (g_msg) => encodeCosmosBaseReflectionV2alpha1MsgDescriptor(g_msg.msg_type_url);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.MsgDescriptor` - describes a cosmos-sdk message that can be delivered with a transaction
 */
export const expandCosmosBaseReflectionV2alpha1MsgDescriptor = ([s_msg_type_url]) => ({
    msg_type_url: s_msg_type_url,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest` - the request used for the GetAuthnDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse(apply_opt(g_msg.authn, condenseCosmosBaseReflectionV2alpha1AuthnDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse` - the response returned by the GetAuthnDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse = ([a_authn]) => ({
    authn: a_authn && expandCosmosBaseReflectionV2alpha1AuthnDescriptor(a_authn),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetChainDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetChainDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetChainDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest` - the request used for the GetChainDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetChainDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetChainDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetChainDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetChainDescriptorResponse(apply_opt(g_msg.chain, condenseCosmosBaseReflectionV2alpha1ChainDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse` - the response returned by the GetChainDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetChainDescriptorResponse = ([a_chain]) => ({
    chain: a_chain && expandCosmosBaseReflectionV2alpha1ChainDescriptor(a_chain),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest` - the request used for the GetCodecDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse(apply_opt(g_msg.codec, condenseCosmosBaseReflectionV2alpha1CodecDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse` - the response returned by the GetCodecDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse = ([a_codec]) => ({
    codec: a_codec && expandCosmosBaseReflectionV2alpha1CodecDescriptor(a_codec),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest` - the request used for the GetConfigurationDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse(apply_opt(g_msg.config, condenseCosmosBaseReflectionV2alpha1ConfigurationDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse` - the response returned by the GetConfigurationDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse = ([a_config]) => ({
    config: a_config && expandCosmosBaseReflectionV2alpha1ConfigurationDescriptor(a_config),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest` - the request used for the GetQueryServicesDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse(apply_opt(g_msg.queries, condenseCosmosBaseReflectionV2alpha1QueryServicesDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse` - the response returned by the GetQueryServicesDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse = ([a_queries]) => ({
    queries: a_queries && expandCosmosBaseReflectionV2alpha1QueryServicesDescriptor(a_queries),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetTxDescriptorRequest}
 */
export const condenseCosmosBaseReflectionV2alpha1GetTxDescriptorRequest = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetTxDescriptorRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest` - the request used for the GetTxDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetTxDescriptorRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosBaseReflectionV2alpha1GetTxDescriptorResponse}
 */
export const condenseCosmosBaseReflectionV2alpha1GetTxDescriptorResponse = (g_msg) => encodeCosmosBaseReflectionV2alpha1GetTxDescriptorResponse(apply_opt(g_msg.tx, condenseCosmosBaseReflectionV2alpha1TxDescriptor));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse` - the response returned by the GetTxDescriptor RPC
 */
export const expandCosmosBaseReflectionV2alpha1GetTxDescriptorResponse = ([a_tx]) => ({
    tx: a_tx && expandCosmosBaseReflectionV2alpha1TxDescriptor(a_tx),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1Snapshot}
 */
export const condenseCosmosStoreSnapshotsV1Snapshot = (g_msg) => encodeCosmosStoreSnapshotsV1Snapshot(g_msg.height, g_msg.format, g_msg.chunks, safe_base64_to_bytes(g_msg.hash), apply_opt(g_msg.metadata, condenseCosmosStoreSnapshotsV1Metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.Snapshot` - contains Tendermint state sync snapshot info.
 */
export const expandCosmosStoreSnapshotsV1Snapshot = ([sg_height, n_format, n_chunks, atu8_hash, a_metadata]) => ({
    height: sg_height,
    format: n_format,
    chunks: n_chunks,
    hash: safe_bytes_to_base64(atu8_hash),
    metadata: a_metadata && expandCosmosStoreSnapshotsV1Metadata(a_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1Metadata}
 */
export const condenseCosmosStoreSnapshotsV1Metadata = (g_msg) => encodeCosmosStoreSnapshotsV1Metadata(map(g_msg.chunk_hashes, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.Metadata` - contains SDK-specific snapshot metadata.
 */
export const expandCosmosStoreSnapshotsV1Metadata = ([a_chunk_hashes]) => ({
    chunk_hashes: map(a_chunk_hashes, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1SnapshotItem}
 */
export const condenseCosmosStoreSnapshotsV1SnapshotItem = (g_msg) => encodeCosmosStoreSnapshotsV1SnapshotItem(apply_opt(g_msg.store, condenseCosmosStoreSnapshotsV1SnapshotStoreItem), apply_opt(g_msg.iavl, condenseCosmosStoreSnapshotsV1SnapshotIAVLItem), apply_opt(g_msg.extension, condenseCosmosStoreSnapshotsV1SnapshotExtensionMeta), apply_opt(g_msg.extension_payload, condenseCosmosStoreSnapshotsV1SnapshotExtensionPayload));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.SnapshotItem` - an item contained in a rootmulti.Store snapshot. Since: cosmos-sdk 0.46
 */
export const expandCosmosStoreSnapshotsV1SnapshotItem = ([a_store, a_iavl, a_extension, a_extension_payload]) => ({
    store: a_store && expandCosmosStoreSnapshotsV1SnapshotStoreItem(a_store),
    iavl: a_iavl && expandCosmosStoreSnapshotsV1SnapshotIAVLItem(a_iavl),
    extension: a_extension && expandCosmosStoreSnapshotsV1SnapshotExtensionMeta(a_extension),
    extension_payload: a_extension_payload && expandCosmosStoreSnapshotsV1SnapshotExtensionPayload(a_extension_payload),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1SnapshotStoreItem}
 */
export const condenseCosmosStoreSnapshotsV1SnapshotStoreItem = (g_msg) => encodeCosmosStoreSnapshotsV1SnapshotStoreItem(g_msg.name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.SnapshotStoreItem` - contains metadata about a snapshotted store. Since: cosmos-sdk 0.46
 */
export const expandCosmosStoreSnapshotsV1SnapshotStoreItem = ([s_name]) => ({
    name: s_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1SnapshotIAVLItem}
 */
export const condenseCosmosStoreSnapshotsV1SnapshotIAVLItem = (g_msg) => encodeCosmosStoreSnapshotsV1SnapshotIAVLItem(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value), g_msg.version, g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.SnapshotIAVLItem` - an exported IAVL node. Since: cosmos-sdk 0.46
 */
export const expandCosmosStoreSnapshotsV1SnapshotIAVLItem = ([atu8_key, atu8_value, sg_version, n_height]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
    version: sg_version,
    height: n_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1SnapshotExtensionMeta}
 */
export const condenseCosmosStoreSnapshotsV1SnapshotExtensionMeta = (g_msg) => encodeCosmosStoreSnapshotsV1SnapshotExtensionMeta(g_msg.name, g_msg.format);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.SnapshotExtensionMeta` - contains metadata about an external snapshotter. Since: cosmos-sdk 0.46
 */
export const expandCosmosStoreSnapshotsV1SnapshotExtensionMeta = ([s_name, n_format]) => ({
    name: s_name,
    format: n_format,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreSnapshotsV1SnapshotExtensionPayload}
 */
export const condenseCosmosStoreSnapshotsV1SnapshotExtensionPayload = (g_msg) => encodeCosmosStoreSnapshotsV1SnapshotExtensionPayload(safe_base64_to_bytes(g_msg.payload));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.snapshots.v1.SnapshotExtensionPayload` - contains payloads of an external snapshotter. Since: cosmos-sdk 0.46
 */
export const expandCosmosStoreSnapshotsV1SnapshotExtensionPayload = ([atu8_payload]) => ({
    payload: safe_bytes_to_base64(atu8_payload),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreInternalKvV1beta1Pairs}
 */
export const condenseCosmosStoreInternalKvV1beta1Pairs = (g_msg) => encodeCosmosStoreInternalKvV1beta1Pairs(map(g_msg.pairs, condenseCosmosStoreInternalKvV1beta1Pair));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.internal.kv.v1beta1.Pairs` - defines a repeated slice of Pair objects.
 */
export const expandCosmosStoreInternalKvV1beta1Pairs = ([a_pairs]) => ({
    pairs: a_pairs && map(a_pairs, expandCosmosStoreInternalKvV1beta1Pair),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreInternalKvV1beta1Pair}
 */
export const condenseCosmosStoreInternalKvV1beta1Pair = (g_msg) => encodeCosmosStoreInternalKvV1beta1Pair(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.internal.kv.v1beta1.Pair` - defines a key/value bytes tuple.
 */
export const expandCosmosStoreInternalKvV1beta1Pair = ([atu8_key, atu8_value]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreStreamingAbciListenFinalizeBlockRequest}
 */
export const condenseCosmosStoreStreamingAbciListenFinalizeBlockRequest = (g_msg) => encodeCosmosStoreStreamingAbciListenFinalizeBlockRequest(apply_opt(g_msg.req, condenseTendermintAbciRequestFinalizeBlock), apply_opt(g_msg.res, condenseTendermintAbciResponseFinalizeBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.streaming.abci.ListenFinalizeBlockRequest` - ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 */
export const expandCosmosStoreStreamingAbciListenFinalizeBlockRequest = ([a_req, a_res]) => ({
    req: a_req && expandTendermintAbciRequestFinalizeBlock(a_req),
    res: a_res && expandTendermintAbciResponseFinalizeBlock(a_res),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreStreamingAbciListenFinalizeBlockResponse}
 */
export const condenseCosmosStoreStreamingAbciListenFinalizeBlockResponse = (g_msg) => encodeCosmosStoreStreamingAbciListenFinalizeBlockResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.streaming.abci.ListenFinalizeBlockResponse` - ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 */
export const expandCosmosStoreStreamingAbciListenFinalizeBlockResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreStreamingAbciListenCommitRequest}
 */
export const condenseCosmosStoreStreamingAbciListenCommitRequest = (g_msg) => encodeCosmosStoreStreamingAbciListenCommitRequest(g_msg.block_height, apply_opt(g_msg.res, condenseTendermintAbciResponseCommit), map(g_msg.change_set, condenseCosmosStoreV1beta1StoreKVPair));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.streaming.abci.ListenCommitRequest` - the request type for the ListenCommit RPC method
 */
export const expandCosmosStoreStreamingAbciListenCommitRequest = ([sg_block_height, a_res, a_change_set]) => ({
    block_height: sg_block_height,
    res: a_res && expandTendermintAbciResponseCommit(a_res),
    change_set: a_change_set && map(a_change_set, expandCosmosStoreV1beta1StoreKVPair),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreV1beta1StoreKVPair}
 */
export const condenseCosmosStoreV1beta1StoreKVPair = (g_msg) => encodeCosmosStoreV1beta1StoreKVPair(g_msg.store_key, g_msg.delete, safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.v1beta1.StoreKVPair` - a KVStore KVPair used for listening to state changes (Sets and Deletes) It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and Deletes Since: cosmos-sdk 0.43
 */
export const expandCosmosStoreV1beta1StoreKVPair = ([s_store_key, b_delete, atu8_key, atu8_value]) => ({
    store_key: s_store_key,
    delete: !!b_delete,
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreStreamingAbciListenCommitResponse}
 */
export const condenseCosmosStoreStreamingAbciListenCommitResponse = (g_msg) => encodeCosmosStoreStreamingAbciListenCommitResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.streaming.abci.ListenCommitResponse` - the response type for the ListenCommit RPC method
 */
export const expandCosmosStoreStreamingAbciListenCommitResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreV1beta1CommitInfo}
 */
export const condenseCosmosStoreV1beta1CommitInfo = (g_msg) => encodeCosmosStoreV1beta1CommitInfo(g_msg.version, map(g_msg.store_infos, condenseCosmosStoreV1beta1StoreInfo), parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.v1beta1.CommitInfo` - defines commit information used by the multi-store when committing a version/height.
 */
export const expandCosmosStoreV1beta1CommitInfo = ([sg_version, a_store_infos, a_timestamp]) => ({
    version: sg_version,
    store_infos: a_store_infos && map(a_store_infos, expandCosmosStoreV1beta1StoreInfo),
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreV1beta1StoreInfo}
 */
export const condenseCosmosStoreV1beta1StoreInfo = (g_msg) => encodeCosmosStoreV1beta1StoreInfo(g_msg.name, apply_opt(g_msg.commit_id, condenseCosmosStoreV1beta1CommitID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.v1beta1.StoreInfo` - defines store-specific commit information. It contains a reference between a store name and the commit ID.
 */
export const expandCosmosStoreV1beta1StoreInfo = ([s_name, a_commit_id]) => ({
    name: s_name,
    commit_id: a_commit_id && expandCosmosStoreV1beta1CommitID(a_commit_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreV1beta1CommitID}
 */
export const condenseCosmosStoreV1beta1CommitID = (g_msg) => encodeCosmosStoreV1beta1CommitID(g_msg.version, safe_base64_to_bytes(g_msg.hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.v1beta1.CommitID` - defines the commitment information when a specific store is committed.
 */
export const expandCosmosStoreV1beta1CommitID = ([sg_version, atu8_hash]) => ({
    version: sg_version,
    hash: safe_bytes_to_base64(atu8_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosStoreV1beta1BlockMetadata}
 */
export const condenseCosmosStoreV1beta1BlockMetadata = (g_msg) => encodeCosmosStoreV1beta1BlockMetadata(apply_opt(g_msg.response_commit, condenseTendermintAbciResponseCommit), apply_opt(g_msg.request_finalize_block, condenseTendermintAbciRequestFinalizeBlock), apply_opt(g_msg.response_finalize_block, condenseTendermintAbciResponseFinalizeBlock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.store.v1beta1.BlockMetadata` - contains all the abci event data of a block the file streamer dump them into files together with the state changes.
 */
export const expandCosmosStoreV1beta1BlockMetadata = ([, , , , , a_response_commit, a_request_finalize_block, a_response_finalize_block]) => ({
    response_commit: a_response_commit && expandTendermintAbciResponseCommit(a_response_commit),
    request_finalize_block: a_request_finalize_block && expandTendermintAbciRequestFinalizeBlock(a_request_finalize_block),
    response_finalize_block: a_response_finalize_block && expandTendermintAbciResponseFinalizeBlock(a_response_finalize_block),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgSubmitProposal}
 */
export const condenseCosmosGovV1MsgSubmitProposal = (g_msg) => encodeCosmosGovV1MsgSubmitProposal(map(g_msg.messages, condenseJsonAny), map(g_msg.initial_deposit, slimify_coin), g_msg.proposer, g_msg.metadata, g_msg.title, g_msg.summary, g_msg.expedited);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgSubmitProposal` - defines an sdk.Msg type that supports submitting arbitrary proposal Content.
 */
export const expandCosmosGovV1MsgSubmitProposal = ([a_messages, a_initial_deposit, s_proposer, s_metadata, s_title, s_summary, b_expedited]) => ({
    messages: a_messages && map(a_messages, expandJsonAny),
    initial_deposit: a_initial_deposit && map(a_initial_deposit, expand_coin),
    proposer: s_proposer,
    metadata: s_metadata,
    title: s_title,
    summary: s_summary,
    expedited: !!b_expedited,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgSubmitProposalResponse}
 */
export const condenseCosmosGovV1MsgSubmitProposalResponse = (g_msg) => encodeCosmosGovV1MsgSubmitProposalResponse(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgSubmitProposalResponse` - defines the Msg/SubmitProposal response type.
 */
export const expandCosmosGovV1MsgSubmitProposalResponse = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgExecLegacyContent}
 */
export const condenseCosmosGovV1MsgExecLegacyContent = (g_msg) => encodeCosmosGovV1MsgExecLegacyContent(condenseJsonAny(g_msg.content), g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgExecLegacyContent` - used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 */
export const expandCosmosGovV1MsgExecLegacyContent = ([a_content, s_authority]) => ({
    content: a_content && expandJsonAny(a_content),
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgExecLegacyContentResponse}
 */
export const condenseCosmosGovV1MsgExecLegacyContentResponse = (g_msg) => encodeCosmosGovV1MsgExecLegacyContentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgExecLegacyContentResponse` - defines the Msg/ExecLegacyContent response type.
 */
export const expandCosmosGovV1MsgExecLegacyContentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgVote}
 */
export const condenseCosmosGovV1MsgVote = (g_msg) => encodeCosmosGovV1MsgVote(g_msg.proposal_id, g_msg.voter, JsonToProtoEnumCosmosGovV1VoteOption[g_msg.option], g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgVote` - defines a message to cast a vote.
 */
export const expandCosmosGovV1MsgVote = ([sg_proposal_id, sa_voter, xc_option, s_metadata]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGovV1VoteOption[xc_option] : __UNDEFINED,
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgVoteResponse}
 */
export const condenseCosmosGovV1MsgVoteResponse = (g_msg) => encodeCosmosGovV1MsgVoteResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgVoteResponse` - defines the Msg/Vote response type.
 */
export const expandCosmosGovV1MsgVoteResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgVoteWeighted}
 */
export const condenseCosmosGovV1MsgVoteWeighted = (g_msg) => encodeCosmosGovV1MsgVoteWeighted(g_msg.proposal_id, g_msg.voter, map(g_msg.options, condenseCosmosGovV1WeightedVoteOption), g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgVoteWeighted` - defines a message to cast a vote.
 */
export const expandCosmosGovV1MsgVoteWeighted = ([sg_proposal_id, sa_voter, a_options, s_metadata]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    options: a_options && map(a_options, expandCosmosGovV1WeightedVoteOption),
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1WeightedVoteOption}
 */
export const condenseCosmosGovV1WeightedVoteOption = (g_msg) => encodeCosmosGovV1WeightedVoteOption(JsonToProtoEnumCosmosGovV1VoteOption[g_msg.option], g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.WeightedVoteOption` - defines a unit of vote for vote split.
 */
export const expandCosmosGovV1WeightedVoteOption = ([xc_option, s_weight]) => ({
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGovV1VoteOption[xc_option] : __UNDEFINED,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgVoteWeightedResponse}
 */
export const condenseCosmosGovV1MsgVoteWeightedResponse = (g_msg) => encodeCosmosGovV1MsgVoteWeightedResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgVoteWeightedResponse` - defines the Msg/VoteWeighted response type.
 */
export const expandCosmosGovV1MsgVoteWeightedResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgDeposit}
 */
export const condenseCosmosGovV1MsgDeposit = (g_msg) => encodeCosmosGovV1MsgDeposit(g_msg.proposal_id, g_msg.depositor, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgDeposit` - defines a message to submit a deposit to an existing proposal.
 */
export const expandCosmosGovV1MsgDeposit = ([sg_proposal_id, sa_depositor, a_amount]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgDepositResponse}
 */
export const condenseCosmosGovV1MsgDepositResponse = (g_msg) => encodeCosmosGovV1MsgDepositResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgDepositResponse` - defines the Msg/Deposit response type.
 */
export const expandCosmosGovV1MsgDepositResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgUpdateParams}
 */
export const condenseCosmosGovV1MsgUpdateParams = (g_msg) => encodeCosmosGovV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmosGovV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandCosmosGovV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmosGovV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1Params}
 */
export const condenseCosmosGovV1Params = (g_msg) => encodeCosmosGovV1Params(map(g_msg.min_deposit, slimify_coin), parse_duration(g_msg.max_deposit_period), parse_duration(g_msg.voting_period), g_msg.quorum, g_msg.threshold, g_msg.veto_threshold, g_msg.min_initial_deposit_ratio, g_msg.proposal_cancel_ratio, g_msg.proposal_cancel_dest, parse_duration(g_msg.expedited_voting_period), g_msg.expedited_threshold, map(g_msg.expedited_min_deposit, slimify_coin), g_msg.burn_vote_quorum, g_msg.burn_proposal_deposit_prevote, g_msg.burn_vote_veto);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.Params` - defines the parameters for the x/gov module. Since: cosmos-sdk 0.47
 */
export const expandCosmosGovV1Params = ([a_min_deposit, a_max_deposit_period, a_voting_period, s_quorum, s_threshold, s_veto_threshold, s_min_initial_deposit_ratio, s_proposal_cancel_ratio, s_proposal_cancel_dest, a_expedited_voting_period, s_expedited_threshold, a_expedited_min_deposit, b_burn_vote_quorum, b_burn_proposal_deposit_prevote, b_burn_vote_veto]) => ({
    min_deposit: a_min_deposit && map(a_min_deposit, expand_coin),
    max_deposit_period: expand_duration(a_max_deposit_period),
    voting_period: expand_duration(a_voting_period),
    quorum: s_quorum,
    threshold: s_threshold,
    veto_threshold: s_veto_threshold,
    min_initial_deposit_ratio: s_min_initial_deposit_ratio,
    proposal_cancel_ratio: s_proposal_cancel_ratio,
    proposal_cancel_dest: s_proposal_cancel_dest,
    expedited_voting_period: expand_duration(a_expedited_voting_period),
    expedited_threshold: s_expedited_threshold,
    expedited_min_deposit: a_expedited_min_deposit && map(a_expedited_min_deposit, expand_coin),
    burn_vote_quorum: !!b_burn_vote_quorum,
    burn_proposal_deposit_prevote: !!b_burn_proposal_deposit_prevote,
    burn_vote_veto: !!b_burn_vote_veto,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgUpdateParamsResponse}
 */
export const condenseCosmosGovV1MsgUpdateParamsResponse = (g_msg) => encodeCosmosGovV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandCosmosGovV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgCancelProposal}
 */
export const condenseCosmosGovV1MsgCancelProposal = (g_msg) => encodeCosmosGovV1MsgCancelProposal(g_msg.proposal_id, g_msg.proposer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgCancelProposal` - the Msg/CancelProposal request type. Since: cosmos-sdk 0.50
 */
export const expandCosmosGovV1MsgCancelProposal = ([sg_proposal_id, s_proposer]) => ({
    proposal_id: sg_proposal_id,
    proposer: s_proposer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1MsgCancelProposalResponse}
 */
export const condenseCosmosGovV1MsgCancelProposalResponse = (g_msg) => encodeCosmosGovV1MsgCancelProposalResponse(g_msg.proposal_id, parse_timestamp(g_msg.canceled_time), g_msg.canceled_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.MsgCancelProposalResponse` - defines the response structure for executing a MsgCancelProposal message. Since: cosmos-sdk 0.50
 */
export const expandCosmosGovV1MsgCancelProposalResponse = ([sg_proposal_id, a_canceled_time, sg_canceled_height]) => ({
    proposal_id: sg_proposal_id,
    canceled_time: expand_timestamp(a_canceled_time),
    canceled_height: sg_canceled_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1Deposit}
 */
export const condenseCosmosGovV1Deposit = (g_msg) => encodeCosmosGovV1Deposit(g_msg.proposal_id, g_msg.depositor, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.Deposit` - defines an amount deposited by an account address to an active proposal.
 */
export const expandCosmosGovV1Deposit = ([sg_proposal_id, sa_depositor, a_amount]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1Proposal}
 */
export const condenseCosmosGovV1Proposal = (g_msg) => encodeCosmosGovV1Proposal(g_msg.id, map(g_msg.messages, condenseJsonAny), JsonToProtoEnumCosmosGovV1ProposalStatus[g_msg.status], apply_opt(g_msg.final_tally_result, condenseCosmosGovV1TallyResult), parse_timestamp(g_msg.submit_time), parse_timestamp(g_msg.deposit_end_time), map(g_msg.total_deposit, slimify_coin), parse_timestamp(g_msg.voting_start_time), parse_timestamp(g_msg.voting_end_time), g_msg.metadata, g_msg.title, g_msg.summary, g_msg.proposer, g_msg.expedited, g_msg.failed_reason);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.Proposal` - defines the core field members of a governance proposal.
 */
export const expandCosmosGovV1Proposal = ([sg_id, a_messages, xc_status, a_final_tally_result, a_submit_time, a_deposit_end_time, a_total_deposit, a_voting_start_time, a_voting_end_time, s_metadata, s_title, s_summary, s_proposer, b_expedited, s_failed_reason]) => ({
    id: sg_id,
    messages: a_messages && map(a_messages, expandJsonAny),
    status: xc_status >= 0 ? ProtoToJsonEnumCosmosGovV1ProposalStatus[xc_status] : __UNDEFINED,
    final_tally_result: a_final_tally_result && expandCosmosGovV1TallyResult(a_final_tally_result),
    submit_time: expand_timestamp(a_submit_time),
    deposit_end_time: expand_timestamp(a_deposit_end_time),
    total_deposit: a_total_deposit && map(a_total_deposit, expand_coin),
    voting_start_time: expand_timestamp(a_voting_start_time),
    voting_end_time: expand_timestamp(a_voting_end_time),
    metadata: s_metadata,
    title: s_title,
    summary: s_summary,
    proposer: s_proposer,
    expedited: !!b_expedited,
    failed_reason: s_failed_reason,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1TallyResult}
 */
export const condenseCosmosGovV1TallyResult = (g_msg) => encodeCosmosGovV1TallyResult(g_msg.yes_count, g_msg.abstain_count, g_msg.no_count, g_msg.no_with_veto_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.TallyResult` - defines a standard tally for a governance proposal.
 */
export const expandCosmosGovV1TallyResult = ([s_yes_count, s_abstain_count, s_no_count, s_no_with_veto_count]) => ({
    yes_count: s_yes_count,
    abstain_count: s_abstain_count,
    no_count: s_no_count,
    no_with_veto_count: s_no_with_veto_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1Vote}
 */
export const condenseCosmosGovV1Vote = (g_msg) => encodeCosmosGovV1Vote(g_msg.proposal_id, g_msg.voter, map(g_msg.options, condenseCosmosGovV1WeightedVoteOption), g_msg.metadata);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.Vote` - defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.
 */
export const expandCosmosGovV1Vote = ([sg_proposal_id, sa_voter, , a_options, s_metadata]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    options: a_options && map(a_options, expandCosmosGovV1WeightedVoteOption),
    metadata: s_metadata,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1DepositParams}
 */
export const condenseCosmosGovV1DepositParams = (g_msg) => encodeCosmosGovV1DepositParams(map(g_msg.min_deposit, slimify_coin), parse_duration(g_msg.max_deposit_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.DepositParams` - defines the params for deposits on governance proposals.
 */
export const expandCosmosGovV1DepositParams = ([a_min_deposit, a_max_deposit_period]) => ({
    min_deposit: a_min_deposit && map(a_min_deposit, expand_coin),
    max_deposit_period: expand_duration(a_max_deposit_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1VotingParams}
 */
export const condenseCosmosGovV1VotingParams = (g_msg) => encodeCosmosGovV1VotingParams(parse_duration(g_msg.voting_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.VotingParams` - defines the params for voting on governance proposals.
 */
export const expandCosmosGovV1VotingParams = ([a_voting_period]) => ({
    voting_period: expand_duration(a_voting_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1TallyParams}
 */
export const condenseCosmosGovV1TallyParams = (g_msg) => encodeCosmosGovV1TallyParams(g_msg.quorum, g_msg.threshold, g_msg.veto_threshold);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.TallyParams` - defines the params for tallying votes on governance proposals.
 */
export const expandCosmosGovV1TallyParams = ([s_quorum, s_threshold, s_veto_threshold]) => ({
    quorum: s_quorum,
    threshold: s_threshold,
    veto_threshold: s_veto_threshold,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryConstitutionRequest}
 */
export const condenseCosmosGovV1QueryConstitutionRequest = (g_msg) => encodeCosmosGovV1QueryConstitutionRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryConstitutionRequest` - the request type for the Query/Constitution RPC method
 */
export const expandCosmosGovV1QueryConstitutionRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryConstitutionResponse}
 */
export const condenseCosmosGovV1QueryConstitutionResponse = (g_msg) => encodeCosmosGovV1QueryConstitutionResponse(g_msg.constitution);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryConstitutionResponse` - the response type for the Query/Constitution RPC method
 */
export const expandCosmosGovV1QueryConstitutionResponse = ([s_constitution]) => ({
    constitution: s_constitution,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryProposalRequest}
 */
export const condenseCosmosGovV1QueryProposalRequest = (g_msg) => encodeCosmosGovV1QueryProposalRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryProposalRequest` - the request type for the Query/Proposal RPC method.
 */
export const expandCosmosGovV1QueryProposalRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryProposalResponse}
 */
export const condenseCosmosGovV1QueryProposalResponse = (g_msg) => encodeCosmosGovV1QueryProposalResponse(apply_opt(g_msg.proposal, condenseCosmosGovV1Proposal));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryProposalResponse` - the response type for the Query/Proposal RPC method.
 */
export const expandCosmosGovV1QueryProposalResponse = ([a_proposal]) => ({
    proposal: a_proposal && expandCosmosGovV1Proposal(a_proposal),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryProposalsRequest}
 */
export const condenseCosmosGovV1QueryProposalsRequest = (g_msg) => encodeCosmosGovV1QueryProposalsRequest(JsonToProtoEnumCosmosGovV1ProposalStatus[g_msg.proposal_status], g_msg.voter, g_msg.depositor, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryProposalsRequest` - the request type for the Query/Proposals RPC method.
 */
export const expandCosmosGovV1QueryProposalsRequest = ([xc_proposal_status, sa_voter, sa_depositor, a_pagination]) => ({
    proposal_status: xc_proposal_status >= 0 ? ProtoToJsonEnumCosmosGovV1ProposalStatus[xc_proposal_status] : __UNDEFINED,
    voter: sa_voter,
    depositor: sa_depositor,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryProposalsResponse}
 */
export const condenseCosmosGovV1QueryProposalsResponse = (g_msg) => encodeCosmosGovV1QueryProposalsResponse(map(g_msg.proposals, condenseCosmosGovV1Proposal), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryProposalsResponse` - the response type for the Query/Proposals RPC method.
 */
export const expandCosmosGovV1QueryProposalsResponse = ([a_proposals, a_pagination]) => ({
    proposals: a_proposals && map(a_proposals, expandCosmosGovV1Proposal),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryVoteRequest}
 */
export const condenseCosmosGovV1QueryVoteRequest = (g_msg) => encodeCosmosGovV1QueryVoteRequest(g_msg.proposal_id, g_msg.voter);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryVoteRequest` - the request type for the Query/Vote RPC method.
 */
export const expandCosmosGovV1QueryVoteRequest = ([sg_proposal_id, sa_voter]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryVoteResponse}
 */
export const condenseCosmosGovV1QueryVoteResponse = (g_msg) => encodeCosmosGovV1QueryVoteResponse(apply_opt(g_msg.vote, condenseCosmosGovV1Vote));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryVoteResponse` - the response type for the Query/Vote RPC method.
 */
export const expandCosmosGovV1QueryVoteResponse = ([a_vote]) => ({
    vote: a_vote && expandCosmosGovV1Vote(a_vote),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryVotesRequest}
 */
export const condenseCosmosGovV1QueryVotesRequest = (g_msg) => encodeCosmosGovV1QueryVotesRequest(g_msg.proposal_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryVotesRequest` - the request type for the Query/Votes RPC method.
 */
export const expandCosmosGovV1QueryVotesRequest = ([sg_proposal_id, a_pagination]) => ({
    proposal_id: sg_proposal_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryVotesResponse}
 */
export const condenseCosmosGovV1QueryVotesResponse = (g_msg) => encodeCosmosGovV1QueryVotesResponse(map(g_msg.votes, condenseCosmosGovV1Vote), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryVotesResponse` - the response type for the Query/Votes RPC method.
 */
export const expandCosmosGovV1QueryVotesResponse = ([a_votes, a_pagination]) => ({
    votes: a_votes && map(a_votes, expandCosmosGovV1Vote),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryParamsRequest}
 */
export const condenseCosmosGovV1QueryParamsRequest = (g_msg) => encodeCosmosGovV1QueryParamsRequest(g_msg.params_type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmosGovV1QueryParamsRequest = ([s_params_type]) => ({
    params_type: s_params_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryParamsResponse}
 */
export const condenseCosmosGovV1QueryParamsResponse = (g_msg) => encodeCosmosGovV1QueryParamsResponse(apply_opt(g_msg.voting_params, condenseCosmosGovV1VotingParams), apply_opt(g_msg.deposit_params, condenseCosmosGovV1DepositParams), apply_opt(g_msg.tally_params, condenseCosmosGovV1TallyParams), apply_opt(g_msg.params, condenseCosmosGovV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmosGovV1QueryParamsResponse = ([a_voting_params, a_deposit_params, a_tally_params, a_params]) => ({
    voting_params: a_voting_params && expandCosmosGovV1VotingParams(a_voting_params),
    deposit_params: a_deposit_params && expandCosmosGovV1DepositParams(a_deposit_params),
    tally_params: a_tally_params && expandCosmosGovV1TallyParams(a_tally_params),
    params: a_params && expandCosmosGovV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryDepositRequest}
 */
export const condenseCosmosGovV1QueryDepositRequest = (g_msg) => encodeCosmosGovV1QueryDepositRequest(g_msg.proposal_id, g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryDepositRequest` - the request type for the Query/Deposit RPC method.
 */
export const expandCosmosGovV1QueryDepositRequest = ([sg_proposal_id, sa_depositor]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryDepositResponse}
 */
export const condenseCosmosGovV1QueryDepositResponse = (g_msg) => encodeCosmosGovV1QueryDepositResponse(apply_opt(g_msg.deposit, condenseCosmosGovV1Deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryDepositResponse` - the response type for the Query/Deposit RPC method.
 */
export const expandCosmosGovV1QueryDepositResponse = ([a_deposit]) => ({
    deposit: a_deposit && expandCosmosGovV1Deposit(a_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryDepositsRequest}
 */
export const condenseCosmosGovV1QueryDepositsRequest = (g_msg) => encodeCosmosGovV1QueryDepositsRequest(g_msg.proposal_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryDepositsRequest` - the request type for the Query/Deposits RPC method.
 */
export const expandCosmosGovV1QueryDepositsRequest = ([sg_proposal_id, a_pagination]) => ({
    proposal_id: sg_proposal_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryDepositsResponse}
 */
export const condenseCosmosGovV1QueryDepositsResponse = (g_msg) => encodeCosmosGovV1QueryDepositsResponse(map(g_msg.deposits, condenseCosmosGovV1Deposit), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryDepositsResponse` - the response type for the Query/Deposits RPC method.
 */
export const expandCosmosGovV1QueryDepositsResponse = ([a_deposits, a_pagination]) => ({
    deposits: a_deposits && map(a_deposits, expandCosmosGovV1Deposit),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryTallyResultRequest}
 */
export const condenseCosmosGovV1QueryTallyResultRequest = (g_msg) => encodeCosmosGovV1QueryTallyResultRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryTallyResultRequest` - the request type for the Query/Tally RPC method.
 */
export const expandCosmosGovV1QueryTallyResultRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1QueryTallyResultResponse}
 */
export const condenseCosmosGovV1QueryTallyResultResponse = (g_msg) => encodeCosmosGovV1QueryTallyResultResponse(apply_opt(g_msg.tally, condenseCosmosGovV1TallyResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.QueryTallyResultResponse` - the response type for the Query/Tally RPC method.
 */
export const expandCosmosGovV1QueryTallyResultResponse = ([a_tally]) => ({
    tally: a_tally && expandCosmosGovV1TallyResult(a_tally),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1GenesisState}
 */
export const condenseCosmosGovV1GenesisState = (g_msg) => encodeCosmosGovV1GenesisState(g_msg.starting_proposal_id, map(g_msg.deposits, condenseCosmosGovV1Deposit), map(g_msg.votes, condenseCosmosGovV1Vote), map(g_msg.proposals, condenseCosmosGovV1Proposal), apply_opt(g_msg.deposit_params, condenseCosmosGovV1DepositParams), apply_opt(g_msg.voting_params, condenseCosmosGovV1VotingParams), apply_opt(g_msg.tally_params, condenseCosmosGovV1TallyParams), apply_opt(g_msg.params, condenseCosmosGovV1Params), g_msg.constitution);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1.GenesisState` - defines the gov module's genesis state.
 */
export const expandCosmosGovV1GenesisState = ([sg_starting_proposal_id, a_deposits, a_votes, a_proposals, a_deposit_params, a_voting_params, a_tally_params, a_params, s_constitution]) => ({
    starting_proposal_id: sg_starting_proposal_id,
    deposits: a_deposits && map(a_deposits, expandCosmosGovV1Deposit),
    votes: a_votes && map(a_votes, expandCosmosGovV1Vote),
    proposals: a_proposals && map(a_proposals, expandCosmosGovV1Proposal),
    deposit_params: a_deposit_params && expandCosmosGovV1DepositParams(a_deposit_params),
    voting_params: a_voting_params && expandCosmosGovV1VotingParams(a_voting_params),
    tally_params: a_tally_params && expandCosmosGovV1TallyParams(a_tally_params),
    params: a_params && expandCosmosGovV1Params(a_params),
    constitution: s_constitution,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovModuleV1Module}
 */
export const condenseCosmosGovModuleV1Module = (g_msg) => encodeCosmosGovModuleV1Module(g_msg.max_metadata_len, g_msg.authority);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.module.v1.Module` - the config object of the gov module.
 */
export const expandCosmosGovModuleV1Module = ([sg_max_metadata_len, s_authority]) => ({
    max_metadata_len: sg_max_metadata_len,
    authority: s_authority,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgSubmitProposal}
 */
export const condenseCosmosGovV1beta1MsgSubmitProposal = (g_msg) => encodeCosmosGovV1beta1MsgSubmitProposal(condenseJsonAny(g_msg.content), map(g_msg.initial_deposit, slimify_coin), g_msg.proposer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgSubmitProposal` - defines an sdk.Msg type that supports submitting arbitrary proposal Content.
 */
export const expandCosmosGovV1beta1MsgSubmitProposal = ([a_content, a_initial_deposit, s_proposer]) => ({
    content: a_content && expandJsonAny(a_content),
    initial_deposit: a_initial_deposit && map(a_initial_deposit, expand_coin),
    proposer: s_proposer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgSubmitProposalResponse}
 */
export const condenseCosmosGovV1beta1MsgSubmitProposalResponse = (g_msg) => encodeCosmosGovV1beta1MsgSubmitProposalResponse(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgSubmitProposalResponse` - defines the Msg/SubmitProposal response type.
 */
export const expandCosmosGovV1beta1MsgSubmitProposalResponse = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgVote}
 */
export const condenseCosmosGovV1beta1MsgVote = (g_msg) => encodeCosmosGovV1beta1MsgVote(g_msg.proposal_id, g_msg.voter, JsonToProtoEnumCosmosGovV1beta1VoteOption[g_msg.option]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgVote` - defines a message to cast a vote.
 */
export const expandCosmosGovV1beta1MsgVote = ([sg_proposal_id, sa_voter, xc_option]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGovV1beta1VoteOption[xc_option] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgVoteResponse}
 */
export const condenseCosmosGovV1beta1MsgVoteResponse = (g_msg) => encodeCosmosGovV1beta1MsgVoteResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgVoteResponse` - defines the Msg/Vote response type.
 */
export const expandCosmosGovV1beta1MsgVoteResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgVoteWeighted}
 */
export const condenseCosmosGovV1beta1MsgVoteWeighted = (g_msg) => encodeCosmosGovV1beta1MsgVoteWeighted(g_msg.proposal_id, g_msg.voter, map(g_msg.options, condenseCosmosGovV1beta1WeightedVoteOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgVoteWeighted` - defines a message to cast a vote. Since: cosmos-sdk 0.43
 */
export const expandCosmosGovV1beta1MsgVoteWeighted = ([sg_proposal_id, sa_voter, a_options]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    options: a_options && map(a_options, expandCosmosGovV1beta1WeightedVoteOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1WeightedVoteOption}
 */
export const condenseCosmosGovV1beta1WeightedVoteOption = (g_msg) => encodeCosmosGovV1beta1WeightedVoteOption(JsonToProtoEnumCosmosGovV1beta1VoteOption[g_msg.option], g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.WeightedVoteOption` - defines a unit of vote for vote split. Since: cosmos-sdk 0.43
 */
export const expandCosmosGovV1beta1WeightedVoteOption = ([xc_option, s_weight]) => ({
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGovV1beta1VoteOption[xc_option] : __UNDEFINED,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgVoteWeightedResponse}
 */
export const condenseCosmosGovV1beta1MsgVoteWeightedResponse = (g_msg) => encodeCosmosGovV1beta1MsgVoteWeightedResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgVoteWeightedResponse` - defines the Msg/VoteWeighted response type. Since: cosmos-sdk 0.43
 */
export const expandCosmosGovV1beta1MsgVoteWeightedResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgDeposit}
 */
export const condenseCosmosGovV1beta1MsgDeposit = (g_msg) => encodeCosmosGovV1beta1MsgDeposit(g_msg.proposal_id, g_msg.depositor, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgDeposit` - defines a message to submit a deposit to an existing proposal.
 */
export const expandCosmosGovV1beta1MsgDeposit = ([sg_proposal_id, sa_depositor, a_amount]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1MsgDepositResponse}
 */
export const condenseCosmosGovV1beta1MsgDepositResponse = (g_msg) => encodeCosmosGovV1beta1MsgDepositResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.MsgDepositResponse` - defines the Msg/Deposit response type.
 */
export const expandCosmosGovV1beta1MsgDepositResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1TextProposal}
 */
export const condenseCosmosGovV1beta1TextProposal = (g_msg) => encodeCosmosGovV1beta1TextProposal(g_msg.title, g_msg.description);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.TextProposal` - defines a standard text proposal whose changes need to be manually updated in case of approval.
 */
export const expandCosmosGovV1beta1TextProposal = ([s_title, s_description]) => ({
    title: s_title,
    description: s_description,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1Deposit}
 */
export const condenseCosmosGovV1beta1Deposit = (g_msg) => encodeCosmosGovV1beta1Deposit(g_msg.proposal_id, g_msg.depositor, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.Deposit` - defines an amount deposited by an account address to an active proposal.
 */
export const expandCosmosGovV1beta1Deposit = ([sg_proposal_id, sa_depositor, a_amount]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1Proposal}
 */
export const condenseCosmosGovV1beta1Proposal = (g_msg) => encodeCosmosGovV1beta1Proposal(g_msg.proposal_id, condenseJsonAny(g_msg.content), JsonToProtoEnumCosmosGovV1beta1ProposalStatus[g_msg.status], apply_opt(g_msg.final_tally_result, condenseCosmosGovV1beta1TallyResult), parse_timestamp(g_msg.submit_time), parse_timestamp(g_msg.deposit_end_time), map(g_msg.total_deposit, slimify_coin), parse_timestamp(g_msg.voting_start_time), parse_timestamp(g_msg.voting_end_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.Proposal` - defines the core field members of a governance proposal.
 */
export const expandCosmosGovV1beta1Proposal = ([sg_proposal_id, a_content, xc_status, a_final_tally_result, a_submit_time, a_deposit_end_time, a_total_deposit, a_voting_start_time, a_voting_end_time]) => ({
    proposal_id: sg_proposal_id,
    content: a_content && expandJsonAny(a_content),
    status: xc_status >= 0 ? ProtoToJsonEnumCosmosGovV1beta1ProposalStatus[xc_status] : __UNDEFINED,
    final_tally_result: a_final_tally_result && expandCosmosGovV1beta1TallyResult(a_final_tally_result),
    submit_time: expand_timestamp(a_submit_time),
    deposit_end_time: expand_timestamp(a_deposit_end_time),
    total_deposit: a_total_deposit && map(a_total_deposit, expand_coin),
    voting_start_time: expand_timestamp(a_voting_start_time),
    voting_end_time: expand_timestamp(a_voting_end_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1TallyResult}
 */
export const condenseCosmosGovV1beta1TallyResult = (g_msg) => encodeCosmosGovV1beta1TallyResult(g_msg.yes, g_msg.abstain, g_msg.no, g_msg.no_with_veto);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.TallyResult` - defines a standard tally for a governance proposal.
 */
export const expandCosmosGovV1beta1TallyResult = ([s_yes, s_abstain, s_no, s_no_with_veto]) => ({
    yes: s_yes,
    abstain: s_abstain,
    no: s_no,
    no_with_veto: s_no_with_veto,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1Vote}
 */
export const condenseCosmosGovV1beta1Vote = (g_msg) => encodeCosmosGovV1beta1Vote(g_msg.proposal_id, g_msg.voter, JsonToProtoEnumCosmosGovV1beta1VoteOption[g_msg.option], map(g_msg.options, condenseCosmosGovV1beta1WeightedVoteOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.Vote` - defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.
 */
export const expandCosmosGovV1beta1Vote = ([sg_proposal_id, sa_voter, xc_option, a_options]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
    option: xc_option >= 0 ? ProtoToJsonEnumCosmosGovV1beta1VoteOption[xc_option] : __UNDEFINED,
    options: a_options && map(a_options, expandCosmosGovV1beta1WeightedVoteOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1DepositParams}
 */
export const condenseCosmosGovV1beta1DepositParams = (g_msg) => encodeCosmosGovV1beta1DepositParams(map(g_msg.min_deposit, slimify_coin), parse_duration(g_msg.max_deposit_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.DepositParams` - defines the params for deposits on governance proposals.
 */
export const expandCosmosGovV1beta1DepositParams = ([a_min_deposit, a_max_deposit_period]) => ({
    min_deposit: a_min_deposit && map(a_min_deposit, expand_coin),
    max_deposit_period: expand_duration(a_max_deposit_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1VotingParams}
 */
export const condenseCosmosGovV1beta1VotingParams = (g_msg) => encodeCosmosGovV1beta1VotingParams(parse_duration(g_msg.voting_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.VotingParams` - defines the params for voting on governance proposals.
 */
export const expandCosmosGovV1beta1VotingParams = ([a_voting_period]) => ({
    voting_period: expand_duration(a_voting_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1TallyParams}
 */
export const condenseCosmosGovV1beta1TallyParams = (g_msg) => encodeCosmosGovV1beta1TallyParams(safe_base64_to_bytes(g_msg.quorum), safe_base64_to_bytes(g_msg.threshold), safe_base64_to_bytes(g_msg.veto_threshold));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.TallyParams` - defines the params for tallying votes on governance proposals.
 */
export const expandCosmosGovV1beta1TallyParams = ([atu8_quorum, atu8_threshold, atu8_veto_threshold]) => ({
    quorum: safe_bytes_to_base64(atu8_quorum),
    threshold: safe_bytes_to_base64(atu8_threshold),
    veto_threshold: safe_bytes_to_base64(atu8_veto_threshold),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryProposalRequest}
 */
export const condenseCosmosGovV1beta1QueryProposalRequest = (g_msg) => encodeCosmosGovV1beta1QueryProposalRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryProposalRequest` - the request type for the Query/Proposal RPC method.
 */
export const expandCosmosGovV1beta1QueryProposalRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryProposalResponse}
 */
export const condenseCosmosGovV1beta1QueryProposalResponse = (g_msg) => encodeCosmosGovV1beta1QueryProposalResponse(apply_opt(g_msg.proposal, condenseCosmosGovV1beta1Proposal));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryProposalResponse` - the response type for the Query/Proposal RPC method.
 */
export const expandCosmosGovV1beta1QueryProposalResponse = ([a_proposal]) => ({
    proposal: a_proposal && expandCosmosGovV1beta1Proposal(a_proposal),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryProposalsRequest}
 */
export const condenseCosmosGovV1beta1QueryProposalsRequest = (g_msg) => encodeCosmosGovV1beta1QueryProposalsRequest(JsonToProtoEnumCosmosGovV1beta1ProposalStatus[g_msg.proposal_status], g_msg.voter, g_msg.depositor, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryProposalsRequest` - the request type for the Query/Proposals RPC method.
 */
export const expandCosmosGovV1beta1QueryProposalsRequest = ([xc_proposal_status, sa_voter, sa_depositor, a_pagination]) => ({
    proposal_status: xc_proposal_status >= 0 ? ProtoToJsonEnumCosmosGovV1beta1ProposalStatus[xc_proposal_status] : __UNDEFINED,
    voter: sa_voter,
    depositor: sa_depositor,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryProposalsResponse}
 */
export const condenseCosmosGovV1beta1QueryProposalsResponse = (g_msg) => encodeCosmosGovV1beta1QueryProposalsResponse(map(g_msg.proposals, condenseCosmosGovV1beta1Proposal), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryProposalsResponse` - the response type for the Query/Proposals RPC method.
 */
export const expandCosmosGovV1beta1QueryProposalsResponse = ([a_proposals, a_pagination]) => ({
    proposals: a_proposals && map(a_proposals, expandCosmosGovV1beta1Proposal),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryVoteRequest}
 */
export const condenseCosmosGovV1beta1QueryVoteRequest = (g_msg) => encodeCosmosGovV1beta1QueryVoteRequest(g_msg.proposal_id, g_msg.voter);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryVoteRequest` - the request type for the Query/Vote RPC method.
 */
export const expandCosmosGovV1beta1QueryVoteRequest = ([sg_proposal_id, sa_voter]) => ({
    proposal_id: sg_proposal_id,
    voter: sa_voter,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryVoteResponse}
 */
export const condenseCosmosGovV1beta1QueryVoteResponse = (g_msg) => encodeCosmosGovV1beta1QueryVoteResponse(apply_opt(g_msg.vote, condenseCosmosGovV1beta1Vote));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryVoteResponse` - the response type for the Query/Vote RPC method.
 */
export const expandCosmosGovV1beta1QueryVoteResponse = ([a_vote]) => ({
    vote: a_vote && expandCosmosGovV1beta1Vote(a_vote),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryVotesRequest}
 */
export const condenseCosmosGovV1beta1QueryVotesRequest = (g_msg) => encodeCosmosGovV1beta1QueryVotesRequest(g_msg.proposal_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryVotesRequest` - the request type for the Query/Votes RPC method.
 */
export const expandCosmosGovV1beta1QueryVotesRequest = ([sg_proposal_id, a_pagination]) => ({
    proposal_id: sg_proposal_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryVotesResponse}
 */
export const condenseCosmosGovV1beta1QueryVotesResponse = (g_msg) => encodeCosmosGovV1beta1QueryVotesResponse(map(g_msg.votes, condenseCosmosGovV1beta1Vote), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryVotesResponse` - the response type for the Query/Votes RPC method.
 */
export const expandCosmosGovV1beta1QueryVotesResponse = ([a_votes, a_pagination]) => ({
    votes: a_votes && map(a_votes, expandCosmosGovV1beta1Vote),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryParamsRequest}
 */
export const condenseCosmosGovV1beta1QueryParamsRequest = (g_msg) => encodeCosmosGovV1beta1QueryParamsRequest(g_msg.params_type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmosGovV1beta1QueryParamsRequest = ([s_params_type]) => ({
    params_type: s_params_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryParamsResponse}
 */
export const condenseCosmosGovV1beta1QueryParamsResponse = (g_msg) => encodeCosmosGovV1beta1QueryParamsResponse(apply_opt(g_msg.voting_params, condenseCosmosGovV1beta1VotingParams), apply_opt(g_msg.deposit_params, condenseCosmosGovV1beta1DepositParams), apply_opt(g_msg.tally_params, condenseCosmosGovV1beta1TallyParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmosGovV1beta1QueryParamsResponse = ([a_voting_params, a_deposit_params, a_tally_params]) => ({
    voting_params: a_voting_params && expandCosmosGovV1beta1VotingParams(a_voting_params),
    deposit_params: a_deposit_params && expandCosmosGovV1beta1DepositParams(a_deposit_params),
    tally_params: a_tally_params && expandCosmosGovV1beta1TallyParams(a_tally_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryDepositRequest}
 */
export const condenseCosmosGovV1beta1QueryDepositRequest = (g_msg) => encodeCosmosGovV1beta1QueryDepositRequest(g_msg.proposal_id, g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryDepositRequest` - the request type for the Query/Deposit RPC method.
 */
export const expandCosmosGovV1beta1QueryDepositRequest = ([sg_proposal_id, sa_depositor]) => ({
    proposal_id: sg_proposal_id,
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryDepositResponse}
 */
export const condenseCosmosGovV1beta1QueryDepositResponse = (g_msg) => encodeCosmosGovV1beta1QueryDepositResponse(apply_opt(g_msg.deposit, condenseCosmosGovV1beta1Deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryDepositResponse` - the response type for the Query/Deposit RPC method.
 */
export const expandCosmosGovV1beta1QueryDepositResponse = ([a_deposit]) => ({
    deposit: a_deposit && expandCosmosGovV1beta1Deposit(a_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryDepositsRequest}
 */
export const condenseCosmosGovV1beta1QueryDepositsRequest = (g_msg) => encodeCosmosGovV1beta1QueryDepositsRequest(g_msg.proposal_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryDepositsRequest` - the request type for the Query/Deposits RPC method.
 */
export const expandCosmosGovV1beta1QueryDepositsRequest = ([sg_proposal_id, a_pagination]) => ({
    proposal_id: sg_proposal_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryDepositsResponse}
 */
export const condenseCosmosGovV1beta1QueryDepositsResponse = (g_msg) => encodeCosmosGovV1beta1QueryDepositsResponse(map(g_msg.deposits, condenseCosmosGovV1beta1Deposit), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryDepositsResponse` - the response type for the Query/Deposits RPC method.
 */
export const expandCosmosGovV1beta1QueryDepositsResponse = ([a_deposits, a_pagination]) => ({
    deposits: a_deposits && map(a_deposits, expandCosmosGovV1beta1Deposit),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryTallyResultRequest}
 */
export const condenseCosmosGovV1beta1QueryTallyResultRequest = (g_msg) => encodeCosmosGovV1beta1QueryTallyResultRequest(g_msg.proposal_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryTallyResultRequest` - the request type for the Query/Tally RPC method.
 */
export const expandCosmosGovV1beta1QueryTallyResultRequest = ([sg_proposal_id]) => ({
    proposal_id: sg_proposal_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1QueryTallyResultResponse}
 */
export const condenseCosmosGovV1beta1QueryTallyResultResponse = (g_msg) => encodeCosmosGovV1beta1QueryTallyResultResponse(apply_opt(g_msg.tally, condenseCosmosGovV1beta1TallyResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.QueryTallyResultResponse` - the response type for the Query/Tally RPC method.
 */
export const expandCosmosGovV1beta1QueryTallyResultResponse = ([a_tally]) => ({
    tally: a_tally && expandCosmosGovV1beta1TallyResult(a_tally),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosGovV1beta1GenesisState}
 */
export const condenseCosmosGovV1beta1GenesisState = (g_msg) => encodeCosmosGovV1beta1GenesisState(g_msg.starting_proposal_id, map(g_msg.deposits, condenseCosmosGovV1beta1Deposit), map(g_msg.votes, condenseCosmosGovV1beta1Vote), map(g_msg.proposals, condenseCosmosGovV1beta1Proposal), apply_opt(g_msg.deposit_params, condenseCosmosGovV1beta1DepositParams), apply_opt(g_msg.voting_params, condenseCosmosGovV1beta1VotingParams), apply_opt(g_msg.tally_params, condenseCosmosGovV1beta1TallyParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.gov.v1beta1.GenesisState` - defines the gov module's genesis state.
 */
export const expandCosmosGovV1beta1GenesisState = ([sg_starting_proposal_id, a_deposits, a_votes, a_proposals, a_deposit_params, a_voting_params, a_tally_params]) => ({
    starting_proposal_id: sg_starting_proposal_id,
    deposits: a_deposits && map(a_deposits, expandCosmosGovV1beta1Deposit),
    votes: a_votes && map(a_votes, expandCosmosGovV1beta1Vote),
    proposals: a_proposals && map(a_proposals, expandCosmosGovV1beta1Proposal),
    deposit_params: a_deposit_params && expandCosmosGovV1beta1DepositParams(a_deposit_params),
    voting_params: a_voting_params && expandCosmosGovV1beta1VotingParams(a_voting_params),
    tally_params: a_tally_params && expandCosmosGovV1beta1TallyParams(a_tally_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosReflectionV1FileDescriptorsRequest}
 */
export const condenseCosmosReflectionV1FileDescriptorsRequest = (g_msg) => encodeCosmosReflectionV1FileDescriptorsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.reflection.v1.FileDescriptorsRequest` - the Query/FileDescriptors request type.
 */
export const expandCosmosReflectionV1FileDescriptorsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmosReflectionV1FileDescriptorsResponse}
 */
export const condenseCosmosReflectionV1FileDescriptorsResponse = (g_msg) => encodeCosmosReflectionV1FileDescriptorsResponse(map(g_msg.files, condenseGoogleProtobufFileDescriptorProto));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmos.reflection.v1.FileDescriptorsResponse` - the Query/FileDescriptors response type.
 */
export const expandCosmosReflectionV1FileDescriptorsResponse = ([a_files]) => ({
    files: a_files && map(a_files, expandGoogleProtobufFileDescriptorProto),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFileDescriptorProto}
 */
export const condenseGoogleProtobufFileDescriptorProto = (g_msg) => encodeGoogleProtobufFileDescriptorProto(g_msg.name, g_msg.package, g_msg.dependency, map(g_msg.message_type, condenseGoogleProtobufDescriptorProto), map(g_msg.enum_type, condenseGoogleProtobufEnumDescriptorProto), map(g_msg.service, condenseGoogleProtobufServiceDescriptorProto), map(g_msg.extension, condenseGoogleProtobufFieldDescriptorProto), apply_opt(g_msg.options, condenseGoogleProtobufFileOptions), apply_opt(g_msg.source_code_info, condenseGoogleProtobufSourceCodeInfo), g_msg.public_dependency, g_msg.weak_dependency, g_msg.syntax, JsonToProtoEnumGoogleProtobufEdition[g_msg.edition]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FileDescriptorProto` - Describes a complete .proto file.
 */
export const expandGoogleProtobufFileDescriptorProto = ([s_name, s_package, a_dependencys, a_message_type, a_enum_type, a_service, a_extension, a_options, a_source_code_info, a_public_dependencys, a_weak_dependencys, s_syntax, , xc_edition]) => ({
    name: s_name,
    package: s_package,
    dependency: a_dependencys,
    message_type: a_message_type && map(a_message_type, expandGoogleProtobufDescriptorProto),
    enum_type: a_enum_type && map(a_enum_type, expandGoogleProtobufEnumDescriptorProto),
    service: a_service && map(a_service, expandGoogleProtobufServiceDescriptorProto),
    extension: a_extension && map(a_extension, expandGoogleProtobufFieldDescriptorProto),
    options: a_options && expandGoogleProtobufFileOptions(a_options),
    source_code_info: a_source_code_info && expandGoogleProtobufSourceCodeInfo(a_source_code_info),
    public_dependency: a_public_dependencys,
    weak_dependency: a_weak_dependencys,
    syntax: s_syntax,
    edition: xc_edition >= 0 ? ProtoToJsonEnumGoogleProtobufEdition[xc_edition] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufDescriptorProto}
 */
export const condenseGoogleProtobufDescriptorProto = (g_msg) => encodeGoogleProtobufDescriptorProto(g_msg.name, map(g_msg.field, condenseGoogleProtobufFieldDescriptorProto), map(g_msg.nested_type, condenseGoogleProtobufDescriptorProto), map(g_msg.enum_type, condenseGoogleProtobufEnumDescriptorProto), map(g_msg.extension_range, condenseGoogleProtobufDescriptorProtoExtensionRange), map(g_msg.extension, condenseGoogleProtobufFieldDescriptorProto), apply_opt(g_msg.options, condenseGoogleProtobufMessageOptions), map(g_msg.oneof_decl, condenseGoogleProtobufOneofDescriptorProto), map(g_msg.reserved_range, condenseGoogleProtobufDescriptorProtoReservedRange), g_msg.reserved_name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.DescriptorProto` - Describes a message type.
 */
export const expandGoogleProtobufDescriptorProto = ([s_name, a_field, a_nested_type, a_enum_type, a_extension_range, a_extension, a_options, a_oneof_decl, a_reserved_range, a_reserved_names]) => ({
    name: s_name,
    field: a_field && map(a_field, expandGoogleProtobufFieldDescriptorProto),
    nested_type: a_nested_type && map(a_nested_type, expandGoogleProtobufDescriptorProto),
    enum_type: a_enum_type && map(a_enum_type, expandGoogleProtobufEnumDescriptorProto),
    extension_range: a_extension_range && map(a_extension_range, expandGoogleProtobufDescriptorProtoExtensionRange),
    extension: a_extension && map(a_extension, expandGoogleProtobufFieldDescriptorProto),
    options: a_options && expandGoogleProtobufMessageOptions(a_options),
    oneof_decl: a_oneof_decl && map(a_oneof_decl, expandGoogleProtobufOneofDescriptorProto),
    reserved_range: a_reserved_range && map(a_reserved_range, expandGoogleProtobufDescriptorProtoReservedRange),
    reserved_name: a_reserved_names,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFieldDescriptorProto}
 */
export const condenseGoogleProtobufFieldDescriptorProto = (g_msg) => encodeGoogleProtobufFieldDescriptorProto(g_msg.name, g_msg.extendee, g_msg.number, JsonToProtoEnumGoogleProtobufFieldDescriptorProtoLabel[g_msg.label], JsonToProtoEnumGoogleProtobufFieldDescriptorProtoType[g_msg.type], g_msg.type_name, g_msg.default_value, apply_opt(g_msg.options, condenseGoogleProtobufFieldOptions), g_msg.oneof_index, g_msg.json_name, g_msg.proto3_optional);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FieldDescriptorProto` - Describes a field within a message.
 */
export const expandGoogleProtobufFieldDescriptorProto = ([s_name, s_extendee, n_number, xc_label, xc_type, s_type_name, s_default_value, a_options, n_oneof_index, s_json_name, , , , , , , b_proto3_optional]) => ({
    name: s_name,
    extendee: s_extendee,
    number: n_number,
    label: xc_label >= 0 ? ProtoToJsonEnumGoogleProtobufFieldDescriptorProtoLabel[xc_label] : __UNDEFINED,
    type: xc_type >= 0 ? ProtoToJsonEnumGoogleProtobufFieldDescriptorProtoType[xc_type] : __UNDEFINED,
    type_name: s_type_name,
    default_value: s_default_value,
    options: a_options && expandGoogleProtobufFieldOptions(a_options),
    oneof_index: n_oneof_index,
    json_name: s_json_name,
    proto3_optional: !!b_proto3_optional,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFieldOptions}
 */
export const condenseGoogleProtobufFieldOptions = (g_msg) => encodeGoogleProtobufFieldOptions(JsonToProtoEnumGoogleProtobufFieldOptionsCType[g_msg.ctype], g_msg.packed, g_msg.deprecated, g_msg.lazy, JsonToProtoEnumGoogleProtobufFieldOptionsJSType[g_msg.jstype], g_msg.weak, g_msg.unverified_lazy, g_msg.debug_redact, JsonToProtoEnumGoogleProtobufFieldOptionsOptionRetention[g_msg.retention], g_msg.targets?.map(w => JsonToProtoEnumGoogleProtobufFieldOptionsOptionTargetType[w]), map(g_msg.edition_defaults, condenseGoogleProtobufFieldOptionsEditionDefault), apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FieldOptions` -
 */
export const expandGoogleProtobufFieldOptions = (a_fields, [xc_ctype, b_packed, b_deprecated, , b_lazy, xc_jstype, , , , b_weak, , , , , b_unverified_lazy, b_debug_redact, xc_retention, , a_targets, a_edition_defaults, a_features] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    ctype: xc_ctype >= 0 ? ProtoToJsonEnumGoogleProtobufFieldOptionsCType[xc_ctype] : __UNDEFINED,
    packed: !!b_packed,
    deprecated: !!b_deprecated,
    lazy: !!b_lazy,
    jstype: xc_jstype >= 0 ? ProtoToJsonEnumGoogleProtobufFieldOptionsJSType[xc_jstype] : __UNDEFINED,
    weak: !!b_weak,
    unverified_lazy: !!b_unverified_lazy,
    debug_redact: !!b_debug_redact,
    retention: xc_retention >= 0 ? ProtoToJsonEnumGoogleProtobufFieldOptionsOptionRetention[xc_retention] : __UNDEFINED,
    targets: a_targets?.map(xc_targets => ProtoToJsonEnumGoogleProtobufFieldOptionsOptionTargetType[xc_targets]),
    edition_defaults: a_edition_defaults && map(a_edition_defaults, expandGoogleProtobufFieldOptionsEditionDefault),
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFieldOptionsEditionDefault}
 */
export const condenseGoogleProtobufFieldOptionsEditionDefault = (g_msg) => encodeGoogleProtobufFieldOptionsEditionDefault(g_msg.value, JsonToProtoEnumGoogleProtobufEdition[g_msg.edition]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FieldOptions.EditionDefault` -
 */
export const expandGoogleProtobufFieldOptionsEditionDefault = ([, s_value, xc_edition]) => ({
    value: s_value,
    edition: xc_edition >= 0 ? ProtoToJsonEnumGoogleProtobufEdition[xc_edition] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFeatureSet}
 */
export const condenseGoogleProtobufFeatureSet = (g_msg) => encodeGoogleProtobufFeatureSet(JsonToProtoEnumGoogleProtobufFeatureSetFieldPresence[g_msg.field_presence], JsonToProtoEnumGoogleProtobufFeatureSetEnumType[g_msg.enum_type], JsonToProtoEnumGoogleProtobufFeatureSetRepeatedFieldEncoding[g_msg.repeated_field_encoding], JsonToProtoEnumGoogleProtobufFeatureSetUtf8Validation[g_msg.utf8_validation], JsonToProtoEnumGoogleProtobufFeatureSetMessageEncoding[g_msg.message_encoding], JsonToProtoEnumGoogleProtobufFeatureSetJsonFormat[g_msg.json_format]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FeatureSet` - TODO Enums in C++ gencode (and potentially other languages) are not well scoped.  This means that each of the feature enums below can clash with each other.  The short names we've chosen maximize call-site readability, but leave us very open to this scenario.  A future feature will be designed and implemented to handle this, hopefully before we ever hit a conflict here.
 */
export const expandGoogleProtobufFeatureSet = ([xc_field_presence, xc_enum_type, xc_repeated_field_encoding, xc_utf8_validation, xc_message_encoding, xc_json_format]) => ({
    field_presence: xc_field_presence >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetFieldPresence[xc_field_presence] : __UNDEFINED,
    enum_type: xc_enum_type >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetEnumType[xc_enum_type] : __UNDEFINED,
    repeated_field_encoding: xc_repeated_field_encoding >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetRepeatedFieldEncoding[xc_repeated_field_encoding] : __UNDEFINED,
    utf8_validation: xc_utf8_validation >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetUtf8Validation[xc_utf8_validation] : __UNDEFINED,
    message_encoding: xc_message_encoding >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetMessageEncoding[xc_message_encoding] : __UNDEFINED,
    json_format: xc_json_format >= 0 ? ProtoToJsonEnumGoogleProtobufFeatureSetJsonFormat[xc_json_format] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufUninterpretedOption}
 */
export const condenseGoogleProtobufUninterpretedOption = (g_msg) => encodeGoogleProtobufUninterpretedOption(map(g_msg.name, condenseGoogleProtobufUninterpretedOptionNamePart), g_msg.identifier_value, g_msg.positive_int_value, g_msg.negative_int_value, g_msg.double_value, safe_base64_to_bytes(g_msg.string_value), g_msg.aggregate_value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.UninterpretedOption` - A message representing a option the parser does not recognize. This only appears in options protos created by the compiler::Parser class. DescriptorPool resolves these when building Descriptor objects. Therefore, options protos in descriptor objects (e.g. returned by Descriptor::options(), or produced by Descriptor::CopyTo()) will never have UninterpretedOptions in them.
 */
export const expandGoogleProtobufUninterpretedOption = ([, a_name, s_identifier_value, sg_positive_int_value, sg_negative_int_value, x_double_value, atu8_string_value, s_aggregate_value]) => ({
    name: a_name && map(a_name, expandGoogleProtobufUninterpretedOptionNamePart),
    identifier_value: s_identifier_value,
    positive_int_value: sg_positive_int_value,
    negative_int_value: sg_negative_int_value,
    double_value: x_double_value,
    string_value: safe_bytes_to_base64(atu8_string_value),
    aggregate_value: s_aggregate_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufUninterpretedOptionNamePart}
 */
export const condenseGoogleProtobufUninterpretedOptionNamePart = (g_msg) => encodeGoogleProtobufUninterpretedOptionNamePart(g_msg.name_part, g_msg.is_extension);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.UninterpretedOption.NamePart` -
 */
export const expandGoogleProtobufUninterpretedOptionNamePart = ([s_name_part, b_is_extension]) => ({
    name_part: s_name_part,
    is_extension: !!b_is_extension,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufEnumDescriptorProto}
 */
export const condenseGoogleProtobufEnumDescriptorProto = (g_msg) => encodeGoogleProtobufEnumDescriptorProto(g_msg.name, map(g_msg.value, condenseGoogleProtobufEnumValueDescriptorProto), apply_opt(g_msg.options, condenseGoogleProtobufEnumOptions), map(g_msg.reserved_range, condenseGoogleProtobufEnumDescriptorProtoEnumReservedRange), g_msg.reserved_name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.EnumDescriptorProto` - Describes an enum type.
 */
export const expandGoogleProtobufEnumDescriptorProto = ([s_name, a_value, a_options, a_reserved_range, a_reserved_names]) => ({
    name: s_name,
    value: a_value && map(a_value, expandGoogleProtobufEnumValueDescriptorProto),
    options: a_options && expandGoogleProtobufEnumOptions(a_options),
    reserved_range: a_reserved_range && map(a_reserved_range, expandGoogleProtobufEnumDescriptorProtoEnumReservedRange),
    reserved_name: a_reserved_names,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufEnumValueDescriptorProto}
 */
export const condenseGoogleProtobufEnumValueDescriptorProto = (g_msg) => encodeGoogleProtobufEnumValueDescriptorProto(g_msg.name, g_msg.number, apply_opt(g_msg.options, condenseGoogleProtobufEnumValueOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.EnumValueDescriptorProto` - Describes a value within an enum.
 */
export const expandGoogleProtobufEnumValueDescriptorProto = ([s_name, n_number, a_options]) => ({
    name: s_name,
    number: n_number,
    options: a_options && expandGoogleProtobufEnumValueOptions(a_options),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufEnumValueOptions}
 */
export const condenseGoogleProtobufEnumValueOptions = (g_msg) => encodeGoogleProtobufEnumValueOptions(g_msg.deprecated, apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), g_msg.debug_redact, map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.EnumValueOptions` -
 */
export const expandGoogleProtobufEnumValueOptions = (a_fields, [b_deprecated, a_features, b_debug_redact] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    deprecated: !!b_deprecated,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    debug_redact: !!b_debug_redact,
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufEnumOptions}
 */
export const condenseGoogleProtobufEnumOptions = (g_msg) => encodeGoogleProtobufEnumOptions(g_msg.allow_alias, g_msg.deprecated, g_msg.deprecated_legacy_json_field_conflicts, apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.EnumOptions` -
 */
export const expandGoogleProtobufEnumOptions = (a_fields, [, b_allow_alias, b_deprecated, , , b_deprecated_legacy_json_field_conflicts, a_features] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    allow_alias: !!b_allow_alias,
    deprecated: !!b_deprecated,
    deprecated_legacy_json_field_conflicts: !!b_deprecated_legacy_json_field_conflicts,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufEnumDescriptorProtoEnumReservedRange}
 */
export const condenseGoogleProtobufEnumDescriptorProtoEnumReservedRange = (g_msg) => encodeGoogleProtobufEnumDescriptorProtoEnumReservedRange(g_msg.start, g_msg.end);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.EnumDescriptorProto.EnumReservedRange` -
 */
export const expandGoogleProtobufEnumDescriptorProtoEnumReservedRange = ([n_start, n_end]) => ({
    start: n_start,
    end: n_end,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufDescriptorProtoExtensionRange}
 */
export const condenseGoogleProtobufDescriptorProtoExtensionRange = (g_msg) => encodeGoogleProtobufDescriptorProtoExtensionRange(g_msg.start, g_msg.end, apply_opt(g_msg.options, condenseGoogleProtobufExtensionRangeOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.DescriptorProto.ExtensionRange` -
 */
export const expandGoogleProtobufDescriptorProtoExtensionRange = ([n_start, n_end, a_options]) => ({
    start: n_start,
    end: n_end,
    options: a_options && expandGoogleProtobufExtensionRangeOptions(a_options),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufExtensionRangeOptions}
 */
export const condenseGoogleProtobufExtensionRangeOptions = (g_msg) => encodeGoogleProtobufExtensionRangeOptions(map(g_msg.declaration, condenseGoogleProtobufExtensionRangeOptionsDeclaration), JsonToProtoEnumGoogleProtobufExtensionRangeOptionsVerificationState[g_msg.verification], apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.ExtensionRangeOptions` -
 */
export const expandGoogleProtobufExtensionRangeOptions = (a_fields, [, a_declaration, xc_verification] = a_fields, { 49: a_features, 998: a_uninterpreted_option } = a_fields) => ({
    declaration: a_declaration && map(a_declaration, expandGoogleProtobufExtensionRangeOptionsDeclaration),
    verification: xc_verification >= 0 ? ProtoToJsonEnumGoogleProtobufExtensionRangeOptionsVerificationState[xc_verification] : __UNDEFINED,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufExtensionRangeOptionsDeclaration}
 */
export const condenseGoogleProtobufExtensionRangeOptionsDeclaration = (g_msg) => encodeGoogleProtobufExtensionRangeOptionsDeclaration(g_msg.number, g_msg.full_name, g_msg.type, g_msg.reserved, g_msg.repeated);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.ExtensionRangeOptions.Declaration` - The verification state of the extension range.
 */
export const expandGoogleProtobufExtensionRangeOptionsDeclaration = ([n_number, s_full_name, s_type, , b_reserved, b_repeated]) => ({
    number: n_number,
    full_name: s_full_name,
    type: s_type,
    reserved: !!b_reserved,
    repeated: !!b_repeated,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufMessageOptions}
 */
export const condenseGoogleProtobufMessageOptions = (g_msg) => encodeGoogleProtobufMessageOptions(g_msg.message_set_wire_format, g_msg.no_standard_descriptor_accessor, g_msg.deprecated, g_msg.map_entry, g_msg.deprecated_legacy_json_field_conflicts, apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.MessageOptions` -
 */
export const expandGoogleProtobufMessageOptions = (a_fields, [b_message_set_wire_format, b_no_standard_descriptor_accessor, b_deprecated, , , , b_map_entry, , , , b_deprecated_legacy_json_field_conflicts, a_features] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    message_set_wire_format: !!b_message_set_wire_format,
    no_standard_descriptor_accessor: !!b_no_standard_descriptor_accessor,
    deprecated: !!b_deprecated,
    map_entry: !!b_map_entry,
    deprecated_legacy_json_field_conflicts: !!b_deprecated_legacy_json_field_conflicts,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufOneofDescriptorProto}
 */
export const condenseGoogleProtobufOneofDescriptorProto = (g_msg) => encodeGoogleProtobufOneofDescriptorProto(g_msg.name, apply_opt(g_msg.options, condenseGoogleProtobufOneofOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.OneofDescriptorProto` - Describes a oneof.
 */
export const expandGoogleProtobufOneofDescriptorProto = ([s_name, a_options]) => ({
    name: s_name,
    options: a_options && expandGoogleProtobufOneofOptions(a_options),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufOneofOptions}
 */
export const condenseGoogleProtobufOneofOptions = (g_msg) => encodeGoogleProtobufOneofOptions(apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.OneofOptions` -
 */
export const expandGoogleProtobufOneofOptions = (a_fields, [a_features] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufDescriptorProtoReservedRange}
 */
export const condenseGoogleProtobufDescriptorProtoReservedRange = (g_msg) => encodeGoogleProtobufDescriptorProtoReservedRange(g_msg.start, g_msg.end);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.DescriptorProto.ReservedRange` -
 */
export const expandGoogleProtobufDescriptorProtoReservedRange = ([n_start, n_end]) => ({
    start: n_start,
    end: n_end,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufServiceDescriptorProto}
 */
export const condenseGoogleProtobufServiceDescriptorProto = (g_msg) => encodeGoogleProtobufServiceDescriptorProto(g_msg.name, map(g_msg.method, condenseGoogleProtobufMethodDescriptorProto), apply_opt(g_msg.options, condenseGoogleProtobufServiceOptions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.ServiceDescriptorProto` - Describes a service.
 */
export const expandGoogleProtobufServiceDescriptorProto = ([s_name, a_method, a_options]) => ({
    name: s_name,
    method: a_method && map(a_method, expandGoogleProtobufMethodDescriptorProto),
    options: a_options && expandGoogleProtobufServiceOptions(a_options),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufMethodDescriptorProto}
 */
export const condenseGoogleProtobufMethodDescriptorProto = (g_msg) => encodeGoogleProtobufMethodDescriptorProto(g_msg.name, g_msg.input_type, g_msg.output_type, apply_opt(g_msg.options, condenseGoogleProtobufMethodOptions), g_msg.client_streaming, g_msg.server_streaming);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.MethodDescriptorProto` - Describes a method of a service.
 */
export const expandGoogleProtobufMethodDescriptorProto = ([s_name, s_input_type, s_output_type, a_options, b_client_streaming, b_server_streaming]) => ({
    name: s_name,
    input_type: s_input_type,
    output_type: s_output_type,
    options: a_options && expandGoogleProtobufMethodOptions(a_options),
    client_streaming: !!b_client_streaming,
    server_streaming: !!b_server_streaming,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufMethodOptions}
 */
export const condenseGoogleProtobufMethodOptions = (g_msg) => encodeGoogleProtobufMethodOptions(g_msg.deprecated, JsonToProtoEnumGoogleProtobufMethodOptionsIdempotencyLevel[g_msg.idempotency_level], apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.MethodOptions` -
 */
export const expandGoogleProtobufMethodOptions = (a_fields, { 32: b_deprecated, 33: xc_idempotency_level, 34: a_features, 998: a_uninterpreted_option } = a_fields) => ({
    deprecated: !!b_deprecated,
    idempotency_level: xc_idempotency_level >= 0 ? ProtoToJsonEnumGoogleProtobufMethodOptionsIdempotencyLevel[xc_idempotency_level] : __UNDEFINED,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufServiceOptions}
 */
export const condenseGoogleProtobufServiceOptions = (g_msg) => encodeGoogleProtobufServiceOptions(g_msg.deprecated, apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.ServiceOptions` -
 */
export const expandGoogleProtobufServiceOptions = (a_fields, { 32: b_deprecated, 33: a_features, 998: a_uninterpreted_option } = a_fields) => ({
    deprecated: !!b_deprecated,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufFileOptions}
 */
export const condenseGoogleProtobufFileOptions = (g_msg) => encodeGoogleProtobufFileOptions(g_msg.java_package, g_msg.java_outer_classname, JsonToProtoEnumGoogleProtobufFileOptionsOptimizeMode[g_msg.optimize_for], g_msg.java_multiple_files, g_msg.go_package, g_msg.cc_generic_services, g_msg.java_generic_services, g_msg.py_generic_services, g_msg.java_generate_equals_and_hash, g_msg.deprecated, g_msg.java_string_check_utf8, g_msg.cc_enable_arenas, g_msg.objc_class_prefix, g_msg.csharp_namespace, g_msg.swift_prefix, g_msg.php_class_prefix, g_msg.php_namespace, g_msg.php_generic_services, g_msg.php_metadata_namespace, g_msg.ruby_package, apply_opt(g_msg.features, condenseGoogleProtobufFeatureSet), map(g_msg.uninterpreted_option, condenseGoogleProtobufUninterpretedOption));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.FileOptions` -
 */
export const expandGoogleProtobufFileOptions = (a_fields, [s_java_package, , , , , , , s_java_outer_classname, xc_optimize_for, b_java_multiple_files, s_go_package, , , , , b_cc_generic_services, b_java_generic_services, b_py_generic_services, , b_java_generate_equals_and_hash, , , b_deprecated, , , , b_java_string_check_utf8, , , , b_cc_enable_arenas, , , , , s_objc_class_prefix, s_csharp_namespace, , s_swift_prefix, s_php_class_prefix, s_php_namespace, b_php_generic_services, , s_php_metadata_namespace, s_ruby_package, , , , , a_features] = a_fields, a_uninterpreted_option = a_fields[998]) => ({
    java_package: s_java_package,
    java_outer_classname: s_java_outer_classname,
    optimize_for: xc_optimize_for >= 0 ? ProtoToJsonEnumGoogleProtobufFileOptionsOptimizeMode[xc_optimize_for] : __UNDEFINED,
    java_multiple_files: !!b_java_multiple_files,
    go_package: s_go_package,
    cc_generic_services: !!b_cc_generic_services,
    java_generic_services: !!b_java_generic_services,
    py_generic_services: !!b_py_generic_services,
    java_generate_equals_and_hash: !!b_java_generate_equals_and_hash,
    deprecated: !!b_deprecated,
    java_string_check_utf8: !!b_java_string_check_utf8,
    cc_enable_arenas: !!b_cc_enable_arenas,
    objc_class_prefix: s_objc_class_prefix,
    csharp_namespace: s_csharp_namespace,
    swift_prefix: s_swift_prefix,
    php_class_prefix: s_php_class_prefix,
    php_namespace: s_php_namespace,
    php_generic_services: !!b_php_generic_services,
    php_metadata_namespace: s_php_metadata_namespace,
    ruby_package: s_ruby_package,
    features: a_features && expandGoogleProtobufFeatureSet(a_features),
    uninterpreted_option: a_uninterpreted_option && map(a_uninterpreted_option, expandGoogleProtobufUninterpretedOption),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufSourceCodeInfo}
 */
export const condenseGoogleProtobufSourceCodeInfo = (g_msg) => encodeGoogleProtobufSourceCodeInfo(map(g_msg.location, condenseGoogleProtobufSourceCodeInfoLocation));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.SourceCodeInfo` - Encapsulates information about the original source file from which a FileDescriptorProto was generated.
 */
export const expandGoogleProtobufSourceCodeInfo = ([a_location]) => ({
    location: a_location && map(a_location, expandGoogleProtobufSourceCodeInfoLocation),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGoogleProtobufSourceCodeInfoLocation}
 */
export const condenseGoogleProtobufSourceCodeInfoLocation = (g_msg) => encodeGoogleProtobufSourceCodeInfoLocation(g_msg.path, g_msg.span, g_msg.leading_comments, g_msg.trailing_comments, g_msg.leading_detached_comments);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `google.protobuf.SourceCodeInfo.Location` -
 */
export const expandGoogleProtobufSourceCodeInfoLocation = ([a_paths, a_spans, s_leading_comments, s_trailing_comments, , a_leading_detached_comments]) => ({
    path: a_paths,
    span: a_spans,
    leading_comments: s_leading_comments,
    trailing_comments: s_trailing_comments,
    leading_detached_comments: a_leading_detached_comments,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreTypesV1GenesisState}
 */
export const condenseIbcCoreTypesV1GenesisState = (g_msg) => encodeIbcCoreTypesV1GenesisState(apply_opt(g_msg.client_genesis, condenseIbcCoreClientV1GenesisState), apply_opt(g_msg.connection_genesis, condenseIbcCoreConnectionV1GenesisState), apply_opt(g_msg.channel_genesis, condenseIbcCoreChannelV1GenesisState));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.types.v1.GenesisState` - defines the ibc module's genesis state.
 */
export const expandIbcCoreTypesV1GenesisState = ([a_client_genesis, a_connection_genesis, a_channel_genesis]) => ({
    client_genesis: a_client_genesis && expandIbcCoreClientV1GenesisState(a_client_genesis),
    connection_genesis: a_connection_genesis && expandIbcCoreConnectionV1GenesisState(a_connection_genesis),
    channel_genesis: a_channel_genesis && expandIbcCoreChannelV1GenesisState(a_channel_genesis),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1GenesisState}
 */
export const condenseIbcCoreClientV1GenesisState = (g_msg) => encodeIbcCoreClientV1GenesisState(map(g_msg.clients, condenseIbcCoreClientV1IdentifiedClientState), map(g_msg.clients_consensus, condenseIbcCoreClientV1ClientConsensusStates), map(g_msg.clients_metadata, condenseIbcCoreClientV1IdentifiedGenesisMetadata), apply_opt(g_msg.params, condenseIbcCoreClientV1Params), g_msg.create_localhost, g_msg.next_client_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.GenesisState` - defines the ibc client submodule's genesis state.
 */
export const expandIbcCoreClientV1GenesisState = ([a_clients, a_clients_consensus, a_clients_metadata, a_params, b_create_localhost, sg_next_client_sequence]) => ({
    clients: a_clients && map(a_clients, expandIbcCoreClientV1IdentifiedClientState),
    clients_consensus: a_clients_consensus && map(a_clients_consensus, expandIbcCoreClientV1ClientConsensusStates),
    clients_metadata: a_clients_metadata && map(a_clients_metadata, expandIbcCoreClientV1IdentifiedGenesisMetadata),
    params: a_params && expandIbcCoreClientV1Params(a_params),
    create_localhost: !!b_create_localhost,
    next_client_sequence: sg_next_client_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1IdentifiedClientState}
 */
export const condenseIbcCoreClientV1IdentifiedClientState = (g_msg) => encodeIbcCoreClientV1IdentifiedClientState(g_msg.client_id, condenseJsonAny(g_msg.client_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.IdentifiedClientState` - defines a client state with an additional client identifier field.
 */
export const expandIbcCoreClientV1IdentifiedClientState = ([si_client, a_client_state]) => ({
    client_id: si_client,
    client_state: a_client_state && expandJsonAny(a_client_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1ClientConsensusStates}
 */
export const condenseIbcCoreClientV1ClientConsensusStates = (g_msg) => encodeIbcCoreClientV1ClientConsensusStates(g_msg.client_id, map(g_msg.consensus_states, condenseIbcCoreClientV1ConsensusStateWithHeight));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.ClientConsensusStates` - defines all the stored consensus states for a given client.
 */
export const expandIbcCoreClientV1ClientConsensusStates = ([si_client, a_consensus_states]) => ({
    client_id: si_client,
    consensus_states: a_consensus_states && map(a_consensus_states, expandIbcCoreClientV1ConsensusStateWithHeight),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1ConsensusStateWithHeight}
 */
export const condenseIbcCoreClientV1ConsensusStateWithHeight = (g_msg) => encodeIbcCoreClientV1ConsensusStateWithHeight(apply_opt(g_msg.height, condenseIbcCoreClientV1Height), condenseJsonAny(g_msg.consensus_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.ConsensusStateWithHeight` - defines a consensus state with an additional height field.
 */
export const expandIbcCoreClientV1ConsensusStateWithHeight = ([a_height, a_consensus_state]) => ({
    height: a_height && expandIbcCoreClientV1Height(a_height),
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1Height}
 */
export const condenseIbcCoreClientV1Height = (g_msg) => encodeIbcCoreClientV1Height(g_msg.revision_number, g_msg.revision_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.Height` - a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset
 */
export const expandIbcCoreClientV1Height = ([sg_revision_number, sg_revision_height]) => ({
    revision_number: sg_revision_number,
    revision_height: sg_revision_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1IdentifiedGenesisMetadata}
 */
export const condenseIbcCoreClientV1IdentifiedGenesisMetadata = (g_msg) => encodeIbcCoreClientV1IdentifiedGenesisMetadata(g_msg.client_id, map(g_msg.client_metadata, condenseIbcCoreClientV1GenesisMetadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.IdentifiedGenesisMetadata` - has the client metadata with the corresponding client id.
 */
export const expandIbcCoreClientV1IdentifiedGenesisMetadata = ([si_client, a_client_metadata]) => ({
    client_id: si_client,
    client_metadata: a_client_metadata && map(a_client_metadata, expandIbcCoreClientV1GenesisMetadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1GenesisMetadata}
 */
export const condenseIbcCoreClientV1GenesisMetadata = (g_msg) => encodeIbcCoreClientV1GenesisMetadata(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.GenesisMetadata` - defines the genesis type for metadata that clients may return with ExportMetadata
 */
export const expandIbcCoreClientV1GenesisMetadata = ([atu8_key, atu8_value]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1Params}
 */
export const condenseIbcCoreClientV1Params = (g_msg) => encodeIbcCoreClientV1Params(g_msg.allowed_clients);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.Params` - defines the set of IBC light client parameters.
 */
export const expandIbcCoreClientV1Params = ([a_allowed_clients]) => ({
    allowed_clients: a_allowed_clients,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1GenesisState}
 */
export const condenseIbcCoreConnectionV1GenesisState = (g_msg) => encodeIbcCoreConnectionV1GenesisState(map(g_msg.connections, condenseIbcCoreConnectionV1IdentifiedConnection), map(g_msg.client_connection_paths, condenseIbcCoreConnectionV1ConnectionPaths), g_msg.next_connection_sequence, apply_opt(g_msg.params, condenseIbcCoreConnectionV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.GenesisState` - defines the ibc connection submodule's genesis state.
 */
export const expandIbcCoreConnectionV1GenesisState = ([a_connections, a_client_connection_paths, sg_next_connection_sequence, a_params]) => ({
    connections: a_connections && map(a_connections, expandIbcCoreConnectionV1IdentifiedConnection),
    client_connection_paths: a_client_connection_paths && map(a_client_connection_paths, expandIbcCoreConnectionV1ConnectionPaths),
    next_connection_sequence: sg_next_connection_sequence,
    params: a_params && expandIbcCoreConnectionV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1IdentifiedConnection}
 */
export const condenseIbcCoreConnectionV1IdentifiedConnection = (g_msg) => encodeIbcCoreConnectionV1IdentifiedConnection(g_msg.id, g_msg.client_id, map(g_msg.versions, condenseIbcCoreConnectionV1Version), JsonToProtoEnumIbcCoreConnectionV1State[g_msg.state], apply_opt(g_msg.counterparty, condenseIbcCoreConnectionV1Counterparty), g_msg.delay_period);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.IdentifiedConnection` - defines a connection with additional connection identifier field.
 */
export const expandIbcCoreConnectionV1IdentifiedConnection = ([s_id, si_client, a_versions, xc_state, a_counterparty, sg_delay_period]) => ({
    id: s_id,
    client_id: si_client,
    versions: a_versions && map(a_versions, expandIbcCoreConnectionV1Version),
    state: xc_state >= 0 ? ProtoToJsonEnumIbcCoreConnectionV1State[xc_state] : __UNDEFINED,
    counterparty: a_counterparty && expandIbcCoreConnectionV1Counterparty(a_counterparty),
    delay_period: sg_delay_period,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1Version}
 */
export const condenseIbcCoreConnectionV1Version = (g_msg) => encodeIbcCoreConnectionV1Version(g_msg.identifier, g_msg.features);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.Version` - defines the versioning scheme used to negotiate the IBC version in the connection handshake.
 */
export const expandIbcCoreConnectionV1Version = ([s_identifier, a_features]) => ({
    identifier: s_identifier,
    features: a_features,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1Counterparty}
 */
export const condenseIbcCoreConnectionV1Counterparty = (g_msg) => encodeIbcCoreConnectionV1Counterparty(g_msg.client_id, g_msg.connection_id, apply_opt(g_msg.prefix, condenseIbcCoreCommitmentV1MerklePrefix));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.Counterparty` - defines the counterparty chain associated with a connection end.
 */
export const expandIbcCoreConnectionV1Counterparty = ([si_client, si_connection, a_prefix]) => ({
    client_id: si_client,
    connection_id: si_connection,
    prefix: a_prefix && expandIbcCoreCommitmentV1MerklePrefix(a_prefix),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreCommitmentV1MerklePrefix}
 */
export const condenseIbcCoreCommitmentV1MerklePrefix = (g_msg) => encodeIbcCoreCommitmentV1MerklePrefix(safe_base64_to_bytes(g_msg.key_prefix));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.commitment.v1.MerklePrefix` - merkle path prefixed to the key. The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))
 */
export const expandIbcCoreCommitmentV1MerklePrefix = ([atu8_key_prefix]) => ({
    key_prefix: safe_bytes_to_base64(atu8_key_prefix),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1ConnectionPaths}
 */
export const condenseIbcCoreConnectionV1ConnectionPaths = (g_msg) => encodeIbcCoreConnectionV1ConnectionPaths(g_msg.client_id, g_msg.paths);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.ConnectionPaths` - define all the connection paths for a given client state.
 */
export const expandIbcCoreConnectionV1ConnectionPaths = ([si_client, a_paths]) => ({
    client_id: si_client,
    paths: a_paths,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1Params}
 */
export const condenseIbcCoreConnectionV1Params = (g_msg) => encodeIbcCoreConnectionV1Params(g_msg.max_expected_time_per_block);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.Params` - defines the set of Connection parameters.
 */
export const expandIbcCoreConnectionV1Params = ([sg_max_expected_time_per_block]) => ({
    max_expected_time_per_block: sg_max_expected_time_per_block,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1GenesisState}
 */
export const condenseIbcCoreChannelV1GenesisState = (g_msg) => encodeIbcCoreChannelV1GenesisState(map(g_msg.channels, condenseIbcCoreChannelV1IdentifiedChannel), map(g_msg.acknowledgements, condenseIbcCoreChannelV1PacketState), map(g_msg.commitments, condenseIbcCoreChannelV1PacketState), map(g_msg.receipts, condenseIbcCoreChannelV1PacketState), map(g_msg.send_sequences, condenseIbcCoreChannelV1PacketSequence), map(g_msg.recv_sequences, condenseIbcCoreChannelV1PacketSequence), map(g_msg.ack_sequences, condenseIbcCoreChannelV1PacketSequence), g_msg.next_channel_sequence, apply_opt(g_msg.params, condenseIbcCoreChannelV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.GenesisState` - defines the ibc channel submodule's genesis state.
 */
export const expandIbcCoreChannelV1GenesisState = ([a_channels, a_acknowledgements, a_commitments, a_receipts, a_send_sequences, a_recv_sequences, a_ack_sequences, sg_next_channel_sequence, a_params]) => ({
    channels: a_channels && map(a_channels, expandIbcCoreChannelV1IdentifiedChannel),
    acknowledgements: a_acknowledgements && map(a_acknowledgements, expandIbcCoreChannelV1PacketState),
    commitments: a_commitments && map(a_commitments, expandIbcCoreChannelV1PacketState),
    receipts: a_receipts && map(a_receipts, expandIbcCoreChannelV1PacketState),
    send_sequences: a_send_sequences && map(a_send_sequences, expandIbcCoreChannelV1PacketSequence),
    recv_sequences: a_recv_sequences && map(a_recv_sequences, expandIbcCoreChannelV1PacketSequence),
    ack_sequences: a_ack_sequences && map(a_ack_sequences, expandIbcCoreChannelV1PacketSequence),
    next_channel_sequence: sg_next_channel_sequence,
    params: a_params && expandIbcCoreChannelV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1IdentifiedChannel}
 */
export const condenseIbcCoreChannelV1IdentifiedChannel = (g_msg) => encodeIbcCoreChannelV1IdentifiedChannel(JsonToProtoEnumIbcCoreChannelV1State[g_msg.state], JsonToProtoEnumIbcCoreChannelV1Order[g_msg.ordering], apply_opt(g_msg.counterparty, condenseIbcCoreChannelV1Counterparty), g_msg.connection_hops, g_msg.version, g_msg.port_id, g_msg.channel_id, g_msg.upgrade_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.IdentifiedChannel` - defines a channel with additional port and channel identifier fields.
 */
export const expandIbcCoreChannelV1IdentifiedChannel = ([xc_state, xc_ordering, a_counterparty, a_connection_hops, s_version, si_port, si_channel, sg_upgrade_sequence]) => ({
    state: xc_state >= 0 ? ProtoToJsonEnumIbcCoreChannelV1State[xc_state] : __UNDEFINED,
    ordering: xc_ordering >= 0 ? ProtoToJsonEnumIbcCoreChannelV1Order[xc_ordering] : __UNDEFINED,
    counterparty: a_counterparty && expandIbcCoreChannelV1Counterparty(a_counterparty),
    connection_hops: a_connection_hops,
    version: s_version,
    port_id: si_port,
    channel_id: si_channel,
    upgrade_sequence: sg_upgrade_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Counterparty}
 */
export const condenseIbcCoreChannelV1Counterparty = (g_msg) => encodeIbcCoreChannelV1Counterparty(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Counterparty` - defines a channel end counterparty
 */
export const expandIbcCoreChannelV1Counterparty = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1PacketState}
 */
export const condenseIbcCoreChannelV1PacketState = (g_msg) => encodeIbcCoreChannelV1PacketState(g_msg.port_id, g_msg.channel_id, g_msg.sequence, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.PacketState` - defines the generic type necessary to retrieve and store packet commitments, acknowledgements, and receipts. Caller is responsible for knowing the context necessary to interpret this state as a commitment, acknowledgement, or a receipt.
 */
export const expandIbcCoreChannelV1PacketState = ([si_port, si_channel, sg_sequence, atu8_data]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1PacketSequence}
 */
export const condenseIbcCoreChannelV1PacketSequence = (g_msg) => encodeIbcCoreChannelV1PacketSequence(g_msg.port_id, g_msg.channel_id, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.PacketSequence` - defines the genesis type necessary to retrieve and store next send and receive sequences.
 */
export const expandIbcCoreChannelV1PacketSequence = ([si_port, si_channel, sg_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Params}
 */
export const condenseIbcCoreChannelV1Params = (g_msg) => encodeIbcCoreChannelV1Params(apply_opt(g_msg.upgrade_timeout, condenseIbcCoreChannelV1Timeout));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Params` - defines the set of IBC channel parameters.
 */
export const expandIbcCoreChannelV1Params = ([a_upgrade_timeout]) => ({
    upgrade_timeout: a_upgrade_timeout && expandIbcCoreChannelV1Timeout(a_upgrade_timeout),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Timeout}
 */
export const condenseIbcCoreChannelV1Timeout = (g_msg) => encodeIbcCoreChannelV1Timeout(apply_opt(g_msg.height, condenseIbcCoreClientV1Height), g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Timeout` - defines an execution deadline structure for 04-channel handlers. This includes packet lifecycle handlers as well as the upgrade handshake handlers. A valid Timeout contains either one or both of a timestamp and block height (sequence).
 */
export const expandIbcCoreChannelV1Timeout = ([a_height, sg_timestamp]) => ({
    height: a_height && expandIbcCoreClientV1Height(a_height),
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenInit}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenInit = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenInit(g_msg.client_id, apply_opt(g_msg.counterparty, condenseIbcCoreConnectionV1Counterparty), apply_opt(g_msg.version, condenseIbcCoreConnectionV1Version), g_msg.delay_period, g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenInit` - defines the msg sent by an account on Chain A to initialize a connection with Chain B.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenInit = ([si_client, a_counterparty, a_version, sg_delay_period, s_signer]) => ({
    client_id: si_client,
    counterparty: a_counterparty && expandIbcCoreConnectionV1Counterparty(a_counterparty),
    version: a_version && expandIbcCoreConnectionV1Version(a_version),
    delay_period: sg_delay_period,
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenInitResponse}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenInitResponse = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenInitResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenInitResponse` - defines the Msg/ConnectionOpenInit response type.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenInitResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenTry}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenTry = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenTry(g_msg.client_id, g_msg.previous_connection_id, condenseJsonAny(g_msg.client_state), apply_opt(g_msg.counterparty, condenseIbcCoreConnectionV1Counterparty), g_msg.delay_period, map(g_msg.counterparty_versions, condenseIbcCoreConnectionV1Version), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), safe_base64_to_bytes(g_msg.proof_init), safe_base64_to_bytes(g_msg.proof_client), safe_base64_to_bytes(g_msg.proof_consensus), apply_opt(g_msg.consensus_height, condenseIbcCoreClientV1Height), g_msg.signer, safe_base64_to_bytes(g_msg.host_consensus_state_proof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenTry` - defines a msg sent by a Relayer to try to open a connection on Chain B.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenTry = ([si_client, si_previous_connection, a_client_state, a_counterparty, sg_delay_period, a_counterparty_versions, a_proof_height, atu8_proof_init, atu8_proof_client, atu8_proof_consensus, a_consensus_height, s_signer, atu8_host_consensus_state_proof]) => ({
    client_id: si_client,
    previous_connection_id: si_previous_connection,
    client_state: a_client_state && expandJsonAny(a_client_state),
    counterparty: a_counterparty && expandIbcCoreConnectionV1Counterparty(a_counterparty),
    delay_period: sg_delay_period,
    counterparty_versions: a_counterparty_versions && map(a_counterparty_versions, expandIbcCoreConnectionV1Version),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    proof_init: safe_bytes_to_base64(atu8_proof_init),
    proof_client: safe_bytes_to_base64(atu8_proof_client),
    proof_consensus: safe_bytes_to_base64(atu8_proof_consensus),
    consensus_height: a_consensus_height && expandIbcCoreClientV1Height(a_consensus_height),
    signer: s_signer,
    host_consensus_state_proof: safe_bytes_to_base64(atu8_host_consensus_state_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenTryResponse}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenTryResponse = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenTryResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenTryResponse` - defines the Msg/ConnectionOpenTry response type.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenTryResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenAck}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenAck = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenAck(g_msg.connection_id, g_msg.counterparty_connection_id, apply_opt(g_msg.version, condenseIbcCoreConnectionV1Version), condenseJsonAny(g_msg.client_state), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), safe_base64_to_bytes(g_msg.proof_try), safe_base64_to_bytes(g_msg.proof_client), safe_base64_to_bytes(g_msg.proof_consensus), apply_opt(g_msg.consensus_height, condenseIbcCoreClientV1Height), g_msg.signer, safe_base64_to_bytes(g_msg.host_consensus_state_proof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenAck` - defines a msg sent by a Relayer to Chain A to acknowledge the change of connection state to TRYOPEN on Chain B.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenAck = ([si_connection, si_counterparty_connection, a_version, a_client_state, a_proof_height, atu8_proof_try, atu8_proof_client, atu8_proof_consensus, a_consensus_height, s_signer, atu8_host_consensus_state_proof]) => ({
    connection_id: si_connection,
    counterparty_connection_id: si_counterparty_connection,
    version: a_version && expandIbcCoreConnectionV1Version(a_version),
    client_state: a_client_state && expandJsonAny(a_client_state),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    proof_try: safe_bytes_to_base64(atu8_proof_try),
    proof_client: safe_bytes_to_base64(atu8_proof_client),
    proof_consensus: safe_bytes_to_base64(atu8_proof_consensus),
    consensus_height: a_consensus_height && expandIbcCoreClientV1Height(a_consensus_height),
    signer: s_signer,
    host_consensus_state_proof: safe_bytes_to_base64(atu8_host_consensus_state_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenAckResponse}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenAckResponse = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenAckResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenAckResponse` - defines the Msg/ConnectionOpenAck response type.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenAckResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenConfirm}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenConfirm = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenConfirm(g_msg.connection_id, safe_base64_to_bytes(g_msg.proof_ack), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenConfirm` - defines a msg sent by a Relayer to Chain B to acknowledge the change of connection state to OPEN on Chain A.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenConfirm = ([si_connection, atu8_proof_ack, a_proof_height, s_signer]) => ({
    connection_id: si_connection,
    proof_ack: safe_bytes_to_base64(atu8_proof_ack),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgConnectionOpenConfirmResponse}
 */
export const condenseIbcCoreConnectionV1MsgConnectionOpenConfirmResponse = (g_msg) => encodeIbcCoreConnectionV1MsgConnectionOpenConfirmResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgConnectionOpenConfirmResponse` - defines the Msg/ConnectionOpenConfirm response type.
 */
export const expandIbcCoreConnectionV1MsgConnectionOpenConfirmResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgUpdateParams}
 */
export const condenseIbcCoreConnectionV1MsgUpdateParams = (g_msg) => encodeIbcCoreConnectionV1MsgUpdateParams(g_msg.signer, apply_opt(g_msg.params, condenseIbcCoreConnectionV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgUpdateParams` - defines the sdk.Msg type to update the connection parameters.
 */
export const expandIbcCoreConnectionV1MsgUpdateParams = ([s_signer, a_params]) => ({
    signer: s_signer,
    params: a_params && expandIbcCoreConnectionV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1MsgUpdateParamsResponse}
 */
export const condenseIbcCoreConnectionV1MsgUpdateParamsResponse = (g_msg) => encodeIbcCoreConnectionV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.MsgUpdateParamsResponse` - defines the MsgUpdateParams response type.
 */
export const expandIbcCoreConnectionV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionRequest}
 */
export const condenseIbcCoreConnectionV1QueryConnectionRequest = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionRequest(g_msg.connection_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionRequest` - the request type for the Query/Connection RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionRequest = ([si_connection]) => ({
    connection_id: si_connection,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionResponse}
 */
export const condenseIbcCoreConnectionV1QueryConnectionResponse = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionResponse(apply_opt(g_msg.connection, condenseIbcCoreConnectionV1ConnectionEnd), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionResponse` - the response type for the Query/Connection RPC method. Besides the connection end, it includes a proof and the height from which the proof was retrieved.
 */
export const expandIbcCoreConnectionV1QueryConnectionResponse = ([a_connection, atu8_proof, a_proof_height]) => ({
    connection: a_connection && expandIbcCoreConnectionV1ConnectionEnd(a_connection),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1ConnectionEnd}
 */
export const condenseIbcCoreConnectionV1ConnectionEnd = (g_msg) => encodeIbcCoreConnectionV1ConnectionEnd(g_msg.client_id, map(g_msg.versions, condenseIbcCoreConnectionV1Version), JsonToProtoEnumIbcCoreConnectionV1State[g_msg.state], apply_opt(g_msg.counterparty, condenseIbcCoreConnectionV1Counterparty), g_msg.delay_period);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.ConnectionEnd` - defines a stateful object on a chain connected to another separate one. NOTE: there must only be 2 defined ConnectionEnds to establish a connection between two chains.
 */
export const expandIbcCoreConnectionV1ConnectionEnd = ([si_client, a_versions, xc_state, a_counterparty, sg_delay_period]) => ({
    client_id: si_client,
    versions: a_versions && map(a_versions, expandIbcCoreConnectionV1Version),
    state: xc_state >= 0 ? ProtoToJsonEnumIbcCoreConnectionV1State[xc_state] : __UNDEFINED,
    counterparty: a_counterparty && expandIbcCoreConnectionV1Counterparty(a_counterparty),
    delay_period: sg_delay_period,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionsRequest}
 */
export const condenseIbcCoreConnectionV1QueryConnectionsRequest = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionsRequest` - the request type for the Query/Connections RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionsResponse}
 */
export const condenseIbcCoreConnectionV1QueryConnectionsResponse = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionsResponse(map(g_msg.connections, condenseIbcCoreConnectionV1IdentifiedConnection), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionsResponse` - the response type for the Query/Connections RPC method.
 */
export const expandIbcCoreConnectionV1QueryConnectionsResponse = ([a_connections, a_pagination, a_height]) => ({
    connections: a_connections && map(a_connections, expandIbcCoreConnectionV1IdentifiedConnection),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryClientConnectionsRequest}
 */
export const condenseIbcCoreConnectionV1QueryClientConnectionsRequest = (g_msg) => encodeIbcCoreConnectionV1QueryClientConnectionsRequest(g_msg.client_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryClientConnectionsRequest` - the request type for the Query/ClientConnections RPC method
 */
export const expandIbcCoreConnectionV1QueryClientConnectionsRequest = ([si_client]) => ({
    client_id: si_client,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryClientConnectionsResponse}
 */
export const condenseIbcCoreConnectionV1QueryClientConnectionsResponse = (g_msg) => encodeIbcCoreConnectionV1QueryClientConnectionsResponse(g_msg.connection_paths, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryClientConnectionsResponse` - the response type for the Query/ClientConnections RPC method
 */
export const expandIbcCoreConnectionV1QueryClientConnectionsResponse = ([a_connection_paths, atu8_proof, a_proof_height]) => ({
    connection_paths: a_connection_paths,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionClientStateRequest}
 */
export const condenseIbcCoreConnectionV1QueryConnectionClientStateRequest = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionClientStateRequest(g_msg.connection_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionClientStateRequest` - the request type for the Query/ConnectionClientState RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionClientStateRequest = ([si_connection]) => ({
    connection_id: si_connection,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionClientStateResponse}
 */
export const condenseIbcCoreConnectionV1QueryConnectionClientStateResponse = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionClientStateResponse(apply_opt(g_msg.identified_client_state, condenseIbcCoreClientV1IdentifiedClientState), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionClientStateResponse` - the response type for the Query/ConnectionClientState RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionClientStateResponse = ([a_identified_client_state, atu8_proof, a_proof_height]) => ({
    identified_client_state: a_identified_client_state && expandIbcCoreClientV1IdentifiedClientState(a_identified_client_state),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionConsensusStateRequest}
 */
export const condenseIbcCoreConnectionV1QueryConnectionConsensusStateRequest = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionConsensusStateRequest(g_msg.connection_id, g_msg.revision_number, g_msg.revision_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionConsensusStateRequest` - the request type for the Query/ConnectionConsensusState RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionConsensusStateRequest = ([si_connection, sg_revision_number, sg_revision_height]) => ({
    connection_id: si_connection,
    revision_number: sg_revision_number,
    revision_height: sg_revision_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionConsensusStateResponse}
 */
export const condenseIbcCoreConnectionV1QueryConnectionConsensusStateResponse = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionConsensusStateResponse(condenseJsonAny(g_msg.consensus_state), g_msg.client_id, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionConsensusStateResponse` - the response type for the Query/ConnectionConsensusState RPC method
 */
export const expandIbcCoreConnectionV1QueryConnectionConsensusStateResponse = ([a_consensus_state, si_client, atu8_proof, a_proof_height]) => ({
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
    client_id: si_client,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionParamsRequest}
 */
export const condenseIbcCoreConnectionV1QueryConnectionParamsRequest = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionParamsRequest` - the request type for the Query/ConnectionParams RPC method.
 */
export const expandIbcCoreConnectionV1QueryConnectionParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1QueryConnectionParamsResponse}
 */
export const condenseIbcCoreConnectionV1QueryConnectionParamsResponse = (g_msg) => encodeIbcCoreConnectionV1QueryConnectionParamsResponse(apply_opt(g_msg.params, condenseIbcCoreConnectionV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.QueryConnectionParamsResponse` - the response type for the Query/ConnectionParams RPC method.
 */
export const expandIbcCoreConnectionV1QueryConnectionParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcCoreConnectionV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreConnectionV1ClientPaths}
 */
export const condenseIbcCoreConnectionV1ClientPaths = (g_msg) => encodeIbcCoreConnectionV1ClientPaths(g_msg.paths);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.connection.v1.ClientPaths` - define all the connection paths for a client state.
 */
export const expandIbcCoreConnectionV1ClientPaths = ([a_paths]) => ({
    paths: a_paths,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreCommitmentV1MerkleRoot}
 */
export const condenseIbcCoreCommitmentV1MerkleRoot = (g_msg) => encodeIbcCoreCommitmentV1MerkleRoot(safe_base64_to_bytes(g_msg.hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.commitment.v1.MerkleRoot` - defines a merkle root hash. In the Cosmos SDK, the AppHash of a block header becomes the root.
 */
export const expandIbcCoreCommitmentV1MerkleRoot = ([atu8_hash]) => ({
    hash: safe_bytes_to_base64(atu8_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreCommitmentV1MerklePath}
 */
export const condenseIbcCoreCommitmentV1MerklePath = (g_msg) => encodeIbcCoreCommitmentV1MerklePath(g_msg.key_path);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.commitment.v1.MerklePath` - the path used to verify commitment proofs, which can be an arbitrary structured object (defined by a commitment type). MerklePath is represented from root-to-leaf
 */
export const expandIbcCoreCommitmentV1MerklePath = ([a_key_paths]) => ({
    key_path: a_key_paths,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreCommitmentV1MerkleProof}
 */
export const condenseIbcCoreCommitmentV1MerkleProof = (g_msg) => encodeIbcCoreCommitmentV1MerkleProof(map(g_msg.proofs, condenseCosmosIcs23V1CommitmentProof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.commitment.v1.MerkleProof` - a wrapper type over a chain of CommitmentProofs. It demonstrates membership or non-membership for an element or set of elements, verifiable in conjunction with a known commitment root. Proofs should be succinct. MerkleProofs are ordered from leaf-to-root
 */
export const expandIbcCoreCommitmentV1MerkleProof = ([a_proofs]) => ({
    proofs: a_proofs && map(a_proofs, expandCosmosIcs23V1CommitmentProof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenInit}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenInit = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenInit(g_msg.port_id, apply_opt(g_msg.channel, condenseIbcCoreChannelV1Channel), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenInit` - defines an sdk.Msg to initialize a channel handshake. It is called by a relayer on Chain A.
 */
export const expandIbcCoreChannelV1MsgChannelOpenInit = ([si_port, a_channel, s_signer]) => ({
    port_id: si_port,
    channel: a_channel && expandIbcCoreChannelV1Channel(a_channel),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Channel}
 */
export const condenseIbcCoreChannelV1Channel = (g_msg) => encodeIbcCoreChannelV1Channel(JsonToProtoEnumIbcCoreChannelV1State[g_msg.state], JsonToProtoEnumIbcCoreChannelV1Order[g_msg.ordering], apply_opt(g_msg.counterparty, condenseIbcCoreChannelV1Counterparty), g_msg.connection_hops, g_msg.version, g_msg.upgrade_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Channel` - defines pipeline for exactly-once packet delivery between specific modules on separate blockchains, which has at least one end capable of sending packets and one end capable of receiving packets.
 */
export const expandIbcCoreChannelV1Channel = ([xc_state, xc_ordering, a_counterparty, a_connection_hops, s_version, sg_upgrade_sequence]) => ({
    state: xc_state >= 0 ? ProtoToJsonEnumIbcCoreChannelV1State[xc_state] : __UNDEFINED,
    ordering: xc_ordering >= 0 ? ProtoToJsonEnumIbcCoreChannelV1Order[xc_ordering] : __UNDEFINED,
    counterparty: a_counterparty && expandIbcCoreChannelV1Counterparty(a_counterparty),
    connection_hops: a_connection_hops,
    version: s_version,
    upgrade_sequence: sg_upgrade_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenInitResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenInitResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenInitResponse(g_msg.channel_id, g_msg.version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenInitResponse` - defines the Msg/ChannelOpenInit response type.
 */
export const expandIbcCoreChannelV1MsgChannelOpenInitResponse = ([si_channel, s_version]) => ({
    channel_id: si_channel,
    version: s_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenTry}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenTry = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenTry(g_msg.port_id, g_msg.previous_channel_id, apply_opt(g_msg.channel, condenseIbcCoreChannelV1Channel), g_msg.counterparty_version, safe_base64_to_bytes(g_msg.proof_init), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenTry` - MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel on Chain B. The version field within the Channel field has been deprecated. Its value will be ignored by core IBC.
 */
export const expandIbcCoreChannelV1MsgChannelOpenTry = ([si_port, si_previous_channel, a_channel, s_counterparty_version, atu8_proof_init, a_proof_height, s_signer]) => ({
    port_id: si_port,
    previous_channel_id: si_previous_channel,
    channel: a_channel && expandIbcCoreChannelV1Channel(a_channel),
    counterparty_version: s_counterparty_version,
    proof_init: safe_bytes_to_base64(atu8_proof_init),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenTryResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenTryResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenTryResponse(g_msg.version, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenTryResponse` - defines the Msg/ChannelOpenTry response type.
 */
export const expandIbcCoreChannelV1MsgChannelOpenTryResponse = ([s_version, si_channel]) => ({
    version: s_version,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenAck}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenAck = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenAck(g_msg.port_id, g_msg.channel_id, g_msg.counterparty_channel_id, g_msg.counterparty_version, safe_base64_to_bytes(g_msg.proof_try), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenAck` - defines a msg sent by a Relayer to Chain A to acknowledge the change of channel state to TRYOPEN on Chain B. WARNING: a channel upgrade MUST NOT initialize an upgrade for this channel in the same block as executing this message otherwise the counterparty will be incapable of opening.
 */
export const expandIbcCoreChannelV1MsgChannelOpenAck = ([si_port, si_channel, si_counterparty_channel, s_counterparty_version, atu8_proof_try, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    counterparty_channel_id: si_counterparty_channel,
    counterparty_version: s_counterparty_version,
    proof_try: safe_bytes_to_base64(atu8_proof_try),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenAckResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenAckResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenAckResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenAckResponse` - defines the Msg/ChannelOpenAck response type.
 */
export const expandIbcCoreChannelV1MsgChannelOpenAckResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenConfirm}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenConfirm = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenConfirm(g_msg.port_id, g_msg.channel_id, safe_base64_to_bytes(g_msg.proof_ack), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenConfirm` - defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A.
 */
export const expandIbcCoreChannelV1MsgChannelOpenConfirm = ([si_port, si_channel, atu8_proof_ack, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    proof_ack: safe_bytes_to_base64(atu8_proof_ack),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelOpenConfirmResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelOpenConfirmResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelOpenConfirmResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelOpenConfirmResponse` - defines the Msg/ChannelOpenConfirm response type.
 */
export const expandIbcCoreChannelV1MsgChannelOpenConfirmResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelCloseInit}
 */
export const condenseIbcCoreChannelV1MsgChannelCloseInit = (g_msg) => encodeIbcCoreChannelV1MsgChannelCloseInit(g_msg.port_id, g_msg.channel_id, g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelCloseInit` - defines a msg sent by a Relayer to Chain A to close a channel with Chain B.
 */
export const expandIbcCoreChannelV1MsgChannelCloseInit = ([si_port, si_channel, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelCloseInitResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelCloseInitResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelCloseInitResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelCloseInitResponse` - defines the Msg/ChannelCloseInit response type.
 */
export const expandIbcCoreChannelV1MsgChannelCloseInitResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelCloseConfirm}
 */
export const condenseIbcCoreChannelV1MsgChannelCloseConfirm = (g_msg) => encodeIbcCoreChannelV1MsgChannelCloseConfirm(g_msg.port_id, g_msg.channel_id, safe_base64_to_bytes(g_msg.proof_init), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer, g_msg.counterparty_upgrade_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelCloseConfirm` - defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to CLOSED on Chain A.
 */
export const expandIbcCoreChannelV1MsgChannelCloseConfirm = ([si_port, si_channel, atu8_proof_init, a_proof_height, s_signer, sg_counterparty_upgrade_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    proof_init: safe_bytes_to_base64(atu8_proof_init),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
    counterparty_upgrade_sequence: sg_counterparty_upgrade_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelCloseConfirmResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelCloseConfirmResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelCloseConfirmResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelCloseConfirmResponse` - defines the Msg/ChannelCloseConfirm response type.
 */
export const expandIbcCoreChannelV1MsgChannelCloseConfirmResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgRecvPacket}
 */
export const condenseIbcCoreChannelV1MsgRecvPacket = (g_msg) => encodeIbcCoreChannelV1MsgRecvPacket(apply_opt(g_msg.packet, condenseIbcCoreChannelV1Packet), safe_base64_to_bytes(g_msg.proof_commitment), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgRecvPacket` - receives incoming IBC packet
 */
export const expandIbcCoreChannelV1MsgRecvPacket = ([a_packet, atu8_proof_commitment, a_proof_height, s_signer]) => ({
    packet: a_packet && expandIbcCoreChannelV1Packet(a_packet),
    proof_commitment: safe_bytes_to_base64(atu8_proof_commitment),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Packet}
 */
export const condenseIbcCoreChannelV1Packet = (g_msg) => encodeIbcCoreChannelV1Packet(g_msg.sequence, g_msg.source_port, g_msg.source_channel, g_msg.destination_port, g_msg.destination_channel, safe_base64_to_bytes(g_msg.data), apply_opt(g_msg.timeout_height, condenseIbcCoreClientV1Height), g_msg.timeout_timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Packet` - defines a type that carries data across different chains through IBC
 */
export const expandIbcCoreChannelV1Packet = ([sg_sequence, s_source_port, s_source_channel, s_destination_port, s_destination_channel, atu8_data, a_timeout_height, sg_timeout_timestamp]) => ({
    sequence: sg_sequence,
    source_port: s_source_port,
    source_channel: s_source_channel,
    destination_port: s_destination_port,
    destination_channel: s_destination_channel,
    data: safe_bytes_to_base64(atu8_data),
    timeout_height: a_timeout_height && expandIbcCoreClientV1Height(a_timeout_height),
    timeout_timestamp: sg_timeout_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgRecvPacketResponse}
 */
export const condenseIbcCoreChannelV1MsgRecvPacketResponse = (g_msg) => encodeIbcCoreChannelV1MsgRecvPacketResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgRecvPacketResponse` - defines the Msg/RecvPacket response type.
 */
export const expandIbcCoreChannelV1MsgRecvPacketResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgTimeout}
 */
export const condenseIbcCoreChannelV1MsgTimeout = (g_msg) => encodeIbcCoreChannelV1MsgTimeout(apply_opt(g_msg.packet, condenseIbcCoreChannelV1Packet), safe_base64_to_bytes(g_msg.proof_unreceived), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.next_sequence_recv, g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgTimeout` - receives timed-out packet
 */
export const expandIbcCoreChannelV1MsgTimeout = ([a_packet, atu8_proof_unreceived, a_proof_height, sg_next_sequence_recv, s_signer]) => ({
    packet: a_packet && expandIbcCoreChannelV1Packet(a_packet),
    proof_unreceived: safe_bytes_to_base64(atu8_proof_unreceived),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    next_sequence_recv: sg_next_sequence_recv,
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgTimeoutResponse}
 */
export const condenseIbcCoreChannelV1MsgTimeoutResponse = (g_msg) => encodeIbcCoreChannelV1MsgTimeoutResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgTimeoutResponse` - defines the Msg/Timeout response type.
 */
export const expandIbcCoreChannelV1MsgTimeoutResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgTimeoutOnClose}
 */
export const condenseIbcCoreChannelV1MsgTimeoutOnClose = (g_msg) => encodeIbcCoreChannelV1MsgTimeoutOnClose(apply_opt(g_msg.packet, condenseIbcCoreChannelV1Packet), safe_base64_to_bytes(g_msg.proof_unreceived), safe_base64_to_bytes(g_msg.proof_close), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.next_sequence_recv, g_msg.signer, g_msg.counterparty_upgrade_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgTimeoutOnClose` - timed-out packet upon counterparty channel closure.
 */
export const expandIbcCoreChannelV1MsgTimeoutOnClose = ([a_packet, atu8_proof_unreceived, atu8_proof_close, a_proof_height, sg_next_sequence_recv, s_signer, sg_counterparty_upgrade_sequence]) => ({
    packet: a_packet && expandIbcCoreChannelV1Packet(a_packet),
    proof_unreceived: safe_bytes_to_base64(atu8_proof_unreceived),
    proof_close: safe_bytes_to_base64(atu8_proof_close),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    next_sequence_recv: sg_next_sequence_recv,
    signer: s_signer,
    counterparty_upgrade_sequence: sg_counterparty_upgrade_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgTimeoutOnCloseResponse}
 */
export const condenseIbcCoreChannelV1MsgTimeoutOnCloseResponse = (g_msg) => encodeIbcCoreChannelV1MsgTimeoutOnCloseResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgTimeoutOnCloseResponse` - defines the Msg/TimeoutOnClose response type.
 */
export const expandIbcCoreChannelV1MsgTimeoutOnCloseResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgAcknowledgement}
 */
export const condenseIbcCoreChannelV1MsgAcknowledgement = (g_msg) => encodeIbcCoreChannelV1MsgAcknowledgement(apply_opt(g_msg.packet, condenseIbcCoreChannelV1Packet), safe_base64_to_bytes(g_msg.acknowledgement), safe_base64_to_bytes(g_msg.proof_acked), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgAcknowledgement` - receives incoming IBC acknowledgement
 */
export const expandIbcCoreChannelV1MsgAcknowledgement = ([a_packet, atu8_acknowledgement, atu8_proof_acked, a_proof_height, s_signer]) => ({
    packet: a_packet && expandIbcCoreChannelV1Packet(a_packet),
    acknowledgement: safe_bytes_to_base64(atu8_acknowledgement),
    proof_acked: safe_bytes_to_base64(atu8_proof_acked),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgAcknowledgementResponse}
 */
export const condenseIbcCoreChannelV1MsgAcknowledgementResponse = (g_msg) => encodeIbcCoreChannelV1MsgAcknowledgementResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgAcknowledgementResponse` - defines the Msg/Acknowledgement response type.
 */
export const expandIbcCoreChannelV1MsgAcknowledgementResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeInit}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeInit = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeInit(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.fields, condenseIbcCoreChannelV1UpgradeFields), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeInit` - defines the request type for the ChannelUpgradeInit rpc WARNING: Initializing a channel upgrade in the same block as opening the channel may result in the counterparty being incapable of opening.
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeInit = ([si_port, si_channel, a_fields, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    fields: a_fields && expandIbcCoreChannelV1UpgradeFields(a_fields),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1UpgradeFields}
 */
export const condenseIbcCoreChannelV1UpgradeFields = (g_msg) => encodeIbcCoreChannelV1UpgradeFields(JsonToProtoEnumIbcCoreChannelV1Order[g_msg.ordering], g_msg.connection_hops, g_msg.version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.UpgradeFields` - the fields in a channel end which may be changed during a channel upgrade.
 */
export const expandIbcCoreChannelV1UpgradeFields = ([xc_ordering, a_connection_hops, s_version]) => ({
    ordering: xc_ordering >= 0 ? ProtoToJsonEnumIbcCoreChannelV1Order[xc_ordering] : __UNDEFINED,
    connection_hops: a_connection_hops,
    version: s_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeInitResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeInitResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeInitResponse(apply_opt(g_msg.upgrade, condenseIbcCoreChannelV1Upgrade), g_msg.upgrade_sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeInitResponse` - defines the MsgChannelUpgradeInit response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeInitResponse = ([a_upgrade, sg_upgrade_sequence]) => ({
    upgrade: a_upgrade && expandIbcCoreChannelV1Upgrade(a_upgrade),
    upgrade_sequence: sg_upgrade_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Upgrade}
 */
export const condenseIbcCoreChannelV1Upgrade = (g_msg) => encodeIbcCoreChannelV1Upgrade(apply_opt(g_msg.fields, condenseIbcCoreChannelV1UpgradeFields), apply_opt(g_msg.timeout, condenseIbcCoreChannelV1Timeout), g_msg.next_sequence_send);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Upgrade` - a verifiable type which contains the relevant information for an attempted upgrade. It provides the proposed changes to the channel end, the timeout for this upgrade attempt and the next packet sequence which allows the counterparty to efficiently know the highest sequence it has received. The next sequence send is used for pruning and upgrading from unordered to ordered channels.
 */
export const expandIbcCoreChannelV1Upgrade = ([a_fields, a_timeout, sg_next_sequence_send]) => ({
    fields: a_fields && expandIbcCoreChannelV1UpgradeFields(a_fields),
    timeout: a_timeout && expandIbcCoreChannelV1Timeout(a_timeout),
    next_sequence_send: sg_next_sequence_send,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeTry}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeTry = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeTry(g_msg.port_id, g_msg.channel_id, g_msg.proposed_upgrade_connection_hops, apply_opt(g_msg.counterparty_upgrade_fields, condenseIbcCoreChannelV1UpgradeFields), g_msg.counterparty_upgrade_sequence, safe_base64_to_bytes(g_msg.proof_channel), safe_base64_to_bytes(g_msg.proof_upgrade), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeTry` - defines the request type for the ChannelUpgradeTry rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeTry = ([si_port, si_channel, a_proposed_upgrade_connection_hops, a_counterparty_upgrade_fields, sg_counterparty_upgrade_sequence, atu8_proof_channel, atu8_proof_upgrade, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    proposed_upgrade_connection_hops: a_proposed_upgrade_connection_hops,
    counterparty_upgrade_fields: a_counterparty_upgrade_fields && expandIbcCoreChannelV1UpgradeFields(a_counterparty_upgrade_fields),
    counterparty_upgrade_sequence: sg_counterparty_upgrade_sequence,
    proof_channel: safe_bytes_to_base64(atu8_proof_channel),
    proof_upgrade: safe_bytes_to_base64(atu8_proof_upgrade),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeTryResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeTryResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeTryResponse(apply_opt(g_msg.upgrade, condenseIbcCoreChannelV1Upgrade), g_msg.upgrade_sequence, JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeTryResponse` - defines the MsgChannelUpgradeTry response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeTryResponse = ([a_upgrade, sg_upgrade_sequence, xc_result]) => ({
    upgrade: a_upgrade && expandIbcCoreChannelV1Upgrade(a_upgrade),
    upgrade_sequence: sg_upgrade_sequence,
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeAck}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeAck = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeAck(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.counterparty_upgrade, condenseIbcCoreChannelV1Upgrade), safe_base64_to_bytes(g_msg.proof_channel), safe_base64_to_bytes(g_msg.proof_upgrade), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeAck` - defines the request type for the ChannelUpgradeAck rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeAck = ([si_port, si_channel, a_counterparty_upgrade, atu8_proof_channel, atu8_proof_upgrade, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    counterparty_upgrade: a_counterparty_upgrade && expandIbcCoreChannelV1Upgrade(a_counterparty_upgrade),
    proof_channel: safe_bytes_to_base64(atu8_proof_channel),
    proof_upgrade: safe_bytes_to_base64(atu8_proof_upgrade),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeAckResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeAckResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeAckResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeAckResponse` - defines MsgChannelUpgradeAck response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeAckResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeConfirm}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeConfirm = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeConfirm(g_msg.port_id, g_msg.channel_id, JsonToProtoEnumIbcCoreChannelV1State[g_msg.counterparty_channel_state], apply_opt(g_msg.counterparty_upgrade, condenseIbcCoreChannelV1Upgrade), safe_base64_to_bytes(g_msg.proof_channel), safe_base64_to_bytes(g_msg.proof_upgrade), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeConfirm` - defines the request type for the ChannelUpgradeConfirm rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeConfirm = ([si_port, si_channel, xc_counterparty_channel_state, a_counterparty_upgrade, atu8_proof_channel, atu8_proof_upgrade, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    counterparty_channel_state: xc_counterparty_channel_state >= 0 ? ProtoToJsonEnumIbcCoreChannelV1State[xc_counterparty_channel_state] : __UNDEFINED,
    counterparty_upgrade: a_counterparty_upgrade && expandIbcCoreChannelV1Upgrade(a_counterparty_upgrade),
    proof_channel: safe_bytes_to_base64(atu8_proof_channel),
    proof_upgrade: safe_bytes_to_base64(atu8_proof_upgrade),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeConfirmResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeConfirmResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeConfirmResponse(JsonToProtoEnumIbcCoreChannelV1ResponseResultType[g_msg.result]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse` - defines MsgChannelUpgradeConfirm response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeConfirmResponse = ([xc_result]) => ({
    result: xc_result >= 0 ? ProtoToJsonEnumIbcCoreChannelV1ResponseResultType[xc_result] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeOpen}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeOpen = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeOpen(g_msg.port_id, g_msg.channel_id, JsonToProtoEnumIbcCoreChannelV1State[g_msg.counterparty_channel_state], g_msg.counterparty_upgrade_sequence, safe_base64_to_bytes(g_msg.proof_channel), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeOpen` - defines the request type for the ChannelUpgradeOpen rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeOpen = ([si_port, si_channel, xc_counterparty_channel_state, sg_counterparty_upgrade_sequence, atu8_proof_channel, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    counterparty_channel_state: xc_counterparty_channel_state >= 0 ? ProtoToJsonEnumIbcCoreChannelV1State[xc_counterparty_channel_state] : __UNDEFINED,
    counterparty_upgrade_sequence: sg_counterparty_upgrade_sequence,
    proof_channel: safe_bytes_to_base64(atu8_proof_channel),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeOpenResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeOpenResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeOpenResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeOpenResponse` - defines the MsgChannelUpgradeOpen response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeOpenResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeTimeout}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeTimeout = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeTimeout(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.counterparty_channel, condenseIbcCoreChannelV1Channel), safe_base64_to_bytes(g_msg.proof_channel), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeTimeout` - defines the request type for the ChannelUpgradeTimeout rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeTimeout = ([si_port, si_channel, a_counterparty_channel, atu8_proof_channel, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    counterparty_channel: a_counterparty_channel && expandIbcCoreChannelV1Channel(a_counterparty_channel),
    proof_channel: safe_bytes_to_base64(atu8_proof_channel),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse` - MsgChannelUpgradeTimeoutRepsonse defines the MsgChannelUpgradeTimeout response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeCancel}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeCancel = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeCancel(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.error_receipt, condenseIbcCoreChannelV1ErrorReceipt), safe_base64_to_bytes(g_msg.proof_error_receipt), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeCancel` - defines the request type for the ChannelUpgradeCancel rpc
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeCancel = ([si_port, si_channel, a_error_receipt, atu8_proof_error_receipt, a_proof_height, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    error_receipt: a_error_receipt && expandIbcCoreChannelV1ErrorReceipt(a_error_receipt),
    proof_error_receipt: safe_bytes_to_base64(atu8_proof_error_receipt),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1ErrorReceipt}
 */
export const condenseIbcCoreChannelV1ErrorReceipt = (g_msg) => encodeIbcCoreChannelV1ErrorReceipt(g_msg.sequence, g_msg.message);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.ErrorReceipt` - defines a type which encapsulates the upgrade sequence and error associated with the upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the next sequence.
 */
export const expandIbcCoreChannelV1ErrorReceipt = ([sg_sequence, s_message]) => ({
    sequence: sg_sequence,
    message: s_message,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgChannelUpgradeCancelResponse}
 */
export const condenseIbcCoreChannelV1MsgChannelUpgradeCancelResponse = (g_msg) => encodeIbcCoreChannelV1MsgChannelUpgradeCancelResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgChannelUpgradeCancelResponse` - defines the MsgChannelUpgradeCancel response type
 */
export const expandIbcCoreChannelV1MsgChannelUpgradeCancelResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgUpdateParams}
 */
export const condenseIbcCoreChannelV1MsgUpdateParams = (g_msg) => encodeIbcCoreChannelV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseIbcCoreChannelV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgUpdateParams` - the MsgUpdateParams request type.
 */
export const expandIbcCoreChannelV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandIbcCoreChannelV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgUpdateParamsResponse}
 */
export const condenseIbcCoreChannelV1MsgUpdateParamsResponse = (g_msg) => encodeIbcCoreChannelV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgUpdateParamsResponse` - defines the MsgUpdateParams response type.
 */
export const expandIbcCoreChannelV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgPruneAcknowledgements}
 */
export const condenseIbcCoreChannelV1MsgPruneAcknowledgements = (g_msg) => encodeIbcCoreChannelV1MsgPruneAcknowledgements(g_msg.port_id, g_msg.channel_id, g_msg.limit, g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgPruneAcknowledgements` - defines the request type for the PruneAcknowledgements rpc.
 */
export const expandIbcCoreChannelV1MsgPruneAcknowledgements = ([si_port, si_channel, sg_limit, s_signer]) => ({
    port_id: si_port,
    channel_id: si_channel,
    limit: sg_limit,
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1MsgPruneAcknowledgementsResponse}
 */
export const condenseIbcCoreChannelV1MsgPruneAcknowledgementsResponse = (g_msg) => encodeIbcCoreChannelV1MsgPruneAcknowledgementsResponse(g_msg.total_pruned_sequences, g_msg.total_remaining_sequences);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.MsgPruneAcknowledgementsResponse` - defines the response type for the PruneAcknowledgements rpc.
 */
export const expandIbcCoreChannelV1MsgPruneAcknowledgementsResponse = ([sg_total_pruned_sequences, sg_total_remaining_sequences]) => ({
    total_pruned_sequences: sg_total_pruned_sequences,
    total_remaining_sequences: sg_total_remaining_sequences,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelRequest}
 */
export const condenseIbcCoreChannelV1QueryChannelRequest = (g_msg) => encodeIbcCoreChannelV1QueryChannelRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelRequest` - the request type for the Query/Channel RPC method
 */
export const expandIbcCoreChannelV1QueryChannelRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelResponse}
 */
export const condenseIbcCoreChannelV1QueryChannelResponse = (g_msg) => encodeIbcCoreChannelV1QueryChannelResponse(apply_opt(g_msg.channel, condenseIbcCoreChannelV1Channel), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelResponse` - the response type for the Query/Channel RPC method. Besides the Channel end, it includes a proof and the height from which the proof was retrieved.
 */
export const expandIbcCoreChannelV1QueryChannelResponse = ([a_channel, atu8_proof, a_proof_height]) => ({
    channel: a_channel && expandIbcCoreChannelV1Channel(a_channel),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelsRequest}
 */
export const condenseIbcCoreChannelV1QueryChannelsRequest = (g_msg) => encodeIbcCoreChannelV1QueryChannelsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelsRequest` - the request type for the Query/Channels RPC method
 */
export const expandIbcCoreChannelV1QueryChannelsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelsResponse}
 */
export const condenseIbcCoreChannelV1QueryChannelsResponse = (g_msg) => encodeIbcCoreChannelV1QueryChannelsResponse(map(g_msg.channels, condenseIbcCoreChannelV1IdentifiedChannel), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelsResponse` - the response type for the Query/Channels RPC method.
 */
export const expandIbcCoreChannelV1QueryChannelsResponse = ([a_channels, a_pagination, a_height]) => ({
    channels: a_channels && map(a_channels, expandIbcCoreChannelV1IdentifiedChannel),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryConnectionChannelsRequest}
 */
export const condenseIbcCoreChannelV1QueryConnectionChannelsRequest = (g_msg) => encodeIbcCoreChannelV1QueryConnectionChannelsRequest(g_msg.connection, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryConnectionChannelsRequest` - the request type for the Query/QueryConnectionChannels RPC method
 */
export const expandIbcCoreChannelV1QueryConnectionChannelsRequest = ([s_connection, a_pagination]) => ({
    connection: s_connection,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryConnectionChannelsResponse}
 */
export const condenseIbcCoreChannelV1QueryConnectionChannelsResponse = (g_msg) => encodeIbcCoreChannelV1QueryConnectionChannelsResponse(map(g_msg.channels, condenseIbcCoreChannelV1IdentifiedChannel), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryConnectionChannelsResponse` - the Response type for the Query/QueryConnectionChannels RPC method
 */
export const expandIbcCoreChannelV1QueryConnectionChannelsResponse = ([a_channels, a_pagination, a_height]) => ({
    channels: a_channels && map(a_channels, expandIbcCoreChannelV1IdentifiedChannel),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelClientStateRequest}
 */
export const condenseIbcCoreChannelV1QueryChannelClientStateRequest = (g_msg) => encodeIbcCoreChannelV1QueryChannelClientStateRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelClientStateRequest` - the request type for the Query/ClientState RPC method
 */
export const expandIbcCoreChannelV1QueryChannelClientStateRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelClientStateResponse}
 */
export const condenseIbcCoreChannelV1QueryChannelClientStateResponse = (g_msg) => encodeIbcCoreChannelV1QueryChannelClientStateResponse(apply_opt(g_msg.identified_client_state, condenseIbcCoreClientV1IdentifiedClientState), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelClientStateResponse` - the Response type for the Query/QueryChannelClientState RPC method
 */
export const expandIbcCoreChannelV1QueryChannelClientStateResponse = ([a_identified_client_state, atu8_proof, a_proof_height]) => ({
    identified_client_state: a_identified_client_state && expandIbcCoreClientV1IdentifiedClientState(a_identified_client_state),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelConsensusStateRequest}
 */
export const condenseIbcCoreChannelV1QueryChannelConsensusStateRequest = (g_msg) => encodeIbcCoreChannelV1QueryChannelConsensusStateRequest(g_msg.port_id, g_msg.channel_id, g_msg.revision_number, g_msg.revision_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelConsensusStateRequest` - the request type for the Query/ConsensusState RPC method
 */
export const expandIbcCoreChannelV1QueryChannelConsensusStateRequest = ([si_port, si_channel, sg_revision_number, sg_revision_height]) => ({
    port_id: si_port,
    channel_id: si_channel,
    revision_number: sg_revision_number,
    revision_height: sg_revision_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelConsensusStateResponse}
 */
export const condenseIbcCoreChannelV1QueryChannelConsensusStateResponse = (g_msg) => encodeIbcCoreChannelV1QueryChannelConsensusStateResponse(condenseJsonAny(g_msg.consensus_state), g_msg.client_id, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelConsensusStateResponse` - QueryChannelClientStateResponse is the Response type for the Query/QueryChannelClientState RPC method
 */
export const expandIbcCoreChannelV1QueryChannelConsensusStateResponse = ([a_consensus_state, si_client, atu8_proof, a_proof_height]) => ({
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
    client_id: si_client,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketCommitmentRequest}
 */
export const condenseIbcCoreChannelV1QueryPacketCommitmentRequest = (g_msg) => encodeIbcCoreChannelV1QueryPacketCommitmentRequest(g_msg.port_id, g_msg.channel_id, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketCommitmentRequest` - the request type for the Query/PacketCommitment RPC method
 */
export const expandIbcCoreChannelV1QueryPacketCommitmentRequest = ([si_port, si_channel, sg_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketCommitmentResponse}
 */
export const condenseIbcCoreChannelV1QueryPacketCommitmentResponse = (g_msg) => encodeIbcCoreChannelV1QueryPacketCommitmentResponse(safe_base64_to_bytes(g_msg.commitment), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketCommitmentResponse` - defines the client query response for a packet which also includes a proof and the height from which the proof was retrieved
 */
export const expandIbcCoreChannelV1QueryPacketCommitmentResponse = ([atu8_commitment, atu8_proof, a_proof_height]) => ({
    commitment: safe_bytes_to_base64(atu8_commitment),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketCommitmentsRequest}
 */
export const condenseIbcCoreChannelV1QueryPacketCommitmentsRequest = (g_msg) => encodeIbcCoreChannelV1QueryPacketCommitmentsRequest(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketCommitmentsRequest` - the request type for the Query/QueryPacketCommitments RPC method
 */
export const expandIbcCoreChannelV1QueryPacketCommitmentsRequest = ([si_port, si_channel, a_pagination]) => ({
    port_id: si_port,
    channel_id: si_channel,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketCommitmentsResponse}
 */
export const condenseIbcCoreChannelV1QueryPacketCommitmentsResponse = (g_msg) => encodeIbcCoreChannelV1QueryPacketCommitmentsResponse(map(g_msg.commitments, condenseIbcCoreChannelV1PacketState), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketCommitmentsResponse` - the request type for the Query/QueryPacketCommitments RPC method
 */
export const expandIbcCoreChannelV1QueryPacketCommitmentsResponse = ([a_commitments, a_pagination, a_height]) => ({
    commitments: a_commitments && map(a_commitments, expandIbcCoreChannelV1PacketState),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketReceiptRequest}
 */
export const condenseIbcCoreChannelV1QueryPacketReceiptRequest = (g_msg) => encodeIbcCoreChannelV1QueryPacketReceiptRequest(g_msg.port_id, g_msg.channel_id, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketReceiptRequest` - the request type for the Query/PacketReceipt RPC method
 */
export const expandIbcCoreChannelV1QueryPacketReceiptRequest = ([si_port, si_channel, sg_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketReceiptResponse}
 */
export const condenseIbcCoreChannelV1QueryPacketReceiptResponse = (g_msg) => encodeIbcCoreChannelV1QueryPacketReceiptResponse(g_msg.received, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketReceiptResponse` - defines the client query response for a packet receipt which also includes a proof, and the height from which the proof was retrieved
 */
export const expandIbcCoreChannelV1QueryPacketReceiptResponse = ([, b_received, atu8_proof, a_proof_height]) => ({
    received: !!b_received,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketAcknowledgementRequest}
 */
export const condenseIbcCoreChannelV1QueryPacketAcknowledgementRequest = (g_msg) => encodeIbcCoreChannelV1QueryPacketAcknowledgementRequest(g_msg.port_id, g_msg.channel_id, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketAcknowledgementRequest` - the request type for the Query/PacketAcknowledgement RPC method
 */
export const expandIbcCoreChannelV1QueryPacketAcknowledgementRequest = ([si_port, si_channel, sg_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketAcknowledgementResponse}
 */
export const condenseIbcCoreChannelV1QueryPacketAcknowledgementResponse = (g_msg) => encodeIbcCoreChannelV1QueryPacketAcknowledgementResponse(safe_base64_to_bytes(g_msg.acknowledgement), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketAcknowledgementResponse` - defines the client query response for a packet which also includes a proof and the height from which the proof was retrieved
 */
export const expandIbcCoreChannelV1QueryPacketAcknowledgementResponse = ([atu8_acknowledgement, atu8_proof, a_proof_height]) => ({
    acknowledgement: safe_bytes_to_base64(atu8_acknowledgement),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketAcknowledgementsRequest}
 */
export const condenseIbcCoreChannelV1QueryPacketAcknowledgementsRequest = (g_msg) => encodeIbcCoreChannelV1QueryPacketAcknowledgementsRequest(g_msg.port_id, g_msg.channel_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), g_msg.packet_commitment_sequences);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketAcknowledgementsRequest` - the request type for the Query/QueryPacketCommitments RPC method
 */
export const expandIbcCoreChannelV1QueryPacketAcknowledgementsRequest = ([si_port, si_channel, a_pagination, a_packet_commitment_sequences]) => ({
    port_id: si_port,
    channel_id: si_channel,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    packet_commitment_sequences: a_packet_commitment_sequences,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryPacketAcknowledgementsResponse}
 */
export const condenseIbcCoreChannelV1QueryPacketAcknowledgementsResponse = (g_msg) => encodeIbcCoreChannelV1QueryPacketAcknowledgementsResponse(map(g_msg.acknowledgements, condenseIbcCoreChannelV1PacketState), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse), apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryPacketAcknowledgementsResponse` - QueryPacketAcknowledgemetsResponse is the request type for the Query/QueryPacketAcknowledgements RPC method
 */
export const expandIbcCoreChannelV1QueryPacketAcknowledgementsResponse = ([a_acknowledgements, a_pagination, a_height]) => ({
    acknowledgements: a_acknowledgements && map(a_acknowledgements, expandIbcCoreChannelV1PacketState),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUnreceivedPacketsRequest}
 */
export const condenseIbcCoreChannelV1QueryUnreceivedPacketsRequest = (g_msg) => encodeIbcCoreChannelV1QueryUnreceivedPacketsRequest(g_msg.port_id, g_msg.channel_id, g_msg.packet_commitment_sequences);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUnreceivedPacketsRequest` - the request type for the Query/UnreceivedPackets RPC method
 */
export const expandIbcCoreChannelV1QueryUnreceivedPacketsRequest = ([si_port, si_channel, a_packet_commitment_sequences]) => ({
    port_id: si_port,
    channel_id: si_channel,
    packet_commitment_sequences: a_packet_commitment_sequences,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUnreceivedPacketsResponse}
 */
export const condenseIbcCoreChannelV1QueryUnreceivedPacketsResponse = (g_msg) => encodeIbcCoreChannelV1QueryUnreceivedPacketsResponse(g_msg.sequences, apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUnreceivedPacketsResponse` - the response type for the Query/UnreceivedPacketCommitments RPC method
 */
export const expandIbcCoreChannelV1QueryUnreceivedPacketsResponse = ([a_sequences, a_height]) => ({
    sequences: a_sequences,
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUnreceivedAcksRequest}
 */
export const condenseIbcCoreChannelV1QueryUnreceivedAcksRequest = (g_msg) => encodeIbcCoreChannelV1QueryUnreceivedAcksRequest(g_msg.port_id, g_msg.channel_id, g_msg.packet_ack_sequences);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUnreceivedAcksRequest` - QueryUnreceivedAcks is the request type for the Query/UnreceivedAcks RPC method
 */
export const expandIbcCoreChannelV1QueryUnreceivedAcksRequest = ([si_port, si_channel, a_packet_ack_sequences]) => ({
    port_id: si_port,
    channel_id: si_channel,
    packet_ack_sequences: a_packet_ack_sequences,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUnreceivedAcksResponse}
 */
export const condenseIbcCoreChannelV1QueryUnreceivedAcksResponse = (g_msg) => encodeIbcCoreChannelV1QueryUnreceivedAcksResponse(g_msg.sequences, apply_opt(g_msg.height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUnreceivedAcksResponse` - the response type for the Query/UnreceivedAcks RPC method
 */
export const expandIbcCoreChannelV1QueryUnreceivedAcksResponse = ([a_sequences, a_height]) => ({
    sequences: a_sequences,
    height: a_height && expandIbcCoreClientV1Height(a_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryNextSequenceReceiveRequest}
 */
export const condenseIbcCoreChannelV1QueryNextSequenceReceiveRequest = (g_msg) => encodeIbcCoreChannelV1QueryNextSequenceReceiveRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryNextSequenceReceiveRequest` - the request type for the Query/QueryNextSequenceReceiveRequest RPC method
 */
export const expandIbcCoreChannelV1QueryNextSequenceReceiveRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryNextSequenceReceiveResponse}
 */
export const condenseIbcCoreChannelV1QueryNextSequenceReceiveResponse = (g_msg) => encodeIbcCoreChannelV1QueryNextSequenceReceiveResponse(g_msg.next_sequence_receive, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryNextSequenceReceiveResponse` - QuerySequenceResponse is the response type for the Query/QueryNextSequenceReceiveResponse RPC method
 */
export const expandIbcCoreChannelV1QueryNextSequenceReceiveResponse = ([sg_next_sequence_receive, atu8_proof, a_proof_height]) => ({
    next_sequence_receive: sg_next_sequence_receive,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryNextSequenceSendRequest}
 */
export const condenseIbcCoreChannelV1QueryNextSequenceSendRequest = (g_msg) => encodeIbcCoreChannelV1QueryNextSequenceSendRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryNextSequenceSendRequest` - the request type for the Query/QueryNextSequenceSend RPC method
 */
export const expandIbcCoreChannelV1QueryNextSequenceSendRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryNextSequenceSendResponse}
 */
export const condenseIbcCoreChannelV1QueryNextSequenceSendResponse = (g_msg) => encodeIbcCoreChannelV1QueryNextSequenceSendResponse(g_msg.next_sequence_send, safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryNextSequenceSendResponse` - the request type for the Query/QueryNextSequenceSend RPC method
 */
export const expandIbcCoreChannelV1QueryNextSequenceSendResponse = ([sg_next_sequence_send, atu8_proof, a_proof_height]) => ({
    next_sequence_send: sg_next_sequence_send,
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUpgradeErrorRequest}
 */
export const condenseIbcCoreChannelV1QueryUpgradeErrorRequest = (g_msg) => encodeIbcCoreChannelV1QueryUpgradeErrorRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUpgradeErrorRequest` - the request type for the Query/QueryUpgradeError RPC method
 */
export const expandIbcCoreChannelV1QueryUpgradeErrorRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUpgradeErrorResponse}
 */
export const condenseIbcCoreChannelV1QueryUpgradeErrorResponse = (g_msg) => encodeIbcCoreChannelV1QueryUpgradeErrorResponse(apply_opt(g_msg.error_receipt, condenseIbcCoreChannelV1ErrorReceipt), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUpgradeErrorResponse` - the response type for the Query/QueryUpgradeError RPC method
 */
export const expandIbcCoreChannelV1QueryUpgradeErrorResponse = ([a_error_receipt, atu8_proof, a_proof_height]) => ({
    error_receipt: a_error_receipt && expandIbcCoreChannelV1ErrorReceipt(a_error_receipt),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUpgradeRequest}
 */
export const condenseIbcCoreChannelV1QueryUpgradeRequest = (g_msg) => encodeIbcCoreChannelV1QueryUpgradeRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUpgradeRequest` - the request type for the QueryUpgradeRequest RPC method
 */
export const expandIbcCoreChannelV1QueryUpgradeRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryUpgradeResponse}
 */
export const condenseIbcCoreChannelV1QueryUpgradeResponse = (g_msg) => encodeIbcCoreChannelV1QueryUpgradeResponse(apply_opt(g_msg.upgrade, condenseIbcCoreChannelV1Upgrade), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryUpgradeResponse` - the response type for the QueryUpgradeResponse RPC method
 */
export const expandIbcCoreChannelV1QueryUpgradeResponse = ([a_upgrade, atu8_proof, a_proof_height]) => ({
    upgrade: a_upgrade && expandIbcCoreChannelV1Upgrade(a_upgrade),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelParamsRequest}
 */
export const condenseIbcCoreChannelV1QueryChannelParamsRequest = (g_msg) => encodeIbcCoreChannelV1QueryChannelParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelParamsRequest` - the request type for the Query/ChannelParams RPC method.
 */
export const expandIbcCoreChannelV1QueryChannelParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1QueryChannelParamsResponse}
 */
export const condenseIbcCoreChannelV1QueryChannelParamsResponse = (g_msg) => encodeIbcCoreChannelV1QueryChannelParamsResponse(apply_opt(g_msg.params, condenseIbcCoreChannelV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.QueryChannelParamsResponse` - the response type for the Query/ChannelParams RPC method.
 */
export const expandIbcCoreChannelV1QueryChannelParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcCoreChannelV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1PacketId}
 */
export const condenseIbcCoreChannelV1PacketId = (g_msg) => encodeIbcCoreChannelV1PacketId(g_msg.port_id, g_msg.channel_id, g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.PacketId` - an identifier for a unique Packet Source chains refer to packets by source port/channel Destination chains refer to packets by destination port/channel
 */
export const expandIbcCoreChannelV1PacketId = ([si_port, si_channel, sg_sequence]) => ({
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreChannelV1Acknowledgement}
 */
export const condenseIbcCoreChannelV1Acknowledgement = (g_msg) => encodeIbcCoreChannelV1Acknowledgement(safe_base64_to_bytes(g_msg.result), g_msg.error);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.channel.v1.Acknowledgement` - the recommended acknowledgement format to be used by app-specific protocols. NOTE: The field numbers 21 and 22 were explicitly chosen to avoid accidental conflicts with other protobuf message formats used for acknowledgements. The first byte of any message with this format will be the non-ASCII values `0xaa` (result) or `0xb2` (error). Implemented as defined by ICS: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#acknowledgement-envelope
 */
export const expandIbcCoreChannelV1Acknowledgement = (a_fields, { 20: atu8_result, 21: s_error } = a_fields) => ({
    result: safe_bytes_to_base64(atu8_result),
    error: s_error,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgCreateClient}
 */
export const condenseIbcCoreClientV1MsgCreateClient = (g_msg) => encodeIbcCoreClientV1MsgCreateClient(condenseJsonAny(g_msg.client_state), condenseJsonAny(g_msg.consensus_state), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgCreateClient` - defines a message to create an IBC client
 */
export const expandIbcCoreClientV1MsgCreateClient = ([a_client_state, a_consensus_state, s_signer]) => ({
    client_state: a_client_state && expandJsonAny(a_client_state),
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgCreateClientResponse}
 */
export const condenseIbcCoreClientV1MsgCreateClientResponse = (g_msg) => encodeIbcCoreClientV1MsgCreateClientResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgCreateClientResponse` - defines the Msg/CreateClient response type.
 */
export const expandIbcCoreClientV1MsgCreateClientResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpdateClient}
 */
export const condenseIbcCoreClientV1MsgUpdateClient = (g_msg) => encodeIbcCoreClientV1MsgUpdateClient(g_msg.client_id, condenseJsonAny(g_msg.client_message), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpdateClient` - defines an sdk.Msg to update a IBC client state using the given client message.
 */
export const expandIbcCoreClientV1MsgUpdateClient = ([si_client, a_client_message, s_signer]) => ({
    client_id: si_client,
    client_message: a_client_message && expandJsonAny(a_client_message),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpdateClientResponse}
 */
export const condenseIbcCoreClientV1MsgUpdateClientResponse = (g_msg) => encodeIbcCoreClientV1MsgUpdateClientResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpdateClientResponse` - defines the Msg/UpdateClient response type.
 */
export const expandIbcCoreClientV1MsgUpdateClientResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpgradeClient}
 */
export const condenseIbcCoreClientV1MsgUpgradeClient = (g_msg) => encodeIbcCoreClientV1MsgUpgradeClient(g_msg.client_id, condenseJsonAny(g_msg.client_state), condenseJsonAny(g_msg.consensus_state), safe_base64_to_bytes(g_msg.proof_upgrade_client), safe_base64_to_bytes(g_msg.proof_upgrade_consensus_state), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpgradeClient` - defines an sdk.Msg to upgrade an IBC client to a new client state
 */
export const expandIbcCoreClientV1MsgUpgradeClient = ([si_client, a_client_state, a_consensus_state, atu8_proof_upgrade_client, atu8_proof_upgrade_consensus_state, s_signer]) => ({
    client_id: si_client,
    client_state: a_client_state && expandJsonAny(a_client_state),
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
    proof_upgrade_client: safe_bytes_to_base64(atu8_proof_upgrade_client),
    proof_upgrade_consensus_state: safe_bytes_to_base64(atu8_proof_upgrade_consensus_state),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpgradeClientResponse}
 */
export const condenseIbcCoreClientV1MsgUpgradeClientResponse = (g_msg) => encodeIbcCoreClientV1MsgUpgradeClientResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpgradeClientResponse` - defines the Msg/UpgradeClient response type.
 */
export const expandIbcCoreClientV1MsgUpgradeClientResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgSubmitMisbehaviour}
 */
export const condenseIbcCoreClientV1MsgSubmitMisbehaviour = (g_msg) => encodeIbcCoreClientV1MsgSubmitMisbehaviour(g_msg.client_id, condenseJsonAny(g_msg.misbehaviour), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgSubmitMisbehaviour` - defines an sdk.Msg type that submits Evidence for light client misbehaviour. This message has been deprecated. Use MsgUpdateClient instead.
 */
export const expandIbcCoreClientV1MsgSubmitMisbehaviour = ([si_client, a_misbehaviour, s_signer]) => ({
    client_id: si_client,
    misbehaviour: a_misbehaviour && expandJsonAny(a_misbehaviour),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgSubmitMisbehaviourResponse}
 */
export const condenseIbcCoreClientV1MsgSubmitMisbehaviourResponse = (g_msg) => encodeIbcCoreClientV1MsgSubmitMisbehaviourResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgSubmitMisbehaviourResponse` - defines the Msg/SubmitMisbehaviour response type.
 */
export const expandIbcCoreClientV1MsgSubmitMisbehaviourResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgRecoverClient}
 */
export const condenseIbcCoreClientV1MsgRecoverClient = (g_msg) => encodeIbcCoreClientV1MsgRecoverClient(g_msg.subject_client_id, g_msg.substitute_client_id, g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgRecoverClient` - defines the message used to recover a frozen or expired client.
 */
export const expandIbcCoreClientV1MsgRecoverClient = ([si_subject_client, si_substitute_client, s_signer]) => ({
    subject_client_id: si_subject_client,
    substitute_client_id: si_substitute_client,
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgRecoverClientResponse}
 */
export const condenseIbcCoreClientV1MsgRecoverClientResponse = (g_msg) => encodeIbcCoreClientV1MsgRecoverClientResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgRecoverClientResponse` - defines the Msg/RecoverClient response type.
 */
export const expandIbcCoreClientV1MsgRecoverClientResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgIBCSoftwareUpgrade}
 */
export const condenseIbcCoreClientV1MsgIBCSoftwareUpgrade = (g_msg) => encodeIbcCoreClientV1MsgIBCSoftwareUpgrade(apply_opt(g_msg.plan, condenseCosmosUpgradeV1beta1Plan), condenseJsonAny(g_msg.upgraded_client_state), g_msg.signer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgIBCSoftwareUpgrade` - defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
 */
export const expandIbcCoreClientV1MsgIBCSoftwareUpgrade = ([a_plan, a_upgraded_client_state, s_signer]) => ({
    plan: a_plan && expandCosmosUpgradeV1beta1Plan(a_plan),
    upgraded_client_state: a_upgraded_client_state && expandJsonAny(a_upgraded_client_state),
    signer: s_signer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgIBCSoftwareUpgradeResponse}
 */
export const condenseIbcCoreClientV1MsgIBCSoftwareUpgradeResponse = (g_msg) => encodeIbcCoreClientV1MsgIBCSoftwareUpgradeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse` - defines the Msg/IBCSoftwareUpgrade response type.
 */
export const expandIbcCoreClientV1MsgIBCSoftwareUpgradeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpdateParams}
 */
export const condenseIbcCoreClientV1MsgUpdateParams = (g_msg) => encodeIbcCoreClientV1MsgUpdateParams(g_msg.signer, apply_opt(g_msg.params, condenseIbcCoreClientV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpdateParams` - defines the sdk.Msg type to update the client parameters.
 */
export const expandIbcCoreClientV1MsgUpdateParams = ([s_signer, a_params]) => ({
    signer: s_signer,
    params: a_params && expandIbcCoreClientV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1MsgUpdateParamsResponse}
 */
export const condenseIbcCoreClientV1MsgUpdateParamsResponse = (g_msg) => encodeIbcCoreClientV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.MsgUpdateParamsResponse` - defines the MsgUpdateParams response type.
 */
export const expandIbcCoreClientV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1ClientUpdateProposal}
 */
export const condenseIbcCoreClientV1ClientUpdateProposal = (g_msg) => encodeIbcCoreClientV1ClientUpdateProposal(g_msg.title, g_msg.description, g_msg.subject_client_id, g_msg.substitute_client_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.ClientUpdateProposal` - a legacy governance proposal. If it passes, the substitute client's latest consensus state is copied over to the subject client. The proposal handler may fail if the subject and the substitute do not match in client and chain parameters (with exception to latest height, frozen height, and chain-id). Deprecated: Please use MsgRecoverClient in favour of this message type.
 */
export const expandIbcCoreClientV1ClientUpdateProposal = ([s_title, s_description, si_subject_client, si_substitute_client]) => ({
    title: s_title,
    description: s_description,
    subject_client_id: si_subject_client,
    substitute_client_id: si_substitute_client,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1UpgradeProposal}
 */
export const condenseIbcCoreClientV1UpgradeProposal = (g_msg) => encodeIbcCoreClientV1UpgradeProposal(g_msg.title, g_msg.description, apply_opt(g_msg.plan, condenseCosmosUpgradeV1beta1Plan), condenseJsonAny(g_msg.upgraded_client_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.UpgradeProposal` - a gov Content type for initiating an IBC breaking upgrade. Deprecated: Please use MsgIBCSoftwareUpgrade in favour of this message type.
 */
export const expandIbcCoreClientV1UpgradeProposal = ([s_title, s_description, a_plan, a_upgraded_client_state]) => ({
    title: s_title,
    description: s_description,
    plan: a_plan && expandCosmosUpgradeV1beta1Plan(a_plan),
    upgraded_client_state: a_upgraded_client_state && expandJsonAny(a_upgraded_client_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStateRequest}
 */
export const condenseIbcCoreClientV1QueryClientStateRequest = (g_msg) => encodeIbcCoreClientV1QueryClientStateRequest(g_msg.client_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStateRequest` - the request type for the Query/ClientState RPC method
 */
export const expandIbcCoreClientV1QueryClientStateRequest = ([si_client]) => ({
    client_id: si_client,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStateResponse}
 */
export const condenseIbcCoreClientV1QueryClientStateResponse = (g_msg) => encodeIbcCoreClientV1QueryClientStateResponse(condenseJsonAny(g_msg.client_state), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStateResponse` - the response type for the Query/ClientState RPC method. Besides the client state, it includes a proof and the height from which the proof was retrieved.
 */
export const expandIbcCoreClientV1QueryClientStateResponse = ([a_client_state, atu8_proof, a_proof_height]) => ({
    client_state: a_client_state && expandJsonAny(a_client_state),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStatesRequest}
 */
export const condenseIbcCoreClientV1QueryClientStatesRequest = (g_msg) => encodeIbcCoreClientV1QueryClientStatesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStatesRequest` - the request type for the Query/ClientStates RPC method
 */
export const expandIbcCoreClientV1QueryClientStatesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStatesResponse}
 */
export const condenseIbcCoreClientV1QueryClientStatesResponse = (g_msg) => encodeIbcCoreClientV1QueryClientStatesResponse(map(g_msg.client_states, condenseIbcCoreClientV1IdentifiedClientState), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStatesResponse` - the response type for the Query/ClientStates RPC method.
 */
export const expandIbcCoreClientV1QueryClientStatesResponse = ([a_client_states, a_pagination]) => ({
    client_states: a_client_states && map(a_client_states, expandIbcCoreClientV1IdentifiedClientState),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStateRequest}
 */
export const condenseIbcCoreClientV1QueryConsensusStateRequest = (g_msg) => encodeIbcCoreClientV1QueryConsensusStateRequest(g_msg.client_id, g_msg.revision_number, g_msg.revision_height, g_msg.latest_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStateRequest` - the request type for the Query/ConsensusState RPC method. Besides the consensus state, it includes a proof and the height from which the proof was retrieved.
 */
export const expandIbcCoreClientV1QueryConsensusStateRequest = ([si_client, sg_revision_number, sg_revision_height, b_latest_height]) => ({
    client_id: si_client,
    revision_number: sg_revision_number,
    revision_height: sg_revision_height,
    latest_height: !!b_latest_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStateResponse}
 */
export const condenseIbcCoreClientV1QueryConsensusStateResponse = (g_msg) => encodeIbcCoreClientV1QueryConsensusStateResponse(condenseJsonAny(g_msg.consensus_state), safe_base64_to_bytes(g_msg.proof), apply_opt(g_msg.proof_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStateResponse` - the response type for the Query/ConsensusState RPC method
 */
export const expandIbcCoreClientV1QueryConsensusStateResponse = ([a_consensus_state, atu8_proof, a_proof_height]) => ({
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
    proof: safe_bytes_to_base64(atu8_proof),
    proof_height: a_proof_height && expandIbcCoreClientV1Height(a_proof_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStatesRequest}
 */
export const condenseIbcCoreClientV1QueryConsensusStatesRequest = (g_msg) => encodeIbcCoreClientV1QueryConsensusStatesRequest(g_msg.client_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStatesRequest` - the request type for the Query/ConsensusStates RPC method.
 */
export const expandIbcCoreClientV1QueryConsensusStatesRequest = ([si_client, a_pagination]) => ({
    client_id: si_client,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStatesResponse}
 */
export const condenseIbcCoreClientV1QueryConsensusStatesResponse = (g_msg) => encodeIbcCoreClientV1QueryConsensusStatesResponse(map(g_msg.consensus_states, condenseIbcCoreClientV1ConsensusStateWithHeight), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStatesResponse` - the response type for the Query/ConsensusStates RPC method
 */
export const expandIbcCoreClientV1QueryConsensusStatesResponse = ([a_consensus_states, a_pagination]) => ({
    consensus_states: a_consensus_states && map(a_consensus_states, expandIbcCoreClientV1ConsensusStateWithHeight),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStateHeightsRequest}
 */
export const condenseIbcCoreClientV1QueryConsensusStateHeightsRequest = (g_msg) => encodeIbcCoreClientV1QueryConsensusStateHeightsRequest(g_msg.client_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStateHeightsRequest` - the request type for Query/ConsensusStateHeights RPC method.
 */
export const expandIbcCoreClientV1QueryConsensusStateHeightsRequest = ([si_client, a_pagination]) => ({
    client_id: si_client,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryConsensusStateHeightsResponse}
 */
export const condenseIbcCoreClientV1QueryConsensusStateHeightsResponse = (g_msg) => encodeIbcCoreClientV1QueryConsensusStateHeightsResponse(map(g_msg.consensus_state_heights, condenseIbcCoreClientV1Height), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryConsensusStateHeightsResponse` - the response type for the Query/ConsensusStateHeights RPC method
 */
export const expandIbcCoreClientV1QueryConsensusStateHeightsResponse = ([a_consensus_state_heights, a_pagination]) => ({
    consensus_state_heights: a_consensus_state_heights && map(a_consensus_state_heights, expandIbcCoreClientV1Height),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStatusRequest}
 */
export const condenseIbcCoreClientV1QueryClientStatusRequest = (g_msg) => encodeIbcCoreClientV1QueryClientStatusRequest(g_msg.client_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStatusRequest` - the request type for the Query/ClientStatus RPC method
 */
export const expandIbcCoreClientV1QueryClientStatusRequest = ([si_client]) => ({
    client_id: si_client,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientStatusResponse}
 */
export const condenseIbcCoreClientV1QueryClientStatusResponse = (g_msg) => encodeIbcCoreClientV1QueryClientStatusResponse(g_msg.status);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientStatusResponse` - the response type for the Query/ClientStatus RPC method. It returns the current status of the IBC client.
 */
export const expandIbcCoreClientV1QueryClientStatusResponse = ([s_status]) => ({
    status: s_status,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientParamsRequest}
 */
export const condenseIbcCoreClientV1QueryClientParamsRequest = (g_msg) => encodeIbcCoreClientV1QueryClientParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientParamsRequest` - the request type for the Query/ClientParams RPC method.
 */
export const expandIbcCoreClientV1QueryClientParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryClientParamsResponse}
 */
export const condenseIbcCoreClientV1QueryClientParamsResponse = (g_msg) => encodeIbcCoreClientV1QueryClientParamsResponse(apply_opt(g_msg.params, condenseIbcCoreClientV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryClientParamsResponse` - the response type for the Query/ClientParams RPC method.
 */
export const expandIbcCoreClientV1QueryClientParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcCoreClientV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryUpgradedClientStateRequest}
 */
export const condenseIbcCoreClientV1QueryUpgradedClientStateRequest = (g_msg) => encodeIbcCoreClientV1QueryUpgradedClientStateRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryUpgradedClientStateRequest` - the request type for the Query/UpgradedClientState RPC method
 */
export const expandIbcCoreClientV1QueryUpgradedClientStateRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryUpgradedClientStateResponse}
 */
export const condenseIbcCoreClientV1QueryUpgradedClientStateResponse = (g_msg) => encodeIbcCoreClientV1QueryUpgradedClientStateResponse(condenseJsonAny(g_msg.upgraded_client_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryUpgradedClientStateResponse` - the response type for the Query/UpgradedClientState RPC method.
 */
export const expandIbcCoreClientV1QueryUpgradedClientStateResponse = ([a_upgraded_client_state]) => ({
    upgraded_client_state: a_upgraded_client_state && expandJsonAny(a_upgraded_client_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryUpgradedConsensusStateRequest}
 */
export const condenseIbcCoreClientV1QueryUpgradedConsensusStateRequest = (g_msg) => encodeIbcCoreClientV1QueryUpgradedConsensusStateRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryUpgradedConsensusStateRequest` - the request type for the Query/UpgradedConsensusState RPC method
 */
export const expandIbcCoreClientV1QueryUpgradedConsensusStateRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcCoreClientV1QueryUpgradedConsensusStateResponse}
 */
export const condenseIbcCoreClientV1QueryUpgradedConsensusStateResponse = (g_msg) => encodeIbcCoreClientV1QueryUpgradedConsensusStateResponse(condenseJsonAny(g_msg.upgraded_consensus_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.core.client.v1.QueryUpgradedConsensusStateResponse` - the response type for the Query/UpgradedConsensusState RPC method.
 */
export const expandIbcCoreClientV1QueryUpgradedConsensusStateResponse = ([a_upgraded_consensus_state]) => ({
    upgraded_consensus_state: a_upgraded_consensus_state && expandJsonAny(a_upgraded_consensus_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgStoreCode}
 */
export const condenseIbcLightclientsWasmV1MsgStoreCode = (g_msg) => encodeIbcLightclientsWasmV1MsgStoreCode(g_msg.signer, safe_base64_to_bytes(g_msg.wasm_byte_code));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgStoreCode` - defines the request type for the StoreCode rpc.
 */
export const expandIbcLightclientsWasmV1MsgStoreCode = ([s_signer, atu8_wasm_byte_code]) => ({
    signer: s_signer,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgStoreCodeResponse}
 */
export const condenseIbcLightclientsWasmV1MsgStoreCodeResponse = (g_msg) => encodeIbcLightclientsWasmV1MsgStoreCodeResponse(safe_base64_to_bytes(g_msg.checksum));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgStoreCodeResponse` - defines the response type for the StoreCode rpc
 */
export const expandIbcLightclientsWasmV1MsgStoreCodeResponse = ([atu8_checksum]) => ({
    checksum: safe_bytes_to_base64(atu8_checksum),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgRemoveChecksum}
 */
export const condenseIbcLightclientsWasmV1MsgRemoveChecksum = (g_msg) => encodeIbcLightclientsWasmV1MsgRemoveChecksum(g_msg.signer, safe_base64_to_bytes(g_msg.checksum));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgRemoveChecksum` - defines the request type for the MsgRemoveChecksum rpc.
 */
export const expandIbcLightclientsWasmV1MsgRemoveChecksum = ([s_signer, atu8_checksum]) => ({
    signer: s_signer,
    checksum: safe_bytes_to_base64(atu8_checksum),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgRemoveChecksumResponse}
 */
export const condenseIbcLightclientsWasmV1MsgRemoveChecksumResponse = (g_msg) => encodeIbcLightclientsWasmV1MsgRemoveChecksumResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse` - MsgStoreChecksumResponse defines the response type for the StoreCode rpc
 */
export const expandIbcLightclientsWasmV1MsgRemoveChecksumResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgMigrateContract}
 */
export const condenseIbcLightclientsWasmV1MsgMigrateContract = (g_msg) => encodeIbcLightclientsWasmV1MsgMigrateContract(g_msg.signer, g_msg.client_id, safe_base64_to_bytes(g_msg.checksum), safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgMigrateContract` - defines the request type for the MigrateContract rpc.
 */
export const expandIbcLightclientsWasmV1MsgMigrateContract = ([s_signer, si_client, atu8_checksum, atu8_msg]) => ({
    signer: s_signer,
    client_id: si_client,
    checksum: safe_bytes_to_base64(atu8_checksum),
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1MsgMigrateContractResponse}
 */
export const condenseIbcLightclientsWasmV1MsgMigrateContractResponse = (g_msg) => encodeIbcLightclientsWasmV1MsgMigrateContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.MsgMigrateContractResponse` - defines the response type for the MigrateContract rpc
 */
export const expandIbcLightclientsWasmV1MsgMigrateContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1QueryChecksumsRequest}
 */
export const condenseIbcLightclientsWasmV1QueryChecksumsRequest = (g_msg) => encodeIbcLightclientsWasmV1QueryChecksumsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.QueryChecksumsRequest` - the request type for the Query/Checksums RPC method.
 */
export const expandIbcLightclientsWasmV1QueryChecksumsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1QueryChecksumsResponse}
 */
export const condenseIbcLightclientsWasmV1QueryChecksumsResponse = (g_msg) => encodeIbcLightclientsWasmV1QueryChecksumsResponse(g_msg.checksums, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.QueryChecksumsResponse` - the response type for the Query/Checksums RPC method.
 */
export const expandIbcLightclientsWasmV1QueryChecksumsResponse = ([a_checksums, a_pagination]) => ({
    checksums: a_checksums,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1QueryCodeRequest}
 */
export const condenseIbcLightclientsWasmV1QueryCodeRequest = (g_msg) => encodeIbcLightclientsWasmV1QueryCodeRequest(g_msg.checksum);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.QueryCodeRequest` - the request type for the Query/Code RPC method.
 */
export const expandIbcLightclientsWasmV1QueryCodeRequest = ([s_checksum]) => ({
    checksum: s_checksum,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1QueryCodeResponse}
 */
export const condenseIbcLightclientsWasmV1QueryCodeResponse = (g_msg) => encodeIbcLightclientsWasmV1QueryCodeResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.QueryCodeResponse` - the response type for the Query/Code RPC method.
 */
export const expandIbcLightclientsWasmV1QueryCodeResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1GenesisState}
 */
export const condenseIbcLightclientsWasmV1GenesisState = (g_msg) => encodeIbcLightclientsWasmV1GenesisState(map(g_msg.contracts, condenseIbcLightclientsWasmV1Contract));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.GenesisState` - defines 08-wasm's keeper genesis state
 */
export const expandIbcLightclientsWasmV1GenesisState = ([a_contracts]) => ({
    contracts: a_contracts && map(a_contracts, expandIbcLightclientsWasmV1Contract),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1Contract}
 */
export const condenseIbcLightclientsWasmV1Contract = (g_msg) => encodeIbcLightclientsWasmV1Contract(safe_base64_to_bytes(g_msg.code_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.Contract` - stores contract code
 */
export const expandIbcLightclientsWasmV1Contract = ([atu8_code_bytes]) => ({
    code_bytes: safe_bytes_to_base64(atu8_code_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1ClientState}
 */
export const condenseIbcLightclientsWasmV1ClientState = (g_msg) => encodeIbcLightclientsWasmV1ClientState(safe_base64_to_bytes(g_msg.data), safe_base64_to_bytes(g_msg.checksum), apply_opt(g_msg.latest_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.ClientState` - Wasm light client's Client state
 */
export const expandIbcLightclientsWasmV1ClientState = ([atu8_data, atu8_checksum, a_latest_height]) => ({
    data: safe_bytes_to_base64(atu8_data),
    checksum: safe_bytes_to_base64(atu8_checksum),
    latest_height: a_latest_height && expandIbcCoreClientV1Height(a_latest_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1ConsensusState}
 */
export const condenseIbcLightclientsWasmV1ConsensusState = (g_msg) => encodeIbcLightclientsWasmV1ConsensusState(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.ConsensusState` - Wasm light client's ConsensusState
 */
export const expandIbcLightclientsWasmV1ConsensusState = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1ClientMessage}
 */
export const condenseIbcLightclientsWasmV1ClientMessage = (g_msg) => encodeIbcLightclientsWasmV1ClientMessage(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.ClientMessage` - Wasm light client message (either header(s) or misbehaviour)
 */
export const expandIbcLightclientsWasmV1ClientMessage = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsWasmV1Checksums}
 */
export const condenseIbcLightclientsWasmV1Checksums = (g_msg) => encodeIbcLightclientsWasmV1Checksums(map(g_msg.checksums, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.wasm.v1.Checksums` - defines a list of all checksums that are stored Deprecated: This message is deprecated in favor of storing the checksums using a Collections.KeySet.
 */
export const expandIbcLightclientsWasmV1Checksums = ([a_checksums]) => ({
    checksums: map(a_checksums, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ClientState}
 */
export const condenseIbcLightclientsSolomachineV2ClientState = (g_msg) => encodeIbcLightclientsSolomachineV2ClientState(g_msg.sequence, g_msg.is_frozen, apply_opt(g_msg.consensus_state, condenseIbcLightclientsSolomachineV2ConsensusState), g_msg.allow_update_after_proposal);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ClientState` - defines a solo machine client that tracks the current consensus state and if the client is frozen.
 */
export const expandIbcLightclientsSolomachineV2ClientState = ([sg_sequence, b_is_frozen, a_consensus_state, b_allow_update_after_proposal]) => ({
    sequence: sg_sequence,
    is_frozen: !!b_is_frozen,
    consensus_state: a_consensus_state && expandIbcLightclientsSolomachineV2ConsensusState(a_consensus_state),
    allow_update_after_proposal: !!b_allow_update_after_proposal,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ConsensusState}
 */
export const condenseIbcLightclientsSolomachineV2ConsensusState = (g_msg) => encodeIbcLightclientsSolomachineV2ConsensusState(condenseJsonAny(g_msg.public_key), g_msg.diversifier, g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ConsensusState` - defines a solo machine consensus state. The sequence of a consensus state is contained in the "height" key used in storing the consensus state.
 */
export const expandIbcLightclientsSolomachineV2ConsensusState = ([a_public_key, s_diversifier, sg_timestamp]) => ({
    public_key: a_public_key && expandJsonAny(a_public_key),
    diversifier: s_diversifier,
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2Header}
 */
export const condenseIbcLightclientsSolomachineV2Header = (g_msg) => encodeIbcLightclientsSolomachineV2Header(g_msg.sequence, g_msg.timestamp, safe_base64_to_bytes(g_msg.signature), condenseJsonAny(g_msg.new_public_key), g_msg.new_diversifier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.Header` - defines a solo machine consensus header
 */
export const expandIbcLightclientsSolomachineV2Header = ([sg_sequence, sg_timestamp, atu8_signature, a_new_public_key, s_new_diversifier]) => ({
    sequence: sg_sequence,
    timestamp: sg_timestamp,
    signature: safe_bytes_to_base64(atu8_signature),
    new_public_key: a_new_public_key && expandJsonAny(a_new_public_key),
    new_diversifier: s_new_diversifier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2Misbehaviour}
 */
export const condenseIbcLightclientsSolomachineV2Misbehaviour = (g_msg) => encodeIbcLightclientsSolomachineV2Misbehaviour(g_msg.client_id, g_msg.sequence, apply_opt(g_msg.signature_one, condenseIbcLightclientsSolomachineV2SignatureAndData), apply_opt(g_msg.signature_two, condenseIbcLightclientsSolomachineV2SignatureAndData));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.Misbehaviour` - defines misbehaviour for a solo machine which consists of a sequence and two signatures over different messages at that sequence.
 */
export const expandIbcLightclientsSolomachineV2Misbehaviour = ([si_client, sg_sequence, a_signature_one, a_signature_two]) => ({
    client_id: si_client,
    sequence: sg_sequence,
    signature_one: a_signature_one && expandIbcLightclientsSolomachineV2SignatureAndData(a_signature_one),
    signature_two: a_signature_two && expandIbcLightclientsSolomachineV2SignatureAndData(a_signature_two),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2SignatureAndData}
 */
export const condenseIbcLightclientsSolomachineV2SignatureAndData = (g_msg) => encodeIbcLightclientsSolomachineV2SignatureAndData(safe_base64_to_bytes(g_msg.signature), JsonToProtoEnumIbcLightclientsSolomachineV2DataType[g_msg.data_type], safe_base64_to_bytes(g_msg.data), g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.SignatureAndData` - contains a signature and the data signed over to create that signature.
 */
export const expandIbcLightclientsSolomachineV2SignatureAndData = ([atu8_signature, xc_data_type, atu8_data, sg_timestamp]) => ({
    signature: safe_bytes_to_base64(atu8_signature),
    data_type: xc_data_type >= 0 ? ProtoToJsonEnumIbcLightclientsSolomachineV2DataType[xc_data_type] : __UNDEFINED,
    data: safe_bytes_to_base64(atu8_data),
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2TimestampedSignatureData}
 */
export const condenseIbcLightclientsSolomachineV2TimestampedSignatureData = (g_msg) => encodeIbcLightclientsSolomachineV2TimestampedSignatureData(safe_base64_to_bytes(g_msg.signature_data), g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.TimestampedSignatureData` - contains the signature data and the timestamp of the signature.
 */
export const expandIbcLightclientsSolomachineV2TimestampedSignatureData = ([atu8_signature_data, sg_timestamp]) => ({
    signature_data: safe_bytes_to_base64(atu8_signature_data),
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2SignBytes}
 */
export const condenseIbcLightclientsSolomachineV2SignBytes = (g_msg) => encodeIbcLightclientsSolomachineV2SignBytes(g_msg.sequence, g_msg.timestamp, g_msg.diversifier, JsonToProtoEnumIbcLightclientsSolomachineV2DataType[g_msg.data_type], safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.SignBytes` - defines the signed bytes used for signature verification.
 */
export const expandIbcLightclientsSolomachineV2SignBytes = ([sg_sequence, sg_timestamp, s_diversifier, xc_data_type, atu8_data]) => ({
    sequence: sg_sequence,
    timestamp: sg_timestamp,
    diversifier: s_diversifier,
    data_type: xc_data_type >= 0 ? ProtoToJsonEnumIbcLightclientsSolomachineV2DataType[xc_data_type] : __UNDEFINED,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2HeaderData}
 */
export const condenseIbcLightclientsSolomachineV2HeaderData = (g_msg) => encodeIbcLightclientsSolomachineV2HeaderData(condenseJsonAny(g_msg.new_pub_key), g_msg.new_diversifier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.HeaderData` - returns the SignBytes data for update verification.
 */
export const expandIbcLightclientsSolomachineV2HeaderData = ([a_new_pub_key, s_new_diversifier]) => ({
    new_pub_key: a_new_pub_key && expandJsonAny(a_new_pub_key),
    new_diversifier: s_new_diversifier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ClientStateData}
 */
export const condenseIbcLightclientsSolomachineV2ClientStateData = (g_msg) => encodeIbcLightclientsSolomachineV2ClientStateData(safe_base64_to_bytes(g_msg.path), condenseJsonAny(g_msg.client_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ClientStateData` - returns the SignBytes data for client state verification.
 */
export const expandIbcLightclientsSolomachineV2ClientStateData = ([atu8_path, a_client_state]) => ({
    path: safe_bytes_to_base64(atu8_path),
    client_state: a_client_state && expandJsonAny(a_client_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ConsensusStateData}
 */
export const condenseIbcLightclientsSolomachineV2ConsensusStateData = (g_msg) => encodeIbcLightclientsSolomachineV2ConsensusStateData(safe_base64_to_bytes(g_msg.path), condenseJsonAny(g_msg.consensus_state));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ConsensusStateData` - returns the SignBytes data for consensus state verification.
 */
export const expandIbcLightclientsSolomachineV2ConsensusStateData = ([atu8_path, a_consensus_state]) => ({
    path: safe_bytes_to_base64(atu8_path),
    consensus_state: a_consensus_state && expandJsonAny(a_consensus_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ConnectionStateData}
 */
export const condenseIbcLightclientsSolomachineV2ConnectionStateData = (g_msg) => encodeIbcLightclientsSolomachineV2ConnectionStateData(safe_base64_to_bytes(g_msg.path), apply_opt(g_msg.connection, condenseIbcCoreConnectionV1ConnectionEnd));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ConnectionStateData` - returns the SignBytes data for connection state verification.
 */
export const expandIbcLightclientsSolomachineV2ConnectionStateData = ([atu8_path, a_connection]) => ({
    path: safe_bytes_to_base64(atu8_path),
    connection: a_connection && expandIbcCoreConnectionV1ConnectionEnd(a_connection),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2ChannelStateData}
 */
export const condenseIbcLightclientsSolomachineV2ChannelStateData = (g_msg) => encodeIbcLightclientsSolomachineV2ChannelStateData(safe_base64_to_bytes(g_msg.path), apply_opt(g_msg.channel, condenseIbcCoreChannelV1Channel));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.ChannelStateData` - returns the SignBytes data for channel state verification.
 */
export const expandIbcLightclientsSolomachineV2ChannelStateData = ([atu8_path, a_channel]) => ({
    path: safe_bytes_to_base64(atu8_path),
    channel: a_channel && expandIbcCoreChannelV1Channel(a_channel),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2PacketCommitmentData}
 */
export const condenseIbcLightclientsSolomachineV2PacketCommitmentData = (g_msg) => encodeIbcLightclientsSolomachineV2PacketCommitmentData(safe_base64_to_bytes(g_msg.path), safe_base64_to_bytes(g_msg.commitment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.PacketCommitmentData` - returns the SignBytes data for packet commitment verification.
 */
export const expandIbcLightclientsSolomachineV2PacketCommitmentData = ([atu8_path, atu8_commitment]) => ({
    path: safe_bytes_to_base64(atu8_path),
    commitment: safe_bytes_to_base64(atu8_commitment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2PacketAcknowledgementData}
 */
export const condenseIbcLightclientsSolomachineV2PacketAcknowledgementData = (g_msg) => encodeIbcLightclientsSolomachineV2PacketAcknowledgementData(safe_base64_to_bytes(g_msg.path), safe_base64_to_bytes(g_msg.acknowledgement));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.PacketAcknowledgementData` - returns the SignBytes data for acknowledgement verification.
 */
export const expandIbcLightclientsSolomachineV2PacketAcknowledgementData = ([atu8_path, atu8_acknowledgement]) => ({
    path: safe_bytes_to_base64(atu8_path),
    acknowledgement: safe_bytes_to_base64(atu8_acknowledgement),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2PacketReceiptAbsenceData}
 */
export const condenseIbcLightclientsSolomachineV2PacketReceiptAbsenceData = (g_msg) => encodeIbcLightclientsSolomachineV2PacketReceiptAbsenceData(safe_base64_to_bytes(g_msg.path));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData` - returns the SignBytes data for packet receipt absence verification.
 */
export const expandIbcLightclientsSolomachineV2PacketReceiptAbsenceData = ([atu8_path]) => ({
    path: safe_bytes_to_base64(atu8_path),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV2NextSequenceRecvData}
 */
export const condenseIbcLightclientsSolomachineV2NextSequenceRecvData = (g_msg) => encodeIbcLightclientsSolomachineV2NextSequenceRecvData(safe_base64_to_bytes(g_msg.path), g_msg.next_seq_recv);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v2.NextSequenceRecvData` - returns the SignBytes data for verification of the next sequence to be received.
 */
export const expandIbcLightclientsSolomachineV2NextSequenceRecvData = ([atu8_path, sg_next_seq_recv]) => ({
    path: safe_bytes_to_base64(atu8_path),
    next_seq_recv: sg_next_seq_recv,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3ClientState}
 */
export const condenseIbcLightclientsSolomachineV3ClientState = (g_msg) => encodeIbcLightclientsSolomachineV3ClientState(g_msg.sequence, g_msg.is_frozen, apply_opt(g_msg.consensus_state, condenseIbcLightclientsSolomachineV3ConsensusState));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.ClientState` - defines a solo machine client that tracks the current consensus state and if the client is frozen.
 */
export const expandIbcLightclientsSolomachineV3ClientState = ([sg_sequence, b_is_frozen, a_consensus_state]) => ({
    sequence: sg_sequence,
    is_frozen: !!b_is_frozen,
    consensus_state: a_consensus_state && expandIbcLightclientsSolomachineV3ConsensusState(a_consensus_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3ConsensusState}
 */
export const condenseIbcLightclientsSolomachineV3ConsensusState = (g_msg) => encodeIbcLightclientsSolomachineV3ConsensusState(condenseJsonAny(g_msg.public_key), g_msg.diversifier, g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.ConsensusState` - defines a solo machine consensus state. The sequence of a consensus state is contained in the "height" key used in storing the consensus state.
 */
export const expandIbcLightclientsSolomachineV3ConsensusState = ([a_public_key, s_diversifier, sg_timestamp]) => ({
    public_key: a_public_key && expandJsonAny(a_public_key),
    diversifier: s_diversifier,
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3Header}
 */
export const condenseIbcLightclientsSolomachineV3Header = (g_msg) => encodeIbcLightclientsSolomachineV3Header(g_msg.timestamp, safe_base64_to_bytes(g_msg.signature), condenseJsonAny(g_msg.new_public_key), g_msg.new_diversifier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.Header` - defines a solo machine consensus header
 */
export const expandIbcLightclientsSolomachineV3Header = ([sg_timestamp, atu8_signature, a_new_public_key, s_new_diversifier]) => ({
    timestamp: sg_timestamp,
    signature: safe_bytes_to_base64(atu8_signature),
    new_public_key: a_new_public_key && expandJsonAny(a_new_public_key),
    new_diversifier: s_new_diversifier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3Misbehaviour}
 */
export const condenseIbcLightclientsSolomachineV3Misbehaviour = (g_msg) => encodeIbcLightclientsSolomachineV3Misbehaviour(g_msg.sequence, apply_opt(g_msg.signature_one, condenseIbcLightclientsSolomachineV3SignatureAndData), apply_opt(g_msg.signature_two, condenseIbcLightclientsSolomachineV3SignatureAndData));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.Misbehaviour` - defines misbehaviour for a solo machine which consists of a sequence and two signatures over different messages at that sequence.
 */
export const expandIbcLightclientsSolomachineV3Misbehaviour = ([sg_sequence, a_signature_one, a_signature_two]) => ({
    sequence: sg_sequence,
    signature_one: a_signature_one && expandIbcLightclientsSolomachineV3SignatureAndData(a_signature_one),
    signature_two: a_signature_two && expandIbcLightclientsSolomachineV3SignatureAndData(a_signature_two),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3SignatureAndData}
 */
export const condenseIbcLightclientsSolomachineV3SignatureAndData = (g_msg) => encodeIbcLightclientsSolomachineV3SignatureAndData(safe_base64_to_bytes(g_msg.signature), safe_base64_to_bytes(g_msg.path), safe_base64_to_bytes(g_msg.data), g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.SignatureAndData` - contains a signature and the data signed over to create that signature.
 */
export const expandIbcLightclientsSolomachineV3SignatureAndData = ([atu8_signature, atu8_path, atu8_data, sg_timestamp]) => ({
    signature: safe_bytes_to_base64(atu8_signature),
    path: safe_bytes_to_base64(atu8_path),
    data: safe_bytes_to_base64(atu8_data),
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3TimestampedSignatureData}
 */
export const condenseIbcLightclientsSolomachineV3TimestampedSignatureData = (g_msg) => encodeIbcLightclientsSolomachineV3TimestampedSignatureData(safe_base64_to_bytes(g_msg.signature_data), g_msg.timestamp);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.TimestampedSignatureData` - contains the signature data and the timestamp of the signature.
 */
export const expandIbcLightclientsSolomachineV3TimestampedSignatureData = ([atu8_signature_data, sg_timestamp]) => ({
    signature_data: safe_bytes_to_base64(atu8_signature_data),
    timestamp: sg_timestamp,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3SignBytes}
 */
export const condenseIbcLightclientsSolomachineV3SignBytes = (g_msg) => encodeIbcLightclientsSolomachineV3SignBytes(g_msg.sequence, g_msg.timestamp, g_msg.diversifier, safe_base64_to_bytes(g_msg.path), safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.SignBytes` - defines the signed bytes used for signature verification.
 */
export const expandIbcLightclientsSolomachineV3SignBytes = ([sg_sequence, sg_timestamp, s_diversifier, atu8_path, atu8_data]) => ({
    sequence: sg_sequence,
    timestamp: sg_timestamp,
    diversifier: s_diversifier,
    path: safe_bytes_to_base64(atu8_path),
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsSolomachineV3HeaderData}
 */
export const condenseIbcLightclientsSolomachineV3HeaderData = (g_msg) => encodeIbcLightclientsSolomachineV3HeaderData(condenseJsonAny(g_msg.new_pub_key), g_msg.new_diversifier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.solomachine.v3.HeaderData` - returns the SignBytes data for update verification.
 */
export const expandIbcLightclientsSolomachineV3HeaderData = ([a_new_pub_key, s_new_diversifier]) => ({
    new_pub_key: a_new_pub_key && expandJsonAny(a_new_pub_key),
    new_diversifier: s_new_diversifier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsTendermintV1ClientState}
 */
export const condenseIbcLightclientsTendermintV1ClientState = (g_msg) => encodeIbcLightclientsTendermintV1ClientState(g_msg.chain_id, apply_opt(g_msg.trust_level, condenseIbcLightclientsTendermintV1Fraction), parse_duration(g_msg.trusting_period), parse_duration(g_msg.unbonding_period), parse_duration(g_msg.max_clock_drift), apply_opt(g_msg.frozen_height, condenseIbcCoreClientV1Height), apply_opt(g_msg.latest_height, condenseIbcCoreClientV1Height), map(g_msg.proof_specs, condenseCosmosIcs23V1ProofSpec), g_msg.upgrade_path, g_msg.allow_update_after_expiry, g_msg.allow_update_after_misbehaviour);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.tendermint.v1.ClientState` - from Tendermint tracks the current validator set, latest height, and a possible frozen height.
 */
export const expandIbcLightclientsTendermintV1ClientState = ([si_chain, a_trust_level, a_trusting_period, a_unbonding_period, a_max_clock_drift, a_frozen_height, a_latest_height, a_proof_specs, a_upgrade_paths, b_allow_update_after_expiry, b_allow_update_after_misbehaviour]) => ({
    chain_id: si_chain,
    trust_level: a_trust_level && expandIbcLightclientsTendermintV1Fraction(a_trust_level),
    trusting_period: expand_duration(a_trusting_period),
    unbonding_period: expand_duration(a_unbonding_period),
    max_clock_drift: expand_duration(a_max_clock_drift),
    frozen_height: a_frozen_height && expandIbcCoreClientV1Height(a_frozen_height),
    latest_height: a_latest_height && expandIbcCoreClientV1Height(a_latest_height),
    proof_specs: a_proof_specs && map(a_proof_specs, expandCosmosIcs23V1ProofSpec),
    upgrade_path: a_upgrade_paths,
    allow_update_after_expiry: !!b_allow_update_after_expiry,
    allow_update_after_misbehaviour: !!b_allow_update_after_misbehaviour,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsTendermintV1Fraction}
 */
export const condenseIbcLightclientsTendermintV1Fraction = (g_msg) => encodeIbcLightclientsTendermintV1Fraction(g_msg.numerator, g_msg.denominator);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.tendermint.v1.Fraction` - defines the protobuf message type for tmmath.Fraction that only supports positive values.
 */
export const expandIbcLightclientsTendermintV1Fraction = ([sg_numerator, sg_denominator]) => ({
    numerator: sg_numerator,
    denominator: sg_denominator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsTendermintV1ConsensusState}
 */
export const condenseIbcLightclientsTendermintV1ConsensusState = (g_msg) => encodeIbcLightclientsTendermintV1ConsensusState(parse_timestamp(g_msg.timestamp), apply_opt(g_msg.root, condenseIbcCoreCommitmentV1MerkleRoot), safe_base64_to_bytes(g_msg.next_validators_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.tendermint.v1.ConsensusState` - defines the consensus state from Tendermint.
 */
export const expandIbcLightclientsTendermintV1ConsensusState = ([a_timestamp, a_root, atu8_next_validators_hash]) => ({
    timestamp: expand_timestamp(a_timestamp),
    root: a_root && expandIbcCoreCommitmentV1MerkleRoot(a_root),
    next_validators_hash: safe_bytes_to_base64(atu8_next_validators_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsTendermintV1Misbehaviour}
 */
export const condenseIbcLightclientsTendermintV1Misbehaviour = (g_msg) => encodeIbcLightclientsTendermintV1Misbehaviour(g_msg.client_id, apply_opt(g_msg.header_1, condenseIbcLightclientsTendermintV1Header), apply_opt(g_msg.header_2, condenseIbcLightclientsTendermintV1Header));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.tendermint.v1.Misbehaviour` - a wrapper over two conflicting Headers that implements Misbehaviour interface expected by ICS-02
 */
export const expandIbcLightclientsTendermintV1Misbehaviour = ([si_client, a_header_1, a_header_2]) => ({
    client_id: si_client,
    header_1: a_header_1 && expandIbcLightclientsTendermintV1Header(a_header_1),
    header_2: a_header_2 && expandIbcLightclientsTendermintV1Header(a_header_2),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsTendermintV1Header}
 */
export const condenseIbcLightclientsTendermintV1Header = (g_msg) => encodeIbcLightclientsTendermintV1Header(apply_opt(g_msg.signed_header, condenseTendermintTypesSignedHeader), apply_opt(g_msg.validator_set, condenseTendermintTypesValidatorSet), apply_opt(g_msg.trusted_height, condenseIbcCoreClientV1Height), apply_opt(g_msg.trusted_validators, condenseTendermintTypesValidatorSet));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.tendermint.v1.Header` - defines the Tendermint client consensus Header. It encapsulates all the information necessary to update from a trusted Tendermint ConsensusState. The inclusion of TrustedHeight and TrustedValidators allows this update to process correctly, so long as the ConsensusState for the TrustedHeight exists, this removes race conditions among relayers The SignedHeader and ValidatorSet are the new untrusted update fields for the client. The TrustedHeight is the height of a stored ConsensusState on the client that will be used to verify the new untrusted header. The Trusted ConsensusState must be within the unbonding period of current time in order to correctly verify, and the TrustedValidators must hash to TrustedConsensusState.NextValidatorsHash since that is the last trusted validator set at the TrustedHeight.
 */
export const expandIbcLightclientsTendermintV1Header = ([a_signed_header, a_validator_set, a_trusted_height, a_trusted_validators]) => ({
    signed_header: a_signed_header && expandTendermintTypesSignedHeader(a_signed_header),
    validator_set: a_validator_set && expandTendermintTypesValidatorSet(a_validator_set),
    trusted_height: a_trusted_height && expandIbcCoreClientV1Height(a_trusted_height),
    trusted_validators: a_trusted_validators && expandTendermintTypesValidatorSet(a_trusted_validators),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcLightclientsLocalhostV2ClientState}
 */
export const condenseIbcLightclientsLocalhostV2ClientState = (g_msg) => encodeIbcLightclientsLocalhostV2ClientState(apply_opt(g_msg.latest_height, condenseIbcCoreClientV1Height));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.lightclients.localhost.v2.ClientState` - defines the 09-localhost client state
 */
export const expandIbcLightclientsLocalhostV2ClientState = ([a_latest_height]) => ({
    latest_height: a_latest_height && expandIbcCoreClientV1Height(a_latest_height),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgRegisterPayee}
 */
export const condenseIbcApplicationsFeeV1MsgRegisterPayee = (g_msg) => encodeIbcApplicationsFeeV1MsgRegisterPayee(g_msg.port_id, g_msg.channel_id, g_msg.relayer, g_msg.payee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgRegisterPayee` - defines the request type for the RegisterPayee rpc
 */
export const expandIbcApplicationsFeeV1MsgRegisterPayee = ([si_port, si_channel, s_relayer, s_payee]) => ({
    port_id: si_port,
    channel_id: si_channel,
    relayer: s_relayer,
    payee: s_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgRegisterPayeeResponse}
 */
export const condenseIbcApplicationsFeeV1MsgRegisterPayeeResponse = (g_msg) => encodeIbcApplicationsFeeV1MsgRegisterPayeeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgRegisterPayeeResponse` - defines the response type for the RegisterPayee rpc
 */
export const expandIbcApplicationsFeeV1MsgRegisterPayeeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgRegisterCounterpartyPayee}
 */
export const condenseIbcApplicationsFeeV1MsgRegisterCounterpartyPayee = (g_msg) => encodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayee(g_msg.port_id, g_msg.channel_id, g_msg.relayer, g_msg.counterparty_payee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgRegisterCounterpartyPayee` - defines the request type for the RegisterCounterpartyPayee rpc
 */
export const expandIbcApplicationsFeeV1MsgRegisterCounterpartyPayee = ([si_port, si_channel, s_relayer, s_counterparty_payee]) => ({
    port_id: si_port,
    channel_id: si_channel,
    relayer: s_relayer,
    counterparty_payee: s_counterparty_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse}
 */
export const condenseIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse = (g_msg) => encodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse` - defines the response type for the RegisterCounterpartyPayee rpc
 */
export const expandIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgPayPacketFee}
 */
export const condenseIbcApplicationsFeeV1MsgPayPacketFee = (g_msg) => encodeIbcApplicationsFeeV1MsgPayPacketFee(apply_opt(g_msg.fee, condenseIbcApplicationsFeeV1Fee), g_msg.source_port_id, g_msg.source_channel_id, g_msg.signer, g_msg.relayers);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgPayPacketFee` - defines the request type for the PayPacketFee rpc This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be paid for
 */
export const expandIbcApplicationsFeeV1MsgPayPacketFee = ([a_fee, si_source_port, si_source_channel, s_signer, a_relayers]) => ({
    fee: a_fee && expandIbcApplicationsFeeV1Fee(a_fee),
    source_port_id: si_source_port,
    source_channel_id: si_source_channel,
    signer: s_signer,
    relayers: a_relayers,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1Fee}
 */
export const condenseIbcApplicationsFeeV1Fee = (g_msg) => encodeIbcApplicationsFeeV1Fee(map(g_msg.recv_fee, slimify_coin), map(g_msg.ack_fee, slimify_coin), map(g_msg.timeout_fee, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.Fee` - defines the ICS29 receive, acknowledgement and timeout fees
 */
export const expandIbcApplicationsFeeV1Fee = ([a_recv_fee, a_ack_fee, a_timeout_fee]) => ({
    recv_fee: a_recv_fee && map(a_recv_fee, expand_coin),
    ack_fee: a_ack_fee && map(a_ack_fee, expand_coin),
    timeout_fee: a_timeout_fee && map(a_timeout_fee, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgPayPacketFeeResponse}
 */
export const condenseIbcApplicationsFeeV1MsgPayPacketFeeResponse = (g_msg) => encodeIbcApplicationsFeeV1MsgPayPacketFeeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgPayPacketFeeResponse` - defines the response type for the PayPacketFee rpc
 */
export const expandIbcApplicationsFeeV1MsgPayPacketFeeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgPayPacketFeeAsync}
 */
export const condenseIbcApplicationsFeeV1MsgPayPacketFeeAsync = (g_msg) => encodeIbcApplicationsFeeV1MsgPayPacketFeeAsync(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId), apply_opt(g_msg.packet_fee, condenseIbcApplicationsFeeV1PacketFee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgPayPacketFeeAsync` - defines the request type for the PayPacketFeeAsync rpc This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)
 */
export const expandIbcApplicationsFeeV1MsgPayPacketFeeAsync = ([a_packet_id, a_packet_fee]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
    packet_fee: a_packet_fee && expandIbcApplicationsFeeV1PacketFee(a_packet_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1PacketFee}
 */
export const condenseIbcApplicationsFeeV1PacketFee = (g_msg) => encodeIbcApplicationsFeeV1PacketFee(apply_opt(g_msg.fee, condenseIbcApplicationsFeeV1Fee), g_msg.refund_address, g_msg.relayers);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.PacketFee` - contains ICS29 relayer fees, refund address and optional list of permitted relayers
 */
export const expandIbcApplicationsFeeV1PacketFee = ([a_fee, sa_refund, a_relayers]) => ({
    fee: a_fee && expandIbcApplicationsFeeV1Fee(a_fee),
    refund_address: sa_refund,
    relayers: a_relayers,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse}
 */
export const condenseIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse = (g_msg) => encodeIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse` - defines the response type for the PayPacketFeeAsync rpc
 */
export const expandIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1IncentivizedAcknowledgement}
 */
export const condenseIbcApplicationsFeeV1IncentivizedAcknowledgement = (g_msg) => encodeIbcApplicationsFeeV1IncentivizedAcknowledgement(safe_base64_to_bytes(g_msg.app_acknowledgement), g_msg.forward_relayer_address, g_msg.underlying_app_success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.IncentivizedAcknowledgement` - the acknowledgement format to be used by applications wrapped in the fee middleware
 */
export const expandIbcApplicationsFeeV1IncentivizedAcknowledgement = ([atu8_app_acknowledgement, sa_forward_relayer, b_underlying_app_success]) => ({
    app_acknowledgement: safe_bytes_to_base64(atu8_app_acknowledgement),
    forward_relayer_address: sa_forward_relayer,
    underlying_app_success: !!b_underlying_app_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketsRequest}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketsRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), g_msg.query_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketsRequest` - defines the request type for the IncentivizedPackets rpc
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketsRequest = ([a_pagination, sg_query_height]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    query_height: sg_query_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketsResponse}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketsResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketsResponse(map(g_msg.incentivized_packets, condenseIbcApplicationsFeeV1IdentifiedPacketFees), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketsResponse` - defines the response type for the IncentivizedPackets rpc
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketsResponse = ([a_incentivized_packets, a_pagination]) => ({
    incentivized_packets: a_incentivized_packets && map(a_incentivized_packets, expandIbcApplicationsFeeV1IdentifiedPacketFees),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1IdentifiedPacketFees}
 */
export const condenseIbcApplicationsFeeV1IdentifiedPacketFees = (g_msg) => encodeIbcApplicationsFeeV1IdentifiedPacketFees(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId), map(g_msg.packet_fees, condenseIbcApplicationsFeeV1PacketFee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.IdentifiedPacketFees` - contains a list of type PacketFee and associated PacketId
 */
export const expandIbcApplicationsFeeV1IdentifiedPacketFees = ([a_packet_id, a_packet_fees]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
    packet_fees: a_packet_fees && map(a_packet_fees, expandIbcApplicationsFeeV1PacketFee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketRequest}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketRequest(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId), g_msg.query_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketRequest` - defines the request type for the IncentivizedPacket rpc
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketRequest = ([a_packet_id, sg_query_height]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
    query_height: sg_query_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketResponse}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketResponse(apply_opt(g_msg.incentivized_packet, condenseIbcApplicationsFeeV1IdentifiedPacketFees));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketResponse` - QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket rpc
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketResponse = ([a_incentivized_packet]) => ({
    incentivized_packet: a_incentivized_packet && expandIbcApplicationsFeeV1IdentifiedPacketFees(a_incentivized_packet),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), g_msg.port_id, g_msg.channel_id, g_msg.query_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest` - defines the request type for querying for all incentivized packets for a specific channel
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest = ([a_pagination, si_port, si_channel, sg_query_height]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    port_id: si_port,
    channel_id: si_channel,
    query_height: sg_query_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse}
 */
export const condenseIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse(map(g_msg.incentivized_packets, condenseIbcApplicationsFeeV1IdentifiedPacketFees), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse` - QueryIncentivizedPacketsResponse defines the response type for the incentivized packets RPC
 */
export const expandIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse = ([a_incentivized_packets, a_pagination]) => ({
    incentivized_packets: a_incentivized_packets && map(a_incentivized_packets, expandIbcApplicationsFeeV1IdentifiedPacketFees),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalRecvFeesRequest}
 */
export const condenseIbcApplicationsFeeV1QueryTotalRecvFeesRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalRecvFeesRequest(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalRecvFeesRequest` - defines the request type for the TotalRecvFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalRecvFeesRequest = ([a_packet_id]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalRecvFeesResponse}
 */
export const condenseIbcApplicationsFeeV1QueryTotalRecvFeesResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalRecvFeesResponse(map(g_msg.recv_fees, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalRecvFeesResponse` - defines the response type for the TotalRecvFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalRecvFeesResponse = ([a_recv_fees]) => ({
    recv_fees: a_recv_fees && map(a_recv_fees, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalAckFeesRequest}
 */
export const condenseIbcApplicationsFeeV1QueryTotalAckFeesRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalAckFeesRequest(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalAckFeesRequest` - defines the request type for the TotalAckFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalAckFeesRequest = ([a_packet_id]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalAckFeesResponse}
 */
export const condenseIbcApplicationsFeeV1QueryTotalAckFeesResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalAckFeesResponse(map(g_msg.ack_fees, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalAckFeesResponse` - defines the response type for the TotalAckFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalAckFeesResponse = ([a_ack_fees]) => ({
    ack_fees: a_ack_fees && map(a_ack_fees, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest}
 */
export const condenseIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest(apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest` - defines the request type for the TotalTimeoutFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest = ([a_packet_id]) => ({
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse}
 */
export const condenseIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse(map(g_msg.timeout_fees, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse` - defines the response type for the TotalTimeoutFees rpc
 */
export const expandIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse = ([a_timeout_fees]) => ({
    timeout_fees: a_timeout_fees && map(a_timeout_fees, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryPayeeRequest}
 */
export const condenseIbcApplicationsFeeV1QueryPayeeRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryPayeeRequest(g_msg.channel_id, g_msg.relayer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryPayeeRequest` - defines the request type for the Payee rpc
 */
export const expandIbcApplicationsFeeV1QueryPayeeRequest = ([si_channel, s_relayer]) => ({
    channel_id: si_channel,
    relayer: s_relayer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryPayeeResponse}
 */
export const condenseIbcApplicationsFeeV1QueryPayeeResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryPayeeResponse(g_msg.payee_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryPayeeResponse` - defines the response type for the Payee rpc
 */
export const expandIbcApplicationsFeeV1QueryPayeeResponse = ([sa_payee]) => ({
    payee_address: sa_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryCounterpartyPayeeRequest}
 */
export const condenseIbcApplicationsFeeV1QueryCounterpartyPayeeRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryCounterpartyPayeeRequest(g_msg.channel_id, g_msg.relayer);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryCounterpartyPayeeRequest` - defines the request type for the CounterpartyPayee rpc
 */
export const expandIbcApplicationsFeeV1QueryCounterpartyPayeeRequest = ([si_channel, s_relayer]) => ({
    channel_id: si_channel,
    relayer: s_relayer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryCounterpartyPayeeResponse}
 */
export const condenseIbcApplicationsFeeV1QueryCounterpartyPayeeResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryCounterpartyPayeeResponse(g_msg.counterparty_payee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryCounterpartyPayeeResponse` - defines the response type for the CounterpartyPayee rpc
 */
export const expandIbcApplicationsFeeV1QueryCounterpartyPayeeResponse = ([s_counterparty_payee]) => ({
    counterparty_payee: s_counterparty_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest}
 */
export const condenseIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest), g_msg.query_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest` - defines the request type for the FeeEnabledChannels rpc
 */
export const expandIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest = ([a_pagination, sg_query_height]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
    query_height: sg_query_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse}
 */
export const condenseIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse(map(g_msg.fee_enabled_channels, condenseIbcApplicationsFeeV1FeeEnabledChannel), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse` - defines the response type for the FeeEnabledChannels rpc
 */
export const expandIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse = ([a_fee_enabled_channels, a_pagination]) => ({
    fee_enabled_channels: a_fee_enabled_channels && map(a_fee_enabled_channels, expandIbcApplicationsFeeV1FeeEnabledChannel),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1FeeEnabledChannel}
 */
export const condenseIbcApplicationsFeeV1FeeEnabledChannel = (g_msg) => encodeIbcApplicationsFeeV1FeeEnabledChannel(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.FeeEnabledChannel` - contains the PortID & ChannelID for a fee enabled channel
 */
export const expandIbcApplicationsFeeV1FeeEnabledChannel = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryFeeEnabledChannelRequest}
 */
export const condenseIbcApplicationsFeeV1QueryFeeEnabledChannelRequest = (g_msg) => encodeIbcApplicationsFeeV1QueryFeeEnabledChannelRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryFeeEnabledChannelRequest` - defines the request type for the FeeEnabledChannel rpc
 */
export const expandIbcApplicationsFeeV1QueryFeeEnabledChannelRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1QueryFeeEnabledChannelResponse}
 */
export const condenseIbcApplicationsFeeV1QueryFeeEnabledChannelResponse = (g_msg) => encodeIbcApplicationsFeeV1QueryFeeEnabledChannelResponse(g_msg.fee_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.QueryFeeEnabledChannelResponse` - defines the response type for the FeeEnabledChannel rpc
 */
export const expandIbcApplicationsFeeV1QueryFeeEnabledChannelResponse = ([b_fee_enabled]) => ({
    fee_enabled: !!b_fee_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1Metadata}
 */
export const condenseIbcApplicationsFeeV1Metadata = (g_msg) => encodeIbcApplicationsFeeV1Metadata(g_msg.fee_version, g_msg.app_version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.Metadata` - defines the ICS29 channel specific metadata encoded into the channel version bytestring See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
 */
export const expandIbcApplicationsFeeV1Metadata = ([s_fee_version, s_app_version]) => ({
    fee_version: s_fee_version,
    app_version: s_app_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1PacketFees}
 */
export const condenseIbcApplicationsFeeV1PacketFees = (g_msg) => encodeIbcApplicationsFeeV1PacketFees(map(g_msg.packet_fees, condenseIbcApplicationsFeeV1PacketFee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.PacketFees` - contains a list of type PacketFee
 */
export const expandIbcApplicationsFeeV1PacketFees = ([a_packet_fees]) => ({
    packet_fees: a_packet_fees && map(a_packet_fees, expandIbcApplicationsFeeV1PacketFee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1GenesisState}
 */
export const condenseIbcApplicationsFeeV1GenesisState = (g_msg) => encodeIbcApplicationsFeeV1GenesisState(map(g_msg.identified_fees, condenseIbcApplicationsFeeV1IdentifiedPacketFees), map(g_msg.fee_enabled_channels, condenseIbcApplicationsFeeV1FeeEnabledChannel), map(g_msg.registered_payees, condenseIbcApplicationsFeeV1RegisteredPayee), map(g_msg.registered_counterparty_payees, condenseIbcApplicationsFeeV1RegisteredCounterpartyPayee), map(g_msg.forward_relayers, condenseIbcApplicationsFeeV1ForwardRelayerAddress));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.GenesisState` - defines the ICS29 fee middleware genesis state
 */
export const expandIbcApplicationsFeeV1GenesisState = ([a_identified_fees, a_fee_enabled_channels, a_registered_payees, a_registered_counterparty_payees, a_forward_relayers]) => ({
    identified_fees: a_identified_fees && map(a_identified_fees, expandIbcApplicationsFeeV1IdentifiedPacketFees),
    fee_enabled_channels: a_fee_enabled_channels && map(a_fee_enabled_channels, expandIbcApplicationsFeeV1FeeEnabledChannel),
    registered_payees: a_registered_payees && map(a_registered_payees, expandIbcApplicationsFeeV1RegisteredPayee),
    registered_counterparty_payees: a_registered_counterparty_payees && map(a_registered_counterparty_payees, expandIbcApplicationsFeeV1RegisteredCounterpartyPayee),
    forward_relayers: a_forward_relayers && map(a_forward_relayers, expandIbcApplicationsFeeV1ForwardRelayerAddress),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1RegisteredPayee}
 */
export const condenseIbcApplicationsFeeV1RegisteredPayee = (g_msg) => encodeIbcApplicationsFeeV1RegisteredPayee(g_msg.channel_id, g_msg.relayer, g_msg.payee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.RegisteredPayee` - contains the relayer address and payee address for a specific channel
 */
export const expandIbcApplicationsFeeV1RegisteredPayee = ([si_channel, s_relayer, s_payee]) => ({
    channel_id: si_channel,
    relayer: s_relayer,
    payee: s_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1RegisteredCounterpartyPayee}
 */
export const condenseIbcApplicationsFeeV1RegisteredCounterpartyPayee = (g_msg) => encodeIbcApplicationsFeeV1RegisteredCounterpartyPayee(g_msg.channel_id, g_msg.relayer, g_msg.counterparty_payee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.RegisteredCounterpartyPayee` - contains the relayer address and counterparty payee address for a specific channel (used for recv fee distribution)
 */
export const expandIbcApplicationsFeeV1RegisteredCounterpartyPayee = ([si_channel, s_relayer, s_counterparty_payee]) => ({
    channel_id: si_channel,
    relayer: s_relayer,
    counterparty_payee: s_counterparty_payee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsFeeV1ForwardRelayerAddress}
 */
export const condenseIbcApplicationsFeeV1ForwardRelayerAddress = (g_msg) => encodeIbcApplicationsFeeV1ForwardRelayerAddress(g_msg.address, apply_opt(g_msg.packet_id, condenseIbcCoreChannelV1PacketId));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.fee.v1.ForwardRelayerAddress` - contains the forward relayer address and PacketId used for async acknowledgements
 */
export const expandIbcApplicationsFeeV1ForwardRelayerAddress = ([sa_address, a_packet_id]) => ({
    address: sa_address,
    packet_id: a_packet_id && expandIbcCoreChannelV1PacketId(a_packet_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1MsgTransfer}
 */
export const condenseIbcApplicationsTransferV1MsgTransfer = (g_msg) => encodeIbcApplicationsTransferV1MsgTransfer(g_msg.source_port, g_msg.source_channel, slimify_coin(g_msg.token), g_msg.sender, g_msg.receiver, apply_opt(g_msg.timeout_height, condenseIbcCoreClientV1Height), g_msg.timeout_timestamp, g_msg.memo);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.MsgTransfer` - defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 */
export const expandIbcApplicationsTransferV1MsgTransfer = ([s_source_port, s_source_channel, a_token, sa_sender, sa_receiver, a_timeout_height, sg_timeout_timestamp, s_memo]) => ({
    source_port: s_source_port,
    source_channel: s_source_channel,
    token: a_token && expand_coin(a_token),
    sender: sa_sender,
    receiver: sa_receiver,
    timeout_height: a_timeout_height && expandIbcCoreClientV1Height(a_timeout_height),
    timeout_timestamp: sg_timeout_timestamp,
    memo: s_memo,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1MsgTransferResponse}
 */
export const condenseIbcApplicationsTransferV1MsgTransferResponse = (g_msg) => encodeIbcApplicationsTransferV1MsgTransferResponse(g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.MsgTransferResponse` - defines the Msg/Transfer response type.
 */
export const expandIbcApplicationsTransferV1MsgTransferResponse = ([sg_sequence]) => ({
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1MsgUpdateParams}
 */
export const condenseIbcApplicationsTransferV1MsgUpdateParams = (g_msg) => encodeIbcApplicationsTransferV1MsgUpdateParams(g_msg.signer, apply_opt(g_msg.params, condenseIbcApplicationsTransferV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.MsgUpdateParams` - the Msg/UpdateParams request type.
 */
export const expandIbcApplicationsTransferV1MsgUpdateParams = ([s_signer, a_params]) => ({
    signer: s_signer,
    params: a_params && expandIbcApplicationsTransferV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1Params}
 */
export const condenseIbcApplicationsTransferV1Params = (g_msg) => encodeIbcApplicationsTransferV1Params(g_msg.send_enabled, g_msg.receive_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.Params` - defines the set of IBC transfer parameters. NOTE: To prevent a single token from being transferred, set the TransfersEnabled parameter to true and then set the bank module's SendEnabled parameter for the denomination to false.
 */
export const expandIbcApplicationsTransferV1Params = ([b_send_enabled, b_receive_enabled]) => ({
    send_enabled: !!b_send_enabled,
    receive_enabled: !!b_receive_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1MsgUpdateParamsResponse}
 */
export const condenseIbcApplicationsTransferV1MsgUpdateParamsResponse = (g_msg) => encodeIbcApplicationsTransferV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message.
 */
export const expandIbcApplicationsTransferV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1DenomTrace}
 */
export const condenseIbcApplicationsTransferV1DenomTrace = (g_msg) => encodeIbcApplicationsTransferV1DenomTrace(g_msg.path, g_msg.base_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.DenomTrace` - contains the base denomination for ICS20 fungible tokens and the source tracing information path.
 */
export const expandIbcApplicationsTransferV1DenomTrace = ([s_path, s_base_denom]) => ({
    path: s_path,
    base_denom: s_base_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomTraceRequest}
 */
export const condenseIbcApplicationsTransferV1QueryDenomTraceRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomTraceRequest(g_msg.hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomTraceRequest` - the request type for the Query/DenomTrace RPC method
 */
export const expandIbcApplicationsTransferV1QueryDenomTraceRequest = ([s_hash]) => ({
    hash: s_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomTraceResponse}
 */
export const condenseIbcApplicationsTransferV1QueryDenomTraceResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomTraceResponse(apply_opt(g_msg.denom_trace, condenseIbcApplicationsTransferV1DenomTrace));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomTraceResponse` - the response type for the Query/DenomTrace RPC method.
 */
export const expandIbcApplicationsTransferV1QueryDenomTraceResponse = ([a_denom_trace]) => ({
    denom_trace: a_denom_trace && expandIbcApplicationsTransferV1DenomTrace(a_denom_trace),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomTracesRequest}
 */
export const condenseIbcApplicationsTransferV1QueryDenomTracesRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomTracesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomTracesRequest` - QueryConnectionsRequest is the request type for the Query/DenomTraces RPC method
 */
export const expandIbcApplicationsTransferV1QueryDenomTracesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomTracesResponse}
 */
export const condenseIbcApplicationsTransferV1QueryDenomTracesResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomTracesResponse(map(g_msg.denom_traces, condenseIbcApplicationsTransferV1DenomTrace), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomTracesResponse` - QueryConnectionsResponse is the response type for the Query/DenomTraces RPC method.
 */
export const expandIbcApplicationsTransferV1QueryDenomTracesResponse = ([a_denom_traces, a_pagination]) => ({
    denom_traces: a_denom_traces && map(a_denom_traces, expandIbcApplicationsTransferV1DenomTrace),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryParamsRequest}
 */
export const condenseIbcApplicationsTransferV1QueryParamsRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandIbcApplicationsTransferV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryParamsResponse}
 */
export const condenseIbcApplicationsTransferV1QueryParamsResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryParamsResponse(apply_opt(g_msg.params, condenseIbcApplicationsTransferV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandIbcApplicationsTransferV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcApplicationsTransferV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomHashRequest}
 */
export const condenseIbcApplicationsTransferV1QueryDenomHashRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomHashRequest(g_msg.trace);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomHashRequest` - the request type for the Query/DenomHash RPC method
 */
export const expandIbcApplicationsTransferV1QueryDenomHashRequest = ([s_trace]) => ({
    trace: s_trace,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryDenomHashResponse}
 */
export const condenseIbcApplicationsTransferV1QueryDenomHashResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryDenomHashResponse(g_msg.hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryDenomHashResponse` - the response type for the Query/DenomHash RPC method.
 */
export const expandIbcApplicationsTransferV1QueryDenomHashResponse = ([s_hash]) => ({
    hash: s_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryEscrowAddressRequest}
 */
export const condenseIbcApplicationsTransferV1QueryEscrowAddressRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryEscrowAddressRequest(g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryEscrowAddressRequest` - the request type for the EscrowAddress RPC method.
 */
export const expandIbcApplicationsTransferV1QueryEscrowAddressRequest = ([si_port, si_channel]) => ({
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryEscrowAddressResponse}
 */
export const condenseIbcApplicationsTransferV1QueryEscrowAddressResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryEscrowAddressResponse(g_msg.escrow_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryEscrowAddressResponse` - the response type of the EscrowAddress RPC method.
 */
export const expandIbcApplicationsTransferV1QueryEscrowAddressResponse = ([sa_escrow]) => ({
    escrow_address: sa_escrow,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest}
 */
export const condenseIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest = (g_msg) => encodeIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest` - the request type for TotalEscrowForDenom RPC method.
 */
export const expandIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse}
 */
export const condenseIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse = (g_msg) => encodeIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse(slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse` - the response type for TotalEscrowForDenom RPC method.
 */
export const expandIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse = ([a_amount]) => ({
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1Allocation}
 */
export const condenseIbcApplicationsTransferV1Allocation = (g_msg) => encodeIbcApplicationsTransferV1Allocation(g_msg.source_port, g_msg.source_channel, map(g_msg.spend_limit, slimify_coin), g_msg.allow_list, g_msg.allowed_packet_data);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.Allocation` - defines the spend limit for a particular port and channel
 */
export const expandIbcApplicationsTransferV1Allocation = ([s_source_port, s_source_channel, a_spend_limit, a_allow_lists, a_allowed_packet_datas]) => ({
    source_port: s_source_port,
    source_channel: s_source_channel,
    spend_limit: a_spend_limit && map(a_spend_limit, expand_coin),
    allow_list: a_allow_lists,
    allowed_packet_data: a_allowed_packet_datas,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1TransferAuthorization}
 */
export const condenseIbcApplicationsTransferV1TransferAuthorization = (g_msg) => encodeIbcApplicationsTransferV1TransferAuthorization(map(g_msg.allocations, condenseIbcApplicationsTransferV1Allocation));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.TransferAuthorization` - allows the grantee to spend up to spend_limit coins from the granter's account for ibc transfer on a specific channel
 */
export const expandIbcApplicationsTransferV1TransferAuthorization = ([a_allocations]) => ({
    allocations: a_allocations && map(a_allocations, expandIbcApplicationsTransferV1Allocation),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV1GenesisState}
 */
export const condenseIbcApplicationsTransferV1GenesisState = (g_msg) => encodeIbcApplicationsTransferV1GenesisState(g_msg.port_id, map(g_msg.denom_traces, condenseIbcApplicationsTransferV1DenomTrace), apply_opt(g_msg.params, condenseIbcApplicationsTransferV1Params), map(g_msg.total_escrowed, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v1.GenesisState` - defines the ibc-transfer genesis state
 */
export const expandIbcApplicationsTransferV1GenesisState = ([si_port, a_denom_traces, a_params, a_total_escrowed]) => ({
    port_id: si_port,
    denom_traces: a_denom_traces && map(a_denom_traces, expandIbcApplicationsTransferV1DenomTrace),
    params: a_params && expandIbcApplicationsTransferV1Params(a_params),
    total_escrowed: a_total_escrowed && map(a_total_escrowed, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsTransferV2FungibleTokenPacketData}
 */
export const condenseIbcApplicationsTransferV2FungibleTokenPacketData = (g_msg) => encodeIbcApplicationsTransferV2FungibleTokenPacketData(g_msg.denom, g_msg.amount, g_msg.sender, g_msg.receiver, g_msg.memo);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.transfer.v2.FungibleTokenPacketData` - defines a struct for the packet payload See FungibleTokenPacketData spec: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 */
export const expandIbcApplicationsTransferV2FungibleTokenPacketData = ([s_denom, s_amount, sa_sender, sa_receiver, s_memo]) => ({
    denom: s_denom,
    amount: s_amount,
    sender: sa_sender,
    receiver: sa_receiver,
    memo: s_memo,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsV1InterchainAccount}
 */
export const condenseIbcApplicationsInterchainAccountsV1InterchainAccount = (g_msg) => encodeIbcApplicationsInterchainAccountsV1InterchainAccount(apply_opt(g_msg.base_account, condenseCosmosAuthV1beta1BaseAccount), g_msg.account_owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.v1.InterchainAccount` - An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 */
export const expandIbcApplicationsInterchainAccountsV1InterchainAccount = ([a_base_account, s_account_owner]) => ({
    base_account: a_base_account && expandCosmosAuthV1beta1BaseAccount(a_base_account),
    account_owner: s_account_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsV1InterchainAccountPacketData}
 */
export const condenseIbcApplicationsInterchainAccountsV1InterchainAccountPacketData = (g_msg) => encodeIbcApplicationsInterchainAccountsV1InterchainAccountPacketData(JsonToProtoEnumIbcApplicationsInterchainAccountsV1Type[g_msg.type], safe_base64_to_bytes(g_msg.data), g_msg.memo);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.v1.InterchainAccountPacketData` - comprised of a raw transaction, type of transaction and optional memo field.
 */
export const expandIbcApplicationsInterchainAccountsV1InterchainAccountPacketData = ([xc_type, atu8_data, s_memo]) => ({
    type: xc_type >= 0 ? ProtoToJsonEnumIbcApplicationsInterchainAccountsV1Type[xc_type] : __UNDEFINED,
    data: safe_bytes_to_base64(atu8_data),
    memo: s_memo,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsV1CosmosTx}
 */
export const condenseIbcApplicationsInterchainAccountsV1CosmosTx = (g_msg) => encodeIbcApplicationsInterchainAccountsV1CosmosTx(map(g_msg.messages, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.v1.CosmosTx` - contains a list of sdk.Msg's. It should be used when sending transactions to an SDK host chain.
 */
export const expandIbcApplicationsInterchainAccountsV1CosmosTx = ([a_messages]) => ({
    messages: a_messages && map(a_messages, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsV1Metadata}
 */
export const condenseIbcApplicationsInterchainAccountsV1Metadata = (g_msg) => encodeIbcApplicationsInterchainAccountsV1Metadata(g_msg.version, g_msg.controller_connection_id, g_msg.host_connection_id, g_msg.address, g_msg.encoding, g_msg.tx_type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.v1.Metadata` - defines a set of protocol specific data encoded into the ICS27 channel version bytestring See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
 */
export const expandIbcApplicationsInterchainAccountsV1Metadata = ([s_version, si_controller_connection, si_host_connection, sa_address, s_encoding, s_tx_type]) => ({
    version: s_version,
    controller_connection_id: si_controller_connection,
    host_connection_id: si_host_connection,
    address: sa_address,
    encoding: s_encoding,
    tx_type: s_tx_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsHostV1MsgUpdateParams}
 */
export const condenseIbcApplicationsInterchainAccountsHostV1MsgUpdateParams = (g_msg) => encodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParams(g_msg.signer, apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsHostV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.host.v1.MsgUpdateParams` - defines the payload for Msg/UpdateParams
 */
export const expandIbcApplicationsInterchainAccountsHostV1MsgUpdateParams = ([s_signer, a_params]) => ({
    signer: s_signer,
    params: a_params && expandIbcApplicationsInterchainAccountsHostV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsHostV1Params}
 */
export const condenseIbcApplicationsInterchainAccountsHostV1Params = (g_msg) => encodeIbcApplicationsInterchainAccountsHostV1Params(g_msg.host_enabled, g_msg.allow_messages);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.host.v1.Params` - defines the set of on-chain interchain accounts parameters. The following parameters may be used to disable the host submodule.
 */
export const expandIbcApplicationsInterchainAccountsHostV1Params = ([b_host_enabled, a_allow_messages]) => ({
    host_enabled: !!b_host_enabled,
    allow_messages: a_allow_messages,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse}
 */
export const condenseIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse` - defines the response for Msg/UpdateParams
 */
export const expandIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsHostV1QueryParamsRequest}
 */
export const condenseIbcApplicationsInterchainAccountsHostV1QueryParamsRequest = (g_msg) => encodeIbcApplicationsInterchainAccountsHostV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.host.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandIbcApplicationsInterchainAccountsHostV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsHostV1QueryParamsResponse}
 */
export const condenseIbcApplicationsInterchainAccountsHostV1QueryParamsResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsHostV1QueryParamsResponse(apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsHostV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.host.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandIbcApplicationsInterchainAccountsHostV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcApplicationsInterchainAccountsHostV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount(g_msg.owner, g_msg.connection_id, g_msg.version, JsonToProtoEnumIbcCoreChannelV1Order[g_msg.ordering]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount` - defines the payload for Msg/RegisterAccount
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount = ([sa_owner, si_connection, s_version, xc_ordering]) => ({
    owner: sa_owner,
    connection_id: si_connection,
    version: s_version,
    ordering: xc_ordering >= 0 ? ProtoToJsonEnumIbcCoreChannelV1Order[xc_ordering] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse(g_msg.channel_id, g_msg.port_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse` - defines the response for Msg/RegisterAccount
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse = ([si_channel, si_port]) => ({
    channel_id: si_channel,
    port_id: si_port,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgSendTx}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgSendTx = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgSendTx(g_msg.owner, g_msg.connection_id, apply_opt(g_msg.packet_data, condenseIbcApplicationsInterchainAccountsV1InterchainAccountPacketData), g_msg.relative_timeout);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgSendTx` - defines the payload for Msg/SendTx
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgSendTx = ([sa_owner, si_connection, a_packet_data, sg_relative_timeout]) => ({
    owner: sa_owner,
    connection_id: si_connection,
    packet_data: a_packet_data && expandIbcApplicationsInterchainAccountsV1InterchainAccountPacketData(a_packet_data),
    relative_timeout: sg_relative_timeout,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse(g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse` - defines the response for MsgSendTx
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse = ([sg_sequence]) => ({
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams(g_msg.signer, apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsControllerV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams` - defines the payload for Msg/UpdateParams
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams = ([s_signer, a_params]) => ({
    signer: s_signer,
    params: a_params && expandIbcApplicationsInterchainAccountsControllerV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1Params}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1Params = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1Params(g_msg.controller_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.Params` - defines the set of on-chain interchain accounts parameters. The following parameters may be used to disable the controller submodule.
 */
export const expandIbcApplicationsInterchainAccountsControllerV1Params = ([b_controller_enabled]) => ({
    controller_enabled: !!b_controller_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse` - defines the response for Msg/UpdateParams
 */
export const expandIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest(g_msg.owner, g_msg.connection_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest` - the request type for the Query/InterchainAccount RPC method.
 */
export const expandIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest = ([sa_owner, si_connection]) => ({
    owner: sa_owner,
    connection_id: si_connection,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse` - the response type for the Query/InterchainAccount RPC method.
 */
export const expandIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse}
 */
export const condenseIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse = (g_msg) => encodeIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse(apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsControllerV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandIbcApplicationsInterchainAccountsControllerV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsGenesisV1GenesisState}
 */
export const condenseIbcApplicationsInterchainAccountsGenesisV1GenesisState = (g_msg) => encodeIbcApplicationsInterchainAccountsGenesisV1GenesisState(apply_opt(g_msg.controller_genesis_state, condenseIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState), apply_opt(g_msg.host_genesis_state, condenseIbcApplicationsInterchainAccountsGenesisV1HostGenesisState));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.genesis.v1.GenesisState` - defines the interchain accounts genesis state
 */
export const expandIbcApplicationsInterchainAccountsGenesisV1GenesisState = ([a_controller_genesis_state, a_host_genesis_state]) => ({
    controller_genesis_state: a_controller_genesis_state && expandIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState(a_controller_genesis_state),
    host_genesis_state: a_host_genesis_state && expandIbcApplicationsInterchainAccountsGenesisV1HostGenesisState(a_host_genesis_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState}
 */
export const condenseIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState = (g_msg) => encodeIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState(map(g_msg.active_channels, condenseIbcApplicationsInterchainAccountsGenesisV1ActiveChannel), map(g_msg.interchain_accounts, condenseIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount), g_msg.ports, apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsControllerV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState` - defines the interchain accounts controller genesis state
 */
export const expandIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState = ([a_active_channels, a_interchain_accounts, a_ports, a_params]) => ({
    active_channels: a_active_channels && map(a_active_channels, expandIbcApplicationsInterchainAccountsGenesisV1ActiveChannel),
    interchain_accounts: a_interchain_accounts && map(a_interchain_accounts, expandIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount),
    ports: a_ports,
    params: a_params && expandIbcApplicationsInterchainAccountsControllerV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsGenesisV1ActiveChannel}
 */
export const condenseIbcApplicationsInterchainAccountsGenesisV1ActiveChannel = (g_msg) => encodeIbcApplicationsInterchainAccountsGenesisV1ActiveChannel(g_msg.connection_id, g_msg.port_id, g_msg.channel_id, g_msg.is_middleware_enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.genesis.v1.ActiveChannel` - contains a connection ID, port ID and associated active channel ID, as well as a boolean flag to indicate if the channel is middleware enabled
 */
export const expandIbcApplicationsInterchainAccountsGenesisV1ActiveChannel = ([si_connection, si_port, si_channel, b_is_middleware_enabled]) => ({
    connection_id: si_connection,
    port_id: si_port,
    channel_id: si_channel,
    is_middleware_enabled: !!b_is_middleware_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount}
 */
export const condenseIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount = (g_msg) => encodeIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount(g_msg.connection_id, g_msg.port_id, g_msg.account_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount` - contains a connection ID, port ID and associated interchain account address
 */
export const expandIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount = ([si_connection, si_port, sa_account]) => ({
    connection_id: si_connection,
    port_id: si_port,
    account_address: sa_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedIbcApplicationsInterchainAccountsGenesisV1HostGenesisState}
 */
export const condenseIbcApplicationsInterchainAccountsGenesisV1HostGenesisState = (g_msg) => encodeIbcApplicationsInterchainAccountsGenesisV1HostGenesisState(map(g_msg.active_channels, condenseIbcApplicationsInterchainAccountsGenesisV1ActiveChannel), map(g_msg.interchain_accounts, condenseIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount), g_msg.port, apply_opt(g_msg.params, condenseIbcApplicationsInterchainAccountsHostV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `ibc.applications.interchain_accounts.genesis.v1.HostGenesisState` - defines the interchain accounts host genesis state
 */
export const expandIbcApplicationsInterchainAccountsGenesisV1HostGenesisState = ([a_active_channels, a_interchain_accounts, s_port, a_params]) => ({
    active_channels: a_active_channels && map(a_active_channels, expandIbcApplicationsInterchainAccountsGenesisV1ActiveChannel),
    interchain_accounts: a_interchain_accounts && map(a_interchain_accounts, expandIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount),
    port: s_port,
    params: a_params && expandIbcApplicationsInterchainAccountsHostV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreCode}
 */
export const condenseCosmwasmWasmV1MsgStoreCode = (g_msg) => encodeCosmwasmWasmV1MsgStoreCode(g_msg.sender, safe_base64_to_bytes(g_msg.wasm_byte_code), apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreCode` - submit Wasm code to the system
 */
export const expandCosmwasmWasmV1MsgStoreCode = ([sa_sender, atu8_wasm_byte_code, , , a_instantiate_permission]) => ({
    sender: sa_sender,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AccessConfig}
 */
export const condenseCosmwasmWasmV1AccessConfig = (g_msg) => encodeCosmwasmWasmV1AccessConfig(JsonToProtoEnumCosmwasmWasmV1AccessType[g_msg.permission], g_msg.addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AccessConfig` - access control type.
 */
export const expandCosmwasmWasmV1AccessConfig = ([xc_permission, , a_addresses]) => ({
    permission: xc_permission >= 0 ? ProtoToJsonEnumCosmwasmWasmV1AccessType[xc_permission] : __UNDEFINED,
    addresses: a_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreCodeResponse}
 */
export const condenseCosmwasmWasmV1MsgStoreCodeResponse = (g_msg) => encodeCosmwasmWasmV1MsgStoreCodeResponse(g_msg.code_id, safe_base64_to_bytes(g_msg.checksum));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreCodeResponse` - returns store result data.
 */
export const expandCosmwasmWasmV1MsgStoreCodeResponse = ([sg_code_id, atu8_checksum]) => ({
    code_id: sg_code_id,
    checksum: safe_bytes_to_base64(atu8_checksum),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgInstantiateContract}
 */
export const condenseCosmwasmWasmV1MsgInstantiateContract = (g_msg) => encodeCosmwasmWasmV1MsgInstantiateContract(g_msg.sender, g_msg.admin, g_msg.code_id, g_msg.label, safe_base64_to_bytes(g_msg.msg), map(g_msg.funds, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgInstantiateContract` - create a new smart contract instance for the given code id.
 */
export const expandCosmwasmWasmV1MsgInstantiateContract = ([sa_sender, s_admin, sg_code_id, s_label, atu8_msg, a_funds]) => ({
    sender: sa_sender,
    admin: s_admin,
    code_id: sg_code_id,
    label: s_label,
    msg: safe_bytes_to_base64(atu8_msg),
    funds: a_funds && map(a_funds, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgInstantiateContractResponse}
 */
export const condenseCosmwasmWasmV1MsgInstantiateContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgInstantiateContractResponse(g_msg.address, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgInstantiateContractResponse` - return instantiation result data
 */
export const expandCosmwasmWasmV1MsgInstantiateContractResponse = ([sa_address, atu8_data]) => ({
    address: sa_address,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgInstantiateContract2}
 */
export const condenseCosmwasmWasmV1MsgInstantiateContract2 = (g_msg) => encodeCosmwasmWasmV1MsgInstantiateContract2(g_msg.sender, g_msg.admin, g_msg.code_id, g_msg.label, safe_base64_to_bytes(g_msg.msg), map(g_msg.funds, slimify_coin), safe_base64_to_bytes(g_msg.salt), g_msg.fix_msg);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgInstantiateContract2` - create a new smart contract instance for the given code id with a predicable address.
 */
export const expandCosmwasmWasmV1MsgInstantiateContract2 = ([sa_sender, s_admin, sg_code_id, s_label, atu8_msg, a_funds, atu8_salt, b_fix_msg]) => ({
    sender: sa_sender,
    admin: s_admin,
    code_id: sg_code_id,
    label: s_label,
    msg: safe_bytes_to_base64(atu8_msg),
    funds: a_funds && map(a_funds, expand_coin),
    salt: safe_bytes_to_base64(atu8_salt),
    fix_msg: !!b_fix_msg,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgInstantiateContract2Response}
 */
export const condenseCosmwasmWasmV1MsgInstantiateContract2Response = (g_msg) => encodeCosmwasmWasmV1MsgInstantiateContract2Response(g_msg.address, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgInstantiateContract2Response` - return instantiation result data
 */
export const expandCosmwasmWasmV1MsgInstantiateContract2Response = ([sa_address, atu8_data]) => ({
    address: sa_address,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgExecuteContract}
 */
export const condenseCosmwasmWasmV1MsgExecuteContract = (g_msg) => encodeCosmwasmWasmV1MsgExecuteContract(g_msg.sender, g_msg.contract, safe_base64_to_bytes(g_msg.msg), map(g_msg.funds, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgExecuteContract` - submits the given message data to a smart contract
 */
export const expandCosmwasmWasmV1MsgExecuteContract = ([sa_sender, s_contract, atu8_msg, , a_funds]) => ({
    sender: sa_sender,
    contract: s_contract,
    msg: safe_bytes_to_base64(atu8_msg),
    funds: a_funds && map(a_funds, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgExecuteContractResponse}
 */
export const condenseCosmwasmWasmV1MsgExecuteContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgExecuteContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgExecuteContractResponse` - returns execution result data.
 */
export const expandCosmwasmWasmV1MsgExecuteContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgMigrateContract}
 */
export const condenseCosmwasmWasmV1MsgMigrateContract = (g_msg) => encodeCosmwasmWasmV1MsgMigrateContract(g_msg.sender, g_msg.contract, g_msg.code_id, safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgMigrateContract` - runs a code upgrade/ downgrade for a smart contract
 */
export const expandCosmwasmWasmV1MsgMigrateContract = ([sa_sender, s_contract, sg_code_id, atu8_msg]) => ({
    sender: sa_sender,
    contract: s_contract,
    code_id: sg_code_id,
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgMigrateContractResponse}
 */
export const condenseCosmwasmWasmV1MsgMigrateContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgMigrateContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgMigrateContractResponse` - returns contract migration result data.
 */
export const expandCosmwasmWasmV1MsgMigrateContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateAdmin}
 */
export const condenseCosmwasmWasmV1MsgUpdateAdmin = (g_msg) => encodeCosmwasmWasmV1MsgUpdateAdmin(g_msg.sender, g_msg.new_admin, g_msg.contract);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateAdmin` - sets a new admin for a smart contract
 */
export const expandCosmwasmWasmV1MsgUpdateAdmin = ([sa_sender, s_new_admin, s_contract]) => ({
    sender: sa_sender,
    new_admin: s_new_admin,
    contract: s_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateAdminResponse}
 */
export const condenseCosmwasmWasmV1MsgUpdateAdminResponse = (g_msg) => encodeCosmwasmWasmV1MsgUpdateAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateAdminResponse` - returns empty data
 */
export const expandCosmwasmWasmV1MsgUpdateAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgClearAdmin}
 */
export const condenseCosmwasmWasmV1MsgClearAdmin = (g_msg) => encodeCosmwasmWasmV1MsgClearAdmin(g_msg.sender, g_msg.contract);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgClearAdmin` - removes any admin stored for a smart contract
 */
export const expandCosmwasmWasmV1MsgClearAdmin = ([sa_sender, , s_contract]) => ({
    sender: sa_sender,
    contract: s_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgClearAdminResponse}
 */
export const condenseCosmwasmWasmV1MsgClearAdminResponse = (g_msg) => encodeCosmwasmWasmV1MsgClearAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgClearAdminResponse` - returns empty data
 */
export const expandCosmwasmWasmV1MsgClearAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AccessConfigUpdate}
 */
export const condenseCosmwasmWasmV1AccessConfigUpdate = (g_msg) => encodeCosmwasmWasmV1AccessConfigUpdate(g_msg.code_id, apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AccessConfigUpdate` - contains the code id and the access config to be applied.
 */
export const expandCosmwasmWasmV1AccessConfigUpdate = ([sg_code_id, a_instantiate_permission]) => ({
    code_id: sg_code_id,
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateInstantiateConfig}
 */
export const condenseCosmwasmWasmV1MsgUpdateInstantiateConfig = (g_msg) => encodeCosmwasmWasmV1MsgUpdateInstantiateConfig(g_msg.sender, g_msg.code_id, apply_opt(g_msg.new_instantiate_permission, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateInstantiateConfig` - updates instantiate config for a smart contract
 */
export const expandCosmwasmWasmV1MsgUpdateInstantiateConfig = ([sa_sender, sg_code_id, a_new_instantiate_permission]) => ({
    sender: sa_sender,
    code_id: sg_code_id,
    new_instantiate_permission: a_new_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_new_instantiate_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateInstantiateConfigResponse}
 */
export const condenseCosmwasmWasmV1MsgUpdateInstantiateConfigResponse = (g_msg) => encodeCosmwasmWasmV1MsgUpdateInstantiateConfigResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse` - returns empty data
 */
export const expandCosmwasmWasmV1MsgUpdateInstantiateConfigResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateParams}
 */
export const condenseCosmwasmWasmV1MsgUpdateParams = (g_msg) => encodeCosmwasmWasmV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseCosmwasmWasmV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateParams` - the MsgUpdateParams request type. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandCosmwasmWasmV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1Params}
 */
export const condenseCosmwasmWasmV1Params = (g_msg) => encodeCosmwasmWasmV1Params(apply_opt(g_msg.code_upload_access, condenseCosmwasmWasmV1AccessConfig), JsonToProtoEnumCosmwasmWasmV1AccessType[g_msg.instantiate_default_permission]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.Params` - defines the set of wasm parameters.
 */
export const expandCosmwasmWasmV1Params = ([a_code_upload_access, xc_instantiate_default_permission]) => ({
    code_upload_access: a_code_upload_access && expandCosmwasmWasmV1AccessConfig(a_code_upload_access),
    instantiate_default_permission: xc_instantiate_default_permission >= 0 ? ProtoToJsonEnumCosmwasmWasmV1AccessType[xc_instantiate_default_permission] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateParamsResponse}
 */
export const condenseCosmwasmWasmV1MsgUpdateParamsResponse = (g_msg) => encodeCosmwasmWasmV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgSudoContract}
 */
export const condenseCosmwasmWasmV1MsgSudoContract = (g_msg) => encodeCosmwasmWasmV1MsgSudoContract(g_msg.authority, g_msg.contract, safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgSudoContract` - the MsgSudoContract request type. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgSudoContract = ([s_authority, s_contract, atu8_msg]) => ({
    authority: s_authority,
    contract: s_contract,
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgSudoContractResponse}
 */
export const condenseCosmwasmWasmV1MsgSudoContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgSudoContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgSudoContractResponse` - defines the response structure for executing a MsgSudoContract message. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgSudoContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgPinCodes}
 */
export const condenseCosmwasmWasmV1MsgPinCodes = (g_msg) => encodeCosmwasmWasmV1MsgPinCodes(g_msg.authority, g_msg.code_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgPinCodes` - the MsgPinCodes request type. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgPinCodes = ([s_authority, a_code_ids]) => ({
    authority: s_authority,
    code_ids: a_code_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgPinCodesResponse}
 */
export const condenseCosmwasmWasmV1MsgPinCodesResponse = (g_msg) => encodeCosmwasmWasmV1MsgPinCodesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgPinCodesResponse` - defines the response structure for executing a MsgPinCodes message. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgPinCodesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUnpinCodes}
 */
export const condenseCosmwasmWasmV1MsgUnpinCodes = (g_msg) => encodeCosmwasmWasmV1MsgUnpinCodes(g_msg.authority, g_msg.code_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUnpinCodes` - the MsgUnpinCodes request type. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgUnpinCodes = ([s_authority, a_code_ids]) => ({
    authority: s_authority,
    code_ids: a_code_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUnpinCodesResponse}
 */
export const condenseCosmwasmWasmV1MsgUnpinCodesResponse = (g_msg) => encodeCosmwasmWasmV1MsgUnpinCodesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUnpinCodesResponse` - defines the response structure for executing a MsgUnpinCodes message. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgUnpinCodesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreAndInstantiateContract}
 */
export const condenseCosmwasmWasmV1MsgStoreAndInstantiateContract = (g_msg) => encodeCosmwasmWasmV1MsgStoreAndInstantiateContract(g_msg.authority, safe_base64_to_bytes(g_msg.wasm_byte_code), apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig), g_msg.unpin_code, g_msg.admin, g_msg.label, safe_base64_to_bytes(g_msg.msg), map(g_msg.funds, slimify_coin), g_msg.source, g_msg.builder, safe_base64_to_bytes(g_msg.code_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreAndInstantiateContract` - the MsgStoreAndInstantiateContract request type. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgStoreAndInstantiateContract = ([s_authority, , atu8_wasm_byte_code, a_instantiate_permission, b_unpin_code, s_admin, s_label, atu8_msg, a_funds, s_source, s_builder, atu8_code_hash]) => ({
    authority: s_authority,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
    unpin_code: !!b_unpin_code,
    admin: s_admin,
    label: s_label,
    msg: safe_bytes_to_base64(atu8_msg),
    funds: a_funds && map(a_funds, expand_coin),
    source: s_source,
    builder: s_builder,
    code_hash: safe_bytes_to_base64(atu8_code_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreAndInstantiateContractResponse}
 */
export const condenseCosmwasmWasmV1MsgStoreAndInstantiateContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgStoreAndInstantiateContractResponse(g_msg.address, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse` - defines the response structure for executing a MsgStoreAndInstantiateContract message. Since: 0.40
 */
export const expandCosmwasmWasmV1MsgStoreAndInstantiateContractResponse = ([sa_address, atu8_data]) => ({
    address: sa_address,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgAddCodeUploadParamsAddresses}
 */
export const condenseCosmwasmWasmV1MsgAddCodeUploadParamsAddresses = (g_msg) => encodeCosmwasmWasmV1MsgAddCodeUploadParamsAddresses(g_msg.authority, g_msg.addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses` - the MsgAddCodeUploadParamsAddresses request type.
 */
export const expandCosmwasmWasmV1MsgAddCodeUploadParamsAddresses = ([s_authority, a_addresses]) => ({
    authority: s_authority,
    addresses: a_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse}
 */
export const condenseCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse = (g_msg) => encodeCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse` - defines the response structure for executing a MsgAddCodeUploadParamsAddresses message.
 */
export const expandCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses}
 */
export const condenseCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses = (g_msg) => encodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses(g_msg.authority, g_msg.addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses` - the MsgRemoveCodeUploadParamsAddresses request type.
 */
export const expandCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses = ([s_authority, a_addresses]) => ({
    authority: s_authority,
    addresses: a_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse}
 */
export const condenseCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse = (g_msg) => encodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse` - defines the response structure for executing a MsgRemoveCodeUploadParamsAddresses message.
 */
export const expandCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreAndMigrateContract}
 */
export const condenseCosmwasmWasmV1MsgStoreAndMigrateContract = (g_msg) => encodeCosmwasmWasmV1MsgStoreAndMigrateContract(g_msg.authority, safe_base64_to_bytes(g_msg.wasm_byte_code), apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig), g_msg.contract, safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreAndMigrateContract` - the MsgStoreAndMigrateContract request type. Since: 0.42
 */
export const expandCosmwasmWasmV1MsgStoreAndMigrateContract = ([s_authority, atu8_wasm_byte_code, a_instantiate_permission, s_contract, atu8_msg]) => ({
    authority: s_authority,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
    contract: s_contract,
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgStoreAndMigrateContractResponse}
 */
export const condenseCosmwasmWasmV1MsgStoreAndMigrateContractResponse = (g_msg) => encodeCosmwasmWasmV1MsgStoreAndMigrateContractResponse(g_msg.code_id, safe_base64_to_bytes(g_msg.checksum), safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse` - defines the response structure for executing a MsgStoreAndMigrateContract message. Since: 0.42
 */
export const expandCosmwasmWasmV1MsgStoreAndMigrateContractResponse = ([sg_code_id, atu8_checksum, atu8_data]) => ({
    code_id: sg_code_id,
    checksum: safe_bytes_to_base64(atu8_checksum),
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateContractLabel}
 */
export const condenseCosmwasmWasmV1MsgUpdateContractLabel = (g_msg) => encodeCosmwasmWasmV1MsgUpdateContractLabel(g_msg.sender, g_msg.new_label, g_msg.contract);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateContractLabel` - sets a new label for a smart contract
 */
export const expandCosmwasmWasmV1MsgUpdateContractLabel = ([sa_sender, s_new_label, s_contract]) => ({
    sender: sa_sender,
    new_label: s_new_label,
    contract: s_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgUpdateContractLabelResponse}
 */
export const condenseCosmwasmWasmV1MsgUpdateContractLabelResponse = (g_msg) => encodeCosmwasmWasmV1MsgUpdateContractLabelResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgUpdateContractLabelResponse` - returns empty data
 */
export const expandCosmwasmWasmV1MsgUpdateContractLabelResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AccessTypeParam}
 */
export const condenseCosmwasmWasmV1AccessTypeParam = (g_msg) => encodeCosmwasmWasmV1AccessTypeParam(JsonToProtoEnumCosmwasmWasmV1AccessType[g_msg.value]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AccessTypeParam` -
 */
export const expandCosmwasmWasmV1AccessTypeParam = ([xc_value]) => ({
    value: xc_value >= 0 ? ProtoToJsonEnumCosmwasmWasmV1AccessType[xc_value] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1CodeInfo}
 */
export const condenseCosmwasmWasmV1CodeInfo = (g_msg) => encodeCosmwasmWasmV1CodeInfo(safe_base64_to_bytes(g_msg.code_hash), g_msg.creator, apply_opt(g_msg.instantiate_config, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.CodeInfo` - data for the uploaded contract WASM code
 */
export const expandCosmwasmWasmV1CodeInfo = ([atu8_code_hash, sa_creator, , , a_instantiate_config]) => ({
    code_hash: safe_bytes_to_base64(atu8_code_hash),
    creator: sa_creator,
    instantiate_config: a_instantiate_config && expandCosmwasmWasmV1AccessConfig(a_instantiate_config),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1ContractInfo}
 */
export const condenseCosmwasmWasmV1ContractInfo = (g_msg) => encodeCosmwasmWasmV1ContractInfo(g_msg.code_id, g_msg.creator, g_msg.admin, g_msg.label, apply_opt(g_msg.created, condenseCosmwasmWasmV1AbsoluteTxPosition), g_msg.ibc_port_id, condenseJsonAny(g_msg.extension));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.ContractInfo` - stores a WASM contract instance
 */
export const expandCosmwasmWasmV1ContractInfo = ([sg_code_id, sa_creator, s_admin, s_label, a_created, si_ibc_port, a_extension]) => ({
    code_id: sg_code_id,
    creator: sa_creator,
    admin: s_admin,
    label: s_label,
    created: a_created && expandCosmwasmWasmV1AbsoluteTxPosition(a_created),
    ibc_port_id: si_ibc_port,
    extension: a_extension && expandJsonAny(a_extension),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AbsoluteTxPosition}
 */
export const condenseCosmwasmWasmV1AbsoluteTxPosition = (g_msg) => encodeCosmwasmWasmV1AbsoluteTxPosition(g_msg.block_height, g_msg.tx_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AbsoluteTxPosition` - a unique transaction position that allows for global ordering of transactions.
 */
export const expandCosmwasmWasmV1AbsoluteTxPosition = ([sg_block_height, sg_tx_index]) => ({
    block_height: sg_block_height,
    tx_index: sg_tx_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1ContractCodeHistoryEntry}
 */
export const condenseCosmwasmWasmV1ContractCodeHistoryEntry = (g_msg) => encodeCosmwasmWasmV1ContractCodeHistoryEntry(JsonToProtoEnumCosmwasmWasmV1ContractCodeHistoryOperationType[g_msg.operation], g_msg.code_id, apply_opt(g_msg.updated, condenseCosmwasmWasmV1AbsoluteTxPosition), safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.ContractCodeHistoryEntry` - metadata to a contract.
 */
export const expandCosmwasmWasmV1ContractCodeHistoryEntry = ([xc_operation, sg_code_id, a_updated, atu8_msg]) => ({
    operation: xc_operation >= 0 ? ProtoToJsonEnumCosmwasmWasmV1ContractCodeHistoryOperationType[xc_operation] : __UNDEFINED,
    code_id: sg_code_id,
    updated: a_updated && expandCosmwasmWasmV1AbsoluteTxPosition(a_updated),
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1Model}
 */
export const condenseCosmwasmWasmV1Model = (g_msg) => encodeCosmwasmWasmV1Model(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.Model` - a struct that holds a KV pair
 */
export const expandCosmwasmWasmV1Model = ([atu8_key, atu8_value]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractInfoRequest}
 */
export const condenseCosmwasmWasmV1QueryContractInfoRequest = (g_msg) => encodeCosmwasmWasmV1QueryContractInfoRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractInfoRequest` - the request type for the Query/ContractInfo RPC method
 */
export const expandCosmwasmWasmV1QueryContractInfoRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractInfoResponse}
 */
export const condenseCosmwasmWasmV1QueryContractInfoResponse = (g_msg) => encodeCosmwasmWasmV1QueryContractInfoResponse(g_msg.address, apply_opt(g_msg.contract_info, condenseCosmwasmWasmV1ContractInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractInfoResponse` - the response type for the Query/ContractInfo RPC method
 */
export const expandCosmwasmWasmV1QueryContractInfoResponse = ([sa_address, a_contract_info]) => ({
    address: sa_address,
    contract_info: a_contract_info && expandCosmwasmWasmV1ContractInfo(a_contract_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractHistoryRequest}
 */
export const condenseCosmwasmWasmV1QueryContractHistoryRequest = (g_msg) => encodeCosmwasmWasmV1QueryContractHistoryRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractHistoryRequest` - the request type for the Query/ContractHistory RPC method
 */
export const expandCosmwasmWasmV1QueryContractHistoryRequest = ([sa_address, a_pagination]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractHistoryResponse}
 */
export const condenseCosmwasmWasmV1QueryContractHistoryResponse = (g_msg) => encodeCosmwasmWasmV1QueryContractHistoryResponse(map(g_msg.entries, condenseCosmwasmWasmV1ContractCodeHistoryEntry), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractHistoryResponse` - the response type for the Query/ContractHistory RPC method
 */
export const expandCosmwasmWasmV1QueryContractHistoryResponse = ([a_entries, a_pagination]) => ({
    entries: a_entries && map(a_entries, expandCosmwasmWasmV1ContractCodeHistoryEntry),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractsByCodeRequest}
 */
export const condenseCosmwasmWasmV1QueryContractsByCodeRequest = (g_msg) => encodeCosmwasmWasmV1QueryContractsByCodeRequest(g_msg.code_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractsByCodeRequest` - the request type for the Query/ContractsByCode RPC method
 */
export const expandCosmwasmWasmV1QueryContractsByCodeRequest = ([sg_code_id, a_pagination]) => ({
    code_id: sg_code_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractsByCodeResponse}
 */
export const condenseCosmwasmWasmV1QueryContractsByCodeResponse = (g_msg) => encodeCosmwasmWasmV1QueryContractsByCodeResponse(g_msg.contracts, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractsByCodeResponse` - the response type for the Query/ContractsByCode RPC method
 */
export const expandCosmwasmWasmV1QueryContractsByCodeResponse = ([a_contracts, a_pagination]) => ({
    contracts: a_contracts,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryAllContractStateRequest}
 */
export const condenseCosmwasmWasmV1QueryAllContractStateRequest = (g_msg) => encodeCosmwasmWasmV1QueryAllContractStateRequest(g_msg.address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryAllContractStateRequest` - the request type for the Query/AllContractState RPC method
 */
export const expandCosmwasmWasmV1QueryAllContractStateRequest = ([sa_address, a_pagination]) => ({
    address: sa_address,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryAllContractStateResponse}
 */
export const condenseCosmwasmWasmV1QueryAllContractStateResponse = (g_msg) => encodeCosmwasmWasmV1QueryAllContractStateResponse(map(g_msg.models, condenseCosmwasmWasmV1Model), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryAllContractStateResponse` - the response type for the Query/AllContractState RPC method
 */
export const expandCosmwasmWasmV1QueryAllContractStateResponse = ([a_models, a_pagination]) => ({
    models: a_models && map(a_models, expandCosmwasmWasmV1Model),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryRawContractStateRequest}
 */
export const condenseCosmwasmWasmV1QueryRawContractStateRequest = (g_msg) => encodeCosmwasmWasmV1QueryRawContractStateRequest(g_msg.address, safe_base64_to_bytes(g_msg.query_data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryRawContractStateRequest` - the request type for the Query/RawContractState RPC method
 */
export const expandCosmwasmWasmV1QueryRawContractStateRequest = ([sa_address, atu8_query_data]) => ({
    address: sa_address,
    query_data: safe_bytes_to_base64(atu8_query_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryRawContractStateResponse}
 */
export const condenseCosmwasmWasmV1QueryRawContractStateResponse = (g_msg) => encodeCosmwasmWasmV1QueryRawContractStateResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryRawContractStateResponse` - the response type for the Query/RawContractState RPC method
 */
export const expandCosmwasmWasmV1QueryRawContractStateResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QuerySmartContractStateRequest}
 */
export const condenseCosmwasmWasmV1QuerySmartContractStateRequest = (g_msg) => encodeCosmwasmWasmV1QuerySmartContractStateRequest(g_msg.address, safe_base64_to_bytes(g_msg.query_data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QuerySmartContractStateRequest` - the request type for the Query/SmartContractState RPC method
 */
export const expandCosmwasmWasmV1QuerySmartContractStateRequest = ([sa_address, atu8_query_data]) => ({
    address: sa_address,
    query_data: safe_bytes_to_base64(atu8_query_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QuerySmartContractStateResponse}
 */
export const condenseCosmwasmWasmV1QuerySmartContractStateResponse = (g_msg) => encodeCosmwasmWasmV1QuerySmartContractStateResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QuerySmartContractStateResponse` - the response type for the Query/SmartContractState RPC method
 */
export const expandCosmwasmWasmV1QuerySmartContractStateResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryCodeRequest}
 */
export const condenseCosmwasmWasmV1QueryCodeRequest = (g_msg) => encodeCosmwasmWasmV1QueryCodeRequest(g_msg.code_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryCodeRequest` - the request type for the Query/Code RPC method
 */
export const expandCosmwasmWasmV1QueryCodeRequest = ([sg_code_id]) => ({
    code_id: sg_code_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1CodeInfoResponse}
 */
export const condenseCosmwasmWasmV1CodeInfoResponse = (g_msg) => encodeCosmwasmWasmV1CodeInfoResponse(g_msg.code_id, g_msg.creator, safe_base64_to_bytes(g_msg.data_hash), apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.CodeInfoResponse` - contains code meta data from CodeInfo
 */
export const expandCosmwasmWasmV1CodeInfoResponse = ([sg_code_id, sa_creator, atu8_data_hash, , , a_instantiate_permission]) => ({
    code_id: sg_code_id,
    creator: sa_creator,
    data_hash: safe_bytes_to_base64(atu8_data_hash),
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryCodeResponse}
 */
export const condenseCosmwasmWasmV1QueryCodeResponse = (g_msg) => encodeCosmwasmWasmV1QueryCodeResponse(apply_opt(g_msg.code_info, condenseCosmwasmWasmV1CodeInfoResponse), safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryCodeResponse` - the response type for the Query/Code RPC method
 */
export const expandCosmwasmWasmV1QueryCodeResponse = ([a_code_info, atu8_data]) => ({
    code_info: a_code_info && expandCosmwasmWasmV1CodeInfoResponse(a_code_info),
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryCodesRequest}
 */
export const condenseCosmwasmWasmV1QueryCodesRequest = (g_msg) => encodeCosmwasmWasmV1QueryCodesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryCodesRequest` - the request type for the Query/Codes RPC method
 */
export const expandCosmwasmWasmV1QueryCodesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryCodesResponse}
 */
export const condenseCosmwasmWasmV1QueryCodesResponse = (g_msg) => encodeCosmwasmWasmV1QueryCodesResponse(map(g_msg.code_infos, condenseCosmwasmWasmV1CodeInfoResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryCodesResponse` - the response type for the Query/Codes RPC method
 */
export const expandCosmwasmWasmV1QueryCodesResponse = ([a_code_infos, a_pagination]) => ({
    code_infos: a_code_infos && map(a_code_infos, expandCosmwasmWasmV1CodeInfoResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryPinnedCodesRequest}
 */
export const condenseCosmwasmWasmV1QueryPinnedCodesRequest = (g_msg) => encodeCosmwasmWasmV1QueryPinnedCodesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryPinnedCodesRequest` - the request type for the Query/PinnedCodes RPC method
 */
export const expandCosmwasmWasmV1QueryPinnedCodesRequest = ([, a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryPinnedCodesResponse}
 */
export const condenseCosmwasmWasmV1QueryPinnedCodesResponse = (g_msg) => encodeCosmwasmWasmV1QueryPinnedCodesResponse(g_msg.code_ids, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryPinnedCodesResponse` - the response type for the Query/PinnedCodes RPC method
 */
export const expandCosmwasmWasmV1QueryPinnedCodesResponse = ([a_code_ids, a_pagination]) => ({
    code_ids: a_code_ids,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryParamsRequest}
 */
export const condenseCosmwasmWasmV1QueryParamsRequest = (g_msg) => encodeCosmwasmWasmV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandCosmwasmWasmV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryParamsResponse}
 */
export const condenseCosmwasmWasmV1QueryParamsResponse = (g_msg) => encodeCosmwasmWasmV1QueryParamsResponse(apply_opt(g_msg.params, condenseCosmwasmWasmV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandCosmwasmWasmV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandCosmwasmWasmV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractsByCreatorRequest}
 */
export const condenseCosmwasmWasmV1QueryContractsByCreatorRequest = (g_msg) => encodeCosmwasmWasmV1QueryContractsByCreatorRequest(g_msg.creator_address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractsByCreatorRequest` - the request type for the Query/ContractsByCreator RPC method.
 */
export const expandCosmwasmWasmV1QueryContractsByCreatorRequest = ([sa_creator, a_pagination]) => ({
    creator_address: sa_creator,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1QueryContractsByCreatorResponse}
 */
export const condenseCosmwasmWasmV1QueryContractsByCreatorResponse = (g_msg) => encodeCosmwasmWasmV1QueryContractsByCreatorResponse(g_msg.contract_addresses, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.QueryContractsByCreatorResponse` - the response type for the Query/ContractsByCreator RPC method.
 */
export const expandCosmwasmWasmV1QueryContractsByCreatorResponse = ([a_contract_addresses, a_pagination]) => ({
    contract_addresses: a_contract_addresses,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1StoreCodeAuthorization}
 */
export const condenseCosmwasmWasmV1StoreCodeAuthorization = (g_msg) => encodeCosmwasmWasmV1StoreCodeAuthorization(map(g_msg.grants, condenseCosmwasmWasmV1CodeGrant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.StoreCodeAuthorization` - defines authorization for wasm code upload. Since: wasmd 0.42
 */
export const expandCosmwasmWasmV1StoreCodeAuthorization = ([a_grants]) => ({
    grants: a_grants && map(a_grants, expandCosmwasmWasmV1CodeGrant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1CodeGrant}
 */
export const condenseCosmwasmWasmV1CodeGrant = (g_msg) => encodeCosmwasmWasmV1CodeGrant(safe_base64_to_bytes(g_msg.code_hash), apply_opt(g_msg.instantiate_permission, condenseCosmwasmWasmV1AccessConfig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.CodeGrant` - a granted permission for a single code
 */
export const expandCosmwasmWasmV1CodeGrant = ([atu8_code_hash, a_instantiate_permission]) => ({
    code_hash: safe_bytes_to_base64(atu8_code_hash),
    instantiate_permission: a_instantiate_permission && expandCosmwasmWasmV1AccessConfig(a_instantiate_permission),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1ContractExecutionAuthorization}
 */
export const condenseCosmwasmWasmV1ContractExecutionAuthorization = (g_msg) => encodeCosmwasmWasmV1ContractExecutionAuthorization(map(g_msg.grants, condenseCosmwasmWasmV1ContractGrant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.ContractExecutionAuthorization` - defines authorization for wasm execute. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1ContractExecutionAuthorization = ([a_grants]) => ({
    grants: a_grants && map(a_grants, expandCosmwasmWasmV1ContractGrant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1ContractGrant}
 */
export const condenseCosmwasmWasmV1ContractGrant = (g_msg) => encodeCosmwasmWasmV1ContractGrant(g_msg.contract, condenseJsonAny(g_msg.limit), condenseJsonAny(g_msg.filter));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.ContractGrant` - a granted permission for a single contract Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1ContractGrant = ([s_contract, a_limit, a_filter]) => ({
    contract: s_contract,
    limit: a_limit && expandJsonAny(a_limit),
    filter: a_filter && expandJsonAny(a_filter),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1ContractMigrationAuthorization}
 */
export const condenseCosmwasmWasmV1ContractMigrationAuthorization = (g_msg) => encodeCosmwasmWasmV1ContractMigrationAuthorization(map(g_msg.grants, condenseCosmwasmWasmV1ContractGrant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.ContractMigrationAuthorization` - defines authorization for wasm contract migration. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1ContractMigrationAuthorization = ([a_grants]) => ({
    grants: a_grants && map(a_grants, expandCosmwasmWasmV1ContractGrant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MaxCallsLimit}
 */
export const condenseCosmwasmWasmV1MaxCallsLimit = (g_msg) => encodeCosmwasmWasmV1MaxCallsLimit(g_msg.remaining);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MaxCallsLimit` - limited number of calls to the contract. No funds transferable. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1MaxCallsLimit = ([sg_remaining]) => ({
    remaining: sg_remaining,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MaxFundsLimit}
 */
export const condenseCosmwasmWasmV1MaxFundsLimit = (g_msg) => encodeCosmwasmWasmV1MaxFundsLimit(map(g_msg.amounts, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MaxFundsLimit` - defines the maximal amounts that can be sent to the contract. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1MaxFundsLimit = ([a_amounts]) => ({
    amounts: a_amounts && map(a_amounts, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1CombinedLimit}
 */
export const condenseCosmwasmWasmV1CombinedLimit = (g_msg) => encodeCosmwasmWasmV1CombinedLimit(g_msg.calls_remaining, map(g_msg.amounts, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.CombinedLimit` - defines the maximal amounts that can be sent to a contract and the maximal number of calls executable. Both need to remain >0 to be valid. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1CombinedLimit = ([sg_calls_remaining, a_amounts]) => ({
    calls_remaining: sg_calls_remaining,
    amounts: a_amounts && map(a_amounts, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AllowAllMessagesFilter}
 */
export const condenseCosmwasmWasmV1AllowAllMessagesFilter = (g_msg) => encodeCosmwasmWasmV1AllowAllMessagesFilter();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AllowAllMessagesFilter` - a wildcard to allow any type of contract payload message. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1AllowAllMessagesFilter = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AcceptedMessageKeysFilter}
 */
export const condenseCosmwasmWasmV1AcceptedMessageKeysFilter = (g_msg) => encodeCosmwasmWasmV1AcceptedMessageKeysFilter(g_msg.keys);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AcceptedMessageKeysFilter` - accept only the specific contract message keys in the json object to be executed. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1AcceptedMessageKeysFilter = ([a_keys]) => ({
    keys: a_keys,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1AcceptedMessagesFilter}
 */
export const condenseCosmwasmWasmV1AcceptedMessagesFilter = (g_msg) => encodeCosmwasmWasmV1AcceptedMessagesFilter(map(g_msg.messages, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.AcceptedMessagesFilter` - accept only the specific raw contract messages to be executed. Since: wasmd 0.30
 */
export const expandCosmwasmWasmV1AcceptedMessagesFilter = ([a_messages]) => ({
    messages: map(a_messages, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1GenesisState}
 */
export const condenseCosmwasmWasmV1GenesisState = (g_msg) => encodeCosmwasmWasmV1GenesisState(apply_opt(g_msg.params, condenseCosmwasmWasmV1Params), map(g_msg.codes, condenseCosmwasmWasmV1Code), map(g_msg.contracts, condenseCosmwasmWasmV1Contract), map(g_msg.sequences, condenseCosmwasmWasmV1Sequence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.GenesisState` - - genesis state of x/wasm
 */
export const expandCosmwasmWasmV1GenesisState = ([a_params, a_codes, a_contracts, a_sequences]) => ({
    params: a_params && expandCosmwasmWasmV1Params(a_params),
    codes: a_codes && map(a_codes, expandCosmwasmWasmV1Code),
    contracts: a_contracts && map(a_contracts, expandCosmwasmWasmV1Contract),
    sequences: a_sequences && map(a_sequences, expandCosmwasmWasmV1Sequence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1Code}
 */
export const condenseCosmwasmWasmV1Code = (g_msg) => encodeCosmwasmWasmV1Code(g_msg.code_id, apply_opt(g_msg.code_info, condenseCosmwasmWasmV1CodeInfo), safe_base64_to_bytes(g_msg.code_bytes), g_msg.pinned);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.Code` - struct encompasses CodeInfo and CodeBytes
 */
export const expandCosmwasmWasmV1Code = ([sg_code_id, a_code_info, atu8_code_bytes, b_pinned]) => ({
    code_id: sg_code_id,
    code_info: a_code_info && expandCosmwasmWasmV1CodeInfo(a_code_info),
    code_bytes: safe_bytes_to_base64(atu8_code_bytes),
    pinned: !!b_pinned,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1Contract}
 */
export const condenseCosmwasmWasmV1Contract = (g_msg) => encodeCosmwasmWasmV1Contract(g_msg.contract_address, apply_opt(g_msg.contract_info, condenseCosmwasmWasmV1ContractInfo), map(g_msg.contract_state, condenseCosmwasmWasmV1Model), map(g_msg.contract_code_history, condenseCosmwasmWasmV1ContractCodeHistoryEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.Contract` - struct encompasses ContractAddress, ContractInfo, and ContractState
 */
export const expandCosmwasmWasmV1Contract = ([sa_contract, a_contract_info, a_contract_state, a_contract_code_history]) => ({
    contract_address: sa_contract,
    contract_info: a_contract_info && expandCosmwasmWasmV1ContractInfo(a_contract_info),
    contract_state: a_contract_state && map(a_contract_state, expandCosmwasmWasmV1Model),
    contract_code_history: a_contract_code_history && map(a_contract_code_history, expandCosmwasmWasmV1ContractCodeHistoryEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1Sequence}
 */
export const condenseCosmwasmWasmV1Sequence = (g_msg) => encodeCosmwasmWasmV1Sequence(safe_base64_to_bytes(g_msg.id_key), g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.Sequence` - key and value of an id generation counter
 */
export const expandCosmwasmWasmV1Sequence = ([atu8_id_key, sg_value]) => ({
    id_key: safe_bytes_to_base64(atu8_id_key),
    value: sg_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgIBCSend}
 */
export const condenseCosmwasmWasmV1MsgIBCSend = (g_msg) => encodeCosmwasmWasmV1MsgIBCSend(g_msg.channel, g_msg.timeout_height, g_msg.timeout_timestamp, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgIBCSend` -
 */
export const expandCosmwasmWasmV1MsgIBCSend = ([, s_channel, , sg_timeout_height, sg_timeout_timestamp, atu8_data]) => ({
    channel: s_channel,
    timeout_height: sg_timeout_height,
    timeout_timestamp: sg_timeout_timestamp,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgIBCSendResponse}
 */
export const condenseCosmwasmWasmV1MsgIBCSendResponse = (g_msg) => encodeCosmwasmWasmV1MsgIBCSendResponse(g_msg.sequence);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgIBCSendResponse` -
 */
export const expandCosmwasmWasmV1MsgIBCSendResponse = ([sg_sequence]) => ({
    sequence: sg_sequence,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedCosmwasmWasmV1MsgIBCCloseChannel}
 */
export const condenseCosmwasmWasmV1MsgIBCCloseChannel = (g_msg) => encodeCosmwasmWasmV1MsgIBCCloseChannel(g_msg.channel);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `cosmwasm.wasm.v1.MsgIBCCloseChannel` - port and channel need to be owned by the contract
 */
export const expandCosmwasmWasmV1MsgIBCCloseChannel = ([, s_channel]) => ({
    channel: s_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1QuoteReport}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1QuoteReport = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1QuoteReport(g_msg.id, g_msg.timestamp, g_msg.version, g_msg.isv_enclave_quote_status, g_msg.platform_info_blob, g_msg.isv_enclave_quote_body, g_msg.advisory_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.QuoteReport` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1QuoteReport = ([s_id, s_timestamp, sg_version, s_isv_enclave_quote_status, s_platform_info_blob, s_isv_enclave_quote_body, a_advisory_ids]) => ({
    id: s_id,
    timestamp: s_timestamp,
    version: sg_version,
    isv_enclave_quote_status: s_isv_enclave_quote_status,
    platform_info_blob: s_platform_info_blob,
    isv_enclave_quote_body: s_isv_enclave_quote_body,
    advisory_ids: a_advisory_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1QuoteReportBody}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1QuoteReportBody = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1QuoteReportBody(g_msg.mr_enclave, g_msg.mr_signer, g_msg.report_data);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.QuoteReportBody` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1QuoteReportBody = ([s_mr_enclave, s_mr_signer, s_report_data]) => ({
    mr_enclave: s_mr_enclave,
    mr_signer: s_mr_signer,
    report_data: s_report_data,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1QuoteReportData}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1QuoteReportData = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1QuoteReportData(g_msg.version, g_msg.sign_type, apply_opt(g_msg.report_body, condenseSecretRegistrationRemoteAttestationV1beta1QuoteReportBody));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.QuoteReportData` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1QuoteReportData = ([sg_version, sg_sign_type, a_report_body]) => ({
    version: sg_version,
    sign_type: sg_sign_type,
    report_body: a_report_body && expandSecretRegistrationRemoteAttestationV1beta1QuoteReportBody(a_report_body),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport(safe_base64_to_bytes(g_msg.report), safe_base64_to_bytes(g_msg.signature), safe_base64_to_bytes(g_msg.signing_cert));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.EndorsedAttestationReport` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport = ([atu8_report, atu8_signature, atu8_signing_cert]) => ({
    report: safe_bytes_to_base64(atu8_report),
    signature: safe_bytes_to_base64(atu8_signature),
    signing_cert: safe_bytes_to_base64(atu8_signing_cert),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature(g_msg.gx, g_msg.gy);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.SGXEC256Signature` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature = ([s_gx, s_gy]) => ({
    gx: s_gx,
    gy: s_gy,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob}
 */
export const condenseSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob = (g_msg) => encodeSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob(g_msg.sgx_epid_group_flags, g_msg.sgx_tcb_evaluation_flags, g_msg.pse_evaluation_flags, g_msg.latest_equivalent_tcb_psvn, g_msg.latest_pse_isvsvn, g_msg.latest_psda_svn, g_msg.xeid, g_msg.gid, apply_opt(g_msg.sgx_ec256_signature_t, condenseSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.remote_attestation.v1beta1.PlatformInfoBlob` -
 */
export const expandSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob = ([n_sgx_epid_group_flags, n_sgx_tcb_evaluation_flags, n_pse_evaluation_flags, s_latest_equivalent_tcb_psvn, s_latest_pse_isvsvn, s_latest_psda_svn, n_xeid, n_gid, a_sgx_ec256_signature_t]) => ({
    sgx_epid_group_flags: n_sgx_epid_group_flags,
    sgx_tcb_evaluation_flags: n_sgx_tcb_evaluation_flags,
    pse_evaluation_flags: n_pse_evaluation_flags,
    latest_equivalent_tcb_psvn: s_latest_equivalent_tcb_psvn,
    latest_pse_isvsvn: s_latest_pse_isvsvn,
    latest_psda_svn: s_latest_psda_svn,
    xeid: n_xeid,
    gid: n_gid,
    sgx_ec256_signature_t: a_sgx_ec256_signature_t && expandSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature(a_sgx_ec256_signature_t),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1SeedConfig}
 */
export const condenseSecretRegistrationV1beta1SeedConfig = (g_msg) => encodeSecretRegistrationV1beta1SeedConfig(g_msg.master_key, g_msg.encrypted_key, g_msg.version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.SeedConfig` -
 */
export const expandSecretRegistrationV1beta1SeedConfig = ([s_master_key, s_encrypted_key, n_version]) => ({
    master_key: s_master_key,
    encrypted_key: s_encrypted_key,
    version: n_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1LegacySeedConfig}
 */
export const condenseSecretRegistrationV1beta1LegacySeedConfig = (g_msg) => encodeSecretRegistrationV1beta1LegacySeedConfig(g_msg.master_cert, g_msg.encrypted_key);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.LegacySeedConfig` -
 */
export const expandSecretRegistrationV1beta1LegacySeedConfig = ([s_master_cert, s_encrypted_key]) => ({
    master_cert: s_master_cert,
    encrypted_key: s_encrypted_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1RegistrationNodeInfo}
 */
export const condenseSecretRegistrationV1beta1RegistrationNodeInfo = (g_msg) => encodeSecretRegistrationV1beta1RegistrationNodeInfo(safe_base64_to_bytes(g_msg.certificate), safe_base64_to_bytes(g_msg.encrypted_seed));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.RegistrationNodeInfo` -
 */
export const expandSecretRegistrationV1beta1RegistrationNodeInfo = ([atu8_certificate, atu8_encrypted_seed]) => ({
    certificate: safe_bytes_to_base64(atu8_certificate),
    encrypted_seed: safe_bytes_to_base64(atu8_encrypted_seed),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1QueryEncryptedSeedRequest}
 */
export const condenseSecretRegistrationV1beta1QueryEncryptedSeedRequest = (g_msg) => encodeSecretRegistrationV1beta1QueryEncryptedSeedRequest(safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.QueryEncryptedSeedRequest` -
 */
export const expandSecretRegistrationV1beta1QueryEncryptedSeedRequest = ([atu8_pub_key]) => ({
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1QueryEncryptedSeedResponse}
 */
export const condenseSecretRegistrationV1beta1QueryEncryptedSeedResponse = (g_msg) => encodeSecretRegistrationV1beta1QueryEncryptedSeedResponse(safe_base64_to_bytes(g_msg.encrypted_seed));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.QueryEncryptedSeedResponse` -
 */
export const expandSecretRegistrationV1beta1QueryEncryptedSeedResponse = ([atu8_encrypted_seed]) => ({
    encrypted_seed: safe_bytes_to_base64(atu8_encrypted_seed),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1GenesisState}
 */
export const condenseSecretRegistrationV1beta1GenesisState = (g_msg) => encodeSecretRegistrationV1beta1GenesisState(map(g_msg.registration, condenseSecretRegistrationV1beta1RegistrationNodeInfo), apply_opt(g_msg.node_exch_master_key, condenseSecretRegistrationV1beta1MasterKey), apply_opt(g_msg.io_master_key, condenseSecretRegistrationV1beta1MasterKey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.GenesisState` -
 */
export const expandSecretRegistrationV1beta1GenesisState = ([a_registration, a_node_exch_master_key, a_io_master_key]) => ({
    registration: a_registration && map(a_registration, expandSecretRegistrationV1beta1RegistrationNodeInfo),
    node_exch_master_key: a_node_exch_master_key && expandSecretRegistrationV1beta1MasterKey(a_node_exch_master_key),
    io_master_key: a_io_master_key && expandSecretRegistrationV1beta1MasterKey(a_io_master_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1MasterKey}
 */
export const condenseSecretRegistrationV1beta1MasterKey = (g_msg) => encodeSecretRegistrationV1beta1MasterKey(safe_base64_to_bytes(g_msg.bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.MasterKey` -
 */
export const expandSecretRegistrationV1beta1MasterKey = ([atu8_bytes]) => ({
    bytes: safe_bytes_to_base64(atu8_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1RaAuthenticate}
 */
export const condenseSecretRegistrationV1beta1RaAuthenticate = (g_msg) => encodeSecretRegistrationV1beta1RaAuthenticate(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.certificate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.RaAuthenticate` -
 */
export const expandSecretRegistrationV1beta1RaAuthenticate = ([sa_sender, atu8_certificate]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    certificate: safe_bytes_to_base64(atu8_certificate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretRegistrationV1beta1Key}
 */
export const condenseSecretRegistrationV1beta1Key = (g_msg) => encodeSecretRegistrationV1beta1Key(safe_base64_to_bytes(g_msg.key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.registration.v1beta1.Key` -
 */
export const expandSecretRegistrationV1beta1Key = ([atu8_key]) => ({
    key: safe_bytes_to_base64(atu8_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1MsgToggleIbcSwitch}
 */
export const condenseSecretEmergencybuttonV1beta1MsgToggleIbcSwitch = (g_msg) => encodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitch(g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.MsgToggleIbcSwitch` - represents a message to toggle the emergencybutton status by the defined pauser.
 */
export const expandSecretEmergencybuttonV1beta1MsgToggleIbcSwitch = ([sa_sender]) => ({
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse}
 */
export const condenseSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse = (g_msg) => encodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.MsgToggleIbcSwitchResponse` - defines the response type for the toggle.
 */
export const expandSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1ParamsRequest}
 */
export const condenseSecretEmergencybuttonV1beta1ParamsRequest = (g_msg) => encodeSecretEmergencybuttonV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.ParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandSecretEmergencybuttonV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1ParamsResponse}
 */
export const condenseSecretEmergencybuttonV1beta1ParamsResponse = (g_msg) => encodeSecretEmergencybuttonV1beta1ParamsResponse(apply_opt(g_msg.params, condenseSecretEmergencybuttonV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.ParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandSecretEmergencybuttonV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandSecretEmergencybuttonV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1Params}
 */
export const condenseSecretEmergencybuttonV1beta1Params = (g_msg) => encodeSecretEmergencybuttonV1beta1Params(g_msg.switch_status, g_msg.pauser_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.Params` - defines the parameters for the ibc-rate-limit module.
 */
export const expandSecretEmergencybuttonV1beta1Params = ([s_switch_status, sa_pauser]) => ({
    switch_status: s_switch_status,
    pauser_address: sa_pauser,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretEmergencybuttonV1beta1GenesisState}
 */
export const condenseSecretEmergencybuttonV1beta1GenesisState = (g_msg) => encodeSecretEmergencybuttonV1beta1GenesisState(apply_opt(g_msg.params, condenseSecretEmergencybuttonV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.emergencybutton.v1beta1.GenesisState` - - genesis state of x/wasm
 */
export const expandSecretEmergencybuttonV1beta1GenesisState = ([a_params]) => ({
    params: a_params && expandSecretEmergencybuttonV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1MsgRegisterAccount}
 */
export const condenseSecretIntertxV1beta1MsgRegisterAccount = (g_msg) => encodeSecretIntertxV1beta1MsgRegisterAccount(g_msg.owner, g_msg.connection_id, g_msg.version);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.MsgRegisterAccount` - registers an interchain account for the given owner over the specified connection pair
 */
export const expandSecretIntertxV1beta1MsgRegisterAccount = ([sa_owner, si_connection, s_version]) => ({
    owner: sa_owner,
    connection_id: si_connection,
    version: s_version,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1MsgRegisterAccountResponse}
 */
export const condenseSecretIntertxV1beta1MsgRegisterAccountResponse = (g_msg) => encodeSecretIntertxV1beta1MsgRegisterAccountResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.MsgRegisterAccountResponse` - the response type for Msg/RegisterAccount
 */
export const expandSecretIntertxV1beta1MsgRegisterAccountResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1MsgSubmitTx}
 */
export const condenseSecretIntertxV1beta1MsgSubmitTx = (g_msg) => encodeSecretIntertxV1beta1MsgSubmitTx(addr_bytes_to_bech32(g_msg.owner), g_msg.connection_id, condenseJsonAny(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.MsgSubmitTx` - creates and submits an arbitrary transaction msg to be executed using an interchain account
 */
export const expandSecretIntertxV1beta1MsgSubmitTx = ([sa_owner, si_connection, a_msg]) => ({
    owner: safe_bytes_to_base64(bech32_decode(sa_owner)),
    connection_id: si_connection,
    msg: a_msg && expandJsonAny(a_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1MsgSubmitTxResponse}
 */
export const condenseSecretIntertxV1beta1MsgSubmitTxResponse = (g_msg) => encodeSecretIntertxV1beta1MsgSubmitTxResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.MsgSubmitTxResponse` - defines the MsgSubmitTx response type
 */
export const expandSecretIntertxV1beta1MsgSubmitTxResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest}
 */
export const condenseSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest = (g_msg) => encodeSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest(g_msg.owner, g_msg.connection_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.QueryInterchainAccountFromAddressRequest` - the request type for the Query/InterchainAccountAddress RPC
 */
export const expandSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest = ([sa_owner, si_connection]) => ({
    owner: sa_owner,
    connection_id: si_connection,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse}
 */
export const condenseSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse = (g_msg) => encodeSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse(g_msg.interchain_account_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.intertx.v1beta1.QueryInterchainAccountFromAddressResponse` - the response type for the Query/InterchainAccountAddress RPC
 */
export const expandSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse = ([sa_interchain_account]) => ({
    interchain_account_address: sa_interchain_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1AccessTypeParam}
 */
export const condenseSecretComputeV1beta1AccessTypeParam = (g_msg) => encodeSecretComputeV1beta1AccessTypeParam(JsonToProtoEnumSecretComputeV1beta1AccessType[g_msg.value]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.AccessTypeParam` -
 */
export const expandSecretComputeV1beta1AccessTypeParam = ([xc_value]) => ({
    value: xc_value >= 0 ? ProtoToJsonEnumSecretComputeV1beta1AccessType[xc_value] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1CodeInfo}
 */
export const condenseSecretComputeV1beta1CodeInfo = (g_msg) => encodeSecretComputeV1beta1CodeInfo(safe_base64_to_bytes(g_msg.code_hash), safe_base64_to_bytes(g_msg.creator), g_msg.source, g_msg.builder);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.CodeInfo` - data for the uploaded contract WASM code
 */
export const expandSecretComputeV1beta1CodeInfo = ([atu8_code_hash, atu8_creator, s_source, s_builder]) => ({
    code_hash: safe_bytes_to_base64(atu8_code_hash),
    creator: safe_bytes_to_base64(atu8_creator),
    source: s_source,
    builder: s_builder,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1ContractKey}
 */
export const condenseSecretComputeV1beta1ContractKey = (g_msg) => encodeSecretComputeV1beta1ContractKey(safe_base64_to_bytes(g_msg.og_contract_key), safe_base64_to_bytes(g_msg.current_contract_key), safe_base64_to_bytes(g_msg.current_contract_key_proof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.ContractKey` -
 */
export const expandSecretComputeV1beta1ContractKey = ([atu8_og_contract_key, atu8_current_contract_key, atu8_current_contract_key_proof]) => ({
    og_contract_key: safe_bytes_to_base64(atu8_og_contract_key),
    current_contract_key: safe_bytes_to_base64(atu8_current_contract_key),
    current_contract_key_proof: safe_bytes_to_base64(atu8_current_contract_key_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1ContractCustomInfo}
 */
export const condenseSecretComputeV1beta1ContractCustomInfo = (g_msg) => encodeSecretComputeV1beta1ContractCustomInfo(apply_opt(g_msg.enclave_key, condenseSecretComputeV1beta1ContractKey), g_msg.label);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.ContractCustomInfo` -
 */
export const expandSecretComputeV1beta1ContractCustomInfo = ([a_enclave_key, s_label]) => ({
    enclave_key: a_enclave_key && expandSecretComputeV1beta1ContractKey(a_enclave_key),
    label: s_label,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1ContractInfo}
 */
export const condenseSecretComputeV1beta1ContractInfo = (g_msg) => encodeSecretComputeV1beta1ContractInfo(g_msg.code_id, safe_base64_to_bytes(g_msg.creator), g_msg.label, apply_opt(g_msg.created, condenseSecretComputeV1beta1AbsoluteTxPosition), g_msg.ibc_port_id, g_msg.admin, safe_base64_to_bytes(g_msg.admin_proof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.ContractInfo` - stores a WASM contract instance
 */
export const expandSecretComputeV1beta1ContractInfo = ([sg_code_id, atu8_creator, , s_label, a_created, si_ibc_port, s_admin, atu8_admin_proof]) => ({
    code_id: sg_code_id,
    creator: safe_bytes_to_base64(atu8_creator),
    label: s_label,
    created: a_created && expandSecretComputeV1beta1AbsoluteTxPosition(a_created),
    ibc_port_id: si_ibc_port,
    admin: s_admin,
    admin_proof: safe_bytes_to_base64(atu8_admin_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1AbsoluteTxPosition}
 */
export const condenseSecretComputeV1beta1AbsoluteTxPosition = (g_msg) => encodeSecretComputeV1beta1AbsoluteTxPosition(g_msg.block_height, g_msg.tx_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.AbsoluteTxPosition` - can be used to sort contracts
 */
export const expandSecretComputeV1beta1AbsoluteTxPosition = ([sg_block_height, sg_tx_index]) => ({
    block_height: sg_block_height,
    tx_index: sg_tx_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1Model}
 */
export const condenseSecretComputeV1beta1Model = (g_msg) => encodeSecretComputeV1beta1Model(safe_base64_to_bytes(g_msg.Key), safe_base64_to_bytes(g_msg.Value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.Model` - a struct that holds a KV pair
 */
export const expandSecretComputeV1beta1Model = ([atu8_key, atu8_value]) => ({
    Key: safe_bytes_to_base64(atu8_key),
    Value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1ContractCodeHistoryEntry}
 */
export const condenseSecretComputeV1beta1ContractCodeHistoryEntry = (g_msg) => encodeSecretComputeV1beta1ContractCodeHistoryEntry(JsonToProtoEnumSecretComputeV1beta1ContractCodeHistoryOperationType[g_msg.operation], g_msg.code_id, apply_opt(g_msg.updated, condenseSecretComputeV1beta1AbsoluteTxPosition), safe_base64_to_bytes(g_msg.msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.ContractCodeHistoryEntry` - metadata to a contract.
 */
export const expandSecretComputeV1beta1ContractCodeHistoryEntry = ([xc_operation, sg_code_id, a_updated, atu8_msg]) => ({
    operation: xc_operation >= 0 ? ProtoToJsonEnumSecretComputeV1beta1ContractCodeHistoryOperationType[xc_operation] : __UNDEFINED,
    code_id: sg_code_id,
    updated: a_updated && expandSecretComputeV1beta1AbsoluteTxPosition(a_updated),
    msg: safe_bytes_to_base64(atu8_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QuerySecretContractRequest}
 */
export const condenseSecretComputeV1beta1QuerySecretContractRequest = (g_msg) => encodeSecretComputeV1beta1QuerySecretContractRequest(g_msg.contract_address, safe_base64_to_bytes(g_msg.query));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QuerySecretContractRequest` -
 */
export const expandSecretComputeV1beta1QuerySecretContractRequest = ([sa_contract, atu8_query]) => ({
    contract_address: sa_contract,
    query: safe_bytes_to_base64(atu8_query),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryByLabelRequest}
 */
export const condenseSecretComputeV1beta1QueryByLabelRequest = (g_msg) => encodeSecretComputeV1beta1QueryByLabelRequest(g_msg.label);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryByLabelRequest` -
 */
export const expandSecretComputeV1beta1QueryByLabelRequest = ([s_label]) => ({
    label: s_label,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryByContractAddressRequest}
 */
export const condenseSecretComputeV1beta1QueryByContractAddressRequest = (g_msg) => encodeSecretComputeV1beta1QueryByContractAddressRequest(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryByContractAddressRequest` -
 */
export const expandSecretComputeV1beta1QueryByContractAddressRequest = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryByCodeIdRequest}
 */
export const condenseSecretComputeV1beta1QueryByCodeIdRequest = (g_msg) => encodeSecretComputeV1beta1QueryByCodeIdRequest(g_msg.code_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryByCodeIdRequest` -
 */
export const expandSecretComputeV1beta1QueryByCodeIdRequest = ([sg_code_id]) => ({
    code_id: sg_code_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QuerySecretContractResponse}
 */
export const condenseSecretComputeV1beta1QuerySecretContractResponse = (g_msg) => encodeSecretComputeV1beta1QuerySecretContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QuerySecretContractResponse` -
 */
export const expandSecretComputeV1beta1QuerySecretContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractInfoResponse}
 */
export const condenseSecretComputeV1beta1QueryContractInfoResponse = (g_msg) => encodeSecretComputeV1beta1QueryContractInfoResponse(g_msg.contract_address, apply_opt(g_msg.contract_info, condenseSecretComputeV1beta1ContractInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractInfoResponse` - the response type for the Query/ContractInfo RPC method
 */
export const expandSecretComputeV1beta1QueryContractInfoResponse = ([sa_contract, a_contract_info]) => ({
    contract_address: sa_contract,
    contract_info: a_contract_info && expandSecretComputeV1beta1ContractInfo(a_contract_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1ContractInfoWithAddress}
 */
export const condenseSecretComputeV1beta1ContractInfoWithAddress = (g_msg) => encodeSecretComputeV1beta1ContractInfoWithAddress(g_msg.contract_address, apply_opt(g_msg.contract_info, condenseSecretComputeV1beta1ContractInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.ContractInfoWithAddress` - adds the contract address to the ContractInfo representation
 */
export const expandSecretComputeV1beta1ContractInfoWithAddress = ([sa_contract, a_contract_info]) => ({
    contract_address: sa_contract,
    contract_info: a_contract_info && expandSecretComputeV1beta1ContractInfo(a_contract_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractsByCodeIdResponse}
 */
export const condenseSecretComputeV1beta1QueryContractsByCodeIdResponse = (g_msg) => encodeSecretComputeV1beta1QueryContractsByCodeIdResponse(map(g_msg.contract_infos, condenseSecretComputeV1beta1ContractInfoWithAddress));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractsByCodeIdResponse` -
 */
export const expandSecretComputeV1beta1QueryContractsByCodeIdResponse = ([a_contract_infos]) => ({
    contract_infos: a_contract_infos && map(a_contract_infos, expandSecretComputeV1beta1ContractInfoWithAddress),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1CodeInfoResponse}
 */
export const condenseSecretComputeV1beta1CodeInfoResponse = (g_msg) => encodeSecretComputeV1beta1CodeInfoResponse(g_msg.code_id, g_msg.creator, g_msg.code_hash, g_msg.source, g_msg.builder);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.CodeInfoResponse` -
 */
export const expandSecretComputeV1beta1CodeInfoResponse = ([sg_code_id, sa_creator, sb16_code_hash, s_source, s_builder]) => ({
    code_id: sg_code_id,
    creator: sa_creator,
    code_hash: sb16_code_hash,
    source: s_source,
    builder: s_builder,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryCodeResponse}
 */
export const condenseSecretComputeV1beta1QueryCodeResponse = (g_msg) => encodeSecretComputeV1beta1QueryCodeResponse(apply_opt(g_msg.code_info, condenseSecretComputeV1beta1CodeInfoResponse), safe_base64_to_bytes(g_msg.wasm));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryCodeResponse` -
 */
export const expandSecretComputeV1beta1QueryCodeResponse = ([a_code_info, atu8_wasm]) => ({
    code_info: a_code_info && expandSecretComputeV1beta1CodeInfoResponse(a_code_info),
    wasm: safe_bytes_to_base64(atu8_wasm),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryCodesResponse}
 */
export const condenseSecretComputeV1beta1QueryCodesResponse = (g_msg) => encodeSecretComputeV1beta1QueryCodesResponse(map(g_msg.code_infos, condenseSecretComputeV1beta1CodeInfoResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryCodesResponse` -
 */
export const expandSecretComputeV1beta1QueryCodesResponse = ([a_code_infos]) => ({
    code_infos: a_code_infos && map(a_code_infos, expandSecretComputeV1beta1CodeInfoResponse),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractAddressResponse}
 */
export const condenseSecretComputeV1beta1QueryContractAddressResponse = (g_msg) => encodeSecretComputeV1beta1QueryContractAddressResponse(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractAddressResponse` -
 */
export const expandSecretComputeV1beta1QueryContractAddressResponse = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractLabelResponse}
 */
export const condenseSecretComputeV1beta1QueryContractLabelResponse = (g_msg) => encodeSecretComputeV1beta1QueryContractLabelResponse(g_msg.label);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractLabelResponse` -
 */
export const expandSecretComputeV1beta1QueryContractLabelResponse = ([s_label]) => ({
    label: s_label,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryCodeHashResponse}
 */
export const condenseSecretComputeV1beta1QueryCodeHashResponse = (g_msg) => encodeSecretComputeV1beta1QueryCodeHashResponse(g_msg.code_hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryCodeHashResponse` -
 */
export const expandSecretComputeV1beta1QueryCodeHashResponse = ([sb16_code_hash]) => ({
    code_hash: sb16_code_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1DecryptedAnswer}
 */
export const condenseSecretComputeV1beta1DecryptedAnswer = (g_msg) => encodeSecretComputeV1beta1DecryptedAnswer(g_msg.type, g_msg.input, g_msg.output_data, g_msg.output_data_as_string);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.DecryptedAnswer` - a struct that represents a decrypted tx-query
 */
export const expandSecretComputeV1beta1DecryptedAnswer = ([s_type, s_input, s_output_data, s_output_data_as_string]) => ({
    type: s_type,
    input: s_input,
    output_data: s_output_data,
    output_data_as_string: s_output_data_as_string,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1DecryptedAnswers}
 */
export const condenseSecretComputeV1beta1DecryptedAnswers = (g_msg) => encodeSecretComputeV1beta1DecryptedAnswers(map(g_msg.answers, condenseSecretComputeV1beta1DecryptedAnswer), map(g_msg.output_logs, condenseCosmosBaseAbciV1beta1StringEvent), g_msg.output_error, g_msg.plaintext_error);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.DecryptedAnswers` -
 */
export const expandSecretComputeV1beta1DecryptedAnswers = ([a_answers, a_output_logs, s_output_error, s_plaintext_error]) => ({
    answers: a_answers && map(a_answers, expandSecretComputeV1beta1DecryptedAnswer),
    output_logs: a_output_logs && map(a_output_logs, expandCosmosBaseAbciV1beta1StringEvent),
    output_error: s_output_error,
    plaintext_error: s_plaintext_error,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractHistoryRequest}
 */
export const condenseSecretComputeV1beta1QueryContractHistoryRequest = (g_msg) => encodeSecretComputeV1beta1QueryContractHistoryRequest(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractHistoryRequest` - the request type for the Query/ContractHistory RPC method
 */
export const expandSecretComputeV1beta1QueryContractHistoryRequest = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1QueryContractHistoryResponse}
 */
export const condenseSecretComputeV1beta1QueryContractHistoryResponse = (g_msg) => encodeSecretComputeV1beta1QueryContractHistoryResponse(map(g_msg.entries, condenseSecretComputeV1beta1ContractCodeHistoryEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.QueryContractHistoryResponse` - the response type for the Query/ContractHistory RPC method
 */
export const expandSecretComputeV1beta1QueryContractHistoryResponse = ([a_entries]) => ({
    entries: a_entries && map(a_entries, expandSecretComputeV1beta1ContractCodeHistoryEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1GenesisState}
 */
export const condenseSecretComputeV1beta1GenesisState = (g_msg) => encodeSecretComputeV1beta1GenesisState(map(g_msg.codes, condenseSecretComputeV1beta1Code), map(g_msg.contracts, condenseSecretComputeV1beta1Contract), map(g_msg.sequences, condenseSecretComputeV1beta1Sequence));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.GenesisState` - - genesis state of x/wasm
 */
export const expandSecretComputeV1beta1GenesisState = ([, a_codes, a_contracts, a_sequences]) => ({
    codes: a_codes && map(a_codes, expandSecretComputeV1beta1Code),
    contracts: a_contracts && map(a_contracts, expandSecretComputeV1beta1Contract),
    sequences: a_sequences && map(a_sequences, expandSecretComputeV1beta1Sequence),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1Code}
 */
export const condenseSecretComputeV1beta1Code = (g_msg) => encodeSecretComputeV1beta1Code(g_msg.code_id, apply_opt(g_msg.code_info, condenseSecretComputeV1beta1CodeInfo), safe_base64_to_bytes(g_msg.code_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.Code` - struct encompasses CodeInfo and CodeBytes
 */
export const expandSecretComputeV1beta1Code = ([sg_code_id, a_code_info, atu8_code_bytes]) => ({
    code_id: sg_code_id,
    code_info: a_code_info && expandSecretComputeV1beta1CodeInfo(a_code_info),
    code_bytes: safe_bytes_to_base64(atu8_code_bytes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1Contract}
 */
export const condenseSecretComputeV1beta1Contract = (g_msg) => encodeSecretComputeV1beta1Contract(safe_base64_to_bytes(g_msg.contract_address), apply_opt(g_msg.contract_info, condenseSecretComputeV1beta1ContractInfo), map(g_msg.contract_state, condenseSecretComputeV1beta1Model), apply_opt(g_msg.contract_custom_info, condenseSecretComputeV1beta1ContractCustomInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.Contract` - struct encompasses ContractAddress, ContractInfo, and ContractState
 */
export const expandSecretComputeV1beta1Contract = ([atu8_contract_address, a_contract_info, a_contract_state, a_contract_custom_info]) => ({
    contract_address: safe_bytes_to_base64(atu8_contract_address),
    contract_info: a_contract_info && expandSecretComputeV1beta1ContractInfo(a_contract_info),
    contract_state: a_contract_state && map(a_contract_state, expandSecretComputeV1beta1Model),
    contract_custom_info: a_contract_custom_info && expandSecretComputeV1beta1ContractCustomInfo(a_contract_custom_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1Sequence}
 */
export const condenseSecretComputeV1beta1Sequence = (g_msg) => encodeSecretComputeV1beta1Sequence(safe_base64_to_bytes(g_msg.id_key), g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.Sequence` - id and value of a counter
 */
export const expandSecretComputeV1beta1Sequence = ([atu8_id_key, sg_value]) => ({
    id_key: safe_bytes_to_base64(atu8_id_key),
    value: sg_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgStoreCode}
 */
export const condenseSecretComputeV1beta1MsgStoreCode = (g_msg) => encodeSecretComputeV1beta1MsgStoreCode(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.wasm_byte_code), g_msg.source, g_msg.builder);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgStoreCode` -
 */
export const expandSecretComputeV1beta1MsgStoreCode = ([sa_sender, atu8_wasm_byte_code, s_source, s_builder]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
    source: s_source,
    builder: s_builder,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgStoreCodeResponse}
 */
export const condenseSecretComputeV1beta1MsgStoreCodeResponse = (g_msg) => encodeSecretComputeV1beta1MsgStoreCodeResponse(g_msg.code_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgStoreCodeResponse` - returns store result data.
 */
export const expandSecretComputeV1beta1MsgStoreCodeResponse = ([sg_code_id]) => ({
    code_id: sg_code_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgInstantiateContract}
 */
export const condenseSecretComputeV1beta1MsgInstantiateContract = (g_msg) => encodeSecretComputeV1beta1MsgInstantiateContract(addr_bytes_to_bech32(g_msg.sender), g_msg.callback_code_hash, g_msg.code_id, g_msg.label, safe_base64_to_bytes(g_msg.init_msg), map(g_msg.init_funds, slimify_coin), safe_base64_to_bytes(g_msg.callback_sig), g_msg.admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgInstantiateContract` -
 */
export const expandSecretComputeV1beta1MsgInstantiateContract = ([sa_sender, sb16_callback_code_hash, sg_code_id, s_label, atu8_init_msg, a_init_funds, atu8_callback_sig, s_admin]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    callback_code_hash: sb16_callback_code_hash,
    code_id: sg_code_id,
    label: s_label,
    init_msg: safe_bytes_to_base64(atu8_init_msg),
    init_funds: a_init_funds && map(a_init_funds, expand_coin),
    callback_sig: safe_bytes_to_base64(atu8_callback_sig),
    admin: s_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgInstantiateContractResponse}
 */
export const condenseSecretComputeV1beta1MsgInstantiateContractResponse = (g_msg) => encodeSecretComputeV1beta1MsgInstantiateContractResponse(g_msg.address, safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgInstantiateContractResponse` - return instantiation result data
 */
export const expandSecretComputeV1beta1MsgInstantiateContractResponse = ([sa_address, atu8_data]) => ({
    address: sa_address,
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgExecuteContract}
 */
export const condenseSecretComputeV1beta1MsgExecuteContract = (g_msg) => encodeSecretComputeV1beta1MsgExecuteContract(addr_bytes_to_bech32(g_msg.sender), addr_bytes_to_bech32(g_msg.contract), safe_base64_to_bytes(g_msg.msg), g_msg.callback_code_hash, map(g_msg.sent_funds, slimify_coin), safe_base64_to_bytes(g_msg.callback_sig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgExecuteContract` -
 */
export const expandSecretComputeV1beta1MsgExecuteContract = ([sa_sender, sa_contract, atu8_msg, sb16_callback_code_hash, a_sent_funds, atu8_callback_sig]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    contract: safe_bytes_to_base64(bech32_decode(sa_contract)),
    msg: safe_bytes_to_base64(atu8_msg),
    callback_code_hash: sb16_callback_code_hash,
    sent_funds: a_sent_funds && map(a_sent_funds, expand_coin),
    callback_sig: safe_bytes_to_base64(atu8_callback_sig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgExecuteContractResponse}
 */
export const condenseSecretComputeV1beta1MsgExecuteContractResponse = (g_msg) => encodeSecretComputeV1beta1MsgExecuteContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgExecuteContractResponse` - returns execution result data.
 */
export const expandSecretComputeV1beta1MsgExecuteContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgMigrateContract}
 */
export const condenseSecretComputeV1beta1MsgMigrateContract = (g_msg) => encodeSecretComputeV1beta1MsgMigrateContract(g_msg.sender, g_msg.contract, g_msg.code_id, safe_base64_to_bytes(g_msg.msg), safe_base64_to_bytes(g_msg.callback_sig), g_msg.callback_code_hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgMigrateContract` - runs a code upgrade/ downgrade for a smart contract
 */
export const expandSecretComputeV1beta1MsgMigrateContract = ([sa_sender, s_contract, sg_code_id, atu8_msg, , , atu8_callback_sig, sb16_callback_code_hash]) => ({
    sender: sa_sender,
    contract: s_contract,
    code_id: sg_code_id,
    msg: safe_bytes_to_base64(atu8_msg),
    callback_sig: safe_bytes_to_base64(atu8_callback_sig),
    callback_code_hash: sb16_callback_code_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgMigrateContractResponse}
 */
export const condenseSecretComputeV1beta1MsgMigrateContractResponse = (g_msg) => encodeSecretComputeV1beta1MsgMigrateContractResponse(safe_base64_to_bytes(g_msg.data));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgMigrateContractResponse` - returns contract migration result data.
 */
export const expandSecretComputeV1beta1MsgMigrateContractResponse = ([atu8_data]) => ({
    data: safe_bytes_to_base64(atu8_data),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgUpdateAdmin}
 */
export const condenseSecretComputeV1beta1MsgUpdateAdmin = (g_msg) => encodeSecretComputeV1beta1MsgUpdateAdmin(g_msg.sender, g_msg.new_admin, g_msg.contract, safe_base64_to_bytes(g_msg.callback_sig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgUpdateAdmin` - sets a new admin for a smart contract
 */
export const expandSecretComputeV1beta1MsgUpdateAdmin = ([sa_sender, s_new_admin, s_contract, , , , atu8_callback_sig]) => ({
    sender: sa_sender,
    new_admin: s_new_admin,
    contract: s_contract,
    callback_sig: safe_bytes_to_base64(atu8_callback_sig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgUpdateAdminResponse}
 */
export const condenseSecretComputeV1beta1MsgUpdateAdminResponse = (g_msg) => encodeSecretComputeV1beta1MsgUpdateAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgUpdateAdminResponse` - returns empty data
 */
export const expandSecretComputeV1beta1MsgUpdateAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgClearAdmin}
 */
export const condenseSecretComputeV1beta1MsgClearAdmin = (g_msg) => encodeSecretComputeV1beta1MsgClearAdmin(g_msg.sender, g_msg.contract, safe_base64_to_bytes(g_msg.callback_sig));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgClearAdmin` - removes any admin stored for a smart contract
 */
export const expandSecretComputeV1beta1MsgClearAdmin = ([sa_sender, , s_contract, , , , atu8_callback_sig]) => ({
    sender: sa_sender,
    contract: s_contract,
    callback_sig: safe_bytes_to_base64(atu8_callback_sig),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedSecretComputeV1beta1MsgClearAdminResponse}
 */
export const condenseSecretComputeV1beta1MsgClearAdminResponse = (g_msg) => encodeSecretComputeV1beta1MsgClearAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `secret.compute.v1beta1.MsgClearAdminResponse` - returns empty data
 */
export const expandSecretComputeV1beta1MsgClearAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3QueryProvidersRequest}
 */
export const condenseAkashProviderV1beta3QueryProvidersRequest = (g_msg) => encodeAkashProviderV1beta3QueryProvidersRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.QueryProvidersRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashProviderV1beta3QueryProvidersRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3QueryProvidersResponse}
 */
export const condenseAkashProviderV1beta3QueryProvidersResponse = (g_msg) => encodeAkashProviderV1beta3QueryProvidersResponse(map(g_msg.providers, condenseAkashProviderV1beta3Provider), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.QueryProvidersResponse` - response type for the Query/Providers RPC method
 */
export const expandAkashProviderV1beta3QueryProvidersResponse = ([a_providers, a_pagination]) => ({
    providers: a_providers && map(a_providers, expandAkashProviderV1beta3Provider),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3Provider}
 */
export const condenseAkashProviderV1beta3Provider = (g_msg) => encodeAkashProviderV1beta3Provider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta3ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.Provider` - stores owner and host details
 */
export const expandAkashProviderV1beta3Provider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
    info: a_info && expandAkashProviderV1beta3ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3Attribute}
 */
export const condenseAkashBaseV1beta3Attribute = (g_msg) => encodeAkashBaseV1beta3Attribute(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.Attribute` - represents key value pair
 */
export const expandAkashBaseV1beta3Attribute = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3ProviderInfo}
 */
export const condenseAkashProviderV1beta3ProviderInfo = (g_msg) => encodeAkashProviderV1beta3ProviderInfo(g_msg.email, g_msg.website);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.ProviderInfo` -
 */
export const expandAkashProviderV1beta3ProviderInfo = ([s_email, s_website]) => ({
    email: s_email,
    website: s_website,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3QueryProviderRequest}
 */
export const condenseAkashProviderV1beta3QueryProviderRequest = (g_msg) => encodeAkashProviderV1beta3QueryProviderRequest(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.QueryProviderRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashProviderV1beta3QueryProviderRequest = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3QueryProviderResponse}
 */
export const condenseAkashProviderV1beta3QueryProviderResponse = (g_msg) => encodeAkashProviderV1beta3QueryProviderResponse(apply_opt(g_msg.provider, condenseAkashProviderV1beta3Provider));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.QueryProviderResponse` - response type for the Query/Provider RPC method
 */
export const expandAkashProviderV1beta3QueryProviderResponse = ([a_provider]) => ({
    provider: a_provider && expandAkashProviderV1beta3Provider(a_provider),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3GenesisState}
 */
export const condenseAkashProviderV1beta3GenesisState = (g_msg) => encodeAkashProviderV1beta3GenesisState(map(g_msg.providers, condenseAkashProviderV1beta3Provider));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.GenesisState` - defines the basic genesis state used by provider module
 */
export const expandAkashProviderV1beta3GenesisState = ([a_providers]) => ({
    providers: a_providers && map(a_providers, expandAkashProviderV1beta3Provider),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgCreateProvider}
 */
export const condenseAkashProviderV1beta3MsgCreateProvider = (g_msg) => encodeAkashProviderV1beta3MsgCreateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta3ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgCreateProvider` - defines an SDK message for creating a provider
 */
export const expandAkashProviderV1beta3MsgCreateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
    info: a_info && expandAkashProviderV1beta3ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgCreateProviderResponse}
 */
export const condenseAkashProviderV1beta3MsgCreateProviderResponse = (g_msg) => encodeAkashProviderV1beta3MsgCreateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgCreateProviderResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashProviderV1beta3MsgCreateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgUpdateProvider}
 */
export const condenseAkashProviderV1beta3MsgUpdateProvider = (g_msg) => encodeAkashProviderV1beta3MsgUpdateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta3ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgUpdateProvider` - defines an SDK message for updating a provider
 */
export const expandAkashProviderV1beta3MsgUpdateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
    info: a_info && expandAkashProviderV1beta3ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgUpdateProviderResponse}
 */
export const condenseAkashProviderV1beta3MsgUpdateProviderResponse = (g_msg) => encodeAkashProviderV1beta3MsgUpdateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgUpdateProviderResponse` - defines the Msg/UpdateProvider response type.
 */
export const expandAkashProviderV1beta3MsgUpdateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgDeleteProvider}
 */
export const condenseAkashProviderV1beta3MsgDeleteProvider = (g_msg) => encodeAkashProviderV1beta3MsgDeleteProvider(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgDeleteProvider` - defines an SDK message for deleting a provider
 */
export const expandAkashProviderV1beta3MsgDeleteProvider = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta3MsgDeleteProviderResponse}
 */
export const condenseAkashProviderV1beta3MsgDeleteProviderResponse = (g_msg) => encodeAkashProviderV1beta3MsgDeleteProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta3.MsgDeleteProviderResponse` - defines the Msg/DeleteProvider response type.
 */
export const expandAkashProviderV1beta3MsgDeleteProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2QueryProvidersRequest}
 */
export const condenseAkashProviderV1beta2QueryProvidersRequest = (g_msg) => encodeAkashProviderV1beta2QueryProvidersRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.QueryProvidersRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashProviderV1beta2QueryProvidersRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2QueryProvidersResponse}
 */
export const condenseAkashProviderV1beta2QueryProvidersResponse = (g_msg) => encodeAkashProviderV1beta2QueryProvidersResponse(map(g_msg.providers, condenseAkashProviderV1beta2Provider), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.QueryProvidersResponse` - response type for the Query/Providers RPC method
 */
export const expandAkashProviderV1beta2QueryProvidersResponse = ([a_providers, a_pagination]) => ({
    providers: a_providers && map(a_providers, expandAkashProviderV1beta2Provider),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2Provider}
 */
export const condenseAkashProviderV1beta2Provider = (g_msg) => encodeAkashProviderV1beta2Provider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta2ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.Provider` - stores owner and host details
 */
export const expandAkashProviderV1beta2Provider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
    info: a_info && expandAkashProviderV1beta2ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2Attribute}
 */
export const condenseAkashBaseV1beta2Attribute = (g_msg) => encodeAkashBaseV1beta2Attribute(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.Attribute` - represents key value pair
 */
export const expandAkashBaseV1beta2Attribute = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2ProviderInfo}
 */
export const condenseAkashProviderV1beta2ProviderInfo = (g_msg) => encodeAkashProviderV1beta2ProviderInfo(g_msg.email, g_msg.website);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.ProviderInfo` -
 */
export const expandAkashProviderV1beta2ProviderInfo = ([s_email, s_website]) => ({
    email: s_email,
    website: s_website,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2QueryProviderRequest}
 */
export const condenseAkashProviderV1beta2QueryProviderRequest = (g_msg) => encodeAkashProviderV1beta2QueryProviderRequest(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.QueryProviderRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashProviderV1beta2QueryProviderRequest = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2QueryProviderResponse}
 */
export const condenseAkashProviderV1beta2QueryProviderResponse = (g_msg) => encodeAkashProviderV1beta2QueryProviderResponse(apply_opt(g_msg.provider, condenseAkashProviderV1beta2Provider));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.QueryProviderResponse` - response type for the Query/Provider RPC method
 */
export const expandAkashProviderV1beta2QueryProviderResponse = ([a_provider]) => ({
    provider: a_provider && expandAkashProviderV1beta2Provider(a_provider),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2GenesisState}
 */
export const condenseAkashProviderV1beta2GenesisState = (g_msg) => encodeAkashProviderV1beta2GenesisState(map(g_msg.providers, condenseAkashProviderV1beta2Provider));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.GenesisState` - defines the basic genesis state used by provider module
 */
export const expandAkashProviderV1beta2GenesisState = ([a_providers]) => ({
    providers: a_providers && map(a_providers, expandAkashProviderV1beta2Provider),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgCreateProvider}
 */
export const condenseAkashProviderV1beta2MsgCreateProvider = (g_msg) => encodeAkashProviderV1beta2MsgCreateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta2ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgCreateProvider` - defines an SDK message for creating a provider
 */
export const expandAkashProviderV1beta2MsgCreateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
    info: a_info && expandAkashProviderV1beta2ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgCreateProviderResponse}
 */
export const condenseAkashProviderV1beta2MsgCreateProviderResponse = (g_msg) => encodeAkashProviderV1beta2MsgCreateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgCreateProviderResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashProviderV1beta2MsgCreateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgUpdateProvider}
 */
export const condenseAkashProviderV1beta2MsgUpdateProvider = (g_msg) => encodeAkashProviderV1beta2MsgUpdateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta2ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgUpdateProvider` - defines an SDK message for updating a provider
 */
export const expandAkashProviderV1beta2MsgUpdateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
    info: a_info && expandAkashProviderV1beta2ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgUpdateProviderResponse}
 */
export const condenseAkashProviderV1beta2MsgUpdateProviderResponse = (g_msg) => encodeAkashProviderV1beta2MsgUpdateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgUpdateProviderResponse` - defines the Msg/UpdateProvider response type.
 */
export const expandAkashProviderV1beta2MsgUpdateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgDeleteProvider}
 */
export const condenseAkashProviderV1beta2MsgDeleteProvider = (g_msg) => encodeAkashProviderV1beta2MsgDeleteProvider(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgDeleteProvider` - defines an SDK message for deleting a provider
 */
export const expandAkashProviderV1beta2MsgDeleteProvider = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta2MsgDeleteProviderResponse}
 */
export const condenseAkashProviderV1beta2MsgDeleteProviderResponse = (g_msg) => encodeAkashProviderV1beta2MsgDeleteProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta2.MsgDeleteProviderResponse` - defines the Msg/DeleteProvider response type.
 */
export const expandAkashProviderV1beta2MsgDeleteProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1ProviderInfo}
 */
export const condenseAkashProviderV1beta1ProviderInfo = (g_msg) => encodeAkashProviderV1beta1ProviderInfo(g_msg.email, g_msg.website);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.ProviderInfo` -
 */
export const expandAkashProviderV1beta1ProviderInfo = ([s_email, s_website]) => ({
    email: s_email,
    website: s_website,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgCreateProvider}
 */
export const condenseAkashProviderV1beta1MsgCreateProvider = (g_msg) => encodeAkashProviderV1beta1MsgCreateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta1ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgCreateProvider` - defines an SDK message for creating a provider
 */
export const expandAkashProviderV1beta1MsgCreateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
    info: a_info && expandAkashProviderV1beta1ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1Attribute}
 */
export const condenseAkashBaseV1beta1Attribute = (g_msg) => encodeAkashBaseV1beta1Attribute(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.Attribute` - represents key value pair
 */
export const expandAkashBaseV1beta1Attribute = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgCreateProviderResponse}
 */
export const condenseAkashProviderV1beta1MsgCreateProviderResponse = (g_msg) => encodeAkashProviderV1beta1MsgCreateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgCreateProviderResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashProviderV1beta1MsgCreateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgUpdateProvider}
 */
export const condenseAkashProviderV1beta1MsgUpdateProvider = (g_msg) => encodeAkashProviderV1beta1MsgUpdateProvider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta1ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgUpdateProvider` - defines an SDK message for updating a provider
 */
export const expandAkashProviderV1beta1MsgUpdateProvider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
    info: a_info && expandAkashProviderV1beta1ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgUpdateProviderResponse}
 */
export const condenseAkashProviderV1beta1MsgUpdateProviderResponse = (g_msg) => encodeAkashProviderV1beta1MsgUpdateProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgUpdateProviderResponse` - defines the Msg/UpdateProvider response type.
 */
export const expandAkashProviderV1beta1MsgUpdateProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgDeleteProvider}
 */
export const condenseAkashProviderV1beta1MsgDeleteProvider = (g_msg) => encodeAkashProviderV1beta1MsgDeleteProvider(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgDeleteProvider` - defines an SDK message for deleting a provider
 */
export const expandAkashProviderV1beta1MsgDeleteProvider = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1MsgDeleteProviderResponse}
 */
export const condenseAkashProviderV1beta1MsgDeleteProviderResponse = (g_msg) => encodeAkashProviderV1beta1MsgDeleteProviderResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.MsgDeleteProviderResponse` - defines the Msg/DeleteProvider response type.
 */
export const expandAkashProviderV1beta1MsgDeleteProviderResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashProviderV1beta1Provider}
 */
export const condenseAkashProviderV1beta1Provider = (g_msg) => encodeAkashProviderV1beta1Provider(g_msg.owner, g_msg.host_uri, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute), apply_opt(g_msg.info, condenseAkashProviderV1beta1ProviderInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.provider.v1beta1.Provider` - stores owner and host details
 */
export const expandAkashProviderV1beta1Provider = ([sa_owner, s_host_uri, a_attributes, a_info]) => ({
    owner: sa_owner,
    host_uri: s_host_uri,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
    info: a_info && expandAkashProviderV1beta1ProviderInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3Provider}
 */
export const condenseAkashAuditV1beta3Provider = (g_msg) => encodeAkashAuditV1beta3Provider(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.Provider` - stores owner auditor and attributes details
 */
export const expandAkashAuditV1beta3Provider = ([sa_owner, s_auditor, , a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3AuditedAttributes}
 */
export const condenseAkashAuditV1beta3AuditedAttributes = (g_msg) => encodeAkashAuditV1beta3AuditedAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.AuditedAttributes` - Attributes
 */
export const expandAkashAuditV1beta3AuditedAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3AttributesResponse}
 */
export const condenseAkashAuditV1beta3AttributesResponse = (g_msg) => encodeAkashAuditV1beta3AttributesResponse(map(g_msg.attributes, condenseAkashAuditV1beta3AuditedAttributes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.AttributesResponse` - represents details of deployment along with group details
 */
export const expandAkashAuditV1beta3AttributesResponse = ([a_attributes]) => ({
    attributes: a_attributes && map(a_attributes, expandAkashAuditV1beta3AuditedAttributes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3AttributesFilters}
 */
export const condenseAkashAuditV1beta3AttributesFilters = (g_msg) => encodeAkashAuditV1beta3AttributesFilters(g_msg.auditors, g_msg.owners);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.AttributesFilters` - defines filters used to filter deployments
 */
export const expandAkashAuditV1beta3AttributesFilters = ([a_auditors, a_owners]) => ({
    auditors: a_auditors,
    owners: a_owners,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3MsgSignProviderAttributes}
 */
export const condenseAkashAuditV1beta3MsgSignProviderAttributes = (g_msg) => encodeAkashAuditV1beta3MsgSignProviderAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.MsgSignProviderAttributes` - defines an SDK message for signing a provider attributes
 */
export const expandAkashAuditV1beta3MsgSignProviderAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3MsgSignProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta3MsgSignProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta3MsgSignProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.MsgSignProviderAttributesResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashAuditV1beta3MsgSignProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3MsgDeleteProviderAttributes}
 */
export const condenseAkashAuditV1beta3MsgDeleteProviderAttributes = (g_msg) => encodeAkashAuditV1beta3MsgDeleteProviderAttributes(g_msg.owner, g_msg.auditor, g_msg.keys);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.MsgDeleteProviderAttributes` - defined the Msg/DeleteProviderAttributes
 */
export const expandAkashAuditV1beta3MsgDeleteProviderAttributes = ([sa_owner, s_auditor, a_keys]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    keys: a_keys,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3MsgDeleteProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta3MsgDeleteProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta3MsgDeleteProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.MsgDeleteProviderAttributesResponse` - defines the Msg/ProviderAttributes response type.
 */
export const expandAkashAuditV1beta3MsgDeleteProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryProvidersResponse}
 */
export const condenseAkashAuditV1beta3QueryProvidersResponse = (g_msg) => encodeAkashAuditV1beta3QueryProvidersResponse(map(g_msg.providers, condenseAkashAuditV1beta3Provider), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryProvidersResponse` - response type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta3QueryProvidersResponse = ([a_providers, a_pagination]) => ({
    providers: a_providers && map(a_providers, expandAkashAuditV1beta3Provider),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryProviderRequest}
 */
export const condenseAkashAuditV1beta3QueryProviderRequest = (g_msg) => encodeAkashAuditV1beta3QueryProviderRequest(g_msg.auditor, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryProviderRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashAuditV1beta3QueryProviderRequest = ([s_auditor, sa_owner]) => ({
    auditor: s_auditor,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryAllProvidersAttributesRequest}
 */
export const condenseAkashAuditV1beta3QueryAllProvidersAttributesRequest = (g_msg) => encodeAkashAuditV1beta3QueryAllProvidersAttributesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryAllProvidersAttributesRequest` - request type for the Query/All Providers RPC method
 */
export const expandAkashAuditV1beta3QueryAllProvidersAttributesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryProviderAttributesRequest}
 */
export const condenseAkashAuditV1beta3QueryProviderAttributesRequest = (g_msg) => encodeAkashAuditV1beta3QueryProviderAttributesRequest(g_msg.owner, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryProviderAttributesRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashAuditV1beta3QueryProviderAttributesRequest = ([sa_owner, a_pagination]) => ({
    owner: sa_owner,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryProviderAuditorRequest}
 */
export const condenseAkashAuditV1beta3QueryProviderAuditorRequest = (g_msg) => encodeAkashAuditV1beta3QueryProviderAuditorRequest(g_msg.auditor, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryProviderAuditorRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta3QueryProviderAuditorRequest = ([s_auditor, sa_owner]) => ({
    auditor: s_auditor,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3QueryAuditorAttributesRequest}
 */
export const condenseAkashAuditV1beta3QueryAuditorAttributesRequest = (g_msg) => encodeAkashAuditV1beta3QueryAuditorAttributesRequest(g_msg.auditor, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.QueryAuditorAttributesRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta3QueryAuditorAttributesRequest = ([s_auditor, a_pagination]) => ({
    auditor: s_auditor,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta3GenesisState}
 */
export const condenseAkashAuditV1beta3GenesisState = (g_msg) => encodeAkashAuditV1beta3GenesisState(map(g_msg.attributes, condenseAkashAuditV1beta3AuditedAttributes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta3.GenesisState` - defines the basic genesis state used by audit module
 */
export const expandAkashAuditV1beta3GenesisState = ([a_attributes]) => ({
    attributes: a_attributes && map(a_attributes, expandAkashAuditV1beta3AuditedAttributes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2Provider}
 */
export const condenseAkashAuditV1beta2Provider = (g_msg) => encodeAkashAuditV1beta2Provider(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.Provider` - stores owner auditor and attributes details
 */
export const expandAkashAuditV1beta2Provider = ([sa_owner, s_auditor, , a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2AuditedAttributes}
 */
export const condenseAkashAuditV1beta2AuditedAttributes = (g_msg) => encodeAkashAuditV1beta2AuditedAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.AuditedAttributes` - Attributes
 */
export const expandAkashAuditV1beta2AuditedAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2AttributesResponse}
 */
export const condenseAkashAuditV1beta2AttributesResponse = (g_msg) => encodeAkashAuditV1beta2AttributesResponse(map(g_msg.attributes, condenseAkashAuditV1beta2AuditedAttributes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.AttributesResponse` - represents details of deployment along with group details
 */
export const expandAkashAuditV1beta2AttributesResponse = ([a_attributes]) => ({
    attributes: a_attributes && map(a_attributes, expandAkashAuditV1beta2AuditedAttributes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2AttributesFilters}
 */
export const condenseAkashAuditV1beta2AttributesFilters = (g_msg) => encodeAkashAuditV1beta2AttributesFilters(g_msg.auditors, g_msg.owners);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.AttributesFilters` - defines filters used to filter deployments
 */
export const expandAkashAuditV1beta2AttributesFilters = ([a_auditors, a_owners]) => ({
    auditors: a_auditors,
    owners: a_owners,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2MsgSignProviderAttributes}
 */
export const condenseAkashAuditV1beta2MsgSignProviderAttributes = (g_msg) => encodeAkashAuditV1beta2MsgSignProviderAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.MsgSignProviderAttributes` - defines an SDK message for signing a provider attributes
 */
export const expandAkashAuditV1beta2MsgSignProviderAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2MsgSignProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta2MsgSignProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta2MsgSignProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.MsgSignProviderAttributesResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashAuditV1beta2MsgSignProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2MsgDeleteProviderAttributes}
 */
export const condenseAkashAuditV1beta2MsgDeleteProviderAttributes = (g_msg) => encodeAkashAuditV1beta2MsgDeleteProviderAttributes(g_msg.owner, g_msg.auditor, g_msg.keys);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.MsgDeleteProviderAttributes` - defined the Msg/DeleteProviderAttributes
 */
export const expandAkashAuditV1beta2MsgDeleteProviderAttributes = ([sa_owner, s_auditor, a_keys]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    keys: a_keys,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2MsgDeleteProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta2MsgDeleteProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta2MsgDeleteProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.MsgDeleteProviderAttributesResponse` - defines the Msg/ProviderAttributes response type.
 */
export const expandAkashAuditV1beta2MsgDeleteProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryProvidersResponse}
 */
export const condenseAkashAuditV1beta2QueryProvidersResponse = (g_msg) => encodeAkashAuditV1beta2QueryProvidersResponse(map(g_msg.providers, condenseAkashAuditV1beta2Provider), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryProvidersResponse` - response type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta2QueryProvidersResponse = ([a_providers, a_pagination]) => ({
    providers: a_providers && map(a_providers, expandAkashAuditV1beta2Provider),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryProviderRequest}
 */
export const condenseAkashAuditV1beta2QueryProviderRequest = (g_msg) => encodeAkashAuditV1beta2QueryProviderRequest(g_msg.auditor, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryProviderRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashAuditV1beta2QueryProviderRequest = ([s_auditor, sa_owner]) => ({
    auditor: s_auditor,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryAllProvidersAttributesRequest}
 */
export const condenseAkashAuditV1beta2QueryAllProvidersAttributesRequest = (g_msg) => encodeAkashAuditV1beta2QueryAllProvidersAttributesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryAllProvidersAttributesRequest` - request type for the Query/All Providers RPC method
 */
export const expandAkashAuditV1beta2QueryAllProvidersAttributesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryProviderAttributesRequest}
 */
export const condenseAkashAuditV1beta2QueryProviderAttributesRequest = (g_msg) => encodeAkashAuditV1beta2QueryProviderAttributesRequest(g_msg.owner, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryProviderAttributesRequest` - request type for the Query/Provider RPC method
 */
export const expandAkashAuditV1beta2QueryProviderAttributesRequest = ([sa_owner, a_pagination]) => ({
    owner: sa_owner,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryProviderAuditorRequest}
 */
export const condenseAkashAuditV1beta2QueryProviderAuditorRequest = (g_msg) => encodeAkashAuditV1beta2QueryProviderAuditorRequest(g_msg.auditor, g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryProviderAuditorRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta2QueryProviderAuditorRequest = ([s_auditor, sa_owner]) => ({
    auditor: s_auditor,
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2QueryAuditorAttributesRequest}
 */
export const condenseAkashAuditV1beta2QueryAuditorAttributesRequest = (g_msg) => encodeAkashAuditV1beta2QueryAuditorAttributesRequest(g_msg.auditor, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.QueryAuditorAttributesRequest` - request type for the Query/Providers RPC method
 */
export const expandAkashAuditV1beta2QueryAuditorAttributesRequest = ([s_auditor, a_pagination]) => ({
    auditor: s_auditor,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta2GenesisState}
 */
export const condenseAkashAuditV1beta2GenesisState = (g_msg) => encodeAkashAuditV1beta2GenesisState(map(g_msg.attributes, condenseAkashAuditV1beta2AuditedAttributes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta2.GenesisState` - defines the basic genesis state used by audit module
 */
export const expandAkashAuditV1beta2GenesisState = ([a_attributes]) => ({
    attributes: a_attributes && map(a_attributes, expandAkashAuditV1beta2AuditedAttributes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1Provider}
 */
export const condenseAkashAuditV1beta1Provider = (g_msg) => encodeAkashAuditV1beta1Provider(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.Provider` - stores owner auditor and attributes details
 */
export const expandAkashAuditV1beta1Provider = ([sa_owner, s_auditor, , a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1AuditedAttributes}
 */
export const condenseAkashAuditV1beta1AuditedAttributes = (g_msg) => encodeAkashAuditV1beta1AuditedAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.AuditedAttributes` - Attributes
 */
export const expandAkashAuditV1beta1AuditedAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1AttributesResponse}
 */
export const condenseAkashAuditV1beta1AttributesResponse = (g_msg) => encodeAkashAuditV1beta1AttributesResponse(map(g_msg.attributes, condenseAkashAuditV1beta1AuditedAttributes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.AttributesResponse` - represents details of deployment along with group details
 */
export const expandAkashAuditV1beta1AttributesResponse = ([a_attributes]) => ({
    attributes: a_attributes && map(a_attributes, expandAkashAuditV1beta1AuditedAttributes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1AttributesFilters}
 */
export const condenseAkashAuditV1beta1AttributesFilters = (g_msg) => encodeAkashAuditV1beta1AttributesFilters(g_msg.auditors, g_msg.owners);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.AttributesFilters` - defines filters used to filter deployments
 */
export const expandAkashAuditV1beta1AttributesFilters = ([a_auditors, a_owners]) => ({
    auditors: a_auditors,
    owners: a_owners,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1MsgSignProviderAttributes}
 */
export const condenseAkashAuditV1beta1MsgSignProviderAttributes = (g_msg) => encodeAkashAuditV1beta1MsgSignProviderAttributes(g_msg.owner, g_msg.auditor, map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.MsgSignProviderAttributes` - defines an SDK message for signing a provider attributes
 */
export const expandAkashAuditV1beta1MsgSignProviderAttributes = ([sa_owner, s_auditor, a_attributes]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1MsgSignProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta1MsgSignProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta1MsgSignProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.MsgSignProviderAttributesResponse` - defines the Msg/CreateProvider response type.
 */
export const expandAkashAuditV1beta1MsgSignProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1MsgDeleteProviderAttributes}
 */
export const condenseAkashAuditV1beta1MsgDeleteProviderAttributes = (g_msg) => encodeAkashAuditV1beta1MsgDeleteProviderAttributes(g_msg.owner, g_msg.auditor, g_msg.keys);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.MsgDeleteProviderAttributes` - defined the Msg/DeleteProviderAttributes
 */
export const expandAkashAuditV1beta1MsgDeleteProviderAttributes = ([sa_owner, s_auditor, a_keys]) => ({
    owner: sa_owner,
    auditor: s_auditor,
    keys: a_keys,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashAuditV1beta1MsgDeleteProviderAttributesResponse}
 */
export const condenseAkashAuditV1beta1MsgDeleteProviderAttributesResponse = (g_msg) => encodeAkashAuditV1beta1MsgDeleteProviderAttributesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.audit.v1beta1.MsgDeleteProviderAttributesResponse` - defines the Msg/ProviderAttributes response type.
 */
export const expandAkashAuditV1beta1MsgDeleteProviderAttributesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashTakeV1beta3GenesisState}
 */
export const condenseAkashTakeV1beta3GenesisState = (g_msg) => encodeAkashTakeV1beta3GenesisState(apply_opt(g_msg.params, condenseAkashTakeV1beta3Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.take.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashTakeV1beta3GenesisState = ([a_params]) => ({
    params: a_params && expandAkashTakeV1beta3Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashTakeV1beta3Params}
 */
export const condenseAkashTakeV1beta3Params = (g_msg) => encodeAkashTakeV1beta3Params(map(g_msg.denom_take_rates, condenseAkashTakeV1beta3DenomTakeRate), g_msg.default_take_rate);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.take.v1beta3.Params` - defines the parameters for the x/take package
 */
export const expandAkashTakeV1beta3Params = ([a_denom_take_rates, n_default_take_rate]) => ({
    denom_take_rates: a_denom_take_rates && map(a_denom_take_rates, expandAkashTakeV1beta3DenomTakeRate),
    default_take_rate: n_default_take_rate,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashTakeV1beta3DenomTakeRate}
 */
export const condenseAkashTakeV1beta3DenomTakeRate = (g_msg) => encodeAkashTakeV1beta3DenomTakeRate(g_msg.denom, g_msg.rate);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.take.v1beta3.DenomTakeRate` - describes take rate for specified denom
 */
export const expandAkashTakeV1beta3DenomTakeRate = ([s_denom, n_rate]) => ({
    denom: s_denom,
    rate: n_rate,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCloseGroup}
 */
export const condenseAkashDeploymentV1beta3MsgCloseGroup = (g_msg) => encodeAkashDeploymentV1beta3MsgCloseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCloseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta3MsgCloseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3GroupID}
 */
export const condenseAkashDeploymentV1beta3GroupID = (g_msg) => encodeAkashDeploymentV1beta3GroupID(g_msg.owner, g_msg.dseq, g_msg.gseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.GroupID` - stores owner, deployment sequence number and group sequence number
 */
export const expandAkashDeploymentV1beta3GroupID = ([sa_owner, sg_dseq, n_gseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCloseGroupResponse}
 */
export const condenseAkashDeploymentV1beta3MsgCloseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgCloseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCloseGroupResponse` - defines the Msg/CloseGroup response type.
 */
export const expandAkashDeploymentV1beta3MsgCloseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgPauseGroup}
 */
export const condenseAkashDeploymentV1beta3MsgPauseGroup = (g_msg) => encodeAkashDeploymentV1beta3MsgPauseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgPauseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta3MsgPauseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgPauseGroupResponse}
 */
export const condenseAkashDeploymentV1beta3MsgPauseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgPauseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgPauseGroupResponse` - defines the Msg/PauseGroup response type.
 */
export const expandAkashDeploymentV1beta3MsgPauseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgStartGroup}
 */
export const condenseAkashDeploymentV1beta3MsgStartGroup = (g_msg) => encodeAkashDeploymentV1beta3MsgStartGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgStartGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta3MsgStartGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgStartGroupResponse}
 */
export const condenseAkashDeploymentV1beta3MsgStartGroupResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgStartGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgStartGroupResponse` - defines the Msg/StartGroup response type.
 */
export const expandAkashDeploymentV1beta3MsgStartGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3ResourceUnit}
 */
export const condenseAkashDeploymentV1beta3ResourceUnit = (g_msg) => encodeAkashDeploymentV1beta3ResourceUnit(apply_opt(g_msg.resource, condenseAkashBaseV1beta3Resources), g_msg.count, apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.ResourceUnit` - extends Resources and adds Count along with the Price
 */
export const expandAkashDeploymentV1beta3ResourceUnit = ([a_resource, n_count, a_price]) => ({
    resource: a_resource && expandAkashBaseV1beta3Resources(a_resource),
    count: n_count,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3Resources}
 */
export const condenseAkashBaseV1beta3Resources = (g_msg) => encodeAkashBaseV1beta3Resources(g_msg.id, apply_opt(g_msg.cpu, condenseAkashBaseV1beta3CPU), apply_opt(g_msg.memory, condenseAkashBaseV1beta3Memory), map(g_msg.storage, condenseAkashBaseV1beta3Storage), apply_opt(g_msg.gpu, condenseAkashBaseV1beta3GPU), map(g_msg.endpoints, condenseAkashBaseV1beta3Endpoint));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.Resources` - describes all available resources types for deployment/node etc if field is nil resource is not present in the given data-structure
 */
export const expandAkashBaseV1beta3Resources = ([n_id, a_cpu, a_memory, a_storage, a_gpu, a_endpoints]) => ({
    id: n_id,
    cpu: a_cpu && expandAkashBaseV1beta3CPU(a_cpu),
    memory: a_memory && expandAkashBaseV1beta3Memory(a_memory),
    storage: a_storage && map(a_storage, expandAkashBaseV1beta3Storage),
    gpu: a_gpu && expandAkashBaseV1beta3GPU(a_gpu),
    endpoints: a_endpoints && map(a_endpoints, expandAkashBaseV1beta3Endpoint),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3CPU}
 */
export const condenseAkashBaseV1beta3CPU = (g_msg) => encodeAkashBaseV1beta3CPU(apply_opt(g_msg.units, condenseAkashBaseV1beta3ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.CPU` - stores resource units and cpu config attributes
 */
export const expandAkashBaseV1beta3CPU = ([a_units, a_attributes]) => ({
    units: a_units && expandAkashBaseV1beta3ResourceValue(a_units),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3ResourceValue}
 */
export const condenseAkashBaseV1beta3ResourceValue = (g_msg) => encodeAkashBaseV1beta3ResourceValue(safe_base64_to_bytes(g_msg.val));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.ResourceValue` - Unit stores cpu, memory and storage metrics
 */
export const expandAkashBaseV1beta3ResourceValue = ([atu8_val]) => ({
    val: safe_bytes_to_base64(atu8_val),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3Memory}
 */
export const condenseAkashBaseV1beta3Memory = (g_msg) => encodeAkashBaseV1beta3Memory(apply_opt(g_msg.quantity, condenseAkashBaseV1beta3ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.Memory` - stores resource quantity and memory attributes
 */
export const expandAkashBaseV1beta3Memory = ([a_quantity, a_attributes]) => ({
    quantity: a_quantity && expandAkashBaseV1beta3ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3Storage}
 */
export const condenseAkashBaseV1beta3Storage = (g_msg) => encodeAkashBaseV1beta3Storage(g_msg.name, apply_opt(g_msg.quantity, condenseAkashBaseV1beta3ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.Storage` - stores resource quantity and storage attributes
 */
export const expandAkashBaseV1beta3Storage = ([s_name, a_quantity, a_attributes]) => ({
    name: s_name,
    quantity: a_quantity && expandAkashBaseV1beta3ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3GPU}
 */
export const condenseAkashBaseV1beta3GPU = (g_msg) => encodeAkashBaseV1beta3GPU(apply_opt(g_msg.units, condenseAkashBaseV1beta3ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.GPU` - stores resource units and cpu config attributes
 */
export const expandAkashBaseV1beta3GPU = ([a_units, a_attributes]) => ({
    units: a_units && expandAkashBaseV1beta3ResourceValue(a_units),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3Endpoint}
 */
export const condenseAkashBaseV1beta3Endpoint = (g_msg) => encodeAkashBaseV1beta3Endpoint(JsonToProtoEnumAkashBaseV1beta3EndpointKind[g_msg.kind], g_msg.sequence_number);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.Endpoint` - describes a publicly accessible IP service
 */
export const expandAkashBaseV1beta3Endpoint = ([xc_kind, n_sequence_number]) => ({
    kind: xc_kind >= 0 ? ProtoToJsonEnumAkashBaseV1beta3EndpointKind[xc_kind] : __UNDEFINED,
    sequence_number: n_sequence_number,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3Group}
 */
export const condenseAkashDeploymentV1beta3Group = (g_msg) => encodeAkashDeploymentV1beta3Group(apply_opt(g_msg.group_id, condenseAkashDeploymentV1beta3GroupID), JsonToProtoEnumAkashDeploymentV1beta3GroupState[g_msg.state], apply_opt(g_msg.group_spec, condenseAkashDeploymentV1beta3GroupSpec), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.Group` - stores group id, state and specifications of group
 */
export const expandAkashDeploymentV1beta3Group = ([a_group_id, xc_state, a_group_spec, sg_created_at]) => ({
    group_id: a_group_id && expandAkashDeploymentV1beta3GroupID(a_group_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta3GroupState[xc_state] : __UNDEFINED,
    group_spec: a_group_spec && expandAkashDeploymentV1beta3GroupSpec(a_group_spec),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3GroupSpec}
 */
export const condenseAkashDeploymentV1beta3GroupSpec = (g_msg) => encodeAkashDeploymentV1beta3GroupSpec(g_msg.name, apply_opt(g_msg.requirements, condenseAkashBaseV1beta3PlacementRequirements), map(g_msg.resources, condenseAkashDeploymentV1beta3ResourceUnit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.GroupSpec` - stores group specifications
 */
export const expandAkashDeploymentV1beta3GroupSpec = ([s_name, a_requirements, a_resources]) => ({
    name: s_name,
    requirements: a_requirements && expandAkashBaseV1beta3PlacementRequirements(a_requirements),
    resources: a_resources && map(a_resources, expandAkashDeploymentV1beta3ResourceUnit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3PlacementRequirements}
 */
export const condenseAkashBaseV1beta3PlacementRequirements = (g_msg) => encodeAkashBaseV1beta3PlacementRequirements(apply_opt(g_msg.signed_by, condenseAkashBaseV1beta3SignedBy), map(g_msg.attributes, condenseAkashBaseV1beta3Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.PlacementRequirements` -
 */
export const expandAkashBaseV1beta3PlacementRequirements = ([a_signed_by, a_attributes]) => ({
    signed_by: a_signed_by && expandAkashBaseV1beta3SignedBy(a_signed_by),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta3Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta3SignedBy}
 */
export const condenseAkashBaseV1beta3SignedBy = (g_msg) => encodeAkashBaseV1beta3SignedBy(g_msg.all_of, g_msg.any_of);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta3.SignedBy` - represents validation accounts that tenant expects signatures for provider attributes AllOf has precedence i.e. if there is at least one entry AnyOf is ignored regardless to how many entries there this behaviour to be discussed
 */
export const expandAkashBaseV1beta3SignedBy = ([a_all_ofs, a_any_ofs]) => ({
    all_of: a_all_ofs,
    any_of: a_any_ofs,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3DeploymentID}
 */
export const condenseAkashDeploymentV1beta3DeploymentID = (g_msg) => encodeAkashDeploymentV1beta3DeploymentID(g_msg.owner, g_msg.dseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.DeploymentID` - stores owner and sequence number
 */
export const expandAkashDeploymentV1beta3DeploymentID = ([sa_owner, sg_dseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3Deployment}
 */
export const condenseAkashDeploymentV1beta3Deployment = (g_msg) => encodeAkashDeploymentV1beta3Deployment(apply_opt(g_msg.deployment_id, condenseAkashDeploymentV1beta3DeploymentID), JsonToProtoEnumAkashDeploymentV1beta3DeploymentState[g_msg.state], safe_base64_to_bytes(g_msg.version), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.Deployment` - stores deploymentID, state and version details
 */
export const expandAkashDeploymentV1beta3Deployment = ([a_deployment_id, xc_state, atu8_version, sg_created_at]) => ({
    deployment_id: a_deployment_id && expandAkashDeploymentV1beta3DeploymentID(a_deployment_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta3DeploymentState[xc_state] : __UNDEFINED,
    version: safe_bytes_to_base64(atu8_version),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3DeploymentFilters}
 */
export const condenseAkashDeploymentV1beta3DeploymentFilters = (g_msg) => encodeAkashDeploymentV1beta3DeploymentFilters(g_msg.owner, g_msg.dseq, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.DeploymentFilters` - defines filters used to filter deployments
 */
export const expandAkashDeploymentV1beta3DeploymentFilters = ([sa_owner, sg_dseq, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryDeploymentsRequest}
 */
export const condenseAkashDeploymentV1beta3QueryDeploymentsRequest = (g_msg) => encodeAkashDeploymentV1beta3QueryDeploymentsRequest(apply_opt(g_msg.filters, condenseAkashDeploymentV1beta3DeploymentFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryDeploymentsRequest` - request type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta3QueryDeploymentsRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashDeploymentV1beta3DeploymentFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryDeploymentsResponse}
 */
export const condenseAkashDeploymentV1beta3QueryDeploymentsResponse = (g_msg) => encodeAkashDeploymentV1beta3QueryDeploymentsResponse(map(g_msg.deployments, condenseAkashDeploymentV1beta3QueryDeploymentResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryDeploymentsResponse` - response type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta3QueryDeploymentsResponse = ([a_deployments, a_pagination]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta3QueryDeploymentResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta3QueryDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta3QueryDeploymentResponse(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta3Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta3Group), apply_opt(g_msg.escrow_account, condenseAkashEscrowV1beta3Account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryDeploymentResponse` - response type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta3QueryDeploymentResponse = ([a_deployment, a_groups, a_escrow_account]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta3Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta3Group),
    escrow_account: a_escrow_account && expandAkashEscrowV1beta3Account(a_escrow_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3Account}
 */
export const condenseAkashEscrowV1beta3Account = (g_msg) => encodeAkashEscrowV1beta3Account(apply_opt(g_msg.id, condenseAkashEscrowV1beta3AccountID), g_msg.owner, JsonToProtoEnumAkashEscrowV1beta3AccountState[g_msg.state], apply_opt(g_msg.balance, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.transferred, condenseCosmosBaseV1beta1DecCoin), g_msg.settled_at, g_msg.depositor, apply_opt(g_msg.funds, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.Account` - stores state for an escrow account
 */
export const expandAkashEscrowV1beta3Account = ([a_id, sa_owner, xc_state, a_balance, a_transferred, sg_settled_at, sa_depositor, a_funds]) => ({
    id: a_id && expandAkashEscrowV1beta3AccountID(a_id),
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta3AccountState[xc_state] : __UNDEFINED,
    balance: a_balance && expandCosmosBaseV1beta1DecCoin(a_balance),
    transferred: a_transferred && expandCosmosBaseV1beta1DecCoin(a_transferred),
    settled_at: sg_settled_at,
    depositor: sa_depositor,
    funds: a_funds && expandCosmosBaseV1beta1DecCoin(a_funds),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3AccountID}
 */
export const condenseAkashEscrowV1beta3AccountID = (g_msg) => encodeAkashEscrowV1beta3AccountID(g_msg.scope, g_msg.xid);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.AccountID` - the account identifier
 */
export const expandAkashEscrowV1beta3AccountID = ([s_scope, s_xid]) => ({
    scope: s_scope,
    xid: s_xid,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryDeploymentRequest}
 */
export const condenseAkashDeploymentV1beta3QueryDeploymentRequest = (g_msg) => encodeAkashDeploymentV1beta3QueryDeploymentRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryDeploymentRequest` - request type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta3QueryDeploymentRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryGroupRequest}
 */
export const condenseAkashDeploymentV1beta3QueryGroupRequest = (g_msg) => encodeAkashDeploymentV1beta3QueryGroupRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryGroupRequest` - request type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta3QueryGroupRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3QueryGroupResponse}
 */
export const condenseAkashDeploymentV1beta3QueryGroupResponse = (g_msg) => encodeAkashDeploymentV1beta3QueryGroupResponse(apply_opt(g_msg.group, condenseAkashDeploymentV1beta3Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.QueryGroupResponse` - response type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta3QueryGroupResponse = ([a_group]) => ({
    group: a_group && expandAkashDeploymentV1beta3Group(a_group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCreateDeployment}
 */
export const condenseAkashDeploymentV1beta3MsgCreateDeployment = (g_msg) => encodeAkashDeploymentV1beta3MsgCreateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3DeploymentID), map(g_msg.groups, condenseAkashDeploymentV1beta3GroupSpec), safe_base64_to_bytes(g_msg.version), slimify_coin(g_msg.deposit), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCreateDeployment` - defines an SDK message for creating deployment
 */
export const expandAkashDeploymentV1beta3MsgCreateDeployment = ([a_id, a_groups, atu8_version, a_deposit, sa_depositor]) => ({
    id: a_id && expandAkashDeploymentV1beta3DeploymentID(a_id),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta3GroupSpec),
    version: safe_bytes_to_base64(atu8_version),
    deposit: a_deposit && expand_coin(a_deposit),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCreateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta3MsgCreateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgCreateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCreateDeploymentResponse` - defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta3MsgCreateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgDepositDeployment}
 */
export const condenseAkashDeploymentV1beta3MsgDepositDeployment = (g_msg) => encodeAkashDeploymentV1beta3MsgDepositDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3DeploymentID), slimify_coin(g_msg.amount), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgDepositDeployment` - deposits more funds into the deposit account
 */
export const expandAkashDeploymentV1beta3MsgDepositDeployment = ([a_id, a_amount, sa_depositor]) => ({
    id: a_id && expandAkashDeploymentV1beta3DeploymentID(a_id),
    amount: a_amount && expand_coin(a_amount),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgDepositDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta3MsgDepositDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgDepositDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgDepositDeploymentResponse` - MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta3MsgDepositDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgUpdateDeployment}
 */
export const condenseAkashDeploymentV1beta3MsgUpdateDeployment = (g_msg) => encodeAkashDeploymentV1beta3MsgUpdateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3DeploymentID), safe_base64_to_bytes(g_msg.version));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgUpdateDeployment` - defines an SDK message for updating deployment
 */
export const expandAkashDeploymentV1beta3MsgUpdateDeployment = ([a_id, , atu8_version]) => ({
    id: a_id && expandAkashDeploymentV1beta3DeploymentID(a_id),
    version: safe_bytes_to_base64(atu8_version),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgUpdateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta3MsgUpdateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgUpdateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgUpdateDeploymentResponse` - defines the Msg/UpdateDeployment response type.
 */
export const expandAkashDeploymentV1beta3MsgUpdateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCloseDeployment}
 */
export const condenseAkashDeploymentV1beta3MsgCloseDeployment = (g_msg) => encodeAkashDeploymentV1beta3MsgCloseDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta3DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCloseDeployment` - defines an SDK message for closing deployment
 */
export const expandAkashDeploymentV1beta3MsgCloseDeployment = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta3DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3MsgCloseDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta3MsgCloseDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta3MsgCloseDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.MsgCloseDeploymentResponse` - defines the Msg/CloseDeployment response type.
 */
export const expandAkashDeploymentV1beta3MsgCloseDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3DepositDeploymentAuthorization}
 */
export const condenseAkashDeploymentV1beta3DepositDeploymentAuthorization = (g_msg) => encodeAkashDeploymentV1beta3DepositDeploymentAuthorization(slimify_coin(g_msg.spend_limit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.DepositDeploymentAuthorization` - allows the grantee to deposit up to spend_limit coins from the granter's account for a deployment.
 */
export const expandAkashDeploymentV1beta3DepositDeploymentAuthorization = ([a_spend_limit]) => ({
    spend_limit: a_spend_limit && expand_coin(a_spend_limit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3GenesisDeployment}
 */
export const condenseAkashDeploymentV1beta3GenesisDeployment = (g_msg) => encodeAkashDeploymentV1beta3GenesisDeployment(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta3Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta3Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.GenesisDeployment` - defines the basic genesis state used by deployment module
 */
export const expandAkashDeploymentV1beta3GenesisDeployment = ([a_deployment, a_groups]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta3Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta3Group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3GenesisState}
 */
export const condenseAkashDeploymentV1beta3GenesisState = (g_msg) => encodeAkashDeploymentV1beta3GenesisState(map(g_msg.deployments, condenseAkashDeploymentV1beta3GenesisDeployment), apply_opt(g_msg.params, condenseAkashDeploymentV1beta3Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashDeploymentV1beta3GenesisState = ([a_deployments, a_params]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta3GenesisDeployment),
    params: a_params && expandAkashDeploymentV1beta3Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta3Params}
 */
export const condenseAkashDeploymentV1beta3Params = (g_msg) => encodeAkashDeploymentV1beta3Params(map(g_msg.min_deposits, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta3.Params` - defines the parameters for the x/deployment package
 */
export const expandAkashDeploymentV1beta3Params = ([a_min_deposits]) => ({
    min_deposits: a_min_deposits && map(a_min_deposits, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCloseGroup}
 */
export const condenseAkashDeploymentV1beta2MsgCloseGroup = (g_msg) => encodeAkashDeploymentV1beta2MsgCloseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCloseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta2MsgCloseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2GroupID}
 */
export const condenseAkashDeploymentV1beta2GroupID = (g_msg) => encodeAkashDeploymentV1beta2GroupID(g_msg.owner, g_msg.dseq, g_msg.gseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.GroupID` - stores owner, deployment sequence number and group sequence number
 */
export const expandAkashDeploymentV1beta2GroupID = ([sa_owner, sg_dseq, n_gseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCloseGroupResponse}
 */
export const condenseAkashDeploymentV1beta2MsgCloseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgCloseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCloseGroupResponse` - defines the Msg/CloseGroup response type.
 */
export const expandAkashDeploymentV1beta2MsgCloseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgPauseGroup}
 */
export const condenseAkashDeploymentV1beta2MsgPauseGroup = (g_msg) => encodeAkashDeploymentV1beta2MsgPauseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgPauseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta2MsgPauseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgPauseGroupResponse}
 */
export const condenseAkashDeploymentV1beta2MsgPauseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgPauseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgPauseGroupResponse` - defines the Msg/PauseGroup response type.
 */
export const expandAkashDeploymentV1beta2MsgPauseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgStartGroup}
 */
export const condenseAkashDeploymentV1beta2MsgStartGroup = (g_msg) => encodeAkashDeploymentV1beta2MsgStartGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgStartGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta2MsgStartGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgStartGroupResponse}
 */
export const condenseAkashDeploymentV1beta2MsgStartGroupResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgStartGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgStartGroupResponse` - defines the Msg/StartGroup response type.
 */
export const expandAkashDeploymentV1beta2MsgStartGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2Group}
 */
export const condenseAkashDeploymentV1beta2Group = (g_msg) => encodeAkashDeploymentV1beta2Group(apply_opt(g_msg.group_id, condenseAkashDeploymentV1beta2GroupID), JsonToProtoEnumAkashDeploymentV1beta2GroupState[g_msg.state], apply_opt(g_msg.group_spec, condenseAkashDeploymentV1beta2GroupSpec), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.Group` - stores group id, state and specifications of group
 */
export const expandAkashDeploymentV1beta2Group = ([a_group_id, xc_state, a_group_spec, sg_created_at]) => ({
    group_id: a_group_id && expandAkashDeploymentV1beta2GroupID(a_group_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta2GroupState[xc_state] : __UNDEFINED,
    group_spec: a_group_spec && expandAkashDeploymentV1beta2GroupSpec(a_group_spec),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2GroupSpec}
 */
export const condenseAkashDeploymentV1beta2GroupSpec = (g_msg) => encodeAkashDeploymentV1beta2GroupSpec(g_msg.name, apply_opt(g_msg.requirements, condenseAkashBaseV1beta2PlacementRequirements), map(g_msg.resources, condenseAkashDeploymentV1beta2Resource));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.GroupSpec` - stores group specifications
 */
export const expandAkashDeploymentV1beta2GroupSpec = ([s_name, a_requirements, a_resources]) => ({
    name: s_name,
    requirements: a_requirements && expandAkashBaseV1beta2PlacementRequirements(a_requirements),
    resources: a_resources && map(a_resources, expandAkashDeploymentV1beta2Resource),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2PlacementRequirements}
 */
export const condenseAkashBaseV1beta2PlacementRequirements = (g_msg) => encodeAkashBaseV1beta2PlacementRequirements(apply_opt(g_msg.signed_by, condenseAkashBaseV1beta2SignedBy), map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.PlacementRequirements` -
 */
export const expandAkashBaseV1beta2PlacementRequirements = ([a_signed_by, a_attributes]) => ({
    signed_by: a_signed_by && expandAkashBaseV1beta2SignedBy(a_signed_by),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2SignedBy}
 */
export const condenseAkashBaseV1beta2SignedBy = (g_msg) => encodeAkashBaseV1beta2SignedBy(g_msg.all_of, g_msg.any_of);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.SignedBy` - represents validation accounts that tenant expects signatures for provider attributes AllOf has precedence i.e. if there is at least one entry AnyOf is ignored regardless to how many entries there this behaviour to be discussed
 */
export const expandAkashBaseV1beta2SignedBy = ([a_all_ofs, a_any_ofs]) => ({
    all_of: a_all_ofs,
    any_of: a_any_ofs,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2Resource}
 */
export const condenseAkashDeploymentV1beta2Resource = (g_msg) => encodeAkashDeploymentV1beta2Resource(apply_opt(g_msg.resources, condenseAkashBaseV1beta2ResourceUnits), g_msg.count, apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.Resource` - stores unit, total count and price of resource
 */
export const expandAkashDeploymentV1beta2Resource = ([a_resources, n_count, a_price]) => ({
    resources: a_resources && expandAkashBaseV1beta2ResourceUnits(a_resources),
    count: n_count,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2ResourceUnits}
 */
export const condenseAkashBaseV1beta2ResourceUnits = (g_msg) => encodeAkashBaseV1beta2ResourceUnits(apply_opt(g_msg.cpu, condenseAkashBaseV1beta2CPU), apply_opt(g_msg.memory, condenseAkashBaseV1beta2Memory), map(g_msg.storage, condenseAkashBaseV1beta2Storage), map(g_msg.endpoints, condenseAkashBaseV1beta2Endpoint));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.ResourceUnits` - describes all available resources types for deployment/node etc if field is nil resource is not present in the given data-structure
 */
export const expandAkashBaseV1beta2ResourceUnits = ([a_cpu, a_memory, a_storage, a_endpoints]) => ({
    cpu: a_cpu && expandAkashBaseV1beta2CPU(a_cpu),
    memory: a_memory && expandAkashBaseV1beta2Memory(a_memory),
    storage: a_storage && map(a_storage, expandAkashBaseV1beta2Storage),
    endpoints: a_endpoints && map(a_endpoints, expandAkashBaseV1beta2Endpoint),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2CPU}
 */
export const condenseAkashBaseV1beta2CPU = (g_msg) => encodeAkashBaseV1beta2CPU(apply_opt(g_msg.units, condenseAkashBaseV1beta2ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.CPU` - stores resource units and cpu config attributes
 */
export const expandAkashBaseV1beta2CPU = ([a_units, a_attributes]) => ({
    units: a_units && expandAkashBaseV1beta2ResourceValue(a_units),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2ResourceValue}
 */
export const condenseAkashBaseV1beta2ResourceValue = (g_msg) => encodeAkashBaseV1beta2ResourceValue(safe_base64_to_bytes(g_msg.val));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.ResourceValue` - Unit stores cpu, memory and storage metrics
 */
export const expandAkashBaseV1beta2ResourceValue = ([atu8_val]) => ({
    val: safe_bytes_to_base64(atu8_val),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2Memory}
 */
export const condenseAkashBaseV1beta2Memory = (g_msg) => encodeAkashBaseV1beta2Memory(apply_opt(g_msg.quantity, condenseAkashBaseV1beta2ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.Memory` - stores resource quantity and memory attributes
 */
export const expandAkashBaseV1beta2Memory = ([a_quantity, a_attributes]) => ({
    quantity: a_quantity && expandAkashBaseV1beta2ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2Storage}
 */
export const condenseAkashBaseV1beta2Storage = (g_msg) => encodeAkashBaseV1beta2Storage(g_msg.name, apply_opt(g_msg.quantity, condenseAkashBaseV1beta2ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta2Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.Storage` - stores resource quantity and storage attributes
 */
export const expandAkashBaseV1beta2Storage = ([s_name, a_quantity, a_attributes]) => ({
    name: s_name,
    quantity: a_quantity && expandAkashBaseV1beta2ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta2Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta2Endpoint}
 */
export const condenseAkashBaseV1beta2Endpoint = (g_msg) => encodeAkashBaseV1beta2Endpoint(JsonToProtoEnumAkashBaseV1beta2EndpointKind[g_msg.kind], g_msg.sequence_number);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta2.Endpoint` - describes a publicly accessible IP service
 */
export const expandAkashBaseV1beta2Endpoint = ([xc_kind, n_sequence_number]) => ({
    kind: xc_kind >= 0 ? ProtoToJsonEnumAkashBaseV1beta2EndpointKind[xc_kind] : __UNDEFINED,
    sequence_number: n_sequence_number,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2DeploymentID}
 */
export const condenseAkashDeploymentV1beta2DeploymentID = (g_msg) => encodeAkashDeploymentV1beta2DeploymentID(g_msg.owner, g_msg.dseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.DeploymentID` - stores owner and sequence number
 */
export const expandAkashDeploymentV1beta2DeploymentID = ([sa_owner, sg_dseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2Deployment}
 */
export const condenseAkashDeploymentV1beta2Deployment = (g_msg) => encodeAkashDeploymentV1beta2Deployment(apply_opt(g_msg.deployment_id, condenseAkashDeploymentV1beta2DeploymentID), JsonToProtoEnumAkashDeploymentV1beta2DeploymentState[g_msg.state], safe_base64_to_bytes(g_msg.version), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.Deployment` - stores deploymentID, state and version details
 */
export const expandAkashDeploymentV1beta2Deployment = ([a_deployment_id, xc_state, atu8_version, sg_created_at]) => ({
    deployment_id: a_deployment_id && expandAkashDeploymentV1beta2DeploymentID(a_deployment_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta2DeploymentState[xc_state] : __UNDEFINED,
    version: safe_bytes_to_base64(atu8_version),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2DeploymentFilters}
 */
export const condenseAkashDeploymentV1beta2DeploymentFilters = (g_msg) => encodeAkashDeploymentV1beta2DeploymentFilters(g_msg.owner, g_msg.dseq, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.DeploymentFilters` - defines filters used to filter deployments
 */
export const expandAkashDeploymentV1beta2DeploymentFilters = ([sa_owner, sg_dseq, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryDeploymentsRequest}
 */
export const condenseAkashDeploymentV1beta2QueryDeploymentsRequest = (g_msg) => encodeAkashDeploymentV1beta2QueryDeploymentsRequest(apply_opt(g_msg.filters, condenseAkashDeploymentV1beta2DeploymentFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryDeploymentsRequest` - request type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta2QueryDeploymentsRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashDeploymentV1beta2DeploymentFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryDeploymentsResponse}
 */
export const condenseAkashDeploymentV1beta2QueryDeploymentsResponse = (g_msg) => encodeAkashDeploymentV1beta2QueryDeploymentsResponse(map(g_msg.deployments, condenseAkashDeploymentV1beta2QueryDeploymentResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryDeploymentsResponse` - response type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta2QueryDeploymentsResponse = ([a_deployments, a_pagination]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta2QueryDeploymentResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta2QueryDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta2QueryDeploymentResponse(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta2Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta2Group), apply_opt(g_msg.escrow_account, condenseAkashEscrowV1beta2Account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryDeploymentResponse` - response type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta2QueryDeploymentResponse = ([a_deployment, a_groups, a_escrow_account]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta2Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta2Group),
    escrow_account: a_escrow_account && expandAkashEscrowV1beta2Account(a_escrow_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2Account}
 */
export const condenseAkashEscrowV1beta2Account = (g_msg) => encodeAkashEscrowV1beta2Account(apply_opt(g_msg.id, condenseAkashEscrowV1beta2AccountID), g_msg.owner, JsonToProtoEnumAkashEscrowV1beta2AccountState[g_msg.state], apply_opt(g_msg.balance, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.transferred, condenseCosmosBaseV1beta1DecCoin), g_msg.settled_at, g_msg.depositor, apply_opt(g_msg.funds, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.Account` - stores state for an escrow account
 */
export const expandAkashEscrowV1beta2Account = ([a_id, sa_owner, xc_state, a_balance, a_transferred, sg_settled_at, sa_depositor, a_funds]) => ({
    id: a_id && expandAkashEscrowV1beta2AccountID(a_id),
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta2AccountState[xc_state] : __UNDEFINED,
    balance: a_balance && expandCosmosBaseV1beta1DecCoin(a_balance),
    transferred: a_transferred && expandCosmosBaseV1beta1DecCoin(a_transferred),
    settled_at: sg_settled_at,
    depositor: sa_depositor,
    funds: a_funds && expandCosmosBaseV1beta1DecCoin(a_funds),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2AccountID}
 */
export const condenseAkashEscrowV1beta2AccountID = (g_msg) => encodeAkashEscrowV1beta2AccountID(g_msg.scope, g_msg.xid);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.AccountID` - the account identifier
 */
export const expandAkashEscrowV1beta2AccountID = ([s_scope, s_xid]) => ({
    scope: s_scope,
    xid: s_xid,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryDeploymentRequest}
 */
export const condenseAkashDeploymentV1beta2QueryDeploymentRequest = (g_msg) => encodeAkashDeploymentV1beta2QueryDeploymentRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryDeploymentRequest` - request type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta2QueryDeploymentRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryGroupRequest}
 */
export const condenseAkashDeploymentV1beta2QueryGroupRequest = (g_msg) => encodeAkashDeploymentV1beta2QueryGroupRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryGroupRequest` - request type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta2QueryGroupRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2QueryGroupResponse}
 */
export const condenseAkashDeploymentV1beta2QueryGroupResponse = (g_msg) => encodeAkashDeploymentV1beta2QueryGroupResponse(apply_opt(g_msg.group, condenseAkashDeploymentV1beta2Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.QueryGroupResponse` - response type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta2QueryGroupResponse = ([a_group]) => ({
    group: a_group && expandAkashDeploymentV1beta2Group(a_group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCreateDeployment}
 */
export const condenseAkashDeploymentV1beta2MsgCreateDeployment = (g_msg) => encodeAkashDeploymentV1beta2MsgCreateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2DeploymentID), map(g_msg.groups, condenseAkashDeploymentV1beta2GroupSpec), safe_base64_to_bytes(g_msg.version), slimify_coin(g_msg.deposit), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCreateDeployment` - defines an SDK message for creating deployment
 */
export const expandAkashDeploymentV1beta2MsgCreateDeployment = ([a_id, a_groups, atu8_version, a_deposit, sa_depositor]) => ({
    id: a_id && expandAkashDeploymentV1beta2DeploymentID(a_id),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta2GroupSpec),
    version: safe_bytes_to_base64(atu8_version),
    deposit: a_deposit && expand_coin(a_deposit),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCreateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta2MsgCreateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgCreateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCreateDeploymentResponse` - defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta2MsgCreateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgDepositDeployment}
 */
export const condenseAkashDeploymentV1beta2MsgDepositDeployment = (g_msg) => encodeAkashDeploymentV1beta2MsgDepositDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2DeploymentID), slimify_coin(g_msg.amount), g_msg.depositor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgDepositDeployment` - deposits more funds into the deposit account
 */
export const expandAkashDeploymentV1beta2MsgDepositDeployment = ([a_id, a_amount, sa_depositor]) => ({
    id: a_id && expandAkashDeploymentV1beta2DeploymentID(a_id),
    amount: a_amount && expand_coin(a_amount),
    depositor: sa_depositor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgDepositDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta2MsgDepositDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgDepositDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgDepositDeploymentResponse` - MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta2MsgDepositDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgUpdateDeployment}
 */
export const condenseAkashDeploymentV1beta2MsgUpdateDeployment = (g_msg) => encodeAkashDeploymentV1beta2MsgUpdateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2DeploymentID), safe_base64_to_bytes(g_msg.version));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgUpdateDeployment` - defines an SDK message for updating deployment
 */
export const expandAkashDeploymentV1beta2MsgUpdateDeployment = ([a_id, , atu8_version]) => ({
    id: a_id && expandAkashDeploymentV1beta2DeploymentID(a_id),
    version: safe_bytes_to_base64(atu8_version),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgUpdateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta2MsgUpdateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgUpdateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgUpdateDeploymentResponse` - defines the Msg/UpdateDeployment response type.
 */
export const expandAkashDeploymentV1beta2MsgUpdateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCloseDeployment}
 */
export const condenseAkashDeploymentV1beta2MsgCloseDeployment = (g_msg) => encodeAkashDeploymentV1beta2MsgCloseDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta2DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCloseDeployment` - defines an SDK message for closing deployment
 */
export const expandAkashDeploymentV1beta2MsgCloseDeployment = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta2DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2MsgCloseDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta2MsgCloseDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta2MsgCloseDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.MsgCloseDeploymentResponse` - defines the Msg/CloseDeployment response type.
 */
export const expandAkashDeploymentV1beta2MsgCloseDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2DepositDeploymentAuthorization}
 */
export const condenseAkashDeploymentV1beta2DepositDeploymentAuthorization = (g_msg) => encodeAkashDeploymentV1beta2DepositDeploymentAuthorization(slimify_coin(g_msg.spend_limit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.DepositDeploymentAuthorization` - allows the grantee to deposit up to spend_limit coins from the granter's account for a deployment.
 */
export const expandAkashDeploymentV1beta2DepositDeploymentAuthorization = ([a_spend_limit]) => ({
    spend_limit: a_spend_limit && expand_coin(a_spend_limit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2GenesisDeployment}
 */
export const condenseAkashDeploymentV1beta2GenesisDeployment = (g_msg) => encodeAkashDeploymentV1beta2GenesisDeployment(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta2Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta2Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.GenesisDeployment` - defines the basic genesis state used by deployment module
 */
export const expandAkashDeploymentV1beta2GenesisDeployment = ([a_deployment, a_groups]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta2Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta2Group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2GenesisState}
 */
export const condenseAkashDeploymentV1beta2GenesisState = (g_msg) => encodeAkashDeploymentV1beta2GenesisState(map(g_msg.deployments, condenseAkashDeploymentV1beta2GenesisDeployment), apply_opt(g_msg.params, condenseAkashDeploymentV1beta2Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashDeploymentV1beta2GenesisState = ([a_deployments, a_params]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta2GenesisDeployment),
    params: a_params && expandAkashDeploymentV1beta2Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta2Params}
 */
export const condenseAkashDeploymentV1beta2Params = (g_msg) => encodeAkashDeploymentV1beta2Params(slimify_coin(g_msg.deployment_min_deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta2.Params` - defines the parameters for the x/deployment package
 */
export const expandAkashDeploymentV1beta2Params = ([a_deployment_min_deposit]) => ({
    deployment_min_deposit: a_deployment_min_deposit && expand_coin(a_deployment_min_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCloseGroup}
 */
export const condenseAkashDeploymentV1beta1MsgCloseGroup = (g_msg) => encodeAkashDeploymentV1beta1MsgCloseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCloseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta1MsgCloseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1GroupID}
 */
export const condenseAkashDeploymentV1beta1GroupID = (g_msg) => encodeAkashDeploymentV1beta1GroupID(g_msg.owner, g_msg.dseq, g_msg.gseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.GroupID` - stores owner, deployment sequence number and group sequence number
 */
export const expandAkashDeploymentV1beta1GroupID = ([sa_owner, sg_dseq, n_gseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCloseGroupResponse}
 */
export const condenseAkashDeploymentV1beta1MsgCloseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgCloseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCloseGroupResponse` - defines the Msg/CloseGroup response type.
 */
export const expandAkashDeploymentV1beta1MsgCloseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgPauseGroup}
 */
export const condenseAkashDeploymentV1beta1MsgPauseGroup = (g_msg) => encodeAkashDeploymentV1beta1MsgPauseGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgPauseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta1MsgPauseGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgPauseGroupResponse}
 */
export const condenseAkashDeploymentV1beta1MsgPauseGroupResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgPauseGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgPauseGroupResponse` - defines the Msg/PauseGroup response type.
 */
export const expandAkashDeploymentV1beta1MsgPauseGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgStartGroup}
 */
export const condenseAkashDeploymentV1beta1MsgStartGroup = (g_msg) => encodeAkashDeploymentV1beta1MsgStartGroup(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgStartGroup` - defines SDK message to close a single Group within a Deployment.
 */
export const expandAkashDeploymentV1beta1MsgStartGroup = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgStartGroupResponse}
 */
export const condenseAkashDeploymentV1beta1MsgStartGroupResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgStartGroupResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgStartGroupResponse` - defines the Msg/StartGroup response type.
 */
export const expandAkashDeploymentV1beta1MsgStartGroupResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1GroupSpec}
 */
export const condenseAkashDeploymentV1beta1GroupSpec = (g_msg) => encodeAkashDeploymentV1beta1GroupSpec(g_msg.name, apply_opt(g_msg.requirements, condenseAkashBaseV1beta1PlacementRequirements), map(g_msg.resources, condenseAkashDeploymentV1beta1Resource));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.GroupSpec` - stores group specifications
 */
export const expandAkashDeploymentV1beta1GroupSpec = ([s_name, a_requirements, a_resources]) => ({
    name: s_name,
    requirements: a_requirements && expandAkashBaseV1beta1PlacementRequirements(a_requirements),
    resources: a_resources && map(a_resources, expandAkashDeploymentV1beta1Resource),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1PlacementRequirements}
 */
export const condenseAkashBaseV1beta1PlacementRequirements = (g_msg) => encodeAkashBaseV1beta1PlacementRequirements(apply_opt(g_msg.signed_by, condenseAkashBaseV1beta1SignedBy), map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.PlacementRequirements` -
 */
export const expandAkashBaseV1beta1PlacementRequirements = ([a_signed_by, a_attributes]) => ({
    signed_by: a_signed_by && expandAkashBaseV1beta1SignedBy(a_signed_by),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1SignedBy}
 */
export const condenseAkashBaseV1beta1SignedBy = (g_msg) => encodeAkashBaseV1beta1SignedBy(g_msg.all_of, g_msg.any_of);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.SignedBy` - represents validation accounts that tenant expects signatures for provider attributes AllOf has precedence i.e. if there is at least one entry AnyOf is ignored regardless to how many entries there this behaviour to be discussed
 */
export const expandAkashBaseV1beta1SignedBy = ([a_all_ofs, a_any_ofs]) => ({
    all_of: a_all_ofs,
    any_of: a_any_ofs,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1Resource}
 */
export const condenseAkashDeploymentV1beta1Resource = (g_msg) => encodeAkashDeploymentV1beta1Resource(apply_opt(g_msg.resources, condenseAkashBaseV1beta1ResourceUnits), g_msg.count, slimify_coin(g_msg.price));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.Resource` - stores unit, total count and price of resource
 */
export const expandAkashDeploymentV1beta1Resource = ([a_resources, n_count, a_price]) => ({
    resources: a_resources && expandAkashBaseV1beta1ResourceUnits(a_resources),
    count: n_count,
    price: a_price && expand_coin(a_price),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1ResourceUnits}
 */
export const condenseAkashBaseV1beta1ResourceUnits = (g_msg) => encodeAkashBaseV1beta1ResourceUnits(apply_opt(g_msg.cpu, condenseAkashBaseV1beta1CPU), apply_opt(g_msg.memory, condenseAkashBaseV1beta1Memory), apply_opt(g_msg.storage, condenseAkashBaseV1beta1Storage), map(g_msg.endpoints, condenseAkashBaseV1beta1Endpoint));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.ResourceUnits` - describes all available resources types for deployment/node etc if field is nil resource is not present in the given data-structure
 */
export const expandAkashBaseV1beta1ResourceUnits = ([a_cpu, a_memory, a_storage, a_endpoints]) => ({
    cpu: a_cpu && expandAkashBaseV1beta1CPU(a_cpu),
    memory: a_memory && expandAkashBaseV1beta1Memory(a_memory),
    storage: a_storage && expandAkashBaseV1beta1Storage(a_storage),
    endpoints: a_endpoints && map(a_endpoints, expandAkashBaseV1beta1Endpoint),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1CPU}
 */
export const condenseAkashBaseV1beta1CPU = (g_msg) => encodeAkashBaseV1beta1CPU(apply_opt(g_msg.units, condenseAkashBaseV1beta1ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.CPU` - stores resource units and cpu config attributes
 */
export const expandAkashBaseV1beta1CPU = ([a_units, a_attributes]) => ({
    units: a_units && expandAkashBaseV1beta1ResourceValue(a_units),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1ResourceValue}
 */
export const condenseAkashBaseV1beta1ResourceValue = (g_msg) => encodeAkashBaseV1beta1ResourceValue(safe_base64_to_bytes(g_msg.val));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.ResourceValue` - Unit stores cpu, memory and storage metrics
 */
export const expandAkashBaseV1beta1ResourceValue = ([atu8_val]) => ({
    val: safe_bytes_to_base64(atu8_val),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1Memory}
 */
export const condenseAkashBaseV1beta1Memory = (g_msg) => encodeAkashBaseV1beta1Memory(apply_opt(g_msg.quantity, condenseAkashBaseV1beta1ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.Memory` - stores resource quantity and memory attributes
 */
export const expandAkashBaseV1beta1Memory = ([a_quantity, a_attributes]) => ({
    quantity: a_quantity && expandAkashBaseV1beta1ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1Storage}
 */
export const condenseAkashBaseV1beta1Storage = (g_msg) => encodeAkashBaseV1beta1Storage(apply_opt(g_msg.quantity, condenseAkashBaseV1beta1ResourceValue), map(g_msg.attributes, condenseAkashBaseV1beta1Attribute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.Storage` - stores resource quantity and storage attributes
 */
export const expandAkashBaseV1beta1Storage = ([a_quantity, a_attributes]) => ({
    quantity: a_quantity && expandAkashBaseV1beta1ResourceValue(a_quantity),
    attributes: a_attributes && map(a_attributes, expandAkashBaseV1beta1Attribute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashBaseV1beta1Endpoint}
 */
export const condenseAkashBaseV1beta1Endpoint = (g_msg) => encodeAkashBaseV1beta1Endpoint(JsonToProtoEnumAkashBaseV1beta1EndpointKind[g_msg.kind]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.base.v1beta1.Endpoint` - describes a publicly accessible IP service
 */
export const expandAkashBaseV1beta1Endpoint = ([xc_kind]) => ({
    kind: xc_kind >= 0 ? ProtoToJsonEnumAkashBaseV1beta1EndpointKind[xc_kind] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1Group}
 */
export const condenseAkashDeploymentV1beta1Group = (g_msg) => encodeAkashDeploymentV1beta1Group(apply_opt(g_msg.group_id, condenseAkashDeploymentV1beta1GroupID), JsonToProtoEnumAkashDeploymentV1beta1GroupState[g_msg.state], apply_opt(g_msg.group_spec, condenseAkashDeploymentV1beta1GroupSpec), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.Group` - stores group id, state and specifications of group
 */
export const expandAkashDeploymentV1beta1Group = ([a_group_id, xc_state, a_group_spec, sg_created_at]) => ({
    group_id: a_group_id && expandAkashDeploymentV1beta1GroupID(a_group_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta1GroupState[xc_state] : __UNDEFINED,
    group_spec: a_group_spec && expandAkashDeploymentV1beta1GroupSpec(a_group_spec),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCreateDeployment}
 */
export const condenseAkashDeploymentV1beta1MsgCreateDeployment = (g_msg) => encodeAkashDeploymentV1beta1MsgCreateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1DeploymentID), map(g_msg.groups, condenseAkashDeploymentV1beta1GroupSpec), safe_base64_to_bytes(g_msg.version), slimify_coin(g_msg.deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCreateDeployment` - defines an SDK message for creating deployment
 */
export const expandAkashDeploymentV1beta1MsgCreateDeployment = ([a_id, a_groups, atu8_version, a_deposit]) => ({
    id: a_id && expandAkashDeploymentV1beta1DeploymentID(a_id),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta1GroupSpec),
    version: safe_bytes_to_base64(atu8_version),
    deposit: a_deposit && expand_coin(a_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1DeploymentID}
 */
export const condenseAkashDeploymentV1beta1DeploymentID = (g_msg) => encodeAkashDeploymentV1beta1DeploymentID(g_msg.owner, g_msg.dseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.DeploymentID` - stores owner and sequence number
 */
export const expandAkashDeploymentV1beta1DeploymentID = ([sa_owner, sg_dseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCreateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta1MsgCreateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgCreateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCreateDeploymentResponse` - defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta1MsgCreateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgDepositDeployment}
 */
export const condenseAkashDeploymentV1beta1MsgDepositDeployment = (g_msg) => encodeAkashDeploymentV1beta1MsgDepositDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1DeploymentID), slimify_coin(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgDepositDeployment` - deposits more funds into the deposit account
 */
export const expandAkashDeploymentV1beta1MsgDepositDeployment = ([a_id, a_amount]) => ({
    id: a_id && expandAkashDeploymentV1beta1DeploymentID(a_id),
    amount: a_amount && expand_coin(a_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgDepositDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta1MsgDepositDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgDepositDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgDepositDeploymentResponse` - MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 */
export const expandAkashDeploymentV1beta1MsgDepositDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgUpdateDeployment}
 */
export const condenseAkashDeploymentV1beta1MsgUpdateDeployment = (g_msg) => encodeAkashDeploymentV1beta1MsgUpdateDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1DeploymentID), map(g_msg.groups, condenseAkashDeploymentV1beta1GroupSpec), safe_base64_to_bytes(g_msg.version));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgUpdateDeployment` - defines an SDK message for updating deployment
 */
export const expandAkashDeploymentV1beta1MsgUpdateDeployment = ([a_id, a_groups, atu8_version]) => ({
    id: a_id && expandAkashDeploymentV1beta1DeploymentID(a_id),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta1GroupSpec),
    version: safe_bytes_to_base64(atu8_version),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgUpdateDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta1MsgUpdateDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgUpdateDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgUpdateDeploymentResponse` - defines the Msg/UpdateDeployment response type.
 */
export const expandAkashDeploymentV1beta1MsgUpdateDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCloseDeployment}
 */
export const condenseAkashDeploymentV1beta1MsgCloseDeployment = (g_msg) => encodeAkashDeploymentV1beta1MsgCloseDeployment(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCloseDeployment` - defines an SDK message for closing deployment
 */
export const expandAkashDeploymentV1beta1MsgCloseDeployment = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1MsgCloseDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta1MsgCloseDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta1MsgCloseDeploymentResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.MsgCloseDeploymentResponse` - defines the Msg/CloseDeployment response type.
 */
export const expandAkashDeploymentV1beta1MsgCloseDeploymentResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1Deployment}
 */
export const condenseAkashDeploymentV1beta1Deployment = (g_msg) => encodeAkashDeploymentV1beta1Deployment(apply_opt(g_msg.deployment_id, condenseAkashDeploymentV1beta1DeploymentID), JsonToProtoEnumAkashDeploymentV1beta1DeploymentState[g_msg.state], safe_base64_to_bytes(g_msg.version), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.Deployment` - stores deploymentID, state and version details
 */
export const expandAkashDeploymentV1beta1Deployment = ([a_deployment_id, xc_state, atu8_version, sg_created_at]) => ({
    deployment_id: a_deployment_id && expandAkashDeploymentV1beta1DeploymentID(a_deployment_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashDeploymentV1beta1DeploymentState[xc_state] : __UNDEFINED,
    version: safe_bytes_to_base64(atu8_version),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1DeploymentFilters}
 */
export const condenseAkashDeploymentV1beta1DeploymentFilters = (g_msg) => encodeAkashDeploymentV1beta1DeploymentFilters(g_msg.owner, g_msg.dseq, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.DeploymentFilters` - defines filters used to filter deployments
 */
export const expandAkashDeploymentV1beta1DeploymentFilters = ([sa_owner, sg_dseq, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryDeploymentsRequest}
 */
export const condenseAkashDeploymentV1beta1QueryDeploymentsRequest = (g_msg) => encodeAkashDeploymentV1beta1QueryDeploymentsRequest(apply_opt(g_msg.filters, condenseAkashDeploymentV1beta1DeploymentFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryDeploymentsRequest` - request type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta1QueryDeploymentsRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashDeploymentV1beta1DeploymentFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryDeploymentsResponse}
 */
export const condenseAkashDeploymentV1beta1QueryDeploymentsResponse = (g_msg) => encodeAkashDeploymentV1beta1QueryDeploymentsResponse(map(g_msg.deployments, condenseAkashDeploymentV1beta1QueryDeploymentResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryDeploymentsResponse` - response type for the Query/Deployments RPC method
 */
export const expandAkashDeploymentV1beta1QueryDeploymentsResponse = ([a_deployments, a_pagination]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta1QueryDeploymentResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryDeploymentResponse}
 */
export const condenseAkashDeploymentV1beta1QueryDeploymentResponse = (g_msg) => encodeAkashDeploymentV1beta1QueryDeploymentResponse(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta1Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta1Group), apply_opt(g_msg.escrow_account, condenseAkashEscrowV1beta1Account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryDeploymentResponse` - response type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta1QueryDeploymentResponse = ([a_deployment, a_groups, a_escrow_account]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta1Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta1Group),
    escrow_account: a_escrow_account && expandAkashEscrowV1beta1Account(a_escrow_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1Account}
 */
export const condenseAkashEscrowV1beta1Account = (g_msg) => encodeAkashEscrowV1beta1Account(apply_opt(g_msg.id, condenseAkashEscrowV1beta1AccountID), g_msg.owner, JsonToProtoEnumAkashEscrowV1beta1AccountState[g_msg.state], slimify_coin(g_msg.balance), slimify_coin(g_msg.transferred), g_msg.settled_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.Account` - stores state for an escrow account
 */
export const expandAkashEscrowV1beta1Account = ([a_id, sa_owner, xc_state, a_balance, a_transferred, sg_settled_at]) => ({
    id: a_id && expandAkashEscrowV1beta1AccountID(a_id),
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta1AccountState[xc_state] : __UNDEFINED,
    balance: a_balance && expand_coin(a_balance),
    transferred: a_transferred && expand_coin(a_transferred),
    settled_at: sg_settled_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1AccountID}
 */
export const condenseAkashEscrowV1beta1AccountID = (g_msg) => encodeAkashEscrowV1beta1AccountID(g_msg.scope, g_msg.xid);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.AccountID` - the account identifier
 */
export const expandAkashEscrowV1beta1AccountID = ([s_scope, s_xid]) => ({
    scope: s_scope,
    xid: s_xid,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryDeploymentRequest}
 */
export const condenseAkashDeploymentV1beta1QueryDeploymentRequest = (g_msg) => encodeAkashDeploymentV1beta1QueryDeploymentRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1DeploymentID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryDeploymentRequest` - request type for the Query/Deployment RPC method
 */
export const expandAkashDeploymentV1beta1QueryDeploymentRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1DeploymentID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryGroupRequest}
 */
export const condenseAkashDeploymentV1beta1QueryGroupRequest = (g_msg) => encodeAkashDeploymentV1beta1QueryGroupRequest(apply_opt(g_msg.id, condenseAkashDeploymentV1beta1GroupID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryGroupRequest` - request type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta1QueryGroupRequest = ([a_id]) => ({
    id: a_id && expandAkashDeploymentV1beta1GroupID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1QueryGroupResponse}
 */
export const condenseAkashDeploymentV1beta1QueryGroupResponse = (g_msg) => encodeAkashDeploymentV1beta1QueryGroupResponse(apply_opt(g_msg.group, condenseAkashDeploymentV1beta1Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.QueryGroupResponse` - response type for the Query/Group RPC method
 */
export const expandAkashDeploymentV1beta1QueryGroupResponse = ([a_group]) => ({
    group: a_group && expandAkashDeploymentV1beta1Group(a_group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1DepositDeploymentAuthorization}
 */
export const condenseAkashDeploymentV1beta1DepositDeploymentAuthorization = (g_msg) => encodeAkashDeploymentV1beta1DepositDeploymentAuthorization(slimify_coin(g_msg.spend_limit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.DepositDeploymentAuthorization` - allows the grantee to deposit up to spend_limit coins from the granter's account for a deployment.
 */
export const expandAkashDeploymentV1beta1DepositDeploymentAuthorization = ([a_spend_limit]) => ({
    spend_limit: a_spend_limit && expand_coin(a_spend_limit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1GenesisDeployment}
 */
export const condenseAkashDeploymentV1beta1GenesisDeployment = (g_msg) => encodeAkashDeploymentV1beta1GenesisDeployment(apply_opt(g_msg.deployment, condenseAkashDeploymentV1beta1Deployment), map(g_msg.groups, condenseAkashDeploymentV1beta1Group));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.GenesisDeployment` - defines the basic genesis state used by deployment module
 */
export const expandAkashDeploymentV1beta1GenesisDeployment = ([a_deployment, a_groups]) => ({
    deployment: a_deployment && expandAkashDeploymentV1beta1Deployment(a_deployment),
    groups: a_groups && map(a_groups, expandAkashDeploymentV1beta1Group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1GenesisState}
 */
export const condenseAkashDeploymentV1beta1GenesisState = (g_msg) => encodeAkashDeploymentV1beta1GenesisState(map(g_msg.deployments, condenseAkashDeploymentV1beta1GenesisDeployment), apply_opt(g_msg.params, condenseAkashDeploymentV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashDeploymentV1beta1GenesisState = ([a_deployments, a_params]) => ({
    deployments: a_deployments && map(a_deployments, expandAkashDeploymentV1beta1GenesisDeployment),
    params: a_params && expandAkashDeploymentV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashDeploymentV1beta1Params}
 */
export const condenseAkashDeploymentV1beta1Params = (g_msg) => encodeAkashDeploymentV1beta1Params(slimify_coin(g_msg.deployment_min_deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.deployment.v1beta1.Params` - defines the parameters for the x/deployment package
 */
export const expandAkashDeploymentV1beta1Params = ([a_deployment_min_deposit]) => ({
    deployment_min_deposit: a_deployment_min_deposit && expand_coin(a_deployment_min_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashStakingV1beta3GenesisState}
 */
export const condenseAkashStakingV1beta3GenesisState = (g_msg) => encodeAkashStakingV1beta3GenesisState(apply_opt(g_msg.params, condenseAkashStakingV1beta3Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.staking.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashStakingV1beta3GenesisState = ([a_params]) => ({
    params: a_params && expandAkashStakingV1beta3Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashStakingV1beta3Params}
 */
export const condenseAkashStakingV1beta3Params = (g_msg) => encodeAkashStakingV1beta3Params(g_msg.min_commission_rate);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.staking.v1beta3.Params` - extends the parameters for the x/staking module
 */
export const expandAkashStakingV1beta3Params = ([s_min_commission_rate]) => ({
    min_commission_rate: s_min_commission_rate,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3CertificateResponse}
 */
export const condenseAkashCertV1beta3CertificateResponse = (g_msg) => encodeAkashCertV1beta3CertificateResponse(apply_opt(g_msg.certificate, condenseAkashCertV1beta3Certificate), g_msg.serial);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.CertificateResponse` - contains a single X509 certificate and its serial number
 */
export const expandAkashCertV1beta3CertificateResponse = ([a_certificate, s_serial]) => ({
    certificate: a_certificate && expandAkashCertV1beta3Certificate(a_certificate),
    serial: s_serial,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3Certificate}
 */
export const condenseAkashCertV1beta3Certificate = (g_msg) => encodeAkashCertV1beta3Certificate(JsonToProtoEnumAkashCertV1beta3CertificateState[g_msg.state], safe_base64_to_bytes(g_msg.cert), safe_base64_to_bytes(g_msg.pubkey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.Certificate` - stores state, certificate and it's public key
 */
export const expandAkashCertV1beta3Certificate = ([, xc_state, atu8_cert, atu8_pubkey]) => ({
    state: xc_state >= 0 ? ProtoToJsonEnumAkashCertV1beta3CertificateState[xc_state] : __UNDEFINED,
    cert: safe_bytes_to_base64(atu8_cert),
    pubkey: safe_bytes_to_base64(atu8_pubkey),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3QueryCertificatesRequest}
 */
export const condenseAkashCertV1beta3QueryCertificatesRequest = (g_msg) => encodeAkashCertV1beta3QueryCertificatesRequest(apply_opt(g_msg.filter, condenseAkashCertV1beta3CertificateFilter), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.QueryCertificatesRequest` - QueryDeploymentsRequest is request type for the Query/Deployments RPC method
 */
export const expandAkashCertV1beta3QueryCertificatesRequest = ([a_filter, a_pagination]) => ({
    filter: a_filter && expandAkashCertV1beta3CertificateFilter(a_filter),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3CertificateFilter}
 */
export const condenseAkashCertV1beta3CertificateFilter = (g_msg) => encodeAkashCertV1beta3CertificateFilter(g_msg.owner, g_msg.serial, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.CertificateFilter` - defines filters used to filter certificates
 */
export const expandAkashCertV1beta3CertificateFilter = ([sa_owner, s_serial, s_state]) => ({
    owner: sa_owner,
    serial: s_serial,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3QueryCertificatesResponse}
 */
export const condenseAkashCertV1beta3QueryCertificatesResponse = (g_msg) => encodeAkashCertV1beta3QueryCertificatesResponse(map(g_msg.certificates, condenseAkashCertV1beta3CertificateResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.QueryCertificatesResponse` - response type for the Query/Certificates RPC method
 */
export const expandAkashCertV1beta3QueryCertificatesResponse = ([a_certificates, a_pagination]) => ({
    certificates: a_certificates && map(a_certificates, expandAkashCertV1beta3CertificateResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3CertificateID}
 */
export const condenseAkashCertV1beta3CertificateID = (g_msg) => encodeAkashCertV1beta3CertificateID(g_msg.owner, g_msg.serial);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.CertificateID` - stores owner and sequence number
 */
export const expandAkashCertV1beta3CertificateID = ([sa_owner, s_serial]) => ({
    owner: sa_owner,
    serial: s_serial,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3MsgCreateCertificate}
 */
export const condenseAkashCertV1beta3MsgCreateCertificate = (g_msg) => encodeAkashCertV1beta3MsgCreateCertificate(g_msg.owner, safe_base64_to_bytes(g_msg.cert), safe_base64_to_bytes(g_msg.pubkey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.MsgCreateCertificate` - defines an SDK message for creating certificate
 */
export const expandAkashCertV1beta3MsgCreateCertificate = ([sa_owner, atu8_cert, atu8_pubkey]) => ({
    owner: sa_owner,
    cert: safe_bytes_to_base64(atu8_cert),
    pubkey: safe_bytes_to_base64(atu8_pubkey),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3MsgCreateCertificateResponse}
 */
export const condenseAkashCertV1beta3MsgCreateCertificateResponse = (g_msg) => encodeAkashCertV1beta3MsgCreateCertificateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.MsgCreateCertificateResponse` - defines the Msg/CreateCertificate response type.
 */
export const expandAkashCertV1beta3MsgCreateCertificateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3MsgRevokeCertificate}
 */
export const condenseAkashCertV1beta3MsgRevokeCertificate = (g_msg) => encodeAkashCertV1beta3MsgRevokeCertificate(apply_opt(g_msg.id, condenseAkashCertV1beta3CertificateID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.MsgRevokeCertificate` - defines an SDK message for revoking certificate
 */
export const expandAkashCertV1beta3MsgRevokeCertificate = ([a_id]) => ({
    id: a_id && expandAkashCertV1beta3CertificateID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3MsgRevokeCertificateResponse}
 */
export const condenseAkashCertV1beta3MsgRevokeCertificateResponse = (g_msg) => encodeAkashCertV1beta3MsgRevokeCertificateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.MsgRevokeCertificateResponse` - defines the Msg/RevokeCertificate response type.
 */
export const expandAkashCertV1beta3MsgRevokeCertificateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3GenesisCertificate}
 */
export const condenseAkashCertV1beta3GenesisCertificate = (g_msg) => encodeAkashCertV1beta3GenesisCertificate(g_msg.owner, apply_opt(g_msg.certificate, condenseAkashCertV1beta3Certificate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.GenesisCertificate` - defines certificate entry at genesis
 */
export const expandAkashCertV1beta3GenesisCertificate = ([sa_owner, a_certificate]) => ({
    owner: sa_owner,
    certificate: a_certificate && expandAkashCertV1beta3Certificate(a_certificate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta3GenesisState}
 */
export const condenseAkashCertV1beta3GenesisState = (g_msg) => encodeAkashCertV1beta3GenesisState(map(g_msg.certificates, condenseAkashCertV1beta3GenesisCertificate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta3.GenesisState` - defines the basic genesis state used by cert module
 */
export const expandAkashCertV1beta3GenesisState = ([a_certificates]) => ({
    certificates: a_certificates && map(a_certificates, expandAkashCertV1beta3GenesisCertificate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2CertificateResponse}
 */
export const condenseAkashCertV1beta2CertificateResponse = (g_msg) => encodeAkashCertV1beta2CertificateResponse(apply_opt(g_msg.certificate, condenseAkashCertV1beta2Certificate), g_msg.serial);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.CertificateResponse` - contains a single X509 certificate and its serial number
 */
export const expandAkashCertV1beta2CertificateResponse = ([a_certificate, s_serial]) => ({
    certificate: a_certificate && expandAkashCertV1beta2Certificate(a_certificate),
    serial: s_serial,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2Certificate}
 */
export const condenseAkashCertV1beta2Certificate = (g_msg) => encodeAkashCertV1beta2Certificate(JsonToProtoEnumAkashCertV1beta2CertificateState[g_msg.state], safe_base64_to_bytes(g_msg.cert), safe_base64_to_bytes(g_msg.pubkey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.Certificate` - stores state, certificate and it's public key
 */
export const expandAkashCertV1beta2Certificate = ([, xc_state, atu8_cert, atu8_pubkey]) => ({
    state: xc_state >= 0 ? ProtoToJsonEnumAkashCertV1beta2CertificateState[xc_state] : __UNDEFINED,
    cert: safe_bytes_to_base64(atu8_cert),
    pubkey: safe_bytes_to_base64(atu8_pubkey),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2QueryCertificatesRequest}
 */
export const condenseAkashCertV1beta2QueryCertificatesRequest = (g_msg) => encodeAkashCertV1beta2QueryCertificatesRequest(apply_opt(g_msg.filter, condenseAkashCertV1beta2CertificateFilter), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.QueryCertificatesRequest` - QueryDeploymentsRequest is request type for the Query/Deployments RPC method
 */
export const expandAkashCertV1beta2QueryCertificatesRequest = ([a_filter, a_pagination]) => ({
    filter: a_filter && expandAkashCertV1beta2CertificateFilter(a_filter),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2CertificateFilter}
 */
export const condenseAkashCertV1beta2CertificateFilter = (g_msg) => encodeAkashCertV1beta2CertificateFilter(g_msg.owner, g_msg.serial, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.CertificateFilter` - defines filters used to filter certificates
 */
export const expandAkashCertV1beta2CertificateFilter = ([sa_owner, s_serial, s_state]) => ({
    owner: sa_owner,
    serial: s_serial,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2QueryCertificatesResponse}
 */
export const condenseAkashCertV1beta2QueryCertificatesResponse = (g_msg) => encodeAkashCertV1beta2QueryCertificatesResponse(map(g_msg.certificates, condenseAkashCertV1beta2CertificateResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.QueryCertificatesResponse` - response type for the Query/Certificates RPC method
 */
export const expandAkashCertV1beta2QueryCertificatesResponse = ([a_certificates, a_pagination]) => ({
    certificates: a_certificates && map(a_certificates, expandAkashCertV1beta2CertificateResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2CertificateID}
 */
export const condenseAkashCertV1beta2CertificateID = (g_msg) => encodeAkashCertV1beta2CertificateID(g_msg.owner, g_msg.serial);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.CertificateID` - stores owner and sequence number
 */
export const expandAkashCertV1beta2CertificateID = ([sa_owner, s_serial]) => ({
    owner: sa_owner,
    serial: s_serial,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2MsgCreateCertificate}
 */
export const condenseAkashCertV1beta2MsgCreateCertificate = (g_msg) => encodeAkashCertV1beta2MsgCreateCertificate(g_msg.owner, safe_base64_to_bytes(g_msg.cert), safe_base64_to_bytes(g_msg.pubkey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.MsgCreateCertificate` - defines an SDK message for creating certificate
 */
export const expandAkashCertV1beta2MsgCreateCertificate = ([sa_owner, atu8_cert, atu8_pubkey]) => ({
    owner: sa_owner,
    cert: safe_bytes_to_base64(atu8_cert),
    pubkey: safe_bytes_to_base64(atu8_pubkey),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2MsgCreateCertificateResponse}
 */
export const condenseAkashCertV1beta2MsgCreateCertificateResponse = (g_msg) => encodeAkashCertV1beta2MsgCreateCertificateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.MsgCreateCertificateResponse` - defines the Msg/CreateCertificate response type.
 */
export const expandAkashCertV1beta2MsgCreateCertificateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2MsgRevokeCertificate}
 */
export const condenseAkashCertV1beta2MsgRevokeCertificate = (g_msg) => encodeAkashCertV1beta2MsgRevokeCertificate(apply_opt(g_msg.id, condenseAkashCertV1beta2CertificateID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.MsgRevokeCertificate` - defines an SDK message for revoking certificate
 */
export const expandAkashCertV1beta2MsgRevokeCertificate = ([a_id]) => ({
    id: a_id && expandAkashCertV1beta2CertificateID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2MsgRevokeCertificateResponse}
 */
export const condenseAkashCertV1beta2MsgRevokeCertificateResponse = (g_msg) => encodeAkashCertV1beta2MsgRevokeCertificateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.MsgRevokeCertificateResponse` - defines the Msg/RevokeCertificate response type.
 */
export const expandAkashCertV1beta2MsgRevokeCertificateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2GenesisCertificate}
 */
export const condenseAkashCertV1beta2GenesisCertificate = (g_msg) => encodeAkashCertV1beta2GenesisCertificate(g_msg.owner, apply_opt(g_msg.certificate, condenseAkashCertV1beta2Certificate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.GenesisCertificate` - defines certificate entry at genesis
 */
export const expandAkashCertV1beta2GenesisCertificate = ([sa_owner, a_certificate]) => ({
    owner: sa_owner,
    certificate: a_certificate && expandAkashCertV1beta2Certificate(a_certificate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashCertV1beta2GenesisState}
 */
export const condenseAkashCertV1beta2GenesisState = (g_msg) => encodeAkashCertV1beta2GenesisState(map(g_msg.certificates, condenseAkashCertV1beta2GenesisCertificate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.cert.v1beta2.GenesisState` - defines the basic genesis state used by cert module
 */
export const expandAkashCertV1beta2GenesisState = ([a_certificates]) => ({
    certificates: a_certificates && map(a_certificates, expandAkashCertV1beta2GenesisCertificate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3FractionalPayment}
 */
export const condenseAkashEscrowV1beta3FractionalPayment = (g_msg) => encodeAkashEscrowV1beta3FractionalPayment(apply_opt(g_msg.account_id, condenseAkashEscrowV1beta3AccountID), g_msg.payment_id, g_msg.owner, JsonToProtoEnumAkashEscrowV1beta3FractionalPaymentState[g_msg.state], apply_opt(g_msg.rate, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.balance, condenseCosmosBaseV1beta1DecCoin), slimify_coin(g_msg.withdrawn));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.FractionalPayment` - Payment stores state for a payment
 */
export const expandAkashEscrowV1beta3FractionalPayment = ([a_account_id, si_payment, sa_owner, xc_state, a_rate, a_balance, a_withdrawn]) => ({
    account_id: a_account_id && expandAkashEscrowV1beta3AccountID(a_account_id),
    payment_id: si_payment,
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta3FractionalPaymentState[xc_state] : __UNDEFINED,
    rate: a_rate && expandCosmosBaseV1beta1DecCoin(a_rate),
    balance: a_balance && expandCosmosBaseV1beta1DecCoin(a_balance),
    withdrawn: a_withdrawn && expand_coin(a_withdrawn),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3QueryAccountsRequest}
 */
export const condenseAkashEscrowV1beta3QueryAccountsRequest = (g_msg) => encodeAkashEscrowV1beta3QueryAccountsRequest(g_msg.scope, g_msg.xid, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.QueryAccountsRequest` - QueryAccountRequest is request type for the Query/Account RPC method
 */
export const expandAkashEscrowV1beta3QueryAccountsRequest = ([s_scope, s_xid, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3QueryAccountsResponse}
 */
export const condenseAkashEscrowV1beta3QueryAccountsResponse = (g_msg) => encodeAkashEscrowV1beta3QueryAccountsResponse(map(g_msg.accounts, condenseAkashEscrowV1beta3Account), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.QueryAccountsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta3QueryAccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta3Account),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3QueryPaymentsRequest}
 */
export const condenseAkashEscrowV1beta3QueryPaymentsRequest = (g_msg) => encodeAkashEscrowV1beta3QueryPaymentsRequest(g_msg.scope, g_msg.xid, g_msg.id, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.QueryPaymentsRequest` - QueryPaymentRequest is request type for the Query/Payment RPC method
 */
export const expandAkashEscrowV1beta3QueryPaymentsRequest = ([s_scope, s_xid, s_id, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    id: s_id,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3QueryPaymentsResponse}
 */
export const condenseAkashEscrowV1beta3QueryPaymentsResponse = (g_msg) => encodeAkashEscrowV1beta3QueryPaymentsResponse(map(g_msg.payments, condenseAkashEscrowV1beta3FractionalPayment), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.QueryPaymentsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta3QueryPaymentsResponse = ([a_payments, a_pagination]) => ({
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta3FractionalPayment),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta3GenesisState}
 */
export const condenseAkashEscrowV1beta3GenesisState = (g_msg) => encodeAkashEscrowV1beta3GenesisState(map(g_msg.accounts, condenseAkashEscrowV1beta3Account), map(g_msg.payments, condenseAkashEscrowV1beta3FractionalPayment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta3.GenesisState` - defines the basic genesis state used by escrow module
 */
export const expandAkashEscrowV1beta3GenesisState = ([a_accounts, a_payments]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta3Account),
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta3FractionalPayment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2FractionalPayment}
 */
export const condenseAkashEscrowV1beta2FractionalPayment = (g_msg) => encodeAkashEscrowV1beta2FractionalPayment(apply_opt(g_msg.account_id, condenseAkashEscrowV1beta2AccountID), g_msg.payment_id, g_msg.owner, JsonToProtoEnumAkashEscrowV1beta2FractionalPaymentState[g_msg.state], apply_opt(g_msg.rate, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.balance, condenseCosmosBaseV1beta1DecCoin), slimify_coin(g_msg.withdrawn));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.FractionalPayment` - Payment stores state for a payment
 */
export const expandAkashEscrowV1beta2FractionalPayment = ([a_account_id, si_payment, sa_owner, xc_state, a_rate, a_balance, a_withdrawn]) => ({
    account_id: a_account_id && expandAkashEscrowV1beta2AccountID(a_account_id),
    payment_id: si_payment,
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta2FractionalPaymentState[xc_state] : __UNDEFINED,
    rate: a_rate && expandCosmosBaseV1beta1DecCoin(a_rate),
    balance: a_balance && expandCosmosBaseV1beta1DecCoin(a_balance),
    withdrawn: a_withdrawn && expand_coin(a_withdrawn),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2QueryAccountsRequest}
 */
export const condenseAkashEscrowV1beta2QueryAccountsRequest = (g_msg) => encodeAkashEscrowV1beta2QueryAccountsRequest(g_msg.scope, g_msg.xid, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.QueryAccountsRequest` - QueryAccountRequest is request type for the Query/Account RPC method
 */
export const expandAkashEscrowV1beta2QueryAccountsRequest = ([s_scope, s_xid, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2QueryAccountsResponse}
 */
export const condenseAkashEscrowV1beta2QueryAccountsResponse = (g_msg) => encodeAkashEscrowV1beta2QueryAccountsResponse(map(g_msg.accounts, condenseAkashEscrowV1beta2Account), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.QueryAccountsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta2QueryAccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta2Account),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2QueryPaymentsRequest}
 */
export const condenseAkashEscrowV1beta2QueryPaymentsRequest = (g_msg) => encodeAkashEscrowV1beta2QueryPaymentsRequest(g_msg.scope, g_msg.xid, g_msg.id, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.QueryPaymentsRequest` - QueryPaymentRequest is request type for the Query/Payment RPC method
 */
export const expandAkashEscrowV1beta2QueryPaymentsRequest = ([s_scope, s_xid, s_id, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    id: s_id,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2QueryPaymentsResponse}
 */
export const condenseAkashEscrowV1beta2QueryPaymentsResponse = (g_msg) => encodeAkashEscrowV1beta2QueryPaymentsResponse(map(g_msg.payments, condenseAkashEscrowV1beta2FractionalPayment), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.QueryPaymentsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta2QueryPaymentsResponse = ([a_payments, a_pagination]) => ({
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta2FractionalPayment),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta2GenesisState}
 */
export const condenseAkashEscrowV1beta2GenesisState = (g_msg) => encodeAkashEscrowV1beta2GenesisState(map(g_msg.accounts, condenseAkashEscrowV1beta2Account), map(g_msg.payments, condenseAkashEscrowV1beta2FractionalPayment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta2.GenesisState` - defines the basic genesis state used by escrow module
 */
export const expandAkashEscrowV1beta2GenesisState = ([a_accounts, a_payments]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta2Account),
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta2FractionalPayment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1Payment}
 */
export const condenseAkashEscrowV1beta1Payment = (g_msg) => encodeAkashEscrowV1beta1Payment(apply_opt(g_msg.account_id, condenseAkashEscrowV1beta1AccountID), g_msg.payment_id, g_msg.owner, JsonToProtoEnumAkashEscrowV1beta1PaymentState[g_msg.state], slimify_coin(g_msg.rate), slimify_coin(g_msg.balance), slimify_coin(g_msg.withdrawn));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.Payment` - stores state for a payment
 */
export const expandAkashEscrowV1beta1Payment = ([a_account_id, si_payment, sa_owner, xc_state, a_rate, a_balance, a_withdrawn]) => ({
    account_id: a_account_id && expandAkashEscrowV1beta1AccountID(a_account_id),
    payment_id: si_payment,
    owner: sa_owner,
    state: xc_state >= 0 ? ProtoToJsonEnumAkashEscrowV1beta1PaymentState[xc_state] : __UNDEFINED,
    rate: a_rate && expand_coin(a_rate),
    balance: a_balance && expand_coin(a_balance),
    withdrawn: a_withdrawn && expand_coin(a_withdrawn),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1QueryAccountsRequest}
 */
export const condenseAkashEscrowV1beta1QueryAccountsRequest = (g_msg) => encodeAkashEscrowV1beta1QueryAccountsRequest(g_msg.scope, g_msg.xid, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.QueryAccountsRequest` - QueryAccountRequest is request type for the Query/Account RPC method
 */
export const expandAkashEscrowV1beta1QueryAccountsRequest = ([s_scope, s_xid, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1QueryAccountsResponse}
 */
export const condenseAkashEscrowV1beta1QueryAccountsResponse = (g_msg) => encodeAkashEscrowV1beta1QueryAccountsResponse(map(g_msg.accounts, condenseAkashEscrowV1beta1Account), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.QueryAccountsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta1QueryAccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta1Account),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1QueryPaymentsRequest}
 */
export const condenseAkashEscrowV1beta1QueryPaymentsRequest = (g_msg) => encodeAkashEscrowV1beta1QueryPaymentsRequest(g_msg.scope, g_msg.xid, g_msg.id, g_msg.owner, g_msg.state, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.QueryPaymentsRequest` - QueryPaymentRequest is request type for the Query/Payment RPC method
 */
export const expandAkashEscrowV1beta1QueryPaymentsRequest = ([s_scope, s_xid, s_id, sa_owner, s_state, a_pagination]) => ({
    scope: s_scope,
    xid: s_xid,
    id: s_id,
    owner: sa_owner,
    state: s_state,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1QueryPaymentsResponse}
 */
export const condenseAkashEscrowV1beta1QueryPaymentsResponse = (g_msg) => encodeAkashEscrowV1beta1QueryPaymentsResponse(map(g_msg.payments, condenseAkashEscrowV1beta1Payment), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.QueryPaymentsResponse` - QueryProvidersResponse is response type for the Query/Providers RPC method
 */
export const expandAkashEscrowV1beta1QueryPaymentsResponse = ([a_payments, a_pagination]) => ({
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta1Payment),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashEscrowV1beta1GenesisState}
 */
export const condenseAkashEscrowV1beta1GenesisState = (g_msg) => encodeAkashEscrowV1beta1GenesisState(map(g_msg.accounts, condenseAkashEscrowV1beta1Account), map(g_msg.payments, condenseAkashEscrowV1beta1Payment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.escrow.v1beta1.GenesisState` - defines the basic genesis state used by escrow module
 */
export const expandAkashEscrowV1beta1GenesisState = ([a_accounts, a_payments]) => ({
    accounts: a_accounts && map(a_accounts, expandAkashEscrowV1beta1Account),
    payments: a_payments && map(a_payments, expandAkashEscrowV1beta1Payment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCreateBid}
 */
export const condenseAkashMarketV1beta3MsgCreateBid = (g_msg) => encodeAkashMarketV1beta3MsgCreateBid(apply_opt(g_msg.order, condenseAkashMarketV1beta3OrderID), g_msg.provider, apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), slimify_coin(g_msg.deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCreateBid` - defines an SDK message for creating Bid
 */
export const expandAkashMarketV1beta3MsgCreateBid = ([a_order, s_provider, a_price, a_deposit]) => ({
    order: a_order && expandAkashMarketV1beta3OrderID(a_order),
    provider: s_provider,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    deposit: a_deposit && expand_coin(a_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3OrderID}
 */
export const condenseAkashMarketV1beta3OrderID = (g_msg) => encodeAkashMarketV1beta3OrderID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.OrderID` - stores owner and all other seq numbers
 */
export const expandAkashMarketV1beta3OrderID = ([sa_owner, sg_dseq, n_gseq, n_oseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCreateBidResponse}
 */
export const condenseAkashMarketV1beta3MsgCreateBidResponse = (g_msg) => encodeAkashMarketV1beta3MsgCreateBidResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCreateBidResponse` - defines the Msg/CreateBid response type.
 */
export const expandAkashMarketV1beta3MsgCreateBidResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCloseBid}
 */
export const condenseAkashMarketV1beta3MsgCloseBid = (g_msg) => encodeAkashMarketV1beta3MsgCloseBid(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta3BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCloseBid` - defines an SDK message for closing bid
 */
export const expandAkashMarketV1beta3MsgCloseBid = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta3BidID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3BidID}
 */
export const condenseAkashMarketV1beta3BidID = (g_msg) => encodeAkashMarketV1beta3BidID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.BidID` - stores owner and all other seq numbers A successful bid becomes a Lease(ID).
 */
export const expandAkashMarketV1beta3BidID = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCloseBidResponse}
 */
export const condenseAkashMarketV1beta3MsgCloseBidResponse = (g_msg) => encodeAkashMarketV1beta3MsgCloseBidResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCloseBidResponse` - defines the Msg/CloseBid response type.
 */
export const expandAkashMarketV1beta3MsgCloseBidResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3Bid}
 */
export const condenseAkashMarketV1beta3Bid = (g_msg) => encodeAkashMarketV1beta3Bid(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta3BidID), JsonToProtoEnumAkashMarketV1beta3BidState[g_msg.state], apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.Bid` - stores BidID, state of bid and price
 */
export const expandAkashMarketV1beta3Bid = ([a_bid_id, xc_state, a_price, sg_created_at]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta3BidID(a_bid_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta3BidState[xc_state] : __UNDEFINED,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3BidFilters}
 */
export const condenseAkashMarketV1beta3BidFilters = (g_msg) => encodeAkashMarketV1beta3BidFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.BidFilters` - defines flags for bid list filter
 */
export const expandAkashMarketV1beta3BidFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryOrdersRequest}
 */
export const condenseAkashMarketV1beta3QueryOrdersRequest = (g_msg) => encodeAkashMarketV1beta3QueryOrdersRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta3OrderFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryOrdersRequest` - request type for the Query/Orders RPC method
 */
export const expandAkashMarketV1beta3QueryOrdersRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta3OrderFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3OrderFilters}
 */
export const condenseAkashMarketV1beta3OrderFilters = (g_msg) => encodeAkashMarketV1beta3OrderFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.OrderFilters` - defines flags for order list filter
 */
export const expandAkashMarketV1beta3OrderFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryOrdersResponse}
 */
export const condenseAkashMarketV1beta3QueryOrdersResponse = (g_msg) => encodeAkashMarketV1beta3QueryOrdersResponse(map(g_msg.orders, condenseAkashMarketV1beta3Order), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryOrdersResponse` - response type for the Query/Orders RPC method
 */
export const expandAkashMarketV1beta3QueryOrdersResponse = ([a_orders, a_pagination]) => ({
    orders: a_orders && map(a_orders, expandAkashMarketV1beta3Order),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3Order}
 */
export const condenseAkashMarketV1beta3Order = (g_msg) => encodeAkashMarketV1beta3Order(apply_opt(g_msg.order_id, condenseAkashMarketV1beta3OrderID), JsonToProtoEnumAkashMarketV1beta3OrderState[g_msg.state], apply_opt(g_msg.spec, condenseAkashDeploymentV1beta3GroupSpec), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.Order` - stores orderID, state of order and other details
 */
export const expandAkashMarketV1beta3Order = ([a_order_id, xc_state, a_spec, sg_created_at]) => ({
    order_id: a_order_id && expandAkashMarketV1beta3OrderID(a_order_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta3OrderState[xc_state] : __UNDEFINED,
    spec: a_spec && expandAkashDeploymentV1beta3GroupSpec(a_spec),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryOrderRequest}
 */
export const condenseAkashMarketV1beta3QueryOrderRequest = (g_msg) => encodeAkashMarketV1beta3QueryOrderRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta3OrderID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryOrderRequest` - request type for the Query/Order RPC method
 */
export const expandAkashMarketV1beta3QueryOrderRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta3OrderID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryOrderResponse}
 */
export const condenseAkashMarketV1beta3QueryOrderResponse = (g_msg) => encodeAkashMarketV1beta3QueryOrderResponse(apply_opt(g_msg.order, condenseAkashMarketV1beta3Order));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryOrderResponse` - response type for the Query/Order RPC method
 */
export const expandAkashMarketV1beta3QueryOrderResponse = ([a_order]) => ({
    order: a_order && expandAkashMarketV1beta3Order(a_order),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryBidsRequest}
 */
export const condenseAkashMarketV1beta3QueryBidsRequest = (g_msg) => encodeAkashMarketV1beta3QueryBidsRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta3BidFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryBidsRequest` - request type for the Query/Bids RPC method
 */
export const expandAkashMarketV1beta3QueryBidsRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta3BidFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryBidsResponse}
 */
export const condenseAkashMarketV1beta3QueryBidsResponse = (g_msg) => encodeAkashMarketV1beta3QueryBidsResponse(map(g_msg.bids, condenseAkashMarketV1beta3QueryBidResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryBidsResponse` - response type for the Query/Bids RPC method
 */
export const expandAkashMarketV1beta3QueryBidsResponse = ([a_bids, a_pagination]) => ({
    bids: a_bids && map(a_bids, expandAkashMarketV1beta3QueryBidResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryBidResponse}
 */
export const condenseAkashMarketV1beta3QueryBidResponse = (g_msg) => encodeAkashMarketV1beta3QueryBidResponse(apply_opt(g_msg.bid, condenseAkashMarketV1beta3Bid), apply_opt(g_msg.escrow_account, condenseAkashEscrowV1beta3Account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryBidResponse` - response type for the Query/Bid RPC method
 */
export const expandAkashMarketV1beta3QueryBidResponse = ([a_bid, a_escrow_account]) => ({
    bid: a_bid && expandAkashMarketV1beta3Bid(a_bid),
    escrow_account: a_escrow_account && expandAkashEscrowV1beta3Account(a_escrow_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryBidRequest}
 */
export const condenseAkashMarketV1beta3QueryBidRequest = (g_msg) => encodeAkashMarketV1beta3QueryBidRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta3BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryBidRequest` - request type for the Query/Bid RPC method
 */
export const expandAkashMarketV1beta3QueryBidRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta3BidID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryLeasesRequest}
 */
export const condenseAkashMarketV1beta3QueryLeasesRequest = (g_msg) => encodeAkashMarketV1beta3QueryLeasesRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta3LeaseFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryLeasesRequest` - request type for the Query/Leases RPC method
 */
export const expandAkashMarketV1beta3QueryLeasesRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta3LeaseFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3LeaseFilters}
 */
export const condenseAkashMarketV1beta3LeaseFilters = (g_msg) => encodeAkashMarketV1beta3LeaseFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.LeaseFilters` - defines flags for lease list filter
 */
export const expandAkashMarketV1beta3LeaseFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryLeasesResponse}
 */
export const condenseAkashMarketV1beta3QueryLeasesResponse = (g_msg) => encodeAkashMarketV1beta3QueryLeasesResponse(map(g_msg.leases, condenseAkashMarketV1beta3QueryLeaseResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryLeasesResponse` - response type for the Query/Leases RPC method
 */
export const expandAkashMarketV1beta3QueryLeasesResponse = ([a_leases, a_pagination]) => ({
    leases: a_leases && map(a_leases, expandAkashMarketV1beta3QueryLeaseResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryLeaseResponse}
 */
export const condenseAkashMarketV1beta3QueryLeaseResponse = (g_msg) => encodeAkashMarketV1beta3QueryLeaseResponse(apply_opt(g_msg.lease, condenseAkashMarketV1beta3Lease), apply_opt(g_msg.escrow_payment, condenseAkashEscrowV1beta3FractionalPayment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryLeaseResponse` - response type for the Query/Lease RPC method
 */
export const expandAkashMarketV1beta3QueryLeaseResponse = ([a_lease, a_escrow_payment]) => ({
    lease: a_lease && expandAkashMarketV1beta3Lease(a_lease),
    escrow_payment: a_escrow_payment && expandAkashEscrowV1beta3FractionalPayment(a_escrow_payment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3Lease}
 */
export const condenseAkashMarketV1beta3Lease = (g_msg) => encodeAkashMarketV1beta3Lease(apply_opt(g_msg.lease_id, condenseAkashMarketV1beta3LeaseID), JsonToProtoEnumAkashMarketV1beta3LeaseState[g_msg.state], apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), g_msg.created_at, g_msg.closed_on);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.Lease` - stores LeaseID, state of lease and price
 */
export const expandAkashMarketV1beta3Lease = ([a_lease_id, xc_state, a_price, sg_created_at, sg_closed_on]) => ({
    lease_id: a_lease_id && expandAkashMarketV1beta3LeaseID(a_lease_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta3LeaseState[xc_state] : __UNDEFINED,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    created_at: sg_created_at,
    closed_on: sg_closed_on,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3LeaseID}
 */
export const condenseAkashMarketV1beta3LeaseID = (g_msg) => encodeAkashMarketV1beta3LeaseID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.LeaseID` - stores bid details of lease
 */
export const expandAkashMarketV1beta3LeaseID = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3QueryLeaseRequest}
 */
export const condenseAkashMarketV1beta3QueryLeaseRequest = (g_msg) => encodeAkashMarketV1beta3QueryLeaseRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta3LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.QueryLeaseRequest` - request type for the Query/Lease RPC method
 */
export const expandAkashMarketV1beta3QueryLeaseRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta3LeaseID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgWithdrawLease}
 */
export const condenseAkashMarketV1beta3MsgWithdrawLease = (g_msg) => encodeAkashMarketV1beta3MsgWithdrawLease(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta3LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgWithdrawLease` - defines an SDK message for closing bid
 */
export const expandAkashMarketV1beta3MsgWithdrawLease = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta3LeaseID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCreateLease}
 */
export const condenseAkashMarketV1beta3MsgCreateLease = (g_msg) => encodeAkashMarketV1beta3MsgCreateLease(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta3BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCreateLease` - sent to create a lease
 */
export const expandAkashMarketV1beta3MsgCreateLease = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta3BidID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCloseLease}
 */
export const condenseAkashMarketV1beta3MsgCloseLease = (g_msg) => encodeAkashMarketV1beta3MsgCloseLease(apply_opt(g_msg.lease_id, condenseAkashMarketV1beta3LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCloseLease` - defines an SDK message for closing order
 */
export const expandAkashMarketV1beta3MsgCloseLease = ([a_lease_id]) => ({
    lease_id: a_lease_id && expandAkashMarketV1beta3LeaseID(a_lease_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCreateLeaseResponse}
 */
export const condenseAkashMarketV1beta3MsgCreateLeaseResponse = (g_msg) => encodeAkashMarketV1beta3MsgCreateLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCreateLeaseResponse` - the response from creating a lease
 */
export const expandAkashMarketV1beta3MsgCreateLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgWithdrawLeaseResponse}
 */
export const condenseAkashMarketV1beta3MsgWithdrawLeaseResponse = (g_msg) => encodeAkashMarketV1beta3MsgWithdrawLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgWithdrawLeaseResponse` - defines the Msg/WithdrawLease response type.
 */
export const expandAkashMarketV1beta3MsgWithdrawLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3MsgCloseLeaseResponse}
 */
export const condenseAkashMarketV1beta3MsgCloseLeaseResponse = (g_msg) => encodeAkashMarketV1beta3MsgCloseLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.MsgCloseLeaseResponse` - defines the Msg/CloseLease response type.
 */
export const expandAkashMarketV1beta3MsgCloseLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3GenesisState}
 */
export const condenseAkashMarketV1beta3GenesisState = (g_msg) => encodeAkashMarketV1beta3GenesisState(apply_opt(g_msg.params, condenseAkashMarketV1beta3Params), map(g_msg.orders, condenseAkashMarketV1beta3Order), map(g_msg.leases, condenseAkashMarketV1beta3Lease), map(g_msg.bids, condenseAkashMarketV1beta3Bid));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.GenesisState` - defines the basic genesis state used by market module
 */
export const expandAkashMarketV1beta3GenesisState = ([a_params, a_orders, a_leases, a_bids]) => ({
    params: a_params && expandAkashMarketV1beta3Params(a_params),
    orders: a_orders && map(a_orders, expandAkashMarketV1beta3Order),
    leases: a_leases && map(a_leases, expandAkashMarketV1beta3Lease),
    bids: a_bids && map(a_bids, expandAkashMarketV1beta3Bid),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta3Params}
 */
export const condenseAkashMarketV1beta3Params = (g_msg) => encodeAkashMarketV1beta3Params(slimify_coin(g_msg.bid_min_deposit), g_msg.order_max_bids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta3.Params` - the params for the x/market module
 */
export const expandAkashMarketV1beta3Params = ([a_bid_min_deposit, n_order_max_bids]) => ({
    bid_min_deposit: a_bid_min_deposit && expand_coin(a_bid_min_deposit),
    order_max_bids: n_order_max_bids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCreateBid}
 */
export const condenseAkashMarketV1beta2MsgCreateBid = (g_msg) => encodeAkashMarketV1beta2MsgCreateBid(apply_opt(g_msg.order, condenseAkashMarketV1beta2OrderID), g_msg.provider, apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), slimify_coin(g_msg.deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCreateBid` - defines an SDK message for creating Bid
 */
export const expandAkashMarketV1beta2MsgCreateBid = ([a_order, s_provider, a_price, a_deposit]) => ({
    order: a_order && expandAkashMarketV1beta2OrderID(a_order),
    provider: s_provider,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    deposit: a_deposit && expand_coin(a_deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2OrderID}
 */
export const condenseAkashMarketV1beta2OrderID = (g_msg) => encodeAkashMarketV1beta2OrderID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.OrderID` - stores owner and all other seq numbers
 */
export const expandAkashMarketV1beta2OrderID = ([sa_owner, sg_dseq, n_gseq, n_oseq]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCreateBidResponse}
 */
export const condenseAkashMarketV1beta2MsgCreateBidResponse = (g_msg) => encodeAkashMarketV1beta2MsgCreateBidResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCreateBidResponse` - defines the Msg/CreateBid response type.
 */
export const expandAkashMarketV1beta2MsgCreateBidResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCloseBid}
 */
export const condenseAkashMarketV1beta2MsgCloseBid = (g_msg) => encodeAkashMarketV1beta2MsgCloseBid(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta2BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCloseBid` - defines an SDK message for closing bid
 */
export const expandAkashMarketV1beta2MsgCloseBid = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta2BidID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2BidID}
 */
export const condenseAkashMarketV1beta2BidID = (g_msg) => encodeAkashMarketV1beta2BidID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.BidID` - stores owner and all other seq numbers A successful bid becomes a Lease(ID).
 */
export const expandAkashMarketV1beta2BidID = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCloseBidResponse}
 */
export const condenseAkashMarketV1beta2MsgCloseBidResponse = (g_msg) => encodeAkashMarketV1beta2MsgCloseBidResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCloseBidResponse` - defines the Msg/CloseBid response type.
 */
export const expandAkashMarketV1beta2MsgCloseBidResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2Bid}
 */
export const condenseAkashMarketV1beta2Bid = (g_msg) => encodeAkashMarketV1beta2Bid(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta2BidID), JsonToProtoEnumAkashMarketV1beta2BidState[g_msg.state], apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.Bid` - stores BidID, state of bid and price
 */
export const expandAkashMarketV1beta2Bid = ([a_bid_id, xc_state, a_price, sg_created_at]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta2BidID(a_bid_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta2BidState[xc_state] : __UNDEFINED,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2BidFilters}
 */
export const condenseAkashMarketV1beta2BidFilters = (g_msg) => encodeAkashMarketV1beta2BidFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.BidFilters` - defines flags for bid list filter
 */
export const expandAkashMarketV1beta2BidFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryOrdersRequest}
 */
export const condenseAkashMarketV1beta2QueryOrdersRequest = (g_msg) => encodeAkashMarketV1beta2QueryOrdersRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta2OrderFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryOrdersRequest` - request type for the Query/Orders RPC method
 */
export const expandAkashMarketV1beta2QueryOrdersRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta2OrderFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2OrderFilters}
 */
export const condenseAkashMarketV1beta2OrderFilters = (g_msg) => encodeAkashMarketV1beta2OrderFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.OrderFilters` - defines flags for order list filter
 */
export const expandAkashMarketV1beta2OrderFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryOrdersResponse}
 */
export const condenseAkashMarketV1beta2QueryOrdersResponse = (g_msg) => encodeAkashMarketV1beta2QueryOrdersResponse(map(g_msg.orders, condenseAkashMarketV1beta2Order), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryOrdersResponse` - response type for the Query/Orders RPC method
 */
export const expandAkashMarketV1beta2QueryOrdersResponse = ([a_orders, a_pagination]) => ({
    orders: a_orders && map(a_orders, expandAkashMarketV1beta2Order),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2Order}
 */
export const condenseAkashMarketV1beta2Order = (g_msg) => encodeAkashMarketV1beta2Order(apply_opt(g_msg.order_id, condenseAkashMarketV1beta2OrderID), JsonToProtoEnumAkashMarketV1beta2OrderState[g_msg.state], apply_opt(g_msg.spec, condenseAkashDeploymentV1beta2GroupSpec), g_msg.created_at);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.Order` - stores orderID, state of order and other details
 */
export const expandAkashMarketV1beta2Order = ([a_order_id, xc_state, a_spec, sg_created_at]) => ({
    order_id: a_order_id && expandAkashMarketV1beta2OrderID(a_order_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta2OrderState[xc_state] : __UNDEFINED,
    spec: a_spec && expandAkashDeploymentV1beta2GroupSpec(a_spec),
    created_at: sg_created_at,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryOrderRequest}
 */
export const condenseAkashMarketV1beta2QueryOrderRequest = (g_msg) => encodeAkashMarketV1beta2QueryOrderRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta2OrderID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryOrderRequest` - request type for the Query/Order RPC method
 */
export const expandAkashMarketV1beta2QueryOrderRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta2OrderID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryOrderResponse}
 */
export const condenseAkashMarketV1beta2QueryOrderResponse = (g_msg) => encodeAkashMarketV1beta2QueryOrderResponse(apply_opt(g_msg.order, condenseAkashMarketV1beta2Order));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryOrderResponse` - response type for the Query/Order RPC method
 */
export const expandAkashMarketV1beta2QueryOrderResponse = ([a_order]) => ({
    order: a_order && expandAkashMarketV1beta2Order(a_order),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryBidsRequest}
 */
export const condenseAkashMarketV1beta2QueryBidsRequest = (g_msg) => encodeAkashMarketV1beta2QueryBidsRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta2BidFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryBidsRequest` - request type for the Query/Bids RPC method
 */
export const expandAkashMarketV1beta2QueryBidsRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta2BidFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryBidsResponse}
 */
export const condenseAkashMarketV1beta2QueryBidsResponse = (g_msg) => encodeAkashMarketV1beta2QueryBidsResponse(map(g_msg.bids, condenseAkashMarketV1beta2QueryBidResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryBidsResponse` - response type for the Query/Bids RPC method
 */
export const expandAkashMarketV1beta2QueryBidsResponse = ([a_bids, a_pagination]) => ({
    bids: a_bids && map(a_bids, expandAkashMarketV1beta2QueryBidResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryBidResponse}
 */
export const condenseAkashMarketV1beta2QueryBidResponse = (g_msg) => encodeAkashMarketV1beta2QueryBidResponse(apply_opt(g_msg.bid, condenseAkashMarketV1beta2Bid), apply_opt(g_msg.escrow_account, condenseAkashEscrowV1beta2Account));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryBidResponse` - response type for the Query/Bid RPC method
 */
export const expandAkashMarketV1beta2QueryBidResponse = ([a_bid, a_escrow_account]) => ({
    bid: a_bid && expandAkashMarketV1beta2Bid(a_bid),
    escrow_account: a_escrow_account && expandAkashEscrowV1beta2Account(a_escrow_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryBidRequest}
 */
export const condenseAkashMarketV1beta2QueryBidRequest = (g_msg) => encodeAkashMarketV1beta2QueryBidRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta2BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryBidRequest` - request type for the Query/Bid RPC method
 */
export const expandAkashMarketV1beta2QueryBidRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta2BidID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryLeasesRequest}
 */
export const condenseAkashMarketV1beta2QueryLeasesRequest = (g_msg) => encodeAkashMarketV1beta2QueryLeasesRequest(apply_opt(g_msg.filters, condenseAkashMarketV1beta2LeaseFilters), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryLeasesRequest` - request type for the Query/Leases RPC method
 */
export const expandAkashMarketV1beta2QueryLeasesRequest = ([a_filters, a_pagination]) => ({
    filters: a_filters && expandAkashMarketV1beta2LeaseFilters(a_filters),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2LeaseFilters}
 */
export const condenseAkashMarketV1beta2LeaseFilters = (g_msg) => encodeAkashMarketV1beta2LeaseFilters(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.LeaseFilters` - defines flags for lease list filter
 */
export const expandAkashMarketV1beta2LeaseFilters = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider, s_state]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryLeasesResponse}
 */
export const condenseAkashMarketV1beta2QueryLeasesResponse = (g_msg) => encodeAkashMarketV1beta2QueryLeasesResponse(map(g_msg.leases, condenseAkashMarketV1beta2QueryLeaseResponse), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryLeasesResponse` - response type for the Query/Leases RPC method
 */
export const expandAkashMarketV1beta2QueryLeasesResponse = ([a_leases, a_pagination]) => ({
    leases: a_leases && map(a_leases, expandAkashMarketV1beta2QueryLeaseResponse),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryLeaseResponse}
 */
export const condenseAkashMarketV1beta2QueryLeaseResponse = (g_msg) => encodeAkashMarketV1beta2QueryLeaseResponse(apply_opt(g_msg.lease, condenseAkashMarketV1beta2Lease), apply_opt(g_msg.escrow_payment, condenseAkashEscrowV1beta2FractionalPayment));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryLeaseResponse` - response type for the Query/Lease RPC method
 */
export const expandAkashMarketV1beta2QueryLeaseResponse = ([a_lease, a_escrow_payment]) => ({
    lease: a_lease && expandAkashMarketV1beta2Lease(a_lease),
    escrow_payment: a_escrow_payment && expandAkashEscrowV1beta2FractionalPayment(a_escrow_payment),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2Lease}
 */
export const condenseAkashMarketV1beta2Lease = (g_msg) => encodeAkashMarketV1beta2Lease(apply_opt(g_msg.lease_id, condenseAkashMarketV1beta2LeaseID), JsonToProtoEnumAkashMarketV1beta2LeaseState[g_msg.state], apply_opt(g_msg.price, condenseCosmosBaseV1beta1DecCoin), g_msg.created_at, g_msg.closed_on);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.Lease` - stores LeaseID, state of lease and price
 */
export const expandAkashMarketV1beta2Lease = ([a_lease_id, xc_state, a_price, sg_created_at, sg_closed_on]) => ({
    lease_id: a_lease_id && expandAkashMarketV1beta2LeaseID(a_lease_id),
    state: xc_state >= 0 ? ProtoToJsonEnumAkashMarketV1beta2LeaseState[xc_state] : __UNDEFINED,
    price: a_price && expandCosmosBaseV1beta1DecCoin(a_price),
    created_at: sg_created_at,
    closed_on: sg_closed_on,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2LeaseID}
 */
export const condenseAkashMarketV1beta2LeaseID = (g_msg) => encodeAkashMarketV1beta2LeaseID(g_msg.owner, g_msg.dseq, g_msg.gseq, g_msg.oseq, g_msg.provider);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.LeaseID` - stores bid details of lease
 */
export const expandAkashMarketV1beta2LeaseID = ([sa_owner, sg_dseq, n_gseq, n_oseq, s_provider]) => ({
    owner: sa_owner,
    dseq: sg_dseq,
    gseq: n_gseq,
    oseq: n_oseq,
    provider: s_provider,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2QueryLeaseRequest}
 */
export const condenseAkashMarketV1beta2QueryLeaseRequest = (g_msg) => encodeAkashMarketV1beta2QueryLeaseRequest(apply_opt(g_msg.id, condenseAkashMarketV1beta2LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.QueryLeaseRequest` - request type for the Query/Lease RPC method
 */
export const expandAkashMarketV1beta2QueryLeaseRequest = ([a_id]) => ({
    id: a_id && expandAkashMarketV1beta2LeaseID(a_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgWithdrawLease}
 */
export const condenseAkashMarketV1beta2MsgWithdrawLease = (g_msg) => encodeAkashMarketV1beta2MsgWithdrawLease(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta2LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgWithdrawLease` - defines an SDK message for closing bid
 */
export const expandAkashMarketV1beta2MsgWithdrawLease = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta2LeaseID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCreateLease}
 */
export const condenseAkashMarketV1beta2MsgCreateLease = (g_msg) => encodeAkashMarketV1beta2MsgCreateLease(apply_opt(g_msg.bid_id, condenseAkashMarketV1beta2BidID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCreateLease` - sent to create a lease
 */
export const expandAkashMarketV1beta2MsgCreateLease = ([a_bid_id]) => ({
    bid_id: a_bid_id && expandAkashMarketV1beta2BidID(a_bid_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCloseLease}
 */
export const condenseAkashMarketV1beta2MsgCloseLease = (g_msg) => encodeAkashMarketV1beta2MsgCloseLease(apply_opt(g_msg.lease_id, condenseAkashMarketV1beta2LeaseID));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCloseLease` - defines an SDK message for closing order
 */
export const expandAkashMarketV1beta2MsgCloseLease = ([a_lease_id]) => ({
    lease_id: a_lease_id && expandAkashMarketV1beta2LeaseID(a_lease_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCreateLeaseResponse}
 */
export const condenseAkashMarketV1beta2MsgCreateLeaseResponse = (g_msg) => encodeAkashMarketV1beta2MsgCreateLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCreateLeaseResponse` - the response from creating a lease
 */
export const expandAkashMarketV1beta2MsgCreateLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgWithdrawLeaseResponse}
 */
export const condenseAkashMarketV1beta2MsgWithdrawLeaseResponse = (g_msg) => encodeAkashMarketV1beta2MsgWithdrawLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgWithdrawLeaseResponse` - defines the Msg/WithdrawLease response type.
 */
export const expandAkashMarketV1beta2MsgWithdrawLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2MsgCloseLeaseResponse}
 */
export const condenseAkashMarketV1beta2MsgCloseLeaseResponse = (g_msg) => encodeAkashMarketV1beta2MsgCloseLeaseResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.MsgCloseLeaseResponse` - defines the Msg/CloseLease response type.
 */
export const expandAkashMarketV1beta2MsgCloseLeaseResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2GenesisState}
 */
export const condenseAkashMarketV1beta2GenesisState = (g_msg) => encodeAkashMarketV1beta2GenesisState(map(g_msg.orders, condenseAkashMarketV1beta2Order), map(g_msg.leases, condenseAkashMarketV1beta2Lease), apply_opt(g_msg.params, condenseAkashMarketV1beta2Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.GenesisState` - defines the basic genesis state used by market module
 */
export const expandAkashMarketV1beta2GenesisState = ([a_orders, a_leases, a_params]) => ({
    orders: a_orders && map(a_orders, expandAkashMarketV1beta2Order),
    leases: a_leases && map(a_leases, expandAkashMarketV1beta2Lease),
    params: a_params && expandAkashMarketV1beta2Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashMarketV1beta2Params}
 */
export const condenseAkashMarketV1beta2Params = (g_msg) => encodeAkashMarketV1beta2Params(slimify_coin(g_msg.bid_min_deposit), g_msg.order_max_bids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.market.v1beta2.Params` - the params for the x/market module
 */
export const expandAkashMarketV1beta2Params = ([a_bid_min_deposit, n_order_max_bids]) => ({
    bid_min_deposit: a_bid_min_deposit && expand_coin(a_bid_min_deposit),
    order_max_bids: n_order_max_bids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashInflationV1beta3GenesisState}
 */
export const condenseAkashInflationV1beta3GenesisState = (g_msg) => encodeAkashInflationV1beta3GenesisState(apply_opt(g_msg.params, condenseAkashInflationV1beta3Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.inflation.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashInflationV1beta3GenesisState = ([a_params]) => ({
    params: a_params && expandAkashInflationV1beta3Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashInflationV1beta3Params}
 */
export const condenseAkashInflationV1beta3Params = (g_msg) => encodeAkashInflationV1beta3Params(g_msg.inflation_decay_factor, g_msg.initial_inflation, g_msg.variance);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.inflation.v1beta3.Params` - defines the parameters for the x/deployment package
 */
export const expandAkashInflationV1beta3Params = ([s_inflation_decay_factor, s_initial_inflation, s_variance]) => ({
    inflation_decay_factor: s_inflation_decay_factor,
    initial_inflation: s_initial_inflation,
    variance: s_variance,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashInflationV1beta2GenesisState}
 */
export const condenseAkashInflationV1beta2GenesisState = (g_msg) => encodeAkashInflationV1beta2GenesisState(apply_opt(g_msg.params, condenseAkashInflationV1beta2Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.inflation.v1beta2.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashInflationV1beta2GenesisState = ([a_params]) => ({
    params: a_params && expandAkashInflationV1beta2Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashInflationV1beta2Params}
 */
export const condenseAkashInflationV1beta2Params = (g_msg) => encodeAkashInflationV1beta2Params(g_msg.inflation_decay_factor, g_msg.initial_inflation, g_msg.variance);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.inflation.v1beta2.Params` - defines the parameters for the x/deployment package
 */
export const expandAkashInflationV1beta2Params = ([s_inflation_decay_factor, s_initial_inflation, s_variance]) => ({
    inflation_decay_factor: s_inflation_decay_factor,
    initial_inflation: s_initial_inflation,
    variance: s_variance,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashGovV1beta3GenesisState}
 */
export const condenseAkashGovV1beta3GenesisState = (g_msg) => encodeAkashGovV1beta3GenesisState(apply_opt(g_msg.deposit_params, condenseAkashGovV1beta3DepositParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.gov.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export const expandAkashGovV1beta3GenesisState = ([a_deposit_params]) => ({
    deposit_params: a_deposit_params && expandAkashGovV1beta3DepositParams(a_deposit_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAkashGovV1beta3DepositParams}
 */
export const condenseAkashGovV1beta3DepositParams = (g_msg) => encodeAkashGovV1beta3DepositParams(safe_base64_to_bytes(g_msg.min_initial_deposit_rate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `akash.gov.v1beta3.DepositParams` - defines the parameters for the x/gov module
 */
export const expandAkashGovV1beta3DepositParams = ([atu8_min_initial_deposit_rate]) => ({
    min_initial_deposit_rate: safe_bytes_to_base64(atu8_min_initial_deposit_rate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteExportedV1beta1PollMetadata}
 */
export const condenseAxelarVoteExportedV1beta1PollMetadata = (g_msg) => encodeAxelarVoteExportedV1beta1PollMetadata(g_msg.expires_at, condenseJsonAny(g_msg.result), apply_opt(g_msg.voting_threshold, condenseAxelarUtilsV1beta1Threshold), JsonToProtoEnumAxelarVoteExportedV1beta1PollState[g_msg.state], g_msg.min_voter_count, g_msg.reward_pool_name, g_msg.grace_period, g_msg.completed_at, g_msg.id, apply_opt(g_msg.snapshot, condenseAxelarSnapshotExportedV1beta1Snapshot), g_msg.module, condenseJsonAny(g_msg.module_metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.exported.v1beta1.PollMetadata` - represents a poll with write-in voting, i.e. the result of the vote can have any data type
 */
export const expandAxelarVoteExportedV1beta1PollMetadata = ([, , sg_expires_at, a_result, a_voting_threshold, xc_state, sg_min_voter_count, , , s_reward_pool_name, sg_grace_period, sg_completed_at, sg_id, , a_snapshot, s_module, a_module_metadata]) => ({
    expires_at: sg_expires_at,
    result: a_result && expandJsonAny(a_result),
    voting_threshold: a_voting_threshold && expandAxelarUtilsV1beta1Threshold(a_voting_threshold),
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarVoteExportedV1beta1PollState[xc_state] : __UNDEFINED,
    min_voter_count: sg_min_voter_count,
    reward_pool_name: s_reward_pool_name,
    grace_period: sg_grace_period,
    completed_at: sg_completed_at,
    id: sg_id,
    snapshot: a_snapshot && expandAxelarSnapshotExportedV1beta1Snapshot(a_snapshot),
    module: s_module,
    module_metadata: a_module_metadata && expandJsonAny(a_module_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1Threshold}
 */
export const condenseAxelarUtilsV1beta1Threshold = (g_msg) => encodeAxelarUtilsV1beta1Threshold(g_msg.numerator, g_msg.denominator);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.Threshold` -
 */
export const expandAxelarUtilsV1beta1Threshold = ([sg_numerator, sg_denominator]) => ({
    numerator: sg_numerator,
    denominator: sg_denominator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotExportedV1beta1Snapshot}
 */
export const condenseAxelarSnapshotExportedV1beta1Snapshot = (g_msg) => encodeAxelarSnapshotExportedV1beta1Snapshot(parse_timestamp(g_msg.timestamp), g_msg.height, map(g_msg.participants, condenseAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry), safe_base64_to_bytes(g_msg.bonded_weight));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.exported.v1beta1.Snapshot` -
 */
export const expandAxelarSnapshotExportedV1beta1Snapshot = ([, a_timestamp, sg_height, , , , , a_participants, atu8_bonded_weight]) => ({
    timestamp: expand_timestamp(a_timestamp),
    height: sg_height,
    participants: a_participants && map(a_participants, expandAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry),
    bonded_weight: safe_bytes_to_base64(atu8_bonded_weight),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry}
 */
export const condenseAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry = (g_msg) => encodeAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry(g_msg.key, apply_opt(g_msg.value, condenseAxelarSnapshotExportedV1beta1Participant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.exported.v1beta1.Snapshot.ParticipantsEntry` -
 */
export const expandAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry = ([s_key, a_value]) => ({
    key: s_key,
    value: a_value && expandAxelarSnapshotExportedV1beta1Participant(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotExportedV1beta1Participant}
 */
export const condenseAxelarSnapshotExportedV1beta1Participant = (g_msg) => encodeAxelarSnapshotExportedV1beta1Participant(safe_base64_to_bytes(g_msg.address), safe_base64_to_bytes(g_msg.weight));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.exported.v1beta1.Participant` -
 */
export const expandAxelarSnapshotExportedV1beta1Participant = ([atu8_address, atu8_weight]) => ({
    address: safe_bytes_to_base64(atu8_address),
    weight: safe_bytes_to_base64(atu8_weight),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteExportedV1beta1PollKey}
 */
export const condenseAxelarVoteExportedV1beta1PollKey = (g_msg) => encodeAxelarVoteExportedV1beta1PollKey(g_msg.module, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.exported.v1beta1.PollKey` - represents the key data for a poll
 */
export const expandAxelarVoteExportedV1beta1PollKey = ([s_module, s_id]) => ({
    module: s_module,
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteExportedV1beta1PollParticipants}
 */
export const condenseAxelarVoteExportedV1beta1PollParticipants = (g_msg) => encodeAxelarVoteExportedV1beta1PollParticipants(g_msg.poll_id, map(g_msg.participants, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.exported.v1beta1.PollParticipants` - should be embedded in poll events in other modules
 */
export const expandAxelarVoteExportedV1beta1PollParticipants = ([sg_poll_id, a_participants]) => ({
    poll_id: sg_poll_id,
    participants: map(a_participants, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1VoteRequest}
 */
export const condenseAxelarVoteV1beta1VoteRequest = (g_msg) => encodeAxelarVoteV1beta1VoteRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.poll_id, condenseJsonAny(g_msg.vote));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.VoteRequest` -
 */
export const expandAxelarVoteV1beta1VoteRequest = ([sa_sender, , , sg_poll_id, a_vote]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    poll_id: sg_poll_id,
    vote: a_vote && expandJsonAny(a_vote),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1VoteResponse}
 */
export const condenseAxelarVoteV1beta1VoteResponse = (g_msg) => encodeAxelarVoteV1beta1VoteResponse(g_msg.log);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.VoteResponse` -
 */
export const expandAxelarVoteV1beta1VoteResponse = ([s_log]) => ({
    log: s_log,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1Voted}
 */
export const condenseAxelarVoteV1beta1Voted = (g_msg) => encodeAxelarVoteV1beta1Voted(g_msg.module, g_msg.action, g_msg.poll, g_msg.voter, g_msg.state);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.Voted` -
 */
export const expandAxelarVoteV1beta1Voted = ([s_module, s_action, s_poll, sa_voter, s_state]) => ({
    module: s_module,
    action: s_action,
    poll: s_poll,
    voter: sa_voter,
    state: s_state,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1TalliedVote}
 */
export const condenseAxelarVoteV1beta1TalliedVote = (g_msg) => encodeAxelarVoteV1beta1TalliedVote(safe_base64_to_bytes(g_msg.tally), condenseJsonAny(g_msg.data), g_msg.poll_id, map(g_msg.is_voter_late, condenseAxelarVoteV1beta1TalliedVoteIsVoterLateEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.TalliedVote` - represents a vote for a poll with the accumulated stake of all validators voting for the same data
 */
export const expandAxelarVoteV1beta1TalliedVote = ([atu8_tally, , a_data, sg_poll_id, a_is_voter_late]) => ({
    tally: safe_bytes_to_base64(atu8_tally),
    data: a_data && expandJsonAny(a_data),
    poll_id: sg_poll_id,
    is_voter_late: a_is_voter_late && map(a_is_voter_late, expandAxelarVoteV1beta1TalliedVoteIsVoterLateEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1TalliedVoteIsVoterLateEntry}
 */
export const condenseAxelarVoteV1beta1TalliedVoteIsVoterLateEntry = (g_msg) => encodeAxelarVoteV1beta1TalliedVoteIsVoterLateEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry` -
 */
export const expandAxelarVoteV1beta1TalliedVoteIsVoterLateEntry = ([s_key, b_value]) => ({
    key: s_key,
    value: !!b_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1ParamsRequest}
 */
export const condenseAxelarVoteV1beta1ParamsRequest = (g_msg) => encodeAxelarVoteV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarVoteV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1ParamsResponse}
 */
export const condenseAxelarVoteV1beta1ParamsResponse = (g_msg) => encodeAxelarVoteV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarVoteV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.ParamsResponse` -
 */
export const expandAxelarVoteV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarVoteV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1Params}
 */
export const condenseAxelarVoteV1beta1Params = (g_msg) => encodeAxelarVoteV1beta1Params(apply_opt(g_msg.default_voting_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.end_blocker_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarVoteV1beta1Params = ([a_default_voting_threshold, sg_end_blocker_limit]) => ({
    default_voting_threshold: a_default_voting_threshold && expandAxelarUtilsV1beta1Threshold(a_default_voting_threshold),
    end_blocker_limit: sg_end_blocker_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarVoteV1beta1GenesisState}
 */
export const condenseAxelarVoteV1beta1GenesisState = (g_msg) => encodeAxelarVoteV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarVoteV1beta1Params), map(g_msg.poll_metadatas, condenseAxelarVoteExportedV1beta1PollMetadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.vote.v1beta1.GenesisState` -
 */
export const expandAxelarVoteV1beta1GenesisState = ([a_params, a_poll_metadatas]) => ({
    params: a_params && expandAxelarVoteV1beta1Params(a_params),
    poll_metadatas: a_poll_metadatas && map(a_poll_metadatas, expandAxelarVoteExportedV1beta1PollMetadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1RegisterProxyRequest}
 */
export const condenseAxelarSnapshotV1beta1RegisterProxyRequest = (g_msg) => encodeAxelarSnapshotV1beta1RegisterProxyRequest(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.proxy_addr));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.RegisterProxyRequest` -
 */
export const expandAxelarSnapshotV1beta1RegisterProxyRequest = ([sa_sender, atu8_proxy_addr]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    proxy_addr: safe_bytes_to_base64(atu8_proxy_addr),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1RegisterProxyResponse}
 */
export const condenseAxelarSnapshotV1beta1RegisterProxyResponse = (g_msg) => encodeAxelarSnapshotV1beta1RegisterProxyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.RegisterProxyResponse` -
 */
export const expandAxelarSnapshotV1beta1RegisterProxyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1DeactivateProxyRequest}
 */
export const condenseAxelarSnapshotV1beta1DeactivateProxyRequest = (g_msg) => encodeAxelarSnapshotV1beta1DeactivateProxyRequest(addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.DeactivateProxyRequest` -
 */
export const expandAxelarSnapshotV1beta1DeactivateProxyRequest = ([sa_sender]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1DeactivateProxyResponse}
 */
export const condenseAxelarSnapshotV1beta1DeactivateProxyResponse = (g_msg) => encodeAxelarSnapshotV1beta1DeactivateProxyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.DeactivateProxyResponse` -
 */
export const expandAxelarSnapshotV1beta1DeactivateProxyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1ProxiedValidator}
 */
export const condenseAxelarSnapshotV1beta1ProxiedValidator = (g_msg) => encodeAxelarSnapshotV1beta1ProxiedValidator(safe_base64_to_bytes(g_msg.validator), safe_base64_to_bytes(g_msg.proxy), g_msg.active);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.ProxiedValidator` -
 */
export const expandAxelarSnapshotV1beta1ProxiedValidator = ([atu8_validator, atu8_proxy, b_active]) => ({
    validator: safe_bytes_to_base64(atu8_validator),
    proxy: safe_bytes_to_base64(atu8_proxy),
    active: !!b_active,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1QueryValidatorsResponse}
 */
export const condenseAxelarSnapshotV1beta1QueryValidatorsResponse = (g_msg) => encodeAxelarSnapshotV1beta1QueryValidatorsResponse(map(g_msg.validators, condenseAxelarSnapshotV1beta1QueryValidatorsResponseValidator));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.QueryValidatorsResponse` -
 */
export const expandAxelarSnapshotV1beta1QueryValidatorsResponse = ([a_validators]) => ({
    validators: a_validators && map(a_validators, expandAxelarSnapshotV1beta1QueryValidatorsResponseValidator),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1QueryValidatorsResponseValidator}
 */
export const condenseAxelarSnapshotV1beta1QueryValidatorsResponseValidator = (g_msg) => encodeAxelarSnapshotV1beta1QueryValidatorsResponseValidator(g_msg.operator_address, g_msg.moniker, apply_opt(g_msg.tss_illegibility_info, condenseAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator` -
 */
export const expandAxelarSnapshotV1beta1QueryValidatorsResponseValidator = ([sa_operator, s_moniker, a_tss_illegibility_info]) => ({
    operator_address: sa_operator,
    moniker: s_moniker,
    tss_illegibility_info: a_tss_illegibility_info && expandAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo(a_tss_illegibility_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo}
 */
export const condenseAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo = (g_msg) => encodeAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo(g_msg.tombstoned, g_msg.jailed, g_msg.missed_too_many_blocks, g_msg.no_proxy_registered, g_msg.tss_suspended, g_msg.proxy_insuficient_funds, g_msg.stale_tss_heartbeat);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo` -
 */
export const expandAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo = ([b_tombstoned, b_jailed, b_missed_too_many_blocks, b_no_proxy_registered, b_tss_suspended, b_proxy_insuficient_funds, b_stale_tss_heartbeat]) => ({
    tombstoned: !!b_tombstoned,
    jailed: !!b_jailed,
    missed_too_many_blocks: !!b_missed_too_many_blocks,
    no_proxy_registered: !!b_no_proxy_registered,
    tss_suspended: !!b_tss_suspended,
    proxy_insuficient_funds: !!b_proxy_insuficient_funds,
    stale_tss_heartbeat: !!b_stale_tss_heartbeat,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1ParamsRequest}
 */
export const condenseAxelarSnapshotV1beta1ParamsRequest = (g_msg) => encodeAxelarSnapshotV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarSnapshotV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1ParamsResponse}
 */
export const condenseAxelarSnapshotV1beta1ParamsResponse = (g_msg) => encodeAxelarSnapshotV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarSnapshotV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.ParamsResponse` -
 */
export const expandAxelarSnapshotV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarSnapshotV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1Params}
 */
export const condenseAxelarSnapshotV1beta1Params = (g_msg) => encodeAxelarSnapshotV1beta1Params(g_msg.min_proxy_balance);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarSnapshotV1beta1Params = ([sg_min_proxy_balance]) => ({
    min_proxy_balance: sg_min_proxy_balance,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarSnapshotV1beta1GenesisState}
 */
export const condenseAxelarSnapshotV1beta1GenesisState = (g_msg) => encodeAxelarSnapshotV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarSnapshotV1beta1Params), map(g_msg.proxied_validators, condenseAxelarSnapshotV1beta1ProxiedValidator));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.snapshot.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarSnapshotV1beta1GenesisState = ([a_params, a_proxied_validators]) => ({
    params: a_params && expandAxelarSnapshotV1beta1Params(a_params),
    proxied_validators: a_proxied_validators && map(a_proxied_validators, expandAxelarSnapshotV1beta1ProxiedValidator),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1LinkRequest}
 */
export const condenseAxelarAxelarnetV1beta1LinkRequest = (g_msg) => encodeAxelarAxelarnetV1beta1LinkRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.recipient_addr, g_msg.recipient_chain, g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.LinkRequest` - MsgLink represents a message to link a cross-chain address to an Axelar address
 */
export const expandAxelarAxelarnetV1beta1LinkRequest = ([sa_sender, sa_recipient_addr, s_recipient_chain, s_asset]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    recipient_addr: sa_recipient_addr,
    recipient_chain: s_recipient_chain,
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1LinkResponse}
 */
export const condenseAxelarAxelarnetV1beta1LinkResponse = (g_msg) => encodeAxelarAxelarnetV1beta1LinkResponse(g_msg.deposit_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.LinkResponse` -
 */
export const expandAxelarAxelarnetV1beta1LinkResponse = ([sa_deposit_addr]) => ({
    deposit_addr: sa_deposit_addr,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ConfirmDepositRequest}
 */
export const condenseAxelarAxelarnetV1beta1ConfirmDepositRequest = (g_msg) => encodeAxelarAxelarnetV1beta1ConfirmDepositRequest(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.deposit_address), g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ConfirmDepositRequest` - MsgConfirmDeposit represents a deposit confirmation message
 */
export const expandAxelarAxelarnetV1beta1ConfirmDepositRequest = ([sa_sender, , , atu8_deposit_address, s_denom]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    deposit_address: safe_bytes_to_base64(atu8_deposit_address),
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ConfirmDepositResponse}
 */
export const condenseAxelarAxelarnetV1beta1ConfirmDepositResponse = (g_msg) => encodeAxelarAxelarnetV1beta1ConfirmDepositResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ConfirmDepositResponse` -
 */
export const expandAxelarAxelarnetV1beta1ConfirmDepositResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ExecutePendingTransfersRequest}
 */
export const condenseAxelarAxelarnetV1beta1ExecutePendingTransfersRequest = (g_msg) => encodeAxelarAxelarnetV1beta1ExecutePendingTransfersRequest(addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ExecutePendingTransfersRequest` - MsgExecutePendingTransfers represents a message to trigger transfer all pending transfers
 */
export const expandAxelarAxelarnetV1beta1ExecutePendingTransfersRequest = ([sa_sender]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ExecutePendingTransfersResponse}
 */
export const condenseAxelarAxelarnetV1beta1ExecutePendingTransfersResponse = (g_msg) => encodeAxelarAxelarnetV1beta1ExecutePendingTransfersResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ExecutePendingTransfersResponse` -
 */
export const expandAxelarAxelarnetV1beta1ExecutePendingTransfersResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterIBCPathRequest}
 */
export const condenseAxelarAxelarnetV1beta1RegisterIBCPathRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterIBCPathRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.path);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterIBCPathRequest` - MSgRegisterIBCPath represents a message to register an IBC tracing path for a cosmos chain
 */
export const expandAxelarAxelarnetV1beta1RegisterIBCPathRequest = ([sa_sender, s_chain, s_path]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    path: s_path,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterIBCPathResponse}
 */
export const condenseAxelarAxelarnetV1beta1RegisterIBCPathResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterIBCPathResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterIBCPathResponse` -
 */
export const expandAxelarAxelarnetV1beta1RegisterIBCPathResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1AddCosmosBasedChainRequest}
 */
export const condenseAxelarAxelarnetV1beta1AddCosmosBasedChainRequest = (g_msg) => encodeAxelarAxelarnetV1beta1AddCosmosBasedChainRequest(addr_bytes_to_bech32(g_msg.sender), apply_opt(g_msg.chain, condenseAxelarNexusExportedV1beta1Chain), g_msg.addr_prefix, map(g_msg.native_assets, condenseAxelarNexusExportedV1beta1Asset), g_msg.cosmos_chain, g_msg.ibc_path);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.AddCosmosBasedChainRequest` - MsgAddCosmosBasedChain represents a message to register a cosmos based chain to nexus
 */
export const expandAxelarAxelarnetV1beta1AddCosmosBasedChainRequest = ([sa_sender, a_chain, s_addr_prefix, , a_native_assets, s_cosmos_chain, s_ibc_path]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: a_chain && expandAxelarNexusExportedV1beta1Chain(a_chain),
    addr_prefix: s_addr_prefix,
    native_assets: a_native_assets && map(a_native_assets, expandAxelarNexusExportedV1beta1Asset),
    cosmos_chain: s_cosmos_chain,
    ibc_path: s_ibc_path,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1Chain}
 */
export const condenseAxelarNexusExportedV1beta1Chain = (g_msg) => encodeAxelarNexusExportedV1beta1Chain(g_msg.name, g_msg.supports_foreign_assets, JsonToProtoEnumAxelarTssExportedV1beta1KeyType[g_msg.key_type], g_msg.module);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.Chain` - represents the properties of a registered blockchain
 */
export const expandAxelarNexusExportedV1beta1Chain = ([s_name, , b_supports_foreign_assets, xc_key_type, s_module]) => ({
    name: s_name,
    supports_foreign_assets: !!b_supports_foreign_assets,
    key_type: xc_key_type >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyType[xc_key_type] : __UNDEFINED,
    module: s_module,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1Asset}
 */
export const condenseAxelarNexusExportedV1beta1Asset = (g_msg) => encodeAxelarNexusExportedV1beta1Asset(g_msg.denom, g_msg.is_native_asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.Asset` -
 */
export const expandAxelarNexusExportedV1beta1Asset = ([s_denom, , b_is_native_asset]) => ({
    denom: s_denom,
    is_native_asset: !!b_is_native_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1AddCosmosBasedChainResponse}
 */
export const condenseAxelarAxelarnetV1beta1AddCosmosBasedChainResponse = (g_msg) => encodeAxelarAxelarnetV1beta1AddCosmosBasedChainResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.AddCosmosBasedChainResponse` -
 */
export const expandAxelarAxelarnetV1beta1AddCosmosBasedChainResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterAssetRequest}
 */
export const condenseAxelarAxelarnetV1beta1RegisterAssetRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterAssetRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, apply_opt(g_msg.asset, condenseAxelarNexusExportedV1beta1Asset), safe_base64_to_bytes(g_msg.limit), parse_duration(g_msg.window));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterAssetRequest` - represents a message to register an asset to a cosmos based chain
 */
export const expandAxelarAxelarnetV1beta1RegisterAssetRequest = ([sa_sender, s_chain, a_asset, atu8_limit, a_window]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    asset: a_asset && expandAxelarNexusExportedV1beta1Asset(a_asset),
    limit: safe_bytes_to_base64(atu8_limit),
    window: expand_duration(a_window),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterAssetResponse}
 */
export const condenseAxelarAxelarnetV1beta1RegisterAssetResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterAssetResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterAssetResponse` -
 */
export const expandAxelarAxelarnetV1beta1RegisterAssetResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RouteIBCTransfersRequest}
 */
export const condenseAxelarAxelarnetV1beta1RouteIBCTransfersRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RouteIBCTransfersRequest(addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RouteIBCTransfersRequest` - represents a message to route pending transfers to cosmos based chains
 */
export const expandAxelarAxelarnetV1beta1RouteIBCTransfersRequest = ([sa_sender]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RouteIBCTransfersResponse}
 */
export const condenseAxelarAxelarnetV1beta1RouteIBCTransfersResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RouteIBCTransfersResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RouteIBCTransfersResponse` -
 */
export const expandAxelarAxelarnetV1beta1RouteIBCTransfersResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterFeeCollectorRequest}
 */
export const condenseAxelarAxelarnetV1beta1RegisterFeeCollectorRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterFeeCollectorRequest(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.fee_collector));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterFeeCollectorRequest` - represents a message to register axelarnet fee collector account
 */
export const expandAxelarAxelarnetV1beta1RegisterFeeCollectorRequest = ([sa_sender, atu8_fee_collector]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    fee_collector: safe_bytes_to_base64(atu8_fee_collector),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RegisterFeeCollectorResponse}
 */
export const condenseAxelarAxelarnetV1beta1RegisterFeeCollectorResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RegisterFeeCollectorResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RegisterFeeCollectorResponse` -
 */
export const expandAxelarAxelarnetV1beta1RegisterFeeCollectorResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RetryIBCTransferRequest}
 */
export const condenseAxelarAxelarnetV1beta1RetryIBCTransferRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RetryIBCTransferRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RetryIBCTransferRequest` -
 */
export const expandAxelarAxelarnetV1beta1RetryIBCTransferRequest = ([sa_sender, s_chain, sg_id]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    id: sg_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RetryIBCTransferResponse}
 */
export const condenseAxelarAxelarnetV1beta1RetryIBCTransferResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RetryIBCTransferResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RetryIBCTransferResponse` -
 */
export const expandAxelarAxelarnetV1beta1RetryIBCTransferResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RouteMessageRequest}
 */
export const condenseAxelarAxelarnetV1beta1RouteMessageRequest = (g_msg) => encodeAxelarAxelarnetV1beta1RouteMessageRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.id, safe_base64_to_bytes(g_msg.payload), safe_base64_to_bytes(g_msg.feegranter));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RouteMessageRequest` -
 */
export const expandAxelarAxelarnetV1beta1RouteMessageRequest = ([sa_sender, s_id, atu8_payload, atu8_feegranter]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    id: s_id,
    payload: safe_bytes_to_base64(atu8_payload),
    feegranter: safe_bytes_to_base64(atu8_feegranter),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1RouteMessageResponse}
 */
export const condenseAxelarAxelarnetV1beta1RouteMessageResponse = (g_msg) => encodeAxelarAxelarnetV1beta1RouteMessageResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.RouteMessageResponse` -
 */
export const expandAxelarAxelarnetV1beta1RouteMessageResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1CallContractRequest}
 */
export const condenseAxelarAxelarnetV1beta1CallContractRequest = (g_msg) => encodeAxelarAxelarnetV1beta1CallContractRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload), apply_opt(g_msg.fee, condenseAxelarAxelarnetV1beta1Fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.CallContractRequest` -
 */
export const expandAxelarAxelarnetV1beta1CallContractRequest = ([sa_sender, s_chain, sa_contract, atu8_payload, a_fee]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    contract_address: sa_contract,
    payload: safe_bytes_to_base64(atu8_payload),
    fee: a_fee && expandAxelarAxelarnetV1beta1Fee(a_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1Fee}
 */
export const condenseAxelarAxelarnetV1beta1Fee = (g_msg) => encodeAxelarAxelarnetV1beta1Fee(slimify_coin(g_msg.amount), safe_base64_to_bytes(g_msg.recipient), safe_base64_to_bytes(g_msg.refund_recipient));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.Fee` -
 */
export const expandAxelarAxelarnetV1beta1Fee = ([a_amount, atu8_recipient, atu8_refund_recipient]) => ({
    amount: a_amount && expand_coin(a_amount),
    recipient: safe_bytes_to_base64(atu8_recipient),
    refund_recipient: safe_bytes_to_base64(atu8_refund_recipient),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1CallContractResponse}
 */
export const condenseAxelarAxelarnetV1beta1CallContractResponse = (g_msg) => encodeAxelarAxelarnetV1beta1CallContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.CallContractResponse` -
 */
export const expandAxelarAxelarnetV1beta1CallContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1IBCTransferSent}
 */
export const condenseAxelarAxelarnetV1beta1IBCTransferSent = (g_msg) => encodeAxelarAxelarnetV1beta1IBCTransferSent(g_msg.id, g_msg.receipient, slimify_coin(g_msg.asset), g_msg.sequence, g_msg.port_id, g_msg.channel_id, g_msg.recipient);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.IBCTransferSent` -
 */
export const expandAxelarAxelarnetV1beta1IBCTransferSent = ([sg_id, s_receipient, a_asset, sg_sequence, si_port, si_channel, sa_recipient]) => ({
    id: sg_id,
    receipient: s_receipient,
    asset: a_asset && expand_coin(a_asset),
    sequence: sg_sequence,
    port_id: si_port,
    channel_id: si_channel,
    recipient: sa_recipient,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1IBCTransferCompleted}
 */
export const condenseAxelarAxelarnetV1beta1IBCTransferCompleted = (g_msg) => encodeAxelarAxelarnetV1beta1IBCTransferCompleted(g_msg.id, g_msg.sequence, g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.IBCTransferCompleted` -
 */
export const expandAxelarAxelarnetV1beta1IBCTransferCompleted = ([sg_id, sg_sequence, si_port, si_channel]) => ({
    id: sg_id,
    sequence: sg_sequence,
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1IBCTransferFailed}
 */
export const condenseAxelarAxelarnetV1beta1IBCTransferFailed = (g_msg) => encodeAxelarAxelarnetV1beta1IBCTransferFailed(g_msg.id, g_msg.sequence, g_msg.port_id, g_msg.channel_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.IBCTransferFailed` -
 */
export const expandAxelarAxelarnetV1beta1IBCTransferFailed = ([sg_id, sg_sequence, si_port, si_channel]) => ({
    id: sg_id,
    sequence: sg_sequence,
    port_id: si_port,
    channel_id: si_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1IBCTransferRetried}
 */
export const condenseAxelarAxelarnetV1beta1IBCTransferRetried = (g_msg) => encodeAxelarAxelarnetV1beta1IBCTransferRetried(g_msg.id, g_msg.receipient, slimify_coin(g_msg.asset), g_msg.sequence, g_msg.port_id, g_msg.channel_id, g_msg.recipient);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.IBCTransferRetried` -
 */
export const expandAxelarAxelarnetV1beta1IBCTransferRetried = ([sg_id, s_receipient, a_asset, sg_sequence, si_port, si_channel, sa_recipient]) => ({
    id: sg_id,
    receipient: s_receipient,
    asset: a_asset && expand_coin(a_asset),
    sequence: sg_sequence,
    port_id: si_port,
    channel_id: si_channel,
    recipient: sa_recipient,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1AxelarTransferCompleted}
 */
export const condenseAxelarAxelarnetV1beta1AxelarTransferCompleted = (g_msg) => encodeAxelarAxelarnetV1beta1AxelarTransferCompleted(g_msg.id, g_msg.receipient, slimify_coin(g_msg.asset), g_msg.recipient);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.AxelarTransferCompleted` -
 */
export const expandAxelarAxelarnetV1beta1AxelarTransferCompleted = ([sg_id, s_receipient, a_asset, sa_recipient]) => ({
    id: sg_id,
    receipient: s_receipient,
    asset: a_asset && expand_coin(a_asset),
    recipient: sa_recipient,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1FeeCollected}
 */
export const condenseAxelarAxelarnetV1beta1FeeCollected = (g_msg) => encodeAxelarAxelarnetV1beta1FeeCollected(safe_base64_to_bytes(g_msg.collector), slimify_coin(g_msg.fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.FeeCollected` -
 */
export const expandAxelarAxelarnetV1beta1FeeCollected = ([atu8_collector, a_fee]) => ({
    collector: safe_bytes_to_base64(atu8_collector),
    fee: a_fee && expand_coin(a_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1FeePaid}
 */
export const condenseAxelarAxelarnetV1beta1FeePaid = (g_msg) => encodeAxelarAxelarnetV1beta1FeePaid(g_msg.message_id, safe_base64_to_bytes(g_msg.recipient), slimify_coin(g_msg.fee), g_msg.refund_recipient, g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.FeePaid` -
 */
export const expandAxelarAxelarnetV1beta1FeePaid = ([si_message, atu8_recipient, a_fee, s_refund_recipient, s_asset]) => ({
    message_id: si_message,
    recipient: safe_bytes_to_base64(atu8_recipient),
    fee: a_fee && expand_coin(a_fee),
    refund_recipient: s_refund_recipient,
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ContractCallSubmitted}
 */
export const condenseAxelarAxelarnetV1beta1ContractCallSubmitted = (g_msg) => encodeAxelarAxelarnetV1beta1ContractCallSubmitted(g_msg.message_id, g_msg.sender, g_msg.source_chain, g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload), safe_base64_to_bytes(g_msg.payload_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ContractCallSubmitted` -
 */
export const expandAxelarAxelarnetV1beta1ContractCallSubmitted = ([si_message, sa_sender, s_source_chain, s_destination_chain, sa_contract, atu8_payload, atu8_payload_hash]) => ({
    message_id: si_message,
    sender: sa_sender,
    source_chain: s_source_chain,
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload: safe_bytes_to_base64(atu8_payload),
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted}
 */
export const condenseAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted = (g_msg) => encodeAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted(g_msg.message_id, g_msg.sender, g_msg.source_chain, g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload), safe_base64_to_bytes(g_msg.payload_hash), slimify_coin(g_msg.asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ContractCallWithTokenSubmitted` -
 */
export const expandAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted = ([si_message, sa_sender, s_source_chain, s_destination_chain, sa_contract, atu8_payload, atu8_payload_hash, a_asset]) => ({
    message_id: si_message,
    sender: sa_sender,
    source_chain: s_source_chain,
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload: safe_bytes_to_base64(atu8_payload),
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    asset: a_asset && expand_coin(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1TokenSent}
 */
export const condenseAxelarAxelarnetV1beta1TokenSent = (g_msg) => encodeAxelarAxelarnetV1beta1TokenSent(g_msg.transfer_id, g_msg.sender, g_msg.source_chain, g_msg.destination_chain, g_msg.destination_address, slimify_coin(g_msg.asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.TokenSent` -
 */
export const expandAxelarAxelarnetV1beta1TokenSent = ([sg_transfer_id, sa_sender, s_source_chain, s_destination_chain, sa_destination, a_asset]) => ({
    transfer_id: sg_transfer_id,
    sender: sa_sender,
    source_chain: s_source_chain,
    destination_chain: s_destination_chain,
    destination_address: sa_destination,
    asset: a_asset && expand_coin(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1IBCTransfer}
 */
export const condenseAxelarAxelarnetV1beta1IBCTransfer = (g_msg) => encodeAxelarAxelarnetV1beta1IBCTransfer(addr_bytes_to_bech32(g_msg.sender), g_msg.receiver, slimify_coin(g_msg.token), g_msg.port_id, g_msg.channel_id, g_msg.sequence, g_msg.id, JsonToProtoEnumAxelarAxelarnetV1beta1IBCTransferStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.IBCTransfer` -
 */
export const expandAxelarAxelarnetV1beta1IBCTransfer = ([sa_sender, sa_receiver, a_token, si_port, si_channel, sg_sequence, sg_id, xc_status]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    receiver: sa_receiver,
    token: a_token && expand_coin(a_token),
    port_id: si_port,
    channel_id: si_channel,
    sequence: sg_sequence,
    id: sg_id,
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarAxelarnetV1beta1IBCTransferStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1CosmosChain}
 */
export const condenseAxelarAxelarnetV1beta1CosmosChain = (g_msg) => encodeAxelarAxelarnetV1beta1CosmosChain(g_msg.name, g_msg.ibc_path, map(g_msg.assets, condenseAxelarAxelarnetV1beta1Asset), g_msg.addr_prefix);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.CosmosChain` -
 */
export const expandAxelarAxelarnetV1beta1CosmosChain = ([s_name, s_ibc_path, a_assets, s_addr_prefix]) => ({
    name: s_name,
    ibc_path: s_ibc_path,
    assets: a_assets && map(a_assets, expandAxelarAxelarnetV1beta1Asset),
    addr_prefix: s_addr_prefix,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1Asset}
 */
export const condenseAxelarAxelarnetV1beta1Asset = (g_msg) => encodeAxelarAxelarnetV1beta1Asset(g_msg.denom, safe_base64_to_bytes(g_msg.min_amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.Asset` -
 */
export const expandAxelarAxelarnetV1beta1Asset = ([s_denom, atu8_min_amount]) => ({
    denom: s_denom,
    min_amount: safe_bytes_to_base64(atu8_min_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1PendingIBCTransferCountRequest}
 */
export const condenseAxelarAxelarnetV1beta1PendingIBCTransferCountRequest = (g_msg) => encodeAxelarAxelarnetV1beta1PendingIBCTransferCountRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.PendingIBCTransferCountRequest` -
 */
export const expandAxelarAxelarnetV1beta1PendingIBCTransferCountRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1PendingIBCTransferCountResponse}
 */
export const condenseAxelarAxelarnetV1beta1PendingIBCTransferCountResponse = (g_msg) => encodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponse(map(g_msg.transfers_by_chain, condenseAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.PendingIBCTransferCountResponse` -
 */
export const expandAxelarAxelarnetV1beta1PendingIBCTransferCountResponse = ([a_transfers_by_chain]) => ({
    transfers_by_chain: a_transfers_by_chain && map(a_transfers_by_chain, expandAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry}
 */
export const condenseAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry = (g_msg) => encodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.PendingIBCTransferCountResponse.TransfersByChainEntry` -
 */
export const expandAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry = ([s_key, n_value]) => ({
    key: s_key,
    value: n_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ParamsRequest}
 */
export const condenseAxelarAxelarnetV1beta1ParamsRequest = (g_msg) => encodeAxelarAxelarnetV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarAxelarnetV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ParamsResponse}
 */
export const condenseAxelarAxelarnetV1beta1ParamsResponse = (g_msg) => encodeAxelarAxelarnetV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarAxelarnetV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ParamsResponse` -
 */
export const expandAxelarAxelarnetV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarAxelarnetV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1Params}
 */
export const condenseAxelarAxelarnetV1beta1Params = (g_msg) => encodeAxelarAxelarnetV1beta1Params(g_msg.route_timeout_window, g_msg.transfer_limit, g_msg.end_blocker_limit, map(g_msg.call_contracts_proposal_min_deposits, condenseAxelarAxelarnetV1beta1CallContractProposalMinDeposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarAxelarnetV1beta1Params = ([sg_route_timeout_window, , sg_transfer_limit, sg_end_blocker_limit, a_call_contracts_proposal_min_deposits]) => ({
    route_timeout_window: sg_route_timeout_window,
    transfer_limit: sg_transfer_limit,
    end_blocker_limit: sg_end_blocker_limit,
    call_contracts_proposal_min_deposits: a_call_contracts_proposal_min_deposits && map(a_call_contracts_proposal_min_deposits, expandAxelarAxelarnetV1beta1CallContractProposalMinDeposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1CallContractProposalMinDeposit}
 */
export const condenseAxelarAxelarnetV1beta1CallContractProposalMinDeposit = (g_msg) => encodeAxelarAxelarnetV1beta1CallContractProposalMinDeposit(g_msg.chain, g_msg.contract_address, map(g_msg.min_deposits, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.CallContractProposalMinDeposit` -
 */
export const expandAxelarAxelarnetV1beta1CallContractProposalMinDeposit = ([s_chain, sa_contract, a_min_deposits]) => ({
    chain: s_chain,
    contract_address: sa_contract,
    min_deposits: a_min_deposits && map(a_min_deposits, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1GenesisState}
 */
export const condenseAxelarAxelarnetV1beta1GenesisState = (g_msg) => encodeAxelarAxelarnetV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarAxelarnetV1beta1Params), safe_base64_to_bytes(g_msg.collector_address), map(g_msg.chains, condenseAxelarAxelarnetV1beta1CosmosChain), apply_opt(g_msg.transfer_queue, condenseAxelarUtilsV1beta1QueueState), map(g_msg.ibc_transfers, condenseAxelarAxelarnetV1beta1IBCTransfer), map(g_msg.seq_id_mapping, condenseAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.GenesisState` -
 */
export const expandAxelarAxelarnetV1beta1GenesisState = ([a_params, atu8_collector_address, a_chains, , a_transfer_queue, , a_ibc_transfers, a_seq_id_mapping]) => ({
    params: a_params && expandAxelarAxelarnetV1beta1Params(a_params),
    collector_address: safe_bytes_to_base64(atu8_collector_address),
    chains: a_chains && map(a_chains, expandAxelarAxelarnetV1beta1CosmosChain),
    transfer_queue: a_transfer_queue && expandAxelarUtilsV1beta1QueueState(a_transfer_queue),
    ibc_transfers: a_ibc_transfers && map(a_ibc_transfers, expandAxelarAxelarnetV1beta1IBCTransfer),
    seq_id_mapping: a_seq_id_mapping && map(a_seq_id_mapping, expandAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1QueueState}
 */
export const condenseAxelarUtilsV1beta1QueueState = (g_msg) => encodeAxelarUtilsV1beta1QueueState(map(g_msg.items, condenseAxelarUtilsV1beta1QueueStateItemsEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.QueueState` -
 */
export const expandAxelarUtilsV1beta1QueueState = ([a_items]) => ({
    items: a_items && map(a_items, expandAxelarUtilsV1beta1QueueStateItemsEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1QueueStateItemsEntry}
 */
export const condenseAxelarUtilsV1beta1QueueStateItemsEntry = (g_msg) => encodeAxelarUtilsV1beta1QueueStateItemsEntry(g_msg.key, apply_opt(g_msg.value, condenseAxelarUtilsV1beta1QueueStateItem));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.QueueState.ItemsEntry` -
 */
export const expandAxelarUtilsV1beta1QueueStateItemsEntry = ([s_key, a_value]) => ({
    key: s_key,
    value: a_value && expandAxelarUtilsV1beta1QueueStateItem(a_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1QueueStateItem}
 */
export const condenseAxelarUtilsV1beta1QueueStateItem = (g_msg) => encodeAxelarUtilsV1beta1QueueStateItem(safe_base64_to_bytes(g_msg.key), safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.QueueState.Item` -
 */
export const expandAxelarUtilsV1beta1QueueStateItem = ([atu8_key, atu8_value]) => ({
    key: safe_bytes_to_base64(atu8_key),
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry}
 */
export const condenseAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry = (g_msg) => encodeAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry` -
 */
export const expandAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry = ([s_key, sg_value]) => ({
    key: s_key,
    value: sg_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1CallContractsProposal}
 */
export const condenseAxelarAxelarnetV1beta1CallContractsProposal = (g_msg) => encodeAxelarAxelarnetV1beta1CallContractsProposal(g_msg.title, g_msg.description, map(g_msg.contract_calls, condenseAxelarAxelarnetV1beta1ContractCall));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.CallContractsProposal` - a gov Content type for calling contracts on other chains
 */
export const expandAxelarAxelarnetV1beta1CallContractsProposal = ([s_title, s_description, a_contract_calls]) => ({
    title: s_title,
    description: s_description,
    contract_calls: a_contract_calls && map(a_contract_calls, expandAxelarAxelarnetV1beta1ContractCall),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarAxelarnetV1beta1ContractCall}
 */
export const condenseAxelarAxelarnetV1beta1ContractCall = (g_msg) => encodeAxelarAxelarnetV1beta1ContractCall(g_msg.chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.axelarnet.v1beta1.ContractCall` -
 */
export const expandAxelarAxelarnetV1beta1ContractCall = ([s_chain, sa_contract, atu8_payload]) => ({
    chain: s_chain,
    contract_address: sa_contract,
    payload: safe_bytes_to_base64(atu8_payload),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1StartKeygenRequest}
 */
export const condenseAxelarMultisigV1beta1StartKeygenRequest = (g_msg) => encodeAxelarMultisigV1beta1StartKeygenRequest(g_msg.sender, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.StartKeygenRequest` -
 */
export const expandAxelarMultisigV1beta1StartKeygenRequest = ([sa_sender, si_key]) => ({
    sender: sa_sender,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1StartKeygenResponse}
 */
export const condenseAxelarMultisigV1beta1StartKeygenResponse = (g_msg) => encodeAxelarMultisigV1beta1StartKeygenResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.StartKeygenResponse` -
 */
export const expandAxelarMultisigV1beta1StartKeygenResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SubmitPubKeyRequest}
 */
export const condenseAxelarMultisigV1beta1SubmitPubKeyRequest = (g_msg) => encodeAxelarMultisigV1beta1SubmitPubKeyRequest(g_msg.sender, g_msg.key_id, safe_base64_to_bytes(g_msg.pub_key), safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SubmitPubKeyRequest` -
 */
export const expandAxelarMultisigV1beta1SubmitPubKeyRequest = ([sa_sender, si_key, atu8_pub_key, atu8_signature]) => ({
    sender: sa_sender,
    key_id: si_key,
    pub_key: safe_bytes_to_base64(atu8_pub_key),
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SubmitPubKeyResponse}
 */
export const condenseAxelarMultisigV1beta1SubmitPubKeyResponse = (g_msg) => encodeAxelarMultisigV1beta1SubmitPubKeyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SubmitPubKeyResponse` -
 */
export const expandAxelarMultisigV1beta1SubmitPubKeyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SubmitSignatureRequest}
 */
export const condenseAxelarMultisigV1beta1SubmitSignatureRequest = (g_msg) => encodeAxelarMultisigV1beta1SubmitSignatureRequest(g_msg.sender, g_msg.sig_id, safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SubmitSignatureRequest` -
 */
export const expandAxelarMultisigV1beta1SubmitSignatureRequest = ([sa_sender, sg_sig_id, atu8_signature]) => ({
    sender: sa_sender,
    sig_id: sg_sig_id,
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SubmitSignatureResponse}
 */
export const condenseAxelarMultisigV1beta1SubmitSignatureResponse = (g_msg) => encodeAxelarMultisigV1beta1SubmitSignatureResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SubmitSignatureResponse` -
 */
export const expandAxelarMultisigV1beta1SubmitSignatureResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1RotateKeyRequest}
 */
export const condenseAxelarMultisigV1beta1RotateKeyRequest = (g_msg) => encodeAxelarMultisigV1beta1RotateKeyRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.RotateKeyRequest` -
 */
export const expandAxelarMultisigV1beta1RotateKeyRequest = ([sa_sender, s_chain, si_key]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1RotateKeyResponse}
 */
export const condenseAxelarMultisigV1beta1RotateKeyResponse = (g_msg) => encodeAxelarMultisigV1beta1RotateKeyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.RotateKeyResponse` -
 */
export const expandAxelarMultisigV1beta1RotateKeyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptOutRequest}
 */
export const condenseAxelarMultisigV1beta1KeygenOptOutRequest = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptOutRequest(addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptOutRequest` -
 */
export const expandAxelarMultisigV1beta1KeygenOptOutRequest = ([sa_sender]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptOutResponse}
 */
export const condenseAxelarMultisigV1beta1KeygenOptOutResponse = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptOutResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptOutResponse` -
 */
export const expandAxelarMultisigV1beta1KeygenOptOutResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptInRequest}
 */
export const condenseAxelarMultisigV1beta1KeygenOptInRequest = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptInRequest(addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptInRequest` -
 */
export const expandAxelarMultisigV1beta1KeygenOptInRequest = ([sa_sender]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptInResponse}
 */
export const condenseAxelarMultisigV1beta1KeygenOptInResponse = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptInResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptInResponse` -
 */
export const expandAxelarMultisigV1beta1KeygenOptInResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenStarted}
 */
export const condenseAxelarMultisigV1beta1KeygenStarted = (g_msg) => encodeAxelarMultisigV1beta1KeygenStarted(g_msg.module, g_msg.key_id, map(g_msg.participants, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenStarted` -
 */
export const expandAxelarMultisigV1beta1KeygenStarted = ([s_module, si_key, a_participants]) => ({
    module: s_module,
    key_id: si_key,
    participants: map(a_participants, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenCompleted}
 */
export const condenseAxelarMultisigV1beta1KeygenCompleted = (g_msg) => encodeAxelarMultisigV1beta1KeygenCompleted(g_msg.module, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenCompleted` -
 */
export const expandAxelarMultisigV1beta1KeygenCompleted = ([s_module, si_key]) => ({
    module: s_module,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenExpired}
 */
export const condenseAxelarMultisigV1beta1KeygenExpired = (g_msg) => encodeAxelarMultisigV1beta1KeygenExpired(g_msg.module, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenExpired` -
 */
export const expandAxelarMultisigV1beta1KeygenExpired = ([s_module, si_key]) => ({
    module: s_module,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1PubKeySubmitted}
 */
export const condenseAxelarMultisigV1beta1PubKeySubmitted = (g_msg) => encodeAxelarMultisigV1beta1PubKeySubmitted(g_msg.module, g_msg.key_id, safe_base64_to_bytes(g_msg.participant), safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.PubKeySubmitted` -
 */
export const expandAxelarMultisigV1beta1PubKeySubmitted = ([s_module, si_key, atu8_participant, atu8_pub_key]) => ({
    module: s_module,
    key_id: si_key,
    participant: safe_bytes_to_base64(atu8_participant),
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SigningStarted}
 */
export const condenseAxelarMultisigV1beta1SigningStarted = (g_msg) => encodeAxelarMultisigV1beta1SigningStarted(g_msg.module, g_msg.sig_id, g_msg.key_id, map(g_msg.pub_keys, condenseAxelarMultisigV1beta1SigningStartedPubKeysEntry), safe_base64_to_bytes(g_msg.payload_hash), g_msg.requesting_module);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SigningStarted` -
 */
export const expandAxelarMultisigV1beta1SigningStarted = ([s_module, sg_sig_id, si_key, a_pub_keys, atu8_payload_hash, s_requesting_module]) => ({
    module: s_module,
    sig_id: sg_sig_id,
    key_id: si_key,
    pub_keys: a_pub_keys && map(a_pub_keys, expandAxelarMultisigV1beta1SigningStartedPubKeysEntry),
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    requesting_module: s_requesting_module,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SigningStartedPubKeysEntry}
 */
export const condenseAxelarMultisigV1beta1SigningStartedPubKeysEntry = (g_msg) => encodeAxelarMultisigV1beta1SigningStartedPubKeysEntry(g_msg.key, safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SigningStarted.PubKeysEntry` -
 */
export const expandAxelarMultisigV1beta1SigningStartedPubKeysEntry = ([s_key, atu8_value]) => ({
    key: s_key,
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SigningCompleted}
 */
export const condenseAxelarMultisigV1beta1SigningCompleted = (g_msg) => encodeAxelarMultisigV1beta1SigningCompleted(g_msg.module, g_msg.sig_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SigningCompleted` -
 */
export const expandAxelarMultisigV1beta1SigningCompleted = ([s_module, sg_sig_id]) => ({
    module: s_module,
    sig_id: sg_sig_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SigningExpired}
 */
export const condenseAxelarMultisigV1beta1SigningExpired = (g_msg) => encodeAxelarMultisigV1beta1SigningExpired(g_msg.module, g_msg.sig_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SigningExpired` -
 */
export const expandAxelarMultisigV1beta1SigningExpired = ([s_module, sg_sig_id]) => ({
    module: s_module,
    sig_id: sg_sig_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SignatureSubmitted}
 */
export const condenseAxelarMultisigV1beta1SignatureSubmitted = (g_msg) => encodeAxelarMultisigV1beta1SignatureSubmitted(g_msg.module, g_msg.sig_id, safe_base64_to_bytes(g_msg.participant), safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SignatureSubmitted` -
 */
export const expandAxelarMultisigV1beta1SignatureSubmitted = ([s_module, sg_sig_id, atu8_participant, atu8_signature]) => ({
    module: s_module,
    sig_id: sg_sig_id,
    participant: safe_bytes_to_base64(atu8_participant),
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyAssigned}
 */
export const condenseAxelarMultisigV1beta1KeyAssigned = (g_msg) => encodeAxelarMultisigV1beta1KeyAssigned(g_msg.module, g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyAssigned` -
 */
export const expandAxelarMultisigV1beta1KeyAssigned = ([s_module, s_chain, si_key]) => ({
    module: s_module,
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyRotated}
 */
export const condenseAxelarMultisigV1beta1KeyRotated = (g_msg) => encodeAxelarMultisigV1beta1KeyRotated(g_msg.module, g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyRotated` -
 */
export const expandAxelarMultisigV1beta1KeyRotated = ([s_module, s_chain, si_key]) => ({
    module: s_module,
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptOut}
 */
export const condenseAxelarMultisigV1beta1KeygenOptOut = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptOut(safe_base64_to_bytes(g_msg.participant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptOut` -
 */
export const expandAxelarMultisigV1beta1KeygenOptOut = ([atu8_participant]) => ({
    participant: safe_bytes_to_base64(atu8_participant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenOptIn}
 */
export const condenseAxelarMultisigV1beta1KeygenOptIn = (g_msg) => encodeAxelarMultisigV1beta1KeygenOptIn(safe_base64_to_bytes(g_msg.participant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenOptIn` -
 */
export const expandAxelarMultisigV1beta1KeygenOptIn = ([atu8_participant]) => ({
    participant: safe_bytes_to_base64(atu8_participant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1Key}
 */
export const condenseAxelarMultisigV1beta1Key = (g_msg) => encodeAxelarMultisigV1beta1Key(g_msg.id, apply_opt(g_msg.snapshot, condenseAxelarSnapshotExportedV1beta1Snapshot), map(g_msg.pub_keys, condenseAxelarMultisigV1beta1KeyPubKeysEntry), apply_opt(g_msg.signing_threshold, condenseAxelarUtilsV1beta1Threshold), JsonToProtoEnumAxelarMultisigExportedV1beta1KeyState[g_msg.state]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.Key` -
 */
export const expandAxelarMultisigV1beta1Key = ([s_id, a_snapshot, a_pub_keys, a_signing_threshold, xc_state]) => ({
    id: s_id,
    snapshot: a_snapshot && expandAxelarSnapshotExportedV1beta1Snapshot(a_snapshot),
    pub_keys: a_pub_keys && map(a_pub_keys, expandAxelarMultisigV1beta1KeyPubKeysEntry),
    signing_threshold: a_signing_threshold && expandAxelarUtilsV1beta1Threshold(a_signing_threshold),
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarMultisigExportedV1beta1KeyState[xc_state] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyPubKeysEntry}
 */
export const condenseAxelarMultisigV1beta1KeyPubKeysEntry = (g_msg) => encodeAxelarMultisigV1beta1KeyPubKeysEntry(g_msg.key, safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.Key.PubKeysEntry` -
 */
export const expandAxelarMultisigV1beta1KeyPubKeysEntry = ([s_key, atu8_value]) => ({
    key: s_key,
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenSession}
 */
export const condenseAxelarMultisigV1beta1KeygenSession = (g_msg) => encodeAxelarMultisigV1beta1KeygenSession(apply_opt(g_msg.key, condenseAxelarMultisigV1beta1Key), JsonToProtoEnumAxelarMultisigExportedV1beta1MultisigState[g_msg.state], apply_opt(g_msg.keygen_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.expires_at, g_msg.completed_at, map(g_msg.is_pub_key_received, condenseAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry), g_msg.grace_period);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenSession` -
 */
export const expandAxelarMultisigV1beta1KeygenSession = ([a_key, xc_state, a_keygen_threshold, sg_expires_at, sg_completed_at, a_is_pub_key_received, sg_grace_period]) => ({
    key: a_key && expandAxelarMultisigV1beta1Key(a_key),
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarMultisigExportedV1beta1MultisigState[xc_state] : __UNDEFINED,
    keygen_threshold: a_keygen_threshold && expandAxelarUtilsV1beta1Threshold(a_keygen_threshold),
    expires_at: sg_expires_at,
    completed_at: sg_completed_at,
    is_pub_key_received: a_is_pub_key_received && map(a_is_pub_key_received, expandAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry),
    grace_period: sg_grace_period,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry}
 */
export const condenseAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry = (g_msg) => encodeAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenSession.IsPubKeyReceivedEntry` -
 */
export const expandAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry = ([s_key, b_value]) => ({
    key: s_key,
    value: !!b_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1MultiSig}
 */
export const condenseAxelarMultisigV1beta1MultiSig = (g_msg) => encodeAxelarMultisigV1beta1MultiSig(g_msg.key_id, safe_base64_to_bytes(g_msg.payload_hash), map(g_msg.sigs, condenseAxelarMultisigV1beta1MultiSigSigsEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.MultiSig` -
 */
export const expandAxelarMultisigV1beta1MultiSig = ([si_key, atu8_payload_hash, a_sigs]) => ({
    key_id: si_key,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    sigs: a_sigs && map(a_sigs, expandAxelarMultisigV1beta1MultiSigSigsEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1MultiSigSigsEntry}
 */
export const condenseAxelarMultisigV1beta1MultiSigSigsEntry = (g_msg) => encodeAxelarMultisigV1beta1MultiSigSigsEntry(g_msg.key, safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.MultiSig.SigsEntry` -
 */
export const expandAxelarMultisigV1beta1MultiSigSigsEntry = ([s_key, atu8_value]) => ({
    key: s_key,
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1SigningSession}
 */
export const condenseAxelarMultisigV1beta1SigningSession = (g_msg) => encodeAxelarMultisigV1beta1SigningSession(g_msg.id, apply_opt(g_msg.multi_sig, condenseAxelarMultisigV1beta1MultiSig), JsonToProtoEnumAxelarMultisigExportedV1beta1MultisigState[g_msg.state], apply_opt(g_msg.key, condenseAxelarMultisigV1beta1Key), g_msg.expires_at, g_msg.completed_at, g_msg.grace_period, g_msg.module, condenseJsonAny(g_msg.module_metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.SigningSession` -
 */
export const expandAxelarMultisigV1beta1SigningSession = ([sg_id, a_multi_sig, xc_state, a_key, sg_expires_at, sg_completed_at, sg_grace_period, s_module, a_module_metadata]) => ({
    id: sg_id,
    multi_sig: a_multi_sig && expandAxelarMultisigV1beta1MultiSig(a_multi_sig),
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarMultisigExportedV1beta1MultisigState[xc_state] : __UNDEFINED,
    key: a_key && expandAxelarMultisigV1beta1Key(a_key),
    expires_at: sg_expires_at,
    completed_at: sg_completed_at,
    grace_period: sg_grace_period,
    module: s_module,
    module_metadata: a_module_metadata && expandJsonAny(a_module_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyEpoch}
 */
export const condenseAxelarMultisigV1beta1KeyEpoch = (g_msg) => encodeAxelarMultisigV1beta1KeyEpoch(g_msg.epoch, g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyEpoch` -
 */
export const expandAxelarMultisigV1beta1KeyEpoch = ([sg_epoch, s_chain, si_key]) => ({
    epoch: sg_epoch,
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyIDRequest}
 */
export const condenseAxelarMultisigV1beta1KeyIDRequest = (g_msg) => encodeAxelarMultisigV1beta1KeyIDRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyIDRequest` -
 */
export const expandAxelarMultisigV1beta1KeyIDRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyIDResponse}
 */
export const condenseAxelarMultisigV1beta1KeyIDResponse = (g_msg) => encodeAxelarMultisigV1beta1KeyIDResponse(g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyIDResponse` - contains the key ID of the key assigned to a given chain.
 */
export const expandAxelarMultisigV1beta1KeyIDResponse = ([si_key]) => ({
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1NextKeyIDRequest}
 */
export const condenseAxelarMultisigV1beta1NextKeyIDRequest = (g_msg) => encodeAxelarMultisigV1beta1NextKeyIDRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.NextKeyIDRequest` -
 */
export const expandAxelarMultisigV1beta1NextKeyIDRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1NextKeyIDResponse}
 */
export const condenseAxelarMultisigV1beta1NextKeyIDResponse = (g_msg) => encodeAxelarMultisigV1beta1NextKeyIDResponse(g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.NextKeyIDResponse` - contains the key ID for the next rotation on the given chain
 */
export const expandAxelarMultisigV1beta1NextKeyIDResponse = ([si_key]) => ({
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyRequest}
 */
export const condenseAxelarMultisigV1beta1KeyRequest = (g_msg) => encodeAxelarMultisigV1beta1KeyRequest(g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyRequest` -
 */
export const expandAxelarMultisigV1beta1KeyRequest = ([si_key]) => ({
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenParticipant}
 */
export const condenseAxelarMultisigV1beta1KeygenParticipant = (g_msg) => encodeAxelarMultisigV1beta1KeygenParticipant(g_msg.address, safe_base64_to_bytes(g_msg.weight), g_msg.pub_key);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenParticipant` -
 */
export const expandAxelarMultisigV1beta1KeygenParticipant = ([sa_address, atu8_weight, s_pub_key]) => ({
    address: sa_address,
    weight: safe_bytes_to_base64(atu8_weight),
    pub_key: s_pub_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeyResponse}
 */
export const condenseAxelarMultisigV1beta1KeyResponse = (g_msg) => encodeAxelarMultisigV1beta1KeyResponse(g_msg.key_id, JsonToProtoEnumAxelarMultisigExportedV1beta1KeyState[g_msg.state], g_msg.started_at, parse_timestamp(g_msg.started_at_timestamp), safe_base64_to_bytes(g_msg.threshold_weight), safe_base64_to_bytes(g_msg.bonded_weight), map(g_msg.participants, condenseAxelarMultisigV1beta1KeygenParticipant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeyResponse` - contains the key corresponding to a given key id.
 */
export const expandAxelarMultisigV1beta1KeyResponse = ([si_key, xc_state, sg_started_at, a_started_at_timestamp, atu8_threshold_weight, atu8_bonded_weight, a_participants]) => ({
    key_id: si_key,
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarMultisigExportedV1beta1KeyState[xc_state] : __UNDEFINED,
    started_at: sg_started_at,
    started_at_timestamp: expand_timestamp(a_started_at_timestamp),
    threshold_weight: safe_bytes_to_base64(atu8_threshold_weight),
    bonded_weight: safe_bytes_to_base64(atu8_bonded_weight),
    participants: a_participants && map(a_participants, expandAxelarMultisigV1beta1KeygenParticipant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenSessionRequest}
 */
export const condenseAxelarMultisigV1beta1KeygenSessionRequest = (g_msg) => encodeAxelarMultisigV1beta1KeygenSessionRequest(g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenSessionRequest` -
 */
export const expandAxelarMultisigV1beta1KeygenSessionRequest = ([si_key]) => ({
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1KeygenSessionResponse}
 */
export const condenseAxelarMultisigV1beta1KeygenSessionResponse = (g_msg) => encodeAxelarMultisigV1beta1KeygenSessionResponse(g_msg.started_at, parse_timestamp(g_msg.started_at_timestamp), g_msg.expires_at, g_msg.completed_at, g_msg.grace_period, JsonToProtoEnumAxelarMultisigExportedV1beta1MultisigState[g_msg.state], safe_base64_to_bytes(g_msg.keygen_threshold_weight), safe_base64_to_bytes(g_msg.signing_threshold_weight), safe_base64_to_bytes(g_msg.bonded_weight), map(g_msg.participants, condenseAxelarMultisigV1beta1KeygenParticipant));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.KeygenSessionResponse` - contains the keygen session info for a given key ID.
 */
export const expandAxelarMultisigV1beta1KeygenSessionResponse = ([sg_started_at, a_started_at_timestamp, sg_expires_at, sg_completed_at, sg_grace_period, xc_state, atu8_keygen_threshold_weight, atu8_signing_threshold_weight, atu8_bonded_weight, a_participants]) => ({
    started_at: sg_started_at,
    started_at_timestamp: expand_timestamp(a_started_at_timestamp),
    expires_at: sg_expires_at,
    completed_at: sg_completed_at,
    grace_period: sg_grace_period,
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarMultisigExportedV1beta1MultisigState[xc_state] : __UNDEFINED,
    keygen_threshold_weight: safe_bytes_to_base64(atu8_keygen_threshold_weight),
    signing_threshold_weight: safe_bytes_to_base64(atu8_signing_threshold_weight),
    bonded_weight: safe_bytes_to_base64(atu8_bonded_weight),
    participants: a_participants && map(a_participants, expandAxelarMultisigV1beta1KeygenParticipant),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1ParamsRequest}
 */
export const condenseAxelarMultisigV1beta1ParamsRequest = (g_msg) => encodeAxelarMultisigV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarMultisigV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1ParamsResponse}
 */
export const condenseAxelarMultisigV1beta1ParamsResponse = (g_msg) => encodeAxelarMultisigV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarMultisigV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.ParamsResponse` -
 */
export const expandAxelarMultisigV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarMultisigV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1Params}
 */
export const condenseAxelarMultisigV1beta1Params = (g_msg) => encodeAxelarMultisigV1beta1Params(apply_opt(g_msg.keygen_threshold, condenseAxelarUtilsV1beta1Threshold), apply_opt(g_msg.signing_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.keygen_timeout, g_msg.keygen_grace_period, g_msg.signing_timeout, g_msg.signing_grace_period, g_msg.active_epoch_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarMultisigV1beta1Params = ([a_keygen_threshold, a_signing_threshold, sg_keygen_timeout, sg_keygen_grace_period, sg_signing_timeout, sg_signing_grace_period, sg_active_epoch_count]) => ({
    keygen_threshold: a_keygen_threshold && expandAxelarUtilsV1beta1Threshold(a_keygen_threshold),
    signing_threshold: a_signing_threshold && expandAxelarUtilsV1beta1Threshold(a_signing_threshold),
    keygen_timeout: sg_keygen_timeout,
    keygen_grace_period: sg_keygen_grace_period,
    signing_timeout: sg_signing_timeout,
    signing_grace_period: sg_signing_grace_period,
    active_epoch_count: sg_active_epoch_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarMultisigV1beta1GenesisState}
 */
export const condenseAxelarMultisigV1beta1GenesisState = (g_msg) => encodeAxelarMultisigV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarMultisigV1beta1Params), map(g_msg.keygen_sessions, condenseAxelarMultisigV1beta1KeygenSession), map(g_msg.signing_sessions, condenseAxelarMultisigV1beta1SigningSession), map(g_msg.keys, condenseAxelarMultisigV1beta1Key), map(g_msg.key_epochs, condenseAxelarMultisigV1beta1KeyEpoch));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.multisig.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarMultisigV1beta1GenesisState = ([a_params, a_keygen_sessions, a_signing_sessions, a_keys, a_key_epochs]) => ({
    params: a_params && expandAxelarMultisigV1beta1Params(a_params),
    keygen_sessions: a_keygen_sessions && map(a_keygen_sessions, expandAxelarMultisigV1beta1KeygenSession),
    signing_sessions: a_signing_sessions && map(a_signing_sessions, expandAxelarMultisigV1beta1SigningSession),
    keys: a_keys && map(a_keys, expandAxelarMultisigV1beta1Key),
    key_epochs: a_key_epochs && map(a_key_epochs, expandAxelarMultisigV1beta1KeyEpoch),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1Bitmap}
 */
export const condenseAxelarUtilsV1beta1Bitmap = (g_msg) => encodeAxelarUtilsV1beta1Bitmap(apply_opt(g_msg.true_count_cache, condenseAxelarUtilsV1beta1CircularBuffer));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.Bitmap` -
 */
export const expandAxelarUtilsV1beta1Bitmap = ([, a_true_count_cache]) => ({
    true_count_cache: a_true_count_cache && expandAxelarUtilsV1beta1CircularBuffer(a_true_count_cache),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarUtilsV1beta1CircularBuffer}
 */
export const condenseAxelarUtilsV1beta1CircularBuffer = (g_msg) => encodeAxelarUtilsV1beta1CircularBuffer(g_msg.cumulative_value, g_msg.index, g_msg.max_size);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.utils.v1beta1.CircularBuffer` -
 */
export const expandAxelarUtilsV1beta1CircularBuffer = ([a_cumulative_values, n_index, n_max_size]) => ({
    cumulative_value: a_cumulative_values,
    index: n_index,
    max_size: n_max_size,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1CrossChainAddress}
 */
export const condenseAxelarNexusExportedV1beta1CrossChainAddress = (g_msg) => encodeAxelarNexusExportedV1beta1CrossChainAddress(apply_opt(g_msg.chain, condenseAxelarNexusExportedV1beta1Chain), g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.CrossChainAddress` - represents a generalized address on any registered chain
 */
export const expandAxelarNexusExportedV1beta1CrossChainAddress = ([a_chain, sa_address]) => ({
    chain: a_chain && expandAxelarNexusExportedV1beta1Chain(a_chain),
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1CrossChainTransfer}
 */
export const condenseAxelarNexusExportedV1beta1CrossChainTransfer = (g_msg) => encodeAxelarNexusExportedV1beta1CrossChainTransfer(apply_opt(g_msg.recipient, condenseAxelarNexusExportedV1beta1CrossChainAddress), slimify_coin(g_msg.asset), g_msg.id, JsonToProtoEnumAxelarNexusExportedV1beta1TransferState[g_msg.state]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.CrossChainTransfer` - represents a generalized transfer of some asset to a registered blockchain
 */
export const expandAxelarNexusExportedV1beta1CrossChainTransfer = ([a_recipient, a_asset, sg_id, xc_state]) => ({
    recipient: a_recipient && expandAxelarNexusExportedV1beta1CrossChainAddress(a_recipient),
    asset: a_asset && expand_coin(a_asset),
    id: sg_id,
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarNexusExportedV1beta1TransferState[xc_state] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1TransferFee}
 */
export const condenseAxelarNexusExportedV1beta1TransferFee = (g_msg) => encodeAxelarNexusExportedV1beta1TransferFee(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.TransferFee` - represents accumulated fees generated by the network
 */
export const expandAxelarNexusExportedV1beta1TransferFee = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1FeeInfo}
 */
export const condenseAxelarNexusExportedV1beta1FeeInfo = (g_msg) => encodeAxelarNexusExportedV1beta1FeeInfo(g_msg.chain, g_msg.asset, safe_base64_to_bytes(g_msg.fee_rate), safe_base64_to_bytes(g_msg.min_fee), safe_base64_to_bytes(g_msg.max_fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.FeeInfo` -
 */
export const expandAxelarNexusExportedV1beta1FeeInfo = ([s_chain, s_asset, atu8_fee_rate, atu8_min_fee, atu8_max_fee]) => ({
    chain: s_chain,
    asset: s_asset,
    fee_rate: safe_bytes_to_base64(atu8_fee_rate),
    min_fee: safe_bytes_to_base64(atu8_min_fee),
    max_fee: safe_bytes_to_base64(atu8_max_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1GeneralMessage}
 */
export const condenseAxelarNexusExportedV1beta1GeneralMessage = (g_msg) => encodeAxelarNexusExportedV1beta1GeneralMessage(g_msg.id, apply_opt(g_msg.sender, condenseAxelarNexusExportedV1beta1CrossChainAddress), apply_opt(g_msg.recipient, condenseAxelarNexusExportedV1beta1CrossChainAddress), safe_base64_to_bytes(g_msg.payload_hash), JsonToProtoEnumAxelarNexusExportedV1beta1GeneralMessageStatus[g_msg.status], slimify_coin(g_msg.asset), safe_base64_to_bytes(g_msg.source_tx_id), g_msg.source_tx_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.GeneralMessage` -
 */
export const expandAxelarNexusExportedV1beta1GeneralMessage = ([s_id, a_sender, a_recipient, atu8_payload_hash, xc_status, a_asset, atu8_source_tx_id, sg_source_tx_index]) => ({
    id: s_id,
    sender: a_sender && expandAxelarNexusExportedV1beta1CrossChainAddress(a_sender),
    recipient: a_recipient && expandAxelarNexusExportedV1beta1CrossChainAddress(a_recipient),
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarNexusExportedV1beta1GeneralMessageStatus[xc_status] : __UNDEFINED,
    asset: a_asset && expand_coin(a_asset),
    source_tx_id: safe_bytes_to_base64(atu8_source_tx_id),
    source_tx_index: sg_source_tx_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusExportedV1beta1WasmMessage}
 */
export const condenseAxelarNexusExportedV1beta1WasmMessage = (g_msg) => encodeAxelarNexusExportedV1beta1WasmMessage(g_msg.source_chain, g_msg.source_address, g_msg.destination_chain, g_msg.destination_address, safe_base64_to_bytes(g_msg.payload_hash), safe_base64_to_bytes(g_msg.source_tx_id), g_msg.source_tx_index, addr_bytes_to_bech32(g_msg.sender));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.exported.v1beta1.WasmMessage` -
 */
export const expandAxelarNexusExportedV1beta1WasmMessage = ([s_source_chain, sa_source, s_destination_chain, sa_destination, atu8_payload_hash, atu8_source_tx_id, sg_source_tx_index, sa_sender]) => ({
    source_chain: s_source_chain,
    source_address: sa_source,
    destination_chain: s_destination_chain,
    destination_address: sa_destination,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    source_tx_id: safe_bytes_to_base64(atu8_source_tx_id),
    source_tx_index: sg_source_tx_index,
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RegisterChainMaintainerRequest}
 */
export const condenseAxelarNexusV1beta1RegisterChainMaintainerRequest = (g_msg) => encodeAxelarNexusV1beta1RegisterChainMaintainerRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RegisterChainMaintainerRequest` -
 */
export const expandAxelarNexusV1beta1RegisterChainMaintainerRequest = ([sa_sender, a_chains]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RegisterChainMaintainerResponse}
 */
export const condenseAxelarNexusV1beta1RegisterChainMaintainerResponse = (g_msg) => encodeAxelarNexusV1beta1RegisterChainMaintainerResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RegisterChainMaintainerResponse` -
 */
export const expandAxelarNexusV1beta1RegisterChainMaintainerResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1DeregisterChainMaintainerRequest}
 */
export const condenseAxelarNexusV1beta1DeregisterChainMaintainerRequest = (g_msg) => encodeAxelarNexusV1beta1DeregisterChainMaintainerRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.DeregisterChainMaintainerRequest` -
 */
export const expandAxelarNexusV1beta1DeregisterChainMaintainerRequest = ([sa_sender, a_chains]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1DeregisterChainMaintainerResponse}
 */
export const condenseAxelarNexusV1beta1DeregisterChainMaintainerResponse = (g_msg) => encodeAxelarNexusV1beta1DeregisterChainMaintainerResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.DeregisterChainMaintainerResponse` -
 */
export const expandAxelarNexusV1beta1DeregisterChainMaintainerResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ActivateChainRequest}
 */
export const condenseAxelarNexusV1beta1ActivateChainRequest = (g_msg) => encodeAxelarNexusV1beta1ActivateChainRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ActivateChainRequest` - represents a message to activate chains
 */
export const expandAxelarNexusV1beta1ActivateChainRequest = ([sa_sender, a_chains]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ActivateChainResponse}
 */
export const condenseAxelarNexusV1beta1ActivateChainResponse = (g_msg) => encodeAxelarNexusV1beta1ActivateChainResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ActivateChainResponse` -
 */
export const expandAxelarNexusV1beta1ActivateChainResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1DeactivateChainRequest}
 */
export const condenseAxelarNexusV1beta1DeactivateChainRequest = (g_msg) => encodeAxelarNexusV1beta1DeactivateChainRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.DeactivateChainRequest` - represents a message to deactivate chains
 */
export const expandAxelarNexusV1beta1DeactivateChainRequest = ([sa_sender, a_chains]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1DeactivateChainResponse}
 */
export const condenseAxelarNexusV1beta1DeactivateChainResponse = (g_msg) => encodeAxelarNexusV1beta1DeactivateChainResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.DeactivateChainResponse` -
 */
export const expandAxelarNexusV1beta1DeactivateChainResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RegisterAssetFeeRequest}
 */
export const condenseAxelarNexusV1beta1RegisterAssetFeeRequest = (g_msg) => encodeAxelarNexusV1beta1RegisterAssetFeeRequest(addr_bytes_to_bech32(g_msg.sender), apply_opt(g_msg.fee_info, condenseAxelarNexusExportedV1beta1FeeInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RegisterAssetFeeRequest` - represents a message to register the transfer fee info associated to an asset on a chain
 */
export const expandAxelarNexusV1beta1RegisterAssetFeeRequest = ([sa_sender, a_fee_info]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    fee_info: a_fee_info && expandAxelarNexusExportedV1beta1FeeInfo(a_fee_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RegisterAssetFeeResponse}
 */
export const condenseAxelarNexusV1beta1RegisterAssetFeeResponse = (g_msg) => encodeAxelarNexusV1beta1RegisterAssetFeeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RegisterAssetFeeResponse` -
 */
export const expandAxelarNexusV1beta1RegisterAssetFeeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1SetTransferRateLimitRequest}
 */
export const condenseAxelarNexusV1beta1SetTransferRateLimitRequest = (g_msg) => encodeAxelarNexusV1beta1SetTransferRateLimitRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, slimify_coin(g_msg.limit), parse_duration(g_msg.window));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.SetTransferRateLimitRequest` - represents a message to set rate limits on transfers
 */
export const expandAxelarNexusV1beta1SetTransferRateLimitRequest = ([sa_sender, s_chain, a_limit, a_window]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    limit: a_limit && expand_coin(a_limit),
    window: expand_duration(a_window),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1SetTransferRateLimitResponse}
 */
export const condenseAxelarNexusV1beta1SetTransferRateLimitResponse = (g_msg) => encodeAxelarNexusV1beta1SetTransferRateLimitResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.SetTransferRateLimitResponse` -
 */
export const expandAxelarNexusV1beta1SetTransferRateLimitResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1FeeDeducted}
 */
export const condenseAxelarNexusV1beta1FeeDeducted = (g_msg) => encodeAxelarNexusV1beta1FeeDeducted(g_msg.transfer_id, g_msg.recipient_chain, g_msg.recipient_address, slimify_coin(g_msg.amount), slimify_coin(g_msg.fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.FeeDeducted` -
 */
export const expandAxelarNexusV1beta1FeeDeducted = ([sg_transfer_id, s_recipient_chain, sa_recipient, a_amount, a_fee]) => ({
    transfer_id: sg_transfer_id,
    recipient_chain: s_recipient_chain,
    recipient_address: sa_recipient,
    amount: a_amount && expand_coin(a_amount),
    fee: a_fee && expand_coin(a_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1InsufficientFee}
 */
export const condenseAxelarNexusV1beta1InsufficientFee = (g_msg) => encodeAxelarNexusV1beta1InsufficientFee(g_msg.transfer_id, g_msg.recipient_chain, g_msg.recipient_address, slimify_coin(g_msg.amount), slimify_coin(g_msg.fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.InsufficientFee` -
 */
export const expandAxelarNexusV1beta1InsufficientFee = ([sg_transfer_id, s_recipient_chain, sa_recipient, a_amount, a_fee]) => ({
    transfer_id: sg_transfer_id,
    recipient_chain: s_recipient_chain,
    recipient_address: sa_recipient,
    amount: a_amount && expand_coin(a_amount),
    fee: a_fee && expand_coin(a_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RateLimitUpdated}
 */
export const condenseAxelarNexusV1beta1RateLimitUpdated = (g_msg) => encodeAxelarNexusV1beta1RateLimitUpdated(g_msg.chain, slimify_coin(g_msg.limit), parse_duration(g_msg.window));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RateLimitUpdated` -
 */
export const expandAxelarNexusV1beta1RateLimitUpdated = ([s_chain, a_limit, a_window]) => ({
    chain: s_chain,
    limit: a_limit && expand_coin(a_limit),
    window: expand_duration(a_window),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageReceived}
 */
export const condenseAxelarNexusV1beta1MessageReceived = (g_msg) => encodeAxelarNexusV1beta1MessageReceived(g_msg.id, safe_base64_to_bytes(g_msg.payload_hash), apply_opt(g_msg.sender, condenseAxelarNexusExportedV1beta1CrossChainAddress), apply_opt(g_msg.recipient, condenseAxelarNexusExportedV1beta1CrossChainAddress));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageReceived` -
 */
export const expandAxelarNexusV1beta1MessageReceived = ([s_id, atu8_payload_hash, a_sender, a_recipient]) => ({
    id: s_id,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    sender: a_sender && expandAxelarNexusExportedV1beta1CrossChainAddress(a_sender),
    recipient: a_recipient && expandAxelarNexusExportedV1beta1CrossChainAddress(a_recipient),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageProcessing}
 */
export const condenseAxelarNexusV1beta1MessageProcessing = (g_msg) => encodeAxelarNexusV1beta1MessageProcessing(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageProcessing` -
 */
export const expandAxelarNexusV1beta1MessageProcessing = ([s_id]) => ({
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageExecuted}
 */
export const condenseAxelarNexusV1beta1MessageExecuted = (g_msg) => encodeAxelarNexusV1beta1MessageExecuted(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageExecuted` -
 */
export const expandAxelarNexusV1beta1MessageExecuted = ([s_id]) => ({
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageFailed}
 */
export const condenseAxelarNexusV1beta1MessageFailed = (g_msg) => encodeAxelarNexusV1beta1MessageFailed(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageFailed` -
 */
export const expandAxelarNexusV1beta1MessageFailed = ([s_id]) => ({
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1WasmMessageRouted}
 */
export const condenseAxelarNexusV1beta1WasmMessageRouted = (g_msg) => encodeAxelarNexusV1beta1WasmMessageRouted(apply_opt(g_msg.message, condenseAxelarNexusExportedV1beta1WasmMessage));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.WasmMessageRouted` -
 */
export const expandAxelarNexusV1beta1WasmMessageRouted = ([a_message]) => ({
    message: a_message && expandAxelarNexusExportedV1beta1WasmMessage(a_message),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MaintainerState}
 */
export const condenseAxelarNexusV1beta1MaintainerState = (g_msg) => encodeAxelarNexusV1beta1MaintainerState(safe_base64_to_bytes(g_msg.address), apply_opt(g_msg.missing_votes, condenseAxelarUtilsV1beta1Bitmap), apply_opt(g_msg.incorrect_votes, condenseAxelarUtilsV1beta1Bitmap), g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MaintainerState` -
 */
export const expandAxelarNexusV1beta1MaintainerState = ([atu8_address, a_missing_votes, a_incorrect_votes, s_chain]) => ({
    address: safe_bytes_to_base64(atu8_address),
    missing_votes: a_missing_votes && expandAxelarUtilsV1beta1Bitmap(a_missing_votes),
    incorrect_votes: a_incorrect_votes && expandAxelarUtilsV1beta1Bitmap(a_incorrect_votes),
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainState}
 */
export const condenseAxelarNexusV1beta1ChainState = (g_msg) => encodeAxelarNexusV1beta1ChainState(apply_opt(g_msg.chain, condenseAxelarNexusExportedV1beta1Chain), g_msg.activated, map(g_msg.assets, condenseAxelarNexusExportedV1beta1Asset), map(g_msg.maintainer_states, condenseAxelarNexusV1beta1MaintainerState));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainState` - represents the state of a registered blockchain
 */
export const expandAxelarNexusV1beta1ChainState = ([a_chain, , b_activated, , a_assets, a_maintainer_states]) => ({
    chain: a_chain && expandAxelarNexusExportedV1beta1Chain(a_chain),
    activated: !!b_activated,
    assets: a_assets && map(a_assets, expandAxelarNexusExportedV1beta1Asset),
    maintainer_states: a_maintainer_states && map(a_maintainer_states, expandAxelarNexusV1beta1MaintainerState),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1LinkedAddresses}
 */
export const condenseAxelarNexusV1beta1LinkedAddresses = (g_msg) => encodeAxelarNexusV1beta1LinkedAddresses(apply_opt(g_msg.deposit_address, condenseAxelarNexusExportedV1beta1CrossChainAddress), apply_opt(g_msg.recipient_address, condenseAxelarNexusExportedV1beta1CrossChainAddress));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.LinkedAddresses` -
 */
export const expandAxelarNexusV1beta1LinkedAddresses = ([a_deposit_address, a_recipient_address]) => ({
    deposit_address: a_deposit_address && expandAxelarNexusExportedV1beta1CrossChainAddress(a_deposit_address),
    recipient_address: a_recipient_address && expandAxelarNexusExportedV1beta1CrossChainAddress(a_recipient_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RateLimit}
 */
export const condenseAxelarNexusV1beta1RateLimit = (g_msg) => encodeAxelarNexusV1beta1RateLimit(g_msg.chain, slimify_coin(g_msg.limit), parse_duration(g_msg.window));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RateLimit` -
 */
export const expandAxelarNexusV1beta1RateLimit = ([s_chain, a_limit, a_window]) => ({
    chain: s_chain,
    limit: a_limit && expand_coin(a_limit),
    window: expand_duration(a_window),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferEpoch}
 */
export const condenseAxelarNexusV1beta1TransferEpoch = (g_msg) => encodeAxelarNexusV1beta1TransferEpoch(g_msg.chain, slimify_coin(g_msg.amount), g_msg.epoch, JsonToProtoEnumAxelarNexusExportedV1beta1TransferDirection[g_msg.direction]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferEpoch` -
 */
export const expandAxelarNexusV1beta1TransferEpoch = ([s_chain, a_amount, sg_epoch, xc_direction]) => ({
    chain: s_chain,
    amount: a_amount && expand_coin(a_amount),
    epoch: sg_epoch,
    direction: xc_direction >= 0 ? ProtoToJsonEnumAxelarNexusExportedV1beta1TransferDirection[xc_direction] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainMaintainersRequest}
 */
export const condenseAxelarNexusV1beta1ChainMaintainersRequest = (g_msg) => encodeAxelarNexusV1beta1ChainMaintainersRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainMaintainersRequest` - represents a message that queries the chain maintainers for the specified chain
 */
export const expandAxelarNexusV1beta1ChainMaintainersRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainMaintainersResponse}
 */
export const condenseAxelarNexusV1beta1ChainMaintainersResponse = (g_msg) => encodeAxelarNexusV1beta1ChainMaintainersResponse(map(g_msg.maintainers, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainMaintainersResponse` -
 */
export const expandAxelarNexusV1beta1ChainMaintainersResponse = ([a_maintainers]) => ({
    maintainers: map(a_maintainers, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1LatestDepositAddressRequest}
 */
export const condenseAxelarNexusV1beta1LatestDepositAddressRequest = (g_msg) => encodeAxelarNexusV1beta1LatestDepositAddressRequest(g_msg.recipient_addr, g_msg.recipient_chain, g_msg.deposit_chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.LatestDepositAddressRequest` - represents a message that queries a deposit address by recipient address
 */
export const expandAxelarNexusV1beta1LatestDepositAddressRequest = ([sa_recipient_addr, s_recipient_chain, s_deposit_chain]) => ({
    recipient_addr: sa_recipient_addr,
    recipient_chain: s_recipient_chain,
    deposit_chain: s_deposit_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1LatestDepositAddressResponse}
 */
export const condenseAxelarNexusV1beta1LatestDepositAddressResponse = (g_msg) => encodeAxelarNexusV1beta1LatestDepositAddressResponse(g_msg.deposit_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.LatestDepositAddressResponse` -
 */
export const expandAxelarNexusV1beta1LatestDepositAddressResponse = ([sa_deposit_addr]) => ({
    deposit_addr: sa_deposit_addr,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransfersForChainRequest}
 */
export const condenseAxelarNexusV1beta1TransfersForChainRequest = (g_msg) => encodeAxelarNexusV1beta1TransfersForChainRequest(g_msg.chain, JsonToProtoEnumAxelarNexusExportedV1beta1TransferState[g_msg.state], apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransfersForChainRequest` - represents a message that queries the transfers for the specified chain
 */
export const expandAxelarNexusV1beta1TransfersForChainRequest = ([s_chain, xc_state, a_pagination]) => ({
    chain: s_chain,
    state: xc_state >= 0 ? ProtoToJsonEnumAxelarNexusExportedV1beta1TransferState[xc_state] : __UNDEFINED,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransfersForChainResponse}
 */
export const condenseAxelarNexusV1beta1TransfersForChainResponse = (g_msg) => encodeAxelarNexusV1beta1TransfersForChainResponse(map(g_msg.transfers, condenseAxelarNexusExportedV1beta1CrossChainTransfer), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransfersForChainResponse` -
 */
export const expandAxelarNexusV1beta1TransfersForChainResponse = ([a_transfers, a_pagination]) => ({
    transfers: a_transfers && map(a_transfers, expandAxelarNexusExportedV1beta1CrossChainTransfer),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1FeeInfoRequest}
 */
export const condenseAxelarNexusV1beta1FeeInfoRequest = (g_msg) => encodeAxelarNexusV1beta1FeeInfoRequest(g_msg.chain, g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.FeeInfoRequest` - represents a message that queries the transfer fees associated to an asset on a chain
 */
export const expandAxelarNexusV1beta1FeeInfoRequest = ([s_chain, s_asset]) => ({
    chain: s_chain,
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1FeeInfoResponse}
 */
export const condenseAxelarNexusV1beta1FeeInfoResponse = (g_msg) => encodeAxelarNexusV1beta1FeeInfoResponse(apply_opt(g_msg.fee_info, condenseAxelarNexusExportedV1beta1FeeInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.FeeInfoResponse` -
 */
export const expandAxelarNexusV1beta1FeeInfoResponse = ([a_fee_info]) => ({
    fee_info: a_fee_info && expandAxelarNexusExportedV1beta1FeeInfo(a_fee_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferFeeRequest}
 */
export const condenseAxelarNexusV1beta1TransferFeeRequest = (g_msg) => encodeAxelarNexusV1beta1TransferFeeRequest(g_msg.source_chain, g_msg.destination_chain, g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferFeeRequest` - represents a message that queries the fees charged by the network for a cross-chain transfer
 */
export const expandAxelarNexusV1beta1TransferFeeRequest = ([s_source_chain, s_destination_chain, s_amount]) => ({
    source_chain: s_source_chain,
    destination_chain: s_destination_chain,
    amount: s_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferFeeResponse}
 */
export const condenseAxelarNexusV1beta1TransferFeeResponse = (g_msg) => encodeAxelarNexusV1beta1TransferFeeResponse(slimify_coin(g_msg.fee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferFeeResponse` -
 */
export const expandAxelarNexusV1beta1TransferFeeResponse = ([a_fee]) => ({
    fee: a_fee && expand_coin(a_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainsRequest}
 */
export const condenseAxelarNexusV1beta1ChainsRequest = (g_msg) => encodeAxelarNexusV1beta1ChainsRequest(JsonToProtoEnumAxelarNexusV1beta1ChainStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainsRequest` - represents a message that queries the chains registered on the network
 */
export const expandAxelarNexusV1beta1ChainsRequest = ([xc_status]) => ({
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarNexusV1beta1ChainStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainsResponse}
 */
export const condenseAxelarNexusV1beta1ChainsResponse = (g_msg) => encodeAxelarNexusV1beta1ChainsResponse(g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainsResponse` -
 */
export const expandAxelarNexusV1beta1ChainsResponse = ([a_chains]) => ({
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1AssetsRequest}
 */
export const condenseAxelarNexusV1beta1AssetsRequest = (g_msg) => encodeAxelarNexusV1beta1AssetsRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.AssetsRequest` - represents a message that queries the registered assets of a chain
 */
export const expandAxelarNexusV1beta1AssetsRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1AssetsResponse}
 */
export const condenseAxelarNexusV1beta1AssetsResponse = (g_msg) => encodeAxelarNexusV1beta1AssetsResponse(g_msg.assets);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.AssetsResponse` -
 */
export const expandAxelarNexusV1beta1AssetsResponse = ([a_assets]) => ({
    assets: a_assets,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainStateRequest}
 */
export const condenseAxelarNexusV1beta1ChainStateRequest = (g_msg) => encodeAxelarNexusV1beta1ChainStateRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainStateRequest` - represents a message that queries the state of a chain registered on the network
 */
export const expandAxelarNexusV1beta1ChainStateRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainStateResponse}
 */
export const condenseAxelarNexusV1beta1ChainStateResponse = (g_msg) => encodeAxelarNexusV1beta1ChainStateResponse(apply_opt(g_msg.state, condenseAxelarNexusV1beta1ChainState));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainStateResponse` -
 */
export const expandAxelarNexusV1beta1ChainStateResponse = ([a_state]) => ({
    state: a_state && expandAxelarNexusV1beta1ChainState(a_state),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainsByAssetRequest}
 */
export const condenseAxelarNexusV1beta1ChainsByAssetRequest = (g_msg) => encodeAxelarNexusV1beta1ChainsByAssetRequest(g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainsByAssetRequest` - represents a message that queries the chains that support an asset on the network
 */
export const expandAxelarNexusV1beta1ChainsByAssetRequest = ([s_asset]) => ({
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ChainsByAssetResponse}
 */
export const condenseAxelarNexusV1beta1ChainsByAssetResponse = (g_msg) => encodeAxelarNexusV1beta1ChainsByAssetResponse(g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ChainsByAssetResponse` -
 */
export const expandAxelarNexusV1beta1ChainsByAssetResponse = ([a_chains]) => ({
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RecipientAddressRequest}
 */
export const condenseAxelarNexusV1beta1RecipientAddressRequest = (g_msg) => encodeAxelarNexusV1beta1RecipientAddressRequest(g_msg.deposit_addr, g_msg.deposit_chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RecipientAddressRequest` - represents a message that queries the registered recipient address for a given deposit address
 */
export const expandAxelarNexusV1beta1RecipientAddressRequest = ([sa_deposit_addr, s_deposit_chain]) => ({
    deposit_addr: sa_deposit_addr,
    deposit_chain: s_deposit_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1RecipientAddressResponse}
 */
export const condenseAxelarNexusV1beta1RecipientAddressResponse = (g_msg) => encodeAxelarNexusV1beta1RecipientAddressResponse(g_msg.recipient_addr, g_msg.recipient_chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.RecipientAddressResponse` -
 */
export const expandAxelarNexusV1beta1RecipientAddressResponse = ([sa_recipient_addr, s_recipient_chain]) => ({
    recipient_addr: sa_recipient_addr,
    recipient_chain: s_recipient_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferRateLimitRequest}
 */
export const condenseAxelarNexusV1beta1TransferRateLimitRequest = (g_msg) => encodeAxelarNexusV1beta1TransferRateLimitRequest(g_msg.chain, g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferRateLimitRequest` - represents a message that queries the registered transfer rate limit and current transfer amounts for a given chain and asset
 */
export const expandAxelarNexusV1beta1TransferRateLimitRequest = ([s_chain, s_asset]) => ({
    chain: s_chain,
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferRateLimitResponse}
 */
export const condenseAxelarNexusV1beta1TransferRateLimitResponse = (g_msg) => encodeAxelarNexusV1beta1TransferRateLimitResponse(apply_opt(g_msg.transfer_rate_limit, condenseAxelarNexusV1beta1TransferRateLimit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferRateLimitResponse` -
 */
export const expandAxelarNexusV1beta1TransferRateLimitResponse = ([a_transfer_rate_limit]) => ({
    transfer_rate_limit: a_transfer_rate_limit && expandAxelarNexusV1beta1TransferRateLimit(a_transfer_rate_limit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1TransferRateLimit}
 */
export const condenseAxelarNexusV1beta1TransferRateLimit = (g_msg) => encodeAxelarNexusV1beta1TransferRateLimit(safe_base64_to_bytes(g_msg.limit), parse_duration(g_msg.window), safe_base64_to_bytes(g_msg.incoming), safe_base64_to_bytes(g_msg.outgoing), parse_duration(g_msg.time_left));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.TransferRateLimit` -
 */
export const expandAxelarNexusV1beta1TransferRateLimit = ([atu8_limit, a_window, atu8_incoming, atu8_outgoing, a_time_left]) => ({
    limit: safe_bytes_to_base64(atu8_limit),
    window: expand_duration(a_window),
    incoming: safe_bytes_to_base64(atu8_incoming),
    outgoing: safe_bytes_to_base64(atu8_outgoing),
    time_left: expand_duration(a_time_left),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageRequest}
 */
export const condenseAxelarNexusV1beta1MessageRequest = (g_msg) => encodeAxelarNexusV1beta1MessageRequest(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageRequest` -
 */
export const expandAxelarNexusV1beta1MessageRequest = ([s_id]) => ({
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1MessageResponse}
 */
export const condenseAxelarNexusV1beta1MessageResponse = (g_msg) => encodeAxelarNexusV1beta1MessageResponse(apply_opt(g_msg.message, condenseAxelarNexusExportedV1beta1GeneralMessage));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.MessageResponse` -
 */
export const expandAxelarNexusV1beta1MessageResponse = ([a_message]) => ({
    message: a_message && expandAxelarNexusExportedV1beta1GeneralMessage(a_message),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ParamsRequest}
 */
export const condenseAxelarNexusV1beta1ParamsRequest = (g_msg) => encodeAxelarNexusV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarNexusV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1ParamsResponse}
 */
export const condenseAxelarNexusV1beta1ParamsResponse = (g_msg) => encodeAxelarNexusV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarNexusV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.ParamsResponse` -
 */
export const expandAxelarNexusV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarNexusV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1Params}
 */
export const condenseAxelarNexusV1beta1Params = (g_msg) => encodeAxelarNexusV1beta1Params(apply_opt(g_msg.chain_activation_threshold, condenseAxelarUtilsV1beta1Threshold), apply_opt(g_msg.chain_maintainer_missing_vote_threshold, condenseAxelarUtilsV1beta1Threshold), apply_opt(g_msg.chain_maintainer_incorrect_vote_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.chain_maintainer_check_window, safe_base64_to_bytes(g_msg.gateway));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarNexusV1beta1Params = ([a_chain_activation_threshold, a_chain_maintainer_missing_vote_threshold, a_chain_maintainer_incorrect_vote_threshold, n_chain_maintainer_check_window, atu8_gateway]) => ({
    chain_activation_threshold: a_chain_activation_threshold && expandAxelarUtilsV1beta1Threshold(a_chain_activation_threshold),
    chain_maintainer_missing_vote_threshold: a_chain_maintainer_missing_vote_threshold && expandAxelarUtilsV1beta1Threshold(a_chain_maintainer_missing_vote_threshold),
    chain_maintainer_incorrect_vote_threshold: a_chain_maintainer_incorrect_vote_threshold && expandAxelarUtilsV1beta1Threshold(a_chain_maintainer_incorrect_vote_threshold),
    chain_maintainer_check_window: n_chain_maintainer_check_window,
    gateway: safe_bytes_to_base64(atu8_gateway),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarNexusV1beta1GenesisState}
 */
export const condenseAxelarNexusV1beta1GenesisState = (g_msg) => encodeAxelarNexusV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarNexusV1beta1Params), g_msg.nonce, map(g_msg.chains, condenseAxelarNexusExportedV1beta1Chain), map(g_msg.chain_states, condenseAxelarNexusV1beta1ChainState), map(g_msg.linked_addresses, condenseAxelarNexusV1beta1LinkedAddresses), map(g_msg.transfers, condenseAxelarNexusExportedV1beta1CrossChainTransfer), apply_opt(g_msg.fee, condenseAxelarNexusExportedV1beta1TransferFee), map(g_msg.fee_infos, condenseAxelarNexusExportedV1beta1FeeInfo), map(g_msg.rate_limits, condenseAxelarNexusV1beta1RateLimit), map(g_msg.transfer_epochs, condenseAxelarNexusV1beta1TransferEpoch), map(g_msg.messages, condenseAxelarNexusExportedV1beta1GeneralMessage), g_msg.message_nonce);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.nexus.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarNexusV1beta1GenesisState = ([a_params, sg_nonce, a_chains, a_chain_states, a_linked_addresses, a_transfers, a_fee, a_fee_infos, a_rate_limits, a_transfer_epochs, a_messages, sg_message_nonce]) => ({
    params: a_params && expandAxelarNexusV1beta1Params(a_params),
    nonce: sg_nonce,
    chains: a_chains && map(a_chains, expandAxelarNexusExportedV1beta1Chain),
    chain_states: a_chain_states && map(a_chain_states, expandAxelarNexusV1beta1ChainState),
    linked_addresses: a_linked_addresses && map(a_linked_addresses, expandAxelarNexusV1beta1LinkedAddresses),
    transfers: a_transfers && map(a_transfers, expandAxelarNexusExportedV1beta1CrossChainTransfer),
    fee: a_fee && expandAxelarNexusExportedV1beta1TransferFee(a_fee),
    fee_infos: a_fee_infos && map(a_fee_infos, expandAxelarNexusExportedV1beta1FeeInfo),
    rate_limits: a_rate_limits && map(a_rate_limits, expandAxelarNexusV1beta1RateLimit),
    transfer_epochs: a_transfer_epochs && map(a_transfer_epochs, expandAxelarNexusV1beta1TransferEpoch),
    messages: a_messages && map(a_messages, expandAxelarNexusExportedV1beta1GeneralMessage),
    message_nonce: sg_message_nonce,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1RefundMsgRequest}
 */
export const condenseAxelarRewardV1beta1RefundMsgRequest = (g_msg) => encodeAxelarRewardV1beta1RefundMsgRequest(addr_bytes_to_bech32(g_msg.sender), condenseJsonAny(g_msg.inner_message));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.RefundMsgRequest` -
 */
export const expandAxelarRewardV1beta1RefundMsgRequest = ([sa_sender, a_inner_message]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    inner_message: a_inner_message && expandJsonAny(a_inner_message),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1RefundMsgResponse}
 */
export const condenseAxelarRewardV1beta1RefundMsgResponse = (g_msg) => encodeAxelarRewardV1beta1RefundMsgResponse(safe_base64_to_bytes(g_msg.data), g_msg.log);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.RefundMsgResponse` -
 */
export const expandAxelarRewardV1beta1RefundMsgResponse = ([atu8_data, s_log]) => ({
    data: safe_bytes_to_base64(atu8_data),
    log: s_log,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1Pool}
 */
export const condenseAxelarRewardV1beta1Pool = (g_msg) => encodeAxelarRewardV1beta1Pool(g_msg.name, map(g_msg.rewards, condenseAxelarRewardV1beta1PoolReward));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.Pool` -
 */
export const expandAxelarRewardV1beta1Pool = ([s_name, a_rewards]) => ({
    name: s_name,
    rewards: a_rewards && map(a_rewards, expandAxelarRewardV1beta1PoolReward),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1PoolReward}
 */
export const condenseAxelarRewardV1beta1PoolReward = (g_msg) => encodeAxelarRewardV1beta1PoolReward(safe_base64_to_bytes(g_msg.validator), map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.Pool.Reward` -
 */
export const expandAxelarRewardV1beta1PoolReward = ([atu8_validator, a_coins]) => ({
    validator: safe_bytes_to_base64(atu8_validator),
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1Refund}
 */
export const condenseAxelarRewardV1beta1Refund = (g_msg) => encodeAxelarRewardV1beta1Refund(safe_base64_to_bytes(g_msg.payer), map(g_msg.fees, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.Refund` -
 */
export const expandAxelarRewardV1beta1Refund = ([atu8_payer, a_fees]) => ({
    payer: safe_bytes_to_base64(atu8_payer),
    fees: a_fees && map(a_fees, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1InflationRateRequest}
 */
export const condenseAxelarRewardV1beta1InflationRateRequest = (g_msg) => encodeAxelarRewardV1beta1InflationRateRequest(g_msg.validator);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.InflationRateRequest` - represents a message that queries the Axelar specific inflation RPC method. Ideally, this would use ValAddress as the validator field type. However, this makes it awkward for REST-based calls, because it would expect a byte array as part of the url. So, the bech32 encoded address string is used for this request instead.
 */
export const expandAxelarRewardV1beta1InflationRateRequest = ([s_validator]) => ({
    validator: s_validator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1InflationRateResponse}
 */
export const condenseAxelarRewardV1beta1InflationRateResponse = (g_msg) => encodeAxelarRewardV1beta1InflationRateResponse(safe_base64_to_bytes(g_msg.inflation_rate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.InflationRateResponse` -
 */
export const expandAxelarRewardV1beta1InflationRateResponse = ([atu8_inflation_rate]) => ({
    inflation_rate: safe_bytes_to_base64(atu8_inflation_rate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1ParamsRequest}
 */
export const condenseAxelarRewardV1beta1ParamsRequest = (g_msg) => encodeAxelarRewardV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarRewardV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1ParamsResponse}
 */
export const condenseAxelarRewardV1beta1ParamsResponse = (g_msg) => encodeAxelarRewardV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarRewardV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.ParamsResponse` -
 */
export const expandAxelarRewardV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarRewardV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1Params}
 */
export const condenseAxelarRewardV1beta1Params = (g_msg) => encodeAxelarRewardV1beta1Params(safe_base64_to_bytes(g_msg.external_chain_voting_inflation_rate), safe_base64_to_bytes(g_msg.key_mgmt_relative_inflation_rate));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarRewardV1beta1Params = ([atu8_external_chain_voting_inflation_rate, atu8_key_mgmt_relative_inflation_rate]) => ({
    external_chain_voting_inflation_rate: safe_bytes_to_base64(atu8_external_chain_voting_inflation_rate),
    key_mgmt_relative_inflation_rate: safe_bytes_to_base64(atu8_key_mgmt_relative_inflation_rate),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarRewardV1beta1GenesisState}
 */
export const condenseAxelarRewardV1beta1GenesisState = (g_msg) => encodeAxelarRewardV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarRewardV1beta1Params), map(g_msg.pools, condenseAxelarRewardV1beta1Pool));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.reward.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarRewardV1beta1GenesisState = ([a_params, a_pools]) => ({
    params: a_params && expandAxelarRewardV1beta1Params(a_params),
    pools: a_pools && map(a_pools, expandAxelarRewardV1beta1Pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1SetGatewayRequest}
 */
export const condenseAxelarEvmV1beta1SetGatewayRequest = (g_msg) => encodeAxelarEvmV1beta1SetGatewayRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, safe_base64_to_bytes(g_msg.address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.SetGatewayRequest` -
 */
export const expandAxelarEvmV1beta1SetGatewayRequest = ([sa_sender, s_chain, atu8_address]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    address: safe_bytes_to_base64(atu8_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1SetGatewayResponse}
 */
export const condenseAxelarEvmV1beta1SetGatewayResponse = (g_msg) => encodeAxelarEvmV1beta1SetGatewayResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.SetGatewayResponse` -
 */
export const expandAxelarEvmV1beta1SetGatewayResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, safe_base64_to_bytes(g_msg.tx_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxRequest` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxRequest = ([sa_sender, s_chain, atu8_tx_id]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxsRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxsRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxsRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, map(g_msg.tx_ids, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxsRequest` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxsRequest = ([sa_sender, s_chain, a_tx_ids]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    tx_ids: map(a_tx_ids, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxsResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxsResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxsResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmDepositRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmDepositRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmDepositRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, safe_base64_to_bytes(g_msg.tx_id), safe_base64_to_bytes(g_msg.amount), safe_base64_to_bytes(g_msg.burner_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmDepositRequest` - MsgConfirmDeposit represents an erc20 deposit confirmation message
 */
export const expandAxelarEvmV1beta1ConfirmDepositRequest = ([sa_sender, s_chain, atu8_tx_id, atu8_amount, atu8_burner_address]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    amount: safe_bytes_to_base64(atu8_amount),
    burner_address: safe_bytes_to_base64(atu8_burner_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmDepositResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmDepositResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmDepositResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmDepositResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmDepositResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmTokenRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmTokenRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmTokenRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, safe_base64_to_bytes(g_msg.tx_id), apply_opt(g_msg.asset, condenseAxelarEvmV1beta1Asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmTokenRequest` - MsgConfirmToken represents a token deploy confirmation message
 */
export const expandAxelarEvmV1beta1ConfirmTokenRequest = ([sa_sender, s_chain, atu8_tx_id, a_asset]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    asset: a_asset && expandAxelarEvmV1beta1Asset(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Asset}
 */
export const condenseAxelarEvmV1beta1Asset = (g_msg) => encodeAxelarEvmV1beta1Asset(g_msg.chain, g_msg.name);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Asset` -
 */
export const expandAxelarEvmV1beta1Asset = ([s_chain, s_name]) => ({
    chain: s_chain,
    name: s_name,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmTokenResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmTokenResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmTokenResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmTokenResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmTokenResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmTransferKeyRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmTransferKeyRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmTransferKeyRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, safe_base64_to_bytes(g_msg.tx_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmTransferKeyRequest` -
 */
export const expandAxelarEvmV1beta1ConfirmTransferKeyRequest = ([sa_sender, s_chain, atu8_tx_id]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmTransferKeyResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmTransferKeyResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmTransferKeyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmTransferKeyResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmTransferKeyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1LinkRequest}
 */
export const condenseAxelarEvmV1beta1LinkRequest = (g_msg) => encodeAxelarEvmV1beta1LinkRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.recipient_addr, g_msg.asset, g_msg.recipient_chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.LinkRequest` - MsgLink represents the message that links a cross chain address to a burner address
 */
export const expandAxelarEvmV1beta1LinkRequest = ([sa_sender, s_chain, sa_recipient_addr, s_asset, s_recipient_chain]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    recipient_addr: sa_recipient_addr,
    asset: s_asset,
    recipient_chain: s_recipient_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1LinkResponse}
 */
export const condenseAxelarEvmV1beta1LinkResponse = (g_msg) => encodeAxelarEvmV1beta1LinkResponse(g_msg.deposit_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.LinkResponse` -
 */
export const expandAxelarEvmV1beta1LinkResponse = ([sa_deposit_addr]) => ({
    deposit_addr: sa_deposit_addr,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateBurnTokensRequest}
 */
export const condenseAxelarEvmV1beta1CreateBurnTokensRequest = (g_msg) => encodeAxelarEvmV1beta1CreateBurnTokensRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateBurnTokensRequest` - represents the message to create commands to burn tokens with AxelarGateway
 */
export const expandAxelarEvmV1beta1CreateBurnTokensRequest = ([sa_sender, s_chain]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateBurnTokensResponse}
 */
export const condenseAxelarEvmV1beta1CreateBurnTokensResponse = (g_msg) => encodeAxelarEvmV1beta1CreateBurnTokensResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateBurnTokensResponse` -
 */
export const expandAxelarEvmV1beta1CreateBurnTokensResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateDeployTokenRequest}
 */
export const condenseAxelarEvmV1beta1CreateDeployTokenRequest = (g_msg) => encodeAxelarEvmV1beta1CreateDeployTokenRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, apply_opt(g_msg.asset, condenseAxelarEvmV1beta1Asset), apply_opt(g_msg.token_details, condenseAxelarEvmV1beta1TokenDetails), safe_base64_to_bytes(g_msg.address), g_msg.daily_mint_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateDeployTokenRequest` - represents the message to create a deploy token command for AxelarGateway
 */
export const expandAxelarEvmV1beta1CreateDeployTokenRequest = ([sa_sender, s_chain, a_asset, a_token_details, , atu8_address, s_daily_mint_limit]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    asset: a_asset && expandAxelarEvmV1beta1Asset(a_asset),
    token_details: a_token_details && expandAxelarEvmV1beta1TokenDetails(a_token_details),
    address: safe_bytes_to_base64(atu8_address),
    daily_mint_limit: s_daily_mint_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TokenDetails}
 */
export const condenseAxelarEvmV1beta1TokenDetails = (g_msg) => encodeAxelarEvmV1beta1TokenDetails(g_msg.token_name, g_msg.symbol, g_msg.decimals, safe_base64_to_bytes(g_msg.capacity));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TokenDetails` -
 */
export const expandAxelarEvmV1beta1TokenDetails = ([s_token_name, s_symbol, n_decimals, atu8_capacity]) => ({
    token_name: s_token_name,
    symbol: s_symbol,
    decimals: n_decimals,
    capacity: safe_bytes_to_base64(atu8_capacity),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateDeployTokenResponse}
 */
export const condenseAxelarEvmV1beta1CreateDeployTokenResponse = (g_msg) => encodeAxelarEvmV1beta1CreateDeployTokenResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateDeployTokenResponse` -
 */
export const expandAxelarEvmV1beta1CreateDeployTokenResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreatePendingTransfersRequest}
 */
export const condenseAxelarEvmV1beta1CreatePendingTransfersRequest = (g_msg) => encodeAxelarEvmV1beta1CreatePendingTransfersRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreatePendingTransfersRequest` - represents a message to trigger the creation of commands handling all pending transfers
 */
export const expandAxelarEvmV1beta1CreatePendingTransfersRequest = ([sa_sender, s_chain]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreatePendingTransfersResponse}
 */
export const condenseAxelarEvmV1beta1CreatePendingTransfersResponse = (g_msg) => encodeAxelarEvmV1beta1CreatePendingTransfersResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreatePendingTransfersResponse` -
 */
export const expandAxelarEvmV1beta1CreatePendingTransfersResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateTransferOwnershipRequest}
 */
export const condenseAxelarEvmV1beta1CreateTransferOwnershipRequest = (g_msg) => encodeAxelarEvmV1beta1CreateTransferOwnershipRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateTransferOwnershipRequest` -
 */
export const expandAxelarEvmV1beta1CreateTransferOwnershipRequest = ([sa_sender, s_chain, si_key]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateTransferOwnershipResponse}
 */
export const condenseAxelarEvmV1beta1CreateTransferOwnershipResponse = (g_msg) => encodeAxelarEvmV1beta1CreateTransferOwnershipResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateTransferOwnershipResponse` -
 */
export const expandAxelarEvmV1beta1CreateTransferOwnershipResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateTransferOperatorshipRequest}
 */
export const condenseAxelarEvmV1beta1CreateTransferOperatorshipRequest = (g_msg) => encodeAxelarEvmV1beta1CreateTransferOperatorshipRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateTransferOperatorshipRequest` -
 */
export const expandAxelarEvmV1beta1CreateTransferOperatorshipRequest = ([sa_sender, s_chain, si_key]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CreateTransferOperatorshipResponse}
 */
export const condenseAxelarEvmV1beta1CreateTransferOperatorshipResponse = (g_msg) => encodeAxelarEvmV1beta1CreateTransferOperatorshipResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CreateTransferOperatorshipResponse` -
 */
export const expandAxelarEvmV1beta1CreateTransferOperatorshipResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1SignCommandsRequest}
 */
export const condenseAxelarEvmV1beta1SignCommandsRequest = (g_msg) => encodeAxelarEvmV1beta1SignCommandsRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.SignCommandsRequest` -
 */
export const expandAxelarEvmV1beta1SignCommandsRequest = ([sa_sender, s_chain]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1SignCommandsResponse}
 */
export const condenseAxelarEvmV1beta1SignCommandsResponse = (g_msg) => encodeAxelarEvmV1beta1SignCommandsResponse(safe_base64_to_bytes(g_msg.batched_commands_id), g_msg.command_count);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.SignCommandsResponse` -
 */
export const expandAxelarEvmV1beta1SignCommandsResponse = ([atu8_batched_commands_id, n_command_count]) => ({
    batched_commands_id: safe_bytes_to_base64(atu8_batched_commands_id),
    command_count: n_command_count,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1AddChainRequest}
 */
export const condenseAxelarEvmV1beta1AddChainRequest = (g_msg) => encodeAxelarEvmV1beta1AddChainRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.name, JsonToProtoEnumAxelarTssExportedV1beta1KeyType[g_msg.key_type], safe_base64_to_bytes(g_msg.params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.AddChainRequest` -
 */
export const expandAxelarEvmV1beta1AddChainRequest = ([sa_sender, s_name, , xc_key_type, atu8_params]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    name: s_name,
    key_type: xc_key_type >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyType[xc_key_type] : __UNDEFINED,
    params: safe_bytes_to_base64(atu8_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1AddChainResponse}
 */
export const condenseAxelarEvmV1beta1AddChainResponse = (g_msg) => encodeAxelarEvmV1beta1AddChainResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.AddChainResponse` -
 */
export const expandAxelarEvmV1beta1AddChainResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1RetryFailedEventRequest}
 */
export const condenseAxelarEvmV1beta1RetryFailedEventRequest = (g_msg) => encodeAxelarEvmV1beta1RetryFailedEventRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, g_msg.event_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.RetryFailedEventRequest` -
 */
export const expandAxelarEvmV1beta1RetryFailedEventRequest = ([sa_sender, s_chain, si_event]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    event_id: si_event,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1RetryFailedEventResponse}
 */
export const condenseAxelarEvmV1beta1RetryFailedEventResponse = (g_msg) => encodeAxelarEvmV1beta1RetryFailedEventResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.RetryFailedEventResponse` -
 */
export const expandAxelarEvmV1beta1RetryFailedEventResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PollFailed}
 */
export const condenseAxelarEvmV1beta1PollFailed = (g_msg) => encodeAxelarEvmV1beta1PollFailed(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, g_msg.poll_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PollFailed` -
 */
export const expandAxelarEvmV1beta1PollFailed = ([atu8_tx_id, s_chain, sg_poll_id]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    poll_id: sg_poll_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PollExpired}
 */
export const condenseAxelarEvmV1beta1PollExpired = (g_msg) => encodeAxelarEvmV1beta1PollExpired(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, g_msg.poll_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PollExpired` -
 */
export const expandAxelarEvmV1beta1PollExpired = ([atu8_tx_id, s_chain, sg_poll_id]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    poll_id: sg_poll_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PollCompleted}
 */
export const condenseAxelarEvmV1beta1PollCompleted = (g_msg) => encodeAxelarEvmV1beta1PollCompleted(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, g_msg.poll_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PollCompleted` -
 */
export const expandAxelarEvmV1beta1PollCompleted = ([atu8_tx_id, s_chain, sg_poll_id]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    poll_id: sg_poll_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1NoEventsConfirmed}
 */
export const condenseAxelarEvmV1beta1NoEventsConfirmed = (g_msg) => encodeAxelarEvmV1beta1NoEventsConfirmed(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, g_msg.poll_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.NoEventsConfirmed` -
 */
export const expandAxelarEvmV1beta1NoEventsConfirmed = ([atu8_tx_id, s_chain, sg_poll_id]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    poll_id: sg_poll_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmKeyTransferStarted}
 */
export const condenseAxelarEvmV1beta1ConfirmKeyTransferStarted = (g_msg) => encodeAxelarEvmV1beta1ConfirmKeyTransferStarted(g_msg.chain, safe_base64_to_bytes(g_msg.tx_id), safe_base64_to_bytes(g_msg.gateway_address), g_msg.confirmation_height, apply_opt(g_msg.participants, condenseAxelarVoteExportedV1beta1PollParticipants));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmKeyTransferStarted` -
 */
export const expandAxelarEvmV1beta1ConfirmKeyTransferStarted = ([s_chain, atu8_tx_id, atu8_gateway_address, sg_confirmation_height, a_participants]) => ({
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    gateway_address: safe_bytes_to_base64(atu8_gateway_address),
    confirmation_height: sg_confirmation_height,
    participants: a_participants && expandAxelarVoteExportedV1beta1PollParticipants(a_participants),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxStarted}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxStarted = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxStarted(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, safe_base64_to_bytes(g_msg.gateway_address), g_msg.confirmation_height, apply_opt(g_msg.participants, condenseAxelarVoteExportedV1beta1PollParticipants));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxStarted` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxStarted = ([atu8_tx_id, s_chain, atu8_gateway_address, sg_confirmation_height, a_participants]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    gateway_address: safe_bytes_to_base64(atu8_gateway_address),
    confirmation_height: sg_confirmation_height,
    participants: a_participants && expandAxelarVoteExportedV1beta1PollParticipants(a_participants),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PollMapping}
 */
export const condenseAxelarEvmV1beta1PollMapping = (g_msg) => encodeAxelarEvmV1beta1PollMapping(safe_base64_to_bytes(g_msg.tx_id), g_msg.poll_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PollMapping` -
 */
export const expandAxelarEvmV1beta1PollMapping = ([atu8_tx_id, sg_poll_id]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    poll_id: sg_poll_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmGatewayTxsStarted}
 */
export const condenseAxelarEvmV1beta1ConfirmGatewayTxsStarted = (g_msg) => encodeAxelarEvmV1beta1ConfirmGatewayTxsStarted(map(g_msg.poll_mappings, condenseAxelarEvmV1beta1PollMapping), g_msg.chain, safe_base64_to_bytes(g_msg.gateway_address), g_msg.confirmation_height, map(g_msg.participants, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmGatewayTxsStarted` -
 */
export const expandAxelarEvmV1beta1ConfirmGatewayTxsStarted = ([a_poll_mappings, s_chain, atu8_gateway_address, sg_confirmation_height, a_participants]) => ({
    poll_mappings: a_poll_mappings && map(a_poll_mappings, expandAxelarEvmV1beta1PollMapping),
    chain: s_chain,
    gateway_address: safe_bytes_to_base64(atu8_gateway_address),
    confirmation_height: sg_confirmation_height,
    participants: map(a_participants, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmDepositStarted}
 */
export const condenseAxelarEvmV1beta1ConfirmDepositStarted = (g_msg) => encodeAxelarEvmV1beta1ConfirmDepositStarted(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, safe_base64_to_bytes(g_msg.deposit_address), safe_base64_to_bytes(g_msg.token_address), g_msg.confirmation_height, apply_opt(g_msg.participants, condenseAxelarVoteExportedV1beta1PollParticipants), g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmDepositStarted` -
 */
export const expandAxelarEvmV1beta1ConfirmDepositStarted = ([atu8_tx_id, s_chain, atu8_deposit_address, atu8_token_address, sg_confirmation_height, a_participants, s_asset]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    deposit_address: safe_bytes_to_base64(atu8_deposit_address),
    token_address: safe_bytes_to_base64(atu8_token_address),
    confirmation_height: sg_confirmation_height,
    participants: a_participants && expandAxelarVoteExportedV1beta1PollParticipants(a_participants),
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmTokenStarted}
 */
export const condenseAxelarEvmV1beta1ConfirmTokenStarted = (g_msg) => encodeAxelarEvmV1beta1ConfirmTokenStarted(safe_base64_to_bytes(g_msg.tx_id), g_msg.chain, safe_base64_to_bytes(g_msg.gateway_address), safe_base64_to_bytes(g_msg.token_address), apply_opt(g_msg.token_details, condenseAxelarEvmV1beta1TokenDetails), g_msg.confirmation_height, apply_opt(g_msg.participants, condenseAxelarVoteExportedV1beta1PollParticipants));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmTokenStarted` -
 */
export const expandAxelarEvmV1beta1ConfirmTokenStarted = ([atu8_tx_id, s_chain, atu8_gateway_address, atu8_token_address, a_token_details, sg_confirmation_height, a_participants]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    chain: s_chain,
    gateway_address: safe_bytes_to_base64(atu8_gateway_address),
    token_address: safe_bytes_to_base64(atu8_token_address),
    token_details: a_token_details && expandAxelarEvmV1beta1TokenDetails(a_token_details),
    confirmation_height: sg_confirmation_height,
    participants: a_participants && expandAxelarVoteExportedV1beta1PollParticipants(a_participants),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ChainAdded}
 */
export const condenseAxelarEvmV1beta1ChainAdded = (g_msg) => encodeAxelarEvmV1beta1ChainAdded(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ChainAdded` -
 */
export const expandAxelarEvmV1beta1ChainAdded = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandBatchSigned}
 */
export const condenseAxelarEvmV1beta1CommandBatchSigned = (g_msg) => encodeAxelarEvmV1beta1CommandBatchSigned(g_msg.chain, safe_base64_to_bytes(g_msg.command_batch_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandBatchSigned` -
 */
export const expandAxelarEvmV1beta1CommandBatchSigned = ([, s_chain, atu8_command_batch_id]) => ({
    chain: s_chain,
    command_batch_id: safe_bytes_to_base64(atu8_command_batch_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandBatchAborted}
 */
export const condenseAxelarEvmV1beta1CommandBatchAborted = (g_msg) => encodeAxelarEvmV1beta1CommandBatchAborted(g_msg.chain, safe_base64_to_bytes(g_msg.command_batch_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandBatchAborted` -
 */
export const expandAxelarEvmV1beta1CommandBatchAborted = ([, s_chain, atu8_command_batch_id]) => ({
    chain: s_chain,
    command_batch_id: safe_bytes_to_base64(atu8_command_batch_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EVMEventConfirmed}
 */
export const condenseAxelarEvmV1beta1EVMEventConfirmed = (g_msg) => encodeAxelarEvmV1beta1EVMEventConfirmed(g_msg.chain, g_msg.event_id, g_msg.type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EVMEventConfirmed` -
 */
export const expandAxelarEvmV1beta1EVMEventConfirmed = ([s_chain, si_event, s_type]) => ({
    chain: s_chain,
    event_id: si_event,
    type: s_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EVMEventCompleted}
 */
export const condenseAxelarEvmV1beta1EVMEventCompleted = (g_msg) => encodeAxelarEvmV1beta1EVMEventCompleted(g_msg.chain, g_msg.event_id, g_msg.type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EVMEventCompleted` -
 */
export const expandAxelarEvmV1beta1EVMEventCompleted = ([s_chain, si_event, s_type]) => ({
    chain: s_chain,
    event_id: si_event,
    type: s_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EVMEventFailed}
 */
export const condenseAxelarEvmV1beta1EVMEventFailed = (g_msg) => encodeAxelarEvmV1beta1EVMEventFailed(g_msg.chain, g_msg.event_id, g_msg.type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EVMEventFailed` -
 */
export const expandAxelarEvmV1beta1EVMEventFailed = ([s_chain, si_event, s_type]) => ({
    chain: s_chain,
    event_id: si_event,
    type: s_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EVMEventRetryFailed}
 */
export const condenseAxelarEvmV1beta1EVMEventRetryFailed = (g_msg) => encodeAxelarEvmV1beta1EVMEventRetryFailed(g_msg.chain, g_msg.event_id, g_msg.type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EVMEventRetryFailed` -
 */
export const expandAxelarEvmV1beta1EVMEventRetryFailed = ([s_chain, si_event, s_type]) => ({
    chain: s_chain,
    event_id: si_event,
    type: s_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ContractCallApproved}
 */
export const condenseAxelarEvmV1beta1ContractCallApproved = (g_msg) => encodeAxelarEvmV1beta1ContractCallApproved(g_msg.chain, g_msg.event_id, safe_base64_to_bytes(g_msg.command_id), g_msg.sender, g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ContractCallApproved` -
 */
export const expandAxelarEvmV1beta1ContractCallApproved = ([s_chain, si_event, atu8_command_id, sa_sender, s_destination_chain, sa_contract, atu8_payload_hash]) => ({
    chain: s_chain,
    event_id: si_event,
    command_id: safe_bytes_to_base64(atu8_command_id),
    sender: sa_sender,
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ContractCallFailed}
 */
export const condenseAxelarEvmV1beta1ContractCallFailed = (g_msg) => encodeAxelarEvmV1beta1ContractCallFailed(g_msg.chain, g_msg.msg_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ContractCallFailed` -
 */
export const expandAxelarEvmV1beta1ContractCallFailed = ([s_chain, si_msg]) => ({
    chain: s_chain,
    msg_id: si_msg,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ContractCallWithMintApproved}
 */
export const condenseAxelarEvmV1beta1ContractCallWithMintApproved = (g_msg) => encodeAxelarEvmV1beta1ContractCallWithMintApproved(g_msg.chain, g_msg.event_id, safe_base64_to_bytes(g_msg.command_id), g_msg.sender, g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload_hash), slimify_coin(g_msg.asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ContractCallWithMintApproved` -
 */
export const expandAxelarEvmV1beta1ContractCallWithMintApproved = ([s_chain, si_event, atu8_command_id, sa_sender, s_destination_chain, sa_contract, atu8_payload_hash, a_asset]) => ({
    chain: s_chain,
    event_id: si_event,
    command_id: safe_bytes_to_base64(atu8_command_id),
    sender: sa_sender,
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    asset: a_asset && expand_coin(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TokenSent}
 */
export const condenseAxelarEvmV1beta1TokenSent = (g_msg) => encodeAxelarEvmV1beta1TokenSent(g_msg.chain, g_msg.event_id, g_msg.transfer_id, g_msg.sender, g_msg.destination_chain, g_msg.destination_address, slimify_coin(g_msg.asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TokenSent` -
 */
export const expandAxelarEvmV1beta1TokenSent = ([s_chain, si_event, sg_transfer_id, sa_sender, s_destination_chain, sa_destination, a_asset]) => ({
    chain: s_chain,
    event_id: si_event,
    transfer_id: sg_transfer_id,
    sender: sa_sender,
    destination_chain: s_destination_chain,
    destination_address: sa_destination,
    asset: a_asset && expand_coin(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1MintCommand}
 */
export const condenseAxelarEvmV1beta1MintCommand = (g_msg) => encodeAxelarEvmV1beta1MintCommand(g_msg.chain, g_msg.transfer_id, safe_base64_to_bytes(g_msg.command_id), g_msg.destination_chain, g_msg.destination_address, slimify_coin(g_msg.asset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.MintCommand` -
 */
export const expandAxelarEvmV1beta1MintCommand = ([s_chain, sg_transfer_id, atu8_command_id, s_destination_chain, sa_destination, a_asset]) => ({
    chain: s_chain,
    transfer_id: sg_transfer_id,
    command_id: safe_bytes_to_base64(atu8_command_id),
    destination_chain: s_destination_chain,
    destination_address: sa_destination,
    asset: a_asset && expand_coin(a_asset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BurnCommand}
 */
export const condenseAxelarEvmV1beta1BurnCommand = (g_msg) => encodeAxelarEvmV1beta1BurnCommand(g_msg.chain, safe_base64_to_bytes(g_msg.command_id), g_msg.destination_chain, g_msg.deposit_address, g_msg.asset);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BurnCommand` -
 */
export const expandAxelarEvmV1beta1BurnCommand = ([s_chain, atu8_command_id, s_destination_chain, sa_deposit, s_asset]) => ({
    chain: s_chain,
    command_id: safe_bytes_to_base64(atu8_command_id),
    destination_chain: s_destination_chain,
    deposit_address: sa_deposit,
    asset: s_asset,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1VoteEvents}
 */
export const condenseAxelarEvmV1beta1VoteEvents = (g_msg) => encodeAxelarEvmV1beta1VoteEvents(g_msg.chain, map(g_msg.events, condenseAxelarEvmV1beta1Event));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.VoteEvents` -
 */
export const expandAxelarEvmV1beta1VoteEvents = ([s_chain, a_events]) => ({
    chain: s_chain,
    events: a_events && map(a_events, expandAxelarEvmV1beta1Event),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Event}
 */
export const condenseAxelarEvmV1beta1Event = (g_msg) => encodeAxelarEvmV1beta1Event(g_msg.chain, safe_base64_to_bytes(g_msg.tx_id), g_msg.index, JsonToProtoEnumAxelarEvmV1beta1EventStatus[g_msg.status], apply_opt(g_msg.token_sent, condenseAxelarEvmV1beta1EventTokenSent), apply_opt(g_msg.contract_call, condenseAxelarEvmV1beta1EventContractCall), apply_opt(g_msg.contract_call_with_token, condenseAxelarEvmV1beta1EventContractCallWithToken), apply_opt(g_msg.transfer, condenseAxelarEvmV1beta1EventTransfer), apply_opt(g_msg.token_deployed, condenseAxelarEvmV1beta1EventTokenDeployed), apply_opt(g_msg.multisig_ownership_transferred, condenseAxelarEvmV1beta1EventMultisigOwnershipTransferred), apply_opt(g_msg.multisig_operatorship_transferred, condenseAxelarEvmV1beta1EventMultisigOperatorshipTransferred));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Event` -
 */
export const expandAxelarEvmV1beta1Event = ([s_chain, atu8_tx_id, sg_index, xc_status, a_token_sent, a_contract_call, a_contract_call_with_token, a_transfer, a_token_deployed, a_multisig_ownership_transferred, a_multisig_operatorship_transferred]) => ({
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    index: sg_index,
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1EventStatus[xc_status] : __UNDEFINED,
    token_sent: a_token_sent && expandAxelarEvmV1beta1EventTokenSent(a_token_sent),
    contract_call: a_contract_call && expandAxelarEvmV1beta1EventContractCall(a_contract_call),
    contract_call_with_token: a_contract_call_with_token && expandAxelarEvmV1beta1EventContractCallWithToken(a_contract_call_with_token),
    transfer: a_transfer && expandAxelarEvmV1beta1EventTransfer(a_transfer),
    token_deployed: a_token_deployed && expandAxelarEvmV1beta1EventTokenDeployed(a_token_deployed),
    multisig_ownership_transferred: a_multisig_ownership_transferred && expandAxelarEvmV1beta1EventMultisigOwnershipTransferred(a_multisig_ownership_transferred),
    multisig_operatorship_transferred: a_multisig_operatorship_transferred && expandAxelarEvmV1beta1EventMultisigOperatorshipTransferred(a_multisig_operatorship_transferred),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventTokenSent}
 */
export const condenseAxelarEvmV1beta1EventTokenSent = (g_msg) => encodeAxelarEvmV1beta1EventTokenSent(addr_bytes_to_bech32(g_msg.sender), g_msg.destination_chain, g_msg.destination_address, g_msg.symbol, safe_base64_to_bytes(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventTokenSent` -
 */
export const expandAxelarEvmV1beta1EventTokenSent = ([sa_sender, s_destination_chain, sa_destination, s_symbol, atu8_amount]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    destination_chain: s_destination_chain,
    destination_address: sa_destination,
    symbol: s_symbol,
    amount: safe_bytes_to_base64(atu8_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventContractCall}
 */
export const condenseAxelarEvmV1beta1EventContractCall = (g_msg) => encodeAxelarEvmV1beta1EventContractCall(addr_bytes_to_bech32(g_msg.sender), g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload_hash));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventContractCall` -
 */
export const expandAxelarEvmV1beta1EventContractCall = ([sa_sender, s_destination_chain, sa_contract, atu8_payload_hash]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventContractCallWithToken}
 */
export const condenseAxelarEvmV1beta1EventContractCallWithToken = (g_msg) => encodeAxelarEvmV1beta1EventContractCallWithToken(addr_bytes_to_bech32(g_msg.sender), g_msg.destination_chain, g_msg.contract_address, safe_base64_to_bytes(g_msg.payload_hash), g_msg.symbol, safe_base64_to_bytes(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventContractCallWithToken` -
 */
export const expandAxelarEvmV1beta1EventContractCallWithToken = ([sa_sender, s_destination_chain, sa_contract, atu8_payload_hash, s_symbol, atu8_amount]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    destination_chain: s_destination_chain,
    contract_address: sa_contract,
    payload_hash: safe_bytes_to_base64(atu8_payload_hash),
    symbol: s_symbol,
    amount: safe_bytes_to_base64(atu8_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventTransfer}
 */
export const condenseAxelarEvmV1beta1EventTransfer = (g_msg) => encodeAxelarEvmV1beta1EventTransfer(safe_base64_to_bytes(g_msg.to), safe_base64_to_bytes(g_msg.amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventTransfer` -
 */
export const expandAxelarEvmV1beta1EventTransfer = ([atu8_to, atu8_amount]) => ({
    to: safe_bytes_to_base64(atu8_to),
    amount: safe_bytes_to_base64(atu8_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventTokenDeployed}
 */
export const condenseAxelarEvmV1beta1EventTokenDeployed = (g_msg) => encodeAxelarEvmV1beta1EventTokenDeployed(g_msg.symbol, safe_base64_to_bytes(g_msg.token_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventTokenDeployed` -
 */
export const expandAxelarEvmV1beta1EventTokenDeployed = ([s_symbol, atu8_token_address]) => ({
    symbol: s_symbol,
    token_address: safe_bytes_to_base64(atu8_token_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventMultisigOwnershipTransferred}
 */
export const condenseAxelarEvmV1beta1EventMultisigOwnershipTransferred = (g_msg) => encodeAxelarEvmV1beta1EventMultisigOwnershipTransferred(map(g_msg.pre_owners, safe_base64_to_bytes), safe_base64_to_bytes(g_msg.prev_threshold), map(g_msg.new_owners, safe_base64_to_bytes), safe_base64_to_bytes(g_msg.new_threshold));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventMultisigOwnershipTransferred` -
 */
export const expandAxelarEvmV1beta1EventMultisigOwnershipTransferred = ([a_pre_owners, atu8_prev_threshold, a_new_owners, atu8_new_threshold]) => ({
    pre_owners: map(a_pre_owners, safe_bytes_to_base64),
    prev_threshold: safe_bytes_to_base64(atu8_prev_threshold),
    new_owners: map(a_new_owners, safe_bytes_to_base64),
    new_threshold: safe_bytes_to_base64(atu8_new_threshold),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventMultisigOperatorshipTransferred}
 */
export const condenseAxelarEvmV1beta1EventMultisigOperatorshipTransferred = (g_msg) => encodeAxelarEvmV1beta1EventMultisigOperatorshipTransferred(map(g_msg.new_operators, safe_base64_to_bytes), safe_base64_to_bytes(g_msg.new_threshold), map(g_msg.new_weights, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventMultisigOperatorshipTransferred` -
 */
export const expandAxelarEvmV1beta1EventMultisigOperatorshipTransferred = ([, , a_new_operators, atu8_new_threshold, a_new_weights]) => ({
    new_operators: map(a_new_operators, safe_bytes_to_base64),
    new_threshold: safe_bytes_to_base64(atu8_new_threshold),
    new_weights: map(a_new_weights, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1NetworkInfo}
 */
export const condenseAxelarEvmV1beta1NetworkInfo = (g_msg) => encodeAxelarEvmV1beta1NetworkInfo(g_msg.name, safe_base64_to_bytes(g_msg.id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.NetworkInfo` - describes information about a network
 */
export const expandAxelarEvmV1beta1NetworkInfo = ([s_name, atu8_id]) => ({
    name: s_name,
    id: safe_bytes_to_base64(atu8_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BurnerInfo}
 */
export const condenseAxelarEvmV1beta1BurnerInfo = (g_msg) => encodeAxelarEvmV1beta1BurnerInfo(safe_base64_to_bytes(g_msg.burner_address), safe_base64_to_bytes(g_msg.token_address), g_msg.destination_chain, g_msg.symbol, g_msg.asset, safe_base64_to_bytes(g_msg.salt));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BurnerInfo` - describes information required to burn token at an burner address that is deposited by an user
 */
export const expandAxelarEvmV1beta1BurnerInfo = ([atu8_burner_address, atu8_token_address, s_destination_chain, s_symbol, s_asset, atu8_salt]) => ({
    burner_address: safe_bytes_to_base64(atu8_burner_address),
    token_address: safe_bytes_to_base64(atu8_token_address),
    destination_chain: s_destination_chain,
    symbol: s_symbol,
    asset: s_asset,
    salt: safe_bytes_to_base64(atu8_salt),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ERC20Deposit}
 */
export const condenseAxelarEvmV1beta1ERC20Deposit = (g_msg) => encodeAxelarEvmV1beta1ERC20Deposit(safe_base64_to_bytes(g_msg.tx_id), safe_base64_to_bytes(g_msg.amount), g_msg.asset, g_msg.destination_chain, safe_base64_to_bytes(g_msg.burner_address), g_msg.log_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ERC20Deposit` - contains information for an ERC20 deposit
 */
export const expandAxelarEvmV1beta1ERC20Deposit = ([atu8_tx_id, atu8_amount, s_asset, s_destination_chain, atu8_burner_address, sg_log_index]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    amount: safe_bytes_to_base64(atu8_amount),
    asset: s_asset,
    destination_chain: s_destination_chain,
    burner_address: safe_bytes_to_base64(atu8_burner_address),
    log_index: sg_log_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ERC20TokenMetadata}
 */
export const condenseAxelarEvmV1beta1ERC20TokenMetadata = (g_msg) => encodeAxelarEvmV1beta1ERC20TokenMetadata(g_msg.asset, safe_base64_to_bytes(g_msg.chain_id), apply_opt(g_msg.details, condenseAxelarEvmV1beta1TokenDetails), g_msg.token_address, g_msg.tx_hash, JsonToProtoEnumAxelarEvmV1beta1Status[g_msg.status], g_msg.is_external, safe_base64_to_bytes(g_msg.burner_code));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ERC20TokenMetadata` - describes information about an ERC20 token
 */
export const expandAxelarEvmV1beta1ERC20TokenMetadata = ([s_asset, atu8_chain_id, a_details, sa_token, s_tx_hash, , xc_status, b_is_external, atu8_burner_code]) => ({
    asset: s_asset,
    chain_id: safe_bytes_to_base64(atu8_chain_id),
    details: a_details && expandAxelarEvmV1beta1TokenDetails(a_details),
    token_address: sa_token,
    tx_hash: s_tx_hash,
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1Status[xc_status] : __UNDEFINED,
    is_external: !!b_is_external,
    burner_code: safe_bytes_to_base64(atu8_burner_code),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TransactionMetadata}
 */
export const condenseAxelarEvmV1beta1TransactionMetadata = (g_msg) => encodeAxelarEvmV1beta1TransactionMetadata(safe_base64_to_bytes(g_msg.raw_tx), safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TransactionMetadata` -
 */
export const expandAxelarEvmV1beta1TransactionMetadata = ([atu8_raw_tx, atu8_pub_key]) => ({
    raw_tx: safe_bytes_to_base64(atu8_raw_tx),
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Command}
 */
export const condenseAxelarEvmV1beta1Command = (g_msg) => encodeAxelarEvmV1beta1Command(safe_base64_to_bytes(g_msg.id), g_msg.command, safe_base64_to_bytes(g_msg.params), g_msg.key_id, g_msg.max_gas_cost, JsonToProtoEnumAxelarEvmV1beta1CommandType[g_msg.type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Command` -
 */
export const expandAxelarEvmV1beta1Command = ([atu8_id, s_command, atu8_params, si_key, n_max_gas_cost, xc_type]) => ({
    id: safe_bytes_to_base64(atu8_id),
    command: s_command,
    params: safe_bytes_to_base64(atu8_params),
    key_id: si_key,
    max_gas_cost: n_max_gas_cost,
    type: xc_type >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1CommandType[xc_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandBatchMetadata}
 */
export const condenseAxelarEvmV1beta1CommandBatchMetadata = (g_msg) => encodeAxelarEvmV1beta1CommandBatchMetadata(safe_base64_to_bytes(g_msg.id), map(g_msg.command_ids, safe_base64_to_bytes), safe_base64_to_bytes(g_msg.data), safe_base64_to_bytes(g_msg.sig_hash), JsonToProtoEnumAxelarEvmV1beta1BatchedCommandsStatus[g_msg.status], g_msg.key_id, safe_base64_to_bytes(g_msg.prev_batched_commands_id), condenseJsonAny(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandBatchMetadata` -
 */
export const expandAxelarEvmV1beta1CommandBatchMetadata = ([atu8_id, a_command_ids, atu8_data, atu8_sig_hash, xc_status, si_key, atu8_prev_batched_commands_id, a_signature]) => ({
    id: safe_bytes_to_base64(atu8_id),
    command_ids: map(a_command_ids, safe_bytes_to_base64),
    data: safe_bytes_to_base64(atu8_data),
    sig_hash: safe_bytes_to_base64(atu8_sig_hash),
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1BatchedCommandsStatus[xc_status] : __UNDEFINED,
    key_id: si_key,
    prev_batched_commands_id: safe_bytes_to_base64(atu8_prev_batched_commands_id),
    signature: a_signature && expandJsonAny(a_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1SigMetadata}
 */
export const condenseAxelarEvmV1beta1SigMetadata = (g_msg) => encodeAxelarEvmV1beta1SigMetadata(JsonToProtoEnumAxelarEvmV1beta1SigType[g_msg.type], g_msg.chain, safe_base64_to_bytes(g_msg.command_batch_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.SigMetadata` - stores necessary information for external apps to map signature results to evm relay transaction types
 */
export const expandAxelarEvmV1beta1SigMetadata = ([xc_type, s_chain, atu8_command_batch_id]) => ({
    type: xc_type >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1SigType[xc_type] : __UNDEFINED,
    chain: s_chain,
    command_batch_id: safe_bytes_to_base64(atu8_command_batch_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TransferKey}
 */
export const condenseAxelarEvmV1beta1TransferKey = (g_msg) => encodeAxelarEvmV1beta1TransferKey(safe_base64_to_bytes(g_msg.tx_id), g_msg.next_key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TransferKey` - contains information for a transfer operatorship
 */
export const expandAxelarEvmV1beta1TransferKey = ([atu8_tx_id, , si_next_key]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    next_key_id: si_next_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Gateway}
 */
export const condenseAxelarEvmV1beta1Gateway = (g_msg) => encodeAxelarEvmV1beta1Gateway(safe_base64_to_bytes(g_msg.address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Gateway` -
 */
export const expandAxelarEvmV1beta1Gateway = ([atu8_address]) => ({
    address: safe_bytes_to_base64(atu8_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PollMetadata}
 */
export const condenseAxelarEvmV1beta1PollMetadata = (g_msg) => encodeAxelarEvmV1beta1PollMetadata(g_msg.chain, safe_base64_to_bytes(g_msg.tx_id));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PollMetadata` -
 */
export const expandAxelarEvmV1beta1PollMetadata = ([s_chain, atu8_tx_id]) => ({
    chain: s_chain,
    tx_id: safe_bytes_to_base64(atu8_tx_id),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1DepositQueryParams}
 */
export const condenseAxelarEvmV1beta1DepositQueryParams = (g_msg) => encodeAxelarEvmV1beta1DepositQueryParams(g_msg.address, g_msg.asset, g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.DepositQueryParams` - describe the parameters used to query for an EVM deposit address
 */
export const expandAxelarEvmV1beta1DepositQueryParams = ([sa_address, s_asset, s_chain]) => ({
    address: sa_address,
    asset: s_asset,
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BatchedCommandsRequest}
 */
export const condenseAxelarEvmV1beta1BatchedCommandsRequest = (g_msg) => encodeAxelarEvmV1beta1BatchedCommandsRequest(g_msg.chain, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BatchedCommandsRequest` -
 */
export const expandAxelarEvmV1beta1BatchedCommandsRequest = ([s_chain, s_id]) => ({
    chain: s_chain,
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BatchedCommandsResponse}
 */
export const condenseAxelarEvmV1beta1BatchedCommandsResponse = (g_msg) => encodeAxelarEvmV1beta1BatchedCommandsResponse(g_msg.id, g_msg.data, JsonToProtoEnumAxelarEvmV1beta1BatchedCommandsStatus[g_msg.status], g_msg.key_id, g_msg.execute_data, g_msg.prev_batched_commands_id, g_msg.command_ids, apply_opt(g_msg.proof, condenseAxelarEvmV1beta1Proof));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BatchedCommandsResponse` -
 */
export const expandAxelarEvmV1beta1BatchedCommandsResponse = ([s_id, s_data, xc_status, si_key, , s_execute_data, si_prev_batched_commands, a_command_ids, a_proof]) => ({
    id: s_id,
    data: s_data,
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1BatchedCommandsStatus[xc_status] : __UNDEFINED,
    key_id: si_key,
    execute_data: s_execute_data,
    prev_batched_commands_id: si_prev_batched_commands,
    command_ids: a_command_ids,
    proof: a_proof && expandAxelarEvmV1beta1Proof(a_proof),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Proof}
 */
export const condenseAxelarEvmV1beta1Proof = (g_msg) => encodeAxelarEvmV1beta1Proof(g_msg.addresses, g_msg.weights, g_msg.threshold, g_msg.signatures);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Proof` -
 */
export const expandAxelarEvmV1beta1Proof = ([a_addresses, a_weights, s_threshold, a_signatures]) => ({
    addresses: a_addresses,
    weights: a_weights,
    threshold: s_threshold,
    signatures: a_signatures,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1KeyAddressRequest}
 */
export const condenseAxelarEvmV1beta1KeyAddressRequest = (g_msg) => encodeAxelarEvmV1beta1KeyAddressRequest(g_msg.chain, g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.KeyAddressRequest` -
 */
export const expandAxelarEvmV1beta1KeyAddressRequest = ([s_chain, , , si_key]) => ({
    chain: s_chain,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1KeyAddressResponse}
 */
export const condenseAxelarEvmV1beta1KeyAddressResponse = (g_msg) => encodeAxelarEvmV1beta1KeyAddressResponse(g_msg.key_id, map(g_msg.addresses, condenseAxelarEvmV1beta1KeyAddressResponseWeightedAddress), g_msg.threshold);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.KeyAddressResponse` -
 */
export const expandAxelarEvmV1beta1KeyAddressResponse = ([si_key, a_addresses, s_threshold]) => ({
    key_id: si_key,
    addresses: a_addresses && map(a_addresses, expandAxelarEvmV1beta1KeyAddressResponseWeightedAddress),
    threshold: s_threshold,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1KeyAddressResponseWeightedAddress}
 */
export const condenseAxelarEvmV1beta1KeyAddressResponseWeightedAddress = (g_msg) => encodeAxelarEvmV1beta1KeyAddressResponseWeightedAddress(g_msg.address, g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.KeyAddressResponse.WeightedAddress` -
 */
export const expandAxelarEvmV1beta1KeyAddressResponseWeightedAddress = ([sa_address, s_weight]) => ({
    address: sa_address,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1QueryTokenAddressResponse}
 */
export const condenseAxelarEvmV1beta1QueryTokenAddressResponse = (g_msg) => encodeAxelarEvmV1beta1QueryTokenAddressResponse(g_msg.address, g_msg.confirmed);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.QueryTokenAddressResponse` -
 */
export const expandAxelarEvmV1beta1QueryTokenAddressResponse = ([sa_address, b_confirmed]) => ({
    address: sa_address,
    confirmed: !!b_confirmed,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1QueryDepositStateParams}
 */
export const condenseAxelarEvmV1beta1QueryDepositStateParams = (g_msg) => encodeAxelarEvmV1beta1QueryDepositStateParams(safe_base64_to_bytes(g_msg.tx_id), safe_base64_to_bytes(g_msg.burner_address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.QueryDepositStateParams` -
 */
export const expandAxelarEvmV1beta1QueryDepositStateParams = ([atu8_tx_id, atu8_burner_address]) => ({
    tx_id: safe_bytes_to_base64(atu8_tx_id),
    burner_address: safe_bytes_to_base64(atu8_burner_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1DepositStateRequest}
 */
export const condenseAxelarEvmV1beta1DepositStateRequest = (g_msg) => encodeAxelarEvmV1beta1DepositStateRequest(g_msg.chain, apply_opt(g_msg.params, condenseAxelarEvmV1beta1QueryDepositStateParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.DepositStateRequest` -
 */
export const expandAxelarEvmV1beta1DepositStateRequest = ([s_chain, a_params]) => ({
    chain: s_chain,
    params: a_params && expandAxelarEvmV1beta1QueryDepositStateParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1DepositStateResponse}
 */
export const condenseAxelarEvmV1beta1DepositStateResponse = (g_msg) => encodeAxelarEvmV1beta1DepositStateResponse(JsonToProtoEnumAxelarEvmV1beta1DepositStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.DepositStateResponse` -
 */
export const expandAxelarEvmV1beta1DepositStateResponse = ([, xc_status]) => ({
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1DepositStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventRequest}
 */
export const condenseAxelarEvmV1beta1EventRequest = (g_msg) => encodeAxelarEvmV1beta1EventRequest(g_msg.chain, g_msg.event_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventRequest` -
 */
export const expandAxelarEvmV1beta1EventRequest = ([s_chain, si_event]) => ({
    chain: s_chain,
    event_id: si_event,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1EventResponse}
 */
export const condenseAxelarEvmV1beta1EventResponse = (g_msg) => encodeAxelarEvmV1beta1EventResponse(apply_opt(g_msg.event, condenseAxelarEvmV1beta1Event));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.EventResponse` -
 */
export const expandAxelarEvmV1beta1EventResponse = ([a_event]) => ({
    event: a_event && expandAxelarEvmV1beta1Event(a_event),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1QueryBurnerAddressResponse}
 */
export const condenseAxelarEvmV1beta1QueryBurnerAddressResponse = (g_msg) => encodeAxelarEvmV1beta1QueryBurnerAddressResponse(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.QueryBurnerAddressResponse` -
 */
export const expandAxelarEvmV1beta1QueryBurnerAddressResponse = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ChainsRequest}
 */
export const condenseAxelarEvmV1beta1ChainsRequest = (g_msg) => encodeAxelarEvmV1beta1ChainsRequest(JsonToProtoEnumAxelarEvmV1beta1ChainStatus[g_msg.status]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ChainsRequest` -
 */
export const expandAxelarEvmV1beta1ChainsRequest = ([xc_status]) => ({
    status: xc_status >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1ChainStatus[xc_status] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ChainsResponse}
 */
export const condenseAxelarEvmV1beta1ChainsResponse = (g_msg) => encodeAxelarEvmV1beta1ChainsResponse(g_msg.chains);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ChainsResponse` -
 */
export const expandAxelarEvmV1beta1ChainsResponse = ([a_chains]) => ({
    chains: a_chains,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandRequest}
 */
export const condenseAxelarEvmV1beta1CommandRequest = (g_msg) => encodeAxelarEvmV1beta1CommandRequest(g_msg.chain, g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandRequest` -
 */
export const expandAxelarEvmV1beta1CommandRequest = ([s_chain, s_id]) => ({
    chain: s_chain,
    id: s_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandResponse}
 */
export const condenseAxelarEvmV1beta1CommandResponse = (g_msg) => encodeAxelarEvmV1beta1CommandResponse(g_msg.id, g_msg.type, map(g_msg.params, condenseAxelarEvmV1beta1CommandResponseParamsEntry), g_msg.key_id, g_msg.max_gas_cost);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandResponse` -
 */
export const expandAxelarEvmV1beta1CommandResponse = ([s_id, s_type, a_params, si_key, n_max_gas_cost]) => ({
    id: s_id,
    type: s_type,
    params: a_params && map(a_params, expandAxelarEvmV1beta1CommandResponseParamsEntry),
    key_id: si_key,
    max_gas_cost: n_max_gas_cost,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1CommandResponseParamsEntry}
 */
export const condenseAxelarEvmV1beta1CommandResponseParamsEntry = (g_msg) => encodeAxelarEvmV1beta1CommandResponseParamsEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.CommandResponse.ParamsEntry` -
 */
export const expandAxelarEvmV1beta1CommandResponseParamsEntry = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PendingCommandsRequest}
 */
export const condenseAxelarEvmV1beta1PendingCommandsRequest = (g_msg) => encodeAxelarEvmV1beta1PendingCommandsRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PendingCommandsRequest` -
 */
export const expandAxelarEvmV1beta1PendingCommandsRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PendingCommandsResponse}
 */
export const condenseAxelarEvmV1beta1PendingCommandsResponse = (g_msg) => encodeAxelarEvmV1beta1PendingCommandsResponse(map(g_msg.commands, condenseAxelarEvmV1beta1QueryCommandResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PendingCommandsResponse` -
 */
export const expandAxelarEvmV1beta1PendingCommandsResponse = ([a_commands]) => ({
    commands: a_commands && map(a_commands, expandAxelarEvmV1beta1QueryCommandResponse),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1QueryCommandResponse}
 */
export const condenseAxelarEvmV1beta1QueryCommandResponse = (g_msg) => encodeAxelarEvmV1beta1QueryCommandResponse(g_msg.id, g_msg.type, map(g_msg.params, condenseAxelarEvmV1beta1QueryCommandResponseParamsEntry), g_msg.key_id, g_msg.max_gas_cost);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.QueryCommandResponse` -
 */
export const expandAxelarEvmV1beta1QueryCommandResponse = ([s_id, s_type, a_params, si_key, n_max_gas_cost]) => ({
    id: s_id,
    type: s_type,
    params: a_params && map(a_params, expandAxelarEvmV1beta1QueryCommandResponseParamsEntry),
    key_id: si_key,
    max_gas_cost: n_max_gas_cost,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1QueryCommandResponseParamsEntry}
 */
export const condenseAxelarEvmV1beta1QueryCommandResponseParamsEntry = (g_msg) => encodeAxelarEvmV1beta1QueryCommandResponseParamsEntry(g_msg.key, g_msg.value);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.QueryCommandResponse.ParamsEntry` -
 */
export const expandAxelarEvmV1beta1QueryCommandResponseParamsEntry = ([s_key, s_value]) => ({
    key: s_key,
    value: s_value,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BurnerInfoRequest}
 */
export const condenseAxelarEvmV1beta1BurnerInfoRequest = (g_msg) => encodeAxelarEvmV1beta1BurnerInfoRequest(safe_base64_to_bytes(g_msg.address));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BurnerInfoRequest` -
 */
export const expandAxelarEvmV1beta1BurnerInfoRequest = ([atu8_address]) => ({
    address: safe_bytes_to_base64(atu8_address),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BurnerInfoResponse}
 */
export const condenseAxelarEvmV1beta1BurnerInfoResponse = (g_msg) => encodeAxelarEvmV1beta1BurnerInfoResponse(g_msg.chain, apply_opt(g_msg.burner_info, condenseAxelarEvmV1beta1BurnerInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BurnerInfoResponse` -
 */
export const expandAxelarEvmV1beta1BurnerInfoResponse = ([s_chain, a_burner_info]) => ({
    chain: s_chain,
    burner_info: a_burner_info && expandAxelarEvmV1beta1BurnerInfo(a_burner_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmationHeightRequest}
 */
export const condenseAxelarEvmV1beta1ConfirmationHeightRequest = (g_msg) => encodeAxelarEvmV1beta1ConfirmationHeightRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmationHeightRequest` -
 */
export const expandAxelarEvmV1beta1ConfirmationHeightRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ConfirmationHeightResponse}
 */
export const condenseAxelarEvmV1beta1ConfirmationHeightResponse = (g_msg) => encodeAxelarEvmV1beta1ConfirmationHeightResponse(g_msg.height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ConfirmationHeightResponse` -
 */
export const expandAxelarEvmV1beta1ConfirmationHeightResponse = ([sg_height]) => ({
    height: sg_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1GatewayAddressRequest}
 */
export const condenseAxelarEvmV1beta1GatewayAddressRequest = (g_msg) => encodeAxelarEvmV1beta1GatewayAddressRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.GatewayAddressRequest` -
 */
export const expandAxelarEvmV1beta1GatewayAddressRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1GatewayAddressResponse}
 */
export const condenseAxelarEvmV1beta1GatewayAddressResponse = (g_msg) => encodeAxelarEvmV1beta1GatewayAddressResponse(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.GatewayAddressResponse` -
 */
export const expandAxelarEvmV1beta1GatewayAddressResponse = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BytecodeRequest}
 */
export const condenseAxelarEvmV1beta1BytecodeRequest = (g_msg) => encodeAxelarEvmV1beta1BytecodeRequest(g_msg.chain, g_msg.contract);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BytecodeRequest` -
 */
export const expandAxelarEvmV1beta1BytecodeRequest = ([s_chain, s_contract]) => ({
    chain: s_chain,
    contract: s_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1BytecodeResponse}
 */
export const condenseAxelarEvmV1beta1BytecodeResponse = (g_msg) => encodeAxelarEvmV1beta1BytecodeResponse(g_msg.bytecode);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.BytecodeResponse` -
 */
export const expandAxelarEvmV1beta1BytecodeResponse = ([s_bytecode]) => ({
    bytecode: s_bytecode,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ERC20TokensRequest}
 */
export const condenseAxelarEvmV1beta1ERC20TokensRequest = (g_msg) => encodeAxelarEvmV1beta1ERC20TokensRequest(g_msg.chain, JsonToProtoEnumAxelarEvmV1beta1TokenType[g_msg.type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ERC20TokensRequest` - describes the chain for which the type of ERC20 tokens are requested.
 */
export const expandAxelarEvmV1beta1ERC20TokensRequest = ([s_chain, xc_type]) => ({
    chain: s_chain,
    type: xc_type >= 0 ? ProtoToJsonEnumAxelarEvmV1beta1TokenType[xc_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ERC20TokensResponse}
 */
export const condenseAxelarEvmV1beta1ERC20TokensResponse = (g_msg) => encodeAxelarEvmV1beta1ERC20TokensResponse(map(g_msg.tokens, condenseAxelarEvmV1beta1ERC20TokensResponseToken));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ERC20TokensResponse` - describes the asset and symbol for all ERC20 tokens requested for a chain
 */
export const expandAxelarEvmV1beta1ERC20TokensResponse = ([a_tokens]) => ({
    tokens: a_tokens && map(a_tokens, expandAxelarEvmV1beta1ERC20TokensResponseToken),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ERC20TokensResponseToken}
 */
export const condenseAxelarEvmV1beta1ERC20TokensResponseToken = (g_msg) => encodeAxelarEvmV1beta1ERC20TokensResponseToken(g_msg.asset, g_msg.symbol);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ERC20TokensResponse.Token` -
 */
export const expandAxelarEvmV1beta1ERC20TokensResponseToken = ([s_asset, s_symbol]) => ({
    asset: s_asset,
    symbol: s_symbol,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TokenInfoRequest}
 */
export const condenseAxelarEvmV1beta1TokenInfoRequest = (g_msg) => encodeAxelarEvmV1beta1TokenInfoRequest(g_msg.chain, g_msg.asset, g_msg.symbol, g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TokenInfoRequest` -
 */
export const expandAxelarEvmV1beta1TokenInfoRequest = ([s_chain, s_asset, s_symbol, sa_address]) => ({
    chain: s_chain,
    asset: s_asset,
    symbol: s_symbol,
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1TokenInfoResponse}
 */
export const condenseAxelarEvmV1beta1TokenInfoResponse = (g_msg) => encodeAxelarEvmV1beta1TokenInfoResponse(g_msg.asset, apply_opt(g_msg.details, condenseAxelarEvmV1beta1TokenDetails), g_msg.address, g_msg.confirmed, g_msg.is_external, g_msg.burner_code_hash);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.TokenInfoResponse` -
 */
export const expandAxelarEvmV1beta1TokenInfoResponse = ([s_asset, a_details, sa_address, b_confirmed, b_is_external, sb16_burner_code_hash]) => ({
    asset: s_asset,
    details: a_details && expandAxelarEvmV1beta1TokenDetails(a_details),
    address: sa_address,
    confirmed: !!b_confirmed,
    is_external: !!b_is_external,
    burner_code_hash: sb16_burner_code_hash,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ParamsRequest}
 */
export const condenseAxelarEvmV1beta1ParamsRequest = (g_msg) => encodeAxelarEvmV1beta1ParamsRequest(g_msg.chain);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarEvmV1beta1ParamsRequest = ([s_chain]) => ({
    chain: s_chain,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1ParamsResponse}
 */
export const condenseAxelarEvmV1beta1ParamsResponse = (g_msg) => encodeAxelarEvmV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarEvmV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.ParamsResponse` -
 */
export const expandAxelarEvmV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarEvmV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1Params}
 */
export const condenseAxelarEvmV1beta1Params = (g_msg) => encodeAxelarEvmV1beta1Params(g_msg.chain, g_msg.confirmation_height, g_msg.network, safe_base64_to_bytes(g_msg.token_code), safe_base64_to_bytes(g_msg.burnable), g_msg.revote_locking_period, map(g_msg.networks, condenseAxelarEvmV1beta1NetworkInfo), apply_opt(g_msg.voting_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.min_voter_count, g_msg.commands_gas_limit, g_msg.voting_grace_period, g_msg.end_blocker_limit, g_msg.transfer_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.Params` - the parameter set for this module
 */
export const expandAxelarEvmV1beta1Params = ([s_chain, sg_confirmation_height, s_network, , atu8_token_code, atu8_burnable, sg_revote_locking_period, a_networks, a_voting_threshold, sg_min_voter_count, n_commands_gas_limit, , sg_voting_grace_period, sg_end_blocker_limit, sg_transfer_limit]) => ({
    chain: s_chain,
    confirmation_height: sg_confirmation_height,
    network: s_network,
    token_code: safe_bytes_to_base64(atu8_token_code),
    burnable: safe_bytes_to_base64(atu8_burnable),
    revote_locking_period: sg_revote_locking_period,
    networks: a_networks && map(a_networks, expandAxelarEvmV1beta1NetworkInfo),
    voting_threshold: a_voting_threshold && expandAxelarUtilsV1beta1Threshold(a_voting_threshold),
    min_voter_count: sg_min_voter_count,
    commands_gas_limit: n_commands_gas_limit,
    voting_grace_period: sg_voting_grace_period,
    end_blocker_limit: sg_end_blocker_limit,
    transfer_limit: sg_transfer_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1GenesisState}
 */
export const condenseAxelarEvmV1beta1GenesisState = (g_msg) => encodeAxelarEvmV1beta1GenesisState(map(g_msg.chains, condenseAxelarEvmV1beta1GenesisStateChain));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarEvmV1beta1GenesisState = ([, , a_chains]) => ({
    chains: a_chains && map(a_chains, expandAxelarEvmV1beta1GenesisStateChain),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1GenesisStateChain}
 */
export const condenseAxelarEvmV1beta1GenesisStateChain = (g_msg) => encodeAxelarEvmV1beta1GenesisStateChain(apply_opt(g_msg.params, condenseAxelarEvmV1beta1Params), map(g_msg.burner_infos, condenseAxelarEvmV1beta1BurnerInfo), apply_opt(g_msg.command_queue, condenseAxelarUtilsV1beta1QueueState), map(g_msg.confirmed_deposits, condenseAxelarEvmV1beta1ERC20Deposit), map(g_msg.burned_deposits, condenseAxelarEvmV1beta1ERC20Deposit), map(g_msg.command_batches, condenseAxelarEvmV1beta1CommandBatchMetadata), apply_opt(g_msg.gateway, condenseAxelarEvmV1beta1Gateway), map(g_msg.tokens, condenseAxelarEvmV1beta1ERC20TokenMetadata), map(g_msg.events, condenseAxelarEvmV1beta1Event), apply_opt(g_msg.confirmed_event_queue, condenseAxelarUtilsV1beta1QueueState), map(g_msg.legacy_confirmed_deposits, condenseAxelarEvmV1beta1ERC20Deposit), map(g_msg.legacy_burned_deposits, condenseAxelarEvmV1beta1ERC20Deposit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.GenesisState.Chain` -
 */
export const expandAxelarEvmV1beta1GenesisStateChain = ([a_params, a_burner_infos, a_command_queue, a_confirmed_deposits, a_burned_deposits, , , a_command_batches, a_gateway, a_tokens, a_events, a_confirmed_event_queue, a_legacy_confirmed_deposits, a_legacy_burned_deposits]) => ({
    params: a_params && expandAxelarEvmV1beta1Params(a_params),
    burner_infos: a_burner_infos && map(a_burner_infos, expandAxelarEvmV1beta1BurnerInfo),
    command_queue: a_command_queue && expandAxelarUtilsV1beta1QueueState(a_command_queue),
    confirmed_deposits: a_confirmed_deposits && map(a_confirmed_deposits, expandAxelarEvmV1beta1ERC20Deposit),
    burned_deposits: a_burned_deposits && map(a_burned_deposits, expandAxelarEvmV1beta1ERC20Deposit),
    command_batches: a_command_batches && map(a_command_batches, expandAxelarEvmV1beta1CommandBatchMetadata),
    gateway: a_gateway && expandAxelarEvmV1beta1Gateway(a_gateway),
    tokens: a_tokens && map(a_tokens, expandAxelarEvmV1beta1ERC20TokenMetadata),
    events: a_events && map(a_events, expandAxelarEvmV1beta1Event),
    confirmed_event_queue: a_confirmed_event_queue && expandAxelarUtilsV1beta1QueueState(a_confirmed_event_queue),
    legacy_confirmed_deposits: a_legacy_confirmed_deposits && map(a_legacy_confirmed_deposits, expandAxelarEvmV1beta1ERC20Deposit),
    legacy_burned_deposits: a_legacy_burned_deposits && map(a_legacy_burned_deposits, expandAxelarEvmV1beta1ERC20Deposit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarEvmV1beta1PendingChain}
 */
export const condenseAxelarEvmV1beta1PendingChain = (g_msg) => encodeAxelarEvmV1beta1PendingChain(apply_opt(g_msg.params, condenseAxelarEvmV1beta1Params), apply_opt(g_msg.chain, condenseAxelarNexusExportedV1beta1Chain));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.evm.v1beta1.PendingChain` -
 */
export const expandAxelarEvmV1beta1PendingChain = ([a_params, a_chain]) => ({
    params: a_params && expandAxelarEvmV1beta1Params(a_params),
    chain: a_chain && expandAxelarNexusExportedV1beta1Chain(a_chain),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeygenRequest}
 */
export const condenseAxelarTssTofndV1beta1KeygenRequest = (g_msg) => encodeAxelarTssTofndV1beta1KeygenRequest(g_msg.key_uid, g_msg.party_uid);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeygenRequest` -
 */
export const expandAxelarTssTofndV1beta1KeygenRequest = ([s_key_uid, s_party_uid]) => ({
    key_uid: s_key_uid,
    party_uid: s_party_uid,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeygenResponse}
 */
export const condenseAxelarTssTofndV1beta1KeygenResponse = (g_msg) => encodeAxelarTssTofndV1beta1KeygenResponse(safe_base64_to_bytes(g_msg.pub_key), g_msg.error);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeygenResponse` -
 */
export const expandAxelarTssTofndV1beta1KeygenResponse = ([atu8_pub_key, s_error]) => ({
    pub_key: safe_bytes_to_base64(atu8_pub_key),
    error: s_error,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1SignRequest}
 */
export const condenseAxelarTssTofndV1beta1SignRequest = (g_msg) => encodeAxelarTssTofndV1beta1SignRequest(g_msg.key_uid, safe_base64_to_bytes(g_msg.msg_to_sign), g_msg.party_uid, safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.SignRequest` -
 */
export const expandAxelarTssTofndV1beta1SignRequest = ([s_key_uid, atu8_msg_to_sign, s_party_uid, atu8_pub_key]) => ({
    key_uid: s_key_uid,
    msg_to_sign: safe_bytes_to_base64(atu8_msg_to_sign),
    party_uid: s_party_uid,
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1SignResponse}
 */
export const condenseAxelarTssTofndV1beta1SignResponse = (g_msg) => encodeAxelarTssTofndV1beta1SignResponse(safe_base64_to_bytes(g_msg.signature), g_msg.error);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.SignResponse` -
 */
export const expandAxelarTssTofndV1beta1SignResponse = ([atu8_signature, s_error]) => ({
    signature: safe_bytes_to_base64(atu8_signature),
    error: s_error,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1RecoverRequest}
 */
export const condenseAxelarTssTofndV1beta1RecoverRequest = (g_msg) => encodeAxelarTssTofndV1beta1RecoverRequest(apply_opt(g_msg.keygen_init, condenseAxelarTssTofndV1beta1KeygenInit), apply_opt(g_msg.keygen_output, condenseAxelarTssTofndV1beta1KeygenOutput));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.RecoverRequest` -
 */
export const expandAxelarTssTofndV1beta1RecoverRequest = ([a_keygen_init, a_keygen_output]) => ({
    keygen_init: a_keygen_init && expandAxelarTssTofndV1beta1KeygenInit(a_keygen_init),
    keygen_output: a_keygen_output && expandAxelarTssTofndV1beta1KeygenOutput(a_keygen_output),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeygenInit}
 */
export const condenseAxelarTssTofndV1beta1KeygenInit = (g_msg) => encodeAxelarTssTofndV1beta1KeygenInit(g_msg.new_key_uid, g_msg.party_uids, g_msg.my_party_index, g_msg.threshold, g_msg.party_share_counts);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeygenInit` -
 */
export const expandAxelarTssTofndV1beta1KeygenInit = ([s_new_key_uid, a_party_uids, n_my_party_index, n_threshold, a_party_share_counts]) => ({
    new_key_uid: s_new_key_uid,
    party_uids: a_party_uids,
    my_party_index: n_my_party_index,
    threshold: n_threshold,
    party_share_counts: a_party_share_counts,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeygenOutput}
 */
export const condenseAxelarTssTofndV1beta1KeygenOutput = (g_msg) => encodeAxelarTssTofndV1beta1KeygenOutput(safe_base64_to_bytes(g_msg.pub_key), safe_base64_to_bytes(g_msg.group_recover_info), safe_base64_to_bytes(g_msg.private_recover_info));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeygenOutput` - Keygen's success response
 */
export const expandAxelarTssTofndV1beta1KeygenOutput = ([atu8_pub_key, atu8_group_recover_info, atu8_private_recover_info]) => ({
    pub_key: safe_bytes_to_base64(atu8_pub_key),
    group_recover_info: safe_bytes_to_base64(atu8_group_recover_info),
    private_recover_info: safe_bytes_to_base64(atu8_private_recover_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1RecoverResponse}
 */
export const condenseAxelarTssTofndV1beta1RecoverResponse = (g_msg) => encodeAxelarTssTofndV1beta1RecoverResponse(JsonToProtoEnumAxelarTssTofndV1beta1RecoverResponseResponse[g_msg.response]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.RecoverResponse` -
 */
export const expandAxelarTssTofndV1beta1RecoverResponse = ([xc_response]) => ({
    response: xc_response >= 0 ? ProtoToJsonEnumAxelarTssTofndV1beta1RecoverResponseResponse[xc_response] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageIn}
 */
export const condenseAxelarTssTofndV1beta1MessageIn = (g_msg) => encodeAxelarTssTofndV1beta1MessageIn(apply_opt(g_msg.keygen_init, condenseAxelarTssTofndV1beta1KeygenInit), apply_opt(g_msg.sign_init, condenseAxelarTssTofndV1beta1SignInit), apply_opt(g_msg.traffic, condenseAxelarTssTofndV1beta1TrafficIn), g_msg.abort);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageIn` -
 */
export const expandAxelarTssTofndV1beta1MessageIn = ([a_keygen_init, a_sign_init, a_traffic, b_abort]) => ({
    keygen_init: a_keygen_init && expandAxelarTssTofndV1beta1KeygenInit(a_keygen_init),
    sign_init: a_sign_init && expandAxelarTssTofndV1beta1SignInit(a_sign_init),
    traffic: a_traffic && expandAxelarTssTofndV1beta1TrafficIn(a_traffic),
    abort: !!b_abort,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1SignInit}
 */
export const condenseAxelarTssTofndV1beta1SignInit = (g_msg) => encodeAxelarTssTofndV1beta1SignInit(g_msg.new_sig_uid, g_msg.key_uid, g_msg.party_uids, safe_base64_to_bytes(g_msg.message_to_sign));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.SignInit` -
 */
export const expandAxelarTssTofndV1beta1SignInit = ([s_new_sig_uid, s_key_uid, a_party_uids, atu8_message_to_sign]) => ({
    new_sig_uid: s_new_sig_uid,
    key_uid: s_key_uid,
    party_uids: a_party_uids,
    message_to_sign: safe_bytes_to_base64(atu8_message_to_sign),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1TrafficIn}
 */
export const condenseAxelarTssTofndV1beta1TrafficIn = (g_msg) => encodeAxelarTssTofndV1beta1TrafficIn(g_msg.from_party_uid, safe_base64_to_bytes(g_msg.payload), g_msg.is_broadcast);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.TrafficIn` -
 */
export const expandAxelarTssTofndV1beta1TrafficIn = ([s_from_party_uid, atu8_payload, b_is_broadcast]) => ({
    from_party_uid: s_from_party_uid,
    payload: safe_bytes_to_base64(atu8_payload),
    is_broadcast: !!b_is_broadcast,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageOut}
 */
export const condenseAxelarTssTofndV1beta1MessageOut = (g_msg) => encodeAxelarTssTofndV1beta1MessageOut(apply_opt(g_msg.traffic, condenseAxelarTssTofndV1beta1TrafficOut), apply_opt(g_msg.keygen_result, condenseAxelarTssTofndV1beta1MessageOutKeygenResult), apply_opt(g_msg.sign_result, condenseAxelarTssTofndV1beta1MessageOutSignResult), g_msg.need_recover);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageOut` -
 */
export const expandAxelarTssTofndV1beta1MessageOut = ([a_traffic, a_keygen_result, a_sign_result, b_need_recover]) => ({
    traffic: a_traffic && expandAxelarTssTofndV1beta1TrafficOut(a_traffic),
    keygen_result: a_keygen_result && expandAxelarTssTofndV1beta1MessageOutKeygenResult(a_keygen_result),
    sign_result: a_sign_result && expandAxelarTssTofndV1beta1MessageOutSignResult(a_sign_result),
    need_recover: !!b_need_recover,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1TrafficOut}
 */
export const condenseAxelarTssTofndV1beta1TrafficOut = (g_msg) => encodeAxelarTssTofndV1beta1TrafficOut(g_msg.to_party_uid, safe_base64_to_bytes(g_msg.payload), g_msg.is_broadcast);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.TrafficOut` -
 */
export const expandAxelarTssTofndV1beta1TrafficOut = ([s_to_party_uid, atu8_payload, b_is_broadcast]) => ({
    to_party_uid: s_to_party_uid,
    payload: safe_bytes_to_base64(atu8_payload),
    is_broadcast: !!b_is_broadcast,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageOutKeygenResult}
 */
export const condenseAxelarTssTofndV1beta1MessageOutKeygenResult = (g_msg) => encodeAxelarTssTofndV1beta1MessageOutKeygenResult(apply_opt(g_msg.data, condenseAxelarTssTofndV1beta1KeygenOutput), apply_opt(g_msg.criminals, condenseAxelarTssTofndV1beta1MessageOutCriminalList));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageOut.KeygenResult` -
 */
export const expandAxelarTssTofndV1beta1MessageOutKeygenResult = ([a_data, a_criminals]) => ({
    data: a_data && expandAxelarTssTofndV1beta1KeygenOutput(a_data),
    criminals: a_criminals && expandAxelarTssTofndV1beta1MessageOutCriminalList(a_criminals),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageOutCriminalList}
 */
export const condenseAxelarTssTofndV1beta1MessageOutCriminalList = (g_msg) => encodeAxelarTssTofndV1beta1MessageOutCriminalList(map(g_msg.criminals, condenseAxelarTssTofndV1beta1MessageOutCriminalListCriminal));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageOut.CriminalList` -
 */
export const expandAxelarTssTofndV1beta1MessageOutCriminalList = ([a_criminals]) => ({
    criminals: a_criminals && map(a_criminals, expandAxelarTssTofndV1beta1MessageOutCriminalListCriminal),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageOutCriminalListCriminal}
 */
export const condenseAxelarTssTofndV1beta1MessageOutCriminalListCriminal = (g_msg) => encodeAxelarTssTofndV1beta1MessageOutCriminalListCriminal(g_msg.party_uid, JsonToProtoEnumAxelarTssTofndV1beta1MessageOutCriminalListCriminalCrimeType[g_msg.crime_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageOut.CriminalList.Criminal` -
 */
export const expandAxelarTssTofndV1beta1MessageOutCriminalListCriminal = ([s_party_uid, xc_crime_type]) => ({
    party_uid: s_party_uid,
    crime_type: xc_crime_type >= 0 ? ProtoToJsonEnumAxelarTssTofndV1beta1MessageOutCriminalListCriminalCrimeType[xc_crime_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1MessageOutSignResult}
 */
export const condenseAxelarTssTofndV1beta1MessageOutSignResult = (g_msg) => encodeAxelarTssTofndV1beta1MessageOutSignResult(safe_base64_to_bytes(g_msg.signature), apply_opt(g_msg.criminals, condenseAxelarTssTofndV1beta1MessageOutCriminalList));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.MessageOut.SignResult` -
 */
export const expandAxelarTssTofndV1beta1MessageOutSignResult = ([atu8_signature, a_criminals]) => ({
    signature: safe_bytes_to_base64(atu8_signature),
    criminals: a_criminals && expandAxelarTssTofndV1beta1MessageOutCriminalList(a_criminals),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeyPresenceRequest}
 */
export const condenseAxelarTssTofndV1beta1KeyPresenceRequest = (g_msg) => encodeAxelarTssTofndV1beta1KeyPresenceRequest(g_msg.key_uid, safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeyPresenceRequest` - Key presence check types
 */
export const expandAxelarTssTofndV1beta1KeyPresenceRequest = ([s_key_uid, atu8_pub_key]) => ({
    key_uid: s_key_uid,
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssTofndV1beta1KeyPresenceResponse}
 */
export const condenseAxelarTssTofndV1beta1KeyPresenceResponse = (g_msg) => encodeAxelarTssTofndV1beta1KeyPresenceResponse(JsonToProtoEnumAxelarTssTofndV1beta1KeyPresenceResponseResponse[g_msg.response]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.tofnd.v1beta1.KeyPresenceResponse` -
 */
export const expandAxelarTssTofndV1beta1KeyPresenceResponse = ([xc_response]) => ({
    response: xc_response >= 0 ? ProtoToJsonEnumAxelarTssTofndV1beta1KeyPresenceResponseResponse[xc_response] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssExportedV1beta1KeyRequirement}
 */
export const condenseAxelarTssExportedV1beta1KeyRequirement = (g_msg) => encodeAxelarTssExportedV1beta1KeyRequirement(JsonToProtoEnumAxelarTssExportedV1beta1KeyRole[g_msg.key_role], JsonToProtoEnumAxelarTssExportedV1beta1KeyType[g_msg.key_type], apply_opt(g_msg.min_keygen_threshold, condenseAxelarUtilsV1beta1Threshold), apply_opt(g_msg.safety_threshold, condenseAxelarUtilsV1beta1Threshold), JsonToProtoEnumAxelarTssExportedV1beta1KeyShareDistributionPolicy[g_msg.key_share_distribution_policy], g_msg.max_total_share_count, g_msg.min_total_share_count, apply_opt(g_msg.keygen_voting_threshold, condenseAxelarUtilsV1beta1Threshold), apply_opt(g_msg.sign_voting_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.keygen_timeout, g_msg.sign_timeout);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.exported.v1beta1.KeyRequirement` - defines requirements for keys
 */
export const expandAxelarTssExportedV1beta1KeyRequirement = ([xc_key_role, xc_key_type, a_min_keygen_threshold, a_safety_threshold, xc_key_share_distribution_policy, sg_max_total_share_count, sg_min_total_share_count, a_keygen_voting_threshold, a_sign_voting_threshold, sg_keygen_timeout, sg_sign_timeout]) => ({
    key_role: xc_key_role >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyRole[xc_key_role] : __UNDEFINED,
    key_type: xc_key_type >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyType[xc_key_type] : __UNDEFINED,
    min_keygen_threshold: a_min_keygen_threshold && expandAxelarUtilsV1beta1Threshold(a_min_keygen_threshold),
    safety_threshold: a_safety_threshold && expandAxelarUtilsV1beta1Threshold(a_safety_threshold),
    key_share_distribution_policy: xc_key_share_distribution_policy >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyShareDistributionPolicy[xc_key_share_distribution_policy] : __UNDEFINED,
    max_total_share_count: sg_max_total_share_count,
    min_total_share_count: sg_min_total_share_count,
    keygen_voting_threshold: a_keygen_voting_threshold && expandAxelarUtilsV1beta1Threshold(a_keygen_voting_threshold),
    sign_voting_threshold: a_sign_voting_threshold && expandAxelarUtilsV1beta1Threshold(a_sign_voting_threshold),
    keygen_timeout: sg_keygen_timeout,
    sign_timeout: sg_sign_timeout,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssExportedV1beta1SigKeyPair}
 */
export const condenseAxelarTssExportedV1beta1SigKeyPair = (g_msg) => encodeAxelarTssExportedV1beta1SigKeyPair(safe_base64_to_bytes(g_msg.pub_key), safe_base64_to_bytes(g_msg.signature));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.exported.v1beta1.SigKeyPair` - PubKeyInfo holds a pubkey and a signature
 */
export const expandAxelarTssExportedV1beta1SigKeyPair = ([atu8_pub_key, atu8_signature]) => ({
    pub_key: safe_bytes_to_base64(atu8_pub_key),
    signature: safe_bytes_to_base64(atu8_signature),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1StartKeygenRequest}
 */
export const condenseAxelarTssV1beta1StartKeygenRequest = (g_msg) => encodeAxelarTssV1beta1StartKeygenRequest(g_msg.sender, apply_opt(g_msg.key_info, condenseAxelarTssV1beta1KeyInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.StartKeygenRequest` - indicate the start of keygen
 */
export const expandAxelarTssV1beta1StartKeygenRequest = ([sa_sender, a_key_info]) => ({
    sender: sa_sender,
    key_info: a_key_info && expandAxelarTssV1beta1KeyInfo(a_key_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1KeyInfo}
 */
export const condenseAxelarTssV1beta1KeyInfo = (g_msg) => encodeAxelarTssV1beta1KeyInfo(g_msg.key_id, JsonToProtoEnumAxelarTssExportedV1beta1KeyRole[g_msg.key_role], JsonToProtoEnumAxelarTssExportedV1beta1KeyType[g_msg.key_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.KeyInfo` - holds information about a key
 */
export const expandAxelarTssV1beta1KeyInfo = ([si_key, xc_key_role, xc_key_type]) => ({
    key_id: si_key,
    key_role: xc_key_role >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyRole[xc_key_role] : __UNDEFINED,
    key_type: xc_key_type >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyType[xc_key_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1StartKeygenResponse}
 */
export const condenseAxelarTssV1beta1StartKeygenResponse = (g_msg) => encodeAxelarTssV1beta1StartKeygenResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.StartKeygenResponse` -
 */
export const expandAxelarTssV1beta1StartKeygenResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1RotateKeyRequest}
 */
export const condenseAxelarTssV1beta1RotateKeyRequest = (g_msg) => encodeAxelarTssV1beta1RotateKeyRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, JsonToProtoEnumAxelarTssExportedV1beta1KeyRole[g_msg.key_role], g_msg.key_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.RotateKeyRequest` -
 */
export const expandAxelarTssV1beta1RotateKeyRequest = ([sa_sender, s_chain, xc_key_role, si_key]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    key_role: xc_key_role >= 0 ? ProtoToJsonEnumAxelarTssExportedV1beta1KeyRole[xc_key_role] : __UNDEFINED,
    key_id: si_key,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1RotateKeyResponse}
 */
export const condenseAxelarTssV1beta1RotateKeyResponse = (g_msg) => encodeAxelarTssV1beta1RotateKeyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.RotateKeyResponse` -
 */
export const expandAxelarTssV1beta1RotateKeyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ProcessKeygenTrafficRequest}
 */
export const condenseAxelarTssV1beta1ProcessKeygenTrafficRequest = (g_msg) => encodeAxelarTssV1beta1ProcessKeygenTrafficRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.session_id, apply_opt(g_msg.payload, condenseAxelarTssTofndV1beta1TrafficOut));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ProcessKeygenTrafficRequest` - protocol message
 */
export const expandAxelarTssV1beta1ProcessKeygenTrafficRequest = ([sa_sender, si_session, a_payload]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    session_id: si_session,
    payload: a_payload && expandAxelarTssTofndV1beta1TrafficOut(a_payload),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ProcessKeygenTrafficResponse}
 */
export const condenseAxelarTssV1beta1ProcessKeygenTrafficResponse = (g_msg) => encodeAxelarTssV1beta1ProcessKeygenTrafficResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ProcessKeygenTrafficResponse` -
 */
export const expandAxelarTssV1beta1ProcessKeygenTrafficResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ProcessSignTrafficRequest}
 */
export const condenseAxelarTssV1beta1ProcessSignTrafficRequest = (g_msg) => encodeAxelarTssV1beta1ProcessSignTrafficRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.session_id, apply_opt(g_msg.payload, condenseAxelarTssTofndV1beta1TrafficOut));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ProcessSignTrafficRequest` - protocol message
 */
export const expandAxelarTssV1beta1ProcessSignTrafficRequest = ([sa_sender, si_session, a_payload]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    session_id: si_session,
    payload: a_payload && expandAxelarTssTofndV1beta1TrafficOut(a_payload),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ProcessSignTrafficResponse}
 */
export const condenseAxelarTssV1beta1ProcessSignTrafficResponse = (g_msg) => encodeAxelarTssV1beta1ProcessSignTrafficResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ProcessSignTrafficResponse` -
 */
export const expandAxelarTssV1beta1ProcessSignTrafficResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1VotePubKeyRequest}
 */
export const condenseAxelarTssV1beta1VotePubKeyRequest = (g_msg) => encodeAxelarTssV1beta1VotePubKeyRequest(addr_bytes_to_bech32(g_msg.sender), apply_opt(g_msg.poll_key, condenseAxelarVoteExportedV1beta1PollKey), apply_opt(g_msg.result, condenseAxelarTssTofndV1beta1MessageOutKeygenResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.VotePubKeyRequest` - represents the message to vote on a public key
 */
export const expandAxelarTssV1beta1VotePubKeyRequest = ([sa_sender, a_poll_key, a_result]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    poll_key: a_poll_key && expandAxelarVoteExportedV1beta1PollKey(a_poll_key),
    result: a_result && expandAxelarTssTofndV1beta1MessageOutKeygenResult(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1VotePubKeyResponse}
 */
export const condenseAxelarTssV1beta1VotePubKeyResponse = (g_msg) => encodeAxelarTssV1beta1VotePubKeyResponse(g_msg.log);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.VotePubKeyResponse` -
 */
export const expandAxelarTssV1beta1VotePubKeyResponse = ([s_log]) => ({
    log: s_log,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1VoteSigRequest}
 */
export const condenseAxelarTssV1beta1VoteSigRequest = (g_msg) => encodeAxelarTssV1beta1VoteSigRequest(addr_bytes_to_bech32(g_msg.sender), apply_opt(g_msg.poll_key, condenseAxelarVoteExportedV1beta1PollKey), apply_opt(g_msg.result, condenseAxelarTssTofndV1beta1MessageOutSignResult));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.VoteSigRequest` - represents a message to vote for a signature
 */
export const expandAxelarTssV1beta1VoteSigRequest = ([sa_sender, a_poll_key, a_result]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    poll_key: a_poll_key && expandAxelarVoteExportedV1beta1PollKey(a_poll_key),
    result: a_result && expandAxelarTssTofndV1beta1MessageOutSignResult(a_result),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1VoteSigResponse}
 */
export const condenseAxelarTssV1beta1VoteSigResponse = (g_msg) => encodeAxelarTssV1beta1VoteSigResponse(g_msg.log);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.VoteSigResponse` -
 */
export const expandAxelarTssV1beta1VoteSigResponse = ([s_log]) => ({
    log: s_log,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1HeartBeatRequest}
 */
export const condenseAxelarTssV1beta1HeartBeatRequest = (g_msg) => encodeAxelarTssV1beta1HeartBeatRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.key_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.HeartBeatRequest` -
 */
export const expandAxelarTssV1beta1HeartBeatRequest = ([sa_sender, a_key_ids]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    key_ids: a_key_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1HeartBeatResponse}
 */
export const condenseAxelarTssV1beta1HeartBeatResponse = (g_msg) => encodeAxelarTssV1beta1HeartBeatResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.HeartBeatResponse` -
 */
export const expandAxelarTssV1beta1HeartBeatResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1RegisterExternalKeysRequest}
 */
export const condenseAxelarTssV1beta1RegisterExternalKeysRequest = (g_msg) => encodeAxelarTssV1beta1RegisterExternalKeysRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.chain, map(g_msg.external_keys, condenseAxelarTssV1beta1RegisterExternalKeysRequestExternalKey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.RegisterExternalKeysRequest` -
 */
export const expandAxelarTssV1beta1RegisterExternalKeysRequest = ([sa_sender, s_chain, a_external_keys]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    chain: s_chain,
    external_keys: a_external_keys && map(a_external_keys, expandAxelarTssV1beta1RegisterExternalKeysRequestExternalKey),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1RegisterExternalKeysRequestExternalKey}
 */
export const condenseAxelarTssV1beta1RegisterExternalKeysRequestExternalKey = (g_msg) => encodeAxelarTssV1beta1RegisterExternalKeysRequestExternalKey(g_msg.id, safe_base64_to_bytes(g_msg.pub_key));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey` -
 */
export const expandAxelarTssV1beta1RegisterExternalKeysRequestExternalKey = ([s_id, atu8_pub_key]) => ({
    id: s_id,
    pub_key: safe_bytes_to_base64(atu8_pub_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1RegisterExternalKeysResponse}
 */
export const condenseAxelarTssV1beta1RegisterExternalKeysResponse = (g_msg) => encodeAxelarTssV1beta1RegisterExternalKeysResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.RegisterExternalKeysResponse` -
 */
export const expandAxelarTssV1beta1RegisterExternalKeysResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1SubmitMultisigPubKeysRequest}
 */
export const condenseAxelarTssV1beta1SubmitMultisigPubKeysRequest = (g_msg) => encodeAxelarTssV1beta1SubmitMultisigPubKeysRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.key_id, map(g_msg.sig_key_pairs, condenseAxelarTssExportedV1beta1SigKeyPair));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.SubmitMultisigPubKeysRequest` -
 */
export const expandAxelarTssV1beta1SubmitMultisigPubKeysRequest = ([sa_sender, si_key, a_sig_key_pairs]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    key_id: si_key,
    sig_key_pairs: a_sig_key_pairs && map(a_sig_key_pairs, expandAxelarTssExportedV1beta1SigKeyPair),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1SubmitMultisigPubKeysResponse}
 */
export const condenseAxelarTssV1beta1SubmitMultisigPubKeysResponse = (g_msg) => encodeAxelarTssV1beta1SubmitMultisigPubKeysResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.SubmitMultisigPubKeysResponse` -
 */
export const expandAxelarTssV1beta1SubmitMultisigPubKeysResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1SubmitMultisigSignaturesRequest}
 */
export const condenseAxelarTssV1beta1SubmitMultisigSignaturesRequest = (g_msg) => encodeAxelarTssV1beta1SubmitMultisigSignaturesRequest(addr_bytes_to_bech32(g_msg.sender), g_msg.sig_id, map(g_msg.signatures, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.SubmitMultisigSignaturesRequest` -
 */
export const expandAxelarTssV1beta1SubmitMultisigSignaturesRequest = ([sa_sender, si_sig, a_signatures]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    sig_id: si_sig,
    signatures: map(a_signatures, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1SubmitMultisigSignaturesResponse}
 */
export const condenseAxelarTssV1beta1SubmitMultisigSignaturesResponse = (g_msg) => encodeAxelarTssV1beta1SubmitMultisigSignaturesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.SubmitMultisigSignaturesResponse` -
 */
export const expandAxelarTssV1beta1SubmitMultisigSignaturesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1KeygenVoteData}
 */
export const condenseAxelarTssV1beta1KeygenVoteData = (g_msg) => encodeAxelarTssV1beta1KeygenVoteData(safe_base64_to_bytes(g_msg.pub_key), safe_base64_to_bytes(g_msg.group_recovery_info));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.KeygenVoteData` -
 */
export const expandAxelarTssV1beta1KeygenVoteData = ([atu8_pub_key, atu8_group_recovery_info]) => ({
    pub_key: safe_bytes_to_base64(atu8_pub_key),
    group_recovery_info: safe_bytes_to_base64(atu8_group_recovery_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1MultisigInfo}
 */
export const condenseAxelarTssV1beta1MultisigInfo = (g_msg) => encodeAxelarTssV1beta1MultisigInfo(g_msg.id, g_msg.timeout, g_msg.target_num, map(g_msg.infos, condenseAxelarTssV1beta1MultisigInfoInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.MultisigInfo` -
 */
export const expandAxelarTssV1beta1MultisigInfo = ([s_id, sg_timeout, sg_target_num, a_infos]) => ({
    id: s_id,
    timeout: sg_timeout,
    target_num: sg_target_num,
    infos: a_infos && map(a_infos, expandAxelarTssV1beta1MultisigInfoInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1MultisigInfoInfo}
 */
export const condenseAxelarTssV1beta1MultisigInfoInfo = (g_msg) => encodeAxelarTssV1beta1MultisigInfoInfo(safe_base64_to_bytes(g_msg.participant), map(g_msg.data, safe_base64_to_bytes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.MultisigInfo.Info` -
 */
export const expandAxelarTssV1beta1MultisigInfoInfo = ([atu8_participant, a_datas]) => ({
    participant: safe_bytes_to_base64(atu8_participant),
    data: map(a_datas, safe_bytes_to_base64),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1KeyRecoveryInfo}
 */
export const condenseAxelarTssV1beta1KeyRecoveryInfo = (g_msg) => encodeAxelarTssV1beta1KeyRecoveryInfo(g_msg.key_id, safe_base64_to_bytes(g_msg.public), map(g_msg.private, condenseAxelarTssV1beta1KeyRecoveryInfoPrivateEntry));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.KeyRecoveryInfo` -
 */
export const expandAxelarTssV1beta1KeyRecoveryInfo = ([si_key, atu8_public, a_private]) => ({
    key_id: si_key,
    public: safe_bytes_to_base64(atu8_public),
    private: a_private && map(a_private, expandAxelarTssV1beta1KeyRecoveryInfoPrivateEntry),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1KeyRecoveryInfoPrivateEntry}
 */
export const condenseAxelarTssV1beta1KeyRecoveryInfoPrivateEntry = (g_msg) => encodeAxelarTssV1beta1KeyRecoveryInfoPrivateEntry(g_msg.key, safe_base64_to_bytes(g_msg.value));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.KeyRecoveryInfo.PrivateEntry` -
 */
export const expandAxelarTssV1beta1KeyRecoveryInfoPrivateEntry = ([s_key, atu8_value]) => ({
    key: s_key,
    value: safe_bytes_to_base64(atu8_value),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ExternalKeys}
 */
export const condenseAxelarTssV1beta1ExternalKeys = (g_msg) => encodeAxelarTssV1beta1ExternalKeys(g_msg.chain, g_msg.key_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ExternalKeys` -
 */
export const expandAxelarTssV1beta1ExternalKeys = ([s_chain, a_key_ids]) => ({
    chain: s_chain,
    key_ids: a_key_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ValidatorStatus}
 */
export const condenseAxelarTssV1beta1ValidatorStatus = (g_msg) => encodeAxelarTssV1beta1ValidatorStatus(safe_base64_to_bytes(g_msg.validator), g_msg.suspended_until);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ValidatorStatus` -
 */
export const expandAxelarTssV1beta1ValidatorStatus = ([atu8_validator, sg_suspended_until]) => ({
    validator: safe_bytes_to_base64(atu8_validator),
    suspended_until: sg_suspended_until,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ParamsRequest}
 */
export const condenseAxelarTssV1beta1ParamsRequest = (g_msg) => encodeAxelarTssV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarTssV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1ParamsResponse}
 */
export const condenseAxelarTssV1beta1ParamsResponse = (g_msg) => encodeAxelarTssV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarTssV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.ParamsResponse` -
 */
export const expandAxelarTssV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarTssV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1Params}
 */
export const condenseAxelarTssV1beta1Params = (g_msg) => encodeAxelarTssV1beta1Params(map(g_msg.key_requirements, condenseAxelarTssExportedV1beta1KeyRequirement), g_msg.suspend_duration_in_blocks, g_msg.heartbeat_period_in_blocks, apply_opt(g_msg.max_missed_blocks_per_window, condenseAxelarUtilsV1beta1Threshold), g_msg.unbonding_locking_key_rotation_count, apply_opt(g_msg.external_multisig_threshold, condenseAxelarUtilsV1beta1Threshold), g_msg.max_sign_queue_size, g_msg.max_simultaneous_sign_shares, g_msg.tss_signed_blocks_window);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.Params` - the parameter set for this module
 */
export const expandAxelarTssV1beta1Params = ([a_key_requirements, sg_suspend_duration_in_blocks, sg_heartbeat_period_in_blocks, a_max_missed_blocks_per_window, sg_unbonding_locking_key_rotation_count, a_external_multisig_threshold, sg_max_sign_queue_size, sg_max_simultaneous_sign_shares, sg_tss_signed_blocks_window]) => ({
    key_requirements: a_key_requirements && map(a_key_requirements, expandAxelarTssExportedV1beta1KeyRequirement),
    suspend_duration_in_blocks: sg_suspend_duration_in_blocks,
    heartbeat_period_in_blocks: sg_heartbeat_period_in_blocks,
    max_missed_blocks_per_window: a_max_missed_blocks_per_window && expandAxelarUtilsV1beta1Threshold(a_max_missed_blocks_per_window),
    unbonding_locking_key_rotation_count: sg_unbonding_locking_key_rotation_count,
    external_multisig_threshold: a_external_multisig_threshold && expandAxelarUtilsV1beta1Threshold(a_external_multisig_threshold),
    max_sign_queue_size: sg_max_sign_queue_size,
    max_simultaneous_sign_shares: sg_max_simultaneous_sign_shares,
    tss_signed_blocks_window: sg_tss_signed_blocks_window,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarTssV1beta1GenesisState}
 */
export const condenseAxelarTssV1beta1GenesisState = (g_msg) => encodeAxelarTssV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarTssV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.tss.v1beta1.GenesisState` -
 */
export const expandAxelarTssV1beta1GenesisState = ([a_params]) => ({
    params: a_params && expandAxelarTssV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1UpdateGovernanceKeyRequest}
 */
export const condenseAxelarPermissionV1beta1UpdateGovernanceKeyRequest = (g_msg) => encodeAxelarPermissionV1beta1UpdateGovernanceKeyRequest(addr_bytes_to_bech32(g_msg.sender), apply_opt(g_msg.governance_key, condenseCosmosCryptoMultisigLegacyAminoPubKey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.UpdateGovernanceKeyRequest` -
 */
export const expandAxelarPermissionV1beta1UpdateGovernanceKeyRequest = ([sa_sender, a_governance_key]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    governance_key: a_governance_key && expandCosmosCryptoMultisigLegacyAminoPubKey(a_governance_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1UpdateGovernanceKeyResponse}
 */
export const condenseAxelarPermissionV1beta1UpdateGovernanceKeyResponse = (g_msg) => encodeAxelarPermissionV1beta1UpdateGovernanceKeyResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.UpdateGovernanceKeyResponse` -
 */
export const expandAxelarPermissionV1beta1UpdateGovernanceKeyResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1RegisterControllerRequest}
 */
export const condenseAxelarPermissionV1beta1RegisterControllerRequest = (g_msg) => encodeAxelarPermissionV1beta1RegisterControllerRequest(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.controller));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.RegisterControllerRequest` - MsgRegisterController represents a message to register a controller account
 */
export const expandAxelarPermissionV1beta1RegisterControllerRequest = ([sa_sender, atu8_controller]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    controller: safe_bytes_to_base64(atu8_controller),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1RegisterControllerResponse}
 */
export const condenseAxelarPermissionV1beta1RegisterControllerResponse = (g_msg) => encodeAxelarPermissionV1beta1RegisterControllerResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.RegisterControllerResponse` -
 */
export const expandAxelarPermissionV1beta1RegisterControllerResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1DeregisterControllerRequest}
 */
export const condenseAxelarPermissionV1beta1DeregisterControllerRequest = (g_msg) => encodeAxelarPermissionV1beta1DeregisterControllerRequest(addr_bytes_to_bech32(g_msg.sender), safe_base64_to_bytes(g_msg.controller));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.DeregisterControllerRequest` - DeregisterController represents a message to deregister a controller account
 */
export const expandAxelarPermissionV1beta1DeregisterControllerRequest = ([sa_sender, atu8_controller]) => ({
    sender: safe_bytes_to_base64(bech32_decode(sa_sender)),
    controller: safe_bytes_to_base64(atu8_controller),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1DeregisterControllerResponse}
 */
export const condenseAxelarPermissionV1beta1DeregisterControllerResponse = (g_msg) => encodeAxelarPermissionV1beta1DeregisterControllerResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.DeregisterControllerResponse` -
 */
export const expandAxelarPermissionV1beta1DeregisterControllerResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1GovAccount}
 */
export const condenseAxelarPermissionV1beta1GovAccount = (g_msg) => encodeAxelarPermissionV1beta1GovAccount(safe_base64_to_bytes(g_msg.address), JsonToProtoEnumAxelarPermissionExportedV1beta1Role[g_msg.role]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.GovAccount` -
 */
export const expandAxelarPermissionV1beta1GovAccount = ([atu8_address, xc_role]) => ({
    address: safe_bytes_to_base64(atu8_address),
    role: xc_role >= 0 ? ProtoToJsonEnumAxelarPermissionExportedV1beta1Role[xc_role] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1QueryGovernanceKeyRequest}
 */
export const condenseAxelarPermissionV1beta1QueryGovernanceKeyRequest = (g_msg) => encodeAxelarPermissionV1beta1QueryGovernanceKeyRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.QueryGovernanceKeyRequest` - the request type for the Query/GovernanceKey RPC method
 */
export const expandAxelarPermissionV1beta1QueryGovernanceKeyRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1QueryGovernanceKeyResponse}
 */
export const condenseAxelarPermissionV1beta1QueryGovernanceKeyResponse = (g_msg) => encodeAxelarPermissionV1beta1QueryGovernanceKeyResponse(apply_opt(g_msg.governance_key, condenseCosmosCryptoMultisigLegacyAminoPubKey));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.QueryGovernanceKeyResponse` - the response type for the Query/GovernanceKey RPC method
 */
export const expandAxelarPermissionV1beta1QueryGovernanceKeyResponse = ([a_governance_key]) => ({
    governance_key: a_governance_key && expandCosmosCryptoMultisigLegacyAminoPubKey(a_governance_key),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1ParamsRequest}
 */
export const condenseAxelarPermissionV1beta1ParamsRequest = (g_msg) => encodeAxelarPermissionV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export const expandAxelarPermissionV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1ParamsResponse}
 */
export const condenseAxelarPermissionV1beta1ParamsResponse = (g_msg) => encodeAxelarPermissionV1beta1ParamsResponse(apply_opt(g_msg.params, condenseAxelarPermissionV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.ParamsResponse` -
 */
export const expandAxelarPermissionV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandAxelarPermissionV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1Params}
 */
export const condenseAxelarPermissionV1beta1Params = (g_msg) => encodeAxelarPermissionV1beta1Params();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.Params` - represent the genesis parameters for the module
 */
export const expandAxelarPermissionV1beta1Params = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedAxelarPermissionV1beta1GenesisState}
 */
export const condenseAxelarPermissionV1beta1GenesisState = (g_msg) => encodeAxelarPermissionV1beta1GenesisState(apply_opt(g_msg.params, condenseAxelarPermissionV1beta1Params), apply_opt(g_msg.governance_key, condenseCosmosCryptoMultisigLegacyAminoPubKey), map(g_msg.gov_accounts, condenseAxelarPermissionV1beta1GovAccount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `axelar.permission.v1beta1.GenesisState` - represents the genesis state
 */
export const expandAxelarPermissionV1beta1GenesisState = ([a_params, a_governance_key, a_gov_accounts]) => ({
    params: a_params && expandAxelarPermissionV1beta1Params(a_params),
    governance_key: a_governance_key && expandCosmosCryptoMultisigLegacyAminoPubKey(a_governance_key),
    gov_accounts: a_gov_accounts && map(a_gov_accounts, expandAxelarPermissionV1beta1GovAccount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGaiaGlobalfeeV1beta1QueryParamsRequest}
 */
export const condenseGaiaGlobalfeeV1beta1QueryParamsRequest = (g_msg) => encodeGaiaGlobalfeeV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `gaia.globalfee.v1beta1.QueryParamsRequest` - QueryMinimumGasPricesRequest is the request type for the Query/MinimumGasPrices RPC method.
 */
export const expandGaiaGlobalfeeV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGaiaGlobalfeeV1beta1QueryParamsResponse}
 */
export const condenseGaiaGlobalfeeV1beta1QueryParamsResponse = (g_msg) => encodeGaiaGlobalfeeV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseGaiaGlobalfeeV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `gaia.globalfee.v1beta1.QueryParamsResponse` - QueryMinimumGasPricesResponse is the response type for the Query/MinimumGasPrices RPC method.
 */
export const expandGaiaGlobalfeeV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandGaiaGlobalfeeV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGaiaGlobalfeeV1beta1Params}
 */
export const condenseGaiaGlobalfeeV1beta1Params = (g_msg) => encodeGaiaGlobalfeeV1beta1Params(map(g_msg.minimum_gas_prices, condenseCosmosBaseV1beta1DecCoin), g_msg.bypass_min_fee_msg_types, g_msg.max_total_bypass_min_fee_msg_gas_usage);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `gaia.globalfee.v1beta1.Params` - defines the set of module parameters.
 */
export const expandGaiaGlobalfeeV1beta1Params = ([a_minimum_gas_prices, a_bypass_min_fee_msg_types, sg_max_total_bypass_min_fee_msg_gas_usage]) => ({
    minimum_gas_prices: a_minimum_gas_prices && map(a_minimum_gas_prices, expandCosmosBaseV1beta1DecCoin),
    bypass_min_fee_msg_types: a_bypass_min_fee_msg_types,
    max_total_bypass_min_fee_msg_gas_usage: sg_max_total_bypass_min_fee_msg_gas_usage,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedGaiaGlobalfeeV1beta1GenesisState}
 */
export const condenseGaiaGlobalfeeV1beta1GenesisState = (g_msg) => encodeGaiaGlobalfeeV1beta1GenesisState(apply_opt(g_msg.params, condenseGaiaGlobalfeeV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `gaia.globalfee.v1beta1.GenesisState` - - initial state of module
 */
export const expandGaiaGlobalfeeV1beta1GenesisState = ([a_params]) => ({
    params: a_params && expandGaiaGlobalfeeV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUpdateParams}
 */
export const condenseJunoCwhooksV1MsgUpdateParams = (g_msg) => encodeJunoCwhooksV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoCwhooksV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoCwhooksV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoCwhooksV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1Params}
 */
export const condenseJunoCwhooksV1Params = (g_msg) => encodeJunoCwhooksV1Params(g_msg.contract_gas_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.Params` - defines the set of module parameters.
 */
export const expandJunoCwhooksV1Params = ([sg_contract_gas_limit]) => ({
    contract_gas_limit: sg_contract_gas_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUpdateParamsResponse}
 */
export const condenseJunoCwhooksV1MsgUpdateParamsResponse = (g_msg) => encodeJunoCwhooksV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandJunoCwhooksV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgRegisterStaking}
 */
export const condenseJunoCwhooksV1MsgRegisterStaking = (g_msg) => encodeJunoCwhooksV1MsgRegisterStaking(g_msg.contract_address, g_msg.register_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgRegisterStaking` -
 */
export const expandJunoCwhooksV1MsgRegisterStaking = ([sa_contract, sa_register]) => ({
    contract_address: sa_contract,
    register_address: sa_register,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgRegisterStakingResponse}
 */
export const condenseJunoCwhooksV1MsgRegisterStakingResponse = (g_msg) => encodeJunoCwhooksV1MsgRegisterStakingResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgRegisterStakingResponse` -
 */
export const expandJunoCwhooksV1MsgRegisterStakingResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgRegisterGovernance}
 */
export const condenseJunoCwhooksV1MsgRegisterGovernance = (g_msg) => encodeJunoCwhooksV1MsgRegisterGovernance(g_msg.contract_address, g_msg.register_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgRegisterGovernance` -
 */
export const expandJunoCwhooksV1MsgRegisterGovernance = ([sa_contract, sa_register]) => ({
    contract_address: sa_contract,
    register_address: sa_register,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgRegisterGovernanceResponse}
 */
export const condenseJunoCwhooksV1MsgRegisterGovernanceResponse = (g_msg) => encodeJunoCwhooksV1MsgRegisterGovernanceResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgRegisterGovernanceResponse` -
 */
export const expandJunoCwhooksV1MsgRegisterGovernanceResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUnregisterGovernance}
 */
export const condenseJunoCwhooksV1MsgUnregisterGovernance = (g_msg) => encodeJunoCwhooksV1MsgUnregisterGovernance(g_msg.contract_address, g_msg.register_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUnregisterGovernance` -
 */
export const expandJunoCwhooksV1MsgUnregisterGovernance = ([sa_contract, sa_register]) => ({
    contract_address: sa_contract,
    register_address: sa_register,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUnregisterGovernanceResponse}
 */
export const condenseJunoCwhooksV1MsgUnregisterGovernanceResponse = (g_msg) => encodeJunoCwhooksV1MsgUnregisterGovernanceResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUnregisterGovernanceResponse` -
 */
export const expandJunoCwhooksV1MsgUnregisterGovernanceResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUnregisterStaking}
 */
export const condenseJunoCwhooksV1MsgUnregisterStaking = (g_msg) => encodeJunoCwhooksV1MsgUnregisterStaking(g_msg.contract_address, g_msg.register_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUnregisterStaking` -
 */
export const expandJunoCwhooksV1MsgUnregisterStaking = ([sa_contract, sa_register]) => ({
    contract_address: sa_contract,
    register_address: sa_register,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1MsgUnregisterStakingResponse}
 */
export const condenseJunoCwhooksV1MsgUnregisterStakingResponse = (g_msg) => encodeJunoCwhooksV1MsgUnregisterStakingResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.MsgUnregisterStakingResponse` -
 */
export const expandJunoCwhooksV1MsgUnregisterStakingResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryParamsRequest}
 */
export const condenseJunoCwhooksV1QueryParamsRequest = (g_msg) => encodeJunoCwhooksV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryParamsRequest` - QueryParams is the request type to get all module params.
 */
export const expandJunoCwhooksV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryParamsResponse}
 */
export const condenseJunoCwhooksV1QueryParamsResponse = (g_msg) => encodeJunoCwhooksV1QueryParamsResponse(apply_opt(g_msg.params, condenseJunoCwhooksV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryParamsResponse` - QueryClockContractsResponse is the response type for the Query/ClockContracts RPC method.
 */
export const expandJunoCwhooksV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoCwhooksV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryStakingContractsRequest}
 */
export const condenseJunoCwhooksV1QueryStakingContractsRequest = (g_msg) => encodeJunoCwhooksV1QueryStakingContractsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryStakingContractsRequest` -
 */
export const expandJunoCwhooksV1QueryStakingContractsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryStakingContractsResponse}
 */
export const condenseJunoCwhooksV1QueryStakingContractsResponse = (g_msg) => encodeJunoCwhooksV1QueryStakingContractsResponse(g_msg.contracts);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryStakingContractsResponse` -
 */
export const expandJunoCwhooksV1QueryStakingContractsResponse = ([a_contracts]) => ({
    contracts: a_contracts,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryGovernanceContractsRequest}
 */
export const condenseJunoCwhooksV1QueryGovernanceContractsRequest = (g_msg) => encodeJunoCwhooksV1QueryGovernanceContractsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryGovernanceContractsRequest` - QueryStakingContractsRequest
 */
export const expandJunoCwhooksV1QueryGovernanceContractsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1QueryGovernanceContractsResponse}
 */
export const condenseJunoCwhooksV1QueryGovernanceContractsResponse = (g_msg) => encodeJunoCwhooksV1QueryGovernanceContractsResponse(g_msg.contracts);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.QueryGovernanceContractsResponse` -
 */
export const expandJunoCwhooksV1QueryGovernanceContractsResponse = ([a_contracts]) => ({
    contracts: a_contracts,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoCwhooksV1GenesisState}
 */
export const condenseJunoCwhooksV1GenesisState = (g_msg) => encodeJunoCwhooksV1GenesisState(apply_opt(g_msg.params, condenseJunoCwhooksV1Params), g_msg.staking_contract_addresses, g_msg.gov_contract_addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.cwhooks.v1.GenesisState` - - initial state of module
 */
export const expandJunoCwhooksV1GenesisState = ([a_params, a_staking_contract_addresses, a_gov_contract_addresses]) => ({
    params: a_params && expandJunoCwhooksV1Params(a_params),
    staking_contract_addresses: a_staking_contract_addresses,
    gov_contract_addresses: a_gov_contract_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1MsgDistributeTokens}
 */
export const condenseJunoDripV1MsgDistributeTokens = (g_msg) => encodeJunoDripV1MsgDistributeTokens(g_msg.sender_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.MsgDistributeTokens` - defines a message that registers a Distribution of tokens.
 */
export const expandJunoDripV1MsgDistributeTokens = ([sa_sender, a_amount]) => ({
    sender_address: sa_sender,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1MsgDistributeTokensResponse}
 */
export const condenseJunoDripV1MsgDistributeTokensResponse = (g_msg) => encodeJunoDripV1MsgDistributeTokensResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.MsgDistributeTokensResponse` - defines the MsgDistributeTokens response type
 */
export const expandJunoDripV1MsgDistributeTokensResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1MsgUpdateParams}
 */
export const condenseJunoDripV1MsgUpdateParams = (g_msg) => encodeJunoDripV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoDripV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoDripV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoDripV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1Params}
 */
export const condenseJunoDripV1Params = (g_msg) => encodeJunoDripV1Params(g_msg.enable_drip, g_msg.allowed_addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.Params` - defines the drip module params
 */
export const expandJunoDripV1Params = ([b_enable_drip, , a_allowed_addresses]) => ({
    enable_drip: !!b_enable_drip,
    allowed_addresses: a_allowed_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1MsgUpdateParamsResponse}
 */
export const condenseJunoDripV1MsgUpdateParamsResponse = (g_msg) => encodeJunoDripV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.MsgUpdateParamsResponse` -
 */
export const expandJunoDripV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1QueryParamsRequest}
 */
export const condenseJunoDripV1QueryParamsRequest = (g_msg) => encodeJunoDripV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandJunoDripV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1QueryParamsResponse}
 */
export const condenseJunoDripV1QueryParamsResponse = (g_msg) => encodeJunoDripV1QueryParamsResponse(apply_opt(g_msg.params, condenseJunoDripV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandJunoDripV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoDripV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoDripV1GenesisState}
 */
export const condenseJunoDripV1GenesisState = (g_msg) => encodeJunoDripV1GenesisState(apply_opt(g_msg.params, condenseJunoDripV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.drip.v1.GenesisState` - defines the module's genesis state.
 */
export const expandJunoDripV1GenesisState = ([a_params]) => ({
    params: a_params && expandJunoDripV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgRegisterFeeShare}
 */
export const condenseJunoFeeshareV1MsgRegisterFeeShare = (g_msg) => encodeJunoFeeshareV1MsgRegisterFeeShare(g_msg.contract_address, g_msg.deployer_address, g_msg.withdrawer_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgRegisterFeeShare` - defines a message that registers a FeeShare
 */
export const expandJunoFeeshareV1MsgRegisterFeeShare = ([sa_contract, sa_deployer, sa_withdrawer]) => ({
    contract_address: sa_contract,
    deployer_address: sa_deployer,
    withdrawer_address: sa_withdrawer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgRegisterFeeShareResponse}
 */
export const condenseJunoFeeshareV1MsgRegisterFeeShareResponse = (g_msg) => encodeJunoFeeshareV1MsgRegisterFeeShareResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgRegisterFeeShareResponse` - defines the MsgRegisterFeeShare response type
 */
export const expandJunoFeeshareV1MsgRegisterFeeShareResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgUpdateFeeShare}
 */
export const condenseJunoFeeshareV1MsgUpdateFeeShare = (g_msg) => encodeJunoFeeshareV1MsgUpdateFeeShare(g_msg.contract_address, g_msg.deployer_address, g_msg.withdrawer_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgUpdateFeeShare` - defines a message that updates the withdrawer address for a registered FeeShare
 */
export const expandJunoFeeshareV1MsgUpdateFeeShare = ([sa_contract, sa_deployer, sa_withdrawer]) => ({
    contract_address: sa_contract,
    deployer_address: sa_deployer,
    withdrawer_address: sa_withdrawer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgUpdateFeeShareResponse}
 */
export const condenseJunoFeeshareV1MsgUpdateFeeShareResponse = (g_msg) => encodeJunoFeeshareV1MsgUpdateFeeShareResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgUpdateFeeShareResponse` - defines the MsgUpdateFeeShare response type
 */
export const expandJunoFeeshareV1MsgUpdateFeeShareResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgCancelFeeShare}
 */
export const condenseJunoFeeshareV1MsgCancelFeeShare = (g_msg) => encodeJunoFeeshareV1MsgCancelFeeShare(g_msg.contract_address, g_msg.deployer_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgCancelFeeShare` - defines a message that cancels a registered FeeShare
 */
export const expandJunoFeeshareV1MsgCancelFeeShare = ([sa_contract, sa_deployer]) => ({
    contract_address: sa_contract,
    deployer_address: sa_deployer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgCancelFeeShareResponse}
 */
export const condenseJunoFeeshareV1MsgCancelFeeShareResponse = (g_msg) => encodeJunoFeeshareV1MsgCancelFeeShareResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgCancelFeeShareResponse` - defines the MsgCancelFeeShare response type
 */
export const expandJunoFeeshareV1MsgCancelFeeShareResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgUpdateParams}
 */
export const condenseJunoFeeshareV1MsgUpdateParams = (g_msg) => encodeJunoFeeshareV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoFeeshareV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoFeeshareV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoFeeshareV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1Params}
 */
export const condenseJunoFeeshareV1Params = (g_msg) => encodeJunoFeeshareV1Params(g_msg.enable_fee_share, g_msg.developer_shares, g_msg.allowed_denoms);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.Params` - defines the feeshare module params
 */
export const expandJunoFeeshareV1Params = ([b_enable_fee_share, s_developer_shares, a_allowed_denoms]) => ({
    enable_fee_share: !!b_enable_fee_share,
    developer_shares: s_developer_shares,
    allowed_denoms: a_allowed_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1MsgUpdateParamsResponse}
 */
export const condenseJunoFeeshareV1MsgUpdateParamsResponse = (g_msg) => encodeJunoFeeshareV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandJunoFeeshareV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryFeeSharesRequest}
 */
export const condenseJunoFeeshareV1QueryFeeSharesRequest = (g_msg) => encodeJunoFeeshareV1QueryFeeSharesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryFeeSharesRequest` - the request type for the Query/FeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryFeeSharesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryFeeSharesResponse}
 */
export const condenseJunoFeeshareV1QueryFeeSharesResponse = (g_msg) => encodeJunoFeeshareV1QueryFeeSharesResponse(map(g_msg.feeshare, condenseJunoFeeshareV1FeeShare), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryFeeSharesResponse` - the response type for the Query/FeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryFeeSharesResponse = ([a_feeshare, a_pagination]) => ({
    feeshare: a_feeshare && map(a_feeshare, expandJunoFeeshareV1FeeShare),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1FeeShare}
 */
export const condenseJunoFeeshareV1FeeShare = (g_msg) => encodeJunoFeeshareV1FeeShare(g_msg.contract_address, g_msg.deployer_address, g_msg.withdrawer_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.FeeShare` - defines an instance that organizes fee distribution conditions for the owner of a given smart contract
 */
export const expandJunoFeeshareV1FeeShare = ([sa_contract, sa_deployer, sa_withdrawer]) => ({
    contract_address: sa_contract,
    deployer_address: sa_deployer,
    withdrawer_address: sa_withdrawer,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryFeeShareRequest}
 */
export const condenseJunoFeeshareV1QueryFeeShareRequest = (g_msg) => encodeJunoFeeshareV1QueryFeeShareRequest(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryFeeShareRequest` - the request type for the Query/FeeShare RPC method.
 */
export const expandJunoFeeshareV1QueryFeeShareRequest = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryFeeShareResponse}
 */
export const condenseJunoFeeshareV1QueryFeeShareResponse = (g_msg) => encodeJunoFeeshareV1QueryFeeShareResponse(apply_opt(g_msg.feeshare, condenseJunoFeeshareV1FeeShare));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryFeeShareResponse` - the response type for the Query/FeeShare RPC method.
 */
export const expandJunoFeeshareV1QueryFeeShareResponse = ([a_feeshare]) => ({
    feeshare: a_feeshare && expandJunoFeeshareV1FeeShare(a_feeshare),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryParamsRequest}
 */
export const condenseJunoFeeshareV1QueryParamsRequest = (g_msg) => encodeJunoFeeshareV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandJunoFeeshareV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryParamsResponse}
 */
export const condenseJunoFeeshareV1QueryParamsResponse = (g_msg) => encodeJunoFeeshareV1QueryParamsResponse(apply_opt(g_msg.params, condenseJunoFeeshareV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandJunoFeeshareV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoFeeshareV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryDeployerFeeSharesRequest}
 */
export const condenseJunoFeeshareV1QueryDeployerFeeSharesRequest = (g_msg) => encodeJunoFeeshareV1QueryDeployerFeeSharesRequest(g_msg.deployer_address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryDeployerFeeSharesRequest` - the request type for the Query/DeployerFeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryDeployerFeeSharesRequest = ([sa_deployer, a_pagination]) => ({
    deployer_address: sa_deployer,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryDeployerFeeSharesResponse}
 */
export const condenseJunoFeeshareV1QueryDeployerFeeSharesResponse = (g_msg) => encodeJunoFeeshareV1QueryDeployerFeeSharesResponse(g_msg.contract_addresses, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryDeployerFeeSharesResponse` - the response type for the Query/DeployerFeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryDeployerFeeSharesResponse = ([a_contract_addresses, a_pagination]) => ({
    contract_addresses: a_contract_addresses,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryWithdrawerFeeSharesRequest}
 */
export const condenseJunoFeeshareV1QueryWithdrawerFeeSharesRequest = (g_msg) => encodeJunoFeeshareV1QueryWithdrawerFeeSharesRequest(g_msg.withdrawer_address, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryWithdrawerFeeSharesRequest` - the request type for the Query/WithdrawerFeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryWithdrawerFeeSharesRequest = ([sa_withdrawer, a_pagination]) => ({
    withdrawer_address: sa_withdrawer,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1QueryWithdrawerFeeSharesResponse}
 */
export const condenseJunoFeeshareV1QueryWithdrawerFeeSharesResponse = (g_msg) => encodeJunoFeeshareV1QueryWithdrawerFeeSharesResponse(g_msg.contract_addresses, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.QueryWithdrawerFeeSharesResponse` - the response type for the Query/WithdrawerFeeShares RPC method.
 */
export const expandJunoFeeshareV1QueryWithdrawerFeeSharesResponse = ([a_contract_addresses, a_pagination]) => ({
    contract_addresses: a_contract_addresses,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeeshareV1GenesisState}
 */
export const condenseJunoFeeshareV1GenesisState = (g_msg) => encodeJunoFeeshareV1GenesisState(apply_opt(g_msg.params, condenseJunoFeeshareV1Params), map(g_msg.fee_share, condenseJunoFeeshareV1FeeShare));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feeshare.v1.GenesisState` - defines the module's genesis state.
 */
export const expandJunoFeeshareV1GenesisState = ([a_params, a_fee_share]) => ({
    params: a_params && expandJunoFeeshareV1Params(a_params),
    fee_share: a_fee_share && map(a_fee_share, expandJunoFeeshareV1FeeShare),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintMsgUpdateParams}
 */
export const condenseJunoMintMsgUpdateParams = (g_msg) => encodeJunoMintMsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoMintParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoMintMsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoMintParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintParams}
 */
export const condenseJunoMintParams = (g_msg) => encodeJunoMintParams(g_msg.mint_denom, g_msg.blocks_per_year);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.Params` - holds parameters for the mint module.
 */
export const expandJunoMintParams = ([s_mint_denom, sg_blocks_per_year]) => ({
    mint_denom: s_mint_denom,
    blocks_per_year: sg_blocks_per_year,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintMsgUpdateParamsResponse}
 */
export const condenseJunoMintMsgUpdateParamsResponse = (g_msg) => encodeJunoMintMsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandJunoMintMsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryParamsRequest}
 */
export const condenseJunoMintQueryParamsRequest = (g_msg) => encodeJunoMintQueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandJunoMintQueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryParamsResponse}
 */
export const condenseJunoMintQueryParamsResponse = (g_msg) => encodeJunoMintQueryParamsResponse(apply_opt(g_msg.params, condenseJunoMintParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandJunoMintQueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoMintParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryInflationRequest}
 */
export const condenseJunoMintQueryInflationRequest = (g_msg) => encodeJunoMintQueryInflationRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryInflationRequest` - the request type for the Query/Inflation RPC method.
 */
export const expandJunoMintQueryInflationRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryInflationResponse}
 */
export const condenseJunoMintQueryInflationResponse = (g_msg) => encodeJunoMintQueryInflationResponse(safe_base64_to_bytes(g_msg.inflation));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryInflationResponse` - the response type for the Query/Inflation RPC method.
 */
export const expandJunoMintQueryInflationResponse = ([atu8_inflation]) => ({
    inflation: safe_bytes_to_base64(atu8_inflation),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryAnnualProvisionsRequest}
 */
export const condenseJunoMintQueryAnnualProvisionsRequest = (g_msg) => encodeJunoMintQueryAnnualProvisionsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryAnnualProvisionsRequest` - the request type for the Query/AnnualProvisions RPC method.
 */
export const expandJunoMintQueryAnnualProvisionsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryAnnualProvisionsResponse}
 */
export const condenseJunoMintQueryAnnualProvisionsResponse = (g_msg) => encodeJunoMintQueryAnnualProvisionsResponse(safe_base64_to_bytes(g_msg.annual_provisions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryAnnualProvisionsResponse` - the response type for the Query/AnnualProvisions RPC method.
 */
export const expandJunoMintQueryAnnualProvisionsResponse = ([atu8_annual_provisions]) => ({
    annual_provisions: safe_bytes_to_base64(atu8_annual_provisions),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryTargetSupplyRequest}
 */
export const condenseJunoMintQueryTargetSupplyRequest = (g_msg) => encodeJunoMintQueryTargetSupplyRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryTargetSupplyRequest` - the request type for the Query/TargetSupply RPC method.
 */
export const expandJunoMintQueryTargetSupplyRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintQueryTargetSupplyResponse}
 */
export const condenseJunoMintQueryTargetSupplyResponse = (g_msg) => encodeJunoMintQueryTargetSupplyResponse(safe_base64_to_bytes(g_msg.target_supply));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.QueryTargetSupplyResponse` - the response type for the Query/TargetSupply RPC method.
 */
export const expandJunoMintQueryTargetSupplyResponse = ([atu8_target_supply]) => ({
    target_supply: safe_bytes_to_base64(atu8_target_supply),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintGenesisState}
 */
export const condenseJunoMintGenesisState = (g_msg) => encodeJunoMintGenesisState(apply_opt(g_msg.minter, condenseJunoMintMinter), apply_opt(g_msg.params, condenseJunoMintParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.GenesisState` - defines the mint module's genesis state.
 */
export const expandJunoMintGenesisState = ([a_minter, a_params]) => ({
    minter: a_minter && expandJunoMintMinter(a_minter),
    params: a_params && expandJunoMintParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoMintMinter}
 */
export const condenseJunoMintMinter = (g_msg) => encodeJunoMintMinter(g_msg.inflation, g_msg.phase, g_msg.start_phase_block, g_msg.annual_provisions, g_msg.target_supply);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.mint.Minter` - represents the minting state.
 */
export const expandJunoMintMinter = ([s_inflation, sg_phase, sg_start_phase_block, s_annual_provisions, s_target_supply]) => ({
    inflation: s_inflation,
    phase: sg_phase,
    start_phase_block: sg_start_phase_block,
    annual_provisions: s_annual_provisions,
    target_supply: s_target_supply,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgRegisterFeePayContract}
 */
export const condenseJunoFeepayV1MsgRegisterFeePayContract = (g_msg) => encodeJunoFeepayV1MsgRegisterFeePayContract(g_msg.sender_address, apply_opt(g_msg.fee_pay_contract, condenseJunoFeepayV1FeePayContract));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgRegisterFeePayContract` - The message to register a fee pay contract.
 */
export const expandJunoFeepayV1MsgRegisterFeePayContract = ([sa_sender, a_fee_pay_contract]) => ({
    sender_address: sa_sender,
    fee_pay_contract: a_fee_pay_contract && expandJunoFeepayV1FeePayContract(a_fee_pay_contract),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1FeePayContract}
 */
export const condenseJunoFeepayV1FeePayContract = (g_msg) => encodeJunoFeepayV1FeePayContract(g_msg.contract_address, g_msg.balance, g_msg.wallet_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.FeePayContract` - This defines the address, balance, and wallet limit of a fee pay contract.
 */
export const expandJunoFeepayV1FeePayContract = ([sa_contract, sg_balance, sg_wallet_limit]) => ({
    contract_address: sa_contract,
    balance: sg_balance,
    wallet_limit: sg_wallet_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgRegisterFeePayContractResponse}
 */
export const condenseJunoFeepayV1MsgRegisterFeePayContractResponse = (g_msg) => encodeJunoFeepayV1MsgRegisterFeePayContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgRegisterFeePayContractResponse` - The response message for registering a fee pay contract.
 */
export const expandJunoFeepayV1MsgRegisterFeePayContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUnregisterFeePayContract}
 */
export const condenseJunoFeepayV1MsgUnregisterFeePayContract = (g_msg) => encodeJunoFeepayV1MsgUnregisterFeePayContract(g_msg.sender_address, g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUnregisterFeePayContract` - The message to unregister a fee pay contract.
 */
export const expandJunoFeepayV1MsgUnregisterFeePayContract = ([sa_sender, sa_contract]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUnregisterFeePayContractResponse}
 */
export const condenseJunoFeepayV1MsgUnregisterFeePayContractResponse = (g_msg) => encodeJunoFeepayV1MsgUnregisterFeePayContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUnregisterFeePayContractResponse` - The response message for unregistering a fee pay contract.
 */
export const expandJunoFeepayV1MsgUnregisterFeePayContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgFundFeePayContract}
 */
export const condenseJunoFeepayV1MsgFundFeePayContract = (g_msg) => encodeJunoFeepayV1MsgFundFeePayContract(g_msg.sender_address, g_msg.contract_address, map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgFundFeePayContract` - The message to fund a fee pay contract
 */
export const expandJunoFeepayV1MsgFundFeePayContract = ([sa_sender, sa_contract, a_amount]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgFundFeePayContractResponse}
 */
export const condenseJunoFeepayV1MsgFundFeePayContractResponse = (g_msg) => encodeJunoFeepayV1MsgFundFeePayContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgFundFeePayContractResponse` - The response message for funding a fee pay contract.
 */
export const expandJunoFeepayV1MsgFundFeePayContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUpdateFeePayContractWalletLimit}
 */
export const condenseJunoFeepayV1MsgUpdateFeePayContractWalletLimit = (g_msg) => encodeJunoFeepayV1MsgUpdateFeePayContractWalletLimit(g_msg.sender_address, g_msg.contract_address, g_msg.wallet_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUpdateFeePayContractWalletLimit` - The message to update a fee pay contract wallet limit.
 */
export const expandJunoFeepayV1MsgUpdateFeePayContractWalletLimit = ([sa_sender, sa_contract, sg_wallet_limit]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
    wallet_limit: sg_wallet_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse}
 */
export const condenseJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse = (g_msg) => encodeJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUpdateFeePayContractWalletLimitResponse` - The response message for updating a fee pay contract wallet limit.
 */
export const expandJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUpdateParams}
 */
export const condenseJunoFeepayV1MsgUpdateParams = (g_msg) => encodeJunoFeepayV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoFeepayV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoFeepayV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoFeepayV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1Params}
 */
export const condenseJunoFeepayV1Params = (g_msg) => encodeJunoFeepayV1Params(g_msg.enable_feepay);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.Params` - defines the feepay module params
 */
export const expandJunoFeepayV1Params = ([b_enable_feepay]) => ({
    enable_feepay: !!b_enable_feepay,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1MsgUpdateParamsResponse}
 */
export const condenseJunoFeepayV1MsgUpdateParamsResponse = (g_msg) => encodeJunoFeepayV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandJunoFeepayV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContract}
 */
export const condenseJunoFeepayV1QueryFeePayContract = (g_msg) => encodeJunoFeepayV1QueryFeePayContract(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContract` - retrieves a single fee pay contract
 */
export const expandJunoFeepayV1QueryFeePayContract = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContractResponse}
 */
export const condenseJunoFeepayV1QueryFeePayContractResponse = (g_msg) => encodeJunoFeepayV1QueryFeePayContractResponse(apply_opt(g_msg.fee_pay_contract, condenseJunoFeepayV1FeePayContract));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContractResponse` - defines the response for retrieving a single fee pay contract
 */
export const expandJunoFeepayV1QueryFeePayContractResponse = ([a_fee_pay_contract]) => ({
    fee_pay_contract: a_fee_pay_contract && expandJunoFeepayV1FeePayContract(a_fee_pay_contract),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContracts}
 */
export const condenseJunoFeepayV1QueryFeePayContracts = (g_msg) => encodeJunoFeepayV1QueryFeePayContracts(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContracts` - Message for querying a list of fee pay contracts
 */
export const expandJunoFeepayV1QueryFeePayContracts = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContractsResponse}
 */
export const condenseJunoFeepayV1QueryFeePayContractsResponse = (g_msg) => encodeJunoFeepayV1QueryFeePayContractsResponse(map(g_msg.fee_pay_contracts, condenseJunoFeepayV1FeePayContract), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContractsResponse` - The response for querying all fee pay contracts
 */
export const expandJunoFeepayV1QueryFeePayContractsResponse = ([a_fee_pay_contracts, a_pagination]) => ({
    fee_pay_contracts: a_fee_pay_contracts && map(a_fee_pay_contracts, expandJunoFeepayV1FeePayContract),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContractUses}
 */
export const condenseJunoFeepayV1QueryFeePayContractUses = (g_msg) => encodeJunoFeepayV1QueryFeePayContractUses(g_msg.contract_address, g_msg.wallet_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContractUses` - Message for querying the number of uses on a fee pay contract by wallet
 */
export const expandJunoFeepayV1QueryFeePayContractUses = ([sa_contract, sa_wallet]) => ({
    contract_address: sa_contract,
    wallet_address: sa_wallet,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayContractUsesResponse}
 */
export const condenseJunoFeepayV1QueryFeePayContractUsesResponse = (g_msg) => encodeJunoFeepayV1QueryFeePayContractUsesResponse(g_msg.uses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayContractUsesResponse` - The response for querying the number of uses on a fee pay contract by wallet
 */
export const expandJunoFeepayV1QueryFeePayContractUsesResponse = ([sg_uses]) => ({
    uses: sg_uses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayWalletIsEligible}
 */
export const condenseJunoFeepayV1QueryFeePayWalletIsEligible = (g_msg) => encodeJunoFeepayV1QueryFeePayWalletIsEligible(g_msg.contract_address, g_msg.wallet_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayWalletIsEligible` - Message for querying if a wallet is eligible for fee pay contract interactions
 */
export const expandJunoFeepayV1QueryFeePayWalletIsEligible = ([sa_contract, sa_wallet]) => ({
    contract_address: sa_contract,
    wallet_address: sa_wallet,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryFeePayWalletIsEligibleResponse}
 */
export const condenseJunoFeepayV1QueryFeePayWalletIsEligibleResponse = (g_msg) => encodeJunoFeepayV1QueryFeePayWalletIsEligibleResponse(g_msg.eligible);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryFeePayWalletIsEligibleResponse` - The response for querying if a wallet is eligible for fee pay contract interactions
 */
export const expandJunoFeepayV1QueryFeePayWalletIsEligibleResponse = ([b_eligible]) => ({
    eligible: !!b_eligible,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryParamsRequest}
 */
export const condenseJunoFeepayV1QueryParamsRequest = (g_msg) => encodeJunoFeepayV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandJunoFeepayV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1QueryParamsResponse}
 */
export const condenseJunoFeepayV1QueryParamsResponse = (g_msg) => encodeJunoFeepayV1QueryParamsResponse(apply_opt(g_msg.params, condenseJunoFeepayV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandJunoFeepayV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoFeepayV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1GenesisState}
 */
export const condenseJunoFeepayV1GenesisState = (g_msg) => encodeJunoFeepayV1GenesisState(apply_opt(g_msg.params, condenseJunoFeepayV1Params), map(g_msg.fee_pay_contracts, condenseJunoFeepayV1FeePayContract));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.GenesisState` - defines the module's genesis state.
 */
export const expandJunoFeepayV1GenesisState = ([a_params, a_fee_pay_contracts]) => ({
    params: a_params && expandJunoFeepayV1Params(a_params),
    fee_pay_contracts: a_fee_pay_contracts && map(a_fee_pay_contracts, expandJunoFeepayV1FeePayContract),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoFeepayV1FeePayWalletUsage}
 */
export const condenseJunoFeepayV1FeePayWalletUsage = (g_msg) => encodeJunoFeepayV1FeePayWalletUsage(g_msg.contract_address, g_msg.wallet_address, g_msg.uses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.feepay.v1.FeePayWalletUsage` - This object is used to store the number of times a wallet has interacted with a contract.
 */
export const expandJunoFeepayV1FeePayWalletUsage = ([sa_contract, sa_wallet, sg_uses]) => ({
    contract_address: sa_contract,
    wallet_address: sa_wallet,
    uses: sg_uses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgRegisterClockContract}
 */
export const condenseJunoClockV1MsgRegisterClockContract = (g_msg) => encodeJunoClockV1MsgRegisterClockContract(g_msg.sender_address, g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgRegisterClockContract` - the Msg/RegisterClockContract request type.
 */
export const expandJunoClockV1MsgRegisterClockContract = ([sa_sender, sa_contract]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgRegisterClockContractResponse}
 */
export const condenseJunoClockV1MsgRegisterClockContractResponse = (g_msg) => encodeJunoClockV1MsgRegisterClockContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgRegisterClockContractResponse` - defines the response structure for executing a MsgRegisterClockContract message.
 */
export const expandJunoClockV1MsgRegisterClockContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUnregisterClockContract}
 */
export const condenseJunoClockV1MsgUnregisterClockContract = (g_msg) => encodeJunoClockV1MsgUnregisterClockContract(g_msg.sender_address, g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUnregisterClockContract` - the Msg/UnregisterClockContract request type.
 */
export const expandJunoClockV1MsgUnregisterClockContract = ([sa_sender, sa_contract]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUnregisterClockContractResponse}
 */
export const condenseJunoClockV1MsgUnregisterClockContractResponse = (g_msg) => encodeJunoClockV1MsgUnregisterClockContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUnregisterClockContractResponse` - defines the response structure for executing a MsgUnregisterClockContract message.
 */
export const expandJunoClockV1MsgUnregisterClockContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUnjailClockContract}
 */
export const condenseJunoClockV1MsgUnjailClockContract = (g_msg) => encodeJunoClockV1MsgUnjailClockContract(g_msg.sender_address, g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUnjailClockContract` - the Msg/UnjailClockContract request type.
 */
export const expandJunoClockV1MsgUnjailClockContract = ([sa_sender, sa_contract]) => ({
    sender_address: sa_sender,
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUnjailClockContractResponse}
 */
export const condenseJunoClockV1MsgUnjailClockContractResponse = (g_msg) => encodeJunoClockV1MsgUnjailClockContractResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUnjailClockContractResponse` - defines the response structure for executing a MsgUnjailClockContract message.
 */
export const expandJunoClockV1MsgUnjailClockContractResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUpdateParams}
 */
export const condenseJunoClockV1MsgUpdateParams = (g_msg) => encodeJunoClockV1MsgUpdateParams(g_msg.authority, apply_opt(g_msg.params, condenseJunoClockV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export const expandJunoClockV1MsgUpdateParams = ([s_authority, a_params]) => ({
    authority: s_authority,
    params: a_params && expandJunoClockV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1Params}
 */
export const condenseJunoClockV1Params = (g_msg) => encodeJunoClockV1Params(g_msg.contract_gas_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.Params` - defines the set of module parameters.
 */
export const expandJunoClockV1Params = ([sg_contract_gas_limit]) => ({
    contract_gas_limit: sg_contract_gas_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1MsgUpdateParamsResponse}
 */
export const condenseJunoClockV1MsgUpdateParamsResponse = (g_msg) => encodeJunoClockV1MsgUpdateParamsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export const expandJunoClockV1MsgUpdateParamsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1ClockContract}
 */
export const condenseJunoClockV1ClockContract = (g_msg) => encodeJunoClockV1ClockContract(g_msg.contract_address, g_msg.is_jailed);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.ClockContract` - This object is used to store the contract address and the jail status of the contract.
 */
export const expandJunoClockV1ClockContract = ([sa_contract, b_is_jailed]) => ({
    contract_address: sa_contract,
    is_jailed: !!b_is_jailed,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryClockContracts}
 */
export const condenseJunoClockV1QueryClockContracts = (g_msg) => encodeJunoClockV1QueryClockContracts(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryClockContracts` - the request type to get all contracts.
 */
export const expandJunoClockV1QueryClockContracts = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryClockContractsResponse}
 */
export const condenseJunoClockV1QueryClockContractsResponse = (g_msg) => encodeJunoClockV1QueryClockContractsResponse(map(g_msg.clock_contracts, condenseJunoClockV1ClockContract), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryClockContractsResponse` - the response type for the Query/ClockContracts RPC method.
 */
export const expandJunoClockV1QueryClockContractsResponse = ([a_clock_contracts, a_pagination]) => ({
    clock_contracts: a_clock_contracts && map(a_clock_contracts, expandJunoClockV1ClockContract),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryClockContract}
 */
export const condenseJunoClockV1QueryClockContract = (g_msg) => encodeJunoClockV1QueryClockContract(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryClockContract` - the request type to get a single contract.
 */
export const expandJunoClockV1QueryClockContract = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryClockContractResponse}
 */
export const condenseJunoClockV1QueryClockContractResponse = (g_msg) => encodeJunoClockV1QueryClockContractResponse(apply_opt(g_msg.clock_contract, condenseJunoClockV1ClockContract));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryClockContractResponse` - the response type for the Query/ClockContract RPC method.
 */
export const expandJunoClockV1QueryClockContractResponse = ([a_clock_contract]) => ({
    clock_contract: a_clock_contract && expandJunoClockV1ClockContract(a_clock_contract),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryParamsRequest}
 */
export const condenseJunoClockV1QueryParamsRequest = (g_msg) => encodeJunoClockV1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryParamsRequest` - QueryParams is the request type to get all module params.
 */
export const expandJunoClockV1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1QueryParamsResponse}
 */
export const condenseJunoClockV1QueryParamsResponse = (g_msg) => encodeJunoClockV1QueryParamsResponse(apply_opt(g_msg.params, condenseJunoClockV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.QueryParamsResponse` - QueryClockContractsResponse is the response type for the Query/ClockContracts RPC method.
 */
export const expandJunoClockV1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandJunoClockV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedJunoClockV1GenesisState}
 */
export const condenseJunoClockV1GenesisState = (g_msg) => encodeJunoClockV1GenesisState(apply_opt(g_msg.params, condenseJunoClockV1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `juno.clock.v1.GenesisState` - - initial state of module
 */
export const expandJunoClockV1GenesisState = ([a_params]) => ({
    params: a_params && expandJunoClockV1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetHotRoutes}
 */
export const condenseOsmosisProtorevV1beta1MsgSetHotRoutes = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetHotRoutes(g_msg.admin, map(g_msg.hot_routes, condenseOsmosisProtorevV1beta1TokenPairArbRoutes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetHotRoutes` - defines the Msg/SetHotRoutes request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetHotRoutes = ([s_admin, a_hot_routes]) => ({
    admin: s_admin,
    hot_routes: a_hot_routes && map(a_hot_routes, expandOsmosisProtorevV1beta1TokenPairArbRoutes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1TokenPairArbRoutes}
 */
export const condenseOsmosisProtorevV1beta1TokenPairArbRoutes = (g_msg) => encodeOsmosisProtorevV1beta1TokenPairArbRoutes(map(g_msg.arb_routes, condenseOsmosisProtorevV1beta1Route), g_msg.token_in, g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.TokenPairArbRoutes` - tracks all of the hot routes for a given pair of tokens
 */
export const expandOsmosisProtorevV1beta1TokenPairArbRoutes = ([a_arb_routes, s_token_in, s_token_out]) => ({
    arb_routes: a_arb_routes && map(a_arb_routes, expandOsmosisProtorevV1beta1Route),
    token_in: s_token_in,
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1Route}
 */
export const condenseOsmosisProtorevV1beta1Route = (g_msg) => encodeOsmosisProtorevV1beta1Route(map(g_msg.trades, condenseOsmosisProtorevV1beta1Trade), g_msg.step_size);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.Route` - a hot route for a given pair of tokens
 */
export const expandOsmosisProtorevV1beta1Route = ([a_trades, s_step_size]) => ({
    trades: a_trades && map(a_trades, expandOsmosisProtorevV1beta1Trade),
    step_size: s_step_size,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1Trade}
 */
export const condenseOsmosisProtorevV1beta1Trade = (g_msg) => encodeOsmosisProtorevV1beta1Trade(g_msg.pool, g_msg.token_in, g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.Trade` - a single trade in a route
 */
export const expandOsmosisProtorevV1beta1Trade = ([sg_pool, s_token_in, s_token_out]) => ({
    pool: sg_pool,
    token_in: s_token_in,
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetHotRoutesResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetHotRoutesResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetHotRoutesResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetHotRoutesResponse` - defines the Msg/SetHotRoutes response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetHotRoutesResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetDeveloperAccount}
 */
export const condenseOsmosisProtorevV1beta1MsgSetDeveloperAccount = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetDeveloperAccount(g_msg.admin, g_msg.developer_account);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetDeveloperAccount` - defines the Msg/SetDeveloperAccount request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetDeveloperAccount = ([s_admin, s_developer_account]) => ({
    admin: s_admin,
    developer_account: s_developer_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetDeveloperAccountResponse` - defines the Msg/SetDeveloperAccount response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetInfoByPoolType}
 */
export const condenseOsmosisProtorevV1beta1MsgSetInfoByPoolType = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetInfoByPoolType(g_msg.admin, apply_opt(g_msg.info_by_pool_type, condenseOsmosisProtorevV1beta1InfoByPoolType));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetInfoByPoolType` - defines the Msg/SetInfoByPoolType request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetInfoByPoolType = ([s_admin, a_info_by_pool_type]) => ({
    admin: s_admin,
    info_by_pool_type: a_info_by_pool_type && expandOsmosisProtorevV1beta1InfoByPoolType(a_info_by_pool_type),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1InfoByPoolType}
 */
export const condenseOsmosisProtorevV1beta1InfoByPoolType = (g_msg) => encodeOsmosisProtorevV1beta1InfoByPoolType(apply_opt(g_msg.stable, condenseOsmosisProtorevV1beta1StablePoolInfo), apply_opt(g_msg.balancer, condenseOsmosisProtorevV1beta1BalancerPoolInfo), apply_opt(g_msg.concentrated, condenseOsmosisProtorevV1beta1ConcentratedPoolInfo), apply_opt(g_msg.cosmwasm, condenseOsmosisProtorevV1beta1CosmwasmPoolInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.InfoByPoolType` - contains information pertaining to how expensive (in terms of gas and time) it is to execute a swap on a given pool type. This distinction is made and necessary because the execution time ranges significantly between the different pool types.
 */
export const expandOsmosisProtorevV1beta1InfoByPoolType = ([a_stable, a_balancer, a_concentrated, a_cosmwasm]) => ({
    stable: a_stable && expandOsmosisProtorevV1beta1StablePoolInfo(a_stable),
    balancer: a_balancer && expandOsmosisProtorevV1beta1BalancerPoolInfo(a_balancer),
    concentrated: a_concentrated && expandOsmosisProtorevV1beta1ConcentratedPoolInfo(a_concentrated),
    cosmwasm: a_cosmwasm && expandOsmosisProtorevV1beta1CosmwasmPoolInfo(a_cosmwasm),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1StablePoolInfo}
 */
export const condenseOsmosisProtorevV1beta1StablePoolInfo = (g_msg) => encodeOsmosisProtorevV1beta1StablePoolInfo(g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.StablePoolInfo` - contains meta data pertaining to a stableswap pool type.
 */
export const expandOsmosisProtorevV1beta1StablePoolInfo = ([sg_weight]) => ({
    weight: sg_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1BalancerPoolInfo}
 */
export const condenseOsmosisProtorevV1beta1BalancerPoolInfo = (g_msg) => encodeOsmosisProtorevV1beta1BalancerPoolInfo(g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.BalancerPoolInfo` - contains meta data pertaining to a balancer pool type.
 */
export const expandOsmosisProtorevV1beta1BalancerPoolInfo = ([sg_weight]) => ({
    weight: sg_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1ConcentratedPoolInfo}
 */
export const condenseOsmosisProtorevV1beta1ConcentratedPoolInfo = (g_msg) => encodeOsmosisProtorevV1beta1ConcentratedPoolInfo(g_msg.weight, g_msg.max_ticks_crossed);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.ConcentratedPoolInfo` - contains meta data pertaining to a concentrated pool type.
 */
export const expandOsmosisProtorevV1beta1ConcentratedPoolInfo = ([sg_weight, sg_max_ticks_crossed]) => ({
    weight: sg_weight,
    max_ticks_crossed: sg_max_ticks_crossed,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1CosmwasmPoolInfo}
 */
export const condenseOsmosisProtorevV1beta1CosmwasmPoolInfo = (g_msg) => encodeOsmosisProtorevV1beta1CosmwasmPoolInfo(map(g_msg.weight_maps, condenseOsmosisProtorevV1beta1WeightMap));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.CosmwasmPoolInfo` - contains meta data pertaining to a cosmwasm pool type.
 */
export const expandOsmosisProtorevV1beta1CosmwasmPoolInfo = ([a_weight_maps]) => ({
    weight_maps: a_weight_maps && map(a_weight_maps, expandOsmosisProtorevV1beta1WeightMap),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1WeightMap}
 */
export const condenseOsmosisProtorevV1beta1WeightMap = (g_msg) => encodeOsmosisProtorevV1beta1WeightMap(g_msg.weight, g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.WeightMap` - maps a contract address to a weight. The weight of an address corresponds to the amount of ms required to execute a swap on that contract.
 */
export const expandOsmosisProtorevV1beta1WeightMap = ([sg_weight, sa_contract]) => ({
    weight: sg_weight,
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetInfoByPoolTypeResponse` - defines the Msg/SetInfoByPoolType response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx}
 */
export const condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx(g_msg.admin, g_msg.max_pool_points_per_tx);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerTx` - defines the Msg/SetMaxPoolPointsPerTx request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx = ([s_admin, sg_max_pool_points_per_tx]) => ({
    admin: s_admin,
    max_pool_points_per_tx: sg_max_pool_points_per_tx,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerTxResponse` - defines the Msg/SetMaxPoolPointsPerTx response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock}
 */
export const condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock(g_msg.admin, g_msg.max_pool_points_per_block);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerBlock` - defines the Msg/SetMaxPoolPointsPerBlock request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock = ([s_admin, sg_max_pool_points_per_block]) => ({
    admin: s_admin,
    max_pool_points_per_block: sg_max_pool_points_per_block,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerBlockResponse` - defines the Msg/SetMaxPoolPointsPerBlock response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetBaseDenoms}
 */
export const condenseOsmosisProtorevV1beta1MsgSetBaseDenoms = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetBaseDenoms(g_msg.admin, map(g_msg.base_denoms, condenseOsmosisProtorevV1beta1BaseDenom));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetBaseDenoms` - defines the Msg/SetBaseDenoms request type.
 */
export const expandOsmosisProtorevV1beta1MsgSetBaseDenoms = ([s_admin, a_base_denoms]) => ({
    admin: s_admin,
    base_denoms: a_base_denoms && map(a_base_denoms, expandOsmosisProtorevV1beta1BaseDenom),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1BaseDenom}
 */
export const condenseOsmosisProtorevV1beta1BaseDenom = (g_msg) => encodeOsmosisProtorevV1beta1BaseDenom(g_msg.denom, g_msg.step_size);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.BaseDenom` - represents a single base denom that the module uses for its arbitrage trades. It contains the denom name alongside the step size of the binary search that is used to find the optimal swap amount
 */
export const expandOsmosisProtorevV1beta1BaseDenom = ([s_denom, s_step_size]) => ({
    denom: s_denom,
    step_size: s_step_size,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1MsgSetBaseDenomsResponse}
 */
export const condenseOsmosisProtorevV1beta1MsgSetBaseDenomsResponse = (g_msg) => encodeOsmosisProtorevV1beta1MsgSetBaseDenomsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.MsgSetBaseDenomsResponse` - defines the Msg/SetBaseDenoms response type.
 */
export const expandOsmosisProtorevV1beta1MsgSetBaseDenomsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1SetProtoRevEnabledProposal}
 */
export const condenseOsmosisProtorevV1beta1SetProtoRevEnabledProposal = (g_msg) => encodeOsmosisProtorevV1beta1SetProtoRevEnabledProposal(g_msg.title, g_msg.description, g_msg.enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.SetProtoRevEnabledProposal` - a gov Content type to update whether the protorev module is enabled
 */
export const expandOsmosisProtorevV1beta1SetProtoRevEnabledProposal = ([s_title, s_description, b_enabled]) => ({
    title: s_title,
    description: s_description,
    enabled: !!b_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal}
 */
export const condenseOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal = (g_msg) => encodeOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal(g_msg.title, g_msg.description, g_msg.account);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.SetProtoRevAdminAccountProposal` - a gov Content type to set the admin account that will receive permissions to alter hot routes and set the developer address that will be receiving a share of profits from the module
 */
export const expandOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal = ([s_title, s_description, s_account]) => ({
    title: s_title,
    description: s_description,
    account: s_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1RouteStatistics}
 */
export const condenseOsmosisProtorevV1beta1RouteStatistics = (g_msg) => encodeOsmosisProtorevV1beta1RouteStatistics(map(g_msg.profits, slimify_coin), g_msg.number_of_trades, g_msg.route);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.RouteStatistics` - contains the number of trades the module has executed after a swap on a given route and the profits from the trades
 */
export const expandOsmosisProtorevV1beta1RouteStatistics = ([a_profits, s_number_of_trades, a_routes]) => ({
    profits: a_profits && map(a_profits, expand_coin),
    number_of_trades: s_number_of_trades,
    route: a_routes,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1PoolWeights}
 */
export const condenseOsmosisProtorevV1beta1PoolWeights = (g_msg) => encodeOsmosisProtorevV1beta1PoolWeights(g_msg.stable_weight, g_msg.balancer_weight, g_msg.concentrated_weight, g_msg.cosmwasm_weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.PoolWeights` - contains the weights of all of the different pool types. This distinction is made and necessary because the execution time ranges significantly between the different pool types. Each weight roughly corresponds to the amount of time (in ms) it takes to execute a swap on that pool type. DEPRECATED: This field is deprecated and will be removed in the next release. It is replaced by the `info_by_pool_type` field.
 */
export const expandOsmosisProtorevV1beta1PoolWeights = ([sg_stable_weight, sg_balancer_weight, sg_concentrated_weight, sg_cosmwasm_weight]) => ({
    stable_weight: sg_stable_weight,
    balancer_weight: sg_balancer_weight,
    concentrated_weight: sg_concentrated_weight,
    cosmwasm_weight: sg_cosmwasm_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryParamsRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryParamsRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryParamsRequest` - request type for the Query/Params RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryParamsResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryParamsResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisProtorevV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryParamsResponse` - response type for the Query/Params RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisProtorevV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1Params}
 */
export const condenseOsmosisProtorevV1beta1Params = (g_msg) => encodeOsmosisProtorevV1beta1Params(g_msg.enabled, g_msg.admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.Params` - defines the parameters for the module.
 */
export const expandOsmosisProtorevV1beta1Params = ([b_enabled, s_admin]) => ({
    enabled: !!b_enabled,
    admin: s_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevNumberOfTradesRequest` - request type for the Query/GetProtoRevNumberOfTrades RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse(g_msg.number_of_trades);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevNumberOfTradesResponse` - response type for the Query/GetProtoRevNumberOfTrades RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse = ([s_number_of_trades]) => ({
    number_of_trades: s_number_of_trades,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevProfitsByDenomRequest` - request type for the Query/GetProtoRevProfitsByDenom RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse(slimify_coin(g_msg.profit));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevProfitsByDenomResponse` - response type for the Query/GetProtoRevProfitsByDenom RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse = ([a_profit]) => ({
    profit: a_profit && expand_coin(a_profit),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAllProfitsRequest` - request type for the Query/GetProtoRevAllProfits RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse(map(g_msg.profits, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAllProfitsResponse` - response type for the Query/GetProtoRevAllProfits RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse = ([a_profits]) => ({
    profits: a_profits && map(a_profits, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest(g_msg.route);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevStatisticsByRouteRequest` - QueryGetProtoRevStatisticsByPoolRequest is request type for the Query/GetProtoRevStatisticsByRoute RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest = ([a_routes]) => ({
    route: a_routes,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse(apply_opt(g_msg.statistics, condenseOsmosisProtorevV1beta1RouteStatistics));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevStatisticsByRouteResponse` - response type for the Query/GetProtoRevStatisticsByRoute RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse = ([a_statistics]) => ({
    statistics: a_statistics && expandOsmosisProtorevV1beta1RouteStatistics(a_statistics),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAllRouteStatisticsRequest` - request type for the Query/GetProtoRevAllRouteStatistics RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse(map(g_msg.statistics, condenseOsmosisProtorevV1beta1RouteStatistics));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAllRouteStatisticsResponse` - response type for the Query/GetProtoRevAllRouteStatistics RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse = ([a_statistics]) => ({
    statistics: a_statistics && map(a_statistics, expandOsmosisProtorevV1beta1RouteStatistics),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevTokenPairArbRoutesRequest` - request type for the Query/GetProtoRevTokenPairArbRoutes RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse(map(g_msg.routes, condenseOsmosisProtorevV1beta1TokenPairArbRoutes));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevTokenPairArbRoutesResponse` - response type for the Query/GetProtoRevTokenPairArbRoutes RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse = ([a_routes]) => ({
    routes: a_routes && map(a_routes, expandOsmosisProtorevV1beta1TokenPairArbRoutes),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAdminAccountRequest` - request type for the Query/GetProtoRevAdminAccount RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse(g_msg.admin_account);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevAdminAccountResponse` - response type for the Query/GetProtoRevAdminAccount RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse = ([s_admin_account]) => ({
    admin_account: s_admin_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevDeveloperAccountRequest` - request type for the Query/GetProtoRevDeveloperAccount RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse(g_msg.developer_account);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevDeveloperAccountResponse` - response type for the Query/GetProtoRevDeveloperAccount RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse = ([s_developer_account]) => ({
    developer_account: s_developer_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevInfoByPoolTypeRequest` - request type for the Query/GetProtoRevInfoByPoolType RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse(apply_opt(g_msg.info_by_pool_type, condenseOsmosisProtorevV1beta1InfoByPoolType));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevInfoByPoolTypeResponse` - response type for the Query/GetProtoRevInfoByPoolType RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse = ([a_info_by_pool_type]) => ({
    info_by_pool_type: a_info_by_pool_type && expandOsmosisProtorevV1beta1InfoByPoolType(a_info_by_pool_type),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerBlockRequest` - request type for the Query/GetProtoRevMaxPoolPointsPerBlock RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse(g_msg.max_pool_points_per_block);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerBlockResponse` - response type for the Query/GetProtoRevMaxPoolPointsPerBlock RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse = ([sg_max_pool_points_per_block]) => ({
    max_pool_points_per_block: sg_max_pool_points_per_block,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerTxRequest` - request type for the Query/GetProtoRevMaxPoolPointsPerTx RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse(g_msg.max_pool_points_per_tx);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerTxResponse` - response type for the Query/GetProtoRevMaxPoolPointsPerTx RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse = ([sg_max_pool_points_per_tx]) => ({
    max_pool_points_per_tx: sg_max_pool_points_per_tx,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevBaseDenomsRequest` - request type for the Query/GetProtoRevBaseDenoms RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse(map(g_msg.base_denoms, condenseOsmosisProtorevV1beta1BaseDenom));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevBaseDenomsResponse` - response type for the Query/GetProtoRevBaseDenoms RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse = ([a_base_denoms]) => ({
    base_denoms: a_base_denoms && map(a_base_denoms, expandOsmosisProtorevV1beta1BaseDenom),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevEnabledRequest` - request type for the Query/GetProtoRevEnabled RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse(g_msg.enabled);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevEnabledResponse` - response type for the Query/GetProtoRevEnabled RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse = ([b_enabled]) => ({
    enabled: !!b_enabled,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest(g_msg.base_denom, g_msg.other_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevPoolRequest` - request type for the Query/GetProtoRevPool RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest = ([s_base_denom, s_other_denom]) => ({
    base_denom: s_base_denom,
    other_denom: s_other_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse}
 */
export const condenseOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse = (g_msg) => encodeOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.QueryGetProtoRevPoolResponse` - response type for the Query/GetProtoRevPool RPC method.
 */
export const expandOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisProtorevV1beta1GenesisState}
 */
export const condenseOsmosisProtorevV1beta1GenesisState = (g_msg) => encodeOsmosisProtorevV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisProtorevV1beta1Params), map(g_msg.token_pair_arb_routes, condenseOsmosisProtorevV1beta1TokenPairArbRoutes), map(g_msg.base_denoms, condenseOsmosisProtorevV1beta1BaseDenom), apply_opt(g_msg.pool_weights, condenseOsmosisProtorevV1beta1PoolWeights), g_msg.days_since_module_genesis, map(g_msg.developer_fees, slimify_coin), g_msg.latest_block_height, g_msg.developer_address, g_msg.max_pool_points_per_block, g_msg.max_pool_points_per_tx, g_msg.point_count_for_block, map(g_msg.profits, slimify_coin), apply_opt(g_msg.info_by_pool_type, condenseOsmosisProtorevV1beta1InfoByPoolType));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.protorev.v1beta1.GenesisState` - defines the protorev module's genesis state.
 */
export const expandOsmosisProtorevV1beta1GenesisState = ([a_params, a_token_pair_arb_routes, a_base_denoms, a_pool_weights, sg_days_since_module_genesis, a_developer_fees, sg_latest_block_height, sa_developer, sg_max_pool_points_per_block, sg_max_pool_points_per_tx, sg_point_count_for_block, a_profits, a_info_by_pool_type]) => ({
    params: a_params && expandOsmosisProtorevV1beta1Params(a_params),
    token_pair_arb_routes: a_token_pair_arb_routes && map(a_token_pair_arb_routes, expandOsmosisProtorevV1beta1TokenPairArbRoutes),
    base_denoms: a_base_denoms && map(a_base_denoms, expandOsmosisProtorevV1beta1BaseDenom),
    pool_weights: a_pool_weights && expandOsmosisProtorevV1beta1PoolWeights(a_pool_weights),
    days_since_module_genesis: sg_days_since_module_genesis,
    developer_fees: a_developer_fees && map(a_developer_fees, expand_coin),
    latest_block_height: sg_latest_block_height,
    developer_address: sa_developer,
    max_pool_points_per_block: sg_max_pool_points_per_block,
    max_pool_points_per_tx: sg_max_pool_points_per_tx,
    point_count_for_block: sg_point_count_for_block,
    profits: a_profits && map(a_profits, expand_coin),
    info_by_pool_type: a_info_by_pool_type && expandOsmosisProtorevV1beta1InfoByPoolType(a_info_by_pool_type),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1QueryParamsRequest}
 */
export const condenseOsmosisMintV1beta1QueryParamsRequest = (g_msg) => encodeOsmosisMintV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandOsmosisMintV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1QueryParamsResponse}
 */
export const condenseOsmosisMintV1beta1QueryParamsResponse = (g_msg) => encodeOsmosisMintV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisMintV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandOsmosisMintV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisMintV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1Params}
 */
export const condenseOsmosisMintV1beta1Params = (g_msg) => encodeOsmosisMintV1beta1Params(g_msg.mint_denom, g_msg.genesis_epoch_provisions, g_msg.epoch_identifier, g_msg.reduction_period_in_epochs, g_msg.reduction_factor, apply_opt(g_msg.distribution_proportions, condenseOsmosisMintV1beta1DistributionProportions), map(g_msg.weighted_developer_rewards_receivers, condenseOsmosisMintV1beta1WeightedAddress), g_msg.minting_rewards_distribution_start_epoch);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.Params` - holds parameters for the x/mint module.
 */
export const expandOsmosisMintV1beta1Params = ([s_mint_denom, s_genesis_epoch_provisions, s_epoch_identifier, sg_reduction_period_in_epochs, s_reduction_factor, a_distribution_proportions, a_weighted_developer_rewards_receivers, sg_minting_rewards_distribution_start_epoch]) => ({
    mint_denom: s_mint_denom,
    genesis_epoch_provisions: s_genesis_epoch_provisions,
    epoch_identifier: s_epoch_identifier,
    reduction_period_in_epochs: sg_reduction_period_in_epochs,
    reduction_factor: s_reduction_factor,
    distribution_proportions: a_distribution_proportions && expandOsmosisMintV1beta1DistributionProportions(a_distribution_proportions),
    weighted_developer_rewards_receivers: a_weighted_developer_rewards_receivers && map(a_weighted_developer_rewards_receivers, expandOsmosisMintV1beta1WeightedAddress),
    minting_rewards_distribution_start_epoch: sg_minting_rewards_distribution_start_epoch,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1DistributionProportions}
 */
export const condenseOsmosisMintV1beta1DistributionProportions = (g_msg) => encodeOsmosisMintV1beta1DistributionProportions(g_msg.staking, g_msg.pool_incentives, g_msg.developer_rewards, g_msg.community_pool);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.DistributionProportions` - defines the distribution proportions of the minted denom. In other words, defines which stakeholders will receive the minted denoms and how much.
 */
export const expandOsmosisMintV1beta1DistributionProportions = ([s_staking, s_pool_incentives, s_developer_rewards, s_community_pool]) => ({
    staking: s_staking,
    pool_incentives: s_pool_incentives,
    developer_rewards: s_developer_rewards,
    community_pool: s_community_pool,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1WeightedAddress}
 */
export const condenseOsmosisMintV1beta1WeightedAddress = (g_msg) => encodeOsmosisMintV1beta1WeightedAddress(g_msg.address, g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.WeightedAddress` - represents an address with a weight assigned to it. The weight is used to determine the proportion of the total minted tokens to be minted to the address.
 */
export const expandOsmosisMintV1beta1WeightedAddress = ([sa_address, s_weight]) => ({
    address: sa_address,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1QueryEpochProvisionsRequest}
 */
export const condenseOsmosisMintV1beta1QueryEpochProvisionsRequest = (g_msg) => encodeOsmosisMintV1beta1QueryEpochProvisionsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.QueryEpochProvisionsRequest` - the request type for the Query/EpochProvisions RPC method.
 */
export const expandOsmosisMintV1beta1QueryEpochProvisionsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1QueryEpochProvisionsResponse}
 */
export const condenseOsmosisMintV1beta1QueryEpochProvisionsResponse = (g_msg) => encodeOsmosisMintV1beta1QueryEpochProvisionsResponse(safe_base64_to_bytes(g_msg.epoch_provisions));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.QueryEpochProvisionsResponse` - the response type for the Query/EpochProvisions RPC method.
 */
export const expandOsmosisMintV1beta1QueryEpochProvisionsResponse = ([atu8_epoch_provisions]) => ({
    epoch_provisions: safe_bytes_to_base64(atu8_epoch_provisions),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1GenesisState}
 */
export const condenseOsmosisMintV1beta1GenesisState = (g_msg) => encodeOsmosisMintV1beta1GenesisState(apply_opt(g_msg.minter, condenseOsmosisMintV1beta1Minter), apply_opt(g_msg.params, condenseOsmosisMintV1beta1Params), g_msg.reduction_started_epoch);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.GenesisState` - defines the mint module's genesis state.
 */
export const expandOsmosisMintV1beta1GenesisState = ([a_minter, a_params, sg_reduction_started_epoch]) => ({
    minter: a_minter && expandOsmosisMintV1beta1Minter(a_minter),
    params: a_params && expandOsmosisMintV1beta1Params(a_params),
    reduction_started_epoch: sg_reduction_started_epoch,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisMintV1beta1Minter}
 */
export const condenseOsmosisMintV1beta1Minter = (g_msg) => encodeOsmosisMintV1beta1Minter(g_msg.epoch_provisions);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.mint.v1beta1.Minter` - represents the minting state.
 */
export const expandOsmosisMintV1beta1Minter = ([s_epoch_provisions]) => ({
    epoch_provisions: s_epoch_provisions,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgCreateGauge}
 */
export const condenseOsmosisIncentivesMsgCreateGauge = (g_msg) => encodeOsmosisIncentivesMsgCreateGauge(g_msg.is_perpetual, g_msg.owner, apply_opt(g_msg.distribute_to, condenseOsmosisLockupQueryCondition), map(g_msg.coins, slimify_coin), parse_timestamp(g_msg.start_time), g_msg.num_epochs_paid_over, g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgCreateGauge` - creates a gague to distribute rewards to users
 */
export const expandOsmosisIncentivesMsgCreateGauge = ([b_is_perpetual, sa_owner, a_distribute_to, a_coins, a_start_time, sg_num_epochs_paid_over, sg_pool_id]) => ({
    is_perpetual: !!b_is_perpetual,
    owner: sa_owner,
    distribute_to: a_distribute_to && expandOsmosisLockupQueryCondition(a_distribute_to),
    coins: a_coins && map(a_coins, expand_coin),
    start_time: expand_timestamp(a_start_time),
    num_epochs_paid_over: sg_num_epochs_paid_over,
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupQueryCondition}
 */
export const condenseOsmosisLockupQueryCondition = (g_msg) => encodeOsmosisLockupQueryCondition(JsonToProtoEnumOsmosisLockupLockQueryType[g_msg.lock_query_type], g_msg.denom, parse_duration(g_msg.duration), parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.QueryCondition` - a struct used for querying locks upon different conditions. Duration field and timestamp fields could be optional, depending on the LockQueryType.
 */
export const expandOsmosisLockupQueryCondition = ([xc_lock_query_type, s_denom, a_duration, a_timestamp]) => ({
    lock_query_type: xc_lock_query_type >= 0 ? ProtoToJsonEnumOsmosisLockupLockQueryType[xc_lock_query_type] : __UNDEFINED,
    denom: s_denom,
    duration: expand_duration(a_duration),
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgCreateGaugeResponse}
 */
export const condenseOsmosisIncentivesMsgCreateGaugeResponse = (g_msg) => encodeOsmosisIncentivesMsgCreateGaugeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgCreateGaugeResponse` -
 */
export const expandOsmosisIncentivesMsgCreateGaugeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgAddToGauge}
 */
export const condenseOsmosisIncentivesMsgAddToGauge = (g_msg) => encodeOsmosisIncentivesMsgAddToGauge(g_msg.owner, g_msg.gauge_id, map(g_msg.rewards, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgAddToGauge` - adds coins to a previously created gauge
 */
export const expandOsmosisIncentivesMsgAddToGauge = ([sa_owner, sg_gauge_id, a_rewards]) => ({
    owner: sa_owner,
    gauge_id: sg_gauge_id,
    rewards: a_rewards && map(a_rewards, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgAddToGaugeResponse}
 */
export const condenseOsmosisIncentivesMsgAddToGaugeResponse = (g_msg) => encodeOsmosisIncentivesMsgAddToGaugeResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgAddToGaugeResponse` -
 */
export const expandOsmosisIncentivesMsgAddToGaugeResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgCreateGroup}
 */
export const condenseOsmosisIncentivesMsgCreateGroup = (g_msg) => encodeOsmosisIncentivesMsgCreateGroup(map(g_msg.coins, slimify_coin), g_msg.num_epochs_paid_over, g_msg.owner, g_msg.pool_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgCreateGroup` - creates a group to distribute rewards to a group of pools
 */
export const expandOsmosisIncentivesMsgCreateGroup = ([a_coins, sg_num_epochs_paid_over, sa_owner, a_pool_ids]) => ({
    coins: a_coins && map(a_coins, expand_coin),
    num_epochs_paid_over: sg_num_epochs_paid_over,
    owner: sa_owner,
    pool_ids: a_pool_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesMsgCreateGroupResponse}
 */
export const condenseOsmosisIncentivesMsgCreateGroupResponse = (g_msg) => encodeOsmosisIncentivesMsgCreateGroupResponse(g_msg.group_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.MsgCreateGroupResponse` -
 */
export const expandOsmosisIncentivesMsgCreateGroupResponse = ([sg_group_id]) => ({
    group_id: sg_group_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesCreateGroupsProposal}
 */
export const condenseOsmosisIncentivesCreateGroupsProposal = (g_msg) => encodeOsmosisIncentivesCreateGroupsProposal(g_msg.title, g_msg.description, map(g_msg.create_groups, condenseOsmosisIncentivesCreateGroup));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.CreateGroupsProposal` - a type for creating one or more groups via governance. This is useful for creating groups without having to pay creation fees.
 */
export const expandOsmosisIncentivesCreateGroupsProposal = ([s_title, s_description, a_create_groups]) => ({
    title: s_title,
    description: s_description,
    create_groups: a_create_groups && map(a_create_groups, expandOsmosisIncentivesCreateGroup),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesCreateGroup}
 */
export const condenseOsmosisIncentivesCreateGroup = (g_msg) => encodeOsmosisIncentivesCreateGroup(g_msg.pool_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.CreateGroup` - called via governance to create a new group. It takes an array of pool IDs to split the incentives across.
 */
export const expandOsmosisIncentivesCreateGroup = ([a_pool_ids]) => ({
    pool_ids: a_pool_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesInternalGaugeInfo}
 */
export const condenseOsmosisIncentivesInternalGaugeInfo = (g_msg) => encodeOsmosisIncentivesInternalGaugeInfo(g_msg.total_weight, map(g_msg.gauge_records, condenseOsmosisIncentivesInternalGaugeRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.InternalGaugeInfo` - Note that while both InternalGaugeInfo and InternalGaugeRecord could technically be replaced by DistrInfo and DistrRecord from the pool-incentives module, we create separate types here to keep our abstractions clean and readable (pool-incentives distribution abstractions are used in a very specific way that does not directly relate to gauge logic). This also helps us sidestep a refactor to avoid an import cycle.
 */
export const expandOsmosisIncentivesInternalGaugeInfo = ([s_total_weight, a_gauge_records]) => ({
    total_weight: s_total_weight,
    gauge_records: a_gauge_records && map(a_gauge_records, expandOsmosisIncentivesInternalGaugeRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesInternalGaugeRecord}
 */
export const condenseOsmosisIncentivesInternalGaugeRecord = (g_msg) => encodeOsmosisIncentivesInternalGaugeRecord(g_msg.gauge_id, g_msg.current_weight, g_msg.cumulative_weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.InternalGaugeRecord` -
 */
export const expandOsmosisIncentivesInternalGaugeRecord = ([sg_gauge_id, s_current_weight, s_cumulative_weight]) => ({
    gauge_id: sg_gauge_id,
    current_weight: s_current_weight,
    cumulative_weight: s_cumulative_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGroup}
 */
export const condenseOsmosisIncentivesGroup = (g_msg) => encodeOsmosisIncentivesGroup(g_msg.group_gauge_id, apply_opt(g_msg.internal_gauge_info, condenseOsmosisIncentivesInternalGaugeInfo), JsonToProtoEnumOsmosisIncentivesSplittingPolicy[g_msg.splitting_policy]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.Group` - an object that stores a 1:1 mapped gauge ID, a list of pool gauge info, and a splitting policy. These are grouped into a single abstraction to allow for distribution of group incentives to internal gauges according to the specified splitting policy.
 */
export const expandOsmosisIncentivesGroup = ([sg_group_gauge_id, a_internal_gauge_info, xc_splitting_policy]) => ({
    group_gauge_id: sg_group_gauge_id,
    internal_gauge_info: a_internal_gauge_info && expandOsmosisIncentivesInternalGaugeInfo(a_internal_gauge_info),
    splitting_policy: xc_splitting_policy >= 0 ? ProtoToJsonEnumOsmosisIncentivesSplittingPolicy[xc_splitting_policy] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGroupsWithGauge}
 */
export const condenseOsmosisIncentivesGroupsWithGauge = (g_msg) => encodeOsmosisIncentivesGroupsWithGauge(apply_opt(g_msg.group, condenseOsmosisIncentivesGroup), apply_opt(g_msg.gauge, condenseOsmosisIncentivesGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GroupsWithGauge` - a helper struct that stores a group and its associated gauge.
 */
export const expandOsmosisIncentivesGroupsWithGauge = ([a_group, a_gauge]) => ({
    group: a_group && expandOsmosisIncentivesGroup(a_group),
    gauge: a_gauge && expandOsmosisIncentivesGauge(a_gauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGauge}
 */
export const condenseOsmosisIncentivesGauge = (g_msg) => encodeOsmosisIncentivesGauge(g_msg.id, g_msg.is_perpetual, apply_opt(g_msg.distribute_to, condenseOsmosisLockupQueryCondition), map(g_msg.coins, slimify_coin), parse_timestamp(g_msg.start_time), g_msg.num_epochs_paid_over, g_msg.filled_epochs, map(g_msg.distributed_coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.Gauge` - an object that stores and distributes yields to recipients who satisfy certain conditions. Currently gauges support conditions around the duration for which a given denom is locked.
 */
export const expandOsmosisIncentivesGauge = ([sg_id, b_is_perpetual, a_distribute_to, a_coins, a_start_time, sg_num_epochs_paid_over, sg_filled_epochs, a_distributed_coins]) => ({
    id: sg_id,
    is_perpetual: !!b_is_perpetual,
    distribute_to: a_distribute_to && expandOsmosisLockupQueryCondition(a_distribute_to),
    coins: a_coins && map(a_coins, expand_coin),
    start_time: expand_timestamp(a_start_time),
    num_epochs_paid_over: sg_num_epochs_paid_over,
    filled_epochs: sg_filled_epochs,
    distributed_coins: a_distributed_coins && map(a_distributed_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesLockableDurationsInfo}
 */
export const condenseOsmosisIncentivesLockableDurationsInfo = (g_msg) => encodeOsmosisIncentivesLockableDurationsInfo(map(g_msg.lockable_durations, parse_duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.LockableDurationsInfo` -
 */
export const expandOsmosisIncentivesLockableDurationsInfo = ([a_lockable_durations]) => ({
    lockable_durations: map(a_lockable_durations, expand_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesModuleToDistributeCoinsRequest}
 */
export const condenseOsmosisIncentivesModuleToDistributeCoinsRequest = (g_msg) => encodeOsmosisIncentivesModuleToDistributeCoinsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ModuleToDistributeCoinsRequest` -
 */
export const expandOsmosisIncentivesModuleToDistributeCoinsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesModuleToDistributeCoinsResponse}
 */
export const condenseOsmosisIncentivesModuleToDistributeCoinsResponse = (g_msg) => encodeOsmosisIncentivesModuleToDistributeCoinsResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ModuleToDistributeCoinsResponse` -
 */
export const expandOsmosisIncentivesModuleToDistributeCoinsResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGaugeByIDRequest}
 */
export const condenseOsmosisIncentivesGaugeByIDRequest = (g_msg) => encodeOsmosisIncentivesGaugeByIDRequest(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GaugeByIDRequest` -
 */
export const expandOsmosisIncentivesGaugeByIDRequest = ([sg_id]) => ({
    id: sg_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGaugeByIDResponse}
 */
export const condenseOsmosisIncentivesGaugeByIDResponse = (g_msg) => encodeOsmosisIncentivesGaugeByIDResponse(apply_opt(g_msg.gauge, condenseOsmosisIncentivesGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GaugeByIDResponse` -
 */
export const expandOsmosisIncentivesGaugeByIDResponse = ([a_gauge]) => ({
    gauge: a_gauge && expandOsmosisIncentivesGauge(a_gauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGaugesRequest}
 */
export const condenseOsmosisIncentivesGaugesRequest = (g_msg) => encodeOsmosisIncentivesGaugesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GaugesRequest` -
 */
export const expandOsmosisIncentivesGaugesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGaugesResponse}
 */
export const condenseOsmosisIncentivesGaugesResponse = (g_msg) => encodeOsmosisIncentivesGaugesResponse(map(g_msg.data, condenseOsmosisIncentivesGauge), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GaugesResponse` -
 */
export const expandOsmosisIncentivesGaugesResponse = ([a_data, a_pagination]) => ({
    data: a_data && map(a_data, expandOsmosisIncentivesGauge),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesActiveGaugesRequest}
 */
export const condenseOsmosisIncentivesActiveGaugesRequest = (g_msg) => encodeOsmosisIncentivesActiveGaugesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ActiveGaugesRequest` -
 */
export const expandOsmosisIncentivesActiveGaugesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesActiveGaugesResponse}
 */
export const condenseOsmosisIncentivesActiveGaugesResponse = (g_msg) => encodeOsmosisIncentivesActiveGaugesResponse(map(g_msg.data, condenseOsmosisIncentivesGauge), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ActiveGaugesResponse` -
 */
export const expandOsmosisIncentivesActiveGaugesResponse = ([a_data, a_pagination]) => ({
    data: a_data && map(a_data, expandOsmosisIncentivesGauge),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesActiveGaugesPerDenomRequest}
 */
export const condenseOsmosisIncentivesActiveGaugesPerDenomRequest = (g_msg) => encodeOsmosisIncentivesActiveGaugesPerDenomRequest(g_msg.denom, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ActiveGaugesPerDenomRequest` -
 */
export const expandOsmosisIncentivesActiveGaugesPerDenomRequest = ([s_denom, a_pagination]) => ({
    denom: s_denom,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesActiveGaugesPerDenomResponse}
 */
export const condenseOsmosisIncentivesActiveGaugesPerDenomResponse = (g_msg) => encodeOsmosisIncentivesActiveGaugesPerDenomResponse(map(g_msg.data, condenseOsmosisIncentivesGauge), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.ActiveGaugesPerDenomResponse` -
 */
export const expandOsmosisIncentivesActiveGaugesPerDenomResponse = ([a_data, a_pagination]) => ({
    data: a_data && map(a_data, expandOsmosisIncentivesGauge),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesUpcomingGaugesRequest}
 */
export const condenseOsmosisIncentivesUpcomingGaugesRequest = (g_msg) => encodeOsmosisIncentivesUpcomingGaugesRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.UpcomingGaugesRequest` -
 */
export const expandOsmosisIncentivesUpcomingGaugesRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesUpcomingGaugesResponse}
 */
export const condenseOsmosisIncentivesUpcomingGaugesResponse = (g_msg) => encodeOsmosisIncentivesUpcomingGaugesResponse(map(g_msg.data, condenseOsmosisIncentivesGauge), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.UpcomingGaugesResponse` -
 */
export const expandOsmosisIncentivesUpcomingGaugesResponse = ([a_data, a_pagination]) => ({
    data: a_data && map(a_data, expandOsmosisIncentivesGauge),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesUpcomingGaugesPerDenomRequest}
 */
export const condenseOsmosisIncentivesUpcomingGaugesPerDenomRequest = (g_msg) => encodeOsmosisIncentivesUpcomingGaugesPerDenomRequest(g_msg.denom, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.UpcomingGaugesPerDenomRequest` -
 */
export const expandOsmosisIncentivesUpcomingGaugesPerDenomRequest = ([s_denom, a_pagination]) => ({
    denom: s_denom,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesUpcomingGaugesPerDenomResponse}
 */
export const condenseOsmosisIncentivesUpcomingGaugesPerDenomResponse = (g_msg) => encodeOsmosisIncentivesUpcomingGaugesPerDenomResponse(map(g_msg.upcoming_gauges, condenseOsmosisIncentivesGauge), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.UpcomingGaugesPerDenomResponse` -
 */
export const expandOsmosisIncentivesUpcomingGaugesPerDenomResponse = ([a_upcoming_gauges, a_pagination]) => ({
    upcoming_gauges: a_upcoming_gauges && map(a_upcoming_gauges, expandOsmosisIncentivesGauge),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesRewardsEstRequest}
 */
export const condenseOsmosisIncentivesRewardsEstRequest = (g_msg) => encodeOsmosisIncentivesRewardsEstRequest(g_msg.owner, g_msg.lock_ids, g_msg.end_epoch);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.RewardsEstRequest` -
 */
export const expandOsmosisIncentivesRewardsEstRequest = ([sa_owner, a_lock_ids, sg_end_epoch]) => ({
    owner: sa_owner,
    lock_ids: a_lock_ids,
    end_epoch: sg_end_epoch,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesRewardsEstResponse}
 */
export const condenseOsmosisIncentivesRewardsEstResponse = (g_msg) => encodeOsmosisIncentivesRewardsEstResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.RewardsEstResponse` -
 */
export const expandOsmosisIncentivesRewardsEstResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryLockableDurationsRequest}
 */
export const condenseOsmosisIncentivesQueryLockableDurationsRequest = (g_msg) => encodeOsmosisIncentivesQueryLockableDurationsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryLockableDurationsRequest` -
 */
export const expandOsmosisIncentivesQueryLockableDurationsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryLockableDurationsResponse}
 */
export const condenseOsmosisIncentivesQueryLockableDurationsResponse = (g_msg) => encodeOsmosisIncentivesQueryLockableDurationsResponse(map(g_msg.lockable_durations, parse_duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryLockableDurationsResponse` -
 */
export const expandOsmosisIncentivesQueryLockableDurationsResponse = ([a_lockable_durations]) => ({
    lockable_durations: map(a_lockable_durations, expand_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsRequest}
 */
export const condenseOsmosisIncentivesQueryAllGroupsRequest = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsRequest` -
 */
export const expandOsmosisIncentivesQueryAllGroupsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsResponse}
 */
export const condenseOsmosisIncentivesQueryAllGroupsResponse = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsResponse(map(g_msg.groups, condenseOsmosisIncentivesGroup));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsResponse` -
 */
export const expandOsmosisIncentivesQueryAllGroupsResponse = ([a_groups]) => ({
    groups: a_groups && map(a_groups, expandOsmosisIncentivesGroup),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsGaugesRequest}
 */
export const condenseOsmosisIncentivesQueryAllGroupsGaugesRequest = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsGaugesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsGaugesRequest` -
 */
export const expandOsmosisIncentivesQueryAllGroupsGaugesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsGaugesResponse}
 */
export const condenseOsmosisIncentivesQueryAllGroupsGaugesResponse = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsGaugesResponse(map(g_msg.gauges, condenseOsmosisIncentivesGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsGaugesResponse` -
 */
export const expandOsmosisIncentivesQueryAllGroupsGaugesResponse = ([a_gauges]) => ({
    gauges: a_gauges && map(a_gauges, expandOsmosisIncentivesGauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsWithGaugeRequest}
 */
export const condenseOsmosisIncentivesQueryAllGroupsWithGaugeRequest = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsWithGaugeRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsWithGaugeRequest` -
 */
export const expandOsmosisIncentivesQueryAllGroupsWithGaugeRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryAllGroupsWithGaugeResponse}
 */
export const condenseOsmosisIncentivesQueryAllGroupsWithGaugeResponse = (g_msg) => encodeOsmosisIncentivesQueryAllGroupsWithGaugeResponse(map(g_msg.groups_with_gauge, condenseOsmosisIncentivesGroupsWithGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryAllGroupsWithGaugeResponse` -
 */
export const expandOsmosisIncentivesQueryAllGroupsWithGaugeResponse = ([a_groups_with_gauge]) => ({
    groups_with_gauge: a_groups_with_gauge && map(a_groups_with_gauge, expandOsmosisIncentivesGroupsWithGauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryGroupByGroupGaugeIDRequest}
 */
export const condenseOsmosisIncentivesQueryGroupByGroupGaugeIDRequest = (g_msg) => encodeOsmosisIncentivesQueryGroupByGroupGaugeIDRequest(g_msg.id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryGroupByGroupGaugeIDRequest` -
 */
export const expandOsmosisIncentivesQueryGroupByGroupGaugeIDRequest = ([sg_id]) => ({
    id: sg_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryGroupByGroupGaugeIDResponse}
 */
export const condenseOsmosisIncentivesQueryGroupByGroupGaugeIDResponse = (g_msg) => encodeOsmosisIncentivesQueryGroupByGroupGaugeIDResponse(apply_opt(g_msg.group, condenseOsmosisIncentivesGroup));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryGroupByGroupGaugeIDResponse` -
 */
export const expandOsmosisIncentivesQueryGroupByGroupGaugeIDResponse = ([a_group]) => ({
    group: a_group && expandOsmosisIncentivesGroup(a_group),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest}
 */
export const condenseOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest = (g_msg) => encodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest(g_msg.group_gauge_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryCurrentWeightByGroupGaugeIDRequest` -
 */
export const expandOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest = ([sg_group_gauge_id]) => ({
    group_gauge_id: sg_group_gauge_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse}
 */
export const condenseOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse = (g_msg) => encodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse(map(g_msg.gauge_weight, condenseOsmosisIncentivesGaugeWeight));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.QueryCurrentWeightByGroupGaugeIDResponse` -
 */
export const expandOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse = ([a_gauge_weight]) => ({
    gauge_weight: a_gauge_weight && map(a_gauge_weight, expandOsmosisIncentivesGaugeWeight),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGaugeWeight}
 */
export const condenseOsmosisIncentivesGaugeWeight = (g_msg) => encodeOsmosisIncentivesGaugeWeight(g_msg.gauge_id, g_msg.weight_ratio);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GaugeWeight` -
 */
export const expandOsmosisIncentivesGaugeWeight = ([sg_gauge_id, s_weight_ratio]) => ({
    gauge_id: sg_gauge_id,
    weight_ratio: s_weight_ratio,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesGenesisState}
 */
export const condenseOsmosisIncentivesGenesisState = (g_msg) => encodeOsmosisIncentivesGenesisState(apply_opt(g_msg.params, condenseOsmosisIncentivesParams), map(g_msg.gauges, condenseOsmosisIncentivesGauge), map(g_msg.lockable_durations, parse_duration), g_msg.last_gauge_id, map(g_msg.group_gauges, condenseOsmosisIncentivesGauge), map(g_msg.groups, condenseOsmosisIncentivesGroup));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.GenesisState` - defines the incentives module's various parameters when first initialized
 */
export const expandOsmosisIncentivesGenesisState = ([a_params, a_gauges, a_lockable_durations, sg_last_gauge_id, a_group_gauges, a_groups]) => ({
    params: a_params && expandOsmosisIncentivesParams(a_params),
    gauges: a_gauges && map(a_gauges, expandOsmosisIncentivesGauge),
    lockable_durations: map(a_lockable_durations, expand_duration),
    last_gauge_id: sg_last_gauge_id,
    group_gauges: a_group_gauges && map(a_group_gauges, expandOsmosisIncentivesGauge),
    groups: a_groups && map(a_groups, expandOsmosisIncentivesGroup),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIncentivesParams}
 */
export const condenseOsmosisIncentivesParams = (g_msg) => encodeOsmosisIncentivesParams(g_msg.distr_epoch_identifier, map(g_msg.group_creation_fee, slimify_coin), g_msg.unrestricted_creator_whitelist);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.incentives.Params` - holds parameters for the incentives module
 */
export const expandOsmosisIncentivesParams = ([s_distr_epoch_identifier, a_group_creation_fee, a_unrestricted_creator_whitelists]) => ({
    distr_epoch_identifier: s_distr_epoch_identifier,
    group_creation_fee: a_group_creation_fee && map(a_group_creation_fee, expand_coin),
    unrestricted_creator_whitelist: a_unrestricted_creator_whitelists,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisAccumV1beta1AccumulatorContent}
 */
export const condenseOsmosisAccumV1beta1AccumulatorContent = (g_msg) => encodeOsmosisAccumV1beta1AccumulatorContent(map(g_msg.accum_value, condenseCosmosBaseV1beta1DecCoin), g_msg.total_shares);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.accum.v1beta1.AccumulatorContent` - the state-entry for the global accumulator. It contains the name of the global accumulator and the total value of shares belonging to it from all positions.
 */
export const expandOsmosisAccumV1beta1AccumulatorContent = ([a_accum_value, s_total_shares]) => ({
    accum_value: a_accum_value && map(a_accum_value, expandCosmosBaseV1beta1DecCoin),
    total_shares: s_total_shares,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisAccumV1beta1Options}
 */
export const condenseOsmosisAccumV1beta1Options = (g_msg) => encodeOsmosisAccumV1beta1Options();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.accum.v1beta1.Options` -
 */
export const expandOsmosisAccumV1beta1Options = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisAccumV1beta1Record}
 */
export const condenseOsmosisAccumV1beta1Record = (g_msg) => encodeOsmosisAccumV1beta1Record(g_msg.num_shares, map(g_msg.accum_value_per_share, condenseCosmosBaseV1beta1DecCoin), map(g_msg.unclaimed_rewards_total, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.options, condenseOsmosisAccumV1beta1Options));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.accum.v1beta1.Record` - corresponds to an individual position value belonging to the global accumulator.
 */
export const expandOsmosisAccumV1beta1Record = ([s_num_shares, a_accum_value_per_share, a_unclaimed_rewards_total, a_options]) => ({
    num_shares: s_num_shares,
    accum_value_per_share: a_accum_value_per_share && map(a_accum_value_per_share, expandCosmosBaseV1beta1DecCoin),
    unclaimed_rewards_total: a_unclaimed_rewards_total && map(a_unclaimed_rewards_total, expandCosmosBaseV1beta1DecCoin),
    options: a_options && expandOsmosisAccumV1beta1Options(a_options),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool(g_msg.sender, apply_opt(g_msg.pool_params, condenseOsmosisGammPoolmodelsStableswapV1beta1PoolParams), map(g_msg.initial_pool_liquidity, slimify_coin), g_msg.scaling_factors, g_msg.future_pool_governor, g_msg.scaling_factor_controller);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool` - ===================== MsgCreatePool
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool = ([sa_sender, a_pool_params, a_initial_pool_liquidity, a_scaling_factors, s_future_pool_governor, s_scaling_factor_controller]) => ({
    sender: sa_sender,
    pool_params: a_pool_params && expandOsmosisGammPoolmodelsStableswapV1beta1PoolParams(a_pool_params),
    initial_pool_liquidity: a_initial_pool_liquidity && map(a_initial_pool_liquidity, expand_coin),
    scaling_factors: a_scaling_factors,
    future_pool_governor: s_future_pool_governor,
    scaling_factor_controller: s_scaling_factor_controller,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1PoolParams}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1PoolParams = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1PoolParams(g_msg.swap_fee, g_msg.exit_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams` - defined the parameters that will be managed by the pool governance in the future. This params are not managed by the chain governance. Instead they will be managed by the token holders of the pool. The pool's token holders are specified in future_pool_governor.
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1PoolParams = ([s_swap_fee, s_exit_fee]) => ({
    swap_fee: s_swap_fee,
    exit_fee: s_exit_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse` - Returns a poolID with custom poolName.
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors(g_msg.sender, g_msg.pool_id, g_msg.scaling_factors);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors` - Sender must be the pool's scaling_factor_governor in order for the tx to succeed. Adjusts stableswap scaling factors.
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors = ([sa_sender, sg_pool_id, a_scaling_factors]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    scaling_factors: a_scaling_factors,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse` -
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsStableswapV1beta1Pool}
 */
export const condenseOsmosisGammPoolmodelsStableswapV1beta1Pool = (g_msg) => encodeOsmosisGammPoolmodelsStableswapV1beta1Pool(g_msg.address, g_msg.id, apply_opt(g_msg.pool_params, condenseOsmosisGammPoolmodelsStableswapV1beta1PoolParams), g_msg.future_pool_governor, slimify_coin(g_msg.total_shares), map(g_msg.pool_liquidity, slimify_coin), g_msg.scaling_factors, g_msg.scaling_factor_controller);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.stableswap.v1beta1.Pool` - the stableswap Pool struct
 */
export const expandOsmosisGammPoolmodelsStableswapV1beta1Pool = ([sa_address, sg_id, a_pool_params, s_future_pool_governor, a_total_shares, a_pool_liquidity, a_scaling_factors, s_scaling_factor_controller]) => ({
    address: sa_address,
    id: sg_id,
    pool_params: a_pool_params && expandOsmosisGammPoolmodelsStableswapV1beta1PoolParams(a_pool_params),
    future_pool_governor: s_future_pool_governor,
    total_shares: a_total_shares && expand_coin(a_total_shares),
    pool_liquidity: a_pool_liquidity && map(a_pool_liquidity, expand_coin),
    scaling_factors: a_scaling_factors,
    scaling_factor_controller: s_scaling_factor_controller,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool}
 */
export const condenseOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool = (g_msg) => encodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool(g_msg.sender, apply_opt(g_msg.pool_params, condenseOsmosisGammV1beta1PoolParams), map(g_msg.pool_assets, condenseOsmosisGammV1beta1PoolAsset), g_msg.future_pool_governor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool` - ===================== MsgCreatePool
 */
export const expandOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool = ([sa_sender, a_pool_params, a_pool_assets, s_future_pool_governor]) => ({
    sender: sa_sender,
    pool_params: a_pool_params && expandOsmosisGammV1beta1PoolParams(a_pool_params),
    pool_assets: a_pool_assets && map(a_pool_assets, expandOsmosisGammV1beta1PoolAsset),
    future_pool_governor: s_future_pool_governor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1PoolParams}
 */
export const condenseOsmosisGammV1beta1PoolParams = (g_msg) => encodeOsmosisGammV1beta1PoolParams(g_msg.swap_fee, g_msg.exit_fee, apply_opt(g_msg.smooth_weight_change_params, condenseOsmosisGammV1beta1SmoothWeightChangeParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.PoolParams` - defined the parameters that will be managed by the pool governance in the future. This params are not managed by the chain governance. Instead they will be managed by the token holders of the pool. The pool's token holders are specified in future_pool_governor.
 */
export const expandOsmosisGammV1beta1PoolParams = ([s_swap_fee, s_exit_fee, a_smooth_weight_change_params]) => ({
    swap_fee: s_swap_fee,
    exit_fee: s_exit_fee,
    smooth_weight_change_params: a_smooth_weight_change_params && expandOsmosisGammV1beta1SmoothWeightChangeParams(a_smooth_weight_change_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1SmoothWeightChangeParams}
 */
export const condenseOsmosisGammV1beta1SmoothWeightChangeParams = (g_msg) => encodeOsmosisGammV1beta1SmoothWeightChangeParams(parse_timestamp(g_msg.start_time), parse_duration(g_msg.duration), map(g_msg.initial_pool_weights, condenseOsmosisGammV1beta1PoolAsset), map(g_msg.target_pool_weights, condenseOsmosisGammV1beta1PoolAsset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.SmoothWeightChangeParams` - Parameters for changing the weights in a balancer pool smoothly from a start weight and end weight over a period of time. Currently, the only smooth change supported is linear changing between the two weights, but more types may be added in the future. When these parameters are set, the weight w(t) for pool time `t` is the following: t <= start_time: w(t) = initial_pool_weights start_time < t <= start_time + duration: w(t) = initial_pool_weights + (t - start_time) * (target_pool_weights - initial_pool_weights) / (duration) t > start_time + duration: w(t) = target_pool_weights
 */
export const expandOsmosisGammV1beta1SmoothWeightChangeParams = ([a_start_time, a_duration, a_initial_pool_weights, a_target_pool_weights]) => ({
    start_time: expand_timestamp(a_start_time),
    duration: expand_duration(a_duration),
    initial_pool_weights: a_initial_pool_weights && map(a_initial_pool_weights, expandOsmosisGammV1beta1PoolAsset),
    target_pool_weights: a_target_pool_weights && map(a_target_pool_weights, expandOsmosisGammV1beta1PoolAsset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1PoolAsset}
 */
export const condenseOsmosisGammV1beta1PoolAsset = (g_msg) => encodeOsmosisGammV1beta1PoolAsset(slimify_coin(g_msg.token), g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.PoolAsset` - Pool asset is an internal struct that combines the amount of the token in the pool, and its balancer weight. This is an awkward packaging of data, and should be revisited in a future state migration.
 */
export const expandOsmosisGammV1beta1PoolAsset = ([a_token, s_weight]) => ({
    token: a_token && expand_coin(a_token),
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse}
 */
export const condenseOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse = (g_msg) => encodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse` - Returns the poolID
 */
export const expandOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1Pool}
 */
export const condenseOsmosisGammV1beta1Pool = (g_msg) => encodeOsmosisGammV1beta1Pool(g_msg.address, g_msg.id, apply_opt(g_msg.pool_params, condenseOsmosisGammV1beta1PoolParams), g_msg.future_pool_governor, slimify_coin(g_msg.total_shares), map(g_msg.pool_assets, condenseOsmosisGammV1beta1PoolAsset), g_msg.total_weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.Pool` -
 */
export const expandOsmosisGammV1beta1Pool = ([sa_address, sg_id, a_pool_params, s_future_pool_governor, a_total_shares, a_pool_assets, s_total_weight]) => ({
    address: sa_address,
    id: sg_id,
    pool_params: a_pool_params && expandOsmosisGammV1beta1PoolParams(a_pool_params),
    future_pool_governor: s_future_pool_governor,
    total_shares: a_total_shares && expand_coin(a_total_shares),
    pool_assets: a_pool_assets && map(a_pool_assets, expandOsmosisGammV1beta1PoolAsset),
    total_weight: s_total_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV2QuerySpotPriceRequest}
 */
export const condenseOsmosisGammV2QuerySpotPriceRequest = (g_msg) => encodeOsmosisGammV2QuerySpotPriceRequest(g_msg.pool_id, g_msg.base_asset_denom, g_msg.quote_asset_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v2.QuerySpotPriceRequest` - Deprecated: please use alternate in x/poolmanager
 */
export const expandOsmosisGammV2QuerySpotPriceRequest = ([sg_pool_id, s_base_asset_denom, s_quote_asset_denom]) => ({
    pool_id: sg_pool_id,
    base_asset_denom: s_base_asset_denom,
    quote_asset_denom: s_quote_asset_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV2QuerySpotPriceResponse}
 */
export const condenseOsmosisGammV2QuerySpotPriceResponse = (g_msg) => encodeOsmosisGammV2QuerySpotPriceResponse(g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v2.QuerySpotPriceResponse` - Depreacted: please use alternate in x/poolmanager
 */
export const expandOsmosisGammV2QuerySpotPriceResponse = ([s_spot_price]) => ({
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinPool}
 */
export const condenseOsmosisGammV1beta1MsgJoinPool = (g_msg) => encodeOsmosisGammV1beta1MsgJoinPool(g_msg.sender, g_msg.pool_id, g_msg.share_out_amount, map(g_msg.token_in_maxs, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinPool` - ===================== MsgJoinPool This is really MsgJoinPoolNoSwap
 */
export const expandOsmosisGammV1beta1MsgJoinPool = ([sa_sender, sg_pool_id, s_share_out_amount, a_token_in_maxs]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    share_out_amount: s_share_out_amount,
    token_in_maxs: a_token_in_maxs && map(a_token_in_maxs, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinPoolResponse}
 */
export const condenseOsmosisGammV1beta1MsgJoinPoolResponse = (g_msg) => encodeOsmosisGammV1beta1MsgJoinPoolResponse(g_msg.share_out_amount, map(g_msg.token_in, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinPoolResponse` -
 */
export const expandOsmosisGammV1beta1MsgJoinPoolResponse = ([s_share_out_amount, a_token_in]) => ({
    share_out_amount: s_share_out_amount,
    token_in: a_token_in && map(a_token_in, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitPool}
 */
export const condenseOsmosisGammV1beta1MsgExitPool = (g_msg) => encodeOsmosisGammV1beta1MsgExitPool(g_msg.sender, g_msg.pool_id, g_msg.share_in_amount, map(g_msg.token_out_mins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitPool` - ===================== MsgExitPool
 */
export const expandOsmosisGammV1beta1MsgExitPool = ([sa_sender, sg_pool_id, s_share_in_amount, a_token_out_mins]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    share_in_amount: s_share_in_amount,
    token_out_mins: a_token_out_mins && map(a_token_out_mins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitPoolResponse}
 */
export const condenseOsmosisGammV1beta1MsgExitPoolResponse = (g_msg) => encodeOsmosisGammV1beta1MsgExitPoolResponse(map(g_msg.token_out, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitPoolResponse` -
 */
export const expandOsmosisGammV1beta1MsgExitPoolResponse = ([a_token_out]) => ({
    token_out: a_token_out && map(a_token_out, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgSwapExactAmountIn}
 */
export const condenseOsmosisGammV1beta1MsgSwapExactAmountIn = (g_msg) => encodeOsmosisGammV1beta1MsgSwapExactAmountIn(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute), slimify_coin(g_msg.token_in), g_msg.token_out_min_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgSwapExactAmountIn` - ===================== MsgSwapExactAmountIn
 */
export const expandOsmosisGammV1beta1MsgSwapExactAmountIn = ([sa_sender, a_routes, a_token_in, s_token_out_min_amount]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute),
    token_in: a_token_in && expand_coin(a_token_in),
    token_out_min_amount: s_token_out_min_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SwapAmountInRoute}
 */
export const condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute = (g_msg) => encodeOsmosisPoolmanagerV1beta1SwapAmountInRoute(g_msg.pool_id, g_msg.token_out_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SwapAmountInRoute` -
 */
export const expandOsmosisPoolmanagerV1beta1SwapAmountInRoute = ([sg_pool_id, s_token_out_denom]) => ({
    pool_id: sg_pool_id,
    token_out_denom: s_token_out_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgSwapExactAmountInResponse}
 */
export const condenseOsmosisGammV1beta1MsgSwapExactAmountInResponse = (g_msg) => encodeOsmosisGammV1beta1MsgSwapExactAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse` -
 */
export const expandOsmosisGammV1beta1MsgSwapExactAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgSwapExactAmountOut}
 */
export const condenseOsmosisGammV1beta1MsgSwapExactAmountOut = (g_msg) => encodeOsmosisGammV1beta1MsgSwapExactAmountOut(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute), g_msg.token_in_max_amount, slimify_coin(g_msg.token_out));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgSwapExactAmountOut` -
 */
export const expandOsmosisGammV1beta1MsgSwapExactAmountOut = ([sa_sender, a_routes, s_token_in_max_amount, a_token_out]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute),
    token_in_max_amount: s_token_in_max_amount,
    token_out: a_token_out && expand_coin(a_token_out),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SwapAmountOutRoute}
 */
export const condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute = (g_msg) => encodeOsmosisPoolmanagerV1beta1SwapAmountOutRoute(g_msg.pool_id, g_msg.token_in_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SwapAmountOutRoute` -
 */
export const expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute = ([sg_pool_id, s_token_in_denom]) => ({
    pool_id: sg_pool_id,
    token_in_denom: s_token_in_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgSwapExactAmountOutResponse}
 */
export const condenseOsmosisGammV1beta1MsgSwapExactAmountOutResponse = (g_msg) => encodeOsmosisGammV1beta1MsgSwapExactAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse` -
 */
export const expandOsmosisGammV1beta1MsgSwapExactAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinSwapExternAmountIn}
 */
export const condenseOsmosisGammV1beta1MsgJoinSwapExternAmountIn = (g_msg) => encodeOsmosisGammV1beta1MsgJoinSwapExternAmountIn(g_msg.sender, g_msg.pool_id, slimify_coin(g_msg.token_in), g_msg.share_out_min_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn` - ===================== MsgJoinSwapExternAmountIn TODO: Rename to MsgJoinSwapExactAmountIn
 */
export const expandOsmosisGammV1beta1MsgJoinSwapExternAmountIn = ([sa_sender, sg_pool_id, a_token_in, s_share_out_min_amount]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    token_in: a_token_in && expand_coin(a_token_in),
    share_out_min_amount: s_share_out_min_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse}
 */
export const condenseOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse = (g_msg) => encodeOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse(g_msg.share_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse` -
 */
export const expandOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse = ([s_share_out_amount]) => ({
    share_out_amount: s_share_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinSwapShareAmountOut}
 */
export const condenseOsmosisGammV1beta1MsgJoinSwapShareAmountOut = (g_msg) => encodeOsmosisGammV1beta1MsgJoinSwapShareAmountOut(g_msg.sender, g_msg.pool_id, g_msg.token_in_denom, g_msg.share_out_amount, g_msg.token_in_max_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut` - ===================== MsgJoinSwapShareAmountOut
 */
export const expandOsmosisGammV1beta1MsgJoinSwapShareAmountOut = ([sa_sender, sg_pool_id, s_token_in_denom, s_share_out_amount, s_token_in_max_amount]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    token_in_denom: s_token_in_denom,
    share_out_amount: s_share_out_amount,
    token_in_max_amount: s_token_in_max_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse}
 */
export const condenseOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse = (g_msg) => encodeOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse` -
 */
export const expandOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitSwapShareAmountIn}
 */
export const condenseOsmosisGammV1beta1MsgExitSwapShareAmountIn = (g_msg) => encodeOsmosisGammV1beta1MsgExitSwapShareAmountIn(g_msg.sender, g_msg.pool_id, g_msg.token_out_denom, g_msg.share_in_amount, g_msg.token_out_min_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn` - ===================== MsgExitSwapShareAmountIn
 */
export const expandOsmosisGammV1beta1MsgExitSwapShareAmountIn = ([sa_sender, sg_pool_id, s_token_out_denom, s_share_in_amount, s_token_out_min_amount]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    token_out_denom: s_token_out_denom,
    share_in_amount: s_share_in_amount,
    token_out_min_amount: s_token_out_min_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitSwapShareAmountInResponse}
 */
export const condenseOsmosisGammV1beta1MsgExitSwapShareAmountInResponse = (g_msg) => encodeOsmosisGammV1beta1MsgExitSwapShareAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse` -
 */
export const expandOsmosisGammV1beta1MsgExitSwapShareAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitSwapExternAmountOut}
 */
export const condenseOsmosisGammV1beta1MsgExitSwapExternAmountOut = (g_msg) => encodeOsmosisGammV1beta1MsgExitSwapExternAmountOut(g_msg.sender, g_msg.pool_id, slimify_coin(g_msg.token_out), g_msg.share_in_max_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut` - ===================== MsgExitSwapExternAmountOut
 */
export const expandOsmosisGammV1beta1MsgExitSwapExternAmountOut = ([sa_sender, sg_pool_id, a_token_out, s_share_in_max_amount]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    token_out: a_token_out && expand_coin(a_token_out),
    share_in_max_amount: s_share_in_max_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse}
 */
export const condenseOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse = (g_msg) => encodeOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse(g_msg.share_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse` -
 */
export const expandOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse = ([s_share_in_amount]) => ({
    share_in_amount: s_share_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1ReplaceMigrationRecordsProposal}
 */
export const condenseOsmosisGammV1beta1ReplaceMigrationRecordsProposal = (g_msg) => encodeOsmosisGammV1beta1ReplaceMigrationRecordsProposal(g_msg.title, g_msg.description, map(g_msg.records, condenseOsmosisGammV1beta1BalancerToConcentratedPoolLink));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.ReplaceMigrationRecordsProposal` - a gov Content type for updating the migration records. If a ReplaceMigrationRecordsProposal passes, the proposal’s records override the existing MigrationRecords set in the module. Each record specifies a single connection between a single balancer pool and a single concentrated pool.
 */
export const expandOsmosisGammV1beta1ReplaceMigrationRecordsProposal = ([s_title, s_description, a_records]) => ({
    title: s_title,
    description: s_description,
    records: a_records && map(a_records, expandOsmosisGammV1beta1BalancerToConcentratedPoolLink),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1BalancerToConcentratedPoolLink}
 */
export const condenseOsmosisGammV1beta1BalancerToConcentratedPoolLink = (g_msg) => encodeOsmosisGammV1beta1BalancerToConcentratedPoolLink(g_msg.balancer_pool_id, g_msg.cl_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.BalancerToConcentratedPoolLink` - defines a single link between a single balancer pool and a single concentrated liquidity pool. This link is used to allow a balancer pool to migrate to a single canonical full range concentrated liquidity pool position A balancer pool can be linked to a maximum of one cl pool, and a cl pool can be linked to a maximum of one balancer pool.
 */
export const expandOsmosisGammV1beta1BalancerToConcentratedPoolLink = ([sg_balancer_pool_id, sg_cl_pool_id]) => ({
    balancer_pool_id: sg_balancer_pool_id,
    cl_pool_id: sg_cl_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1UpdateMigrationRecordsProposal}
 */
export const condenseOsmosisGammV1beta1UpdateMigrationRecordsProposal = (g_msg) => encodeOsmosisGammV1beta1UpdateMigrationRecordsProposal(g_msg.title, g_msg.description, map(g_msg.records, condenseOsmosisGammV1beta1BalancerToConcentratedPoolLink));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.UpdateMigrationRecordsProposal` - For example: if the existing DistrRecords were: [(Balancer 1, CL 5), (Balancer 2, CL 6), (Balancer 3, CL 7)] And an UpdateMigrationRecordsProposal includes [(Balancer 2, CL 0), (Balancer 3, CL 4), (Balancer 4, CL 10)] This would leave Balancer 1 record, delete Balancer 2 record, Edit Balancer 3 record, and Add Balancer 4 record The result MigrationRecords in state would be: [(Balancer 1, CL 5), (Balancer 3, CL 4), (Balancer 4, CL 10)]
 */
export const expandOsmosisGammV1beta1UpdateMigrationRecordsProposal = ([s_title, s_description, a_records]) => ({
    title: s_title,
    description: s_description,
    records: a_records && map(a_records, expandOsmosisGammV1beta1BalancerToConcentratedPoolLink),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1PoolRecordWithCFMMLink}
 */
export const condenseOsmosisGammV1beta1PoolRecordWithCFMMLink = (g_msg) => encodeOsmosisGammV1beta1PoolRecordWithCFMMLink(g_msg.denom0, g_msg.denom1, g_msg.tick_spacing, g_msg.exponent_at_price_one, g_msg.spread_factor, g_msg.balancer_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.PoolRecordWithCFMMLink` -
 */
export const expandOsmosisGammV1beta1PoolRecordWithCFMMLink = ([s_denom0, s_denom1, sg_tick_spacing, s_exponent_at_price_one, s_spread_factor, sg_balancer_pool_id]) => ({
    denom0: s_denom0,
    denom1: s_denom1,
    tick_spacing: sg_tick_spacing,
    exponent_at_price_one: s_exponent_at_price_one,
    spread_factor: s_spread_factor,
    balancer_pool_id: sg_balancer_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal}
 */
export const condenseOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = (g_msg) => encodeOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal(g_msg.title, g_msg.description, map(g_msg.pool_records_with_cfmm_link, condenseOsmosisGammV1beta1PoolRecordWithCFMMLink));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal` - a gov Content type for creating concentrated liquidity pools and linking it to a CFMM pool.
 */
export const expandOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = ([s_title, s_description, a_pool_records_with_cfmm_link]) => ({
    title: s_title,
    description: s_description,
    pool_records_with_cfmm_link: a_pool_records_with_cfmm_link && map(a_pool_records_with_cfmm_link, expandOsmosisGammV1beta1PoolRecordWithCFMMLink),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1SetScalingFactorControllerProposal}
 */
export const condenseOsmosisGammV1beta1SetScalingFactorControllerProposal = (g_msg) => encodeOsmosisGammV1beta1SetScalingFactorControllerProposal(g_msg.title, g_msg.description, g_msg.pool_id, g_msg.controller_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.SetScalingFactorControllerProposal` - a gov Content type for updating the scaling factor controller address of a stableswap pool
 */
export const expandOsmosisGammV1beta1SetScalingFactorControllerProposal = ([s_title, s_description, sg_pool_id, sa_controller]) => ({
    title: s_title,
    description: s_description,
    pool_id: sg_pool_id,
    controller_address: sa_controller,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolRequest}
 */
export const condenseOsmosisGammV1beta1QueryPoolRequest = (g_msg) => encodeOsmosisGammV1beta1QueryPoolRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolRequest` - =============================== Pool Deprecated: please use the alternative in x/poolmanager
 */
export const expandOsmosisGammV1beta1QueryPoolRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolResponse}
 */
export const condenseOsmosisGammV1beta1QueryPoolResponse = (g_msg) => encodeOsmosisGammV1beta1QueryPoolResponse(condenseJsonAny(g_msg.pool));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolResponse` - Deprecated: please use the alternative in x/poolmanager
 */
export const expandOsmosisGammV1beta1QueryPoolResponse = ([a_pool]) => ({
    pool: a_pool && expandJsonAny(a_pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolsRequest}
 */
export const condenseOsmosisGammV1beta1QueryPoolsRequest = (g_msg) => encodeOsmosisGammV1beta1QueryPoolsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolsRequest` - =============================== Pools
 */
export const expandOsmosisGammV1beta1QueryPoolsRequest = ([, a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolsResponse}
 */
export const condenseOsmosisGammV1beta1QueryPoolsResponse = (g_msg) => encodeOsmosisGammV1beta1QueryPoolsResponse(map(g_msg.pools, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolsResponse` -
 */
export const expandOsmosisGammV1beta1QueryPoolsResponse = ([a_pools, a_pagination]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryNumPoolsRequest}
 */
export const condenseOsmosisGammV1beta1QueryNumPoolsRequest = (g_msg) => encodeOsmosisGammV1beta1QueryNumPoolsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryNumPoolsRequest` - =============================== NumPools
 */
export const expandOsmosisGammV1beta1QueryNumPoolsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryNumPoolsResponse}
 */
export const condenseOsmosisGammV1beta1QueryNumPoolsResponse = (g_msg) => encodeOsmosisGammV1beta1QueryNumPoolsResponse(g_msg.num_pools);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryNumPoolsResponse` -
 */
export const expandOsmosisGammV1beta1QueryNumPoolsResponse = ([sg_num_pools]) => ({
    num_pools: sg_num_pools,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolTypeRequest}
 */
export const condenseOsmosisGammV1beta1QueryPoolTypeRequest = (g_msg) => encodeOsmosisGammV1beta1QueryPoolTypeRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolTypeRequest` - =============================== PoolType
 */
export const expandOsmosisGammV1beta1QueryPoolTypeRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolTypeResponse}
 */
export const condenseOsmosisGammV1beta1QueryPoolTypeResponse = (g_msg) => encodeOsmosisGammV1beta1QueryPoolTypeResponse(g_msg.pool_type);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolTypeResponse` -
 */
export const expandOsmosisGammV1beta1QueryPoolTypeResponse = ([s_pool_type]) => ({
    pool_type: s_pool_type,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest}
 */
export const condenseOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest = (g_msg) => encodeOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest(g_msg.pool_id, map(g_msg.tokens_in, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest` - =============================== CalcJoinPoolShares
 */
export const expandOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest = ([sg_pool_id, a_tokens_in]) => ({
    pool_id: sg_pool_id,
    tokens_in: a_tokens_in && map(a_tokens_in, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse}
 */
export const condenseOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse = (g_msg) => encodeOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse(g_msg.share_out_amount, map(g_msg.tokens_out, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse` -
 */
export const expandOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse = ([s_share_out_amount, a_tokens_out]) => ({
    share_out_amount: s_share_out_amount,
    tokens_out: a_tokens_out && map(a_tokens_out, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest}
 */
export const condenseOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest = (g_msg) => encodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest(g_msg.pool_id, g_msg.share_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest` - =============================== CalcExitPoolCoinsFromShares
 */
export const expandOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest = ([sg_pool_id, s_share_in_amount]) => ({
    pool_id: sg_pool_id,
    share_in_amount: s_share_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse}
 */
export const condenseOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse = (g_msg) => encodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse(map(g_msg.tokens_out, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse` -
 */
export const expandOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse = ([a_tokens_out]) => ({
    tokens_out: a_tokens_out && map(a_tokens_out, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolParamsRequest}
 */
export const condenseOsmosisGammV1beta1QueryPoolParamsRequest = (g_msg) => encodeOsmosisGammV1beta1QueryPoolParamsRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolParamsRequest` - =============================== PoolParams
 */
export const expandOsmosisGammV1beta1QueryPoolParamsRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolParamsResponse}
 */
export const condenseOsmosisGammV1beta1QueryPoolParamsResponse = (g_msg) => encodeOsmosisGammV1beta1QueryPoolParamsResponse(condenseJsonAny(g_msg.params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolParamsResponse` -
 */
export const expandOsmosisGammV1beta1QueryPoolParamsResponse = ([a_params]) => ({
    params: a_params && expandJsonAny(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalPoolLiquidityRequest}
 */
export const condenseOsmosisGammV1beta1QueryTotalPoolLiquidityRequest = (g_msg) => encodeOsmosisGammV1beta1QueryTotalPoolLiquidityRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest` - =============================== PoolLiquidity Deprecated: please use the alternative in x/poolmanager
 */
export const expandOsmosisGammV1beta1QueryTotalPoolLiquidityRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalPoolLiquidityResponse}
 */
export const condenseOsmosisGammV1beta1QueryTotalPoolLiquidityResponse = (g_msg) => encodeOsmosisGammV1beta1QueryTotalPoolLiquidityResponse(map(g_msg.liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse` - Deprecated: please use the alternative in x/poolmanager
 */
export const expandOsmosisGammV1beta1QueryTotalPoolLiquidityResponse = ([a_liquidity]) => ({
    liquidity: a_liquidity && map(a_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalSharesRequest}
 */
export const condenseOsmosisGammV1beta1QueryTotalSharesRequest = (g_msg) => encodeOsmosisGammV1beta1QueryTotalSharesRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalSharesRequest` - =============================== TotalShares
 */
export const expandOsmosisGammV1beta1QueryTotalSharesRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalSharesResponse}
 */
export const condenseOsmosisGammV1beta1QueryTotalSharesResponse = (g_msg) => encodeOsmosisGammV1beta1QueryTotalSharesResponse(slimify_coin(g_msg.total_shares));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalSharesResponse` -
 */
export const expandOsmosisGammV1beta1QueryTotalSharesResponse = ([a_total_shares]) => ({
    total_shares: a_total_shares && expand_coin(a_total_shares),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest}
 */
export const condenseOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest = (g_msg) => encodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest(g_msg.pool_id, map(g_msg.tokens_in, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest` - =============================== CalcJoinPoolNoSwapShares
 */
export const expandOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest = ([sg_pool_id, a_tokens_in]) => ({
    pool_id: sg_pool_id,
    tokens_in: a_tokens_in && map(a_tokens_in, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse}
 */
export const condenseOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse = (g_msg) => encodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse(map(g_msg.tokens_out, slimify_coin), g_msg.shares_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse` -
 */
export const expandOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse = ([a_tokens_out, s_shares_out]) => ({
    tokens_out: a_tokens_out && map(a_tokens_out, expand_coin),
    shares_out: s_shares_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySpotPriceRequest}
 */
export const condenseOsmosisGammV1beta1QuerySpotPriceRequest = (g_msg) => encodeOsmosisGammV1beta1QuerySpotPriceRequest(g_msg.pool_id, g_msg.base_asset_denom, g_msg.quote_asset_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySpotPriceRequest` - defines the gRPC request structure for a SpotPrice query.
 */
export const expandOsmosisGammV1beta1QuerySpotPriceRequest = ([sg_pool_id, s_base_asset_denom, s_quote_asset_denom]) => ({
    pool_id: sg_pool_id,
    base_asset_denom: s_base_asset_denom,
    quote_asset_denom: s_quote_asset_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolsWithFilterRequest}
 */
export const condenseOsmosisGammV1beta1QueryPoolsWithFilterRequest = (g_msg) => encodeOsmosisGammV1beta1QueryPoolsWithFilterRequest(g_msg.min_liquidity, g_msg.pool_type, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest` -
 */
export const expandOsmosisGammV1beta1QueryPoolsWithFilterRequest = ([s_min_liquidity, s_pool_type, a_pagination]) => ({
    min_liquidity: s_min_liquidity,
    pool_type: s_pool_type,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryPoolsWithFilterResponse}
 */
export const condenseOsmosisGammV1beta1QueryPoolsWithFilterResponse = (g_msg) => encodeOsmosisGammV1beta1QueryPoolsWithFilterResponse(map(g_msg.pools, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse` -
 */
export const expandOsmosisGammV1beta1QueryPoolsWithFilterResponse = ([a_pools, a_pagination]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySpotPriceResponse}
 */
export const condenseOsmosisGammV1beta1QuerySpotPriceResponse = (g_msg) => encodeOsmosisGammV1beta1QuerySpotPriceResponse(g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySpotPriceResponse` - defines the gRPC response structure for a SpotPrice query.
 */
export const expandOsmosisGammV1beta1QuerySpotPriceResponse = ([s_spot_price]) => ({
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySwapExactAmountInRequest}
 */
export const condenseOsmosisGammV1beta1QuerySwapExactAmountInRequest = (g_msg) => encodeOsmosisGammV1beta1QuerySwapExactAmountInRequest(g_msg.sender, g_msg.pool_id, g_msg.token_in, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest` - =============================== EstimateSwapExactAmountIn
 */
export const expandOsmosisGammV1beta1QuerySwapExactAmountInRequest = ([sa_sender, sg_pool_id, s_token_in, a_routes]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    token_in: s_token_in,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySwapExactAmountInResponse}
 */
export const condenseOsmosisGammV1beta1QuerySwapExactAmountInResponse = (g_msg) => encodeOsmosisGammV1beta1QuerySwapExactAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse` -
 */
export const expandOsmosisGammV1beta1QuerySwapExactAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySwapExactAmountOutRequest}
 */
export const condenseOsmosisGammV1beta1QuerySwapExactAmountOutRequest = (g_msg) => encodeOsmosisGammV1beta1QuerySwapExactAmountOutRequest(g_msg.sender, g_msg.pool_id, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute), g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest` - =============================== EstimateSwapExactAmountOut
 */
export const expandOsmosisGammV1beta1QuerySwapExactAmountOutRequest = ([sa_sender, sg_pool_id, a_routes, s_token_out]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute),
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QuerySwapExactAmountOutResponse}
 */
export const condenseOsmosisGammV1beta1QuerySwapExactAmountOutResponse = (g_msg) => encodeOsmosisGammV1beta1QuerySwapExactAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse` -
 */
export const expandOsmosisGammV1beta1QuerySwapExactAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalLiquidityRequest}
 */
export const condenseOsmosisGammV1beta1QueryTotalLiquidityRequest = (g_msg) => encodeOsmosisGammV1beta1QueryTotalLiquidityRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalLiquidityRequest` -
 */
export const expandOsmosisGammV1beta1QueryTotalLiquidityRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryTotalLiquidityResponse}
 */
export const condenseOsmosisGammV1beta1QueryTotalLiquidityResponse = (g_msg) => encodeOsmosisGammV1beta1QueryTotalLiquidityResponse(map(g_msg.liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryTotalLiquidityResponse` -
 */
export const expandOsmosisGammV1beta1QueryTotalLiquidityResponse = ([a_liquidity]) => ({
    liquidity: a_liquidity && map(a_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest}
 */
export const condenseOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest = (g_msg) => encodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest(g_msg.cfmm_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest` - =============================== QueryConcentratedPoolIdLinkFromCFMM
 */
export const expandOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest = ([sg_cfmm_pool_id]) => ({
    cfmm_pool_id: sg_cfmm_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse}
 */
export const condenseOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse = (g_msg) => encodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse(g_msg.concentrated_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse` -
 */
export const expandOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse = ([sg_concentrated_pool_id]) => ({
    concentrated_pool_id: sg_concentrated_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest}
 */
export const condenseOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest = (g_msg) => encodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest` - =============================== QueryCFMMConcentratedPoolLinks
 */
export const expandOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse}
 */
export const condenseOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse = (g_msg) => encodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse(apply_opt(g_msg.migration_records, condenseOsmosisGammV1beta1MigrationRecords));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse` -
 */
export const expandOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse = ([a_migration_records]) => ({
    migration_records: a_migration_records && expandOsmosisGammV1beta1MigrationRecords(a_migration_records),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1MigrationRecords}
 */
export const condenseOsmosisGammV1beta1MigrationRecords = (g_msg) => encodeOsmosisGammV1beta1MigrationRecords(map(g_msg.balancer_to_concentrated_pool_links, condenseOsmosisGammV1beta1BalancerToConcentratedPoolLink));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.MigrationRecords` - contains all the links between balancer and concentrated pools
 */
export const expandOsmosisGammV1beta1MigrationRecords = ([a_balancer_to_concentrated_pool_links]) => ({
    balancer_to_concentrated_pool_links: a_balancer_to_concentrated_pool_links && map(a_balancer_to_concentrated_pool_links, expandOsmosisGammV1beta1BalancerToConcentratedPoolLink),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1Params}
 */
export const condenseOsmosisGammV1beta1Params = (g_msg) => encodeOsmosisGammV1beta1Params(map(g_msg.pool_creation_fee, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.Params` - holds parameters for the incentives module
 */
export const expandOsmosisGammV1beta1Params = ([a_pool_creation_fee]) => ({
    pool_creation_fee: a_pool_creation_fee && map(a_pool_creation_fee, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisGammV1beta1GenesisState}
 */
export const condenseOsmosisGammV1beta1GenesisState = (g_msg) => encodeOsmosisGammV1beta1GenesisState(map(g_msg.pools, condenseJsonAny), g_msg.next_pool_number, apply_opt(g_msg.params, condenseOsmosisGammV1beta1Params), apply_opt(g_msg.migration_records, condenseOsmosisGammV1beta1MigrationRecords));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.gamm.v1beta1.GenesisState` - defines the gamm module's genesis state.
 */
export const expandOsmosisGammV1beta1GenesisState = ([a_pools, sg_next_pool_number, a_params, a_migration_records]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
    next_pool_number: sg_next_pool_number,
    params: a_params && expandOsmosisGammV1beta1Params(a_params),
    migration_records: a_migration_records && expandOsmosisGammV1beta1MigrationRecords(a_migration_records),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest}
 */
export const condenseOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest = (g_msg) => encodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest(JsonToProtoEnumOsmosisDowntimedetectorV1beta1Downtime[g_msg.downtime], parse_duration(g_msg.recovery));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest` - Query for has it been at least $RECOVERY_DURATION units of time, since the chain has been down for $DOWNTIME_DURATION.
 */
export const expandOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest = ([xc_downtime, a_recovery]) => ({
    downtime: xc_downtime >= 0 ? ProtoToJsonEnumOsmosisDowntimedetectorV1beta1Downtime[xc_downtime] : __UNDEFINED,
    recovery: expand_duration(a_recovery),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse}
 */
export const condenseOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse = (g_msg) => encodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse(g_msg.succesfully_recovered);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse` -
 */
export const expandOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse = ([b_succesfully_recovered]) => ({
    succesfully_recovered: !!b_succesfully_recovered,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry}
 */
export const condenseOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry = (g_msg) => encodeOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry(JsonToProtoEnumOsmosisDowntimedetectorV1beta1Downtime[g_msg.duration], parse_timestamp(g_msg.last_downtime));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry` -
 */
export const expandOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry = ([xc_duration, a_last_downtime]) => ({
    duration: xc_duration >= 0 ? ProtoToJsonEnumOsmosisDowntimedetectorV1beta1Downtime[xc_duration] : __UNDEFINED,
    last_downtime: expand_timestamp(a_last_downtime),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisDowntimedetectorV1beta1GenesisState}
 */
export const condenseOsmosisDowntimedetectorV1beta1GenesisState = (g_msg) => encodeOsmosisDowntimedetectorV1beta1GenesisState(map(g_msg.downtimes, condenseOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry), parse_timestamp(g_msg.last_block_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.downtimedetector.v1beta1.GenesisState` - defines the twap module's genesis state.
 */
export const expandOsmosisDowntimedetectorV1beta1GenesisState = ([a_downtimes, a_last_block_time]) => ({
    downtimes: a_downtimes && map(a_downtimes, expandOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry),
    last_block_time: expand_timestamp(a_last_block_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidDelegate}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidDelegate = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidDelegate(g_msg.sender, g_msg.lock_id, g_msg.val_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidDelegate` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidDelegate = ([sa_sender, sg_lock_id, sa_val]) => ({
    sender: sa_sender,
    lock_id: sg_lock_id,
    val_addr: sa_val,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidDelegateResponse}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidDelegateResponse = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidDelegateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidDelegateResponse` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidDelegateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUndelegate}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUndelegate = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUndelegate(g_msg.sender, g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUndelegate` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUndelegate = ([sa_sender, sg_lock_id]) => ({
    sender: sa_sender,
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUndelegateResponse}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUndelegateResponse = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUndelegateResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUndelegateResponse` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUndelegateResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUnbondLock}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUnbondLock = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUnbondLock(g_msg.sender, g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUnbondLock` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUnbondLock = ([sa_sender, sg_lock_id]) => ({
    sender: sa_sender,
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUnbondLockResponse}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUnbondLockResponse = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUnbondLockResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUnbondLockResponse` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUnbondLockResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock(g_msg.sender, g_msg.lock_id, slimify_coin(g_msg.coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUndelegateAndUnbondLock` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock = ([sa_sender, sg_lock_id, a_coin]) => ({
    sender: sa_sender,
    lock_id: sg_lock_id,
    coin: a_coin && expand_coin(a_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse}
 */
export const condenseOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse = (g_msg) => encodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgSuperfluidUndelegateAndUnbondLockResponse` -
 */
export const expandOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgLockAndSuperfluidDelegate}
 */
export const condenseOsmosisSuperfluidMsgLockAndSuperfluidDelegate = (g_msg) => encodeOsmosisSuperfluidMsgLockAndSuperfluidDelegate(g_msg.sender, map(g_msg.coins, slimify_coin), g_msg.val_addr);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgLockAndSuperfluidDelegate` - locks coins with the unbonding period duration, and then does a superfluid lock from the newly created lockup, to the specified validator addr.
 */
export const expandOsmosisSuperfluidMsgLockAndSuperfluidDelegate = ([sa_sender, a_coins, sa_val]) => ({
    sender: sa_sender,
    coins: a_coins && map(a_coins, expand_coin),
    val_addr: sa_val,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse}
 */
export const condenseOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse = (g_msg) => encodeOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse(g_msg.ID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse` -
 */
export const expandOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse = ([sg_ID]) => ({
    ID: sg_ID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate}
 */
export const condenseOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate = (g_msg) => encodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate(g_msg.sender, map(g_msg.coins, slimify_coin), g_msg.val_addr, g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgCreateFullRangePositionAndSuperfluidDelegate` - creates a full range position in a concentrated liquidity pool, then superfluid delegates.
 */
export const expandOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate = ([sa_sender, a_coins, sa_val, sg_pool_id]) => ({
    sender: sa_sender,
    coins: a_coins && map(a_coins, expand_coin),
    val_addr: sa_val,
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse}
 */
export const condenseOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse = (g_msg) => encodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse(g_msg.lockID, g_msg.positionID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgCreateFullRangePositionAndSuperfluidDelegateResponse` -
 */
export const expandOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse = ([sg_lockID, sg_positionID]) => ({
    lockID: sg_lockID,
    positionID: sg_positionID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnPoolWhitelistedPool}
 */
export const condenseOsmosisSuperfluidMsgUnPoolWhitelistedPool = (g_msg) => encodeOsmosisSuperfluidMsgUnPoolWhitelistedPool(g_msg.sender, g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnPoolWhitelistedPool` - Unpools every lock the sender has, that is associated with pool pool_id. If pool_id is not approved for unpooling by governance, this is a no-op. Unpooling takes the locked gamm shares, and runs "ExitPool" on it, to get the constituent tokens. e.g. z gamm/pool/1 tokens ExitPools into constituent tokens x uatom, y uosmo. Then it creates a new lock for every constituent token, with the duration associated with the lock. If the lock was unbonding, the new lockup durations should be the time left until unbond completion.
 */
export const expandOsmosisSuperfluidMsgUnPoolWhitelistedPool = ([sa_sender, sg_pool_id]) => ({
    sender: sa_sender,
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse}
 */
export const condenseOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse = (g_msg) => encodeOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse(g_msg.exited_lock_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse` -
 */
export const expandOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse = ([a_exited_lock_ids]) => ({
    exited_lock_ids: a_exited_lock_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition}
 */
export const condenseOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition = (g_msg) => encodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition(g_msg.sender, g_msg.lock_id, slimify_coin(g_msg.shares_to_migrate), map(g_msg.token_out_mins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnlockAndMigrateSharesToFullRangeConcentratedPosition` - ===================== MsgUnlockAndMigrateSharesToFullRangeConcentratedPosition
 */
export const expandOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition = ([sa_sender, sg_lock_id, a_shares_to_migrate, a_token_out_mins]) => ({
    sender: sa_sender,
    lock_id: sg_lock_id,
    shares_to_migrate: a_shares_to_migrate && expand_coin(a_shares_to_migrate),
    token_out_mins: a_token_out_mins && map(a_token_out_mins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse}
 */
export const condenseOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse = (g_msg) => encodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse(g_msg.amount0, g_msg.amount1, g_msg.liquidity_created, parse_timestamp(g_msg.join_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse` -
 */
export const expandOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse = ([s_amount0, s_amount1, s_liquidity_created, a_join_time]) => ({
    amount0: s_amount0,
    amount1: s_amount1,
    liquidity_created: s_liquidity_created,
    join_time: expand_timestamp(a_join_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition}
 */
export const condenseOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition = (g_msg) => encodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition(g_msg.position_id, g_msg.sender, slimify_coin(g_msg.token_desired0), slimify_coin(g_msg.token_desired1));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgAddToConcentratedLiquiditySuperfluidPosition` - ===================== MsgAddToConcentratedLiquiditySuperfluidPosition
 */
export const expandOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition = ([sg_position_id, sa_sender, a_token_desired0, a_token_desired1]) => ({
    position_id: sg_position_id,
    sender: sa_sender,
    token_desired0: a_token_desired0 && expand_coin(a_token_desired0),
    token_desired1: a_token_desired1 && expand_coin(a_token_desired1),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse}
 */
export const condenseOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse = (g_msg) => encodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse(g_msg.position_id, g_msg.amount0, g_msg.amount1, g_msg.lock_id, g_msg.new_liquidity);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgAddToConcentratedLiquiditySuperfluidPositionResponse` -
 */
export const expandOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse = ([sg_position_id, s_amount0, s_amount1, sg_lock_id, s_new_liquidity]) => ({
    position_id: sg_position_id,
    amount0: s_amount0,
    amount1: s_amount1,
    lock_id: sg_lock_id,
    new_liquidity: s_new_liquidity,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnbondConvertAndStake}
 */
export const condenseOsmosisSuperfluidMsgUnbondConvertAndStake = (g_msg) => encodeOsmosisSuperfluidMsgUnbondConvertAndStake(g_msg.lock_id, g_msg.sender, g_msg.val_addr, g_msg.min_amt_to_stake, slimify_coin(g_msg.shares_to_convert));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnbondConvertAndStake` - ===================== MsgUnbondConvertAndStake
 */
export const expandOsmosisSuperfluidMsgUnbondConvertAndStake = ([sg_lock_id, sa_sender, sa_val, s_min_amt_to_stake, a_shares_to_convert]) => ({
    lock_id: sg_lock_id,
    sender: sa_sender,
    val_addr: sa_val,
    min_amt_to_stake: s_min_amt_to_stake,
    shares_to_convert: a_shares_to_convert && expand_coin(a_shares_to_convert),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidMsgUnbondConvertAndStakeResponse}
 */
export const condenseOsmosisSuperfluidMsgUnbondConvertAndStakeResponse = (g_msg) => encodeOsmosisSuperfluidMsgUnbondConvertAndStakeResponse(g_msg.total_amt_staked);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.MsgUnbondConvertAndStakeResponse` -
 */
export const expandOsmosisSuperfluidMsgUnbondConvertAndStakeResponse = ([s_total_amt_staked]) => ({
    total_amt_staked: s_total_amt_staked,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryParamsRequest}
 */
export const condenseOsmosisSuperfluidQueryParamsRequest = (g_msg) => encodeOsmosisSuperfluidQueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryParamsRequest` -
 */
export const expandOsmosisSuperfluidQueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryParamsResponse}
 */
export const condenseOsmosisSuperfluidQueryParamsResponse = (g_msg) => encodeOsmosisSuperfluidQueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisSuperfluidParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryParamsResponse` -
 */
export const expandOsmosisSuperfluidQueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisSuperfluidParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidParams}
 */
export const condenseOsmosisSuperfluidParams = (g_msg) => encodeOsmosisSuperfluidParams(g_msg.minimum_risk_factor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.Params` - holds parameters for the superfluid module
 */
export const expandOsmosisSuperfluidParams = ([s_minimum_risk_factor]) => ({
    minimum_risk_factor: s_minimum_risk_factor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAssetTypeRequest}
 */
export const condenseOsmosisSuperfluidAssetTypeRequest = (g_msg) => encodeOsmosisSuperfluidAssetTypeRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AssetTypeRequest` -
 */
export const expandOsmosisSuperfluidAssetTypeRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAssetTypeResponse}
 */
export const condenseOsmosisSuperfluidAssetTypeResponse = (g_msg) => encodeOsmosisSuperfluidAssetTypeResponse(JsonToProtoEnumOsmosisSuperfluidSuperfluidAssetType[g_msg.asset_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AssetTypeResponse` -
 */
export const expandOsmosisSuperfluidAssetTypeResponse = ([xc_asset_type]) => ({
    asset_type: xc_asset_type >= 0 ? ProtoToJsonEnumOsmosisSuperfluidSuperfluidAssetType[xc_asset_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAllAssetsRequest}
 */
export const condenseOsmosisSuperfluidAllAssetsRequest = (g_msg) => encodeOsmosisSuperfluidAllAssetsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AllAssetsRequest` -
 */
export const expandOsmosisSuperfluidAllAssetsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAllAssetsResponse}
 */
export const condenseOsmosisSuperfluidAllAssetsResponse = (g_msg) => encodeOsmosisSuperfluidAllAssetsResponse(map(g_msg.assets, condenseOsmosisSuperfluidSuperfluidAsset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AllAssetsResponse` -
 */
export const expandOsmosisSuperfluidAllAssetsResponse = ([a_assets]) => ({
    assets: a_assets && map(a_assets, expandOsmosisSuperfluidSuperfluidAsset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidAsset}
 */
export const condenseOsmosisSuperfluidSuperfluidAsset = (g_msg) => encodeOsmosisSuperfluidSuperfluidAsset(g_msg.denom, JsonToProtoEnumOsmosisSuperfluidSuperfluidAssetType[g_msg.asset_type]);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidAsset` - stores the pair of superfluid asset type and denom pair
 */
export const expandOsmosisSuperfluidSuperfluidAsset = ([s_denom, xc_asset_type]) => ({
    denom: s_denom,
    asset_type: xc_asset_type >= 0 ? ProtoToJsonEnumOsmosisSuperfluidSuperfluidAssetType[xc_asset_type] : __UNDEFINED,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAssetMultiplierRequest}
 */
export const condenseOsmosisSuperfluidAssetMultiplierRequest = (g_msg) => encodeOsmosisSuperfluidAssetMultiplierRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AssetMultiplierRequest` -
 */
export const expandOsmosisSuperfluidAssetMultiplierRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAssetMultiplierResponse}
 */
export const condenseOsmosisSuperfluidAssetMultiplierResponse = (g_msg) => encodeOsmosisSuperfluidAssetMultiplierResponse(apply_opt(g_msg.osmo_equivalent_multiplier, condenseOsmosisSuperfluidOsmoEquivalentMultiplierRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AssetMultiplierResponse` -
 */
export const expandOsmosisSuperfluidAssetMultiplierResponse = ([a_osmo_equivalent_multiplier]) => ({
    osmo_equivalent_multiplier: a_osmo_equivalent_multiplier && expandOsmosisSuperfluidOsmoEquivalentMultiplierRecord(a_osmo_equivalent_multiplier),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidOsmoEquivalentMultiplierRecord}
 */
export const condenseOsmosisSuperfluidOsmoEquivalentMultiplierRecord = (g_msg) => encodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord(g_msg.epoch_number, g_msg.denom, g_msg.multiplier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.OsmoEquivalentMultiplierRecord` - The Osmo-Equivalent-Multiplier Record for epoch N refers to the osmo worth we treat an LP share as having, for all of epoch N. Eventually this is intended to be set as the Time-weighted-average-osmo-backing for the entire duration of epoch N-1. (Thereby locking whats in use for epoch N as based on the prior epochs rewards) However for now, this is not the TWAP but instead the spot price at the boundary. For different types of assets in the future, it could change.
 */
export const expandOsmosisSuperfluidOsmoEquivalentMultiplierRecord = ([sg_epoch_number, s_denom, s_multiplier]) => ({
    epoch_number: sg_epoch_number,
    denom: s_denom,
    multiplier: s_multiplier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo}
 */
export const condenseOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = (g_msg) => encodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo(g_msg.denom, g_msg.val_addr, g_msg.gauge_id, g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidIntermediaryAccountInfo` -
 */
export const expandOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = ([s_denom, sa_val, sg_gauge_id, sa_address]) => ({
    denom: s_denom,
    val_addr: sa_val,
    gauge_id: sg_gauge_id,
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAllIntermediaryAccountsRequest}
 */
export const condenseOsmosisSuperfluidAllIntermediaryAccountsRequest = (g_msg) => encodeOsmosisSuperfluidAllIntermediaryAccountsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AllIntermediaryAccountsRequest` -
 */
export const expandOsmosisSuperfluidAllIntermediaryAccountsRequest = ([a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidAllIntermediaryAccountsResponse}
 */
export const condenseOsmosisSuperfluidAllIntermediaryAccountsResponse = (g_msg) => encodeOsmosisSuperfluidAllIntermediaryAccountsResponse(map(g_msg.accounts, condenseOsmosisSuperfluidSuperfluidIntermediaryAccountInfo), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.AllIntermediaryAccountsResponse` -
 */
export const expandOsmosisSuperfluidAllIntermediaryAccountsResponse = ([a_accounts, a_pagination]) => ({
    accounts: a_accounts && map(a_accounts, expandOsmosisSuperfluidSuperfluidIntermediaryAccountInfo),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidConnectedIntermediaryAccountRequest}
 */
export const condenseOsmosisSuperfluidConnectedIntermediaryAccountRequest = (g_msg) => encodeOsmosisSuperfluidConnectedIntermediaryAccountRequest(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.ConnectedIntermediaryAccountRequest` -
 */
export const expandOsmosisSuperfluidConnectedIntermediaryAccountRequest = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidConnectedIntermediaryAccountResponse}
 */
export const condenseOsmosisSuperfluidConnectedIntermediaryAccountResponse = (g_msg) => encodeOsmosisSuperfluidConnectedIntermediaryAccountResponse(apply_opt(g_msg.account, condenseOsmosisSuperfluidSuperfluidIntermediaryAccountInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.ConnectedIntermediaryAccountResponse` -
 */
export const expandOsmosisSuperfluidConnectedIntermediaryAccountResponse = ([a_account]) => ({
    account: a_account && expandOsmosisSuperfluidSuperfluidIntermediaryAccountInfo(a_account),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest}
 */
export const condenseOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = (g_msg) => encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest` -
 */
export const expandOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse}
 */
export const condenseOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = (g_msg) => encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse(map(g_msg.assets, condenseOsmosisSuperfluidDelegations));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse` -
 */
export const expandOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = ([a_assets]) => ({
    assets: a_assets && map(a_assets, expandOsmosisSuperfluidDelegations),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidDelegations}
 */
export const condenseOsmosisSuperfluidDelegations = (g_msg) => encodeOsmosisSuperfluidDelegations(g_msg.val_addr, g_msg.amount_sfsd, g_msg.osmo_equivalent);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.Delegations` -
 */
export const expandOsmosisSuperfluidDelegations = ([sa_val, s_amount_sfsd, s_osmo_equivalent]) => ({
    val_addr: sa_val,
    amount_sfsd: s_amount_sfsd,
    osmo_equivalent: s_osmo_equivalent,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest}
 */
export const condenseOsmosisSuperfluidTotalSuperfluidDelegationsRequest = (g_msg) => encodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.TotalSuperfluidDelegationsRequest` -
 */
export const expandOsmosisSuperfluidTotalSuperfluidDelegationsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse}
 */
export const condenseOsmosisSuperfluidTotalSuperfluidDelegationsResponse = (g_msg) => encodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse(g_msg.total_delegations);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.TotalSuperfluidDelegationsResponse` -
 */
export const expandOsmosisSuperfluidTotalSuperfluidDelegationsResponse = ([s_total_delegations]) => ({
    total_delegations: s_total_delegations,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationAmountRequest}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationAmountRequest = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationAmountRequest(g_msg.delegator_address, g_msg.validator_address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationAmountRequest` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationAmountRequest = ([sa_delegator, sa_validator, s_denom]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationAmountResponse}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationAmountResponse = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationAmountResponse(map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationAmountResponse` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationAmountResponse = ([a_amount]) => ({
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse(map(g_msg.superfluid_delegation_records, condenseOsmosisSuperfluidSuperfluidDelegationRecord), map(g_msg.total_delegated_coins, slimify_coin), slimify_coin(g_msg.total_equivalent_staked_amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = ([a_superfluid_delegation_records, a_total_delegated_coins, a_total_equivalent_staked_amount]) => ({
    superfluid_delegation_records: a_superfluid_delegation_records && map(a_superfluid_delegation_records, expandOsmosisSuperfluidSuperfluidDelegationRecord),
    total_delegated_coins: a_total_delegated_coins && map(a_total_delegated_coins, expand_coin),
    total_equivalent_staked_amount: a_total_equivalent_staked_amount && expand_coin(a_total_equivalent_staked_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationRecord}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationRecord = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationRecord(g_msg.delegator_address, g_msg.validator_address, slimify_coin(g_msg.delegation_amount), slimify_coin(g_msg.equivalent_staked_amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationRecord` - a struct used to indicate superfluid delegations of an account in the state machine in a user friendly form.
 */
export const expandOsmosisSuperfluidSuperfluidDelegationRecord = ([sa_delegator, sa_validator, a_delegation_amount, a_equivalent_staked_amount]) => ({
    delegator_address: sa_delegator,
    validator_address: sa_validator,
    delegation_amount: a_delegation_amount && expand_coin(a_delegation_amount),
    equivalent_staked_amount: a_equivalent_staked_amount && expand_coin(a_equivalent_staked_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest}
 */
export const condenseOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = (g_msg) => encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest(g_msg.delegator_address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest` -
 */
export const expandOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = ([sa_delegator, s_denom]) => ({
    delegator_address: sa_delegator,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse}
 */
export const condenseOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = (g_msg) => encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse(map(g_msg.superfluid_delegation_records, condenseOsmosisSuperfluidSuperfluidDelegationRecord), map(g_msg.total_undelegated_coins, slimify_coin), map(g_msg.synthetic_locks, condenseOsmosisLockupSyntheticLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse` -
 */
export const expandOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = ([a_superfluid_delegation_records, a_total_undelegated_coins, a_synthetic_locks]) => ({
    superfluid_delegation_records: a_superfluid_delegation_records && map(a_superfluid_delegation_records, expandOsmosisSuperfluidSuperfluidDelegationRecord),
    total_undelegated_coins: a_total_undelegated_coins && map(a_total_undelegated_coins, expand_coin),
    synthetic_locks: a_synthetic_locks && map(a_synthetic_locks, expandOsmosisLockupSyntheticLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupSyntheticLock}
 */
export const condenseOsmosisLockupSyntheticLock = (g_msg) => encodeOsmosisLockupSyntheticLock(g_msg.underlying_lock_id, g_msg.synth_denom, parse_timestamp(g_msg.end_time), parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.SyntheticLock` - creating virtual lockup where new denom is combination of original denom and synthetic suffix. At the time of synthetic lockup creation and deletion, accumulation store is also being updated and on querier side, they can query as freely as native lockup.
 */
export const expandOsmosisLockupSyntheticLock = ([sg_underlying_lock_id, s_synth_denom, a_end_time, a_duration]) => ({
    underlying_lock_id: sg_underlying_lock_id,
    synth_denom: s_synth_denom,
    end_time: expand_timestamp(a_end_time),
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest(g_msg.validator_address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = ([sa_validator, s_denom]) => ({
    validator_address: sa_validator,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse}
 */
export const condenseOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = (g_msg) => encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse(map(g_msg.superfluid_delegation_records, condenseOsmosisSuperfluidSuperfluidDelegationRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse` -
 */
export const expandOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = ([a_superfluid_delegation_records]) => ({
    superfluid_delegation_records: a_superfluid_delegation_records && map(a_superfluid_delegation_records, expandOsmosisSuperfluidSuperfluidDelegationRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest}
 */
export const condenseOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = (g_msg) => encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest(g_msg.validator_address, g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest` -
 */
export const expandOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = ([sa_validator, s_denom]) => ({
    validator_address: sa_validator,
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse}
 */
export const condenseOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = (g_msg) => encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse(map(g_msg.total_delegated_coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse` -
 */
export const expandOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = ([a_total_delegated_coins]) => ({
    total_delegated_coins: a_total_delegated_coins && map(a_total_delegated_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest}
 */
export const condenseOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = (g_msg) => encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryTotalDelegationByDelegatorRequest` -
 */
export const expandOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse}
 */
export const condenseOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = (g_msg) => encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse(map(g_msg.superfluid_delegation_records, condenseOsmosisSuperfluidSuperfluidDelegationRecord), map(g_msg.delegation_response, condenseCosmosStakingV1beta1DelegationResponse), map(g_msg.total_delegated_coins, slimify_coin), slimify_coin(g_msg.total_equivalent_staked_amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryTotalDelegationByDelegatorResponse` -
 */
export const expandOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = ([a_superfluid_delegation_records, a_delegation_response, a_total_delegated_coins, a_total_equivalent_staked_amount]) => ({
    superfluid_delegation_records: a_superfluid_delegation_records && map(a_superfluid_delegation_records, expandOsmosisSuperfluidSuperfluidDelegationRecord),
    delegation_response: a_delegation_response && map(a_delegation_response, expandCosmosStakingV1beta1DelegationResponse),
    total_delegated_coins: a_total_delegated_coins && map(a_total_delegated_coins, expand_coin),
    total_equivalent_staked_amount: a_total_equivalent_staked_amount && expand_coin(a_total_equivalent_staked_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryUnpoolWhitelistRequest}
 */
export const condenseOsmosisSuperfluidQueryUnpoolWhitelistRequest = (g_msg) => encodeOsmosisSuperfluidQueryUnpoolWhitelistRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryUnpoolWhitelistRequest` -
 */
export const expandOsmosisSuperfluidQueryUnpoolWhitelistRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidQueryUnpoolWhitelistResponse}
 */
export const condenseOsmosisSuperfluidQueryUnpoolWhitelistResponse = (g_msg) => encodeOsmosisSuperfluidQueryUnpoolWhitelistResponse(g_msg.pool_ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.QueryUnpoolWhitelistResponse` -
 */
export const expandOsmosisSuperfluidQueryUnpoolWhitelistResponse = ([a_pool_ids]) => ({
    pool_ids: a_pool_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest}
 */
export const condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = (g_msg) => encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest` -
 */
export const expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse}
 */
export const condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = (g_msg) => encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse(map(g_msg.cl_pool_user_position_records, condenseOsmosisSuperfluidConcentratedPoolUserPositionRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse` -
 */
export const expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = ([a_cl_pool_user_position_records]) => ({
    cl_pool_user_position_records: a_cl_pool_user_position_records && map(a_cl_pool_user_position_records, expandOsmosisSuperfluidConcentratedPoolUserPositionRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidConcentratedPoolUserPositionRecord}
 */
export const condenseOsmosisSuperfluidConcentratedPoolUserPositionRecord = (g_msg) => encodeOsmosisSuperfluidConcentratedPoolUserPositionRecord(g_msg.validator_address, g_msg.position_id, g_msg.lock_id, apply_opt(g_msg.synthetic_lock, condenseOsmosisLockupSyntheticLock), slimify_coin(g_msg.delegation_amount), slimify_coin(g_msg.equivalent_staked_amount));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.ConcentratedPoolUserPositionRecord` -
 */
export const expandOsmosisSuperfluidConcentratedPoolUserPositionRecord = ([sa_validator, sg_position_id, sg_lock_id, a_synthetic_lock, a_delegation_amount, a_equivalent_staked_amount]) => ({
    validator_address: sa_validator,
    position_id: sg_position_id,
    lock_id: sg_lock_id,
    synthetic_lock: a_synthetic_lock && expandOsmosisLockupSyntheticLock(a_synthetic_lock),
    delegation_amount: a_delegation_amount && expand_coin(a_delegation_amount),
    equivalent_staked_amount: a_equivalent_staked_amount && expand_coin(a_equivalent_staked_amount),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest}
 */
export const condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = (g_msg) => encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest(g_msg.delegator_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest` -
 */
export const expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = ([sa_delegator]) => ({
    delegator_address: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse}
 */
export const condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = (g_msg) => encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse(map(g_msg.cl_pool_user_position_records, condenseOsmosisSuperfluidConcentratedPoolUserPositionRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse` -
 */
export const expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = ([a_cl_pool_user_position_records]) => ({
    cl_pool_user_position_records: a_cl_pool_user_position_records && map(a_cl_pool_user_position_records, expandOsmosisSuperfluidConcentratedPoolUserPositionRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal}
 */
export const condenseOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal = (g_msg) => encodeOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal(g_msg.title, g_msg.description, map(g_msg.assets, condenseOsmosisSuperfluidSuperfluidAsset));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal` - a gov Content type to update the superfluid assets
 */
export const expandOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal = ([s_title, s_description, a_assets]) => ({
    title: s_title,
    description: s_description,
    assets: a_assets && map(a_assets, expandOsmosisSuperfluidSuperfluidAsset),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal}
 */
export const condenseOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal = (g_msg) => encodeOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal(g_msg.title, g_msg.description, g_msg.superfluid_asset_denoms);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal` - a gov Content type to remove the superfluid assets by denom
 */
export const expandOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal = ([s_title, s_description, a_superfluid_asset_denoms]) => ({
    title: s_title,
    description: s_description,
    superfluid_asset_denoms: a_superfluid_asset_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal}
 */
export const condenseOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal = (g_msg) => encodeOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal(g_msg.title, g_msg.description, g_msg.ids, g_msg.is_overwrite);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal` - a gov Content type to update the allowed list of pool ids.
 */
export const expandOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal = ([s_title, s_description, a_ids, b_is_overwrite]) => ({
    title: s_title,
    description: s_description,
    ids: a_ids,
    is_overwrite: !!b_is_overwrite,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidGenesisState}
 */
export const condenseOsmosisSuperfluidGenesisState = (g_msg) => encodeOsmosisSuperfluidGenesisState(apply_opt(g_msg.params, condenseOsmosisSuperfluidParams), map(g_msg.superfluid_assets, condenseOsmosisSuperfluidSuperfluidAsset), map(g_msg.osmo_equivalent_multipliers, condenseOsmosisSuperfluidOsmoEquivalentMultiplierRecord), map(g_msg.intermediary_accounts, condenseOsmosisSuperfluidSuperfluidIntermediaryAccount), map(g_msg.intemediary_account_connections, condenseOsmosisSuperfluidLockIdIntermediaryAccountConnection));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.GenesisState` - defines the module's genesis state.
 */
export const expandOsmosisSuperfluidGenesisState = ([a_params, a_superfluid_assets, a_osmo_equivalent_multipliers, a_intermediary_accounts, a_intemediary_account_connections]) => ({
    params: a_params && expandOsmosisSuperfluidParams(a_params),
    superfluid_assets: a_superfluid_assets && map(a_superfluid_assets, expandOsmosisSuperfluidSuperfluidAsset),
    osmo_equivalent_multipliers: a_osmo_equivalent_multipliers && map(a_osmo_equivalent_multipliers, expandOsmosisSuperfluidOsmoEquivalentMultiplierRecord),
    intermediary_accounts: a_intermediary_accounts && map(a_intermediary_accounts, expandOsmosisSuperfluidSuperfluidIntermediaryAccount),
    intemediary_account_connections: a_intemediary_account_connections && map(a_intemediary_account_connections, expandOsmosisSuperfluidLockIdIntermediaryAccountConnection),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidSuperfluidIntermediaryAccount}
 */
export const condenseOsmosisSuperfluidSuperfluidIntermediaryAccount = (g_msg) => encodeOsmosisSuperfluidSuperfluidIntermediaryAccount(g_msg.denom, g_msg.val_addr, g_msg.gauge_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.SuperfluidIntermediaryAccount` - takes the role of intermediary between LP token and OSMO tokens for superfluid staking. The intermediary account is the actual account responsible for delegation, not the validator account itself.
 */
export const expandOsmosisSuperfluidSuperfluidIntermediaryAccount = ([s_denom, sa_val, sg_gauge_id]) => ({
    denom: s_denom,
    val_addr: sa_val,
    gauge_id: sg_gauge_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidLockIdIntermediaryAccountConnection}
 */
export const condenseOsmosisSuperfluidLockIdIntermediaryAccountConnection = (g_msg) => encodeOsmosisSuperfluidLockIdIntermediaryAccountConnection(g_msg.lock_id, g_msg.intermediary_account);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.LockIdIntermediaryAccountConnection` - a struct used to indicate the relationship between the underlying lock id and superfluid delegation done via lp shares.
 */
export const expandOsmosisSuperfluidLockIdIntermediaryAccountConnection = ([sg_lock_id, s_intermediary_account]) => ({
    lock_id: sg_lock_id,
    intermediary_account: s_intermediary_account,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisSuperfluidUnpoolWhitelistedPools}
 */
export const condenseOsmosisSuperfluidUnpoolWhitelistedPools = (g_msg) => encodeOsmosisSuperfluidUnpoolWhitelistedPools(g_msg.ids);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.superfluid.UnpoolWhitelistedPools` -
 */
export const expandOsmosisSuperfluidUnpoolWhitelistedPools = ([a_ids]) => ({
    ids: a_ids,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal}
 */
export const condenseOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal(g_msg.title, g_msg.description, safe_base64_to_bytes(g_msg.wasm_byte_code));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.UploadCosmWasmPoolCodeAndWhiteListProposal` - a gov Content type for uploading coswasm pool code and adding it to internal whitelist. Only the code ids created by this message are eligible for being x/cosmwasmpool pools.
 */
export const expandOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal = ([s_title, s_description, atu8_wasm_byte_code]) => ({
    title: s_title,
    description: s_description,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal}
 */
export const condenseOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal(g_msg.title, g_msg.description, g_msg.pool_ids, g_msg.new_code_id, safe_base64_to_bytes(g_msg.wasm_byte_code), safe_base64_to_bytes(g_msg.migrate_msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.MigratePoolContractsProposal` - a gov Content type for migrating  given pools to the new contract code and adding to internal whitelist if needed. It has two options to perform the migration: 1. If the codeID is non-zero, it will migrate the pool contracts to a given codeID assuming that it has already been uploaded. uploadByteCode must be empty in such a case. Fails if codeID does not exist. Fails if uploadByteCode is not empty. 2. If the codeID is zero, it will upload the given uploadByteCode and use the new resulting code id to migrate the pool to. Errors if uploadByteCode is empty or invalid. In both cases, if one of the pools specified by the given poolID does not exist, the proposal fails. The reason for having poolIDs be a slice of ids is to account for the potential need for emergency migration of all old code ids associated with particular pools to new code ids, or simply having the flexibility of migrating multiple older pool contracts to a new one at once when there is a release. poolD count to be submitted at once is gated by a governance paramets (20 at launch). The proposal fails if more. Note that 20 was chosen arbitrarily to have a constant bound on the number of pools migrated at once. This size will be configured by a module parameter so it can be changed by a constant.
 */
export const expandOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal = ([s_title, s_description, a_pool_ids, sg_new_code_id, atu8_wasm_byte_code, atu8_migrate_msg]) => ({
    title: s_title,
    description: s_description,
    pool_ids: a_pool_ids,
    new_code_id: sg_new_code_id,
    wasm_byte_code: safe_bytes_to_base64(atu8_wasm_byte_code),
    migrate_msg: safe_bytes_to_base64(atu8_migrate_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ParamsRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ParamsRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ParamsRequest` - =============================== ContractInfoByPoolId
 */
export const expandOsmosisCosmwasmpoolV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ParamsResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ParamsResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ParamsResponse(apply_opt(g_msg.params, condenseOsmosisCosmwasmpoolV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ParamsResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisCosmwasmpoolV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1Params}
 */
export const condenseOsmosisCosmwasmpoolV1beta1Params = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1Params(g_msg.code_id_whitelist, g_msg.pool_migration_limit);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.Params` -
 */
export const expandOsmosisCosmwasmpoolV1beta1Params = ([a_code_id_whitelists, sg_pool_migration_limit]) => ({
    code_id_whitelist: a_code_id_whitelists,
    pool_migration_limit: sg_pool_migration_limit,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1PoolsRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1PoolsRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1PoolsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.PoolsRequest` - =============================== Pools
 */
export const expandOsmosisCosmwasmpoolV1beta1PoolsRequest = ([, a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1PoolsResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1PoolsResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1PoolsResponse(map(g_msg.pools, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.PoolsResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1PoolsResponse = ([a_pools, a_pagination]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest` - =============================== ContractInfoByPoolId
 */
export const expandOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse(g_msg.contract_address, g_msg.code_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse = ([sa_contract, sg_code_id]) => ({
    contract_address: sa_contract,
    code_id: sg_code_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool}
 */
export const condenseOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool(g_msg.code_id, safe_base64_to_bytes(g_msg.instantiate_msg), g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPool` - ===================== MsgCreateCosmwasmPool
 */
export const expandOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool = ([sg_code_id, atu8_instantiate_msg, sa_sender]) => ({
    code_id: sg_code_id,
    instantiate_msg: safe_bytes_to_base64(atu8_instantiate_msg),
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPoolResponse` - Returns a unique poolID to identify the pool with.
 */
export const expandOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CosmWasmPool}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CosmWasmPool = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CosmWasmPool(g_msg.contract_address, g_msg.pool_id, g_msg.code_id, safe_base64_to_bytes(g_msg.instantiate_msg));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CosmWasmPool` - represents the data serialized into state for each CW pool. Note: CW Pool has 2 pool models: - CosmWasmPool which is a proto-generated store model used for serialization into state. - Pool struct that encapsulates the CosmWasmPool and wasmKeeper for calling the contract. CosmWasmPool implements the poolmanager.PoolI interface but it panics on all methods. The reason is that access to wasmKeeper is required to call the contract. Instead, all interactions and poolmanager.PoolI methods are to be performed on the Pool struct. The reason why we cannot have a Pool struct only is because it cannot be serialized into state due to having a non-serializable wasmKeeper field.
 */
export const expandOsmosisCosmwasmpoolV1beta1CosmWasmPool = ([sa_contract, sg_pool_id, sg_code_id, atu8_instantiate_msg]) => ({
    contract_address: sa_contract,
    pool_id: sg_pool_id,
    code_id: sg_code_id,
    instantiate_msg: safe_bytes_to_base64(atu8_instantiate_msg),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountIn}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountIn = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountIn(g_msg.sender, slimify_coin(g_msg.token_in), g_msg.token_out_denom, g_msg.token_out_min_amount, g_msg.swap_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountIn` - ===================== SwapExactAmountIn
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountIn = ([sa_sender, a_token_in, s_token_out_denom, s_token_out_min_amount, s_swap_fee]) => ({
    sender: sa_sender,
    token_in: a_token_in && expand_coin(a_token_in),
    token_out_denom: s_token_out_denom,
    token_out_min_amount: s_token_out_min_amount,
    swap_fee: s_swap_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg(apply_opt(g_msg.swap_exact_amount_in, condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountIn));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountInSudoMsg` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg = ([a_swap_exact_amount_in]) => ({
    swap_exact_amount_in: a_swap_exact_amount_in && expandOsmosisCosmwasmpoolV1beta1SwapExactAmountIn(a_swap_exact_amount_in),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountInSudoMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountOut}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOut = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOut(g_msg.sender, slimify_coin(g_msg.token_out), g_msg.token_in_denom, g_msg.token_in_max_amount, g_msg.swap_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountOut` - ===================== SwapExactAmountOut
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOut = ([sa_sender, a_token_out, s_token_in_denom, s_token_in_max_amount, s_swap_fee]) => ({
    sender: sa_sender,
    token_out: a_token_out && expand_coin(a_token_out),
    token_in_denom: s_token_in_denom,
    token_in_max_amount: s_token_in_max_amount,
    swap_fee: s_swap_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg(apply_opt(g_msg.swap_exact_amount_out, condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOut));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountOutSudoMsg` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg = ([a_swap_exact_amount_out]) => ({
    swap_exact_amount_out: a_swap_exact_amount_out && expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOut(a_swap_exact_amount_out),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SwapExactAmountOutSudoMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1EmptyRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1EmptyRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1EmptyRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.EmptyRequest` - ===================== JoinPoolExecuteMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1EmptyRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest(apply_opt(g_msg.join_pool, condenseOsmosisCosmwasmpoolV1beta1EmptyRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest` -
 */
export const expandOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest = ([a_join_pool]) => ({
    join_pool: a_join_pool && expandOsmosisCosmwasmpoolV1beta1EmptyRequest(a_join_pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest(apply_opt(g_msg.exit_pool, condenseOsmosisCosmwasmpoolV1beta1EmptyRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest` - ===================== ExitPoolExecuteMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest = ([a_exit_pool]) => ({
    exit_pool: a_exit_pool && expandOsmosisCosmwasmpoolV1beta1EmptyRequest(a_exit_pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1InstantiateMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1InstantiateMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1InstantiateMsg(g_msg.pool_asset_denoms);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.InstantiateMsg` - ===================== InstantiateMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1InstantiateMsg = ([a_pool_asset_denoms]) => ({
    pool_asset_denoms: a_pool_asset_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn(slimify_coin(g_msg.token_in), g_msg.token_out_denom, g_msg.swap_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn` - ===================== CalcOutAmtGivenIn
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn = ([a_token_in, s_token_out_denom, s_swap_fee]) => ({
    token_in: a_token_in && expand_coin(a_token_in),
    token_out_denom: s_token_out_denom,
    swap_fee: s_swap_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest(apply_opt(g_msg.calc_out_amt_given_in, condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest` -
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest = ([a_calc_out_amt_given_in]) => ({
    calc_out_amt_given_in: a_calc_out_amt_given_in && expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn(a_calc_out_amt_given_in),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse(slimify_coin(g_msg.token_out));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse = ([a_token_out]) => ({
    token_out: a_token_out && expand_coin(a_token_out),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut(slimify_coin(g_msg.token_out), g_msg.token_in_denom, g_msg.swap_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut` - ===================== CalcInAmtGivenOut
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut = ([a_token_out, s_token_in_denom, s_swap_fee]) => ({
    token_out: a_token_out && expand_coin(a_token_out),
    token_in_denom: s_token_in_denom,
    swap_fee: s_swap_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest(apply_opt(g_msg.calc_in_amt_given_out, condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest` -
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest = ([a_calc_in_amt_given_out]) => ({
    calc_in_amt_given_out: a_calc_in_amt_given_out && expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut(a_calc_in_amt_given_out),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse(slimify_coin(g_msg.token_in));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse = ([a_token_in]) => ({
    token_in: a_token_in && expand_coin(a_token_in),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg(apply_opt(g_msg.get_swap_fee, condenseOsmosisCosmwasmpoolV1beta1EmptyStruct));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg` - ===================== GetSwapFeeQueryMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg = ([a_get_swap_fee]) => ({
    get_swap_fee: a_get_swap_fee && expandOsmosisCosmwasmpoolV1beta1EmptyStruct(a_get_swap_fee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1EmptyStruct}
 */
export const condenseOsmosisCosmwasmpoolV1beta1EmptyStruct = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1EmptyStruct();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.EmptyStruct` - ===================== GetTotalPoolLiquidityQueryMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1EmptyStruct = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse(g_msg.swap_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse = ([, , s_swap_fee]) => ({
    swap_fee: s_swap_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SpotPrice}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SpotPrice = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SpotPrice(g_msg.quote_asset_denom, g_msg.base_asset_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SpotPrice` - ===================== SpotPriceQueryMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1SpotPrice = ([s_quote_asset_denom, s_base_asset_denom]) => ({
    quote_asset_denom: s_quote_asset_denom,
    base_asset_denom: s_base_asset_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg(apply_opt(g_msg.spot_price, condenseOsmosisCosmwasmpoolV1beta1SpotPrice));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg = ([a_spot_price]) => ({
    spot_price: a_spot_price && expandOsmosisCosmwasmpoolV1beta1SpotPrice(a_spot_price),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse(g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse = ([s_spot_price]) => ({
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg(apply_opt(g_msg.get_total_pool_liquidity, condenseOsmosisCosmwasmpoolV1beta1EmptyStruct));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg` -
 */
export const expandOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg = ([a_get_total_pool_liquidity]) => ({
    get_total_pool_liquidity: a_get_total_pool_liquidity && expandOsmosisCosmwasmpoolV1beta1EmptyStruct(a_get_total_pool_liquidity),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse(map(g_msg.total_pool_liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse = ([a_total_pool_liquidity]) => ({
    total_pool_liquidity: a_total_pool_liquidity && map(a_total_pool_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg(apply_opt(g_msg.get_total_shares, condenseOsmosisCosmwasmpoolV1beta1EmptyStruct));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg` - ===================== GetTotalSharesQueryMsg
 */
export const expandOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg = ([a_get_total_shares]) => ({
    get_total_shares: a_get_total_shares && expandOsmosisCosmwasmpoolV1beta1EmptyStruct(a_get_total_shares),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse(g_msg.total_shares);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse` -
 */
export const expandOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse = ([s_total_shares]) => ({
    total_shares: s_total_shares,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisCosmwasmpoolV1beta1GenesisState}
 */
export const condenseOsmosisCosmwasmpoolV1beta1GenesisState = (g_msg) => encodeOsmosisCosmwasmpoolV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisCosmwasmpoolV1beta1Params), map(g_msg.pools, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.cosmwasmpool.v1beta1.GenesisState` - defines the cosmwasmpool module's genesis state.
 */
export const expandOsmosisCosmwasmpoolV1beta1GenesisState = ([a_params, a_pools]) => ({
    params: a_params && expandOsmosisCosmwasmpoolV1beta1Params(a_params),
    pools: a_pools && map(a_pools, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCreatePosition}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCreatePosition = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCreatePosition(g_msg.pool_id, g_msg.sender, g_msg.lower_tick, g_msg.upper_tick, map(g_msg.tokens_provided, slimify_coin), g_msg.token_min_amount0, g_msg.token_min_amount1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCreatePosition` - ===================== MsgCreatePosition
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCreatePosition = ([sg_pool_id, sa_sender, sg_lower_tick, sg_upper_tick, a_tokens_provided, s_token_min_amount0, s_token_min_amount1]) => ({
    pool_id: sg_pool_id,
    sender: sa_sender,
    lower_tick: sg_lower_tick,
    upper_tick: sg_upper_tick,
    tokens_provided: a_tokens_provided && map(a_tokens_provided, expand_coin),
    token_min_amount0: s_token_min_amount0,
    token_min_amount1: s_token_min_amount1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse(g_msg.position_id, g_msg.amount0, g_msg.amount1, g_msg.liquidity_created, g_msg.lower_tick, g_msg.upper_tick);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse = ([sg_position_id, s_amount0, s_amount1, , s_liquidity_created, sg_lower_tick, sg_upper_tick]) => ({
    position_id: sg_position_id,
    amount0: s_amount0,
    amount1: s_amount1,
    liquidity_created: s_liquidity_created,
    lower_tick: sg_lower_tick,
    upper_tick: sg_upper_tick,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgAddToPosition}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgAddToPosition = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgAddToPosition(g_msg.position_id, g_msg.sender, g_msg.amount0, g_msg.amount1, g_msg.token_min_amount0, g_msg.token_min_amount1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgAddToPosition` - ===================== MsgAddToPosition
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgAddToPosition = ([sg_position_id, sa_sender, s_amount0, s_amount1, s_token_min_amount0, s_token_min_amount1]) => ({
    position_id: sg_position_id,
    sender: sa_sender,
    amount0: s_amount0,
    amount1: s_amount1,
    token_min_amount0: s_token_min_amount0,
    token_min_amount1: s_token_min_amount1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse(g_msg.position_id, g_msg.amount0, g_msg.amount1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgAddToPositionResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse = ([sg_position_id, s_amount0, s_amount1]) => ({
    position_id: sg_position_id,
    amount0: s_amount0,
    amount1: s_amount1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition(g_msg.position_id, g_msg.sender, g_msg.liquidity_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition` - ===================== MsgWithdrawPosition
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition = ([sg_position_id, sa_sender, s_liquidity_amount]) => ({
    position_id: sg_position_id,
    sender: sa_sender,
    liquidity_amount: s_liquidity_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse(g_msg.amount0, g_msg.amount1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse = ([s_amount0, s_amount1]) => ({
    amount0: s_amount0,
    amount1: s_amount1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards(g_msg.position_ids, g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewards` - ===================== MsgCollectSpreadRewards
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards = ([a_position_ids, sa_sender]) => ({
    position_ids: a_position_ids,
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse(map(g_msg.collected_spread_rewards, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewardsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse = ([a_collected_spread_rewards]) => ({
    collected_spread_rewards: a_collected_spread_rewards && map(a_collected_spread_rewards, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCollectIncentives}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCollectIncentives = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentives(g_msg.position_ids, g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives` - ===================== MsgCollectIncentives
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCollectIncentives = ([a_position_ids, sa_sender]) => ({
    position_ids: a_position_ids,
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse(map(g_msg.collected_incentives, slimify_coin), map(g_msg.forfeited_incentives, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse = ([a_collected_incentives, a_forfeited_incentives]) => ({
    collected_incentives: a_collected_incentives && map(a_collected_incentives, expand_coin),
    forfeited_incentives: a_forfeited_incentives && map(a_forfeited_incentives, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions(g_msg.position_ids, g_msg.sender);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions` - ===================== MsgFungifyChargedPositions
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions = ([a_position_ids, sa_sender]) => ({
    position_ids: a_position_ids,
    sender: sa_sender,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse(g_msg.new_position_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse = ([sg_new_position_id]) => ({
    new_position_id: sg_new_position_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgTransferPositions}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgTransferPositions = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgTransferPositions(g_msg.position_ids, g_msg.sender, g_msg.new_owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgTransferPositions` - ===================== MsgTransferPositions
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgTransferPositions = ([a_position_ids, sa_sender, sa_new_owner]) => ({
    position_ids: a_position_ids,
    sender: sa_sender,
    new_owner: sa_new_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.MsgTransferPositionsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1TickInfo}
 */
export const condenseOsmosisConcentratedliquidityV1beta1TickInfo = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1TickInfo(g_msg.liquidity_gross, g_msg.liquidity_net, map(g_msg.spread_reward_growth_opposite_direction_of_last_traversal, condenseCosmosBaseV1beta1DecCoin), apply_opt(g_msg.uptime_trackers, condenseOsmosisConcentratedliquidityV1beta1UptimeTrackers));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.TickInfo` -
 */
export const expandOsmosisConcentratedliquidityV1beta1TickInfo = ([s_liquidity_gross, s_liquidity_net, a_spread_reward_growth_opposite_direction_of_last_traversal, a_uptime_trackers]) => ({
    liquidity_gross: s_liquidity_gross,
    liquidity_net: s_liquidity_net,
    spread_reward_growth_opposite_direction_of_last_traversal: a_spread_reward_growth_opposite_direction_of_last_traversal && map(a_spread_reward_growth_opposite_direction_of_last_traversal, expandCosmosBaseV1beta1DecCoin),
    uptime_trackers: a_uptime_trackers && expandOsmosisConcentratedliquidityV1beta1UptimeTrackers(a_uptime_trackers),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UptimeTrackers}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UptimeTrackers = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UptimeTrackers(map(g_msg.list, condenseOsmosisConcentratedliquidityV1beta1UptimeTracker));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UptimeTrackers` -
 */
export const expandOsmosisConcentratedliquidityV1beta1UptimeTrackers = ([a_list]) => ({
    list: a_list && map(a_list, expandOsmosisConcentratedliquidityV1beta1UptimeTracker),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UptimeTracker}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UptimeTracker = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UptimeTracker(map(g_msg.uptime_growth_outside, condenseCosmosBaseV1beta1DecCoin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UptimeTracker` -
 */
export const expandOsmosisConcentratedliquidityV1beta1UptimeTracker = ([a_uptime_growth_outside]) => ({
    uptime_growth_outside: a_uptime_growth_outside && map(a_uptime_growth_outside, expandCosmosBaseV1beta1DecCoin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal}
 */
export const condenseOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal(g_msg.title, g_msg.description, map(g_msg.pool_records, condenseOsmosisConcentratedliquidityV1beta1PoolRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal` - a gov Content type for creating concentrated liquidity pools. If a CreateConcentratedLiquidityPoolsProposal passes, the pools are created via pool manager module account.
 */
export const expandOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal = ([s_title, s_description, a_pool_records]) => ({
    title: s_title,
    description: s_description,
    pool_records: a_pool_records && map(a_pool_records, expandOsmosisConcentratedliquidityV1beta1PoolRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolRecord}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolRecord = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolRecord(g_msg.denom0, g_msg.denom1, g_msg.tick_spacing, g_msg.spread_factor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolRecord` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolRecord = ([s_denom0, s_denom1, sg_tick_spacing, , s_spread_factor]) => ({
    denom0: s_denom0,
    denom1: s_denom1,
    tick_spacing: sg_tick_spacing,
    spread_factor: s_spread_factor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal}
 */
export const condenseOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal(g_msg.title, g_msg.description, map(g_msg.pool_id_to_tick_spacing_records, condenseOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal` - a gov Content type for proposing a tick spacing decrease for a pool. The proposal will fail if one of the pools do not exist, or if the new tick spacing is not less than the current tick spacing.
 */
export const expandOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal = ([s_title, s_description, a_pool_id_to_tick_spacing_records]) => ({
    title: s_title,
    description: s_description,
    pool_id_to_tick_spacing_records: a_pool_id_to_tick_spacing_records && map(a_pool_id_to_tick_spacing_records, expandOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord(g_msg.pool_id, g_msg.new_tick_spacing);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord` - a struct that contains a pool id to new tick spacing pair.
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord = ([sg_pool_id, sg_new_tick_spacing]) => ({
    pool_id: sg_pool_id,
    new_tick_spacing: sg_new_tick_spacing,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1IncentiveRecord}
 */
export const condenseOsmosisConcentratedliquidityV1beta1IncentiveRecord = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1IncentiveRecord(g_msg.incentive_id, g_msg.pool_id, apply_opt(g_msg.incentive_record_body, condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordBody), parse_duration(g_msg.min_uptime));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.IncentiveRecord` - the high-level struct we use to deal with an independent incentive being distributed on a pool. Note that PoolId, Denom, and MinUptime are included in the key so we avoid storing them in state, hence the distinction between IncentiveRecord and IncentiveRecordBody.
 */
export const expandOsmosisConcentratedliquidityV1beta1IncentiveRecord = ([sg_incentive_id, sg_pool_id, , a_incentive_record_body, a_min_uptime]) => ({
    incentive_id: sg_incentive_id,
    pool_id: sg_pool_id,
    incentive_record_body: a_incentive_record_body && expandOsmosisConcentratedliquidityV1beta1IncentiveRecordBody(a_incentive_record_body),
    min_uptime: expand_duration(a_min_uptime),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1IncentiveRecordBody}
 */
export const condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordBody = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordBody(apply_opt(g_msg.remaining_coin, condenseCosmosBaseV1beta1DecCoin), g_msg.emission_rate, parse_timestamp(g_msg.start_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.IncentiveRecordBody` - represents the body stored in state for each individual record.
 */
export const expandOsmosisConcentratedliquidityV1beta1IncentiveRecordBody = ([a_remaining_coin, s_emission_rate, a_start_time]) => ({
    remaining_coin: a_remaining_coin && expandCosmosBaseV1beta1DecCoin(a_remaining_coin),
    emission_rate: s_emission_rate,
    start_time: expand_timestamp(a_start_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1Pool}
 */
export const condenseOsmosisConcentratedliquidityV1beta1Pool = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1Pool(g_msg.address, g_msg.incentives_address, g_msg.spread_rewards_address, g_msg.id, g_msg.current_tick_liquidity, g_msg.token0, g_msg.token1, g_msg.current_sqrt_price, g_msg.current_tick, g_msg.tick_spacing, g_msg.exponent_at_price_one, g_msg.spread_factor, parse_timestamp(g_msg.last_liquidity_update));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.Pool` -
 */
export const expandOsmosisConcentratedliquidityV1beta1Pool = ([sa_address, sa_incentives, sa_spread_rewards, sg_id, s_current_tick_liquidity, s_token0, s_token1, s_current_sqrt_price, sg_current_tick, sg_tick_spacing, sg_exponent_at_price_one, s_spread_factor, a_last_liquidity_update]) => ({
    address: sa_address,
    incentives_address: sa_incentives,
    spread_rewards_address: sa_spread_rewards,
    id: sg_id,
    current_tick_liquidity: s_current_tick_liquidity,
    token0: s_token0,
    token1: s_token1,
    current_sqrt_price: s_current_sqrt_price,
    current_tick: sg_current_tick,
    tick_spacing: sg_tick_spacing,
    exponent_at_price_one: sg_exponent_at_price_one,
    spread_factor: s_spread_factor,
    last_liquidity_update: expand_timestamp(a_last_liquidity_update),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1Position}
 */
export const condenseOsmosisConcentratedliquidityV1beta1Position = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1Position(g_msg.position_id, g_msg.address, g_msg.pool_id, g_msg.lower_tick, g_msg.upper_tick, parse_timestamp(g_msg.join_time), g_msg.liquidity);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.Position` - contains position's id, address, pool id, lower tick, upper tick join time, and liquidity.
 */
export const expandOsmosisConcentratedliquidityV1beta1Position = ([sg_position_id, sa_address, sg_pool_id, sg_lower_tick, sg_upper_tick, a_join_time, s_liquidity]) => ({
    position_id: sg_position_id,
    address: sa_address,
    pool_id: sg_pool_id,
    lower_tick: sg_lower_tick,
    upper_tick: sg_upper_tick,
    join_time: expand_timestamp(a_join_time),
    liquidity: s_liquidity,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1FullPositionBreakdown}
 */
export const condenseOsmosisConcentratedliquidityV1beta1FullPositionBreakdown = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1FullPositionBreakdown(apply_opt(g_msg.position, condenseOsmosisConcentratedliquidityV1beta1Position), slimify_coin(g_msg.asset0), slimify_coin(g_msg.asset1), map(g_msg.claimable_spread_rewards, slimify_coin), map(g_msg.claimable_incentives, slimify_coin), map(g_msg.forfeited_incentives, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.FullPositionBreakdown` - returns: - the position itself - the amount the position translates in terms of asset0 and asset1 - the amount of claimable fees - the amount of claimable incentives - the amount of incentives that would be forfeited if the position was closed now
 */
export const expandOsmosisConcentratedliquidityV1beta1FullPositionBreakdown = ([a_position, a_asset0, a_asset1, a_claimable_spread_rewards, a_claimable_incentives, a_forfeited_incentives]) => ({
    position: a_position && expandOsmosisConcentratedliquidityV1beta1Position(a_position),
    asset0: a_asset0 && expand_coin(a_asset0),
    asset1: a_asset1 && expand_coin(a_asset1),
    claimable_spread_rewards: a_claimable_spread_rewards && map(a_claimable_spread_rewards, expand_coin),
    claimable_incentives: a_claimable_incentives && map(a_claimable_incentives, expand_coin),
    forfeited_incentives: a_forfeited_incentives && map(a_forfeited_incentives, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock(apply_opt(g_msg.position, condenseOsmosisConcentratedliquidityV1beta1Position), apply_opt(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PositionWithPeriodLock` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock = ([a_position, a_locks]) => ({
    position: a_position && expandOsmosisConcentratedliquidityV1beta1Position(a_position),
    locks: a_locks && expandOsmosisLockupPeriodLock(a_locks),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupPeriodLock}
 */
export const condenseOsmosisLockupPeriodLock = (g_msg) => encodeOsmosisLockupPeriodLock(g_msg.ID, g_msg.owner, parse_duration(g_msg.duration), parse_timestamp(g_msg.end_time), map(g_msg.coins, slimify_coin), g_msg.reward_receiver_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.PeriodLock` - a single lock unit by period defined by the x/lockup module. It's a record of a locked coin at a specific time. It stores owner, duration, unlock time and the number of coins locked. A state of a period lock is created upon lock creation, and deleted once the lock has been matured after the `duration` has passed since unbonding started.
 */
export const expandOsmosisLockupPeriodLock = ([sg_ID, sa_owner, a_duration, a_end_time, a_coins, sa_reward_receiver]) => ({
    ID: sg_ID,
    owner: sa_owner,
    duration: expand_duration(a_duration),
    end_time: expand_timestamp(a_end_time),
    coins: a_coins && map(a_coins, expand_coin),
    reward_receiver_address: sa_reward_receiver,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool}
 */
export const condenseOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool = (g_msg) => encodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool(g_msg.sender, g_msg.denom0, g_msg.denom1, g_msg.tick_spacing, g_msg.spread_factor);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool` - ===================== MsgCreateConcentratedPool
 */
export const expandOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool = ([sa_sender, s_denom0, s_denom1, sg_tick_spacing, s_spread_factor]) => ({
    sender: sa_sender,
    denom0: s_denom0,
    denom1: s_denom1,
    tick_spacing: sg_tick_spacing,
    spread_factor: s_spread_factor,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse}
 */
export const condenseOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse = (g_msg) => encodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse` - Returns a unique poolID to identify the pool with.
 */
export const expandOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UserPositionsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UserPositionsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UserPositionsRequest(g_msg.address, g_msg.pool_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UserPositionsRequest` - =============================== UserPositions
 */
export const expandOsmosisConcentratedliquidityV1beta1UserPositionsRequest = ([sa_address, sg_pool_id, a_pagination]) => ({
    address: sa_address,
    pool_id: sg_pool_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UserPositionsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UserPositionsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UserPositionsResponse(map(g_msg.positions, condenseOsmosisConcentratedliquidityV1beta1FullPositionBreakdown), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UserPositionsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1UserPositionsResponse = ([a_positions, a_pagination]) => ({
    positions: a_positions && map(a_positions, expandOsmosisConcentratedliquidityV1beta1FullPositionBreakdown),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PositionByIdRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PositionByIdRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PositionByIdRequest(g_msg.position_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PositionByIdRequest` - =============================== PositionById
 */
export const expandOsmosisConcentratedliquidityV1beta1PositionByIdRequest = ([sg_position_id]) => ({
    position_id: sg_position_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PositionByIdResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PositionByIdResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PositionByIdResponse(apply_opt(g_msg.position, condenseOsmosisConcentratedliquidityV1beta1FullPositionBreakdown));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PositionByIdResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PositionByIdResponse = ([a_position]) => ({
    position: a_position && expandOsmosisConcentratedliquidityV1beta1FullPositionBreakdown(a_position),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolsRequest(apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolsRequest` - =============================== Pools
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolsRequest = ([, a_pagination]) => ({
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolsResponse(map(g_msg.pools, condenseJsonAny), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolsResponse = ([a_pools, a_pagination]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ParamsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ParamsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ParamsRequest` - =============================== ModuleParams
 */
export const expandOsmosisConcentratedliquidityV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ParamsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ParamsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ParamsResponse(apply_opt(g_msg.params, condenseOsmosisConcentratedliquidityParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ParamsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisConcentratedliquidityParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityParams}
 */
export const condenseOsmosisConcentratedliquidityParams = (g_msg) => encodeOsmosisConcentratedliquidityParams(g_msg.authorized_tick_spacing, g_msg.authorized_spread_factors, g_msg.balancer_shares_reward_discount, g_msg.authorized_quote_denoms, map(g_msg.authorized_uptimes, parse_duration), g_msg.is_permissionless_pool_creation_enabled, g_msg.unrestricted_pool_creator_whitelist);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.Params` -
 */
export const expandOsmosisConcentratedliquidityParams = ([a_authorized_tick_spacings, a_authorized_spread_factors, s_balancer_shares_reward_discount, a_authorized_quote_denoms, a_authorized_uptimes, b_is_permissionless_pool_creation_enabled, a_unrestricted_pool_creator_whitelists]) => ({
    authorized_tick_spacing: a_authorized_tick_spacings,
    authorized_spread_factors: a_authorized_spread_factors,
    balancer_shares_reward_discount: s_balancer_shares_reward_discount,
    authorized_quote_denoms: a_authorized_quote_denoms,
    authorized_uptimes: map(a_authorized_uptimes, expand_duration),
    is_permissionless_pool_creation_enabled: !!b_is_permissionless_pool_creation_enabled,
    unrestricted_pool_creator_whitelist: a_unrestricted_pool_creator_whitelists,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1TickLiquidityNet}
 */
export const condenseOsmosisConcentratedliquidityV1beta1TickLiquidityNet = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1TickLiquidityNet(g_msg.liquidity_net, g_msg.tick_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.TickLiquidityNet` -
 */
export const expandOsmosisConcentratedliquidityV1beta1TickLiquidityNet = ([s_liquidity_net, sg_tick_index]) => ({
    liquidity_net: s_liquidity_net,
    tick_index: sg_tick_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange}
 */
export const condenseOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange(g_msg.liquidity_amount, g_msg.lower_tick, g_msg.upper_tick);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange` -
 */
export const expandOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange = ([s_liquidity_amount, sg_lower_tick, sg_upper_tick]) => ({
    liquidity_amount: s_liquidity_amount,
    lower_tick: sg_lower_tick,
    upper_tick: sg_upper_tick,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest(g_msg.pool_id, g_msg.token_in, g_msg.start_tick, g_msg.use_cur_tick, g_msg.bound_tick, g_msg.use_no_bound);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest` - =============================== LiquidityNetInDirection
 */
export const expandOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest = ([sg_pool_id, s_token_in, sg_start_tick, b_use_cur_tick, sg_bound_tick, b_use_no_bound]) => ({
    pool_id: sg_pool_id,
    token_in: s_token_in,
    start_tick: sg_start_tick,
    use_cur_tick: !!b_use_cur_tick,
    bound_tick: sg_bound_tick,
    use_no_bound: !!b_use_no_bound,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse(map(g_msg.liquidity_depths, condenseOsmosisConcentratedliquidityV1beta1TickLiquidityNet), g_msg.current_tick, g_msg.current_liquidity, g_msg.current_sqrt_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse = ([a_liquidity_depths, sg_current_tick, s_current_liquidity, s_current_sqrt_price]) => ({
    liquidity_depths: a_liquidity_depths && map(a_liquidity_depths, expandOsmosisConcentratedliquidityV1beta1TickLiquidityNet),
    current_tick: sg_current_tick,
    current_liquidity: s_current_liquidity,
    current_sqrt_price: s_current_sqrt_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest` - =============================== LiquidityPerTickRange
 */
export const expandOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse(map(g_msg.liquidity, condenseOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse = ([a_liquidity]) => ({
    liquidity: a_liquidity && map(a_liquidity, expandOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest(g_msg.position_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest` - ===================== QueryClaimableSpreadRewards
 */
export const expandOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest = ([sg_position_id]) => ({
    position_id: sg_position_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse(map(g_msg.claimable_spread_rewards, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse = ([a_claimable_spread_rewards]) => ({
    claimable_spread_rewards: a_claimable_spread_rewards && map(a_claimable_spread_rewards, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest(g_msg.position_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest` - ===================== QueryClaimableIncentives
 */
export const expandOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest = ([sg_position_id]) => ({
    position_id: sg_position_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse(map(g_msg.claimable_incentives, slimify_coin), map(g_msg.forfeited_incentives, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse = ([a_claimable_incentives, a_forfeited_incentives]) => ({
    claimable_incentives: a_claimable_incentives && map(a_claimable_incentives, expand_coin),
    forfeited_incentives: a_forfeited_incentives && map(a_forfeited_incentives, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest` - ===================== QueryPoolAccumulatorRewards
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse(map(g_msg.spread_reward_growth_global, condenseCosmosBaseV1beta1DecCoin), map(g_msg.uptime_growth_global, condenseOsmosisConcentratedliquidityV1beta1UptimeTracker));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse = ([a_spread_reward_growth_global, a_uptime_growth_global]) => ({
    spread_reward_growth_global: a_spread_reward_growth_global && map(a_spread_reward_growth_global, expandCosmosBaseV1beta1DecCoin),
    uptime_growth_global: a_uptime_growth_global && map(a_uptime_growth_global, expandOsmosisConcentratedliquidityV1beta1UptimeTracker),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest(g_msg.pool_id, g_msg.tick_index);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest` - ===================== QueryTickAccumulatorTrackers
 */
export const expandOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest = ([sg_pool_id, sg_tick_index]) => ({
    pool_id: sg_pool_id,
    tick_index: sg_tick_index,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse(map(g_msg.spread_reward_growth_opposite_direction_of_last_traversal, condenseCosmosBaseV1beta1DecCoin), map(g_msg.uptime_trackers, condenseOsmosisConcentratedliquidityV1beta1UptimeTracker));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse = ([a_spread_reward_growth_opposite_direction_of_last_traversal, a_uptime_trackers]) => ({
    spread_reward_growth_opposite_direction_of_last_traversal: a_spread_reward_growth_opposite_direction_of_last_traversal && map(a_spread_reward_growth_opposite_direction_of_last_traversal, expandCosmosBaseV1beta1DecCoin),
    uptime_trackers: a_uptime_trackers && map(a_uptime_trackers, expandOsmosisConcentratedliquidityV1beta1UptimeTracker),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest(g_msg.pool_id, apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageRequest));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest` - ===================== QueryIncentiveRecords
 */
export const expandOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest = ([sg_pool_id, a_pagination]) => ({
    pool_id: sg_pool_id,
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageRequest(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse(map(g_msg.incentive_records, condenseOsmosisConcentratedliquidityV1beta1IncentiveRecord), apply_opt(g_msg.pagination, condenseCosmosBaseQueryV1beta1PageResponse));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse = ([a_incentive_records, a_pagination]) => ({
    incentive_records: a_incentive_records && map(a_incentive_records, expandOsmosisConcentratedliquidityV1beta1IncentiveRecord),
    pagination: a_pagination && expandCosmosBaseQueryV1beta1PageResponse(a_pagination),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest(g_msg.concentrated_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest` - =============================== CFMMPoolIdLinkFromConcentratedPoolId
 */
export const expandOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest = ([sg_concentrated_pool_id]) => ({
    concentrated_pool_id: sg_concentrated_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse(g_msg.cfmm_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse = ([sg_cfmm_pool_id]) => ({
    cfmm_pool_id: sg_cfmm_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest` - =============================== UserUnbondingPositions
 */
export const expandOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse(map(g_msg.positions_with_period_lock, condenseOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse = ([a_positions_with_period_lock]) => ({
    positions_with_period_lock: a_positions_with_period_lock && map(a_positions_with_period_lock, expandOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest` - =============================== GetTotalLiquidity
 */
export const expandOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse(map(g_msg.total_liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse = ([a_total_liquidity]) => ({
    total_liquidity: a_total_liquidity && map(a_total_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest}
 */
export const condenseOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest(g_msg.pool_id, g_msg.token_in_denom, g_msg.num_next_initialized_ticks);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest` - =============================== NumNextInitializedTicks
 */
export const expandOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest = ([sg_pool_id, s_token_in_denom, sg_num_next_initialized_ticks]) => ({
    pool_id: sg_pool_id,
    token_in_denom: s_token_in_denom,
    num_next_initialized_ticks: sg_num_next_initialized_ticks,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse}
 */
export const condenseOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse(map(g_msg.liquidity_depths, condenseOsmosisConcentratedliquidityV1beta1TickLiquidityNet), g_msg.current_tick, g_msg.current_liquidity);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse` -
 */
export const expandOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse = ([a_liquidity_depths, sg_current_tick, s_current_liquidity]) => ({
    liquidity_depths: a_liquidity_depths && map(a_liquidity_depths, expandOsmosisConcentratedliquidityV1beta1TickLiquidityNet),
    current_tick: sg_current_tick,
    current_liquidity: s_current_liquidity,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1FullTick}
 */
export const condenseOsmosisConcentratedliquidityV1beta1FullTick = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1FullTick(g_msg.pool_id, g_msg.tick_index, apply_opt(g_msg.info, condenseOsmosisConcentratedliquidityV1beta1TickInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.FullTick` - contains tick index and pool id along with other tick model information.
 */
export const expandOsmosisConcentratedliquidityV1beta1FullTick = ([sg_pool_id, sg_tick_index, a_info]) => ({
    pool_id: sg_pool_id,
    tick_index: sg_tick_index,
    info: a_info && expandOsmosisConcentratedliquidityV1beta1TickInfo(a_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PoolData}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PoolData = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PoolData(condenseJsonAny(g_msg.pool), map(g_msg.ticks, condenseOsmosisConcentratedliquidityV1beta1FullTick), apply_opt(g_msg.spread_reward_accumulator, condenseOsmosisConcentratedliquidityV1beta1AccumObject), map(g_msg.incentives_accumulators, condenseOsmosisConcentratedliquidityV1beta1AccumObject), map(g_msg.incentive_records, condenseOsmosisConcentratedliquidityV1beta1IncentiveRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PoolData` - represents a serialized pool along with its ticks for genesis state.
 */
export const expandOsmosisConcentratedliquidityV1beta1PoolData = ([a_pool, a_ticks, a_spread_reward_accumulator, a_incentives_accumulators, a_incentive_records]) => ({
    pool: a_pool && expandJsonAny(a_pool),
    ticks: a_ticks && map(a_ticks, expandOsmosisConcentratedliquidityV1beta1FullTick),
    spread_reward_accumulator: a_spread_reward_accumulator && expandOsmosisConcentratedliquidityV1beta1AccumObject(a_spread_reward_accumulator),
    incentives_accumulators: a_incentives_accumulators && map(a_incentives_accumulators, expandOsmosisConcentratedliquidityV1beta1AccumObject),
    incentive_records: a_incentive_records && map(a_incentive_records, expandOsmosisConcentratedliquidityV1beta1IncentiveRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1AccumObject}
 */
export const condenseOsmosisConcentratedliquidityV1beta1AccumObject = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1AccumObject(g_msg.name, apply_opt(g_msg.accum_content, condenseOsmosisAccumV1beta1AccumulatorContent));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.AccumObject` -
 */
export const expandOsmosisConcentratedliquidityV1beta1AccumObject = ([s_name, a_accum_content]) => ({
    name: s_name,
    accum_content: a_accum_content && expandOsmosisAccumV1beta1AccumulatorContent(a_accum_content),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1PositionData}
 */
export const condenseOsmosisConcentratedliquidityV1beta1PositionData = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1PositionData(apply_opt(g_msg.position, condenseOsmosisConcentratedliquidityV1beta1Position), g_msg.lock_id, apply_opt(g_msg.spread_reward_accum_record, condenseOsmosisAccumV1beta1Record), map(g_msg.uptime_accum_records, condenseOsmosisAccumV1beta1Record));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.PositionData` -
 */
export const expandOsmosisConcentratedliquidityV1beta1PositionData = ([a_position, sg_lock_id, a_spread_reward_accum_record, a_uptime_accum_records]) => ({
    position: a_position && expandOsmosisConcentratedliquidityV1beta1Position(a_position),
    lock_id: sg_lock_id,
    spread_reward_accum_record: a_spread_reward_accum_record && expandOsmosisAccumV1beta1Record(a_spread_reward_accum_record),
    uptime_accum_records: a_uptime_accum_records && map(a_uptime_accum_records, expandOsmosisAccumV1beta1Record),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisConcentratedliquidityV1beta1GenesisState}
 */
export const condenseOsmosisConcentratedliquidityV1beta1GenesisState = (g_msg) => encodeOsmosisConcentratedliquidityV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisConcentratedliquidityParams), map(g_msg.pool_data, condenseOsmosisConcentratedliquidityV1beta1PoolData), map(g_msg.position_data, condenseOsmosisConcentratedliquidityV1beta1PositionData), g_msg.next_position_id, g_msg.next_incentive_record_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.concentratedliquidity.v1beta1.GenesisState` - defines the concentrated liquidity module's genesis state.
 */
export const expandOsmosisConcentratedliquidityV1beta1GenesisState = ([a_params, a_pool_data, a_position_data, sg_next_position_id, sg_next_incentive_record_id]) => ({
    params: a_params && expandOsmosisConcentratedliquidityParams(a_params),
    pool_data: a_pool_data && map(a_pool_data, expandOsmosisConcentratedliquidityV1beta1PoolData),
    position_data: a_position_data && map(a_position_data, expandOsmosisConcentratedliquidityV1beta1PositionData),
    next_position_id: sg_next_position_id,
    next_incentive_record_id: sg_next_incentive_record_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisStoreV1beta1Node}
 */
export const condenseOsmosisStoreV1beta1Node = (g_msg) => encodeOsmosisStoreV1beta1Node(map(g_msg.children, condenseOsmosisStoreV1beta1Child));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.store.v1beta1.Node` -
 */
export const expandOsmosisStoreV1beta1Node = ([a_children]) => ({
    children: a_children && map(a_children, expandOsmosisStoreV1beta1Child),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisStoreV1beta1Child}
 */
export const condenseOsmosisStoreV1beta1Child = (g_msg) => encodeOsmosisStoreV1beta1Child(safe_base64_to_bytes(g_msg.index), g_msg.accumulation);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.store.v1beta1.Child` -
 */
export const expandOsmosisStoreV1beta1Child = ([atu8_index, s_accumulation]) => ({
    index: safe_bytes_to_base64(atu8_index),
    accumulation: s_accumulation,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisStoreV1beta1Leaf}
 */
export const condenseOsmosisStoreV1beta1Leaf = (g_msg) => encodeOsmosisStoreV1beta1Leaf(apply_opt(g_msg.leaf, condenseOsmosisStoreV1beta1Child));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.store.v1beta1.Leaf` -
 */
export const expandOsmosisStoreV1beta1Leaf = ([a_leaf]) => ({
    leaf: a_leaf && expandOsmosisStoreV1beta1Child(a_leaf),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbcratelimitV1beta1ParamsRequest}
 */
export const condenseOsmosisIbcratelimitV1beta1ParamsRequest = (g_msg) => encodeOsmosisIbcratelimitV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibcratelimit.v1beta1.ParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandOsmosisIbcratelimitV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbcratelimitV1beta1ParamsResponse}
 */
export const condenseOsmosisIbcratelimitV1beta1ParamsResponse = (g_msg) => encodeOsmosisIbcratelimitV1beta1ParamsResponse(apply_opt(g_msg.params, condenseOsmosisIbcratelimitV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibcratelimit.v1beta1.ParamsResponse` - aramsResponse is the response type for the Query/Params RPC method.
 */
export const expandOsmosisIbcratelimitV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisIbcratelimitV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbcratelimitV1beta1Params}
 */
export const condenseOsmosisIbcratelimitV1beta1Params = (g_msg) => encodeOsmosisIbcratelimitV1beta1Params(g_msg.contract_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibcratelimit.v1beta1.Params` - defines the parameters for the ibc-rate-limit module.
 */
export const expandOsmosisIbcratelimitV1beta1Params = ([sa_contract]) => ({
    contract_address: sa_contract,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbcratelimitV1beta1GenesisState}
 */
export const condenseOsmosisIbcratelimitV1beta1GenesisState = (g_msg) => encodeOsmosisIbcratelimitV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisIbcratelimitV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibcratelimit.v1beta1.GenesisState` - defines the ibc-rate-limit module's genesis state.
 */
export const expandOsmosisIbcratelimitV1beta1GenesisState = ([a_params]) => ({
    params: a_params && expandOsmosisIbcratelimitV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbchooksMsgEmitIBCAck}
 */
export const condenseOsmosisIbchooksMsgEmitIBCAck = (g_msg) => encodeOsmosisIbchooksMsgEmitIBCAck(g_msg.sender, g_msg.packet_sequence, g_msg.channel);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibchooks.MsgEmitIBCAck` -
 */
export const expandOsmosisIbchooksMsgEmitIBCAck = ([sa_sender, sg_packet_sequence, s_channel]) => ({
    sender: sa_sender,
    packet_sequence: sg_packet_sequence,
    channel: s_channel,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbchooksMsgEmitIBCAckResponse}
 */
export const condenseOsmosisIbchooksMsgEmitIBCAckResponse = (g_msg) => encodeOsmosisIbchooksMsgEmitIBCAckResponse(g_msg.contract_result, g_msg.ibc_ack);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibchooks.MsgEmitIBCAckResponse` -
 */
export const expandOsmosisIbchooksMsgEmitIBCAckResponse = ([s_contract_result, s_ibc_ack]) => ({
    contract_result: s_contract_result,
    ibc_ack: s_ibc_ack,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbchooksGenesisState}
 */
export const condenseOsmosisIbchooksGenesisState = (g_msg) => encodeOsmosisIbchooksGenesisState(apply_opt(g_msg.params, condenseOsmosisIbchooksParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibchooks.GenesisState` -
 */
export const expandOsmosisIbchooksGenesisState = ([a_params]) => ({
    params: a_params && expandOsmosisIbchooksParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisIbchooksParams}
 */
export const condenseOsmosisIbchooksParams = (g_msg) => encodeOsmosisIbchooksParams(g_msg.allowed_async_ack_contracts);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.ibchooks.Params` -
 */
export const expandOsmosisIbchooksParams = ([a_allowed_async_ack_contracts]) => ({
    allowed_async_ack_contracts: a_allowed_async_ack_contracts,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1QueryEpochsInfoRequest}
 */
export const condenseOsmosisEpochsV1beta1QueryEpochsInfoRequest = (g_msg) => encodeOsmosisEpochsV1beta1QueryEpochsInfoRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.QueryEpochsInfoRequest` -
 */
export const expandOsmosisEpochsV1beta1QueryEpochsInfoRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1QueryEpochsInfoResponse}
 */
export const condenseOsmosisEpochsV1beta1QueryEpochsInfoResponse = (g_msg) => encodeOsmosisEpochsV1beta1QueryEpochsInfoResponse(map(g_msg.epochs, condenseOsmosisEpochsV1beta1EpochInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.QueryEpochsInfoResponse` -
 */
export const expandOsmosisEpochsV1beta1QueryEpochsInfoResponse = ([a_epochs]) => ({
    epochs: a_epochs && map(a_epochs, expandOsmosisEpochsV1beta1EpochInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1EpochInfo}
 */
export const condenseOsmosisEpochsV1beta1EpochInfo = (g_msg) => encodeOsmosisEpochsV1beta1EpochInfo(g_msg.identifier, parse_timestamp(g_msg.start_time), parse_duration(g_msg.duration), g_msg.current_epoch, parse_timestamp(g_msg.current_epoch_start_time), g_msg.epoch_counting_started, g_msg.current_epoch_start_height);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.EpochInfo` - a struct that describes the data going into a timer defined by the x/epochs module.
 */
export const expandOsmosisEpochsV1beta1EpochInfo = ([s_identifier, a_start_time, a_duration, sg_current_epoch, a_current_epoch_start_time, b_epoch_counting_started, , sg_current_epoch_start_height]) => ({
    identifier: s_identifier,
    start_time: expand_timestamp(a_start_time),
    duration: expand_duration(a_duration),
    current_epoch: sg_current_epoch,
    current_epoch_start_time: expand_timestamp(a_current_epoch_start_time),
    epoch_counting_started: !!b_epoch_counting_started,
    current_epoch_start_height: sg_current_epoch_start_height,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1QueryCurrentEpochRequest}
 */
export const condenseOsmosisEpochsV1beta1QueryCurrentEpochRequest = (g_msg) => encodeOsmosisEpochsV1beta1QueryCurrentEpochRequest(g_msg.identifier);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.QueryCurrentEpochRequest` -
 */
export const expandOsmosisEpochsV1beta1QueryCurrentEpochRequest = ([s_identifier]) => ({
    identifier: s_identifier,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1QueryCurrentEpochResponse}
 */
export const condenseOsmosisEpochsV1beta1QueryCurrentEpochResponse = (g_msg) => encodeOsmosisEpochsV1beta1QueryCurrentEpochResponse(g_msg.current_epoch);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.QueryCurrentEpochResponse` -
 */
export const expandOsmosisEpochsV1beta1QueryCurrentEpochResponse = ([sg_current_epoch]) => ({
    current_epoch: sg_current_epoch,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisEpochsV1beta1GenesisState}
 */
export const condenseOsmosisEpochsV1beta1GenesisState = (g_msg) => encodeOsmosisEpochsV1beta1GenesisState(map(g_msg.epochs, condenseOsmosisEpochsV1beta1EpochInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.epochs.v1beta1.GenesisState` - defines the epochs module's genesis state.
 */
export const expandOsmosisEpochsV1beta1GenesisState = ([a_epochs]) => ({
    epochs: a_epochs && map(a_epochs, expandOsmosisEpochsV1beta1EpochInfo),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1UpdateFeeTokenProposal}
 */
export const condenseOsmosisTxfeesV1beta1UpdateFeeTokenProposal = (g_msg) => encodeOsmosisTxfeesV1beta1UpdateFeeTokenProposal(g_msg.title, g_msg.description, map(g_msg.feetokens, condenseOsmosisTxfeesV1beta1FeeToken));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.UpdateFeeTokenProposal` - a gov Content type for adding new whitelisted fee token(s). It must specify a denom along with gamm pool ID to use as a spot price calculator. It can be used to add new denoms to the whitelist. It can also be used to update the Pool to associate with the denom. If Pool ID is set to 0, it will remove the denom from the whitelisted set.
 */
export const expandOsmosisTxfeesV1beta1UpdateFeeTokenProposal = ([s_title, s_description, a_feetokens]) => ({
    title: s_title,
    description: s_description,
    feetokens: a_feetokens && map(a_feetokens, expandOsmosisTxfeesV1beta1FeeToken),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1FeeToken}
 */
export const condenseOsmosisTxfeesV1beta1FeeToken = (g_msg) => encodeOsmosisTxfeesV1beta1FeeToken(g_msg.denom, g_msg.poolID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.FeeToken` - a struct that specifies a coin denom, and pool ID pair. This marks the token as eligible for use as a tx fee asset in Osmosis. Its price in osmo is derived through looking at the provided pool ID. The pool ID must have osmo as one of its assets.
 */
export const expandOsmosisTxfeesV1beta1FeeToken = ([s_denom, sg_poolID]) => ({
    denom: s_denom,
    poolID: sg_poolID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryFeeTokensRequest}
 */
export const condenseOsmosisTxfeesV1beta1QueryFeeTokensRequest = (g_msg) => encodeOsmosisTxfeesV1beta1QueryFeeTokensRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryFeeTokensRequest` -
 */
export const expandOsmosisTxfeesV1beta1QueryFeeTokensRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryFeeTokensResponse}
 */
export const condenseOsmosisTxfeesV1beta1QueryFeeTokensResponse = (g_msg) => encodeOsmosisTxfeesV1beta1QueryFeeTokensResponse(map(g_msg.fee_tokens, condenseOsmosisTxfeesV1beta1FeeToken));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryFeeTokensResponse` -
 */
export const expandOsmosisTxfeesV1beta1QueryFeeTokensResponse = ([a_fee_tokens]) => ({
    fee_tokens: a_fee_tokens && map(a_fee_tokens, expandOsmosisTxfeesV1beta1FeeToken),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest}
 */
export const condenseOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest = (g_msg) => encodeOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest` - defines grpc request structure for querying spot price for the specified tx fee denom
 */
export const expandOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse}
 */
export const condenseOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse = (g_msg) => encodeOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse(g_msg.poolID, g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse` - QueryDenomSpotPriceRequest defines grpc response structure for querying spot price for the specified tx fee denom
 */
export const expandOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse = ([sg_poolID, s_spot_price]) => ({
    poolID: sg_poolID,
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryDenomPoolIdRequest}
 */
export const condenseOsmosisTxfeesV1beta1QueryDenomPoolIdRequest = (g_msg) => encodeOsmosisTxfeesV1beta1QueryDenomPoolIdRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryDenomPoolIdRequest` -
 */
export const expandOsmosisTxfeesV1beta1QueryDenomPoolIdRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryDenomPoolIdResponse}
 */
export const condenseOsmosisTxfeesV1beta1QueryDenomPoolIdResponse = (g_msg) => encodeOsmosisTxfeesV1beta1QueryDenomPoolIdResponse(g_msg.poolID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryDenomPoolIdResponse` -
 */
export const expandOsmosisTxfeesV1beta1QueryDenomPoolIdResponse = ([sg_poolID]) => ({
    poolID: sg_poolID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryBaseDenomRequest}
 */
export const condenseOsmosisTxfeesV1beta1QueryBaseDenomRequest = (g_msg) => encodeOsmosisTxfeesV1beta1QueryBaseDenomRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryBaseDenomRequest` -
 */
export const expandOsmosisTxfeesV1beta1QueryBaseDenomRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1QueryBaseDenomResponse}
 */
export const condenseOsmosisTxfeesV1beta1QueryBaseDenomResponse = (g_msg) => encodeOsmosisTxfeesV1beta1QueryBaseDenomResponse(g_msg.base_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.QueryBaseDenomResponse` -
 */
export const expandOsmosisTxfeesV1beta1QueryBaseDenomResponse = ([s_base_denom]) => ({
    base_denom: s_base_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTxfeesV1beta1GenesisState}
 */
export const condenseOsmosisTxfeesV1beta1GenesisState = (g_msg) => encodeOsmosisTxfeesV1beta1GenesisState(g_msg.basedenom, map(g_msg.feetokens, condenseOsmosisTxfeesV1beta1FeeToken));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.txfees.v1beta1.GenesisState` - defines the txfees module's genesis state.
 */
export const expandOsmosisTxfeesV1beta1GenesisState = ([s_basedenom, a_feetokens]) => ({
    basedenom: s_basedenom,
    feetokens: a_feetokens && map(a_feetokens, expandOsmosisTxfeesV1beta1FeeToken),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ArithmeticTwapRequest}
 */
export const condenseOsmosisTwapV1beta1ArithmeticTwapRequest = (g_msg) => encodeOsmosisTwapV1beta1ArithmeticTwapRequest(g_msg.pool_id, g_msg.base_asset, g_msg.quote_asset, parse_timestamp(g_msg.start_time), parse_timestamp(g_msg.end_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ArithmeticTwapRequest` -
 */
export const expandOsmosisTwapV1beta1ArithmeticTwapRequest = ([sg_pool_id, s_base_asset, s_quote_asset, a_start_time, a_end_time]) => ({
    pool_id: sg_pool_id,
    base_asset: s_base_asset,
    quote_asset: s_quote_asset,
    start_time: expand_timestamp(a_start_time),
    end_time: expand_timestamp(a_end_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ArithmeticTwapResponse}
 */
export const condenseOsmosisTwapV1beta1ArithmeticTwapResponse = (g_msg) => encodeOsmosisTwapV1beta1ArithmeticTwapResponse(g_msg.arithmetic_twap);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ArithmeticTwapResponse` -
 */
export const expandOsmosisTwapV1beta1ArithmeticTwapResponse = ([s_arithmetic_twap]) => ({
    arithmetic_twap: s_arithmetic_twap,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ArithmeticTwapToNowRequest}
 */
export const condenseOsmosisTwapV1beta1ArithmeticTwapToNowRequest = (g_msg) => encodeOsmosisTwapV1beta1ArithmeticTwapToNowRequest(g_msg.pool_id, g_msg.base_asset, g_msg.quote_asset, parse_timestamp(g_msg.start_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ArithmeticTwapToNowRequest` -
 */
export const expandOsmosisTwapV1beta1ArithmeticTwapToNowRequest = ([sg_pool_id, s_base_asset, s_quote_asset, a_start_time]) => ({
    pool_id: sg_pool_id,
    base_asset: s_base_asset,
    quote_asset: s_quote_asset,
    start_time: expand_timestamp(a_start_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ArithmeticTwapToNowResponse}
 */
export const condenseOsmosisTwapV1beta1ArithmeticTwapToNowResponse = (g_msg) => encodeOsmosisTwapV1beta1ArithmeticTwapToNowResponse(g_msg.arithmetic_twap);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ArithmeticTwapToNowResponse` -
 */
export const expandOsmosisTwapV1beta1ArithmeticTwapToNowResponse = ([s_arithmetic_twap]) => ({
    arithmetic_twap: s_arithmetic_twap,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1GeometricTwapRequest}
 */
export const condenseOsmosisTwapV1beta1GeometricTwapRequest = (g_msg) => encodeOsmosisTwapV1beta1GeometricTwapRequest(g_msg.pool_id, g_msg.base_asset, g_msg.quote_asset, parse_timestamp(g_msg.start_time), parse_timestamp(g_msg.end_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.GeometricTwapRequest` -
 */
export const expandOsmosisTwapV1beta1GeometricTwapRequest = ([sg_pool_id, s_base_asset, s_quote_asset, a_start_time, a_end_time]) => ({
    pool_id: sg_pool_id,
    base_asset: s_base_asset,
    quote_asset: s_quote_asset,
    start_time: expand_timestamp(a_start_time),
    end_time: expand_timestamp(a_end_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1GeometricTwapResponse}
 */
export const condenseOsmosisTwapV1beta1GeometricTwapResponse = (g_msg) => encodeOsmosisTwapV1beta1GeometricTwapResponse(g_msg.geometric_twap);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.GeometricTwapResponse` -
 */
export const expandOsmosisTwapV1beta1GeometricTwapResponse = ([s_geometric_twap]) => ({
    geometric_twap: s_geometric_twap,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1GeometricTwapToNowRequest}
 */
export const condenseOsmosisTwapV1beta1GeometricTwapToNowRequest = (g_msg) => encodeOsmosisTwapV1beta1GeometricTwapToNowRequest(g_msg.pool_id, g_msg.base_asset, g_msg.quote_asset, parse_timestamp(g_msg.start_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.GeometricTwapToNowRequest` -
 */
export const expandOsmosisTwapV1beta1GeometricTwapToNowRequest = ([sg_pool_id, s_base_asset, s_quote_asset, a_start_time]) => ({
    pool_id: sg_pool_id,
    base_asset: s_base_asset,
    quote_asset: s_quote_asset,
    start_time: expand_timestamp(a_start_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1GeometricTwapToNowResponse}
 */
export const condenseOsmosisTwapV1beta1GeometricTwapToNowResponse = (g_msg) => encodeOsmosisTwapV1beta1GeometricTwapToNowResponse(g_msg.geometric_twap);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.GeometricTwapToNowResponse` -
 */
export const expandOsmosisTwapV1beta1GeometricTwapToNowResponse = ([s_geometric_twap]) => ({
    geometric_twap: s_geometric_twap,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ParamsRequest}
 */
export const condenseOsmosisTwapV1beta1ParamsRequest = (g_msg) => encodeOsmosisTwapV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ParamsRequest` -
 */
export const expandOsmosisTwapV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1ParamsResponse}
 */
export const condenseOsmosisTwapV1beta1ParamsResponse = (g_msg) => encodeOsmosisTwapV1beta1ParamsResponse(apply_opt(g_msg.params, condenseOsmosisTwapV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.ParamsResponse` -
 */
export const expandOsmosisTwapV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisTwapV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1Params}
 */
export const condenseOsmosisTwapV1beta1Params = (g_msg) => encodeOsmosisTwapV1beta1Params(g_msg.prune_epoch_identifier, parse_duration(g_msg.record_history_keep_period));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.Params` - holds parameters for the twap module
 */
export const expandOsmosisTwapV1beta1Params = ([s_prune_epoch_identifier, a_record_history_keep_period]) => ({
    prune_epoch_identifier: s_prune_epoch_identifier,
    record_history_keep_period: expand_duration(a_record_history_keep_period),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1GenesisState}
 */
export const condenseOsmosisTwapV1beta1GenesisState = (g_msg) => encodeOsmosisTwapV1beta1GenesisState(map(g_msg.twaps, condenseOsmosisTwapV1beta1TwapRecord), apply_opt(g_msg.params, condenseOsmosisTwapV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.GenesisState` - defines the twap module's genesis state.
 */
export const expandOsmosisTwapV1beta1GenesisState = ([a_twaps, a_params]) => ({
    twaps: a_twaps && map(a_twaps, expandOsmosisTwapV1beta1TwapRecord),
    params: a_params && expandOsmosisTwapV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTwapV1beta1TwapRecord}
 */
export const condenseOsmosisTwapV1beta1TwapRecord = (g_msg) => encodeOsmosisTwapV1beta1TwapRecord(g_msg.pool_id, g_msg.asset0_denom, g_msg.asset1_denom, g_msg.height, parse_timestamp(g_msg.time), g_msg.p0_last_spot_price, g_msg.p1_last_spot_price, g_msg.p0_arithmetic_twap_accumulator, g_msg.p1_arithmetic_twap_accumulator, g_msg.geometric_twap_accumulator, parse_timestamp(g_msg.last_error_time));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.twap.v1beta1.TwapRecord` - A TWAP record should be indexed in state by pool_id, (asset pair), timestamp The asset pair assets should be lexicographically sorted. Technically (pool_id, asset_0_denom, asset_1_denom, height) do not need to appear in the struct however we view this as the wrong performance tradeoff given SDK today. Would rather we optimize for readability and correctness, than an optimal state storage format. The system bottleneck is elsewhere for now.
 */
export const expandOsmosisTwapV1beta1TwapRecord = ([sg_pool_id, s_asset0_denom, s_asset1_denom, sg_height, a_time, s_p0_last_spot_price, s_p1_last_spot_price, s_p0_arithmetic_twap_accumulator, s_p1_arithmetic_twap_accumulator, s_geometric_twap_accumulator, a_last_error_time]) => ({
    pool_id: sg_pool_id,
    asset0_denom: s_asset0_denom,
    asset1_denom: s_asset1_denom,
    height: sg_height,
    time: expand_timestamp(a_time),
    p0_last_spot_price: s_p0_last_spot_price,
    p1_last_spot_price: s_p1_last_spot_price,
    p0_arithmetic_twap_accumulator: s_p0_arithmetic_twap_accumulator,
    p1_arithmetic_twap_accumulator: s_p1_arithmetic_twap_accumulator,
    geometric_twap_accumulator: s_geometric_twap_accumulator,
    last_error_time: expand_timestamp(a_last_error_time),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV2SpotPriceRequest}
 */
export const condenseOsmosisPoolmanagerV2SpotPriceRequest = (g_msg) => encodeOsmosisPoolmanagerV2SpotPriceRequest(g_msg.pool_id, g_msg.base_asset_denom, g_msg.quote_asset_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v2.SpotPriceRequest` - defines the gRPC request structure for a SpotPrice query.
 */
export const expandOsmosisPoolmanagerV2SpotPriceRequest = ([sg_pool_id, s_base_asset_denom, s_quote_asset_denom]) => ({
    pool_id: sg_pool_id,
    base_asset_denom: s_base_asset_denom,
    quote_asset_denom: s_quote_asset_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV2SpotPriceResponse}
 */
export const condenseOsmosisPoolmanagerV2SpotPriceResponse = (g_msg) => encodeOsmosisPoolmanagerV2SpotPriceResponse(g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v2.SpotPriceResponse` - defines the gRPC response structure for a SpotPrice query.
 */
export const expandOsmosisPoolmanagerV2SpotPriceResponse = ([s_spot_price]) => ({
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute), slimify_coin(g_msg.token_in), g_msg.token_out_min_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSwapExactAmountIn` - ===================== MsgSwapExactAmountIn
 */
export const expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn = ([sa_sender, a_routes, a_token_in, s_token_out_min_amount]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute),
    token_in: a_token_in && expand_coin(a_token_in),
    token_out_min_amount: s_token_out_min_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSwapExactAmountInResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute), g_msg.token_in_denom, g_msg.token_out_min_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountIn` - ===================== MsgSplitRouteSwapExactAmountIn
 */
export const expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn = ([sa_sender, a_routes, s_token_in_denom, s_token_out_min_amount]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute),
    token_in_denom: s_token_in_denom,
    token_out_min_amount: s_token_out_min_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute}
 */
export const condenseOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute = (g_msg) => encodeOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute(map(g_msg.pools, condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute), g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SwapAmountInSplitRoute` -
 */
export const expandOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute = ([a_pools, s_token_in_amount]) => ({
    pools: a_pools && map(a_pools, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute),
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountInResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute), g_msg.token_in_max_amount, slimify_coin(g_msg.token_out));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSwapExactAmountOut` - ===================== MsgSwapExactAmountOut
 */
export const expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut = ([sa_sender, a_routes, s_token_in_max_amount, a_token_out]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute),
    token_in_max_amount: s_token_in_max_amount,
    token_out: a_token_out && expand_coin(a_token_out),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSwapExactAmountOutResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut(g_msg.sender, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute), g_msg.token_out_denom, g_msg.token_in_max_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOut` - ===================== MsgSplitRouteSwapExactAmountOut
 */
export const expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut = ([sa_sender, a_routes, s_token_out_denom, s_token_in_max_amount]) => ({
    sender: sa_sender,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute),
    token_out_denom: s_token_out_denom,
    token_in_max_amount: s_token_in_max_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute}
 */
export const condenseOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute = (g_msg) => encodeOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute(map(g_msg.pools, condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute), g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SwapAmountOutSplitRoute` -
 */
export const expandOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute = ([a_pools, s_token_out_amount]) => ({
    pools: a_pools && map(a_pools, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute),
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOutResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee(g_msg.sender, map(g_msg.denom_pair_taker_fee, condenseOsmosisPoolmanagerV1beta1DenomPairTakerFee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFee` - ===================== MsgSetDenomPairTakerFee
 */
export const expandOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee = ([sa_sender, a_denom_pair_taker_fee]) => ({
    sender: sa_sender,
    denom_pair_taker_fee: a_denom_pair_taker_fee && map(a_denom_pair_taker_fee, expandOsmosisPoolmanagerV1beta1DenomPairTakerFee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1DenomPairTakerFee}
 */
export const condenseOsmosisPoolmanagerV1beta1DenomPairTakerFee = (g_msg) => encodeOsmosisPoolmanagerV1beta1DenomPairTakerFee(g_msg.denom0, g_msg.denom1, g_msg.taker_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.DenomPairTakerFee` -
 */
export const expandOsmosisPoolmanagerV1beta1DenomPairTakerFee = ([s_denom0, s_denom1, s_taker_fee]) => ({
    denom0: s_denom0,
    denom1: s_denom1,
    taker_fee: s_taker_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFeeResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal}
 */
export const condenseOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal = (g_msg) => encodeOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal(g_msg.title, g_msg.description, map(g_msg.denom_pair_taker_fee, condenseOsmosisPoolmanagerV1beta1DenomPairTakerFee));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal` - a type for adding/removing a custom taker fee(s) for one or more denom pairs.
 */
export const expandOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal = ([s_title, s_description, a_denom_pair_taker_fee]) => ({
    title: s_title,
    description: s_description,
    denom_pair_taker_fee: a_denom_pair_taker_fee && map(a_denom_pair_taker_fee, expandOsmosisPoolmanagerV1beta1DenomPairTakerFee),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1ParamsRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1ParamsRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1ParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.ParamsRequest` - =============================== Params
 */
export const expandOsmosisPoolmanagerV1beta1ParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1ParamsResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1ParamsResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1ParamsResponse(apply_opt(g_msg.params, condenseOsmosisPoolmanagerV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.ParamsResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1ParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisPoolmanagerV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1Params}
 */
export const condenseOsmosisPoolmanagerV1beta1Params = (g_msg) => encodeOsmosisPoolmanagerV1beta1Params(map(g_msg.pool_creation_fee, slimify_coin), apply_opt(g_msg.taker_fee_params, condenseOsmosisPoolmanagerV1beta1TakerFeeParams), g_msg.authorized_quote_denoms);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.Params` - holds parameters for the poolmanager module
 */
export const expandOsmosisPoolmanagerV1beta1Params = ([a_pool_creation_fee, a_taker_fee_params, a_authorized_quote_denoms]) => ({
    pool_creation_fee: a_pool_creation_fee && map(a_pool_creation_fee, expand_coin),
    taker_fee_params: a_taker_fee_params && expandOsmosisPoolmanagerV1beta1TakerFeeParams(a_taker_fee_params),
    authorized_quote_denoms: a_authorized_quote_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TakerFeeParams}
 */
export const condenseOsmosisPoolmanagerV1beta1TakerFeeParams = (g_msg) => encodeOsmosisPoolmanagerV1beta1TakerFeeParams(g_msg.default_taker_fee, apply_opt(g_msg.osmo_taker_fee_distribution, condenseOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage), apply_opt(g_msg.non_osmo_taker_fee_distribution, condenseOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage), g_msg.admin_addresses, g_msg.community_pool_denom_to_swap_non_whitelisted_assets_to, g_msg.reduced_fee_whitelist);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TakerFeeParams` - consolidates the taker fee parameters for the poolmanager.
 */
export const expandOsmosisPoolmanagerV1beta1TakerFeeParams = ([s_default_taker_fee, a_osmo_taker_fee_distribution, a_non_osmo_taker_fee_distribution, a_admin_addresses, s_community_pool_denom_to_swap_non_whitelisted_assets_to, a_reduced_fee_whitelists]) => ({
    default_taker_fee: s_default_taker_fee,
    osmo_taker_fee_distribution: a_osmo_taker_fee_distribution && expandOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage(a_osmo_taker_fee_distribution),
    non_osmo_taker_fee_distribution: a_non_osmo_taker_fee_distribution && expandOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage(a_non_osmo_taker_fee_distribution),
    admin_addresses: a_admin_addresses,
    community_pool_denom_to_swap_non_whitelisted_assets_to: s_community_pool_denom_to_swap_non_whitelisted_assets_to,
    reduced_fee_whitelist: a_reduced_fee_whitelists,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage}
 */
export const condenseOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage = (g_msg) => encodeOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage(g_msg.staking_rewards, g_msg.community_pool);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TakerFeeDistributionPercentage` - defines what percent of the taker fee category gets distributed to the available categories.
 */
export const expandOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage = ([s_staking_rewards, s_community_pool]) => ({
    staking_rewards: s_staking_rewards,
    community_pool: s_community_pool,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest(g_msg.pool_id, g_msg.token_in, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInRequest` - =============================== EstimateSwapExactAmountIn
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest = ([, sg_pool_id, s_token_in, a_routes]) => ({
    pool_id: sg_pool_id,
    token_in: s_token_in,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest(g_msg.pool_id, g_msg.token_in, g_msg.routes_pool_id, g_msg.routes_token_out_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInWithPrimitiveTypesRequest` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest = ([sg_pool_id, s_token_in, a_routes_pool_ids, a_routes_token_out_denoms]) => ({
    pool_id: sg_pool_id,
    token_in: s_token_in,
    routes_pool_id: a_routes_pool_ids,
    routes_token_out_denom: a_routes_token_out_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest(g_msg.pool_id, g_msg.token_in, g_msg.token_out_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountInRequest` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest = ([sg_pool_id, s_token_in, s_token_out_denom]) => ({
    pool_id: sg_pool_id,
    token_in: s_token_in,
    token_out_denom: s_token_out_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse(g_msg.token_out_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse = ([s_token_out_amount]) => ({
    token_out_amount: s_token_out_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest(g_msg.pool_id, map(g_msg.routes, condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute), g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutRequest` - =============================== EstimateSwapExactAmountOut
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest = ([, sg_pool_id, a_routes, s_token_out]) => ({
    pool_id: sg_pool_id,
    routes: a_routes && map(a_routes, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute),
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest(g_msg.pool_id, g_msg.routes_pool_id, g_msg.routes_token_in_denom, g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutWithPrimitiveTypesRequest` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest = ([sg_pool_id, a_routes_pool_ids, a_routes_token_in_denoms, s_token_out]) => ({
    pool_id: sg_pool_id,
    routes_pool_id: a_routes_pool_ids,
    routes_token_in_denom: a_routes_token_in_denoms,
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest(g_msg.pool_id, g_msg.token_in_denom, g_msg.token_out);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountOutRequest` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest = ([sg_pool_id, s_token_in_denom, s_token_out]) => ({
    pool_id: sg_pool_id,
    token_in_denom: s_token_in_denom,
    token_out: s_token_out,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse(g_msg.token_in_amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse = ([s_token_in_amount]) => ({
    token_in_amount: s_token_in_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1NumPoolsRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1NumPoolsRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1NumPoolsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.NumPoolsRequest` - =============================== NumPools
 */
export const expandOsmosisPoolmanagerV1beta1NumPoolsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1NumPoolsResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1NumPoolsResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1NumPoolsResponse(g_msg.num_pools);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.NumPoolsResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1NumPoolsResponse = ([sg_num_pools]) => ({
    num_pools: sg_num_pools,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1PoolRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1PoolRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1PoolRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.PoolRequest` - =============================== Pool
 */
export const expandOsmosisPoolmanagerV1beta1PoolRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1PoolResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1PoolResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1PoolResponse(condenseJsonAny(g_msg.pool));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.PoolResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1PoolResponse = ([a_pool]) => ({
    pool: a_pool && expandJsonAny(a_pool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1AllPoolsRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1AllPoolsRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1AllPoolsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.AllPoolsRequest` - =============================== AllPools
 */
export const expandOsmosisPoolmanagerV1beta1AllPoolsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1AllPoolsResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1AllPoolsResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1AllPoolsResponse(map(g_msg.pools, condenseJsonAny));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.AllPoolsResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1AllPoolsResponse = ([a_pools]) => ({
    pools: a_pools && map(a_pools, expandJsonAny),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SpotPriceRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1SpotPriceRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1SpotPriceRequest(g_msg.pool_id, g_msg.base_asset_denom, g_msg.quote_asset_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SpotPriceRequest` - defines the gRPC request structure for a SpotPrice query.
 */
export const expandOsmosisPoolmanagerV1beta1SpotPriceRequest = ([sg_pool_id, s_base_asset_denom, s_quote_asset_denom]) => ({
    pool_id: sg_pool_id,
    base_asset_denom: s_base_asset_denom,
    quote_asset_denom: s_quote_asset_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1SpotPriceResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1SpotPriceResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1SpotPriceResponse(g_msg.spot_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.SpotPriceResponse` - defines the gRPC response structure for a SpotPrice query.
 */
export const expandOsmosisPoolmanagerV1beta1SpotPriceResponse = ([s_spot_price]) => ({
    spot_price: s_spot_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalPoolLiquidityRequest` - =============================== TotalPoolLiquidity
 */
export const expandOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse(map(g_msg.liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalPoolLiquidityResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse = ([a_liquidity]) => ({
    liquidity: a_liquidity && map(a_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalLiquidityRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalLiquidityRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalLiquidityRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalLiquidityRequest` - =============================== TotalLiquidity
 */
export const expandOsmosisPoolmanagerV1beta1TotalLiquidityRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalLiquidityResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalLiquidityResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalLiquidityResponse(map(g_msg.liquidity, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalLiquidityResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1TotalLiquidityResponse = ([a_liquidity]) => ({
    liquidity: a_liquidity && map(a_liquidity, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalVolumeForPoolRequest` - =============================== TotalVolumeForPool
 */
export const expandOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse(map(g_msg.volume, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TotalVolumeForPoolResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse = ([a_volume]) => ({
    volume: a_volume && map(a_volume, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest(g_msg.denom_0, g_msg.denom_1);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TradingPairTakerFeeRequest` - =============================== TradingPairTakerFee
 */
export const expandOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest = ([s_denom_0, s_denom_1]) => ({
    denom_0: s_denom_0,
    denom_1: s_denom_1,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse(g_msg.taker_fee);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TradingPairTakerFeeResponse` -
 */
export const expandOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse = ([s_taker_fee]) => ({
    taker_fee: s_taker_fee,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest(slimify_coin(g_msg.from_coin), g_msg.to_coin_denom, g_msg.pool_id, g_msg.max_price_impact, g_msg.external_price);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactRequest` - represents a request to estimate a trade for Balancer/StableSwap/Concentrated liquidity pool types based on the given parameters.
 */
export const expandOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest = ([a_from_coin, s_to_coin_denom, sg_pool_id, s_max_price_impact, s_external_price]) => ({
    from_coin: a_from_coin && expand_coin(a_from_coin),
    to_coin_denom: s_to_coin_denom,
    pool_id: sg_pool_id,
    max_price_impact: s_max_price_impact,
    external_price: s_external_price,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse}
 */
export const condenseOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse = (g_msg) => encodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse(slimify_coin(g_msg.input_coin), slimify_coin(g_msg.output_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactResponse` - represents the response data for an estimated trade based on price impact. If a trade fails to be estimated the response would be 0,0 for input_coin and output_coin and will not error.
 */
export const expandOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse = ([a_input_coin, a_output_coin]) => ({
    input_coin: a_input_coin && expand_coin(a_input_coin),
    output_coin: a_output_coin && expand_coin(a_output_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1TrackedVolume}
 */
export const condenseOsmosisPoolmanagerV1beta1TrackedVolume = (g_msg) => encodeOsmosisPoolmanagerV1beta1TrackedVolume(map(g_msg.amount, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.TrackedVolume` -
 */
export const expandOsmosisPoolmanagerV1beta1TrackedVolume = ([a_amount]) => ({
    amount: a_amount && map(a_amount, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1ModuleRoute}
 */
export const condenseOsmosisPoolmanagerV1beta1ModuleRoute = (g_msg) => encodeOsmosisPoolmanagerV1beta1ModuleRoute(JsonToProtoEnumOsmosisPoolmanagerV1beta1PoolType[g_msg.pool_type], g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.ModuleRoute` - r defines a route encapsulating pool type. It is used as the value of a mapping from pool id to the pool type, allowing the pool manager to know which module to route swaps to given the pool id.
 */
export const expandOsmosisPoolmanagerV1beta1ModuleRoute = ([xc_pool_type, sg_pool_id]) => ({
    pool_type: xc_pool_type >= 0 ? ProtoToJsonEnumOsmosisPoolmanagerV1beta1PoolType[xc_pool_type] : __UNDEFINED,
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolmanagerV1beta1GenesisState}
 */
export const condenseOsmosisPoolmanagerV1beta1GenesisState = (g_msg) => encodeOsmosisPoolmanagerV1beta1GenesisState(g_msg.next_pool_id, apply_opt(g_msg.params, condenseOsmosisPoolmanagerV1beta1Params), map(g_msg.pool_routes, condenseOsmosisPoolmanagerV1beta1ModuleRoute));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolmanager.v1beta1.GenesisState` - defines the poolmanager module's genesis state.
 */
export const expandOsmosisPoolmanagerV1beta1GenesisState = ([sg_next_pool_id, a_params, a_pool_routes]) => ({
    next_pool_id: sg_next_pool_id,
    params: a_params && expandOsmosisPoolmanagerV1beta1Params(a_params),
    pool_routes: a_pool_routes && map(a_pool_routes, expandOsmosisPoolmanagerV1beta1ModuleRoute),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgCreateDenom}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgCreateDenom = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgCreateDenom(g_msg.sender, g_msg.subdenom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgCreateDenom` - defines the message structure for the CreateDenom gRPC service method. It allows an account to create a new denom. It requires a sender address and a sub denomination. The (sender_address, sub_denomination) tuple must be unique and cannot be re-used. The resulting denom created is defined as <factory/{creatorAddress}/{subdenom}>. The resulting denom's admin is originally set to be the creator, but this can be changed later. The token denom does not indicate the current admin.
 */
export const expandOsmosisTokenfactoryV1beta1MsgCreateDenom = ([sa_sender, s_subdenom]) => ({
    sender: sa_sender,
    subdenom: s_subdenom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgCreateDenomResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgCreateDenomResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgCreateDenomResponse(g_msg.new_token_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse` - the return value of MsgCreateDenom It returns the full string of the newly created denom
 */
export const expandOsmosisTokenfactoryV1beta1MsgCreateDenomResponse = ([s_new_token_denom]) => ({
    new_token_denom: s_new_token_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgMint}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgMint = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgMint(g_msg.sender, slimify_coin(g_msg.amount), g_msg.mintToAddress);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgMint` - the sdk.Msg type for allowing an admin account to mint more of a token. Only the admin of the token factory denom has permission to mint unless the denom does not have any admin.
 */
export const expandOsmosisTokenfactoryV1beta1MsgMint = ([sa_sender, a_amount, s_mintToAddress]) => ({
    sender: sa_sender,
    amount: a_amount && expand_coin(a_amount),
    mintToAddress: s_mintToAddress,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgMintResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgMintResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgMintResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgMintResponse` -
 */
export const expandOsmosisTokenfactoryV1beta1MsgMintResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgBurn}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgBurn = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgBurn(g_msg.sender, slimify_coin(g_msg.amount), g_msg.burnFromAddress);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgBurn` - the sdk.Msg type for allowing an admin account to burn a token. Only the admin of the token factory denom has permission to burn unless the denom does not have any admin.
 */
export const expandOsmosisTokenfactoryV1beta1MsgBurn = ([sa_sender, a_amount, s_burnFromAddress]) => ({
    sender: sa_sender,
    amount: a_amount && expand_coin(a_amount),
    burnFromAddress: s_burnFromAddress,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgBurnResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgBurnResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgBurnResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgBurnResponse` -
 */
export const expandOsmosisTokenfactoryV1beta1MsgBurnResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgChangeAdmin}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgChangeAdmin = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgChangeAdmin(g_msg.sender, g_msg.denom, g_msg.new_admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgChangeAdmin` - the sdk.Msg type for allowing an admin account to reassign adminship of a denom to a new account
 */
export const expandOsmosisTokenfactoryV1beta1MsgChangeAdmin = ([sa_sender, s_denom, s_new_admin]) => ({
    sender: sa_sender,
    denom: s_denom,
    new_admin: s_new_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgChangeAdminResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgChangeAdminResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgChangeAdminResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse` - defines the response structure for an executed MsgChangeAdmin message.
 */
export const expandOsmosisTokenfactoryV1beta1MsgChangeAdminResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook(g_msg.sender, g_msg.denom, g_msg.cosmwasm_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgSetBeforeSendHook` - the sdk.Msg type for allowing an admin account to assign a CosmWasm contract to call with a BeforeSend hook
 */
export const expandOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook = ([sa_sender, s_denom, sa_cosmwasm]) => ({
    sender: sa_sender,
    denom: s_denom,
    cosmwasm_address: sa_cosmwasm,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgSetBeforeSendHookResponse` - defines the response structure for an executed MsgSetBeforeSendHook message.
 */
export const expandOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgSetDenomMetadata}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgSetDenomMetadata = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadata(g_msg.sender, apply_opt(g_msg.metadata, condenseCosmosBankV1beta1Metadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata` - the sdk.Msg type for allowing an admin account to set the denom's bank metadata
 */
export const expandOsmosisTokenfactoryV1beta1MsgSetDenomMetadata = ([sa_sender, a_metadata]) => ({
    sender: sa_sender,
    metadata: a_metadata && expandCosmosBankV1beta1Metadata(a_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse` - defines the response structure for an executed MsgSetDenomMetadata message.
 */
export const expandOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgForceTransfer}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgForceTransfer = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgForceTransfer(g_msg.sender, slimify_coin(g_msg.amount), g_msg.transferFromAddress, g_msg.transferToAddress);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgForceTransfer` -
 */
export const expandOsmosisTokenfactoryV1beta1MsgForceTransfer = ([sa_sender, a_amount, s_transferFromAddress, s_transferToAddress]) => ({
    sender: sa_sender,
    amount: a_amount && expand_coin(a_amount),
    transferFromAddress: s_transferFromAddress,
    transferToAddress: s_transferToAddress,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1MsgForceTransferResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1MsgForceTransferResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1MsgForceTransferResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.MsgForceTransferResponse` -
 */
export const expandOsmosisTokenfactoryV1beta1MsgForceTransferResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryParamsRequest}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryParamsRequest = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export const expandOsmosisTokenfactoryV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryParamsResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryParamsResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisTokenfactoryV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export const expandOsmosisTokenfactoryV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisTokenfactoryV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1Params}
 */
export const condenseOsmosisTokenfactoryV1beta1Params = (g_msg) => encodeOsmosisTokenfactoryV1beta1Params(map(g_msg.denom_creation_fee, slimify_coin), g_msg.denom_creation_gas_consume);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.Params` - defines the parameters for the tokenfactory module.
 */
export const expandOsmosisTokenfactoryV1beta1Params = ([a_denom_creation_fee, sg_denom_creation_gas_consume]) => ({
    denom_creation_fee: a_denom_creation_fee && map(a_denom_creation_fee, expand_coin),
    denom_creation_gas_consume: sg_denom_creation_gas_consume,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest` - defines the request structure for the DenomAuthorityMetadata gRPC query.
 */
export const expandOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse(apply_opt(g_msg.authority_metadata, condenseOsmosisTokenfactoryV1beta1DenomAuthorityMetadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse` - defines the response structure for the DenomAuthorityMetadata gRPC query.
 */
export const expandOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse = ([a_authority_metadata]) => ({
    authority_metadata: a_authority_metadata && expandOsmosisTokenfactoryV1beta1DenomAuthorityMetadata(a_authority_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1DenomAuthorityMetadata}
 */
export const condenseOsmosisTokenfactoryV1beta1DenomAuthorityMetadata = (g_msg) => encodeOsmosisTokenfactoryV1beta1DenomAuthorityMetadata(g_msg.admin);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata` - specifies metadata for addresses that have specific capabilities over a token factory denom. Right now there is only one Admin permission, but is planned to be extended to the future.
 */
export const expandOsmosisTokenfactoryV1beta1DenomAuthorityMetadata = ([s_admin]) => ({
    admin: s_admin,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest(g_msg.creator);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest` - defines the request structure for the DenomsFromCreator gRPC query.
 */
export const expandOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest = ([sa_creator]) => ({
    creator: sa_creator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse(g_msg.denoms);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse` - QueryDenomsFromCreatorRequest defines the response structure for the DenomsFromCreator gRPC query.
 */
export const expandOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse = ([a_denoms]) => ({
    denoms: a_denoms,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest(g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressRequest` -
 */
export const expandOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest = ([s_denom]) => ({
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse}
 */
export const condenseOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse = (g_msg) => encodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse(g_msg.cosmwasm_address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressResponse` - defines the response structure for the DenomBeforeSendHook gRPC query.
 */
export const expandOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse = ([sa_cosmwasm]) => ({
    cosmwasm_address: sa_cosmwasm,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1GenesisState}
 */
export const condenseOsmosisTokenfactoryV1beta1GenesisState = (g_msg) => encodeOsmosisTokenfactoryV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisTokenfactoryV1beta1Params), map(g_msg.factory_denoms, condenseOsmosisTokenfactoryV1beta1GenesisDenom));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.GenesisState` - defines the tokenfactory module's genesis state.
 */
export const expandOsmosisTokenfactoryV1beta1GenesisState = ([a_params, a_factory_denoms]) => ({
    params: a_params && expandOsmosisTokenfactoryV1beta1Params(a_params),
    factory_denoms: a_factory_denoms && map(a_factory_denoms, expandOsmosisTokenfactoryV1beta1GenesisDenom),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisTokenfactoryV1beta1GenesisDenom}
 */
export const condenseOsmosisTokenfactoryV1beta1GenesisDenom = (g_msg) => encodeOsmosisTokenfactoryV1beta1GenesisDenom(g_msg.denom, apply_opt(g_msg.authority_metadata, condenseOsmosisTokenfactoryV1beta1DenomAuthorityMetadata));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.tokenfactory.v1beta1.GenesisDenom` - defines a tokenfactory denom that is defined within genesis state. The structure contains DenomAuthorityMetadata which defines the denom's admin.
 */
export const expandOsmosisTokenfactoryV1beta1GenesisDenom = ([s_denom, a_authority_metadata]) => ({
    denom: s_denom,
    authority_metadata: a_authority_metadata && expandOsmosisTokenfactoryV1beta1DenomAuthorityMetadata(a_authority_metadata),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal}
 */
export const condenseOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal = (g_msg) => encodeOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal(g_msg.title, g_msg.description, map(g_msg.records, condenseOsmosisPoolincentivesV1beta1DistrRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal` - a gov Content type for updating the pool incentives. If a ReplacePoolIncentivesProposal passes, the proposal’s records override the existing DistrRecords set in the module. Each record has a specified gauge id and weight, and the incentives are distributed to each gauge according to weight/total_weight. The incentives are put in the fee pool and it is allocated to gauges and community pool by the DistrRecords configuration. Note that gaugeId=0 represents the community pool.
 */
export const expandOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal = ([s_title, s_description, a_records]) => ({
    title: s_title,
    description: s_description,
    records: a_records && map(a_records, expandOsmosisPoolincentivesV1beta1DistrRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1DistrRecord}
 */
export const condenseOsmosisPoolincentivesV1beta1DistrRecord = (g_msg) => encodeOsmosisPoolincentivesV1beta1DistrRecord(g_msg.gauge_id, g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.DistrRecord` -
 */
export const expandOsmosisPoolincentivesV1beta1DistrRecord = ([sg_gauge_id, s_weight]) => ({
    gauge_id: sg_gauge_id,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal}
 */
export const condenseOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal = (g_msg) => encodeOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal(g_msg.title, g_msg.description, map(g_msg.records, condenseOsmosisPoolincentivesV1beta1DistrRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal` - For example: if the existing DistrRecords were: [(Gauge 0, 5), (Gauge 1, 6), (Gauge 2, 6)] An UpdatePoolIncentivesProposal includes [(Gauge 1, 0), (Gauge 2, 4), (Gauge 3, 10)] This would delete Gauge 1, Edit Gauge 2, and Add Gauge 3 The result DistrRecords in state would be: [(Gauge 0, 5), (Gauge 2, 4), (Gauge 3, 10)]
 */
export const expandOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal = ([s_title, s_description, a_records]) => ({
    title: s_title,
    description: s_description,
    records: a_records && map(a_records, expandOsmosisPoolincentivesV1beta1DistrRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1Params}
 */
export const condenseOsmosisPoolincentivesV1beta1Params = (g_msg) => encodeOsmosisPoolincentivesV1beta1Params(g_msg.minted_denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.Params` -
 */
export const expandOsmosisPoolincentivesV1beta1Params = ([s_minted_denom]) => ({
    minted_denom: s_minted_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1LockableDurationsInfo}
 */
export const condenseOsmosisPoolincentivesV1beta1LockableDurationsInfo = (g_msg) => encodeOsmosisPoolincentivesV1beta1LockableDurationsInfo(map(g_msg.lockable_durations, parse_duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.LockableDurationsInfo` -
 */
export const expandOsmosisPoolincentivesV1beta1LockableDurationsInfo = ([a_lockable_durations]) => ({
    lockable_durations: map(a_lockable_durations, expand_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1DistrInfo}
 */
export const condenseOsmosisPoolincentivesV1beta1DistrInfo = (g_msg) => encodeOsmosisPoolincentivesV1beta1DistrInfo(g_msg.total_weight, map(g_msg.records, condenseOsmosisPoolincentivesV1beta1DistrRecord));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.DistrInfo` -
 */
export const expandOsmosisPoolincentivesV1beta1DistrInfo = ([s_total_weight, a_records]) => ({
    total_weight: s_total_weight,
    records: a_records && map(a_records, expandOsmosisPoolincentivesV1beta1DistrRecord),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1PoolToGauge}
 */
export const condenseOsmosisPoolincentivesV1beta1PoolToGauge = (g_msg) => encodeOsmosisPoolincentivesV1beta1PoolToGauge(g_msg.pool_id, g_msg.gauge_id, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.PoolToGauge` -
 */
export const expandOsmosisPoolincentivesV1beta1PoolToGauge = ([sg_pool_id, sg_gauge_id, a_duration]) => ({
    pool_id: sg_pool_id,
    gauge_id: sg_gauge_id,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges}
 */
export const condenseOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges = (g_msg) => encodeOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges(map(g_msg.pool_to_gauge, condenseOsmosisPoolincentivesV1beta1PoolToGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.AnyPoolToInternalGauges` -
 */
export const expandOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges = ([, a_pool_to_gauge]) => ({
    pool_to_gauge: a_pool_to_gauge && map(a_pool_to_gauge, expandOsmosisPoolincentivesV1beta1PoolToGauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges}
 */
export const condenseOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges = (g_msg) => encodeOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges(map(g_msg.pool_to_gauge, condenseOsmosisPoolincentivesV1beta1PoolToGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.ConcentratedPoolToNoLockGauges` -
 */
export const expandOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges = ([a_pool_to_gauge]) => ({
    pool_to_gauge: a_pool_to_gauge && map(a_pool_to_gauge, expandOsmosisPoolincentivesV1beta1PoolToGauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest(g_msg.pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest = ([sg_pool_id]) => ({
    pool_id: sg_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse(map(g_msg.gauge_ids_with_duration, condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse = ([a_gauge_ids_with_duration]) => ({
    gauge_ids_with_duration: a_gauge_ids_with_duration && map(a_gauge_ids_with_duration, expandOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration(g_msg.gauge_id, parse_duration(g_msg.duration), g_msg.gauge_incentive_percentage);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration = ([sg_gauge_id, a_duration, s_gauge_incentive_percentage]) => ({
    gauge_id: sg_gauge_id,
    duration: expand_duration(a_duration),
    gauge_incentive_percentage: s_gauge_incentive_percentage,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryDistrInfoRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryDistrInfoRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryDistrInfoRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryDistrInfoRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryDistrInfoRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryDistrInfoResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryDistrInfoResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryDistrInfoResponse(apply_opt(g_msg.distr_info, condenseOsmosisPoolincentivesV1beta1DistrInfo));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryDistrInfoResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryDistrInfoResponse = ([a_distr_info]) => ({
    distr_info: a_distr_info && expandOsmosisPoolincentivesV1beta1DistrInfo(a_distr_info),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryParamsRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryParamsRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryParamsRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryParamsResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryParamsResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisPoolincentivesV1beta1Params));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryParamsResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisPoolincentivesV1beta1Params(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse(map(g_msg.lockable_durations, parse_duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse = ([a_lockable_durations]) => ({
    lockable_durations: map(a_lockable_durations, expand_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1IncentivizedPool}
 */
export const condenseOsmosisPoolincentivesV1beta1IncentivizedPool = (g_msg) => encodeOsmosisPoolincentivesV1beta1IncentivizedPool(g_msg.pool_id, parse_duration(g_msg.lockable_duration), g_msg.gauge_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.IncentivizedPool` -
 */
export const expandOsmosisPoolincentivesV1beta1IncentivizedPool = ([sg_pool_id, a_lockable_duration, sg_gauge_id]) => ({
    pool_id: sg_pool_id,
    lockable_duration: expand_duration(a_lockable_duration),
    gauge_id: sg_gauge_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse(map(g_msg.incentivized_pools, condenseOsmosisPoolincentivesV1beta1IncentivizedPool));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse = ([a_incentivized_pools]) => ({
    incentivized_pools: a_incentivized_pools && map(a_incentivized_pools, expandOsmosisPoolincentivesV1beta1IncentivizedPool),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse}
 */
export const condenseOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse = (g_msg) => encodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse(map(g_msg.data, condenseOsmosisIncentivesGauge));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse` -
 */
export const expandOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse = ([a_data]) => ({
    data: a_data && map(a_data, expandOsmosisIncentivesGauge),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1GenesisState}
 */
export const condenseOsmosisPoolincentivesV1beta1GenesisState = (g_msg) => encodeOsmosisPoolincentivesV1beta1GenesisState(apply_opt(g_msg.params, condenseOsmosisPoolincentivesV1beta1Params), map(g_msg.lockable_durations, parse_duration), apply_opt(g_msg.distr_info, condenseOsmosisPoolincentivesV1beta1DistrInfo), apply_opt(g_msg.any_pool_to_internal_gauges, condenseOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges), apply_opt(g_msg.concentrated_pool_to_no_lock_gauges, condenseOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.GenesisState` - defines the pool incentives module's genesis state.
 */
export const expandOsmosisPoolincentivesV1beta1GenesisState = ([a_params, a_lockable_durations, a_distr_info, a_any_pool_to_internal_gauges, a_concentrated_pool_to_no_lock_gauges]) => ({
    params: a_params && expandOsmosisPoolincentivesV1beta1Params(a_params),
    lockable_durations: map(a_lockable_durations, expand_duration),
    distr_info: a_distr_info && expandOsmosisPoolincentivesV1beta1DistrInfo(a_distr_info),
    any_pool_to_internal_gauges: a_any_pool_to_internal_gauges && expandOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges(a_any_pool_to_internal_gauges),
    concentrated_pool_to_no_lock_gauges: a_concentrated_pool_to_no_lock_gauges && expandOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges(a_concentrated_pool_to_no_lock_gauges),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1MigrationRecords}
 */
export const condenseOsmosisPoolincentivesV1beta1MigrationRecords = (g_msg) => encodeOsmosisPoolincentivesV1beta1MigrationRecords(map(g_msg.balancer_to_concentrated_pool_links, condenseOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.MigrationRecords` - contains all the links between balancer and concentrated pools. This is copied over from the gamm proto file in order to circumnavigate the circular dependency between the two modules.
 */
export const expandOsmosisPoolincentivesV1beta1MigrationRecords = ([a_balancer_to_concentrated_pool_links]) => ({
    balancer_to_concentrated_pool_links: a_balancer_to_concentrated_pool_links && map(a_balancer_to_concentrated_pool_links, expandOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink}
 */
export const condenseOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink = (g_msg) => encodeOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink(g_msg.balancer_pool_id, g_msg.cl_pool_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.poolincentives.v1beta1.BalancerToConcentratedPoolLink` - defines a single link between a single balancer pool and a single concentrated liquidity pool. This link is used to allow a balancer pool to migrate to a single canonical full range concentrated liquidity pool position A balancer pool can be linked to a maximum of one cl pool, and a cl pool can be linked to a maximum of one balancer pool. This is copied over from the gamm proto file in order to circumnavigate the circular dependency between the two modules.
 */
export const expandOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink = ([sg_balancer_pool_id, sg_cl_pool_id]) => ({
    balancer_pool_id: sg_balancer_pool_id,
    cl_pool_id: sg_cl_pool_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgSetValidatorSetPreference}
 */
export const condenseOsmosisValsetprefV1beta1MsgSetValidatorSetPreference = (g_msg) => encodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreference(g_msg.delegator, map(g_msg.preferences, condenseOsmosisValsetprefV1beta1ValidatorPreference));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreference` - MsgCreateValidatorSetPreference is a list that holds validator-set.
 */
export const expandOsmosisValsetprefV1beta1MsgSetValidatorSetPreference = ([sa_delegator, a_preferences]) => ({
    delegator: sa_delegator,
    preferences: a_preferences && map(a_preferences, expandOsmosisValsetprefV1beta1ValidatorPreference),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1ValidatorPreference}
 */
export const condenseOsmosisValsetprefV1beta1ValidatorPreference = (g_msg) => encodeOsmosisValsetprefV1beta1ValidatorPreference(g_msg.val_oper_address, g_msg.weight);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.ValidatorPreference` - defines the message structure for CreateValidatorSetPreference. It allows a user to set {val_addr, weight} in state. If a user does not have a validator set preference list set, and has staked, make their preference list default to their current staking distribution.
 */
export const expandOsmosisValsetprefV1beta1ValidatorPreference = ([sa_val_oper, s_weight]) => ({
    val_oper_address: sa_val_oper,
    weight: s_weight,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreferenceResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgDelegateToValidatorSet}
 */
export const condenseOsmosisValsetprefV1beta1MsgDelegateToValidatorSet = (g_msg) => encodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSet(g_msg.delegator, slimify_coin(g_msg.coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSet` - allows users to delegate to an existing validator-set
 */
export const expandOsmosisValsetprefV1beta1MsgDelegateToValidatorSet = ([sa_delegator, a_coin]) => ({
    delegator: sa_delegator,
    coin: a_coin && expand_coin(a_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSetResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet}
 */
export const condenseOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet = (g_msg) => encodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet(g_msg.delegator, slimify_coin(g_msg.coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSet` -
 */
export const expandOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet = ([sa_delegator, , a_coin]) => ({
    delegator: sa_delegator,
    coin: a_coin && expand_coin(a_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSetResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet}
 */
export const condenseOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet = (g_msg) => encodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet(g_msg.delegator, slimify_coin(g_msg.coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSet` -
 */
export const expandOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet = ([sa_delegator, a_coin]) => ({
    delegator: sa_delegator,
    coin: a_coin && expand_coin(a_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSetResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgRedelegateValidatorSet}
 */
export const condenseOsmosisValsetprefV1beta1MsgRedelegateValidatorSet = (g_msg) => encodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSet(g_msg.delegator, map(g_msg.preferences, condenseOsmosisValsetprefV1beta1ValidatorPreference));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSet` -
 */
export const expandOsmosisValsetprefV1beta1MsgRedelegateValidatorSet = ([sa_delegator, a_preferences]) => ({
    delegator: sa_delegator,
    preferences: a_preferences && map(a_preferences, expandOsmosisValsetprefV1beta1ValidatorPreference),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSetResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards}
 */
export const condenseOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards = (g_msg) => encodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards(g_msg.delegator);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewards` - allows user to claim staking rewards from the validator set.
 */
export const expandOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards = ([sa_delegator]) => ({
    delegator: sa_delegator,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewardsResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgDelegateBondedTokens}
 */
export const condenseOsmosisValsetprefV1beta1MsgDelegateBondedTokens = (g_msg) => encodeOsmosisValsetprefV1beta1MsgDelegateBondedTokens(g_msg.delegator, g_msg.lockID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgDelegateBondedTokens` - breaks bonded lockup (by ID) of osmo, of length <= 2 weeks and takes all that osmo and delegates according to delegator's current validator set preference.
 */
export const expandOsmosisValsetprefV1beta1MsgDelegateBondedTokens = ([sa_delegator, sg_lockID]) => ({
    delegator: sa_delegator,
    lockID: sg_lockID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse}
 */
export const condenseOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse = (g_msg) => encodeOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.MsgDelegateBondedTokensResponse` -
 */
export const expandOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1UserValidatorPreferencesRequest}
 */
export const condenseOsmosisValsetprefV1beta1UserValidatorPreferencesRequest = (g_msg) => encodeOsmosisValsetprefV1beta1UserValidatorPreferencesRequest(g_msg.address);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.UserValidatorPreferencesRequest` - Request type for UserValidatorPreferences.
 */
export const expandOsmosisValsetprefV1beta1UserValidatorPreferencesRequest = ([sa_address]) => ({
    address: sa_address,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1UserValidatorPreferencesResponse}
 */
export const condenseOsmosisValsetprefV1beta1UserValidatorPreferencesResponse = (g_msg) => encodeOsmosisValsetprefV1beta1UserValidatorPreferencesResponse(map(g_msg.preferences, condenseOsmosisValsetprefV1beta1ValidatorPreference));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.UserValidatorPreferencesResponse` - Response type the QueryUserValidatorPreferences query request
 */
export const expandOsmosisValsetprefV1beta1UserValidatorPreferencesResponse = ([a_preferences]) => ({
    preferences: a_preferences && map(a_preferences, expandOsmosisValsetprefV1beta1ValidatorPreference),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisValsetprefV1beta1ValidatorSetPreferences}
 */
export const condenseOsmosisValsetprefV1beta1ValidatorSetPreferences = (g_msg) => encodeOsmosisValsetprefV1beta1ValidatorSetPreferences(map(g_msg.preferences, condenseOsmosisValsetprefV1beta1ValidatorPreference));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.valsetpref.v1beta1.ValidatorSetPreferences` - defines a delegator's validator set preference. It contains a list of (validator, percent_allocation) pairs. The percent allocation are arranged in decimal notation from 0 to 1 and must add up to 1.
 */
export const expandOsmosisValsetprefV1beta1ValidatorSetPreferences = ([, a_preferences]) => ({
    preferences: a_preferences && map(a_preferences, expandOsmosisValsetprefV1beta1ValidatorPreference),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgLockTokens}
 */
export const condenseOsmosisLockupMsgLockTokens = (g_msg) => encodeOsmosisLockupMsgLockTokens(g_msg.owner, parse_duration(g_msg.duration), map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgLockTokens` -
 */
export const expandOsmosisLockupMsgLockTokens = ([sa_owner, a_duration, a_coins]) => ({
    owner: sa_owner,
    duration: expand_duration(a_duration),
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgLockTokensResponse}
 */
export const condenseOsmosisLockupMsgLockTokensResponse = (g_msg) => encodeOsmosisLockupMsgLockTokensResponse(g_msg.ID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgLockTokensResponse` -
 */
export const expandOsmosisLockupMsgLockTokensResponse = ([sg_ID]) => ({
    ID: sg_ID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgBeginUnlockingAll}
 */
export const condenseOsmosisLockupMsgBeginUnlockingAll = (g_msg) => encodeOsmosisLockupMsgBeginUnlockingAll(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgBeginUnlockingAll` -
 */
export const expandOsmosisLockupMsgBeginUnlockingAll = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgBeginUnlockingAllResponse}
 */
export const condenseOsmosisLockupMsgBeginUnlockingAllResponse = (g_msg) => encodeOsmosisLockupMsgBeginUnlockingAllResponse(map(g_msg.unlocks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgBeginUnlockingAllResponse` -
 */
export const expandOsmosisLockupMsgBeginUnlockingAllResponse = ([a_unlocks]) => ({
    unlocks: a_unlocks && map(a_unlocks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgBeginUnlocking}
 */
export const condenseOsmosisLockupMsgBeginUnlocking = (g_msg) => encodeOsmosisLockupMsgBeginUnlocking(g_msg.owner, g_msg.ID, map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgBeginUnlocking` -
 */
export const expandOsmosisLockupMsgBeginUnlocking = ([sa_owner, sg_ID, a_coins]) => ({
    owner: sa_owner,
    ID: sg_ID,
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgBeginUnlockingResponse}
 */
export const condenseOsmosisLockupMsgBeginUnlockingResponse = (g_msg) => encodeOsmosisLockupMsgBeginUnlockingResponse(g_msg.success, g_msg.unlockingLockID);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgBeginUnlockingResponse` -
 */
export const expandOsmosisLockupMsgBeginUnlockingResponse = ([b_success, sg_unlockingLockID]) => ({
    success: !!b_success,
    unlockingLockID: sg_unlockingLockID,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgExtendLockup}
 */
export const condenseOsmosisLockupMsgExtendLockup = (g_msg) => encodeOsmosisLockupMsgExtendLockup(g_msg.owner, g_msg.ID, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgExtendLockup` - extends the existing lockup's duration. The new duration is longer than the original.
 */
export const expandOsmosisLockupMsgExtendLockup = ([sa_owner, sg_ID, a_duration]) => ({
    owner: sa_owner,
    ID: sg_ID,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgExtendLockupResponse}
 */
export const condenseOsmosisLockupMsgExtendLockupResponse = (g_msg) => encodeOsmosisLockupMsgExtendLockupResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgExtendLockupResponse` -
 */
export const expandOsmosisLockupMsgExtendLockupResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgForceUnlock}
 */
export const condenseOsmosisLockupMsgForceUnlock = (g_msg) => encodeOsmosisLockupMsgForceUnlock(g_msg.owner, g_msg.ID, map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgForceUnlock` - unlocks locks immediately for addresses registered via governance.
 */
export const expandOsmosisLockupMsgForceUnlock = ([sa_owner, sg_ID, a_coins]) => ({
    owner: sa_owner,
    ID: sg_ID,
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgForceUnlockResponse}
 */
export const condenseOsmosisLockupMsgForceUnlockResponse = (g_msg) => encodeOsmosisLockupMsgForceUnlockResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgForceUnlockResponse` -
 */
export const expandOsmosisLockupMsgForceUnlockResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgSetRewardReceiverAddress}
 */
export const condenseOsmosisLockupMsgSetRewardReceiverAddress = (g_msg) => encodeOsmosisLockupMsgSetRewardReceiverAddress(g_msg.owner, g_msg.lockID, g_msg.reward_receiver);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgSetRewardReceiverAddress` -
 */
export const expandOsmosisLockupMsgSetRewardReceiverAddress = ([sa_owner, sg_lockID, sa_reward_receiver]) => ({
    owner: sa_owner,
    lockID: sg_lockID,
    reward_receiver: sa_reward_receiver,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupMsgSetRewardReceiverAddressResponse}
 */
export const condenseOsmosisLockupMsgSetRewardReceiverAddressResponse = (g_msg) => encodeOsmosisLockupMsgSetRewardReceiverAddressResponse(g_msg.success);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.MsgSetRewardReceiverAddressResponse` -
 */
export const expandOsmosisLockupMsgSetRewardReceiverAddressResponse = ([b_success]) => ({
    success: !!b_success,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupModuleBalanceRequest}
 */
export const condenseOsmosisLockupModuleBalanceRequest = (g_msg) => encodeOsmosisLockupModuleBalanceRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.ModuleBalanceRequest` -
 */
export const expandOsmosisLockupModuleBalanceRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupModuleBalanceResponse}
 */
export const condenseOsmosisLockupModuleBalanceResponse = (g_msg) => encodeOsmosisLockupModuleBalanceResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.ModuleBalanceResponse` -
 */
export const expandOsmosisLockupModuleBalanceResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupModuleLockedAmountRequest}
 */
export const condenseOsmosisLockupModuleLockedAmountRequest = (g_msg) => encodeOsmosisLockupModuleLockedAmountRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.ModuleLockedAmountRequest` -
 */
export const expandOsmosisLockupModuleLockedAmountRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupModuleLockedAmountResponse}
 */
export const condenseOsmosisLockupModuleLockedAmountResponse = (g_msg) => encodeOsmosisLockupModuleLockedAmountResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.ModuleLockedAmountResponse` -
 */
export const expandOsmosisLockupModuleLockedAmountResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockableCoinsRequest}
 */
export const condenseOsmosisLockupAccountUnlockableCoinsRequest = (g_msg) => encodeOsmosisLockupAccountUnlockableCoinsRequest(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockableCoinsRequest` -
 */
export const expandOsmosisLockupAccountUnlockableCoinsRequest = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockableCoinsResponse}
 */
export const condenseOsmosisLockupAccountUnlockableCoinsResponse = (g_msg) => encodeOsmosisLockupAccountUnlockableCoinsResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockableCoinsResponse` -
 */
export const expandOsmosisLockupAccountUnlockableCoinsResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockingCoinsRequest}
 */
export const condenseOsmosisLockupAccountUnlockingCoinsRequest = (g_msg) => encodeOsmosisLockupAccountUnlockingCoinsRequest(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockingCoinsRequest` -
 */
export const expandOsmosisLockupAccountUnlockingCoinsRequest = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockingCoinsResponse}
 */
export const condenseOsmosisLockupAccountUnlockingCoinsResponse = (g_msg) => encodeOsmosisLockupAccountUnlockingCoinsResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockingCoinsResponse` -
 */
export const expandOsmosisLockupAccountUnlockingCoinsResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedCoinsRequest}
 */
export const condenseOsmosisLockupAccountLockedCoinsRequest = (g_msg) => encodeOsmosisLockupAccountLockedCoinsRequest(g_msg.owner);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedCoinsRequest` -
 */
export const expandOsmosisLockupAccountLockedCoinsRequest = ([sa_owner]) => ({
    owner: sa_owner,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedCoinsResponse}
 */
export const condenseOsmosisLockupAccountLockedCoinsResponse = (g_msg) => encodeOsmosisLockupAccountLockedCoinsResponse(map(g_msg.coins, slimify_coin));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedCoinsResponse` -
 */
export const expandOsmosisLockupAccountLockedCoinsResponse = ([a_coins]) => ({
    coins: a_coins && map(a_coins, expand_coin),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeRequest}
 */
export const condenseOsmosisLockupAccountLockedPastTimeRequest = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeRequest(g_msg.owner, parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeRequest` -
 */
export const expandOsmosisLockupAccountLockedPastTimeRequest = ([sa_owner, a_timestamp]) => ({
    owner: sa_owner,
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeResponse}
 */
export const condenseOsmosisLockupAccountLockedPastTimeResponse = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeResponse` -
 */
export const expandOsmosisLockupAccountLockedPastTimeResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest}
 */
export const condenseOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest(g_msg.owner, parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest` -
 */
export const expandOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest = ([sa_owner, a_timestamp]) => ({
    owner: sa_owner,
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse}
 */
export const condenseOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse` -
 */
export const expandOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockedBeforeTimeRequest}
 */
export const condenseOsmosisLockupAccountUnlockedBeforeTimeRequest = (g_msg) => encodeOsmosisLockupAccountUnlockedBeforeTimeRequest(g_msg.owner, parse_timestamp(g_msg.timestamp));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockedBeforeTimeRequest` -
 */
export const expandOsmosisLockupAccountUnlockedBeforeTimeRequest = ([sa_owner, a_timestamp]) => ({
    owner: sa_owner,
    timestamp: expand_timestamp(a_timestamp),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountUnlockedBeforeTimeResponse}
 */
export const condenseOsmosisLockupAccountUnlockedBeforeTimeResponse = (g_msg) => encodeOsmosisLockupAccountUnlockedBeforeTimeResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountUnlockedBeforeTimeResponse` -
 */
export const expandOsmosisLockupAccountUnlockedBeforeTimeResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeDenomRequest}
 */
export const condenseOsmosisLockupAccountLockedPastTimeDenomRequest = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeDenomRequest(g_msg.owner, parse_timestamp(g_msg.timestamp), g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeDenomRequest` -
 */
export const expandOsmosisLockupAccountLockedPastTimeDenomRequest = ([sa_owner, a_timestamp, s_denom]) => ({
    owner: sa_owner,
    timestamp: expand_timestamp(a_timestamp),
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedPastTimeDenomResponse}
 */
export const condenseOsmosisLockupAccountLockedPastTimeDenomResponse = (g_msg) => encodeOsmosisLockupAccountLockedPastTimeDenomResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedPastTimeDenomResponse` -
 */
export const expandOsmosisLockupAccountLockedPastTimeDenomResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockedDenomRequest}
 */
export const condenseOsmosisLockupLockedDenomRequest = (g_msg) => encodeOsmosisLockupLockedDenomRequest(g_msg.denom, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockedDenomRequest` -
 */
export const expandOsmosisLockupLockedDenomRequest = ([s_denom, a_duration]) => ({
    denom: s_denom,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockedDenomResponse}
 */
export const condenseOsmosisLockupLockedDenomResponse = (g_msg) => encodeOsmosisLockupLockedDenomResponse(g_msg.amount);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockedDenomResponse` -
 */
export const expandOsmosisLockupLockedDenomResponse = ([s_amount]) => ({
    amount: s_amount,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockedRequest}
 */
export const condenseOsmosisLockupLockedRequest = (g_msg) => encodeOsmosisLockupLockedRequest(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockedRequest` -
 */
export const expandOsmosisLockupLockedRequest = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockedResponse}
 */
export const condenseOsmosisLockupLockedResponse = (g_msg) => encodeOsmosisLockupLockedResponse(apply_opt(g_msg.lock, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockedResponse` -
 */
export const expandOsmosisLockupLockedResponse = ([a_lock]) => ({
    lock: a_lock && expandOsmosisLockupPeriodLock(a_lock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockRewardReceiverRequest}
 */
export const condenseOsmosisLockupLockRewardReceiverRequest = (g_msg) => encodeOsmosisLockupLockRewardReceiverRequest(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockRewardReceiverRequest` -
 */
export const expandOsmosisLockupLockRewardReceiverRequest = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupLockRewardReceiverResponse}
 */
export const condenseOsmosisLockupLockRewardReceiverResponse = (g_msg) => encodeOsmosisLockupLockRewardReceiverResponse(g_msg.reward_receiver);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.LockRewardReceiverResponse` -
 */
export const expandOsmosisLockupLockRewardReceiverResponse = ([sa_reward_receiver]) => ({
    reward_receiver: sa_reward_receiver,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupNextLockIDRequest}
 */
export const condenseOsmosisLockupNextLockIDRequest = (g_msg) => encodeOsmosisLockupNextLockIDRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.NextLockIDRequest` -
 */
export const expandOsmosisLockupNextLockIDRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupNextLockIDResponse}
 */
export const condenseOsmosisLockupNextLockIDResponse = (g_msg) => encodeOsmosisLockupNextLockIDResponse(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.NextLockIDResponse` -
 */
export const expandOsmosisLockupNextLockIDResponse = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupSyntheticLockupsByLockupIDRequest}
 */
export const condenseOsmosisLockupSyntheticLockupsByLockupIDRequest = (g_msg) => encodeOsmosisLockupSyntheticLockupsByLockupIDRequest(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.SyntheticLockupsByLockupIDRequest` -
 */
export const expandOsmosisLockupSyntheticLockupsByLockupIDRequest = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupSyntheticLockupsByLockupIDResponse}
 */
export const condenseOsmosisLockupSyntheticLockupsByLockupIDResponse = (g_msg) => encodeOsmosisLockupSyntheticLockupsByLockupIDResponse(map(g_msg.synthetic_locks, condenseOsmosisLockupSyntheticLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.SyntheticLockupsByLockupIDResponse` -
 */
export const expandOsmosisLockupSyntheticLockupsByLockupIDResponse = ([a_synthetic_locks]) => ({
    synthetic_locks: a_synthetic_locks && map(a_synthetic_locks, expandOsmosisLockupSyntheticLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupSyntheticLockupByLockupIDRequest}
 */
export const condenseOsmosisLockupSyntheticLockupByLockupIDRequest = (g_msg) => encodeOsmosisLockupSyntheticLockupByLockupIDRequest(g_msg.lock_id);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.SyntheticLockupByLockupIDRequest` -
 */
export const expandOsmosisLockupSyntheticLockupByLockupIDRequest = ([sg_lock_id]) => ({
    lock_id: sg_lock_id,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupSyntheticLockupByLockupIDResponse}
 */
export const condenseOsmosisLockupSyntheticLockupByLockupIDResponse = (g_msg) => encodeOsmosisLockupSyntheticLockupByLockupIDResponse(apply_opt(g_msg.synthetic_lock, condenseOsmosisLockupSyntheticLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.SyntheticLockupByLockupIDResponse` -
 */
export const expandOsmosisLockupSyntheticLockupByLockupIDResponse = ([a_synthetic_lock]) => ({
    synthetic_lock: a_synthetic_lock && expandOsmosisLockupSyntheticLock(a_synthetic_lock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationRequest}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationRequest = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationRequest(g_msg.owner, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationRequest` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationRequest = ([sa_owner, a_duration]) => ({
    owner: sa_owner,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationResponse}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationResponse = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationResponse` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedDurationRequest}
 */
export const condenseOsmosisLockupAccountLockedDurationRequest = (g_msg) => encodeOsmosisLockupAccountLockedDurationRequest(g_msg.owner, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedDurationRequest` -
 */
export const expandOsmosisLockupAccountLockedDurationRequest = ([sa_owner, a_duration]) => ({
    owner: sa_owner,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedDurationResponse}
 */
export const condenseOsmosisLockupAccountLockedDurationResponse = (g_msg) => encodeOsmosisLockupAccountLockedDurationResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedDurationResponse` -
 */
export const expandOsmosisLockupAccountLockedDurationResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest(g_msg.owner, parse_duration(g_msg.duration));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest = ([sa_owner, a_duration]) => ({
    owner: sa_owner,
    duration: expand_duration(a_duration),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationDenomRequest}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationDenomRequest = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationDenomRequest(g_msg.owner, parse_duration(g_msg.duration), g_msg.denom);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationDenomRequest` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationDenomRequest = ([sa_owner, a_duration, s_denom]) => ({
    owner: sa_owner,
    duration: expand_duration(a_duration),
    denom: s_denom,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupAccountLockedLongerDurationDenomResponse}
 */
export const condenseOsmosisLockupAccountLockedLongerDurationDenomResponse = (g_msg) => encodeOsmosisLockupAccountLockedLongerDurationDenomResponse(map(g_msg.locks, condenseOsmosisLockupPeriodLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.AccountLockedLongerDurationDenomResponse` -
 */
export const expandOsmosisLockupAccountLockedLongerDurationDenomResponse = ([a_locks]) => ({
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupQueryParamsRequest}
 */
export const condenseOsmosisLockupQueryParamsRequest = (g_msg) => encodeOsmosisLockupQueryParamsRequest();
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.QueryParamsRequest` -
 */
export const expandOsmosisLockupQueryParamsRequest = () => ({});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupQueryParamsResponse}
 */
export const condenseOsmosisLockupQueryParamsResponse = (g_msg) => encodeOsmosisLockupQueryParamsResponse(apply_opt(g_msg.params, condenseOsmosisLockupParams));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.QueryParamsResponse` -
 */
export const expandOsmosisLockupQueryParamsResponse = ([a_params]) => ({
    params: a_params && expandOsmosisLockupParams(a_params),
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupParams}
 */
export const condenseOsmosisLockupParams = (g_msg) => encodeOsmosisLockupParams(g_msg.force_unlock_allowed_addresses);
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.Params` -
 */
export const expandOsmosisLockupParams = ([a_force_unlock_allowed_addresses]) => ({
    force_unlock_allowed_addresses: a_force_unlock_allowed_addresses,
});
/**
 * Takes the JSON representation of a message and converts it to its protobuf form
 * @returns {@link EncodedOsmosisLockupGenesisState}
 */
export const condenseOsmosisLockupGenesisState = (g_msg) => encodeOsmosisLockupGenesisState(g_msg.last_lock_id, map(g_msg.locks, condenseOsmosisLockupPeriodLock), map(g_msg.synthetic_locks, condenseOsmosisLockupSyntheticLock));
/**
 * Takes the protobuf representation of a message and converts it to its JSON form `osmosis.lockup.GenesisState` - defines the lockup module's genesis state.
 */
export const expandOsmosisLockupGenesisState = ([sg_last_lock_id, a_locks, a_synthetic_locks]) => ({
    last_lock_id: sg_last_lock_id,
    locks: a_locks && map(a_locks, expandOsmosisLockupPeriodLock),
    synthetic_locks: a_synthetic_locks && map(a_synthetic_locks, expandOsmosisLockupSyntheticLock),
});
const H_REGISTRY_ANY = {
    '/tendermint.crypto.Proof': [condenseTendermintCryptoProof, expandTendermintCryptoProof, decodeTendermintCryptoProof],
    '/tendermint.crypto.ValueOp': [condenseTendermintCryptoValueOp, expandTendermintCryptoValueOp, decodeTendermintCryptoValueOp],
    '/tendermint.crypto.DominoOp': [condenseTendermintCryptoDominoOp, expandTendermintCryptoDominoOp, decodeTendermintCryptoDominoOp],
    '/tendermint.crypto.ProofOp': [condenseTendermintCryptoProofOp, expandTendermintCryptoProofOp, decodeTendermintCryptoProofOp],
    '/tendermint.crypto.ProofOps': [condenseTendermintCryptoProofOps, expandTendermintCryptoProofOps, decodeTendermintCryptoProofOps],
    '/tendermint.crypto.PublicKey': [condenseTendermintCryptoPublicKey, expandTendermintCryptoPublicKey, decodeTendermintCryptoPublicKey],
    '/tendermint.abci.Request': [condenseTendermintAbciRequest, expandTendermintAbciRequest, decodeTendermintAbciRequest],
    '/tendermint.abci.RequestEcho': [condenseTendermintAbciRequestEcho, expandTendermintAbciRequestEcho, decodeTendermintAbciRequestEcho],
    '/tendermint.abci.RequestFlush': [condenseTendermintAbciRequestFlush, expandTendermintAbciRequestFlush, decodeTendermintAbciRequestFlush],
    '/tendermint.abci.RequestInfo': [condenseTendermintAbciRequestInfo, expandTendermintAbciRequestInfo, decodeTendermintAbciRequestInfo],
    '/tendermint.abci.RequestInitChain': [condenseTendermintAbciRequestInitChain, expandTendermintAbciRequestInitChain, decodeTendermintAbciRequestInitChain],
    '/tendermint.abci.RequestQuery': [condenseTendermintAbciRequestQuery, expandTendermintAbciRequestQuery, decodeTendermintAbciRequestQuery],
    '/tendermint.abci.RequestCheckTx': [condenseTendermintAbciRequestCheckTx, expandTendermintAbciRequestCheckTx, decodeTendermintAbciRequestCheckTx],
    '/tendermint.abci.RequestCommit': [condenseTendermintAbciRequestCommit, expandTendermintAbciRequestCommit, decodeTendermintAbciRequestCommit],
    '/tendermint.abci.RequestListSnapshots': [condenseTendermintAbciRequestListSnapshots, expandTendermintAbciRequestListSnapshots, decodeTendermintAbciRequestListSnapshots],
    '/tendermint.abci.RequestOfferSnapshot': [condenseTendermintAbciRequestOfferSnapshot, expandTendermintAbciRequestOfferSnapshot, decodeTendermintAbciRequestOfferSnapshot],
    '/tendermint.abci.RequestLoadSnapshotChunk': [condenseTendermintAbciRequestLoadSnapshotChunk, expandTendermintAbciRequestLoadSnapshotChunk, decodeTendermintAbciRequestLoadSnapshotChunk],
    '/tendermint.abci.RequestApplySnapshotChunk': [condenseTendermintAbciRequestApplySnapshotChunk, expandTendermintAbciRequestApplySnapshotChunk, decodeTendermintAbciRequestApplySnapshotChunk],
    '/tendermint.abci.RequestPrepareProposal': [condenseTendermintAbciRequestPrepareProposal, expandTendermintAbciRequestPrepareProposal, decodeTendermintAbciRequestPrepareProposal],
    '/tendermint.abci.RequestProcessProposal': [condenseTendermintAbciRequestProcessProposal, expandTendermintAbciRequestProcessProposal, decodeTendermintAbciRequestProcessProposal],
    '/tendermint.abci.RequestExtendVote': [condenseTendermintAbciRequestExtendVote, expandTendermintAbciRequestExtendVote, decodeTendermintAbciRequestExtendVote],
    '/tendermint.abci.RequestVerifyVoteExtension': [condenseTendermintAbciRequestVerifyVoteExtension, expandTendermintAbciRequestVerifyVoteExtension, decodeTendermintAbciRequestVerifyVoteExtension],
    '/tendermint.abci.RequestFinalizeBlock': [condenseTendermintAbciRequestFinalizeBlock, expandTendermintAbciRequestFinalizeBlock, decodeTendermintAbciRequestFinalizeBlock],
    '/tendermint.abci.Response': [condenseTendermintAbciResponse, expandTendermintAbciResponse, decodeTendermintAbciResponse],
    '/tendermint.abci.ResponseException': [condenseTendermintAbciResponseException, expandTendermintAbciResponseException, decodeTendermintAbciResponseException],
    '/tendermint.abci.ResponseEcho': [condenseTendermintAbciResponseEcho, expandTendermintAbciResponseEcho, decodeTendermintAbciResponseEcho],
    '/tendermint.abci.ResponseFlush': [condenseTendermintAbciResponseFlush, expandTendermintAbciResponseFlush, decodeTendermintAbciResponseFlush],
    '/tendermint.abci.ResponseInfo': [condenseTendermintAbciResponseInfo, expandTendermintAbciResponseInfo, decodeTendermintAbciResponseInfo],
    '/tendermint.abci.ResponseInitChain': [condenseTendermintAbciResponseInitChain, expandTendermintAbciResponseInitChain, decodeTendermintAbciResponseInitChain],
    '/tendermint.abci.ResponseQuery': [condenseTendermintAbciResponseQuery, expandTendermintAbciResponseQuery, decodeTendermintAbciResponseQuery],
    '/tendermint.abci.ResponseCheckTx': [condenseTendermintAbciResponseCheckTx, expandTendermintAbciResponseCheckTx, decodeTendermintAbciResponseCheckTx],
    '/tendermint.abci.ResponseCommit': [condenseTendermintAbciResponseCommit, expandTendermintAbciResponseCommit, decodeTendermintAbciResponseCommit],
    '/tendermint.abci.ResponseListSnapshots': [condenseTendermintAbciResponseListSnapshots, expandTendermintAbciResponseListSnapshots, decodeTendermintAbciResponseListSnapshots],
    '/tendermint.abci.ResponseOfferSnapshot': [condenseTendermintAbciResponseOfferSnapshot, expandTendermintAbciResponseOfferSnapshot, decodeTendermintAbciResponseOfferSnapshot],
    '/tendermint.abci.ResponseLoadSnapshotChunk': [condenseTendermintAbciResponseLoadSnapshotChunk, expandTendermintAbciResponseLoadSnapshotChunk, decodeTendermintAbciResponseLoadSnapshotChunk],
    '/tendermint.abci.ResponseApplySnapshotChunk': [condenseTendermintAbciResponseApplySnapshotChunk, expandTendermintAbciResponseApplySnapshotChunk, decodeTendermintAbciResponseApplySnapshotChunk],
    '/tendermint.abci.ResponsePrepareProposal': [condenseTendermintAbciResponsePrepareProposal, expandTendermintAbciResponsePrepareProposal, decodeTendermintAbciResponsePrepareProposal],
    '/tendermint.abci.ResponseProcessProposal': [condenseTendermintAbciResponseProcessProposal, expandTendermintAbciResponseProcessProposal, decodeTendermintAbciResponseProcessProposal],
    '/tendermint.abci.ResponseExtendVote': [condenseTendermintAbciResponseExtendVote, expandTendermintAbciResponseExtendVote, decodeTendermintAbciResponseExtendVote],
    '/tendermint.abci.ResponseVerifyVoteExtension': [condenseTendermintAbciResponseVerifyVoteExtension, expandTendermintAbciResponseVerifyVoteExtension, decodeTendermintAbciResponseVerifyVoteExtension],
    '/tendermint.abci.ResponseFinalizeBlock': [condenseTendermintAbciResponseFinalizeBlock, expandTendermintAbciResponseFinalizeBlock, decodeTendermintAbciResponseFinalizeBlock],
    '/tendermint.abci.CommitInfo': [condenseTendermintAbciCommitInfo, expandTendermintAbciCommitInfo, decodeTendermintAbciCommitInfo],
    '/tendermint.abci.ExtendedCommitInfo': [condenseTendermintAbciExtendedCommitInfo, expandTendermintAbciExtendedCommitInfo, decodeTendermintAbciExtendedCommitInfo],
    '/tendermint.abci.Event': [condenseTendermintAbciEvent, expandTendermintAbciEvent, decodeTendermintAbciEvent],
    '/tendermint.abci.EventAttribute': [condenseTendermintAbciEventAttribute, expandTendermintAbciEventAttribute, decodeTendermintAbciEventAttribute],
    '/tendermint.abci.ExecTxResult': [condenseTendermintAbciExecTxResult, expandTendermintAbciExecTxResult, decodeTendermintAbciExecTxResult],
    '/tendermint.abci.TxResult': [condenseTendermintAbciTxResult, expandTendermintAbciTxResult, decodeTendermintAbciTxResult],
    '/tendermint.abci.Validator': [condenseTendermintAbciValidator, expandTendermintAbciValidator, decodeTendermintAbciValidator],
    '/tendermint.abci.ValidatorUpdate': [condenseTendermintAbciValidatorUpdate, expandTendermintAbciValidatorUpdate, decodeTendermintAbciValidatorUpdate],
    '/tendermint.abci.VoteInfo': [condenseTendermintAbciVoteInfo, expandTendermintAbciVoteInfo, decodeTendermintAbciVoteInfo],
    '/tendermint.abci.ExtendedVoteInfo': [condenseTendermintAbciExtendedVoteInfo, expandTendermintAbciExtendedVoteInfo, decodeTendermintAbciExtendedVoteInfo],
    '/tendermint.abci.Misbehavior': [condenseTendermintAbciMisbehavior, expandTendermintAbciMisbehavior, decodeTendermintAbciMisbehavior],
    '/tendermint.abci.Snapshot': [condenseTendermintAbciSnapshot, expandTendermintAbciSnapshot, decodeTendermintAbciSnapshot],
    '/tendermint.types.Evidence': [condenseTendermintTypesEvidence, expandTendermintTypesEvidence, decodeTendermintTypesEvidence],
    '/tendermint.types.DuplicateVoteEvidence': [condenseTendermintTypesDuplicateVoteEvidence, expandTendermintTypesDuplicateVoteEvidence, decodeTendermintTypesDuplicateVoteEvidence],
    '/tendermint.types.LightClientAttackEvidence': [condenseTendermintTypesLightClientAttackEvidence, expandTendermintTypesLightClientAttackEvidence, decodeTendermintTypesLightClientAttackEvidence],
    '/tendermint.types.EvidenceList': [condenseTendermintTypesEvidenceList, expandTendermintTypesEvidenceList, decodeTendermintTypesEvidenceList],
    '/tendermint.types.PartSetHeader': [condenseTendermintTypesPartSetHeader, expandTendermintTypesPartSetHeader, decodeTendermintTypesPartSetHeader],
    '/tendermint.types.Part': [condenseTendermintTypesPart, expandTendermintTypesPart, decodeTendermintTypesPart],
    '/tendermint.types.BlockID': [condenseTendermintTypesBlockID, expandTendermintTypesBlockID, decodeTendermintTypesBlockID],
    '/tendermint.types.Header': [condenseTendermintTypesHeader, expandTendermintTypesHeader, decodeTendermintTypesHeader],
    '/tendermint.types.Data': [condenseTendermintTypesData, expandTendermintTypesData, decodeTendermintTypesData],
    '/tendermint.types.Vote': [condenseTendermintTypesVote, expandTendermintTypesVote, decodeTendermintTypesVote],
    '/tendermint.types.Commit': [condenseTendermintTypesCommit, expandTendermintTypesCommit, decodeTendermintTypesCommit],
    '/tendermint.types.CommitSig': [condenseTendermintTypesCommitSig, expandTendermintTypesCommitSig, decodeTendermintTypesCommitSig],
    '/tendermint.types.ExtendedCommit': [condenseTendermintTypesExtendedCommit, expandTendermintTypesExtendedCommit, decodeTendermintTypesExtendedCommit],
    '/tendermint.types.ExtendedCommitSig': [condenseTendermintTypesExtendedCommitSig, expandTendermintTypesExtendedCommitSig, decodeTendermintTypesExtendedCommitSig],
    '/tendermint.types.Proposal': [condenseTendermintTypesProposal, expandTendermintTypesProposal, decodeTendermintTypesProposal],
    '/tendermint.types.SignedHeader': [condenseTendermintTypesSignedHeader, expandTendermintTypesSignedHeader, decodeTendermintTypesSignedHeader],
    '/tendermint.types.LightBlock': [condenseTendermintTypesLightBlock, expandTendermintTypesLightBlock, decodeTendermintTypesLightBlock],
    '/tendermint.types.BlockMeta': [condenseTendermintTypesBlockMeta, expandTendermintTypesBlockMeta, decodeTendermintTypesBlockMeta],
    '/tendermint.types.TxProof': [condenseTendermintTypesTxProof, expandTendermintTypesTxProof, decodeTendermintTypesTxProof],
    '/tendermint.types.ValidatorSet': [condenseTendermintTypesValidatorSet, expandTendermintTypesValidatorSet, decodeTendermintTypesValidatorSet],
    '/tendermint.types.Validator': [condenseTendermintTypesValidator, expandTendermintTypesValidator, decodeTendermintTypesValidator],
    '/tendermint.types.SimpleValidator': [condenseTendermintTypesSimpleValidator, expandTendermintTypesSimpleValidator, decodeTendermintTypesSimpleValidator],
    '/tendermint.types.Block': [condenseTendermintTypesBlock, expandTendermintTypesBlock, decodeTendermintTypesBlock],
    '/tendermint.types.ConsensusParams': [condenseTendermintTypesConsensusParams, expandTendermintTypesConsensusParams, decodeTendermintTypesConsensusParams],
    '/tendermint.types.BlockParams': [condenseTendermintTypesBlockParams, expandTendermintTypesBlockParams, decodeTendermintTypesBlockParams],
    '/tendermint.types.EvidenceParams': [condenseTendermintTypesEvidenceParams, expandTendermintTypesEvidenceParams, decodeTendermintTypesEvidenceParams],
    '/tendermint.types.ValidatorParams': [condenseTendermintTypesValidatorParams, expandTendermintTypesValidatorParams, decodeTendermintTypesValidatorParams],
    '/tendermint.types.VersionParams': [condenseTendermintTypesVersionParams, expandTendermintTypesVersionParams, decodeTendermintTypesVersionParams],
    '/tendermint.types.HashedParams': [condenseTendermintTypesHashedParams, expandTendermintTypesHashedParams, decodeTendermintTypesHashedParams],
    '/tendermint.types.ABCIParams': [condenseTendermintTypesABCIParams, expandTendermintTypesABCIParams, decodeTendermintTypesABCIParams],
    '/tendermint.libs.bits.BitArray': [condenseTendermintLibsBitsBitArray, expandTendermintLibsBitsBitArray, decodeTendermintLibsBitsBitArray],
    '/tendermint.version.App': [condenseTendermintVersionApp, expandTendermintVersionApp, decodeTendermintVersionApp],
    '/tendermint.version.Consensus': [condenseTendermintVersionConsensus, expandTendermintVersionConsensus, decodeTendermintVersionConsensus],
    '/tendermint.p2p.NetAddress': [condenseTendermintP2pNetAddress, expandTendermintP2pNetAddress, decodeTendermintP2pNetAddress],
    '/tendermint.p2p.ProtocolVersion': [condenseTendermintP2pProtocolVersion, expandTendermintP2pProtocolVersion, decodeTendermintP2pProtocolVersion],
    '/tendermint.p2p.DefaultNodeInfo': [condenseTendermintP2pDefaultNodeInfo, expandTendermintP2pDefaultNodeInfo, decodeTendermintP2pDefaultNodeInfo],
    '/tendermint.p2p.DefaultNodeInfoOther': [condenseTendermintP2pDefaultNodeInfoOther, expandTendermintP2pDefaultNodeInfoOther, decodeTendermintP2pDefaultNodeInfoOther],
    '/cosmos.consensus.v1.MsgUpdateParams': [condenseCosmosConsensusV1MsgUpdateParams, expandCosmosConsensusV1MsgUpdateParams, decodeCosmosConsensusV1MsgUpdateParams],
    '/cosmos.consensus.v1.MsgUpdateParamsResponse': [condenseCosmosConsensusV1MsgUpdateParamsResponse, expandCosmosConsensusV1MsgUpdateParamsResponse, decodeCosmosConsensusV1MsgUpdateParamsResponse],
    '/cosmos.consensus.v1.QueryParamsRequest': [condenseCosmosConsensusV1QueryParamsRequest, expandCosmosConsensusV1QueryParamsRequest, decodeCosmosConsensusV1QueryParamsRequest],
    '/cosmos.consensus.v1.QueryParamsResponse': [condenseCosmosConsensusV1QueryParamsResponse, expandCosmosConsensusV1QueryParamsResponse, decodeCosmosConsensusV1QueryParamsResponse],
    '/cosmos.consensus.module.v1.Module': [condenseCosmosConsensusModuleV1Module, expandCosmosConsensusModuleV1Module, decodeCosmosConsensusModuleV1Module],
    '/cosmos.crypto.hd.v1.BIP44Params': [condenseCosmosCryptoHdV1BIP44Params, expandCosmosCryptoHdV1BIP44Params, decodeCosmosCryptoHdV1BIP44Params],
    '/cosmos.crypto.secp256r1.PubKey': [condenseCosmosCryptoSecp256r1PubKey, expandCosmosCryptoSecp256r1PubKey, decodeCosmosCryptoSecp256r1PubKey],
    '/cosmos.crypto.secp256r1.PrivKey': [condenseCosmosCryptoSecp256r1PrivKey, expandCosmosCryptoSecp256r1PrivKey, decodeCosmosCryptoSecp256r1PrivKey],
    '/cosmos.crypto.multisig.v1beta1.MultiSignature': [condenseCosmosCryptoMultisigV1beta1MultiSignature, expandCosmosCryptoMultisigV1beta1MultiSignature, decodeCosmosCryptoMultisigV1beta1MultiSignature],
    '/cosmos.crypto.multisig.v1beta1.CompactBitArray': [condenseCosmosCryptoMultisigV1beta1CompactBitArray, expandCosmosCryptoMultisigV1beta1CompactBitArray, decodeCosmosCryptoMultisigV1beta1CompactBitArray],
    '/cosmos.crypto.multisig.LegacyAminoPubKey': [condenseCosmosCryptoMultisigLegacyAminoPubKey, expandCosmosCryptoMultisigLegacyAminoPubKey, decodeCosmosCryptoMultisigLegacyAminoPubKey],
    '/cosmos.crypto.secp256k1.PubKey': [condenseCosmosCryptoSecp256k1PubKey, expandCosmosCryptoSecp256k1PubKey, decodeCosmosCryptoSecp256k1PubKey],
    '/cosmos.crypto.secp256k1.PrivKey': [condenseCosmosCryptoSecp256k1PrivKey, expandCosmosCryptoSecp256k1PrivKey, decodeCosmosCryptoSecp256k1PrivKey],
    '/cosmos.crypto.keyring.v1.Record': [condenseCosmosCryptoKeyringV1Record, expandCosmosCryptoKeyringV1Record, decodeCosmosCryptoKeyringV1Record],
    '/cosmos.crypto.ed25519.PubKey': [condenseCosmosCryptoEd25519PubKey, expandCosmosCryptoEd25519PubKey, decodeCosmosCryptoEd25519PubKey],
    '/cosmos.crypto.ed25519.PrivKey': [condenseCosmosCryptoEd25519PrivKey, expandCosmosCryptoEd25519PrivKey, decodeCosmosCryptoEd25519PrivKey],
    '/cosmos.upgrade.module.v1.Module': [condenseCosmosUpgradeModuleV1Module, expandCosmosUpgradeModuleV1Module, decodeCosmosUpgradeModuleV1Module],
    '/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade': [condenseCosmosUpgradeV1beta1MsgSoftwareUpgrade, expandCosmosUpgradeV1beta1MsgSoftwareUpgrade, decodeCosmosUpgradeV1beta1MsgSoftwareUpgrade],
    '/cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse': [condenseCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse, expandCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse, decodeCosmosUpgradeV1beta1MsgSoftwareUpgradeResponse],
    '/cosmos.upgrade.v1beta1.MsgCancelUpgrade': [condenseCosmosUpgradeV1beta1MsgCancelUpgrade, expandCosmosUpgradeV1beta1MsgCancelUpgrade, decodeCosmosUpgradeV1beta1MsgCancelUpgrade],
    '/cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse': [condenseCosmosUpgradeV1beta1MsgCancelUpgradeResponse, expandCosmosUpgradeV1beta1MsgCancelUpgradeResponse, decodeCosmosUpgradeV1beta1MsgCancelUpgradeResponse],
    '/cosmos.upgrade.v1beta1.Plan': [condenseCosmosUpgradeV1beta1Plan, expandCosmosUpgradeV1beta1Plan, decodeCosmosUpgradeV1beta1Plan],
    '/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal': [condenseCosmosUpgradeV1beta1SoftwareUpgradeProposal, expandCosmosUpgradeV1beta1SoftwareUpgradeProposal, decodeCosmosUpgradeV1beta1SoftwareUpgradeProposal],
    '/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal': [condenseCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal, expandCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal, decodeCosmosUpgradeV1beta1CancelSoftwareUpgradeProposal],
    '/cosmos.upgrade.v1beta1.ModuleVersion': [condenseCosmosUpgradeV1beta1ModuleVersion, expandCosmosUpgradeV1beta1ModuleVersion, decodeCosmosUpgradeV1beta1ModuleVersion],
    '/cosmos.upgrade.v1beta1.QueryCurrentPlanRequest': [condenseCosmosUpgradeV1beta1QueryCurrentPlanRequest, expandCosmosUpgradeV1beta1QueryCurrentPlanRequest, decodeCosmosUpgradeV1beta1QueryCurrentPlanRequest],
    '/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse': [condenseCosmosUpgradeV1beta1QueryCurrentPlanResponse, expandCosmosUpgradeV1beta1QueryCurrentPlanResponse, decodeCosmosUpgradeV1beta1QueryCurrentPlanResponse],
    '/cosmos.upgrade.v1beta1.QueryAppliedPlanRequest': [condenseCosmosUpgradeV1beta1QueryAppliedPlanRequest, expandCosmosUpgradeV1beta1QueryAppliedPlanRequest, decodeCosmosUpgradeV1beta1QueryAppliedPlanRequest],
    '/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse': [condenseCosmosUpgradeV1beta1QueryAppliedPlanResponse, expandCosmosUpgradeV1beta1QueryAppliedPlanResponse, decodeCosmosUpgradeV1beta1QueryAppliedPlanResponse],
    '/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest': [condenseCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest, expandCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest, decodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateRequest],
    '/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse': [condenseCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse, expandCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse, decodeCosmosUpgradeV1beta1QueryUpgradedConsensusStateResponse],
    '/cosmos.upgrade.v1beta1.QueryModuleVersionsRequest': [condenseCosmosUpgradeV1beta1QueryModuleVersionsRequest, expandCosmosUpgradeV1beta1QueryModuleVersionsRequest, decodeCosmosUpgradeV1beta1QueryModuleVersionsRequest],
    '/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse': [condenseCosmosUpgradeV1beta1QueryModuleVersionsResponse, expandCosmosUpgradeV1beta1QueryModuleVersionsResponse, decodeCosmosUpgradeV1beta1QueryModuleVersionsResponse],
    '/cosmos.upgrade.v1beta1.QueryAuthorityRequest': [condenseCosmosUpgradeV1beta1QueryAuthorityRequest, expandCosmosUpgradeV1beta1QueryAuthorityRequest, decodeCosmosUpgradeV1beta1QueryAuthorityRequest],
    '/cosmos.upgrade.v1beta1.QueryAuthorityResponse': [condenseCosmosUpgradeV1beta1QueryAuthorityResponse, expandCosmosUpgradeV1beta1QueryAuthorityResponse, decodeCosmosUpgradeV1beta1QueryAuthorityResponse],
    '/cosmos.feegrant.module.v1.Module': [condenseCosmosFeegrantModuleV1Module, expandCosmosFeegrantModuleV1Module, decodeCosmosFeegrantModuleV1Module],
    '/cosmos.feegrant.v1beta1.MsgGrantAllowance': [condenseCosmosFeegrantV1beta1MsgGrantAllowance, expandCosmosFeegrantV1beta1MsgGrantAllowance, decodeCosmosFeegrantV1beta1MsgGrantAllowance],
    '/cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse': [condenseCosmosFeegrantV1beta1MsgGrantAllowanceResponse, expandCosmosFeegrantV1beta1MsgGrantAllowanceResponse, decodeCosmosFeegrantV1beta1MsgGrantAllowanceResponse],
    '/cosmos.feegrant.v1beta1.MsgRevokeAllowance': [condenseCosmosFeegrantV1beta1MsgRevokeAllowance, expandCosmosFeegrantV1beta1MsgRevokeAllowance, decodeCosmosFeegrantV1beta1MsgRevokeAllowance],
    '/cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse': [condenseCosmosFeegrantV1beta1MsgRevokeAllowanceResponse, expandCosmosFeegrantV1beta1MsgRevokeAllowanceResponse, decodeCosmosFeegrantV1beta1MsgRevokeAllowanceResponse],
    '/cosmos.feegrant.v1beta1.QueryAllowanceRequest': [condenseCosmosFeegrantV1beta1QueryAllowanceRequest, expandCosmosFeegrantV1beta1QueryAllowanceRequest, decodeCosmosFeegrantV1beta1QueryAllowanceRequest],
    '/cosmos.feegrant.v1beta1.QueryAllowanceResponse': [condenseCosmosFeegrantV1beta1QueryAllowanceResponse, expandCosmosFeegrantV1beta1QueryAllowanceResponse, decodeCosmosFeegrantV1beta1QueryAllowanceResponse],
    '/cosmos.feegrant.v1beta1.QueryAllowancesRequest': [condenseCosmosFeegrantV1beta1QueryAllowancesRequest, expandCosmosFeegrantV1beta1QueryAllowancesRequest, decodeCosmosFeegrantV1beta1QueryAllowancesRequest],
    '/cosmos.feegrant.v1beta1.QueryAllowancesResponse': [condenseCosmosFeegrantV1beta1QueryAllowancesResponse, expandCosmosFeegrantV1beta1QueryAllowancesResponse, decodeCosmosFeegrantV1beta1QueryAllowancesResponse],
    '/cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest': [condenseCosmosFeegrantV1beta1QueryAllowancesByGranterRequest, expandCosmosFeegrantV1beta1QueryAllowancesByGranterRequest, decodeCosmosFeegrantV1beta1QueryAllowancesByGranterRequest],
    '/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse': [condenseCosmosFeegrantV1beta1QueryAllowancesByGranterResponse, expandCosmosFeegrantV1beta1QueryAllowancesByGranterResponse, decodeCosmosFeegrantV1beta1QueryAllowancesByGranterResponse],
    '/cosmos.feegrant.v1beta1.GenesisState': [condenseCosmosFeegrantV1beta1GenesisState, expandCosmosFeegrantV1beta1GenesisState, decodeCosmosFeegrantV1beta1GenesisState],
    '/cosmos.feegrant.v1beta1.BasicAllowance': [condenseCosmosFeegrantV1beta1BasicAllowance, expandCosmosFeegrantV1beta1BasicAllowance, decodeCosmosFeegrantV1beta1BasicAllowance],
    '/cosmos.feegrant.v1beta1.PeriodicAllowance': [condenseCosmosFeegrantV1beta1PeriodicAllowance, expandCosmosFeegrantV1beta1PeriodicAllowance, decodeCosmosFeegrantV1beta1PeriodicAllowance],
    '/cosmos.feegrant.v1beta1.AllowedMsgAllowance': [condenseCosmosFeegrantV1beta1AllowedMsgAllowance, expandCosmosFeegrantV1beta1AllowedMsgAllowance, decodeCosmosFeegrantV1beta1AllowedMsgAllowance],
    '/cosmos.feegrant.v1beta1.Grant': [condenseCosmosFeegrantV1beta1Grant, expandCosmosFeegrantV1beta1Grant, decodeCosmosFeegrantV1beta1Grant],
    '/cosmos.mint.module.v1.Module': [condenseCosmosMintModuleV1Module, expandCosmosMintModuleV1Module, decodeCosmosMintModuleV1Module],
    '/cosmos.mint.v1beta1.MsgUpdateParams': [condenseCosmosMintV1beta1MsgUpdateParams, expandCosmosMintV1beta1MsgUpdateParams, decodeCosmosMintV1beta1MsgUpdateParams],
    '/cosmos.mint.v1beta1.MsgUpdateParamsResponse': [condenseCosmosMintV1beta1MsgUpdateParamsResponse, expandCosmosMintV1beta1MsgUpdateParamsResponse, decodeCosmosMintV1beta1MsgUpdateParamsResponse],
    '/cosmos.mint.v1beta1.QueryParamsRequest': [condenseCosmosMintV1beta1QueryParamsRequest, expandCosmosMintV1beta1QueryParamsRequest, decodeCosmosMintV1beta1QueryParamsRequest],
    '/cosmos.mint.v1beta1.QueryParamsResponse': [condenseCosmosMintV1beta1QueryParamsResponse, expandCosmosMintV1beta1QueryParamsResponse, decodeCosmosMintV1beta1QueryParamsResponse],
    '/cosmos.mint.v1beta1.QueryInflationRequest': [condenseCosmosMintV1beta1QueryInflationRequest, expandCosmosMintV1beta1QueryInflationRequest, decodeCosmosMintV1beta1QueryInflationRequest],
    '/cosmos.mint.v1beta1.QueryInflationResponse': [condenseCosmosMintV1beta1QueryInflationResponse, expandCosmosMintV1beta1QueryInflationResponse, decodeCosmosMintV1beta1QueryInflationResponse],
    '/cosmos.mint.v1beta1.QueryAnnualProvisionsRequest': [condenseCosmosMintV1beta1QueryAnnualProvisionsRequest, expandCosmosMintV1beta1QueryAnnualProvisionsRequest, decodeCosmosMintV1beta1QueryAnnualProvisionsRequest],
    '/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse': [condenseCosmosMintV1beta1QueryAnnualProvisionsResponse, expandCosmosMintV1beta1QueryAnnualProvisionsResponse, decodeCosmosMintV1beta1QueryAnnualProvisionsResponse],
    '/cosmos.mint.v1beta1.GenesisState': [condenseCosmosMintV1beta1GenesisState, expandCosmosMintV1beta1GenesisState, decodeCosmosMintV1beta1GenesisState],
    '/cosmos.mint.v1beta1.Minter': [condenseCosmosMintV1beta1Minter, expandCosmosMintV1beta1Minter, decodeCosmosMintV1beta1Minter],
    '/cosmos.mint.v1beta1.Params': [condenseCosmosMintV1beta1Params, expandCosmosMintV1beta1Params, decodeCosmosMintV1beta1Params],
    '/cosmos.app.runtime.v1alpha1.Module': [condenseCosmosAppRuntimeV1alpha1Module, expandCosmosAppRuntimeV1alpha1Module, decodeCosmosAppRuntimeV1alpha1Module],
    '/cosmos.app.runtime.v1alpha1.StoreKeyConfig': [condenseCosmosAppRuntimeV1alpha1StoreKeyConfig, expandCosmosAppRuntimeV1alpha1StoreKeyConfig, decodeCosmosAppRuntimeV1alpha1StoreKeyConfig],
    '/cosmos.app.v1alpha1.ModuleDescriptor': [condenseCosmosAppV1alpha1ModuleDescriptor, expandCosmosAppV1alpha1ModuleDescriptor, decodeCosmosAppV1alpha1ModuleDescriptor],
    '/cosmos.app.v1alpha1.PackageReference': [condenseCosmosAppV1alpha1PackageReference, expandCosmosAppV1alpha1PackageReference, decodeCosmosAppV1alpha1PackageReference],
    '/cosmos.app.v1alpha1.MigrateFromInfo': [condenseCosmosAppV1alpha1MigrateFromInfo, expandCosmosAppV1alpha1MigrateFromInfo, decodeCosmosAppV1alpha1MigrateFromInfo],
    '/cosmos.app.v1alpha1.QueryConfigRequest': [condenseCosmosAppV1alpha1QueryConfigRequest, expandCosmosAppV1alpha1QueryConfigRequest, decodeCosmosAppV1alpha1QueryConfigRequest],
    '/cosmos.app.v1alpha1.QueryConfigResponse': [condenseCosmosAppV1alpha1QueryConfigResponse, expandCosmosAppV1alpha1QueryConfigResponse, decodeCosmosAppV1alpha1QueryConfigResponse],
    '/cosmos.app.v1alpha1.Config': [condenseCosmosAppV1alpha1Config, expandCosmosAppV1alpha1Config, decodeCosmosAppV1alpha1Config],
    '/cosmos.app.v1alpha1.ModuleConfig': [condenseCosmosAppV1alpha1ModuleConfig, expandCosmosAppV1alpha1ModuleConfig, decodeCosmosAppV1alpha1ModuleConfig],
    '/cosmos.app.v1alpha1.GolangBinding': [condenseCosmosAppV1alpha1GolangBinding, expandCosmosAppV1alpha1GolangBinding, decodeCosmosAppV1alpha1GolangBinding],
    '/cosmos.evidence.module.v1.Module': [condenseCosmosEvidenceModuleV1Module, expandCosmosEvidenceModuleV1Module, decodeCosmosEvidenceModuleV1Module],
    '/cosmos.evidence.v1beta1.MsgSubmitEvidence': [condenseCosmosEvidenceV1beta1MsgSubmitEvidence, expandCosmosEvidenceV1beta1MsgSubmitEvidence, decodeCosmosEvidenceV1beta1MsgSubmitEvidence],
    '/cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse': [condenseCosmosEvidenceV1beta1MsgSubmitEvidenceResponse, expandCosmosEvidenceV1beta1MsgSubmitEvidenceResponse, decodeCosmosEvidenceV1beta1MsgSubmitEvidenceResponse],
    '/cosmos.evidence.v1beta1.Equivocation': [condenseCosmosEvidenceV1beta1Equivocation, expandCosmosEvidenceV1beta1Equivocation, decodeCosmosEvidenceV1beta1Equivocation],
    '/cosmos.evidence.v1beta1.QueryEvidenceRequest': [condenseCosmosEvidenceV1beta1QueryEvidenceRequest, expandCosmosEvidenceV1beta1QueryEvidenceRequest, decodeCosmosEvidenceV1beta1QueryEvidenceRequest],
    '/cosmos.evidence.v1beta1.QueryEvidenceResponse': [condenseCosmosEvidenceV1beta1QueryEvidenceResponse, expandCosmosEvidenceV1beta1QueryEvidenceResponse, decodeCosmosEvidenceV1beta1QueryEvidenceResponse],
    '/cosmos.evidence.v1beta1.QueryAllEvidenceRequest': [condenseCosmosEvidenceV1beta1QueryAllEvidenceRequest, expandCosmosEvidenceV1beta1QueryAllEvidenceRequest, decodeCosmosEvidenceV1beta1QueryAllEvidenceRequest],
    '/cosmos.evidence.v1beta1.QueryAllEvidenceResponse': [condenseCosmosEvidenceV1beta1QueryAllEvidenceResponse, expandCosmosEvidenceV1beta1QueryAllEvidenceResponse, decodeCosmosEvidenceV1beta1QueryAllEvidenceResponse],
    '/cosmos.evidence.v1beta1.GenesisState': [condenseCosmosEvidenceV1beta1GenesisState, expandCosmosEvidenceV1beta1GenesisState, decodeCosmosEvidenceV1beta1GenesisState],
    '/cosmos.nft.module.v1.Module': [condenseCosmosNftModuleV1Module, expandCosmosNftModuleV1Module, decodeCosmosNftModuleV1Module],
    '/cosmos.nft.v1beta1.MsgSend': [condenseCosmosNftV1beta1MsgSend, expandCosmosNftV1beta1MsgSend, decodeCosmosNftV1beta1MsgSend],
    '/cosmos.nft.v1beta1.MsgSendResponse': [condenseCosmosNftV1beta1MsgSendResponse, expandCosmosNftV1beta1MsgSendResponse, decodeCosmosNftV1beta1MsgSendResponse],
    '/cosmos.nft.v1beta1.QueryBalanceRequest': [condenseCosmosNftV1beta1QueryBalanceRequest, expandCosmosNftV1beta1QueryBalanceRequest, decodeCosmosNftV1beta1QueryBalanceRequest],
    '/cosmos.nft.v1beta1.QueryBalanceResponse': [condenseCosmosNftV1beta1QueryBalanceResponse, expandCosmosNftV1beta1QueryBalanceResponse, decodeCosmosNftV1beta1QueryBalanceResponse],
    '/cosmos.nft.v1beta1.QueryOwnerRequest': [condenseCosmosNftV1beta1QueryOwnerRequest, expandCosmosNftV1beta1QueryOwnerRequest, decodeCosmosNftV1beta1QueryOwnerRequest],
    '/cosmos.nft.v1beta1.QueryOwnerResponse': [condenseCosmosNftV1beta1QueryOwnerResponse, expandCosmosNftV1beta1QueryOwnerResponse, decodeCosmosNftV1beta1QueryOwnerResponse],
    '/cosmos.nft.v1beta1.QuerySupplyRequest': [condenseCosmosNftV1beta1QuerySupplyRequest, expandCosmosNftV1beta1QuerySupplyRequest, decodeCosmosNftV1beta1QuerySupplyRequest],
    '/cosmos.nft.v1beta1.QuerySupplyResponse': [condenseCosmosNftV1beta1QuerySupplyResponse, expandCosmosNftV1beta1QuerySupplyResponse, decodeCosmosNftV1beta1QuerySupplyResponse],
    '/cosmos.nft.v1beta1.QueryNFTsRequest': [condenseCosmosNftV1beta1QueryNFTsRequest, expandCosmosNftV1beta1QueryNFTsRequest, decodeCosmosNftV1beta1QueryNFTsRequest],
    '/cosmos.nft.v1beta1.QueryNFTsResponse': [condenseCosmosNftV1beta1QueryNFTsResponse, expandCosmosNftV1beta1QueryNFTsResponse, decodeCosmosNftV1beta1QueryNFTsResponse],
    '/cosmos.nft.v1beta1.QueryNFTRequest': [condenseCosmosNftV1beta1QueryNFTRequest, expandCosmosNftV1beta1QueryNFTRequest, decodeCosmosNftV1beta1QueryNFTRequest],
    '/cosmos.nft.v1beta1.QueryNFTResponse': [condenseCosmosNftV1beta1QueryNFTResponse, expandCosmosNftV1beta1QueryNFTResponse, decodeCosmosNftV1beta1QueryNFTResponse],
    '/cosmos.nft.v1beta1.QueryClassRequest': [condenseCosmosNftV1beta1QueryClassRequest, expandCosmosNftV1beta1QueryClassRequest, decodeCosmosNftV1beta1QueryClassRequest],
    '/cosmos.nft.v1beta1.QueryClassResponse': [condenseCosmosNftV1beta1QueryClassResponse, expandCosmosNftV1beta1QueryClassResponse, decodeCosmosNftV1beta1QueryClassResponse],
    '/cosmos.nft.v1beta1.QueryClassesRequest': [condenseCosmosNftV1beta1QueryClassesRequest, expandCosmosNftV1beta1QueryClassesRequest, decodeCosmosNftV1beta1QueryClassesRequest],
    '/cosmos.nft.v1beta1.QueryClassesResponse': [condenseCosmosNftV1beta1QueryClassesResponse, expandCosmosNftV1beta1QueryClassesResponse, decodeCosmosNftV1beta1QueryClassesResponse],
    '/cosmos.nft.v1beta1.EventSend': [condenseCosmosNftV1beta1EventSend, expandCosmosNftV1beta1EventSend, decodeCosmosNftV1beta1EventSend],
    '/cosmos.nft.v1beta1.EventMint': [condenseCosmosNftV1beta1EventMint, expandCosmosNftV1beta1EventMint, decodeCosmosNftV1beta1EventMint],
    '/cosmos.nft.v1beta1.EventBurn': [condenseCosmosNftV1beta1EventBurn, expandCosmosNftV1beta1EventBurn, decodeCosmosNftV1beta1EventBurn],
    '/cosmos.nft.v1beta1.GenesisState': [condenseCosmosNftV1beta1GenesisState, expandCosmosNftV1beta1GenesisState, decodeCosmosNftV1beta1GenesisState],
    '/cosmos.nft.v1beta1.Entry': [condenseCosmosNftV1beta1Entry, expandCosmosNftV1beta1Entry, decodeCosmosNftV1beta1Entry],
    '/cosmos.nft.v1beta1.Class': [condenseCosmosNftV1beta1Class, expandCosmosNftV1beta1Class, decodeCosmosNftV1beta1Class],
    '/cosmos.nft.v1beta1.NFT': [condenseCosmosNftV1beta1NFT, expandCosmosNftV1beta1NFT, decodeCosmosNftV1beta1NFT],
    '/cosmos.auth.module.v1.Module': [condenseCosmosAuthModuleV1Module, expandCosmosAuthModuleV1Module, decodeCosmosAuthModuleV1Module],
    '/cosmos.auth.module.v1.ModuleAccountPermission': [condenseCosmosAuthModuleV1ModuleAccountPermission, expandCosmosAuthModuleV1ModuleAccountPermission, decodeCosmosAuthModuleV1ModuleAccountPermission],
    '/cosmos.auth.v1beta1.MsgUpdateParams': [condenseCosmosAuthV1beta1MsgUpdateParams, expandCosmosAuthV1beta1MsgUpdateParams, decodeCosmosAuthV1beta1MsgUpdateParams],
    '/cosmos.auth.v1beta1.MsgUpdateParamsResponse': [condenseCosmosAuthV1beta1MsgUpdateParamsResponse, expandCosmosAuthV1beta1MsgUpdateParamsResponse, decodeCosmosAuthV1beta1MsgUpdateParamsResponse],
    '/cosmos.auth.v1beta1.QueryAccountsRequest': [condenseCosmosAuthV1beta1QueryAccountsRequest, expandCosmosAuthV1beta1QueryAccountsRequest, decodeCosmosAuthV1beta1QueryAccountsRequest],
    '/cosmos.auth.v1beta1.QueryAccountsResponse': [condenseCosmosAuthV1beta1QueryAccountsResponse, expandCosmosAuthV1beta1QueryAccountsResponse, decodeCosmosAuthV1beta1QueryAccountsResponse],
    '/cosmos.auth.v1beta1.QueryAccountRequest': [condenseCosmosAuthV1beta1QueryAccountRequest, expandCosmosAuthV1beta1QueryAccountRequest, decodeCosmosAuthV1beta1QueryAccountRequest],
    '/cosmos.auth.v1beta1.QueryAccountResponse': [condenseCosmosAuthV1beta1QueryAccountResponse, expandCosmosAuthV1beta1QueryAccountResponse, decodeCosmosAuthV1beta1QueryAccountResponse],
    '/cosmos.auth.v1beta1.QueryParamsRequest': [condenseCosmosAuthV1beta1QueryParamsRequest, expandCosmosAuthV1beta1QueryParamsRequest, decodeCosmosAuthV1beta1QueryParamsRequest],
    '/cosmos.auth.v1beta1.QueryParamsResponse': [condenseCosmosAuthV1beta1QueryParamsResponse, expandCosmosAuthV1beta1QueryParamsResponse, decodeCosmosAuthV1beta1QueryParamsResponse],
    '/cosmos.auth.v1beta1.QueryModuleAccountsRequest': [condenseCosmosAuthV1beta1QueryModuleAccountsRequest, expandCosmosAuthV1beta1QueryModuleAccountsRequest, decodeCosmosAuthV1beta1QueryModuleAccountsRequest],
    '/cosmos.auth.v1beta1.QueryModuleAccountsResponse': [condenseCosmosAuthV1beta1QueryModuleAccountsResponse, expandCosmosAuthV1beta1QueryModuleAccountsResponse, decodeCosmosAuthV1beta1QueryModuleAccountsResponse],
    '/cosmos.auth.v1beta1.QueryModuleAccountByNameRequest': [condenseCosmosAuthV1beta1QueryModuleAccountByNameRequest, expandCosmosAuthV1beta1QueryModuleAccountByNameRequest, decodeCosmosAuthV1beta1QueryModuleAccountByNameRequest],
    '/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse': [condenseCosmosAuthV1beta1QueryModuleAccountByNameResponse, expandCosmosAuthV1beta1QueryModuleAccountByNameResponse, decodeCosmosAuthV1beta1QueryModuleAccountByNameResponse],
    '/cosmos.auth.v1beta1.Bech32PrefixRequest': [condenseCosmosAuthV1beta1Bech32PrefixRequest, expandCosmosAuthV1beta1Bech32PrefixRequest, decodeCosmosAuthV1beta1Bech32PrefixRequest],
    '/cosmos.auth.v1beta1.Bech32PrefixResponse': [condenseCosmosAuthV1beta1Bech32PrefixResponse, expandCosmosAuthV1beta1Bech32PrefixResponse, decodeCosmosAuthV1beta1Bech32PrefixResponse],
    '/cosmos.auth.v1beta1.AddressBytesToStringRequest': [condenseCosmosAuthV1beta1AddressBytesToStringRequest, expandCosmosAuthV1beta1AddressBytesToStringRequest, decodeCosmosAuthV1beta1AddressBytesToStringRequest],
    '/cosmos.auth.v1beta1.AddressBytesToStringResponse': [condenseCosmosAuthV1beta1AddressBytesToStringResponse, expandCosmosAuthV1beta1AddressBytesToStringResponse, decodeCosmosAuthV1beta1AddressBytesToStringResponse],
    '/cosmos.auth.v1beta1.AddressStringToBytesRequest': [condenseCosmosAuthV1beta1AddressStringToBytesRequest, expandCosmosAuthV1beta1AddressStringToBytesRequest, decodeCosmosAuthV1beta1AddressStringToBytesRequest],
    '/cosmos.auth.v1beta1.AddressStringToBytesResponse': [condenseCosmosAuthV1beta1AddressStringToBytesResponse, expandCosmosAuthV1beta1AddressStringToBytesResponse, decodeCosmosAuthV1beta1AddressStringToBytesResponse],
    '/cosmos.auth.v1beta1.QueryAccountAddressByIDRequest': [condenseCosmosAuthV1beta1QueryAccountAddressByIDRequest, expandCosmosAuthV1beta1QueryAccountAddressByIDRequest, decodeCosmosAuthV1beta1QueryAccountAddressByIDRequest],
    '/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse': [condenseCosmosAuthV1beta1QueryAccountAddressByIDResponse, expandCosmosAuthV1beta1QueryAccountAddressByIDResponse, decodeCosmosAuthV1beta1QueryAccountAddressByIDResponse],
    '/cosmos.auth.v1beta1.QueryAccountInfoRequest': [condenseCosmosAuthV1beta1QueryAccountInfoRequest, expandCosmosAuthV1beta1QueryAccountInfoRequest, decodeCosmosAuthV1beta1QueryAccountInfoRequest],
    '/cosmos.auth.v1beta1.QueryAccountInfoResponse': [condenseCosmosAuthV1beta1QueryAccountInfoResponse, expandCosmosAuthV1beta1QueryAccountInfoResponse, decodeCosmosAuthV1beta1QueryAccountInfoResponse],
    '/cosmos.auth.v1beta1.GenesisState': [condenseCosmosAuthV1beta1GenesisState, expandCosmosAuthV1beta1GenesisState, decodeCosmosAuthV1beta1GenesisState],
    '/cosmos.auth.v1beta1.BaseAccount': [condenseCosmosAuthV1beta1BaseAccount, expandCosmosAuthV1beta1BaseAccount, decodeCosmosAuthV1beta1BaseAccount],
    '/cosmos.auth.v1beta1.ModuleAccount': [condenseCosmosAuthV1beta1ModuleAccount, expandCosmosAuthV1beta1ModuleAccount, decodeCosmosAuthV1beta1ModuleAccount],
    '/cosmos.auth.v1beta1.ModuleCredential': [condenseCosmosAuthV1beta1ModuleCredential, expandCosmosAuthV1beta1ModuleCredential, decodeCosmosAuthV1beta1ModuleCredential],
    '/cosmos.auth.v1beta1.Params': [condenseCosmosAuthV1beta1Params, expandCosmosAuthV1beta1Params, decodeCosmosAuthV1beta1Params],
    '/cosmos.group.v1.MsgCreateGroup': [condenseCosmosGroupV1MsgCreateGroup, expandCosmosGroupV1MsgCreateGroup, decodeCosmosGroupV1MsgCreateGroup],
    '/cosmos.group.v1.MsgCreateGroupResponse': [condenseCosmosGroupV1MsgCreateGroupResponse, expandCosmosGroupV1MsgCreateGroupResponse, decodeCosmosGroupV1MsgCreateGroupResponse],
    '/cosmos.group.v1.MsgUpdateGroupMembers': [condenseCosmosGroupV1MsgUpdateGroupMembers, expandCosmosGroupV1MsgUpdateGroupMembers, decodeCosmosGroupV1MsgUpdateGroupMembers],
    '/cosmos.group.v1.MsgUpdateGroupMembersResponse': [condenseCosmosGroupV1MsgUpdateGroupMembersResponse, expandCosmosGroupV1MsgUpdateGroupMembersResponse, decodeCosmosGroupV1MsgUpdateGroupMembersResponse],
    '/cosmos.group.v1.MsgUpdateGroupAdmin': [condenseCosmosGroupV1MsgUpdateGroupAdmin, expandCosmosGroupV1MsgUpdateGroupAdmin, decodeCosmosGroupV1MsgUpdateGroupAdmin],
    '/cosmos.group.v1.MsgUpdateGroupAdminResponse': [condenseCosmosGroupV1MsgUpdateGroupAdminResponse, expandCosmosGroupV1MsgUpdateGroupAdminResponse, decodeCosmosGroupV1MsgUpdateGroupAdminResponse],
    '/cosmos.group.v1.MsgUpdateGroupMetadata': [condenseCosmosGroupV1MsgUpdateGroupMetadata, expandCosmosGroupV1MsgUpdateGroupMetadata, decodeCosmosGroupV1MsgUpdateGroupMetadata],
    '/cosmos.group.v1.MsgUpdateGroupMetadataResponse': [condenseCosmosGroupV1MsgUpdateGroupMetadataResponse, expandCosmosGroupV1MsgUpdateGroupMetadataResponse, decodeCosmosGroupV1MsgUpdateGroupMetadataResponse],
    '/cosmos.group.v1.MsgCreateGroupPolicy': [condenseCosmosGroupV1MsgCreateGroupPolicy, expandCosmosGroupV1MsgCreateGroupPolicy, decodeCosmosGroupV1MsgCreateGroupPolicy],
    '/cosmos.group.v1.MsgCreateGroupPolicyResponse': [condenseCosmosGroupV1MsgCreateGroupPolicyResponse, expandCosmosGroupV1MsgCreateGroupPolicyResponse, decodeCosmosGroupV1MsgCreateGroupPolicyResponse],
    '/cosmos.group.v1.MsgUpdateGroupPolicyAdmin': [condenseCosmosGroupV1MsgUpdateGroupPolicyAdmin, expandCosmosGroupV1MsgUpdateGroupPolicyAdmin, decodeCosmosGroupV1MsgUpdateGroupPolicyAdmin],
    '/cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse': [condenseCosmosGroupV1MsgUpdateGroupPolicyAdminResponse, expandCosmosGroupV1MsgUpdateGroupPolicyAdminResponse, decodeCosmosGroupV1MsgUpdateGroupPolicyAdminResponse],
    '/cosmos.group.v1.MsgCreateGroupWithPolicy': [condenseCosmosGroupV1MsgCreateGroupWithPolicy, expandCosmosGroupV1MsgCreateGroupWithPolicy, decodeCosmosGroupV1MsgCreateGroupWithPolicy],
    '/cosmos.group.v1.MsgCreateGroupWithPolicyResponse': [condenseCosmosGroupV1MsgCreateGroupWithPolicyResponse, expandCosmosGroupV1MsgCreateGroupWithPolicyResponse, decodeCosmosGroupV1MsgCreateGroupWithPolicyResponse],
    '/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy': [condenseCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy, expandCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy, decodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicy],
    '/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse': [condenseCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse, expandCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse, decodeCosmosGroupV1MsgUpdateGroupPolicyDecisionPolicyResponse],
    '/cosmos.group.v1.MsgUpdateGroupPolicyMetadata': [condenseCosmosGroupV1MsgUpdateGroupPolicyMetadata, expandCosmosGroupV1MsgUpdateGroupPolicyMetadata, decodeCosmosGroupV1MsgUpdateGroupPolicyMetadata],
    '/cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse': [condenseCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse, expandCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse, decodeCosmosGroupV1MsgUpdateGroupPolicyMetadataResponse],
    '/cosmos.group.v1.MsgSubmitProposal': [condenseCosmosGroupV1MsgSubmitProposal, expandCosmosGroupV1MsgSubmitProposal, decodeCosmosGroupV1MsgSubmitProposal],
    '/cosmos.group.v1.MsgSubmitProposalResponse': [condenseCosmosGroupV1MsgSubmitProposalResponse, expandCosmosGroupV1MsgSubmitProposalResponse, decodeCosmosGroupV1MsgSubmitProposalResponse],
    '/cosmos.group.v1.MsgWithdrawProposal': [condenseCosmosGroupV1MsgWithdrawProposal, expandCosmosGroupV1MsgWithdrawProposal, decodeCosmosGroupV1MsgWithdrawProposal],
    '/cosmos.group.v1.MsgWithdrawProposalResponse': [condenseCosmosGroupV1MsgWithdrawProposalResponse, expandCosmosGroupV1MsgWithdrawProposalResponse, decodeCosmosGroupV1MsgWithdrawProposalResponse],
    '/cosmos.group.v1.MsgVote': [condenseCosmosGroupV1MsgVote, expandCosmosGroupV1MsgVote, decodeCosmosGroupV1MsgVote],
    '/cosmos.group.v1.MsgVoteResponse': [condenseCosmosGroupV1MsgVoteResponse, expandCosmosGroupV1MsgVoteResponse, decodeCosmosGroupV1MsgVoteResponse],
    '/cosmos.group.v1.MsgExec': [condenseCosmosGroupV1MsgExec, expandCosmosGroupV1MsgExec, decodeCosmosGroupV1MsgExec],
    '/cosmos.group.v1.MsgExecResponse': [condenseCosmosGroupV1MsgExecResponse, expandCosmosGroupV1MsgExecResponse, decodeCosmosGroupV1MsgExecResponse],
    '/cosmos.group.v1.MsgLeaveGroup': [condenseCosmosGroupV1MsgLeaveGroup, expandCosmosGroupV1MsgLeaveGroup, decodeCosmosGroupV1MsgLeaveGroup],
    '/cosmos.group.v1.MsgLeaveGroupResponse': [condenseCosmosGroupV1MsgLeaveGroupResponse, expandCosmosGroupV1MsgLeaveGroupResponse, decodeCosmosGroupV1MsgLeaveGroupResponse],
    '/cosmos.group.v1.EventCreateGroup': [condenseCosmosGroupV1EventCreateGroup, expandCosmosGroupV1EventCreateGroup, decodeCosmosGroupV1EventCreateGroup],
    '/cosmos.group.v1.EventUpdateGroup': [condenseCosmosGroupV1EventUpdateGroup, expandCosmosGroupV1EventUpdateGroup, decodeCosmosGroupV1EventUpdateGroup],
    '/cosmos.group.v1.EventCreateGroupPolicy': [condenseCosmosGroupV1EventCreateGroupPolicy, expandCosmosGroupV1EventCreateGroupPolicy, decodeCosmosGroupV1EventCreateGroupPolicy],
    '/cosmos.group.v1.EventUpdateGroupPolicy': [condenseCosmosGroupV1EventUpdateGroupPolicy, expandCosmosGroupV1EventUpdateGroupPolicy, decodeCosmosGroupV1EventUpdateGroupPolicy],
    '/cosmos.group.v1.EventSubmitProposal': [condenseCosmosGroupV1EventSubmitProposal, expandCosmosGroupV1EventSubmitProposal, decodeCosmosGroupV1EventSubmitProposal],
    '/cosmos.group.v1.EventWithdrawProposal': [condenseCosmosGroupV1EventWithdrawProposal, expandCosmosGroupV1EventWithdrawProposal, decodeCosmosGroupV1EventWithdrawProposal],
    '/cosmos.group.v1.EventVote': [condenseCosmosGroupV1EventVote, expandCosmosGroupV1EventVote, decodeCosmosGroupV1EventVote],
    '/cosmos.group.v1.EventExec': [condenseCosmosGroupV1EventExec, expandCosmosGroupV1EventExec, decodeCosmosGroupV1EventExec],
    '/cosmos.group.v1.EventLeaveGroup': [condenseCosmosGroupV1EventLeaveGroup, expandCosmosGroupV1EventLeaveGroup, decodeCosmosGroupV1EventLeaveGroup],
    '/cosmos.group.v1.EventProposalPruned': [condenseCosmosGroupV1EventProposalPruned, expandCosmosGroupV1EventProposalPruned, decodeCosmosGroupV1EventProposalPruned],
    '/cosmos.group.v1.Member': [condenseCosmosGroupV1Member, expandCosmosGroupV1Member, decodeCosmosGroupV1Member],
    '/cosmos.group.v1.MemberRequest': [condenseCosmosGroupV1MemberRequest, expandCosmosGroupV1MemberRequest, decodeCosmosGroupV1MemberRequest],
    '/cosmos.group.v1.ThresholdDecisionPolicy': [condenseCosmosGroupV1ThresholdDecisionPolicy, expandCosmosGroupV1ThresholdDecisionPolicy, decodeCosmosGroupV1ThresholdDecisionPolicy],
    '/cosmos.group.v1.PercentageDecisionPolicy': [condenseCosmosGroupV1PercentageDecisionPolicy, expandCosmosGroupV1PercentageDecisionPolicy, decodeCosmosGroupV1PercentageDecisionPolicy],
    '/cosmos.group.v1.DecisionPolicyWindows': [condenseCosmosGroupV1DecisionPolicyWindows, expandCosmosGroupV1DecisionPolicyWindows, decodeCosmosGroupV1DecisionPolicyWindows],
    '/cosmos.group.v1.GroupInfo': [condenseCosmosGroupV1GroupInfo, expandCosmosGroupV1GroupInfo, decodeCosmosGroupV1GroupInfo],
    '/cosmos.group.v1.GroupMember': [condenseCosmosGroupV1GroupMember, expandCosmosGroupV1GroupMember, decodeCosmosGroupV1GroupMember],
    '/cosmos.group.v1.GroupPolicyInfo': [condenseCosmosGroupV1GroupPolicyInfo, expandCosmosGroupV1GroupPolicyInfo, decodeCosmosGroupV1GroupPolicyInfo],
    '/cosmos.group.v1.Proposal': [condenseCosmosGroupV1Proposal, expandCosmosGroupV1Proposal, decodeCosmosGroupV1Proposal],
    '/cosmos.group.v1.TallyResult': [condenseCosmosGroupV1TallyResult, expandCosmosGroupV1TallyResult, decodeCosmosGroupV1TallyResult],
    '/cosmos.group.v1.Vote': [condenseCosmosGroupV1Vote, expandCosmosGroupV1Vote, decodeCosmosGroupV1Vote],
    '/cosmos.group.v1.QueryGroupInfoRequest': [condenseCosmosGroupV1QueryGroupInfoRequest, expandCosmosGroupV1QueryGroupInfoRequest, decodeCosmosGroupV1QueryGroupInfoRequest],
    '/cosmos.group.v1.QueryGroupInfoResponse': [condenseCosmosGroupV1QueryGroupInfoResponse, expandCosmosGroupV1QueryGroupInfoResponse, decodeCosmosGroupV1QueryGroupInfoResponse],
    '/cosmos.group.v1.QueryGroupPolicyInfoRequest': [condenseCosmosGroupV1QueryGroupPolicyInfoRequest, expandCosmosGroupV1QueryGroupPolicyInfoRequest, decodeCosmosGroupV1QueryGroupPolicyInfoRequest],
    '/cosmos.group.v1.QueryGroupPolicyInfoResponse': [condenseCosmosGroupV1QueryGroupPolicyInfoResponse, expandCosmosGroupV1QueryGroupPolicyInfoResponse, decodeCosmosGroupV1QueryGroupPolicyInfoResponse],
    '/cosmos.group.v1.QueryGroupMembersRequest': [condenseCosmosGroupV1QueryGroupMembersRequest, expandCosmosGroupV1QueryGroupMembersRequest, decodeCosmosGroupV1QueryGroupMembersRequest],
    '/cosmos.group.v1.QueryGroupMembersResponse': [condenseCosmosGroupV1QueryGroupMembersResponse, expandCosmosGroupV1QueryGroupMembersResponse, decodeCosmosGroupV1QueryGroupMembersResponse],
    '/cosmos.group.v1.QueryGroupsByAdminRequest': [condenseCosmosGroupV1QueryGroupsByAdminRequest, expandCosmosGroupV1QueryGroupsByAdminRequest, decodeCosmosGroupV1QueryGroupsByAdminRequest],
    '/cosmos.group.v1.QueryGroupsByAdminResponse': [condenseCosmosGroupV1QueryGroupsByAdminResponse, expandCosmosGroupV1QueryGroupsByAdminResponse, decodeCosmosGroupV1QueryGroupsByAdminResponse],
    '/cosmos.group.v1.QueryGroupPoliciesByGroupRequest': [condenseCosmosGroupV1QueryGroupPoliciesByGroupRequest, expandCosmosGroupV1QueryGroupPoliciesByGroupRequest, decodeCosmosGroupV1QueryGroupPoliciesByGroupRequest],
    '/cosmos.group.v1.QueryGroupPoliciesByGroupResponse': [condenseCosmosGroupV1QueryGroupPoliciesByGroupResponse, expandCosmosGroupV1QueryGroupPoliciesByGroupResponse, decodeCosmosGroupV1QueryGroupPoliciesByGroupResponse],
    '/cosmos.group.v1.QueryGroupPoliciesByAdminRequest': [condenseCosmosGroupV1QueryGroupPoliciesByAdminRequest, expandCosmosGroupV1QueryGroupPoliciesByAdminRequest, decodeCosmosGroupV1QueryGroupPoliciesByAdminRequest],
    '/cosmos.group.v1.QueryGroupPoliciesByAdminResponse': [condenseCosmosGroupV1QueryGroupPoliciesByAdminResponse, expandCosmosGroupV1QueryGroupPoliciesByAdminResponse, decodeCosmosGroupV1QueryGroupPoliciesByAdminResponse],
    '/cosmos.group.v1.QueryProposalRequest': [condenseCosmosGroupV1QueryProposalRequest, expandCosmosGroupV1QueryProposalRequest, decodeCosmosGroupV1QueryProposalRequest],
    '/cosmos.group.v1.QueryProposalResponse': [condenseCosmosGroupV1QueryProposalResponse, expandCosmosGroupV1QueryProposalResponse, decodeCosmosGroupV1QueryProposalResponse],
    '/cosmos.group.v1.QueryProposalsByGroupPolicyRequest': [condenseCosmosGroupV1QueryProposalsByGroupPolicyRequest, expandCosmosGroupV1QueryProposalsByGroupPolicyRequest, decodeCosmosGroupV1QueryProposalsByGroupPolicyRequest],
    '/cosmos.group.v1.QueryProposalsByGroupPolicyResponse': [condenseCosmosGroupV1QueryProposalsByGroupPolicyResponse, expandCosmosGroupV1QueryProposalsByGroupPolicyResponse, decodeCosmosGroupV1QueryProposalsByGroupPolicyResponse],
    '/cosmos.group.v1.QueryVoteByProposalVoterRequest': [condenseCosmosGroupV1QueryVoteByProposalVoterRequest, expandCosmosGroupV1QueryVoteByProposalVoterRequest, decodeCosmosGroupV1QueryVoteByProposalVoterRequest],
    '/cosmos.group.v1.QueryVoteByProposalVoterResponse': [condenseCosmosGroupV1QueryVoteByProposalVoterResponse, expandCosmosGroupV1QueryVoteByProposalVoterResponse, decodeCosmosGroupV1QueryVoteByProposalVoterResponse],
    '/cosmos.group.v1.QueryVotesByProposalRequest': [condenseCosmosGroupV1QueryVotesByProposalRequest, expandCosmosGroupV1QueryVotesByProposalRequest, decodeCosmosGroupV1QueryVotesByProposalRequest],
    '/cosmos.group.v1.QueryVotesByProposalResponse': [condenseCosmosGroupV1QueryVotesByProposalResponse, expandCosmosGroupV1QueryVotesByProposalResponse, decodeCosmosGroupV1QueryVotesByProposalResponse],
    '/cosmos.group.v1.QueryVotesByVoterRequest': [condenseCosmosGroupV1QueryVotesByVoterRequest, expandCosmosGroupV1QueryVotesByVoterRequest, decodeCosmosGroupV1QueryVotesByVoterRequest],
    '/cosmos.group.v1.QueryVotesByVoterResponse': [condenseCosmosGroupV1QueryVotesByVoterResponse, expandCosmosGroupV1QueryVotesByVoterResponse, decodeCosmosGroupV1QueryVotesByVoterResponse],
    '/cosmos.group.v1.QueryGroupsByMemberRequest': [condenseCosmosGroupV1QueryGroupsByMemberRequest, expandCosmosGroupV1QueryGroupsByMemberRequest, decodeCosmosGroupV1QueryGroupsByMemberRequest],
    '/cosmos.group.v1.QueryGroupsByMemberResponse': [condenseCosmosGroupV1QueryGroupsByMemberResponse, expandCosmosGroupV1QueryGroupsByMemberResponse, decodeCosmosGroupV1QueryGroupsByMemberResponse],
    '/cosmos.group.v1.QueryTallyResultRequest': [condenseCosmosGroupV1QueryTallyResultRequest, expandCosmosGroupV1QueryTallyResultRequest, decodeCosmosGroupV1QueryTallyResultRequest],
    '/cosmos.group.v1.QueryTallyResultResponse': [condenseCosmosGroupV1QueryTallyResultResponse, expandCosmosGroupV1QueryTallyResultResponse, decodeCosmosGroupV1QueryTallyResultResponse],
    '/cosmos.group.v1.QueryGroupsRequest': [condenseCosmosGroupV1QueryGroupsRequest, expandCosmosGroupV1QueryGroupsRequest, decodeCosmosGroupV1QueryGroupsRequest],
    '/cosmos.group.v1.QueryGroupsResponse': [condenseCosmosGroupV1QueryGroupsResponse, expandCosmosGroupV1QueryGroupsResponse, decodeCosmosGroupV1QueryGroupsResponse],
    '/cosmos.group.v1.GenesisState': [condenseCosmosGroupV1GenesisState, expandCosmosGroupV1GenesisState, decodeCosmosGroupV1GenesisState],
    '/cosmos.group.module.v1.Module': [condenseCosmosGroupModuleV1Module, expandCosmosGroupModuleV1Module, decodeCosmosGroupModuleV1Module],
    '/cosmos.ics23.v1.ExistenceProof': [condenseCosmosIcs23V1ExistenceProof, expandCosmosIcs23V1ExistenceProof, decodeCosmosIcs23V1ExistenceProof],
    '/cosmos.ics23.v1.NonExistenceProof': [condenseCosmosIcs23V1NonExistenceProof, expandCosmosIcs23V1NonExistenceProof, decodeCosmosIcs23V1NonExistenceProof],
    '/cosmos.ics23.v1.CommitmentProof': [condenseCosmosIcs23V1CommitmentProof, expandCosmosIcs23V1CommitmentProof, decodeCosmosIcs23V1CommitmentProof],
    '/cosmos.ics23.v1.LeafOp': [condenseCosmosIcs23V1LeafOp, expandCosmosIcs23V1LeafOp, decodeCosmosIcs23V1LeafOp],
    '/cosmos.ics23.v1.InnerOp': [condenseCosmosIcs23V1InnerOp, expandCosmosIcs23V1InnerOp, decodeCosmosIcs23V1InnerOp],
    '/cosmos.ics23.v1.ProofSpec': [condenseCosmosIcs23V1ProofSpec, expandCosmosIcs23V1ProofSpec, decodeCosmosIcs23V1ProofSpec],
    '/cosmos.ics23.v1.InnerSpec': [condenseCosmosIcs23V1InnerSpec, expandCosmosIcs23V1InnerSpec, decodeCosmosIcs23V1InnerSpec],
    '/cosmos.ics23.v1.BatchProof': [condenseCosmosIcs23V1BatchProof, expandCosmosIcs23V1BatchProof, decodeCosmosIcs23V1BatchProof],
    '/cosmos.ics23.v1.BatchEntry': [condenseCosmosIcs23V1BatchEntry, expandCosmosIcs23V1BatchEntry, decodeCosmosIcs23V1BatchEntry],
    '/cosmos.ics23.v1.CompressedBatchProof': [condenseCosmosIcs23V1CompressedBatchProof, expandCosmosIcs23V1CompressedBatchProof, decodeCosmosIcs23V1CompressedBatchProof],
    '/cosmos.ics23.v1.CompressedBatchEntry': [condenseCosmosIcs23V1CompressedBatchEntry, expandCosmosIcs23V1CompressedBatchEntry, decodeCosmosIcs23V1CompressedBatchEntry],
    '/cosmos.ics23.v1.CompressedExistenceProof': [condenseCosmosIcs23V1CompressedExistenceProof, expandCosmosIcs23V1CompressedExistenceProof, decodeCosmosIcs23V1CompressedExistenceProof],
    '/cosmos.ics23.v1.CompressedNonExistenceProof': [condenseCosmosIcs23V1CompressedNonExistenceProof, expandCosmosIcs23V1CompressedNonExistenceProof, decodeCosmosIcs23V1CompressedNonExistenceProof],
    '/cosmos.bank.module.v1.Module': [condenseCosmosBankModuleV1Module, expandCosmosBankModuleV1Module, decodeCosmosBankModuleV1Module],
    '/cosmos.bank.v1beta1.MsgSend': [condenseCosmosBankV1beta1MsgSend, expandCosmosBankV1beta1MsgSend, decodeCosmosBankV1beta1MsgSend],
    '/cosmos.bank.v1beta1.MsgSendResponse': [condenseCosmosBankV1beta1MsgSendResponse, expandCosmosBankV1beta1MsgSendResponse, decodeCosmosBankV1beta1MsgSendResponse],
    '/cosmos.bank.v1beta1.MsgMultiSend': [condenseCosmosBankV1beta1MsgMultiSend, expandCosmosBankV1beta1MsgMultiSend, decodeCosmosBankV1beta1MsgMultiSend],
    '/cosmos.bank.v1beta1.MsgMultiSendResponse': [condenseCosmosBankV1beta1MsgMultiSendResponse, expandCosmosBankV1beta1MsgMultiSendResponse, decodeCosmosBankV1beta1MsgMultiSendResponse],
    '/cosmos.bank.v1beta1.MsgUpdateParams': [condenseCosmosBankV1beta1MsgUpdateParams, expandCosmosBankV1beta1MsgUpdateParams, decodeCosmosBankV1beta1MsgUpdateParams],
    '/cosmos.bank.v1beta1.MsgUpdateParamsResponse': [condenseCosmosBankV1beta1MsgUpdateParamsResponse, expandCosmosBankV1beta1MsgUpdateParamsResponse, decodeCosmosBankV1beta1MsgUpdateParamsResponse],
    '/cosmos.bank.v1beta1.MsgSetSendEnabled': [condenseCosmosBankV1beta1MsgSetSendEnabled, expandCosmosBankV1beta1MsgSetSendEnabled, decodeCosmosBankV1beta1MsgSetSendEnabled],
    '/cosmos.bank.v1beta1.MsgSetSendEnabledResponse': [condenseCosmosBankV1beta1MsgSetSendEnabledResponse, expandCosmosBankV1beta1MsgSetSendEnabledResponse, decodeCosmosBankV1beta1MsgSetSendEnabledResponse],
    '/cosmos.bank.v1beta1.MsgBurn': [condenseCosmosBankV1beta1MsgBurn, expandCosmosBankV1beta1MsgBurn, decodeCosmosBankV1beta1MsgBurn],
    '/cosmos.bank.v1beta1.MsgBurnResponse': [condenseCosmosBankV1beta1MsgBurnResponse, expandCosmosBankV1beta1MsgBurnResponse, decodeCosmosBankV1beta1MsgBurnResponse],
    '/cosmos.bank.v1beta1.Params': [condenseCosmosBankV1beta1Params, expandCosmosBankV1beta1Params, decodeCosmosBankV1beta1Params],
    '/cosmos.bank.v1beta1.SendEnabled': [condenseCosmosBankV1beta1SendEnabled, expandCosmosBankV1beta1SendEnabled, decodeCosmosBankV1beta1SendEnabled],
    '/cosmos.bank.v1beta1.Input': [condenseCosmosBankV1beta1Input, expandCosmosBankV1beta1Input, decodeCosmosBankV1beta1Input],
    '/cosmos.bank.v1beta1.Output': [condenseCosmosBankV1beta1Output, expandCosmosBankV1beta1Output, decodeCosmosBankV1beta1Output],
    '/cosmos.bank.v1beta1.Supply': [condenseCosmosBankV1beta1Supply, expandCosmosBankV1beta1Supply, decodeCosmosBankV1beta1Supply],
    '/cosmos.bank.v1beta1.DenomUnit': [condenseCosmosBankV1beta1DenomUnit, expandCosmosBankV1beta1DenomUnit, decodeCosmosBankV1beta1DenomUnit],
    '/cosmos.bank.v1beta1.Metadata': [condenseCosmosBankV1beta1Metadata, expandCosmosBankV1beta1Metadata, decodeCosmosBankV1beta1Metadata],
    '/cosmos.bank.v1beta1.QueryBalanceRequest': [condenseCosmosBankV1beta1QueryBalanceRequest, expandCosmosBankV1beta1QueryBalanceRequest, decodeCosmosBankV1beta1QueryBalanceRequest],
    '/cosmos.bank.v1beta1.QueryBalanceResponse': [condenseCosmosBankV1beta1QueryBalanceResponse, expandCosmosBankV1beta1QueryBalanceResponse, decodeCosmosBankV1beta1QueryBalanceResponse],
    '/cosmos.bank.v1beta1.QueryAllBalancesRequest': [condenseCosmosBankV1beta1QueryAllBalancesRequest, expandCosmosBankV1beta1QueryAllBalancesRequest, decodeCosmosBankV1beta1QueryAllBalancesRequest],
    '/cosmos.bank.v1beta1.QueryAllBalancesResponse': [condenseCosmosBankV1beta1QueryAllBalancesResponse, expandCosmosBankV1beta1QueryAllBalancesResponse, decodeCosmosBankV1beta1QueryAllBalancesResponse],
    '/cosmos.bank.v1beta1.QuerySpendableBalancesRequest': [condenseCosmosBankV1beta1QuerySpendableBalancesRequest, expandCosmosBankV1beta1QuerySpendableBalancesRequest, decodeCosmosBankV1beta1QuerySpendableBalancesRequest],
    '/cosmos.bank.v1beta1.QuerySpendableBalancesResponse': [condenseCosmosBankV1beta1QuerySpendableBalancesResponse, expandCosmosBankV1beta1QuerySpendableBalancesResponse, decodeCosmosBankV1beta1QuerySpendableBalancesResponse],
    '/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest': [condenseCosmosBankV1beta1QuerySpendableBalanceByDenomRequest, expandCosmosBankV1beta1QuerySpendableBalanceByDenomRequest, decodeCosmosBankV1beta1QuerySpendableBalanceByDenomRequest],
    '/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse': [condenseCosmosBankV1beta1QuerySpendableBalanceByDenomResponse, expandCosmosBankV1beta1QuerySpendableBalanceByDenomResponse, decodeCosmosBankV1beta1QuerySpendableBalanceByDenomResponse],
    '/cosmos.bank.v1beta1.QueryTotalSupplyRequest': [condenseCosmosBankV1beta1QueryTotalSupplyRequest, expandCosmosBankV1beta1QueryTotalSupplyRequest, decodeCosmosBankV1beta1QueryTotalSupplyRequest],
    '/cosmos.bank.v1beta1.QueryTotalSupplyResponse': [condenseCosmosBankV1beta1QueryTotalSupplyResponse, expandCosmosBankV1beta1QueryTotalSupplyResponse, decodeCosmosBankV1beta1QueryTotalSupplyResponse],
    '/cosmos.bank.v1beta1.QuerySupplyOfRequest': [condenseCosmosBankV1beta1QuerySupplyOfRequest, expandCosmosBankV1beta1QuerySupplyOfRequest, decodeCosmosBankV1beta1QuerySupplyOfRequest],
    '/cosmos.bank.v1beta1.QuerySupplyOfResponse': [condenseCosmosBankV1beta1QuerySupplyOfResponse, expandCosmosBankV1beta1QuerySupplyOfResponse, decodeCosmosBankV1beta1QuerySupplyOfResponse],
    '/cosmos.bank.v1beta1.QueryParamsRequest': [condenseCosmosBankV1beta1QueryParamsRequest, expandCosmosBankV1beta1QueryParamsRequest, decodeCosmosBankV1beta1QueryParamsRequest],
    '/cosmos.bank.v1beta1.QueryParamsResponse': [condenseCosmosBankV1beta1QueryParamsResponse, expandCosmosBankV1beta1QueryParamsResponse, decodeCosmosBankV1beta1QueryParamsResponse],
    '/cosmos.bank.v1beta1.QueryDenomsMetadataRequest': [condenseCosmosBankV1beta1QueryDenomsMetadataRequest, expandCosmosBankV1beta1QueryDenomsMetadataRequest, decodeCosmosBankV1beta1QueryDenomsMetadataRequest],
    '/cosmos.bank.v1beta1.QueryDenomsMetadataResponse': [condenseCosmosBankV1beta1QueryDenomsMetadataResponse, expandCosmosBankV1beta1QueryDenomsMetadataResponse, decodeCosmosBankV1beta1QueryDenomsMetadataResponse],
    '/cosmos.bank.v1beta1.QueryDenomMetadataRequest': [condenseCosmosBankV1beta1QueryDenomMetadataRequest, expandCosmosBankV1beta1QueryDenomMetadataRequest, decodeCosmosBankV1beta1QueryDenomMetadataRequest],
    '/cosmos.bank.v1beta1.QueryDenomMetadataResponse': [condenseCosmosBankV1beta1QueryDenomMetadataResponse, expandCosmosBankV1beta1QueryDenomMetadataResponse, decodeCosmosBankV1beta1QueryDenomMetadataResponse],
    '/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest': [condenseCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest, expandCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest, decodeCosmosBankV1beta1QueryDenomMetadataByQueryStringRequest],
    '/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse': [condenseCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse, expandCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse, decodeCosmosBankV1beta1QueryDenomMetadataByQueryStringResponse],
    '/cosmos.bank.v1beta1.QueryDenomOwnersRequest': [condenseCosmosBankV1beta1QueryDenomOwnersRequest, expandCosmosBankV1beta1QueryDenomOwnersRequest, decodeCosmosBankV1beta1QueryDenomOwnersRequest],
    '/cosmos.bank.v1beta1.DenomOwner': [condenseCosmosBankV1beta1DenomOwner, expandCosmosBankV1beta1DenomOwner, decodeCosmosBankV1beta1DenomOwner],
    '/cosmos.bank.v1beta1.QueryDenomOwnersResponse': [condenseCosmosBankV1beta1QueryDenomOwnersResponse, expandCosmosBankV1beta1QueryDenomOwnersResponse, decodeCosmosBankV1beta1QueryDenomOwnersResponse],
    '/cosmos.bank.v1beta1.QuerySendEnabledRequest': [condenseCosmosBankV1beta1QuerySendEnabledRequest, expandCosmosBankV1beta1QuerySendEnabledRequest, decodeCosmosBankV1beta1QuerySendEnabledRequest],
    '/cosmos.bank.v1beta1.QuerySendEnabledResponse': [condenseCosmosBankV1beta1QuerySendEnabledResponse, expandCosmosBankV1beta1QuerySendEnabledResponse, decodeCosmosBankV1beta1QuerySendEnabledResponse],
    '/cosmos.bank.v1beta1.SendAuthorization': [condenseCosmosBankV1beta1SendAuthorization, expandCosmosBankV1beta1SendAuthorization, decodeCosmosBankV1beta1SendAuthorization],
    '/cosmos.bank.v1beta1.GenesisState': [condenseCosmosBankV1beta1GenesisState, expandCosmosBankV1beta1GenesisState, decodeCosmosBankV1beta1GenesisState],
    '/cosmos.bank.v1beta1.Balance': [condenseCosmosBankV1beta1Balance, expandCosmosBankV1beta1Balance, decodeCosmosBankV1beta1Balance],
    '/cosmos.circuit.v1.MsgAuthorizeCircuitBreaker': [condenseCosmosCircuitV1MsgAuthorizeCircuitBreaker, expandCosmosCircuitV1MsgAuthorizeCircuitBreaker, decodeCosmosCircuitV1MsgAuthorizeCircuitBreaker],
    '/cosmos.circuit.v1.MsgAuthorizeCircuitBreakerResponse': [condenseCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse, expandCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse, decodeCosmosCircuitV1MsgAuthorizeCircuitBreakerResponse],
    '/cosmos.circuit.v1.MsgTripCircuitBreaker': [condenseCosmosCircuitV1MsgTripCircuitBreaker, expandCosmosCircuitV1MsgTripCircuitBreaker, decodeCosmosCircuitV1MsgTripCircuitBreaker],
    '/cosmos.circuit.v1.MsgTripCircuitBreakerResponse': [condenseCosmosCircuitV1MsgTripCircuitBreakerResponse, expandCosmosCircuitV1MsgTripCircuitBreakerResponse, decodeCosmosCircuitV1MsgTripCircuitBreakerResponse],
    '/cosmos.circuit.v1.MsgResetCircuitBreaker': [condenseCosmosCircuitV1MsgResetCircuitBreaker, expandCosmosCircuitV1MsgResetCircuitBreaker, decodeCosmosCircuitV1MsgResetCircuitBreaker],
    '/cosmos.circuit.v1.MsgResetCircuitBreakerResponse': [condenseCosmosCircuitV1MsgResetCircuitBreakerResponse, expandCosmosCircuitV1MsgResetCircuitBreakerResponse, decodeCosmosCircuitV1MsgResetCircuitBreakerResponse],
    '/cosmos.circuit.v1.Permissions': [condenseCosmosCircuitV1Permissions, expandCosmosCircuitV1Permissions, decodeCosmosCircuitV1Permissions],
    '/cosmos.circuit.v1.GenesisAccountPermissions': [condenseCosmosCircuitV1GenesisAccountPermissions, expandCosmosCircuitV1GenesisAccountPermissions, decodeCosmosCircuitV1GenesisAccountPermissions],
    '/cosmos.circuit.v1.GenesisState': [condenseCosmosCircuitV1GenesisState, expandCosmosCircuitV1GenesisState, decodeCosmosCircuitV1GenesisState],
    '/cosmos.circuit.v1.QueryAccountRequest': [condenseCosmosCircuitV1QueryAccountRequest, expandCosmosCircuitV1QueryAccountRequest, decodeCosmosCircuitV1QueryAccountRequest],
    '/cosmos.circuit.v1.AccountResponse': [condenseCosmosCircuitV1AccountResponse, expandCosmosCircuitV1AccountResponse, decodeCosmosCircuitV1AccountResponse],
    '/cosmos.circuit.v1.QueryAccountsRequest': [condenseCosmosCircuitV1QueryAccountsRequest, expandCosmosCircuitV1QueryAccountsRequest, decodeCosmosCircuitV1QueryAccountsRequest],
    '/cosmos.circuit.v1.AccountsResponse': [condenseCosmosCircuitV1AccountsResponse, expandCosmosCircuitV1AccountsResponse, decodeCosmosCircuitV1AccountsResponse],
    '/cosmos.circuit.v1.QueryDisabledListRequest': [condenseCosmosCircuitV1QueryDisabledListRequest, expandCosmosCircuitV1QueryDisabledListRequest, decodeCosmosCircuitV1QueryDisabledListRequest],
    '/cosmos.circuit.v1.DisabledListResponse': [condenseCosmosCircuitV1DisabledListResponse, expandCosmosCircuitV1DisabledListResponse, decodeCosmosCircuitV1DisabledListResponse],
    '/cosmos.circuit.module.v1.Module': [condenseCosmosCircuitModuleV1Module, expandCosmosCircuitModuleV1Module, decodeCosmosCircuitModuleV1Module],
    '/cosmos.distribution.module.v1.Module': [condenseCosmosDistributionModuleV1Module, expandCosmosDistributionModuleV1Module, decodeCosmosDistributionModuleV1Module],
    '/cosmos.distribution.v1beta1.MsgSetWithdrawAddress': [condenseCosmosDistributionV1beta1MsgSetWithdrawAddress, expandCosmosDistributionV1beta1MsgSetWithdrawAddress, decodeCosmosDistributionV1beta1MsgSetWithdrawAddress],
    '/cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse': [condenseCosmosDistributionV1beta1MsgSetWithdrawAddressResponse, expandCosmosDistributionV1beta1MsgSetWithdrawAddressResponse, decodeCosmosDistributionV1beta1MsgSetWithdrawAddressResponse],
    '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward': [condenseCosmosDistributionV1beta1MsgWithdrawDelegatorReward, expandCosmosDistributionV1beta1MsgWithdrawDelegatorReward, decodeCosmosDistributionV1beta1MsgWithdrawDelegatorReward],
    '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse': [condenseCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse, expandCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse, decodeCosmosDistributionV1beta1MsgWithdrawDelegatorRewardResponse],
    '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission': [condenseCosmosDistributionV1beta1MsgWithdrawValidatorCommission, expandCosmosDistributionV1beta1MsgWithdrawValidatorCommission, decodeCosmosDistributionV1beta1MsgWithdrawValidatorCommission],
    '/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse': [condenseCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse, expandCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse, decodeCosmosDistributionV1beta1MsgWithdrawValidatorCommissionResponse],
    '/cosmos.distribution.v1beta1.MsgFundCommunityPool': [condenseCosmosDistributionV1beta1MsgFundCommunityPool, expandCosmosDistributionV1beta1MsgFundCommunityPool, decodeCosmosDistributionV1beta1MsgFundCommunityPool],
    '/cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse': [condenseCosmosDistributionV1beta1MsgFundCommunityPoolResponse, expandCosmosDistributionV1beta1MsgFundCommunityPoolResponse, decodeCosmosDistributionV1beta1MsgFundCommunityPoolResponse],
    '/cosmos.distribution.v1beta1.MsgUpdateParams': [condenseCosmosDistributionV1beta1MsgUpdateParams, expandCosmosDistributionV1beta1MsgUpdateParams, decodeCosmosDistributionV1beta1MsgUpdateParams],
    '/cosmos.distribution.v1beta1.MsgUpdateParamsResponse': [condenseCosmosDistributionV1beta1MsgUpdateParamsResponse, expandCosmosDistributionV1beta1MsgUpdateParamsResponse, decodeCosmosDistributionV1beta1MsgUpdateParamsResponse],
    '/cosmos.distribution.v1beta1.MsgCommunityPoolSpend': [condenseCosmosDistributionV1beta1MsgCommunityPoolSpend, expandCosmosDistributionV1beta1MsgCommunityPoolSpend, decodeCosmosDistributionV1beta1MsgCommunityPoolSpend],
    '/cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse': [condenseCosmosDistributionV1beta1MsgCommunityPoolSpendResponse, expandCosmosDistributionV1beta1MsgCommunityPoolSpendResponse, decodeCosmosDistributionV1beta1MsgCommunityPoolSpendResponse],
    '/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool': [condenseCosmosDistributionV1beta1MsgDepositValidatorRewardsPool, expandCosmosDistributionV1beta1MsgDepositValidatorRewardsPool, decodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPool],
    '/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse': [condenseCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse, expandCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse, decodeCosmosDistributionV1beta1MsgDepositValidatorRewardsPoolResponse],
    '/cosmos.distribution.v1beta1.Params': [condenseCosmosDistributionV1beta1Params, expandCosmosDistributionV1beta1Params, decodeCosmosDistributionV1beta1Params],
    '/cosmos.distribution.v1beta1.ValidatorHistoricalRewards': [condenseCosmosDistributionV1beta1ValidatorHistoricalRewards, expandCosmosDistributionV1beta1ValidatorHistoricalRewards, decodeCosmosDistributionV1beta1ValidatorHistoricalRewards],
    '/cosmos.distribution.v1beta1.ValidatorCurrentRewards': [condenseCosmosDistributionV1beta1ValidatorCurrentRewards, expandCosmosDistributionV1beta1ValidatorCurrentRewards, decodeCosmosDistributionV1beta1ValidatorCurrentRewards],
    '/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission': [condenseCosmosDistributionV1beta1ValidatorAccumulatedCommission, expandCosmosDistributionV1beta1ValidatorAccumulatedCommission, decodeCosmosDistributionV1beta1ValidatorAccumulatedCommission],
    '/cosmos.distribution.v1beta1.ValidatorOutstandingRewards': [condenseCosmosDistributionV1beta1ValidatorOutstandingRewards, expandCosmosDistributionV1beta1ValidatorOutstandingRewards, decodeCosmosDistributionV1beta1ValidatorOutstandingRewards],
    '/cosmos.distribution.v1beta1.ValidatorSlashEvent': [condenseCosmosDistributionV1beta1ValidatorSlashEvent, expandCosmosDistributionV1beta1ValidatorSlashEvent, decodeCosmosDistributionV1beta1ValidatorSlashEvent],
    '/cosmos.distribution.v1beta1.ValidatorSlashEvents': [condenseCosmosDistributionV1beta1ValidatorSlashEvents, expandCosmosDistributionV1beta1ValidatorSlashEvents, decodeCosmosDistributionV1beta1ValidatorSlashEvents],
    '/cosmos.distribution.v1beta1.FeePool': [condenseCosmosDistributionV1beta1FeePool, expandCosmosDistributionV1beta1FeePool, decodeCosmosDistributionV1beta1FeePool],
    '/cosmos.distribution.v1beta1.CommunityPoolSpendProposal': [condenseCosmosDistributionV1beta1CommunityPoolSpendProposal, expandCosmosDistributionV1beta1CommunityPoolSpendProposal, decodeCosmosDistributionV1beta1CommunityPoolSpendProposal],
    '/cosmos.distribution.v1beta1.DelegatorStartingInfo': [condenseCosmosDistributionV1beta1DelegatorStartingInfo, expandCosmosDistributionV1beta1DelegatorStartingInfo, decodeCosmosDistributionV1beta1DelegatorStartingInfo],
    '/cosmos.distribution.v1beta1.DelegationDelegatorReward': [condenseCosmosDistributionV1beta1DelegationDelegatorReward, expandCosmosDistributionV1beta1DelegationDelegatorReward, decodeCosmosDistributionV1beta1DelegationDelegatorReward],
    '/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit': [condenseCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit, expandCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit, decodeCosmosDistributionV1beta1CommunityPoolSpendProposalWithDeposit],
    '/cosmos.distribution.v1beta1.QueryParamsRequest': [condenseCosmosDistributionV1beta1QueryParamsRequest, expandCosmosDistributionV1beta1QueryParamsRequest, decodeCosmosDistributionV1beta1QueryParamsRequest],
    '/cosmos.distribution.v1beta1.QueryParamsResponse': [condenseCosmosDistributionV1beta1QueryParamsResponse, expandCosmosDistributionV1beta1QueryParamsResponse, decodeCosmosDistributionV1beta1QueryParamsResponse],
    '/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest': [condenseCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest, expandCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest, decodeCosmosDistributionV1beta1QueryValidatorDistributionInfoRequest],
    '/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse': [condenseCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse, expandCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse, decodeCosmosDistributionV1beta1QueryValidatorDistributionInfoResponse],
    '/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest': [condenseCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest, expandCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest, decodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsRequest],
    '/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse': [condenseCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse, expandCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse, decodeCosmosDistributionV1beta1QueryValidatorOutstandingRewardsResponse],
    '/cosmos.distribution.v1beta1.QueryValidatorCommissionRequest': [condenseCosmosDistributionV1beta1QueryValidatorCommissionRequest, expandCosmosDistributionV1beta1QueryValidatorCommissionRequest, decodeCosmosDistributionV1beta1QueryValidatorCommissionRequest],
    '/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse': [condenseCosmosDistributionV1beta1QueryValidatorCommissionResponse, expandCosmosDistributionV1beta1QueryValidatorCommissionResponse, decodeCosmosDistributionV1beta1QueryValidatorCommissionResponse],
    '/cosmos.distribution.v1beta1.QueryValidatorSlashesRequest': [condenseCosmosDistributionV1beta1QueryValidatorSlashesRequest, expandCosmosDistributionV1beta1QueryValidatorSlashesRequest, decodeCosmosDistributionV1beta1QueryValidatorSlashesRequest],
    '/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse': [condenseCosmosDistributionV1beta1QueryValidatorSlashesResponse, expandCosmosDistributionV1beta1QueryValidatorSlashesResponse, decodeCosmosDistributionV1beta1QueryValidatorSlashesResponse],
    '/cosmos.distribution.v1beta1.QueryDelegationRewardsRequest': [condenseCosmosDistributionV1beta1QueryDelegationRewardsRequest, expandCosmosDistributionV1beta1QueryDelegationRewardsRequest, decodeCosmosDistributionV1beta1QueryDelegationRewardsRequest],
    '/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse': [condenseCosmosDistributionV1beta1QueryDelegationRewardsResponse, expandCosmosDistributionV1beta1QueryDelegationRewardsResponse, decodeCosmosDistributionV1beta1QueryDelegationRewardsResponse],
    '/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest': [condenseCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest, expandCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest, decodeCosmosDistributionV1beta1QueryDelegationTotalRewardsRequest],
    '/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse': [condenseCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse, expandCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse, decodeCosmosDistributionV1beta1QueryDelegationTotalRewardsResponse],
    '/cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest': [condenseCosmosDistributionV1beta1QueryDelegatorValidatorsRequest, expandCosmosDistributionV1beta1QueryDelegatorValidatorsRequest, decodeCosmosDistributionV1beta1QueryDelegatorValidatorsRequest],
    '/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse': [condenseCosmosDistributionV1beta1QueryDelegatorValidatorsResponse, expandCosmosDistributionV1beta1QueryDelegatorValidatorsResponse, decodeCosmosDistributionV1beta1QueryDelegatorValidatorsResponse],
    '/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest': [condenseCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest, expandCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest, decodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressRequest],
    '/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse': [condenseCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse, expandCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse, decodeCosmosDistributionV1beta1QueryDelegatorWithdrawAddressResponse],
    '/cosmos.distribution.v1beta1.QueryCommunityPoolRequest': [condenseCosmosDistributionV1beta1QueryCommunityPoolRequest, expandCosmosDistributionV1beta1QueryCommunityPoolRequest, decodeCosmosDistributionV1beta1QueryCommunityPoolRequest],
    '/cosmos.distribution.v1beta1.QueryCommunityPoolResponse': [condenseCosmosDistributionV1beta1QueryCommunityPoolResponse, expandCosmosDistributionV1beta1QueryCommunityPoolResponse, decodeCosmosDistributionV1beta1QueryCommunityPoolResponse],
    '/cosmos.distribution.v1beta1.DelegatorWithdrawInfo': [condenseCosmosDistributionV1beta1DelegatorWithdrawInfo, expandCosmosDistributionV1beta1DelegatorWithdrawInfo, decodeCosmosDistributionV1beta1DelegatorWithdrawInfo],
    '/cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord': [condenseCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord, expandCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord, decodeCosmosDistributionV1beta1ValidatorOutstandingRewardsRecord],
    '/cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord': [condenseCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord, expandCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord, decodeCosmosDistributionV1beta1ValidatorAccumulatedCommissionRecord],
    '/cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord': [condenseCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord, expandCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord, decodeCosmosDistributionV1beta1ValidatorHistoricalRewardsRecord],
    '/cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord': [condenseCosmosDistributionV1beta1ValidatorCurrentRewardsRecord, expandCosmosDistributionV1beta1ValidatorCurrentRewardsRecord, decodeCosmosDistributionV1beta1ValidatorCurrentRewardsRecord],
    '/cosmos.distribution.v1beta1.DelegatorStartingInfoRecord': [condenseCosmosDistributionV1beta1DelegatorStartingInfoRecord, expandCosmosDistributionV1beta1DelegatorStartingInfoRecord, decodeCosmosDistributionV1beta1DelegatorStartingInfoRecord],
    '/cosmos.distribution.v1beta1.ValidatorSlashEventRecord': [condenseCosmosDistributionV1beta1ValidatorSlashEventRecord, expandCosmosDistributionV1beta1ValidatorSlashEventRecord, decodeCosmosDistributionV1beta1ValidatorSlashEventRecord],
    '/cosmos.distribution.v1beta1.GenesisState': [condenseCosmosDistributionV1beta1GenesisState, expandCosmosDistributionV1beta1GenesisState, decodeCosmosDistributionV1beta1GenesisState],
    '/cosmos.crisis.module.v1.Module': [condenseCosmosCrisisModuleV1Module, expandCosmosCrisisModuleV1Module, decodeCosmosCrisisModuleV1Module],
    '/cosmos.crisis.v1beta1.MsgVerifyInvariant': [condenseCosmosCrisisV1beta1MsgVerifyInvariant, expandCosmosCrisisV1beta1MsgVerifyInvariant, decodeCosmosCrisisV1beta1MsgVerifyInvariant],
    '/cosmos.crisis.v1beta1.MsgVerifyInvariantResponse': [condenseCosmosCrisisV1beta1MsgVerifyInvariantResponse, expandCosmosCrisisV1beta1MsgVerifyInvariantResponse, decodeCosmosCrisisV1beta1MsgVerifyInvariantResponse],
    '/cosmos.crisis.v1beta1.MsgUpdateParams': [condenseCosmosCrisisV1beta1MsgUpdateParams, expandCosmosCrisisV1beta1MsgUpdateParams, decodeCosmosCrisisV1beta1MsgUpdateParams],
    '/cosmos.crisis.v1beta1.MsgUpdateParamsResponse': [condenseCosmosCrisisV1beta1MsgUpdateParamsResponse, expandCosmosCrisisV1beta1MsgUpdateParamsResponse, decodeCosmosCrisisV1beta1MsgUpdateParamsResponse],
    '/cosmos.crisis.v1beta1.GenesisState': [condenseCosmosCrisisV1beta1GenesisState, expandCosmosCrisisV1beta1GenesisState, decodeCosmosCrisisV1beta1GenesisState],
    '/cosmos.tx.signing.v1beta1.SignatureDescriptors': [condenseCosmosTxSigningV1beta1SignatureDescriptors, expandCosmosTxSigningV1beta1SignatureDescriptors, decodeCosmosTxSigningV1beta1SignatureDescriptors],
    '/cosmos.tx.signing.v1beta1.SignatureDescriptor': [condenseCosmosTxSigningV1beta1SignatureDescriptor, expandCosmosTxSigningV1beta1SignatureDescriptor, decodeCosmosTxSigningV1beta1SignatureDescriptor],
    '/cosmos.tx.config.v1.Config': [condenseCosmosTxConfigV1Config, expandCosmosTxConfigV1Config, decodeCosmosTxConfigV1Config],
    '/cosmos.tx.v1beta1.Tx': [condenseCosmosTxV1beta1Tx, expandCosmosTxV1beta1Tx, decodeCosmosTxV1beta1Tx],
    '/cosmos.tx.v1beta1.TxRaw': [condenseCosmosTxV1beta1TxRaw, expandCosmosTxV1beta1TxRaw, decodeCosmosTxV1beta1TxRaw],
    '/cosmos.tx.v1beta1.SignDoc': [condenseCosmosTxV1beta1SignDoc, expandCosmosTxV1beta1SignDoc, decodeCosmosTxV1beta1SignDoc],
    '/cosmos.tx.v1beta1.SignDocDirectAux': [condenseCosmosTxV1beta1SignDocDirectAux, expandCosmosTxV1beta1SignDocDirectAux, decodeCosmosTxV1beta1SignDocDirectAux],
    '/cosmos.tx.v1beta1.TxBody': [condenseCosmosTxV1beta1TxBody, expandCosmosTxV1beta1TxBody, decodeCosmosTxV1beta1TxBody],
    '/cosmos.tx.v1beta1.AuthInfo': [condenseCosmosTxV1beta1AuthInfo, expandCosmosTxV1beta1AuthInfo, decodeCosmosTxV1beta1AuthInfo],
    '/cosmos.tx.v1beta1.SignerInfo': [condenseCosmosTxV1beta1SignerInfo, expandCosmosTxV1beta1SignerInfo, decodeCosmosTxV1beta1SignerInfo],
    '/cosmos.tx.v1beta1.ModeInfo': [condenseCosmosTxV1beta1ModeInfo, expandCosmosTxV1beta1ModeInfo, decodeCosmosTxV1beta1ModeInfo],
    '/cosmos.tx.v1beta1.Fee': [condenseCosmosTxV1beta1Fee, expandCosmosTxV1beta1Fee, decodeCosmosTxV1beta1Fee],
    '/cosmos.tx.v1beta1.Tip': [condenseCosmosTxV1beta1Tip, expandCosmosTxV1beta1Tip, decodeCosmosTxV1beta1Tip],
    '/cosmos.tx.v1beta1.AuxSignerData': [condenseCosmosTxV1beta1AuxSignerData, expandCosmosTxV1beta1AuxSignerData, decodeCosmosTxV1beta1AuxSignerData],
    '/cosmos.tx.v1beta1.GetTxsEventRequest': [condenseCosmosTxV1beta1GetTxsEventRequest, expandCosmosTxV1beta1GetTxsEventRequest, decodeCosmosTxV1beta1GetTxsEventRequest],
    '/cosmos.tx.v1beta1.GetTxsEventResponse': [condenseCosmosTxV1beta1GetTxsEventResponse, expandCosmosTxV1beta1GetTxsEventResponse, decodeCosmosTxV1beta1GetTxsEventResponse],
    '/cosmos.tx.v1beta1.BroadcastTxRequest': [condenseCosmosTxV1beta1BroadcastTxRequest, expandCosmosTxV1beta1BroadcastTxRequest, decodeCosmosTxV1beta1BroadcastTxRequest],
    '/cosmos.tx.v1beta1.BroadcastTxResponse': [condenseCosmosTxV1beta1BroadcastTxResponse, expandCosmosTxV1beta1BroadcastTxResponse, decodeCosmosTxV1beta1BroadcastTxResponse],
    '/cosmos.tx.v1beta1.SimulateRequest': [condenseCosmosTxV1beta1SimulateRequest, expandCosmosTxV1beta1SimulateRequest, decodeCosmosTxV1beta1SimulateRequest],
    '/cosmos.tx.v1beta1.SimulateResponse': [condenseCosmosTxV1beta1SimulateResponse, expandCosmosTxV1beta1SimulateResponse, decodeCosmosTxV1beta1SimulateResponse],
    '/cosmos.tx.v1beta1.GetTxRequest': [condenseCosmosTxV1beta1GetTxRequest, expandCosmosTxV1beta1GetTxRequest, decodeCosmosTxV1beta1GetTxRequest],
    '/cosmos.tx.v1beta1.GetTxResponse': [condenseCosmosTxV1beta1GetTxResponse, expandCosmosTxV1beta1GetTxResponse, decodeCosmosTxV1beta1GetTxResponse],
    '/cosmos.tx.v1beta1.GetBlockWithTxsRequest': [condenseCosmosTxV1beta1GetBlockWithTxsRequest, expandCosmosTxV1beta1GetBlockWithTxsRequest, decodeCosmosTxV1beta1GetBlockWithTxsRequest],
    '/cosmos.tx.v1beta1.GetBlockWithTxsResponse': [condenseCosmosTxV1beta1GetBlockWithTxsResponse, expandCosmosTxV1beta1GetBlockWithTxsResponse, decodeCosmosTxV1beta1GetBlockWithTxsResponse],
    '/cosmos.tx.v1beta1.TxDecodeRequest': [condenseCosmosTxV1beta1TxDecodeRequest, expandCosmosTxV1beta1TxDecodeRequest, decodeCosmosTxV1beta1TxDecodeRequest],
    '/cosmos.tx.v1beta1.TxDecodeResponse': [condenseCosmosTxV1beta1TxDecodeResponse, expandCosmosTxV1beta1TxDecodeResponse, decodeCosmosTxV1beta1TxDecodeResponse],
    '/cosmos.tx.v1beta1.TxEncodeRequest': [condenseCosmosTxV1beta1TxEncodeRequest, expandCosmosTxV1beta1TxEncodeRequest, decodeCosmosTxV1beta1TxEncodeRequest],
    '/cosmos.tx.v1beta1.TxEncodeResponse': [condenseCosmosTxV1beta1TxEncodeResponse, expandCosmosTxV1beta1TxEncodeResponse, decodeCosmosTxV1beta1TxEncodeResponse],
    '/cosmos.tx.v1beta1.TxEncodeAminoRequest': [condenseCosmosTxV1beta1TxEncodeAminoRequest, expandCosmosTxV1beta1TxEncodeAminoRequest, decodeCosmosTxV1beta1TxEncodeAminoRequest],
    '/cosmos.tx.v1beta1.TxEncodeAminoResponse': [condenseCosmosTxV1beta1TxEncodeAminoResponse, expandCosmosTxV1beta1TxEncodeAminoResponse, decodeCosmosTxV1beta1TxEncodeAminoResponse],
    '/cosmos.tx.v1beta1.TxDecodeAminoRequest': [condenseCosmosTxV1beta1TxDecodeAminoRequest, expandCosmosTxV1beta1TxDecodeAminoRequest, decodeCosmosTxV1beta1TxDecodeAminoRequest],
    '/cosmos.tx.v1beta1.TxDecodeAminoResponse': [condenseCosmosTxV1beta1TxDecodeAminoResponse, expandCosmosTxV1beta1TxDecodeAminoResponse, decodeCosmosTxV1beta1TxDecodeAminoResponse],
    '/cosmos.vesting.module.v1.Module': [condenseCosmosVestingModuleV1Module, expandCosmosVestingModuleV1Module, decodeCosmosVestingModuleV1Module],
    '/cosmos.vesting.v1beta1.MsgCreateVestingAccount': [condenseCosmosVestingV1beta1MsgCreateVestingAccount, expandCosmosVestingV1beta1MsgCreateVestingAccount, decodeCosmosVestingV1beta1MsgCreateVestingAccount],
    '/cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse': [condenseCosmosVestingV1beta1MsgCreateVestingAccountResponse, expandCosmosVestingV1beta1MsgCreateVestingAccountResponse, decodeCosmosVestingV1beta1MsgCreateVestingAccountResponse],
    '/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount': [condenseCosmosVestingV1beta1MsgCreatePermanentLockedAccount, expandCosmosVestingV1beta1MsgCreatePermanentLockedAccount, decodeCosmosVestingV1beta1MsgCreatePermanentLockedAccount],
    '/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse': [condenseCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse, expandCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse, decodeCosmosVestingV1beta1MsgCreatePermanentLockedAccountResponse],
    '/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount': [condenseCosmosVestingV1beta1MsgCreatePeriodicVestingAccount, expandCosmosVestingV1beta1MsgCreatePeriodicVestingAccount, decodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccount],
    '/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse': [condenseCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse, expandCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse, decodeCosmosVestingV1beta1MsgCreatePeriodicVestingAccountResponse],
    '/cosmos.vesting.v1beta1.BaseVestingAccount': [condenseCosmosVestingV1beta1BaseVestingAccount, expandCosmosVestingV1beta1BaseVestingAccount, decodeCosmosVestingV1beta1BaseVestingAccount],
    '/cosmos.vesting.v1beta1.ContinuousVestingAccount': [condenseCosmosVestingV1beta1ContinuousVestingAccount, expandCosmosVestingV1beta1ContinuousVestingAccount, decodeCosmosVestingV1beta1ContinuousVestingAccount],
    '/cosmos.vesting.v1beta1.DelayedVestingAccount': [condenseCosmosVestingV1beta1DelayedVestingAccount, expandCosmosVestingV1beta1DelayedVestingAccount, decodeCosmosVestingV1beta1DelayedVestingAccount],
    '/cosmos.vesting.v1beta1.Period': [condenseCosmosVestingV1beta1Period, expandCosmosVestingV1beta1Period, decodeCosmosVestingV1beta1Period],
    '/cosmos.vesting.v1beta1.PeriodicVestingAccount': [condenseCosmosVestingV1beta1PeriodicVestingAccount, expandCosmosVestingV1beta1PeriodicVestingAccount, decodeCosmosVestingV1beta1PeriodicVestingAccount],
    '/cosmos.vesting.v1beta1.PermanentLockedAccount': [condenseCosmosVestingV1beta1PermanentLockedAccount, expandCosmosVestingV1beta1PermanentLockedAccount, decodeCosmosVestingV1beta1PermanentLockedAccount],
    '/cosmos.accounts.v1.MsgInit': [condenseCosmosAccountsV1MsgInit, expandCosmosAccountsV1MsgInit, decodeCosmosAccountsV1MsgInit],
    '/cosmos.accounts.v1.MsgInitResponse': [condenseCosmosAccountsV1MsgInitResponse, expandCosmosAccountsV1MsgInitResponse, decodeCosmosAccountsV1MsgInitResponse],
    '/cosmos.accounts.v1.MsgExecute': [condenseCosmosAccountsV1MsgExecute, expandCosmosAccountsV1MsgExecute, decodeCosmosAccountsV1MsgExecute],
    '/cosmos.accounts.v1.MsgExecuteResponse': [condenseCosmosAccountsV1MsgExecuteResponse, expandCosmosAccountsV1MsgExecuteResponse, decodeCosmosAccountsV1MsgExecuteResponse],
    '/cosmos.accounts.v1.AccountQueryRequest': [condenseCosmosAccountsV1AccountQueryRequest, expandCosmosAccountsV1AccountQueryRequest, decodeCosmosAccountsV1AccountQueryRequest],
    '/cosmos.accounts.v1.AccountQueryResponse': [condenseCosmosAccountsV1AccountQueryResponse, expandCosmosAccountsV1AccountQueryResponse, decodeCosmosAccountsV1AccountQueryResponse],
    '/cosmos.accounts.v1.GenesisState': [condenseCosmosAccountsV1GenesisState, expandCosmosAccountsV1GenesisState, decodeCosmosAccountsV1GenesisState],
    '/cosmos.accounts.v1.GenesisAccount': [condenseCosmosAccountsV1GenesisAccount, expandCosmosAccountsV1GenesisAccount, decodeCosmosAccountsV1GenesisAccount],
    '/cosmos.accounts.v1.KVPair': [condenseCosmosAccountsV1KVPair, expandCosmosAccountsV1KVPair, decodeCosmosAccountsV1KVPair],
    '/cosmos.accounts.module.v1.Module': [condenseCosmosAccountsModuleV1Module, expandCosmosAccountsModuleV1Module, decodeCosmosAccountsModuleV1Module],
    '/cosmos.protocolpool.v1.MsgFundCommunityPool': [condenseCosmosProtocolpoolV1MsgFundCommunityPool, expandCosmosProtocolpoolV1MsgFundCommunityPool, decodeCosmosProtocolpoolV1MsgFundCommunityPool],
    '/cosmos.protocolpool.v1.MsgFundCommunityPoolResponse': [condenseCosmosProtocolpoolV1MsgFundCommunityPoolResponse, expandCosmosProtocolpoolV1MsgFundCommunityPoolResponse, decodeCosmosProtocolpoolV1MsgFundCommunityPoolResponse],
    '/cosmos.protocolpool.v1.MsgCommunityPoolSpend': [condenseCosmosProtocolpoolV1MsgCommunityPoolSpend, expandCosmosProtocolpoolV1MsgCommunityPoolSpend, decodeCosmosProtocolpoolV1MsgCommunityPoolSpend],
    '/cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse': [condenseCosmosProtocolpoolV1MsgCommunityPoolSpendResponse, expandCosmosProtocolpoolV1MsgCommunityPoolSpendResponse, decodeCosmosProtocolpoolV1MsgCommunityPoolSpendResponse],
    '/cosmos.protocolpool.v1.QueryCommunityPoolRequest': [condenseCosmosProtocolpoolV1QueryCommunityPoolRequest, expandCosmosProtocolpoolV1QueryCommunityPoolRequest, decodeCosmosProtocolpoolV1QueryCommunityPoolRequest],
    '/cosmos.protocolpool.v1.QueryCommunityPoolResponse': [condenseCosmosProtocolpoolV1QueryCommunityPoolResponse, expandCosmosProtocolpoolV1QueryCommunityPoolResponse, decodeCosmosProtocolpoolV1QueryCommunityPoolResponse],
    '/cosmos.protocolpool.module.v1.Module': [condenseCosmosProtocolpoolModuleV1Module, expandCosmosProtocolpoolModuleV1Module, decodeCosmosProtocolpoolModuleV1Module],
    '/cosmos.staking.module.v1.Module': [condenseCosmosStakingModuleV1Module, expandCosmosStakingModuleV1Module, decodeCosmosStakingModuleV1Module],
    '/cosmos.staking.v1beta1.MsgCreateValidator': [condenseCosmosStakingV1beta1MsgCreateValidator, expandCosmosStakingV1beta1MsgCreateValidator, decodeCosmosStakingV1beta1MsgCreateValidator],
    '/cosmos.staking.v1beta1.MsgCreateValidatorResponse': [condenseCosmosStakingV1beta1MsgCreateValidatorResponse, expandCosmosStakingV1beta1MsgCreateValidatorResponse, decodeCosmosStakingV1beta1MsgCreateValidatorResponse],
    '/cosmos.staking.v1beta1.MsgEditValidator': [condenseCosmosStakingV1beta1MsgEditValidator, expandCosmosStakingV1beta1MsgEditValidator, decodeCosmosStakingV1beta1MsgEditValidator],
    '/cosmos.staking.v1beta1.MsgEditValidatorResponse': [condenseCosmosStakingV1beta1MsgEditValidatorResponse, expandCosmosStakingV1beta1MsgEditValidatorResponse, decodeCosmosStakingV1beta1MsgEditValidatorResponse],
    '/cosmos.staking.v1beta1.MsgDelegate': [condenseCosmosStakingV1beta1MsgDelegate, expandCosmosStakingV1beta1MsgDelegate, decodeCosmosStakingV1beta1MsgDelegate],
    '/cosmos.staking.v1beta1.MsgDelegateResponse': [condenseCosmosStakingV1beta1MsgDelegateResponse, expandCosmosStakingV1beta1MsgDelegateResponse, decodeCosmosStakingV1beta1MsgDelegateResponse],
    '/cosmos.staking.v1beta1.MsgBeginRedelegate': [condenseCosmosStakingV1beta1MsgBeginRedelegate, expandCosmosStakingV1beta1MsgBeginRedelegate, decodeCosmosStakingV1beta1MsgBeginRedelegate],
    '/cosmos.staking.v1beta1.MsgBeginRedelegateResponse': [condenseCosmosStakingV1beta1MsgBeginRedelegateResponse, expandCosmosStakingV1beta1MsgBeginRedelegateResponse, decodeCosmosStakingV1beta1MsgBeginRedelegateResponse],
    '/cosmos.staking.v1beta1.MsgUndelegate': [condenseCosmosStakingV1beta1MsgUndelegate, expandCosmosStakingV1beta1MsgUndelegate, decodeCosmosStakingV1beta1MsgUndelegate],
    '/cosmos.staking.v1beta1.MsgUndelegateResponse': [condenseCosmosStakingV1beta1MsgUndelegateResponse, expandCosmosStakingV1beta1MsgUndelegateResponse, decodeCosmosStakingV1beta1MsgUndelegateResponse],
    '/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation': [condenseCosmosStakingV1beta1MsgCancelUnbondingDelegation, expandCosmosStakingV1beta1MsgCancelUnbondingDelegation, decodeCosmosStakingV1beta1MsgCancelUnbondingDelegation],
    '/cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse': [condenseCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse, expandCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse, decodeCosmosStakingV1beta1MsgCancelUnbondingDelegationResponse],
    '/cosmos.staking.v1beta1.MsgUpdateParams': [condenseCosmosStakingV1beta1MsgUpdateParams, expandCosmosStakingV1beta1MsgUpdateParams, decodeCosmosStakingV1beta1MsgUpdateParams],
    '/cosmos.staking.v1beta1.MsgUpdateParamsResponse': [condenseCosmosStakingV1beta1MsgUpdateParamsResponse, expandCosmosStakingV1beta1MsgUpdateParamsResponse, decodeCosmosStakingV1beta1MsgUpdateParamsResponse],
    '/cosmos.staking.v1beta1.QueryValidatorsRequest': [condenseCosmosStakingV1beta1QueryValidatorsRequest, expandCosmosStakingV1beta1QueryValidatorsRequest, decodeCosmosStakingV1beta1QueryValidatorsRequest],
    '/cosmos.staking.v1beta1.QueryValidatorsResponse': [condenseCosmosStakingV1beta1QueryValidatorsResponse, expandCosmosStakingV1beta1QueryValidatorsResponse, decodeCosmosStakingV1beta1QueryValidatorsResponse],
    '/cosmos.staking.v1beta1.QueryValidatorRequest': [condenseCosmosStakingV1beta1QueryValidatorRequest, expandCosmosStakingV1beta1QueryValidatorRequest, decodeCosmosStakingV1beta1QueryValidatorRequest],
    '/cosmos.staking.v1beta1.QueryValidatorResponse': [condenseCosmosStakingV1beta1QueryValidatorResponse, expandCosmosStakingV1beta1QueryValidatorResponse, decodeCosmosStakingV1beta1QueryValidatorResponse],
    '/cosmos.staking.v1beta1.QueryValidatorDelegationsRequest': [condenseCosmosStakingV1beta1QueryValidatorDelegationsRequest, expandCosmosStakingV1beta1QueryValidatorDelegationsRequest, decodeCosmosStakingV1beta1QueryValidatorDelegationsRequest],
    '/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse': [condenseCosmosStakingV1beta1QueryValidatorDelegationsResponse, expandCosmosStakingV1beta1QueryValidatorDelegationsResponse, decodeCosmosStakingV1beta1QueryValidatorDelegationsResponse],
    '/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest': [condenseCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest, expandCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest, decodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsRequest],
    '/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse': [condenseCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse, expandCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse, decodeCosmosStakingV1beta1QueryValidatorUnbondingDelegationsResponse],
    '/cosmos.staking.v1beta1.QueryDelegationRequest': [condenseCosmosStakingV1beta1QueryDelegationRequest, expandCosmosStakingV1beta1QueryDelegationRequest, decodeCosmosStakingV1beta1QueryDelegationRequest],
    '/cosmos.staking.v1beta1.QueryDelegationResponse': [condenseCosmosStakingV1beta1QueryDelegationResponse, expandCosmosStakingV1beta1QueryDelegationResponse, decodeCosmosStakingV1beta1QueryDelegationResponse],
    '/cosmos.staking.v1beta1.QueryUnbondingDelegationRequest': [condenseCosmosStakingV1beta1QueryUnbondingDelegationRequest, expandCosmosStakingV1beta1QueryUnbondingDelegationRequest, decodeCosmosStakingV1beta1QueryUnbondingDelegationRequest],
    '/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse': [condenseCosmosStakingV1beta1QueryUnbondingDelegationResponse, expandCosmosStakingV1beta1QueryUnbondingDelegationResponse, decodeCosmosStakingV1beta1QueryUnbondingDelegationResponse],
    '/cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest': [condenseCosmosStakingV1beta1QueryDelegatorDelegationsRequest, expandCosmosStakingV1beta1QueryDelegatorDelegationsRequest, decodeCosmosStakingV1beta1QueryDelegatorDelegationsRequest],
    '/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse': [condenseCosmosStakingV1beta1QueryDelegatorDelegationsResponse, expandCosmosStakingV1beta1QueryDelegatorDelegationsResponse, decodeCosmosStakingV1beta1QueryDelegatorDelegationsResponse],
    '/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest': [condenseCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest, expandCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest, decodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsRequest],
    '/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse': [condenseCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse, expandCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse, decodeCosmosStakingV1beta1QueryDelegatorUnbondingDelegationsResponse],
    '/cosmos.staking.v1beta1.QueryRedelegationsRequest': [condenseCosmosStakingV1beta1QueryRedelegationsRequest, expandCosmosStakingV1beta1QueryRedelegationsRequest, decodeCosmosStakingV1beta1QueryRedelegationsRequest],
    '/cosmos.staking.v1beta1.QueryRedelegationsResponse': [condenseCosmosStakingV1beta1QueryRedelegationsResponse, expandCosmosStakingV1beta1QueryRedelegationsResponse, decodeCosmosStakingV1beta1QueryRedelegationsResponse],
    '/cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest': [condenseCosmosStakingV1beta1QueryDelegatorValidatorsRequest, expandCosmosStakingV1beta1QueryDelegatorValidatorsRequest, decodeCosmosStakingV1beta1QueryDelegatorValidatorsRequest],
    '/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse': [condenseCosmosStakingV1beta1QueryDelegatorValidatorsResponse, expandCosmosStakingV1beta1QueryDelegatorValidatorsResponse, decodeCosmosStakingV1beta1QueryDelegatorValidatorsResponse],
    '/cosmos.staking.v1beta1.QueryDelegatorValidatorRequest': [condenseCosmosStakingV1beta1QueryDelegatorValidatorRequest, expandCosmosStakingV1beta1QueryDelegatorValidatorRequest, decodeCosmosStakingV1beta1QueryDelegatorValidatorRequest],
    '/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse': [condenseCosmosStakingV1beta1QueryDelegatorValidatorResponse, expandCosmosStakingV1beta1QueryDelegatorValidatorResponse, decodeCosmosStakingV1beta1QueryDelegatorValidatorResponse],
    '/cosmos.staking.v1beta1.QueryHistoricalInfoRequest': [condenseCosmosStakingV1beta1QueryHistoricalInfoRequest, expandCosmosStakingV1beta1QueryHistoricalInfoRequest, decodeCosmosStakingV1beta1QueryHistoricalInfoRequest],
    '/cosmos.staking.v1beta1.QueryHistoricalInfoResponse': [condenseCosmosStakingV1beta1QueryHistoricalInfoResponse, expandCosmosStakingV1beta1QueryHistoricalInfoResponse, decodeCosmosStakingV1beta1QueryHistoricalInfoResponse],
    '/cosmos.staking.v1beta1.QueryPoolRequest': [condenseCosmosStakingV1beta1QueryPoolRequest, expandCosmosStakingV1beta1QueryPoolRequest, decodeCosmosStakingV1beta1QueryPoolRequest],
    '/cosmos.staking.v1beta1.QueryPoolResponse': [condenseCosmosStakingV1beta1QueryPoolResponse, expandCosmosStakingV1beta1QueryPoolResponse, decodeCosmosStakingV1beta1QueryPoolResponse],
    '/cosmos.staking.v1beta1.QueryParamsRequest': [condenseCosmosStakingV1beta1QueryParamsRequest, expandCosmosStakingV1beta1QueryParamsRequest, decodeCosmosStakingV1beta1QueryParamsRequest],
    '/cosmos.staking.v1beta1.QueryParamsResponse': [condenseCosmosStakingV1beta1QueryParamsResponse, expandCosmosStakingV1beta1QueryParamsResponse, decodeCosmosStakingV1beta1QueryParamsResponse],
    '/cosmos.staking.v1beta1.StakeAuthorization': [condenseCosmosStakingV1beta1StakeAuthorization, expandCosmosStakingV1beta1StakeAuthorization, decodeCosmosStakingV1beta1StakeAuthorization],
    '/cosmos.staking.v1beta1.GenesisState': [condenseCosmosStakingV1beta1GenesisState, expandCosmosStakingV1beta1GenesisState, decodeCosmosStakingV1beta1GenesisState],
    '/cosmos.staking.v1beta1.LastValidatorPower': [condenseCosmosStakingV1beta1LastValidatorPower, expandCosmosStakingV1beta1LastValidatorPower, decodeCosmosStakingV1beta1LastValidatorPower],
    '/cosmos.staking.v1beta1.HistoricalInfo': [condenseCosmosStakingV1beta1HistoricalInfo, expandCosmosStakingV1beta1HistoricalInfo, decodeCosmosStakingV1beta1HistoricalInfo],
    '/cosmos.staking.v1beta1.HistoricalRecord': [condenseCosmosStakingV1beta1HistoricalRecord, expandCosmosStakingV1beta1HistoricalRecord, decodeCosmosStakingV1beta1HistoricalRecord],
    '/cosmos.staking.v1beta1.CommissionRates': [condenseCosmosStakingV1beta1CommissionRates, expandCosmosStakingV1beta1CommissionRates, decodeCosmosStakingV1beta1CommissionRates],
    '/cosmos.staking.v1beta1.Commission': [condenseCosmosStakingV1beta1Commission, expandCosmosStakingV1beta1Commission, decodeCosmosStakingV1beta1Commission],
    '/cosmos.staking.v1beta1.Description': [condenseCosmosStakingV1beta1Description, expandCosmosStakingV1beta1Description, decodeCosmosStakingV1beta1Description],
    '/cosmos.staking.v1beta1.Validator': [condenseCosmosStakingV1beta1Validator, expandCosmosStakingV1beta1Validator, decodeCosmosStakingV1beta1Validator],
    '/cosmos.staking.v1beta1.ValAddresses': [condenseCosmosStakingV1beta1ValAddresses, expandCosmosStakingV1beta1ValAddresses, decodeCosmosStakingV1beta1ValAddresses],
    '/cosmos.staking.v1beta1.DVPair': [condenseCosmosStakingV1beta1DVPair, expandCosmosStakingV1beta1DVPair, decodeCosmosStakingV1beta1DVPair],
    '/cosmos.staking.v1beta1.DVPairs': [condenseCosmosStakingV1beta1DVPairs, expandCosmosStakingV1beta1DVPairs, decodeCosmosStakingV1beta1DVPairs],
    '/cosmos.staking.v1beta1.DVVTriplet': [condenseCosmosStakingV1beta1DVVTriplet, expandCosmosStakingV1beta1DVVTriplet, decodeCosmosStakingV1beta1DVVTriplet],
    '/cosmos.staking.v1beta1.DVVTriplets': [condenseCosmosStakingV1beta1DVVTriplets, expandCosmosStakingV1beta1DVVTriplets, decodeCosmosStakingV1beta1DVVTriplets],
    '/cosmos.staking.v1beta1.Delegation': [condenseCosmosStakingV1beta1Delegation, expandCosmosStakingV1beta1Delegation, decodeCosmosStakingV1beta1Delegation],
    '/cosmos.staking.v1beta1.UnbondingDelegation': [condenseCosmosStakingV1beta1UnbondingDelegation, expandCosmosStakingV1beta1UnbondingDelegation, decodeCosmosStakingV1beta1UnbondingDelegation],
    '/cosmos.staking.v1beta1.UnbondingDelegationEntry': [condenseCosmosStakingV1beta1UnbondingDelegationEntry, expandCosmosStakingV1beta1UnbondingDelegationEntry, decodeCosmosStakingV1beta1UnbondingDelegationEntry],
    '/cosmos.staking.v1beta1.RedelegationEntry': [condenseCosmosStakingV1beta1RedelegationEntry, expandCosmosStakingV1beta1RedelegationEntry, decodeCosmosStakingV1beta1RedelegationEntry],
    '/cosmos.staking.v1beta1.Redelegation': [condenseCosmosStakingV1beta1Redelegation, expandCosmosStakingV1beta1Redelegation, decodeCosmosStakingV1beta1Redelegation],
    '/cosmos.staking.v1beta1.Params': [condenseCosmosStakingV1beta1Params, expandCosmosStakingV1beta1Params, decodeCosmosStakingV1beta1Params],
    '/cosmos.staking.v1beta1.DelegationResponse': [condenseCosmosStakingV1beta1DelegationResponse, expandCosmosStakingV1beta1DelegationResponse, decodeCosmosStakingV1beta1DelegationResponse],
    '/cosmos.staking.v1beta1.RedelegationEntryResponse': [condenseCosmosStakingV1beta1RedelegationEntryResponse, expandCosmosStakingV1beta1RedelegationEntryResponse, decodeCosmosStakingV1beta1RedelegationEntryResponse],
    '/cosmos.staking.v1beta1.RedelegationResponse': [condenseCosmosStakingV1beta1RedelegationResponse, expandCosmosStakingV1beta1RedelegationResponse, decodeCosmosStakingV1beta1RedelegationResponse],
    '/cosmos.staking.v1beta1.Pool': [condenseCosmosStakingV1beta1Pool, expandCosmosStakingV1beta1Pool, decodeCosmosStakingV1beta1Pool],
    '/cosmos.staking.v1beta1.ValidatorUpdates': [condenseCosmosStakingV1beta1ValidatorUpdates, expandCosmosStakingV1beta1ValidatorUpdates, decodeCosmosStakingV1beta1ValidatorUpdates],
    '/cosmos.genutil.module.v1.Module': [condenseCosmosGenutilModuleV1Module, expandCosmosGenutilModuleV1Module, decodeCosmosGenutilModuleV1Module],
    '/cosmos.genutil.v1beta1.GenesisState': [condenseCosmosGenutilV1beta1GenesisState, expandCosmosGenutilV1beta1GenesisState, decodeCosmosGenutilV1beta1GenesisState],
    '/cosmos.params.module.v1.Module': [condenseCosmosParamsModuleV1Module, expandCosmosParamsModuleV1Module, decodeCosmosParamsModuleV1Module],
    '/cosmos.params.v1beta1.QueryParamsRequest': [condenseCosmosParamsV1beta1QueryParamsRequest, expandCosmosParamsV1beta1QueryParamsRequest, decodeCosmosParamsV1beta1QueryParamsRequest],
    '/cosmos.params.v1beta1.QueryParamsResponse': [condenseCosmosParamsV1beta1QueryParamsResponse, expandCosmosParamsV1beta1QueryParamsResponse, decodeCosmosParamsV1beta1QueryParamsResponse],
    '/cosmos.params.v1beta1.QuerySubspacesRequest': [condenseCosmosParamsV1beta1QuerySubspacesRequest, expandCosmosParamsV1beta1QuerySubspacesRequest, decodeCosmosParamsV1beta1QuerySubspacesRequest],
    '/cosmos.params.v1beta1.QuerySubspacesResponse': [condenseCosmosParamsV1beta1QuerySubspacesResponse, expandCosmosParamsV1beta1QuerySubspacesResponse, decodeCosmosParamsV1beta1QuerySubspacesResponse],
    '/cosmos.params.v1beta1.Subspace': [condenseCosmosParamsV1beta1Subspace, expandCosmosParamsV1beta1Subspace, decodeCosmosParamsV1beta1Subspace],
    '/cosmos.params.v1beta1.ParameterChangeProposal': [condenseCosmosParamsV1beta1ParameterChangeProposal, expandCosmosParamsV1beta1ParameterChangeProposal, decodeCosmosParamsV1beta1ParameterChangeProposal],
    '/cosmos.params.v1beta1.ParamChange': [condenseCosmosParamsV1beta1ParamChange, expandCosmosParamsV1beta1ParamChange, decodeCosmosParamsV1beta1ParamChange],
    '/cosmos.authz.module.v1.Module': [condenseCosmosAuthzModuleV1Module, expandCosmosAuthzModuleV1Module, decodeCosmosAuthzModuleV1Module],
    '/cosmos.authz.v1beta1.MsgGrant': [condenseCosmosAuthzV1beta1MsgGrant, expandCosmosAuthzV1beta1MsgGrant, decodeCosmosAuthzV1beta1MsgGrant],
    '/cosmos.authz.v1beta1.MsgGrantResponse': [condenseCosmosAuthzV1beta1MsgGrantResponse, expandCosmosAuthzV1beta1MsgGrantResponse, decodeCosmosAuthzV1beta1MsgGrantResponse],
    '/cosmos.authz.v1beta1.MsgExec': [condenseCosmosAuthzV1beta1MsgExec, expandCosmosAuthzV1beta1MsgExec, decodeCosmosAuthzV1beta1MsgExec],
    '/cosmos.authz.v1beta1.MsgExecResponse': [condenseCosmosAuthzV1beta1MsgExecResponse, expandCosmosAuthzV1beta1MsgExecResponse, decodeCosmosAuthzV1beta1MsgExecResponse],
    '/cosmos.authz.v1beta1.MsgRevoke': [condenseCosmosAuthzV1beta1MsgRevoke, expandCosmosAuthzV1beta1MsgRevoke, decodeCosmosAuthzV1beta1MsgRevoke],
    '/cosmos.authz.v1beta1.MsgRevokeResponse': [condenseCosmosAuthzV1beta1MsgRevokeResponse, expandCosmosAuthzV1beta1MsgRevokeResponse, decodeCosmosAuthzV1beta1MsgRevokeResponse],
    '/cosmos.authz.v1beta1.QueryGrantsRequest': [condenseCosmosAuthzV1beta1QueryGrantsRequest, expandCosmosAuthzV1beta1QueryGrantsRequest, decodeCosmosAuthzV1beta1QueryGrantsRequest],
    '/cosmos.authz.v1beta1.QueryGrantsResponse': [condenseCosmosAuthzV1beta1QueryGrantsResponse, expandCosmosAuthzV1beta1QueryGrantsResponse, decodeCosmosAuthzV1beta1QueryGrantsResponse],
    '/cosmos.authz.v1beta1.QueryGranterGrantsRequest': [condenseCosmosAuthzV1beta1QueryGranterGrantsRequest, expandCosmosAuthzV1beta1QueryGranterGrantsRequest, decodeCosmosAuthzV1beta1QueryGranterGrantsRequest],
    '/cosmos.authz.v1beta1.QueryGranterGrantsResponse': [condenseCosmosAuthzV1beta1QueryGranterGrantsResponse, expandCosmosAuthzV1beta1QueryGranterGrantsResponse, decodeCosmosAuthzV1beta1QueryGranterGrantsResponse],
    '/cosmos.authz.v1beta1.QueryGranteeGrantsRequest': [condenseCosmosAuthzV1beta1QueryGranteeGrantsRequest, expandCosmosAuthzV1beta1QueryGranteeGrantsRequest, decodeCosmosAuthzV1beta1QueryGranteeGrantsRequest],
    '/cosmos.authz.v1beta1.QueryGranteeGrantsResponse': [condenseCosmosAuthzV1beta1QueryGranteeGrantsResponse, expandCosmosAuthzV1beta1QueryGranteeGrantsResponse, decodeCosmosAuthzV1beta1QueryGranteeGrantsResponse],
    '/cosmos.authz.v1beta1.EventGrant': [condenseCosmosAuthzV1beta1EventGrant, expandCosmosAuthzV1beta1EventGrant, decodeCosmosAuthzV1beta1EventGrant],
    '/cosmos.authz.v1beta1.EventRevoke': [condenseCosmosAuthzV1beta1EventRevoke, expandCosmosAuthzV1beta1EventRevoke, decodeCosmosAuthzV1beta1EventRevoke],
    '/cosmos.authz.v1beta1.GenericAuthorization': [condenseCosmosAuthzV1beta1GenericAuthorization, expandCosmosAuthzV1beta1GenericAuthorization, decodeCosmosAuthzV1beta1GenericAuthorization],
    '/cosmos.authz.v1beta1.Grant': [condenseCosmosAuthzV1beta1Grant, expandCosmosAuthzV1beta1Grant, decodeCosmosAuthzV1beta1Grant],
    '/cosmos.authz.v1beta1.GrantAuthorization': [condenseCosmosAuthzV1beta1GrantAuthorization, expandCosmosAuthzV1beta1GrantAuthorization, decodeCosmosAuthzV1beta1GrantAuthorization],
    '/cosmos.authz.v1beta1.GrantQueueItem': [condenseCosmosAuthzV1beta1GrantQueueItem, expandCosmosAuthzV1beta1GrantQueueItem, decodeCosmosAuthzV1beta1GrantQueueItem],
    '/cosmos.authz.v1beta1.GenesisState': [condenseCosmosAuthzV1beta1GenesisState, expandCosmosAuthzV1beta1GenesisState, decodeCosmosAuthzV1beta1GenesisState],
    '/cosmos.orm.v1.TableDescriptor': [condenseCosmosOrmV1TableDescriptor, expandCosmosOrmV1TableDescriptor, decodeCosmosOrmV1TableDescriptor],
    '/cosmos.orm.v1.PrimaryKeyDescriptor': [condenseCosmosOrmV1PrimaryKeyDescriptor, expandCosmosOrmV1PrimaryKeyDescriptor, decodeCosmosOrmV1PrimaryKeyDescriptor],
    '/cosmos.orm.v1.SecondaryIndexDescriptor': [condenseCosmosOrmV1SecondaryIndexDescriptor, expandCosmosOrmV1SecondaryIndexDescriptor, decodeCosmosOrmV1SecondaryIndexDescriptor],
    '/cosmos.orm.v1.SingletonDescriptor': [condenseCosmosOrmV1SingletonDescriptor, expandCosmosOrmV1SingletonDescriptor, decodeCosmosOrmV1SingletonDescriptor],
    '/cosmos.orm.module.v1alpha1.Module': [condenseCosmosOrmModuleV1alpha1Module, expandCosmosOrmModuleV1alpha1Module, decodeCosmosOrmModuleV1alpha1Module],
    '/cosmos.orm.v1alpha1.ModuleSchemaDescriptor': [condenseCosmosOrmV1alpha1ModuleSchemaDescriptor, expandCosmosOrmV1alpha1ModuleSchemaDescriptor, decodeCosmosOrmV1alpha1ModuleSchemaDescriptor],
    '/cosmos.orm.query.v1alpha1.GetRequest': [condenseCosmosOrmQueryV1alpha1GetRequest, expandCosmosOrmQueryV1alpha1GetRequest, decodeCosmosOrmQueryV1alpha1GetRequest],
    '/cosmos.orm.query.v1alpha1.GetResponse': [condenseCosmosOrmQueryV1alpha1GetResponse, expandCosmosOrmQueryV1alpha1GetResponse, decodeCosmosOrmQueryV1alpha1GetResponse],
    '/cosmos.orm.query.v1alpha1.ListRequest': [condenseCosmosOrmQueryV1alpha1ListRequest, expandCosmosOrmQueryV1alpha1ListRequest, decodeCosmosOrmQueryV1alpha1ListRequest],
    '/cosmos.orm.query.v1alpha1.ListResponse': [condenseCosmosOrmQueryV1alpha1ListResponse, expandCosmosOrmQueryV1alpha1ListResponse, decodeCosmosOrmQueryV1alpha1ListResponse],
    '/cosmos.orm.query.v1alpha1.IndexValue': [condenseCosmosOrmQueryV1alpha1IndexValue, expandCosmosOrmQueryV1alpha1IndexValue, decodeCosmosOrmQueryV1alpha1IndexValue],
    '/cosmos.slashing.module.v1.Module': [condenseCosmosSlashingModuleV1Module, expandCosmosSlashingModuleV1Module, decodeCosmosSlashingModuleV1Module],
    '/cosmos.slashing.v1beta1.MsgUnjail': [condenseCosmosSlashingV1beta1MsgUnjail, expandCosmosSlashingV1beta1MsgUnjail, decodeCosmosSlashingV1beta1MsgUnjail],
    '/cosmos.slashing.v1beta1.MsgUnjailResponse': [condenseCosmosSlashingV1beta1MsgUnjailResponse, expandCosmosSlashingV1beta1MsgUnjailResponse, decodeCosmosSlashingV1beta1MsgUnjailResponse],
    '/cosmos.slashing.v1beta1.MsgUpdateParams': [condenseCosmosSlashingV1beta1MsgUpdateParams, expandCosmosSlashingV1beta1MsgUpdateParams, decodeCosmosSlashingV1beta1MsgUpdateParams],
    '/cosmos.slashing.v1beta1.MsgUpdateParamsResponse': [condenseCosmosSlashingV1beta1MsgUpdateParamsResponse, expandCosmosSlashingV1beta1MsgUpdateParamsResponse, decodeCosmosSlashingV1beta1MsgUpdateParamsResponse],
    '/cosmos.slashing.v1beta1.ValidatorSigningInfo': [condenseCosmosSlashingV1beta1ValidatorSigningInfo, expandCosmosSlashingV1beta1ValidatorSigningInfo, decodeCosmosSlashingV1beta1ValidatorSigningInfo],
    '/cosmos.slashing.v1beta1.Params': [condenseCosmosSlashingV1beta1Params, expandCosmosSlashingV1beta1Params, decodeCosmosSlashingV1beta1Params],
    '/cosmos.slashing.v1beta1.QueryParamsRequest': [condenseCosmosSlashingV1beta1QueryParamsRequest, expandCosmosSlashingV1beta1QueryParamsRequest, decodeCosmosSlashingV1beta1QueryParamsRequest],
    '/cosmos.slashing.v1beta1.QueryParamsResponse': [condenseCosmosSlashingV1beta1QueryParamsResponse, expandCosmosSlashingV1beta1QueryParamsResponse, decodeCosmosSlashingV1beta1QueryParamsResponse],
    '/cosmos.slashing.v1beta1.QuerySigningInfoRequest': [condenseCosmosSlashingV1beta1QuerySigningInfoRequest, expandCosmosSlashingV1beta1QuerySigningInfoRequest, decodeCosmosSlashingV1beta1QuerySigningInfoRequest],
    '/cosmos.slashing.v1beta1.QuerySigningInfoResponse': [condenseCosmosSlashingV1beta1QuerySigningInfoResponse, expandCosmosSlashingV1beta1QuerySigningInfoResponse, decodeCosmosSlashingV1beta1QuerySigningInfoResponse],
    '/cosmos.slashing.v1beta1.QuerySigningInfosRequest': [condenseCosmosSlashingV1beta1QuerySigningInfosRequest, expandCosmosSlashingV1beta1QuerySigningInfosRequest, decodeCosmosSlashingV1beta1QuerySigningInfosRequest],
    '/cosmos.slashing.v1beta1.QuerySigningInfosResponse': [condenseCosmosSlashingV1beta1QuerySigningInfosResponse, expandCosmosSlashingV1beta1QuerySigningInfosResponse, decodeCosmosSlashingV1beta1QuerySigningInfosResponse],
    '/cosmos.slashing.v1beta1.GenesisState': [condenseCosmosSlashingV1beta1GenesisState, expandCosmosSlashingV1beta1GenesisState, decodeCosmosSlashingV1beta1GenesisState],
    '/cosmos.slashing.v1beta1.SigningInfo': [condenseCosmosSlashingV1beta1SigningInfo, expandCosmosSlashingV1beta1SigningInfo, decodeCosmosSlashingV1beta1SigningInfo],
    '/cosmos.slashing.v1beta1.ValidatorMissedBlocks': [condenseCosmosSlashingV1beta1ValidatorMissedBlocks, expandCosmosSlashingV1beta1ValidatorMissedBlocks, decodeCosmosSlashingV1beta1ValidatorMissedBlocks],
    '/cosmos.slashing.v1beta1.MissedBlock': [condenseCosmosSlashingV1beta1MissedBlock, expandCosmosSlashingV1beta1MissedBlock, decodeCosmosSlashingV1beta1MissedBlock],
    '/cosmos.autocli.v1.AppOptionsRequest': [condenseCosmosAutocliV1AppOptionsRequest, expandCosmosAutocliV1AppOptionsRequest, decodeCosmosAutocliV1AppOptionsRequest],
    '/cosmos.autocli.v1.AppOptionsResponse': [condenseCosmosAutocliV1AppOptionsResponse, expandCosmosAutocliV1AppOptionsResponse, decodeCosmosAutocliV1AppOptionsResponse],
    '/cosmos.autocli.v1.ModuleOptions': [condenseCosmosAutocliV1ModuleOptions, expandCosmosAutocliV1ModuleOptions, decodeCosmosAutocliV1ModuleOptions],
    '/cosmos.autocli.v1.ServiceCommandDescriptor': [condenseCosmosAutocliV1ServiceCommandDescriptor, expandCosmosAutocliV1ServiceCommandDescriptor, decodeCosmosAutocliV1ServiceCommandDescriptor],
    '/cosmos.autocli.v1.RpcCommandOptions': [condenseCosmosAutocliV1RpcCommandOptions, expandCosmosAutocliV1RpcCommandOptions, decodeCosmosAutocliV1RpcCommandOptions],
    '/cosmos.autocli.v1.FlagOptions': [condenseCosmosAutocliV1FlagOptions, expandCosmosAutocliV1FlagOptions, decodeCosmosAutocliV1FlagOptions],
    '/cosmos.autocli.v1.PositionalArgDescriptor': [condenseCosmosAutocliV1PositionalArgDescriptor, expandCosmosAutocliV1PositionalArgDescriptor, decodeCosmosAutocliV1PositionalArgDescriptor],
    '/cosmos.base.abci.v1beta1.TxResponse': [condenseCosmosBaseAbciV1beta1TxResponse, expandCosmosBaseAbciV1beta1TxResponse, decodeCosmosBaseAbciV1beta1TxResponse],
    '/cosmos.base.abci.v1beta1.ABCIMessageLog': [condenseCosmosBaseAbciV1beta1ABCIMessageLog, expandCosmosBaseAbciV1beta1ABCIMessageLog, decodeCosmosBaseAbciV1beta1ABCIMessageLog],
    '/cosmos.base.abci.v1beta1.StringEvent': [condenseCosmosBaseAbciV1beta1StringEvent, expandCosmosBaseAbciV1beta1StringEvent, decodeCosmosBaseAbciV1beta1StringEvent],
    '/cosmos.base.abci.v1beta1.Attribute': [condenseCosmosBaseAbciV1beta1Attribute, expandCosmosBaseAbciV1beta1Attribute, decodeCosmosBaseAbciV1beta1Attribute],
    '/cosmos.base.abci.v1beta1.GasInfo': [condenseCosmosBaseAbciV1beta1GasInfo, expandCosmosBaseAbciV1beta1GasInfo, decodeCosmosBaseAbciV1beta1GasInfo],
    '/cosmos.base.abci.v1beta1.Result': [condenseCosmosBaseAbciV1beta1Result, expandCosmosBaseAbciV1beta1Result, decodeCosmosBaseAbciV1beta1Result],
    '/cosmos.base.abci.v1beta1.SimulationResponse': [condenseCosmosBaseAbciV1beta1SimulationResponse, expandCosmosBaseAbciV1beta1SimulationResponse, decodeCosmosBaseAbciV1beta1SimulationResponse],
    '/cosmos.base.abci.v1beta1.MsgData': [condenseCosmosBaseAbciV1beta1MsgData, expandCosmosBaseAbciV1beta1MsgData, decodeCosmosBaseAbciV1beta1MsgData],
    '/cosmos.base.abci.v1beta1.TxMsgData': [condenseCosmosBaseAbciV1beta1TxMsgData, expandCosmosBaseAbciV1beta1TxMsgData, decodeCosmosBaseAbciV1beta1TxMsgData],
    '/cosmos.base.abci.v1beta1.SearchTxsResult': [condenseCosmosBaseAbciV1beta1SearchTxsResult, expandCosmosBaseAbciV1beta1SearchTxsResult, decodeCosmosBaseAbciV1beta1SearchTxsResult],
    '/cosmos.base.abci.v1beta1.SearchBlocksResult': [condenseCosmosBaseAbciV1beta1SearchBlocksResult, expandCosmosBaseAbciV1beta1SearchBlocksResult, decodeCosmosBaseAbciV1beta1SearchBlocksResult],
    '/cosmos.base.v1beta1.Coin': [condenseCosmosBaseV1beta1Coin, expandCosmosBaseV1beta1Coin, decodeCosmosBaseV1beta1Coin],
    '/cosmos.base.v1beta1.DecCoin': [condenseCosmosBaseV1beta1DecCoin, expandCosmosBaseV1beta1DecCoin, decodeCosmosBaseV1beta1DecCoin],
    '/cosmos.base.tendermint.v1beta1.Block': [condenseCosmosBaseTendermintV1beta1Block, expandCosmosBaseTendermintV1beta1Block, decodeCosmosBaseTendermintV1beta1Block],
    '/cosmos.base.tendermint.v1beta1.Header': [condenseCosmosBaseTendermintV1beta1Header, expandCosmosBaseTendermintV1beta1Header, decodeCosmosBaseTendermintV1beta1Header],
    '/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest': [condenseCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest, expandCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest, decodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightRequest],
    '/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse': [condenseCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse, expandCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse, decodeCosmosBaseTendermintV1beta1GetValidatorSetByHeightResponse],
    '/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest': [condenseCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest, expandCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest, decodeCosmosBaseTendermintV1beta1GetLatestValidatorSetRequest],
    '/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse': [condenseCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse, expandCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse, decodeCosmosBaseTendermintV1beta1GetLatestValidatorSetResponse],
    '/cosmos.base.tendermint.v1beta1.Validator': [condenseCosmosBaseTendermintV1beta1Validator, expandCosmosBaseTendermintV1beta1Validator, decodeCosmosBaseTendermintV1beta1Validator],
    '/cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest': [condenseCosmosBaseTendermintV1beta1GetBlockByHeightRequest, expandCosmosBaseTendermintV1beta1GetBlockByHeightRequest, decodeCosmosBaseTendermintV1beta1GetBlockByHeightRequest],
    '/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse': [condenseCosmosBaseTendermintV1beta1GetBlockByHeightResponse, expandCosmosBaseTendermintV1beta1GetBlockByHeightResponse, decodeCosmosBaseTendermintV1beta1GetBlockByHeightResponse],
    '/cosmos.base.tendermint.v1beta1.GetLatestBlockRequest': [condenseCosmosBaseTendermintV1beta1GetLatestBlockRequest, expandCosmosBaseTendermintV1beta1GetLatestBlockRequest, decodeCosmosBaseTendermintV1beta1GetLatestBlockRequest],
    '/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse': [condenseCosmosBaseTendermintV1beta1GetLatestBlockResponse, expandCosmosBaseTendermintV1beta1GetLatestBlockResponse, decodeCosmosBaseTendermintV1beta1GetLatestBlockResponse],
    '/cosmos.base.tendermint.v1beta1.GetSyncingRequest': [condenseCosmosBaseTendermintV1beta1GetSyncingRequest, expandCosmosBaseTendermintV1beta1GetSyncingRequest, decodeCosmosBaseTendermintV1beta1GetSyncingRequest],
    '/cosmos.base.tendermint.v1beta1.GetSyncingResponse': [condenseCosmosBaseTendermintV1beta1GetSyncingResponse, expandCosmosBaseTendermintV1beta1GetSyncingResponse, decodeCosmosBaseTendermintV1beta1GetSyncingResponse],
    '/cosmos.base.tendermint.v1beta1.GetNodeInfoRequest': [condenseCosmosBaseTendermintV1beta1GetNodeInfoRequest, expandCosmosBaseTendermintV1beta1GetNodeInfoRequest, decodeCosmosBaseTendermintV1beta1GetNodeInfoRequest],
    '/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse': [condenseCosmosBaseTendermintV1beta1GetNodeInfoResponse, expandCosmosBaseTendermintV1beta1GetNodeInfoResponse, decodeCosmosBaseTendermintV1beta1GetNodeInfoResponse],
    '/cosmos.base.tendermint.v1beta1.VersionInfo': [condenseCosmosBaseTendermintV1beta1VersionInfo, expandCosmosBaseTendermintV1beta1VersionInfo, decodeCosmosBaseTendermintV1beta1VersionInfo],
    '/cosmos.base.tendermint.v1beta1.Module': [condenseCosmosBaseTendermintV1beta1Module, expandCosmosBaseTendermintV1beta1Module, decodeCosmosBaseTendermintV1beta1Module],
    '/cosmos.base.tendermint.v1beta1.ABCIQueryRequest': [condenseCosmosBaseTendermintV1beta1ABCIQueryRequest, expandCosmosBaseTendermintV1beta1ABCIQueryRequest, decodeCosmosBaseTendermintV1beta1ABCIQueryRequest],
    '/cosmos.base.tendermint.v1beta1.ABCIQueryResponse': [condenseCosmosBaseTendermintV1beta1ABCIQueryResponse, expandCosmosBaseTendermintV1beta1ABCIQueryResponse, decodeCosmosBaseTendermintV1beta1ABCIQueryResponse],
    '/cosmos.base.tendermint.v1beta1.ProofOp': [condenseCosmosBaseTendermintV1beta1ProofOp, expandCosmosBaseTendermintV1beta1ProofOp, decodeCosmosBaseTendermintV1beta1ProofOp],
    '/cosmos.base.tendermint.v1beta1.ProofOps': [condenseCosmosBaseTendermintV1beta1ProofOps, expandCosmosBaseTendermintV1beta1ProofOps, decodeCosmosBaseTendermintV1beta1ProofOps],
    '/cosmos.base.node.v1beta1.ConfigRequest': [condenseCosmosBaseNodeV1beta1ConfigRequest, expandCosmosBaseNodeV1beta1ConfigRequest, decodeCosmosBaseNodeV1beta1ConfigRequest],
    '/cosmos.base.node.v1beta1.ConfigResponse': [condenseCosmosBaseNodeV1beta1ConfigResponse, expandCosmosBaseNodeV1beta1ConfigResponse, decodeCosmosBaseNodeV1beta1ConfigResponse],
    '/cosmos.base.node.v1beta1.StatusRequest': [condenseCosmosBaseNodeV1beta1StatusRequest, expandCosmosBaseNodeV1beta1StatusRequest, decodeCosmosBaseNodeV1beta1StatusRequest],
    '/cosmos.base.node.v1beta1.StatusResponse': [condenseCosmosBaseNodeV1beta1StatusResponse, expandCosmosBaseNodeV1beta1StatusResponse, decodeCosmosBaseNodeV1beta1StatusResponse],
    '/cosmos.base.query.v1beta1.PageRequest': [condenseCosmosBaseQueryV1beta1PageRequest, expandCosmosBaseQueryV1beta1PageRequest, decodeCosmosBaseQueryV1beta1PageRequest],
    '/cosmos.base.query.v1beta1.PageResponse': [condenseCosmosBaseQueryV1beta1PageResponse, expandCosmosBaseQueryV1beta1PageResponse, decodeCosmosBaseQueryV1beta1PageResponse],
    '/cosmos.base.reflection.v1beta1.ListAllInterfacesRequest': [condenseCosmosBaseReflectionV1beta1ListAllInterfacesRequest, expandCosmosBaseReflectionV1beta1ListAllInterfacesRequest, decodeCosmosBaseReflectionV1beta1ListAllInterfacesRequest],
    '/cosmos.base.reflection.v1beta1.ListAllInterfacesResponse': [condenseCosmosBaseReflectionV1beta1ListAllInterfacesResponse, expandCosmosBaseReflectionV1beta1ListAllInterfacesResponse, decodeCosmosBaseReflectionV1beta1ListAllInterfacesResponse],
    '/cosmos.base.reflection.v1beta1.ListImplementationsRequest': [condenseCosmosBaseReflectionV1beta1ListImplementationsRequest, expandCosmosBaseReflectionV1beta1ListImplementationsRequest, decodeCosmosBaseReflectionV1beta1ListImplementationsRequest],
    '/cosmos.base.reflection.v1beta1.ListImplementationsResponse': [condenseCosmosBaseReflectionV1beta1ListImplementationsResponse, expandCosmosBaseReflectionV1beta1ListImplementationsResponse, decodeCosmosBaseReflectionV1beta1ListImplementationsResponse],
    '/cosmos.base.reflection.v2alpha1.AppDescriptor': [condenseCosmosBaseReflectionV2alpha1AppDescriptor, expandCosmosBaseReflectionV2alpha1AppDescriptor, decodeCosmosBaseReflectionV2alpha1AppDescriptor],
    '/cosmos.base.reflection.v2alpha1.TxDescriptor': [condenseCosmosBaseReflectionV2alpha1TxDescriptor, expandCosmosBaseReflectionV2alpha1TxDescriptor, decodeCosmosBaseReflectionV2alpha1TxDescriptor],
    '/cosmos.base.reflection.v2alpha1.AuthnDescriptor': [condenseCosmosBaseReflectionV2alpha1AuthnDescriptor, expandCosmosBaseReflectionV2alpha1AuthnDescriptor, decodeCosmosBaseReflectionV2alpha1AuthnDescriptor],
    '/cosmos.base.reflection.v2alpha1.SigningModeDescriptor': [condenseCosmosBaseReflectionV2alpha1SigningModeDescriptor, expandCosmosBaseReflectionV2alpha1SigningModeDescriptor, decodeCosmosBaseReflectionV2alpha1SigningModeDescriptor],
    '/cosmos.base.reflection.v2alpha1.ChainDescriptor': [condenseCosmosBaseReflectionV2alpha1ChainDescriptor, expandCosmosBaseReflectionV2alpha1ChainDescriptor, decodeCosmosBaseReflectionV2alpha1ChainDescriptor],
    '/cosmos.base.reflection.v2alpha1.CodecDescriptor': [condenseCosmosBaseReflectionV2alpha1CodecDescriptor, expandCosmosBaseReflectionV2alpha1CodecDescriptor, decodeCosmosBaseReflectionV2alpha1CodecDescriptor],
    '/cosmos.base.reflection.v2alpha1.InterfaceDescriptor': [condenseCosmosBaseReflectionV2alpha1InterfaceDescriptor, expandCosmosBaseReflectionV2alpha1InterfaceDescriptor, decodeCosmosBaseReflectionV2alpha1InterfaceDescriptor],
    '/cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor': [condenseCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor, expandCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor, decodeCosmosBaseReflectionV2alpha1InterfaceImplementerDescriptor],
    '/cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor': [condenseCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor, expandCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor, decodeCosmosBaseReflectionV2alpha1InterfaceAcceptingMessageDescriptor],
    '/cosmos.base.reflection.v2alpha1.ConfigurationDescriptor': [condenseCosmosBaseReflectionV2alpha1ConfigurationDescriptor, expandCosmosBaseReflectionV2alpha1ConfigurationDescriptor, decodeCosmosBaseReflectionV2alpha1ConfigurationDescriptor],
    '/cosmos.base.reflection.v2alpha1.MsgDescriptor': [condenseCosmosBaseReflectionV2alpha1MsgDescriptor, expandCosmosBaseReflectionV2alpha1MsgDescriptor, decodeCosmosBaseReflectionV2alpha1MsgDescriptor],
    '/cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetAuthnDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetChainDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetChainDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetChainDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetChainDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetChainDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetChainDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetCodecDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetCodecDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetConfigurationDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetQueryServicesDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest': [condenseCosmosBaseReflectionV2alpha1GetTxDescriptorRequest, expandCosmosBaseReflectionV2alpha1GetTxDescriptorRequest, decodeCosmosBaseReflectionV2alpha1GetTxDescriptorRequest],
    '/cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse': [condenseCosmosBaseReflectionV2alpha1GetTxDescriptorResponse, expandCosmosBaseReflectionV2alpha1GetTxDescriptorResponse, decodeCosmosBaseReflectionV2alpha1GetTxDescriptorResponse],
    '/cosmos.base.reflection.v2alpha1.QueryServicesDescriptor': [condenseCosmosBaseReflectionV2alpha1QueryServicesDescriptor, expandCosmosBaseReflectionV2alpha1QueryServicesDescriptor, decodeCosmosBaseReflectionV2alpha1QueryServicesDescriptor],
    '/cosmos.base.reflection.v2alpha1.QueryServiceDescriptor': [condenseCosmosBaseReflectionV2alpha1QueryServiceDescriptor, expandCosmosBaseReflectionV2alpha1QueryServiceDescriptor, decodeCosmosBaseReflectionV2alpha1QueryServiceDescriptor],
    '/cosmos.base.reflection.v2alpha1.QueryMethodDescriptor': [condenseCosmosBaseReflectionV2alpha1QueryMethodDescriptor, expandCosmosBaseReflectionV2alpha1QueryMethodDescriptor, decodeCosmosBaseReflectionV2alpha1QueryMethodDescriptor],
    '/cosmos.store.snapshots.v1.Snapshot': [condenseCosmosStoreSnapshotsV1Snapshot, expandCosmosStoreSnapshotsV1Snapshot, decodeCosmosStoreSnapshotsV1Snapshot],
    '/cosmos.store.snapshots.v1.Metadata': [condenseCosmosStoreSnapshotsV1Metadata, expandCosmosStoreSnapshotsV1Metadata, decodeCosmosStoreSnapshotsV1Metadata],
    '/cosmos.store.snapshots.v1.SnapshotItem': [condenseCosmosStoreSnapshotsV1SnapshotItem, expandCosmosStoreSnapshotsV1SnapshotItem, decodeCosmosStoreSnapshotsV1SnapshotItem],
    '/cosmos.store.snapshots.v1.SnapshotStoreItem': [condenseCosmosStoreSnapshotsV1SnapshotStoreItem, expandCosmosStoreSnapshotsV1SnapshotStoreItem, decodeCosmosStoreSnapshotsV1SnapshotStoreItem],
    '/cosmos.store.snapshots.v1.SnapshotIAVLItem': [condenseCosmosStoreSnapshotsV1SnapshotIAVLItem, expandCosmosStoreSnapshotsV1SnapshotIAVLItem, decodeCosmosStoreSnapshotsV1SnapshotIAVLItem],
    '/cosmos.store.snapshots.v1.SnapshotExtensionMeta': [condenseCosmosStoreSnapshotsV1SnapshotExtensionMeta, expandCosmosStoreSnapshotsV1SnapshotExtensionMeta, decodeCosmosStoreSnapshotsV1SnapshotExtensionMeta],
    '/cosmos.store.snapshots.v1.SnapshotExtensionPayload': [condenseCosmosStoreSnapshotsV1SnapshotExtensionPayload, expandCosmosStoreSnapshotsV1SnapshotExtensionPayload, decodeCosmosStoreSnapshotsV1SnapshotExtensionPayload],
    '/cosmos.store.internal.kv.v1beta1.Pairs': [condenseCosmosStoreInternalKvV1beta1Pairs, expandCosmosStoreInternalKvV1beta1Pairs, decodeCosmosStoreInternalKvV1beta1Pairs],
    '/cosmos.store.internal.kv.v1beta1.Pair': [condenseCosmosStoreInternalKvV1beta1Pair, expandCosmosStoreInternalKvV1beta1Pair, decodeCosmosStoreInternalKvV1beta1Pair],
    '/cosmos.store.streaming.abci.ListenFinalizeBlockRequest': [condenseCosmosStoreStreamingAbciListenFinalizeBlockRequest, expandCosmosStoreStreamingAbciListenFinalizeBlockRequest, decodeCosmosStoreStreamingAbciListenFinalizeBlockRequest],
    '/cosmos.store.streaming.abci.ListenFinalizeBlockResponse': [condenseCosmosStoreStreamingAbciListenFinalizeBlockResponse, expandCosmosStoreStreamingAbciListenFinalizeBlockResponse, decodeCosmosStoreStreamingAbciListenFinalizeBlockResponse],
    '/cosmos.store.streaming.abci.ListenCommitRequest': [condenseCosmosStoreStreamingAbciListenCommitRequest, expandCosmosStoreStreamingAbciListenCommitRequest, decodeCosmosStoreStreamingAbciListenCommitRequest],
    '/cosmos.store.streaming.abci.ListenCommitResponse': [condenseCosmosStoreStreamingAbciListenCommitResponse, expandCosmosStoreStreamingAbciListenCommitResponse, decodeCosmosStoreStreamingAbciListenCommitResponse],
    '/cosmos.store.v1beta1.CommitInfo': [condenseCosmosStoreV1beta1CommitInfo, expandCosmosStoreV1beta1CommitInfo, decodeCosmosStoreV1beta1CommitInfo],
    '/cosmos.store.v1beta1.StoreInfo': [condenseCosmosStoreV1beta1StoreInfo, expandCosmosStoreV1beta1StoreInfo, decodeCosmosStoreV1beta1StoreInfo],
    '/cosmos.store.v1beta1.CommitID': [condenseCosmosStoreV1beta1CommitID, expandCosmosStoreV1beta1CommitID, decodeCosmosStoreV1beta1CommitID],
    '/cosmos.store.v1beta1.StoreKVPair': [condenseCosmosStoreV1beta1StoreKVPair, expandCosmosStoreV1beta1StoreKVPair, decodeCosmosStoreV1beta1StoreKVPair],
    '/cosmos.store.v1beta1.BlockMetadata': [condenseCosmosStoreV1beta1BlockMetadata, expandCosmosStoreV1beta1BlockMetadata, decodeCosmosStoreV1beta1BlockMetadata],
    '/cosmos.gov.v1.MsgSubmitProposal': [condenseCosmosGovV1MsgSubmitProposal, expandCosmosGovV1MsgSubmitProposal, decodeCosmosGovV1MsgSubmitProposal],
    '/cosmos.gov.v1.MsgSubmitProposalResponse': [condenseCosmosGovV1MsgSubmitProposalResponse, expandCosmosGovV1MsgSubmitProposalResponse, decodeCosmosGovV1MsgSubmitProposalResponse],
    '/cosmos.gov.v1.MsgExecLegacyContent': [condenseCosmosGovV1MsgExecLegacyContent, expandCosmosGovV1MsgExecLegacyContent, decodeCosmosGovV1MsgExecLegacyContent],
    '/cosmos.gov.v1.MsgExecLegacyContentResponse': [condenseCosmosGovV1MsgExecLegacyContentResponse, expandCosmosGovV1MsgExecLegacyContentResponse, decodeCosmosGovV1MsgExecLegacyContentResponse],
    '/cosmos.gov.v1.MsgVote': [condenseCosmosGovV1MsgVote, expandCosmosGovV1MsgVote, decodeCosmosGovV1MsgVote],
    '/cosmos.gov.v1.MsgVoteResponse': [condenseCosmosGovV1MsgVoteResponse, expandCosmosGovV1MsgVoteResponse, decodeCosmosGovV1MsgVoteResponse],
    '/cosmos.gov.v1.MsgVoteWeighted': [condenseCosmosGovV1MsgVoteWeighted, expandCosmosGovV1MsgVoteWeighted, decodeCosmosGovV1MsgVoteWeighted],
    '/cosmos.gov.v1.MsgVoteWeightedResponse': [condenseCosmosGovV1MsgVoteWeightedResponse, expandCosmosGovV1MsgVoteWeightedResponse, decodeCosmosGovV1MsgVoteWeightedResponse],
    '/cosmos.gov.v1.MsgDeposit': [condenseCosmosGovV1MsgDeposit, expandCosmosGovV1MsgDeposit, decodeCosmosGovV1MsgDeposit],
    '/cosmos.gov.v1.MsgDepositResponse': [condenseCosmosGovV1MsgDepositResponse, expandCosmosGovV1MsgDepositResponse, decodeCosmosGovV1MsgDepositResponse],
    '/cosmos.gov.v1.MsgUpdateParams': [condenseCosmosGovV1MsgUpdateParams, expandCosmosGovV1MsgUpdateParams, decodeCosmosGovV1MsgUpdateParams],
    '/cosmos.gov.v1.MsgUpdateParamsResponse': [condenseCosmosGovV1MsgUpdateParamsResponse, expandCosmosGovV1MsgUpdateParamsResponse, decodeCosmosGovV1MsgUpdateParamsResponse],
    '/cosmos.gov.v1.MsgCancelProposal': [condenseCosmosGovV1MsgCancelProposal, expandCosmosGovV1MsgCancelProposal, decodeCosmosGovV1MsgCancelProposal],
    '/cosmos.gov.v1.MsgCancelProposalResponse': [condenseCosmosGovV1MsgCancelProposalResponse, expandCosmosGovV1MsgCancelProposalResponse, decodeCosmosGovV1MsgCancelProposalResponse],
    '/cosmos.gov.v1.WeightedVoteOption': [condenseCosmosGovV1WeightedVoteOption, expandCosmosGovV1WeightedVoteOption, decodeCosmosGovV1WeightedVoteOption],
    '/cosmos.gov.v1.Deposit': [condenseCosmosGovV1Deposit, expandCosmosGovV1Deposit, decodeCosmosGovV1Deposit],
    '/cosmos.gov.v1.Proposal': [condenseCosmosGovV1Proposal, expandCosmosGovV1Proposal, decodeCosmosGovV1Proposal],
    '/cosmos.gov.v1.TallyResult': [condenseCosmosGovV1TallyResult, expandCosmosGovV1TallyResult, decodeCosmosGovV1TallyResult],
    '/cosmos.gov.v1.Vote': [condenseCosmosGovV1Vote, expandCosmosGovV1Vote, decodeCosmosGovV1Vote],
    '/cosmos.gov.v1.DepositParams': [condenseCosmosGovV1DepositParams, expandCosmosGovV1DepositParams, decodeCosmosGovV1DepositParams],
    '/cosmos.gov.v1.VotingParams': [condenseCosmosGovV1VotingParams, expandCosmosGovV1VotingParams, decodeCosmosGovV1VotingParams],
    '/cosmos.gov.v1.TallyParams': [condenseCosmosGovV1TallyParams, expandCosmosGovV1TallyParams, decodeCosmosGovV1TallyParams],
    '/cosmos.gov.v1.Params': [condenseCosmosGovV1Params, expandCosmosGovV1Params, decodeCosmosGovV1Params],
    '/cosmos.gov.v1.QueryConstitutionRequest': [condenseCosmosGovV1QueryConstitutionRequest, expandCosmosGovV1QueryConstitutionRequest, decodeCosmosGovV1QueryConstitutionRequest],
    '/cosmos.gov.v1.QueryConstitutionResponse': [condenseCosmosGovV1QueryConstitutionResponse, expandCosmosGovV1QueryConstitutionResponse, decodeCosmosGovV1QueryConstitutionResponse],
    '/cosmos.gov.v1.QueryProposalRequest': [condenseCosmosGovV1QueryProposalRequest, expandCosmosGovV1QueryProposalRequest, decodeCosmosGovV1QueryProposalRequest],
    '/cosmos.gov.v1.QueryProposalResponse': [condenseCosmosGovV1QueryProposalResponse, expandCosmosGovV1QueryProposalResponse, decodeCosmosGovV1QueryProposalResponse],
    '/cosmos.gov.v1.QueryProposalsRequest': [condenseCosmosGovV1QueryProposalsRequest, expandCosmosGovV1QueryProposalsRequest, decodeCosmosGovV1QueryProposalsRequest],
    '/cosmos.gov.v1.QueryProposalsResponse': [condenseCosmosGovV1QueryProposalsResponse, expandCosmosGovV1QueryProposalsResponse, decodeCosmosGovV1QueryProposalsResponse],
    '/cosmos.gov.v1.QueryVoteRequest': [condenseCosmosGovV1QueryVoteRequest, expandCosmosGovV1QueryVoteRequest, decodeCosmosGovV1QueryVoteRequest],
    '/cosmos.gov.v1.QueryVoteResponse': [condenseCosmosGovV1QueryVoteResponse, expandCosmosGovV1QueryVoteResponse, decodeCosmosGovV1QueryVoteResponse],
    '/cosmos.gov.v1.QueryVotesRequest': [condenseCosmosGovV1QueryVotesRequest, expandCosmosGovV1QueryVotesRequest, decodeCosmosGovV1QueryVotesRequest],
    '/cosmos.gov.v1.QueryVotesResponse': [condenseCosmosGovV1QueryVotesResponse, expandCosmosGovV1QueryVotesResponse, decodeCosmosGovV1QueryVotesResponse],
    '/cosmos.gov.v1.QueryParamsRequest': [condenseCosmosGovV1QueryParamsRequest, expandCosmosGovV1QueryParamsRequest, decodeCosmosGovV1QueryParamsRequest],
    '/cosmos.gov.v1.QueryParamsResponse': [condenseCosmosGovV1QueryParamsResponse, expandCosmosGovV1QueryParamsResponse, decodeCosmosGovV1QueryParamsResponse],
    '/cosmos.gov.v1.QueryDepositRequest': [condenseCosmosGovV1QueryDepositRequest, expandCosmosGovV1QueryDepositRequest, decodeCosmosGovV1QueryDepositRequest],
    '/cosmos.gov.v1.QueryDepositResponse': [condenseCosmosGovV1QueryDepositResponse, expandCosmosGovV1QueryDepositResponse, decodeCosmosGovV1QueryDepositResponse],
    '/cosmos.gov.v1.QueryDepositsRequest': [condenseCosmosGovV1QueryDepositsRequest, expandCosmosGovV1QueryDepositsRequest, decodeCosmosGovV1QueryDepositsRequest],
    '/cosmos.gov.v1.QueryDepositsResponse': [condenseCosmosGovV1QueryDepositsResponse, expandCosmosGovV1QueryDepositsResponse, decodeCosmosGovV1QueryDepositsResponse],
    '/cosmos.gov.v1.QueryTallyResultRequest': [condenseCosmosGovV1QueryTallyResultRequest, expandCosmosGovV1QueryTallyResultRequest, decodeCosmosGovV1QueryTallyResultRequest],
    '/cosmos.gov.v1.QueryTallyResultResponse': [condenseCosmosGovV1QueryTallyResultResponse, expandCosmosGovV1QueryTallyResultResponse, decodeCosmosGovV1QueryTallyResultResponse],
    '/cosmos.gov.v1.GenesisState': [condenseCosmosGovV1GenesisState, expandCosmosGovV1GenesisState, decodeCosmosGovV1GenesisState],
    '/cosmos.gov.module.v1.Module': [condenseCosmosGovModuleV1Module, expandCosmosGovModuleV1Module, decodeCosmosGovModuleV1Module],
    '/cosmos.gov.v1beta1.MsgSubmitProposal': [condenseCosmosGovV1beta1MsgSubmitProposal, expandCosmosGovV1beta1MsgSubmitProposal, decodeCosmosGovV1beta1MsgSubmitProposal],
    '/cosmos.gov.v1beta1.MsgSubmitProposalResponse': [condenseCosmosGovV1beta1MsgSubmitProposalResponse, expandCosmosGovV1beta1MsgSubmitProposalResponse, decodeCosmosGovV1beta1MsgSubmitProposalResponse],
    '/cosmos.gov.v1beta1.MsgVote': [condenseCosmosGovV1beta1MsgVote, expandCosmosGovV1beta1MsgVote, decodeCosmosGovV1beta1MsgVote],
    '/cosmos.gov.v1beta1.MsgVoteResponse': [condenseCosmosGovV1beta1MsgVoteResponse, expandCosmosGovV1beta1MsgVoteResponse, decodeCosmosGovV1beta1MsgVoteResponse],
    '/cosmos.gov.v1beta1.MsgVoteWeighted': [condenseCosmosGovV1beta1MsgVoteWeighted, expandCosmosGovV1beta1MsgVoteWeighted, decodeCosmosGovV1beta1MsgVoteWeighted],
    '/cosmos.gov.v1beta1.MsgVoteWeightedResponse': [condenseCosmosGovV1beta1MsgVoteWeightedResponse, expandCosmosGovV1beta1MsgVoteWeightedResponse, decodeCosmosGovV1beta1MsgVoteWeightedResponse],
    '/cosmos.gov.v1beta1.MsgDeposit': [condenseCosmosGovV1beta1MsgDeposit, expandCosmosGovV1beta1MsgDeposit, decodeCosmosGovV1beta1MsgDeposit],
    '/cosmos.gov.v1beta1.MsgDepositResponse': [condenseCosmosGovV1beta1MsgDepositResponse, expandCosmosGovV1beta1MsgDepositResponse, decodeCosmosGovV1beta1MsgDepositResponse],
    '/cosmos.gov.v1beta1.WeightedVoteOption': [condenseCosmosGovV1beta1WeightedVoteOption, expandCosmosGovV1beta1WeightedVoteOption, decodeCosmosGovV1beta1WeightedVoteOption],
    '/cosmos.gov.v1beta1.TextProposal': [condenseCosmosGovV1beta1TextProposal, expandCosmosGovV1beta1TextProposal, decodeCosmosGovV1beta1TextProposal],
    '/cosmos.gov.v1beta1.Deposit': [condenseCosmosGovV1beta1Deposit, expandCosmosGovV1beta1Deposit, decodeCosmosGovV1beta1Deposit],
    '/cosmos.gov.v1beta1.Proposal': [condenseCosmosGovV1beta1Proposal, expandCosmosGovV1beta1Proposal, decodeCosmosGovV1beta1Proposal],
    '/cosmos.gov.v1beta1.TallyResult': [condenseCosmosGovV1beta1TallyResult, expandCosmosGovV1beta1TallyResult, decodeCosmosGovV1beta1TallyResult],
    '/cosmos.gov.v1beta1.Vote': [condenseCosmosGovV1beta1Vote, expandCosmosGovV1beta1Vote, decodeCosmosGovV1beta1Vote],
    '/cosmos.gov.v1beta1.DepositParams': [condenseCosmosGovV1beta1DepositParams, expandCosmosGovV1beta1DepositParams, decodeCosmosGovV1beta1DepositParams],
    '/cosmos.gov.v1beta1.VotingParams': [condenseCosmosGovV1beta1VotingParams, expandCosmosGovV1beta1VotingParams, decodeCosmosGovV1beta1VotingParams],
    '/cosmos.gov.v1beta1.TallyParams': [condenseCosmosGovV1beta1TallyParams, expandCosmosGovV1beta1TallyParams, decodeCosmosGovV1beta1TallyParams],
    '/cosmos.gov.v1beta1.QueryProposalRequest': [condenseCosmosGovV1beta1QueryProposalRequest, expandCosmosGovV1beta1QueryProposalRequest, decodeCosmosGovV1beta1QueryProposalRequest],
    '/cosmos.gov.v1beta1.QueryProposalResponse': [condenseCosmosGovV1beta1QueryProposalResponse, expandCosmosGovV1beta1QueryProposalResponse, decodeCosmosGovV1beta1QueryProposalResponse],
    '/cosmos.gov.v1beta1.QueryProposalsRequest': [condenseCosmosGovV1beta1QueryProposalsRequest, expandCosmosGovV1beta1QueryProposalsRequest, decodeCosmosGovV1beta1QueryProposalsRequest],
    '/cosmos.gov.v1beta1.QueryProposalsResponse': [condenseCosmosGovV1beta1QueryProposalsResponse, expandCosmosGovV1beta1QueryProposalsResponse, decodeCosmosGovV1beta1QueryProposalsResponse],
    '/cosmos.gov.v1beta1.QueryVoteRequest': [condenseCosmosGovV1beta1QueryVoteRequest, expandCosmosGovV1beta1QueryVoteRequest, decodeCosmosGovV1beta1QueryVoteRequest],
    '/cosmos.gov.v1beta1.QueryVoteResponse': [condenseCosmosGovV1beta1QueryVoteResponse, expandCosmosGovV1beta1QueryVoteResponse, decodeCosmosGovV1beta1QueryVoteResponse],
    '/cosmos.gov.v1beta1.QueryVotesRequest': [condenseCosmosGovV1beta1QueryVotesRequest, expandCosmosGovV1beta1QueryVotesRequest, decodeCosmosGovV1beta1QueryVotesRequest],
    '/cosmos.gov.v1beta1.QueryVotesResponse': [condenseCosmosGovV1beta1QueryVotesResponse, expandCosmosGovV1beta1QueryVotesResponse, decodeCosmosGovV1beta1QueryVotesResponse],
    '/cosmos.gov.v1beta1.QueryParamsRequest': [condenseCosmosGovV1beta1QueryParamsRequest, expandCosmosGovV1beta1QueryParamsRequest, decodeCosmosGovV1beta1QueryParamsRequest],
    '/cosmos.gov.v1beta1.QueryParamsResponse': [condenseCosmosGovV1beta1QueryParamsResponse, expandCosmosGovV1beta1QueryParamsResponse, decodeCosmosGovV1beta1QueryParamsResponse],
    '/cosmos.gov.v1beta1.QueryDepositRequest': [condenseCosmosGovV1beta1QueryDepositRequest, expandCosmosGovV1beta1QueryDepositRequest, decodeCosmosGovV1beta1QueryDepositRequest],
    '/cosmos.gov.v1beta1.QueryDepositResponse': [condenseCosmosGovV1beta1QueryDepositResponse, expandCosmosGovV1beta1QueryDepositResponse, decodeCosmosGovV1beta1QueryDepositResponse],
    '/cosmos.gov.v1beta1.QueryDepositsRequest': [condenseCosmosGovV1beta1QueryDepositsRequest, expandCosmosGovV1beta1QueryDepositsRequest, decodeCosmosGovV1beta1QueryDepositsRequest],
    '/cosmos.gov.v1beta1.QueryDepositsResponse': [condenseCosmosGovV1beta1QueryDepositsResponse, expandCosmosGovV1beta1QueryDepositsResponse, decodeCosmosGovV1beta1QueryDepositsResponse],
    '/cosmos.gov.v1beta1.QueryTallyResultRequest': [condenseCosmosGovV1beta1QueryTallyResultRequest, expandCosmosGovV1beta1QueryTallyResultRequest, decodeCosmosGovV1beta1QueryTallyResultRequest],
    '/cosmos.gov.v1beta1.QueryTallyResultResponse': [condenseCosmosGovV1beta1QueryTallyResultResponse, expandCosmosGovV1beta1QueryTallyResultResponse, decodeCosmosGovV1beta1QueryTallyResultResponse],
    '/cosmos.gov.v1beta1.GenesisState': [condenseCosmosGovV1beta1GenesisState, expandCosmosGovV1beta1GenesisState, decodeCosmosGovV1beta1GenesisState],
    '/cosmos.reflection.v1.FileDescriptorsRequest': [condenseCosmosReflectionV1FileDescriptorsRequest, expandCosmosReflectionV1FileDescriptorsRequest, decodeCosmosReflectionV1FileDescriptorsRequest],
    '/cosmos.reflection.v1.FileDescriptorsResponse': [condenseCosmosReflectionV1FileDescriptorsResponse, expandCosmosReflectionV1FileDescriptorsResponse, decodeCosmosReflectionV1FileDescriptorsResponse],
    '/ibc.core.types.v1.GenesisState': [condenseIbcCoreTypesV1GenesisState, expandIbcCoreTypesV1GenesisState, decodeIbcCoreTypesV1GenesisState],
    '/ibc.core.connection.v1.MsgConnectionOpenInit': [condenseIbcCoreConnectionV1MsgConnectionOpenInit, expandIbcCoreConnectionV1MsgConnectionOpenInit, decodeIbcCoreConnectionV1MsgConnectionOpenInit],
    '/ibc.core.connection.v1.MsgConnectionOpenInitResponse': [condenseIbcCoreConnectionV1MsgConnectionOpenInitResponse, expandIbcCoreConnectionV1MsgConnectionOpenInitResponse, decodeIbcCoreConnectionV1MsgConnectionOpenInitResponse],
    '/ibc.core.connection.v1.MsgConnectionOpenTry': [condenseIbcCoreConnectionV1MsgConnectionOpenTry, expandIbcCoreConnectionV1MsgConnectionOpenTry, decodeIbcCoreConnectionV1MsgConnectionOpenTry],
    '/ibc.core.connection.v1.MsgConnectionOpenTryResponse': [condenseIbcCoreConnectionV1MsgConnectionOpenTryResponse, expandIbcCoreConnectionV1MsgConnectionOpenTryResponse, decodeIbcCoreConnectionV1MsgConnectionOpenTryResponse],
    '/ibc.core.connection.v1.MsgConnectionOpenAck': [condenseIbcCoreConnectionV1MsgConnectionOpenAck, expandIbcCoreConnectionV1MsgConnectionOpenAck, decodeIbcCoreConnectionV1MsgConnectionOpenAck],
    '/ibc.core.connection.v1.MsgConnectionOpenAckResponse': [condenseIbcCoreConnectionV1MsgConnectionOpenAckResponse, expandIbcCoreConnectionV1MsgConnectionOpenAckResponse, decodeIbcCoreConnectionV1MsgConnectionOpenAckResponse],
    '/ibc.core.connection.v1.MsgConnectionOpenConfirm': [condenseIbcCoreConnectionV1MsgConnectionOpenConfirm, expandIbcCoreConnectionV1MsgConnectionOpenConfirm, decodeIbcCoreConnectionV1MsgConnectionOpenConfirm],
    '/ibc.core.connection.v1.MsgConnectionOpenConfirmResponse': [condenseIbcCoreConnectionV1MsgConnectionOpenConfirmResponse, expandIbcCoreConnectionV1MsgConnectionOpenConfirmResponse, decodeIbcCoreConnectionV1MsgConnectionOpenConfirmResponse],
    '/ibc.core.connection.v1.MsgUpdateParams': [condenseIbcCoreConnectionV1MsgUpdateParams, expandIbcCoreConnectionV1MsgUpdateParams, decodeIbcCoreConnectionV1MsgUpdateParams],
    '/ibc.core.connection.v1.MsgUpdateParamsResponse': [condenseIbcCoreConnectionV1MsgUpdateParamsResponse, expandIbcCoreConnectionV1MsgUpdateParamsResponse, decodeIbcCoreConnectionV1MsgUpdateParamsResponse],
    '/ibc.core.connection.v1.QueryConnectionRequest': [condenseIbcCoreConnectionV1QueryConnectionRequest, expandIbcCoreConnectionV1QueryConnectionRequest, decodeIbcCoreConnectionV1QueryConnectionRequest],
    '/ibc.core.connection.v1.QueryConnectionResponse': [condenseIbcCoreConnectionV1QueryConnectionResponse, expandIbcCoreConnectionV1QueryConnectionResponse, decodeIbcCoreConnectionV1QueryConnectionResponse],
    '/ibc.core.connection.v1.QueryConnectionsRequest': [condenseIbcCoreConnectionV1QueryConnectionsRequest, expandIbcCoreConnectionV1QueryConnectionsRequest, decodeIbcCoreConnectionV1QueryConnectionsRequest],
    '/ibc.core.connection.v1.QueryConnectionsResponse': [condenseIbcCoreConnectionV1QueryConnectionsResponse, expandIbcCoreConnectionV1QueryConnectionsResponse, decodeIbcCoreConnectionV1QueryConnectionsResponse],
    '/ibc.core.connection.v1.QueryClientConnectionsRequest': [condenseIbcCoreConnectionV1QueryClientConnectionsRequest, expandIbcCoreConnectionV1QueryClientConnectionsRequest, decodeIbcCoreConnectionV1QueryClientConnectionsRequest],
    '/ibc.core.connection.v1.QueryClientConnectionsResponse': [condenseIbcCoreConnectionV1QueryClientConnectionsResponse, expandIbcCoreConnectionV1QueryClientConnectionsResponse, decodeIbcCoreConnectionV1QueryClientConnectionsResponse],
    '/ibc.core.connection.v1.QueryConnectionClientStateRequest': [condenseIbcCoreConnectionV1QueryConnectionClientStateRequest, expandIbcCoreConnectionV1QueryConnectionClientStateRequest, decodeIbcCoreConnectionV1QueryConnectionClientStateRequest],
    '/ibc.core.connection.v1.QueryConnectionClientStateResponse': [condenseIbcCoreConnectionV1QueryConnectionClientStateResponse, expandIbcCoreConnectionV1QueryConnectionClientStateResponse, decodeIbcCoreConnectionV1QueryConnectionClientStateResponse],
    '/ibc.core.connection.v1.QueryConnectionConsensusStateRequest': [condenseIbcCoreConnectionV1QueryConnectionConsensusStateRequest, expandIbcCoreConnectionV1QueryConnectionConsensusStateRequest, decodeIbcCoreConnectionV1QueryConnectionConsensusStateRequest],
    '/ibc.core.connection.v1.QueryConnectionConsensusStateResponse': [condenseIbcCoreConnectionV1QueryConnectionConsensusStateResponse, expandIbcCoreConnectionV1QueryConnectionConsensusStateResponse, decodeIbcCoreConnectionV1QueryConnectionConsensusStateResponse],
    '/ibc.core.connection.v1.QueryConnectionParamsRequest': [condenseIbcCoreConnectionV1QueryConnectionParamsRequest, expandIbcCoreConnectionV1QueryConnectionParamsRequest, decodeIbcCoreConnectionV1QueryConnectionParamsRequest],
    '/ibc.core.connection.v1.QueryConnectionParamsResponse': [condenseIbcCoreConnectionV1QueryConnectionParamsResponse, expandIbcCoreConnectionV1QueryConnectionParamsResponse, decodeIbcCoreConnectionV1QueryConnectionParamsResponse],
    '/ibc.core.connection.v1.ConnectionEnd': [condenseIbcCoreConnectionV1ConnectionEnd, expandIbcCoreConnectionV1ConnectionEnd, decodeIbcCoreConnectionV1ConnectionEnd],
    '/ibc.core.connection.v1.IdentifiedConnection': [condenseIbcCoreConnectionV1IdentifiedConnection, expandIbcCoreConnectionV1IdentifiedConnection, decodeIbcCoreConnectionV1IdentifiedConnection],
    '/ibc.core.connection.v1.Counterparty': [condenseIbcCoreConnectionV1Counterparty, expandIbcCoreConnectionV1Counterparty, decodeIbcCoreConnectionV1Counterparty],
    '/ibc.core.connection.v1.ClientPaths': [condenseIbcCoreConnectionV1ClientPaths, expandIbcCoreConnectionV1ClientPaths, decodeIbcCoreConnectionV1ClientPaths],
    '/ibc.core.connection.v1.ConnectionPaths': [condenseIbcCoreConnectionV1ConnectionPaths, expandIbcCoreConnectionV1ConnectionPaths, decodeIbcCoreConnectionV1ConnectionPaths],
    '/ibc.core.connection.v1.Version': [condenseIbcCoreConnectionV1Version, expandIbcCoreConnectionV1Version, decodeIbcCoreConnectionV1Version],
    '/ibc.core.connection.v1.Params': [condenseIbcCoreConnectionV1Params, expandIbcCoreConnectionV1Params, decodeIbcCoreConnectionV1Params],
    '/ibc.core.connection.v1.GenesisState': [condenseIbcCoreConnectionV1GenesisState, expandIbcCoreConnectionV1GenesisState, decodeIbcCoreConnectionV1GenesisState],
    '/ibc.core.commitment.v1.MerkleRoot': [condenseIbcCoreCommitmentV1MerkleRoot, expandIbcCoreCommitmentV1MerkleRoot, decodeIbcCoreCommitmentV1MerkleRoot],
    '/ibc.core.commitment.v1.MerklePrefix': [condenseIbcCoreCommitmentV1MerklePrefix, expandIbcCoreCommitmentV1MerklePrefix, decodeIbcCoreCommitmentV1MerklePrefix],
    '/ibc.core.commitment.v1.MerklePath': [condenseIbcCoreCommitmentV1MerklePath, expandIbcCoreCommitmentV1MerklePath, decodeIbcCoreCommitmentV1MerklePath],
    '/ibc.core.commitment.v1.MerkleProof': [condenseIbcCoreCommitmentV1MerkleProof, expandIbcCoreCommitmentV1MerkleProof, decodeIbcCoreCommitmentV1MerkleProof],
    '/ibc.core.channel.v1.MsgChannelOpenInit': [condenseIbcCoreChannelV1MsgChannelOpenInit, expandIbcCoreChannelV1MsgChannelOpenInit, decodeIbcCoreChannelV1MsgChannelOpenInit],
    '/ibc.core.channel.v1.MsgChannelOpenInitResponse': [condenseIbcCoreChannelV1MsgChannelOpenInitResponse, expandIbcCoreChannelV1MsgChannelOpenInitResponse, decodeIbcCoreChannelV1MsgChannelOpenInitResponse],
    '/ibc.core.channel.v1.MsgChannelOpenTry': [condenseIbcCoreChannelV1MsgChannelOpenTry, expandIbcCoreChannelV1MsgChannelOpenTry, decodeIbcCoreChannelV1MsgChannelOpenTry],
    '/ibc.core.channel.v1.MsgChannelOpenTryResponse': [condenseIbcCoreChannelV1MsgChannelOpenTryResponse, expandIbcCoreChannelV1MsgChannelOpenTryResponse, decodeIbcCoreChannelV1MsgChannelOpenTryResponse],
    '/ibc.core.channel.v1.MsgChannelOpenAck': [condenseIbcCoreChannelV1MsgChannelOpenAck, expandIbcCoreChannelV1MsgChannelOpenAck, decodeIbcCoreChannelV1MsgChannelOpenAck],
    '/ibc.core.channel.v1.MsgChannelOpenAckResponse': [condenseIbcCoreChannelV1MsgChannelOpenAckResponse, expandIbcCoreChannelV1MsgChannelOpenAckResponse, decodeIbcCoreChannelV1MsgChannelOpenAckResponse],
    '/ibc.core.channel.v1.MsgChannelOpenConfirm': [condenseIbcCoreChannelV1MsgChannelOpenConfirm, expandIbcCoreChannelV1MsgChannelOpenConfirm, decodeIbcCoreChannelV1MsgChannelOpenConfirm],
    '/ibc.core.channel.v1.MsgChannelOpenConfirmResponse': [condenseIbcCoreChannelV1MsgChannelOpenConfirmResponse, expandIbcCoreChannelV1MsgChannelOpenConfirmResponse, decodeIbcCoreChannelV1MsgChannelOpenConfirmResponse],
    '/ibc.core.channel.v1.MsgChannelCloseInit': [condenseIbcCoreChannelV1MsgChannelCloseInit, expandIbcCoreChannelV1MsgChannelCloseInit, decodeIbcCoreChannelV1MsgChannelCloseInit],
    '/ibc.core.channel.v1.MsgChannelCloseInitResponse': [condenseIbcCoreChannelV1MsgChannelCloseInitResponse, expandIbcCoreChannelV1MsgChannelCloseInitResponse, decodeIbcCoreChannelV1MsgChannelCloseInitResponse],
    '/ibc.core.channel.v1.MsgChannelCloseConfirm': [condenseIbcCoreChannelV1MsgChannelCloseConfirm, expandIbcCoreChannelV1MsgChannelCloseConfirm, decodeIbcCoreChannelV1MsgChannelCloseConfirm],
    '/ibc.core.channel.v1.MsgChannelCloseConfirmResponse': [condenseIbcCoreChannelV1MsgChannelCloseConfirmResponse, expandIbcCoreChannelV1MsgChannelCloseConfirmResponse, decodeIbcCoreChannelV1MsgChannelCloseConfirmResponse],
    '/ibc.core.channel.v1.MsgRecvPacket': [condenseIbcCoreChannelV1MsgRecvPacket, expandIbcCoreChannelV1MsgRecvPacket, decodeIbcCoreChannelV1MsgRecvPacket],
    '/ibc.core.channel.v1.MsgRecvPacketResponse': [condenseIbcCoreChannelV1MsgRecvPacketResponse, expandIbcCoreChannelV1MsgRecvPacketResponse, decodeIbcCoreChannelV1MsgRecvPacketResponse],
    '/ibc.core.channel.v1.MsgTimeout': [condenseIbcCoreChannelV1MsgTimeout, expandIbcCoreChannelV1MsgTimeout, decodeIbcCoreChannelV1MsgTimeout],
    '/ibc.core.channel.v1.MsgTimeoutResponse': [condenseIbcCoreChannelV1MsgTimeoutResponse, expandIbcCoreChannelV1MsgTimeoutResponse, decodeIbcCoreChannelV1MsgTimeoutResponse],
    '/ibc.core.channel.v1.MsgTimeoutOnClose': [condenseIbcCoreChannelV1MsgTimeoutOnClose, expandIbcCoreChannelV1MsgTimeoutOnClose, decodeIbcCoreChannelV1MsgTimeoutOnClose],
    '/ibc.core.channel.v1.MsgTimeoutOnCloseResponse': [condenseIbcCoreChannelV1MsgTimeoutOnCloseResponse, expandIbcCoreChannelV1MsgTimeoutOnCloseResponse, decodeIbcCoreChannelV1MsgTimeoutOnCloseResponse],
    '/ibc.core.channel.v1.MsgAcknowledgement': [condenseIbcCoreChannelV1MsgAcknowledgement, expandIbcCoreChannelV1MsgAcknowledgement, decodeIbcCoreChannelV1MsgAcknowledgement],
    '/ibc.core.channel.v1.MsgAcknowledgementResponse': [condenseIbcCoreChannelV1MsgAcknowledgementResponse, expandIbcCoreChannelV1MsgAcknowledgementResponse, decodeIbcCoreChannelV1MsgAcknowledgementResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeInit': [condenseIbcCoreChannelV1MsgChannelUpgradeInit, expandIbcCoreChannelV1MsgChannelUpgradeInit, decodeIbcCoreChannelV1MsgChannelUpgradeInit],
    '/ibc.core.channel.v1.MsgChannelUpgradeInitResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeInitResponse, expandIbcCoreChannelV1MsgChannelUpgradeInitResponse, decodeIbcCoreChannelV1MsgChannelUpgradeInitResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeTry': [condenseIbcCoreChannelV1MsgChannelUpgradeTry, expandIbcCoreChannelV1MsgChannelUpgradeTry, decodeIbcCoreChannelV1MsgChannelUpgradeTry],
    '/ibc.core.channel.v1.MsgChannelUpgradeTryResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeTryResponse, expandIbcCoreChannelV1MsgChannelUpgradeTryResponse, decodeIbcCoreChannelV1MsgChannelUpgradeTryResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeAck': [condenseIbcCoreChannelV1MsgChannelUpgradeAck, expandIbcCoreChannelV1MsgChannelUpgradeAck, decodeIbcCoreChannelV1MsgChannelUpgradeAck],
    '/ibc.core.channel.v1.MsgChannelUpgradeAckResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeAckResponse, expandIbcCoreChannelV1MsgChannelUpgradeAckResponse, decodeIbcCoreChannelV1MsgChannelUpgradeAckResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeConfirm': [condenseIbcCoreChannelV1MsgChannelUpgradeConfirm, expandIbcCoreChannelV1MsgChannelUpgradeConfirm, decodeIbcCoreChannelV1MsgChannelUpgradeConfirm],
    '/ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeConfirmResponse, expandIbcCoreChannelV1MsgChannelUpgradeConfirmResponse, decodeIbcCoreChannelV1MsgChannelUpgradeConfirmResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeOpen': [condenseIbcCoreChannelV1MsgChannelUpgradeOpen, expandIbcCoreChannelV1MsgChannelUpgradeOpen, decodeIbcCoreChannelV1MsgChannelUpgradeOpen],
    '/ibc.core.channel.v1.MsgChannelUpgradeOpenResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeOpenResponse, expandIbcCoreChannelV1MsgChannelUpgradeOpenResponse, decodeIbcCoreChannelV1MsgChannelUpgradeOpenResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeTimeout': [condenseIbcCoreChannelV1MsgChannelUpgradeTimeout, expandIbcCoreChannelV1MsgChannelUpgradeTimeout, decodeIbcCoreChannelV1MsgChannelUpgradeTimeout],
    '/ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse, expandIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse, decodeIbcCoreChannelV1MsgChannelUpgradeTimeoutResponse],
    '/ibc.core.channel.v1.MsgChannelUpgradeCancel': [condenseIbcCoreChannelV1MsgChannelUpgradeCancel, expandIbcCoreChannelV1MsgChannelUpgradeCancel, decodeIbcCoreChannelV1MsgChannelUpgradeCancel],
    '/ibc.core.channel.v1.MsgChannelUpgradeCancelResponse': [condenseIbcCoreChannelV1MsgChannelUpgradeCancelResponse, expandIbcCoreChannelV1MsgChannelUpgradeCancelResponse, decodeIbcCoreChannelV1MsgChannelUpgradeCancelResponse],
    '/ibc.core.channel.v1.MsgUpdateParams': [condenseIbcCoreChannelV1MsgUpdateParams, expandIbcCoreChannelV1MsgUpdateParams, decodeIbcCoreChannelV1MsgUpdateParams],
    '/ibc.core.channel.v1.MsgUpdateParamsResponse': [condenseIbcCoreChannelV1MsgUpdateParamsResponse, expandIbcCoreChannelV1MsgUpdateParamsResponse, decodeIbcCoreChannelV1MsgUpdateParamsResponse],
    '/ibc.core.channel.v1.MsgPruneAcknowledgements': [condenseIbcCoreChannelV1MsgPruneAcknowledgements, expandIbcCoreChannelV1MsgPruneAcknowledgements, decodeIbcCoreChannelV1MsgPruneAcknowledgements],
    '/ibc.core.channel.v1.MsgPruneAcknowledgementsResponse': [condenseIbcCoreChannelV1MsgPruneAcknowledgementsResponse, expandIbcCoreChannelV1MsgPruneAcknowledgementsResponse, decodeIbcCoreChannelV1MsgPruneAcknowledgementsResponse],
    '/ibc.core.channel.v1.Upgrade': [condenseIbcCoreChannelV1Upgrade, expandIbcCoreChannelV1Upgrade, decodeIbcCoreChannelV1Upgrade],
    '/ibc.core.channel.v1.UpgradeFields': [condenseIbcCoreChannelV1UpgradeFields, expandIbcCoreChannelV1UpgradeFields, decodeIbcCoreChannelV1UpgradeFields],
    '/ibc.core.channel.v1.ErrorReceipt': [condenseIbcCoreChannelV1ErrorReceipt, expandIbcCoreChannelV1ErrorReceipt, decodeIbcCoreChannelV1ErrorReceipt],
    '/ibc.core.channel.v1.QueryChannelRequest': [condenseIbcCoreChannelV1QueryChannelRequest, expandIbcCoreChannelV1QueryChannelRequest, decodeIbcCoreChannelV1QueryChannelRequest],
    '/ibc.core.channel.v1.QueryChannelResponse': [condenseIbcCoreChannelV1QueryChannelResponse, expandIbcCoreChannelV1QueryChannelResponse, decodeIbcCoreChannelV1QueryChannelResponse],
    '/ibc.core.channel.v1.QueryChannelsRequest': [condenseIbcCoreChannelV1QueryChannelsRequest, expandIbcCoreChannelV1QueryChannelsRequest, decodeIbcCoreChannelV1QueryChannelsRequest],
    '/ibc.core.channel.v1.QueryChannelsResponse': [condenseIbcCoreChannelV1QueryChannelsResponse, expandIbcCoreChannelV1QueryChannelsResponse, decodeIbcCoreChannelV1QueryChannelsResponse],
    '/ibc.core.channel.v1.QueryConnectionChannelsRequest': [condenseIbcCoreChannelV1QueryConnectionChannelsRequest, expandIbcCoreChannelV1QueryConnectionChannelsRequest, decodeIbcCoreChannelV1QueryConnectionChannelsRequest],
    '/ibc.core.channel.v1.QueryConnectionChannelsResponse': [condenseIbcCoreChannelV1QueryConnectionChannelsResponse, expandIbcCoreChannelV1QueryConnectionChannelsResponse, decodeIbcCoreChannelV1QueryConnectionChannelsResponse],
    '/ibc.core.channel.v1.QueryChannelClientStateRequest': [condenseIbcCoreChannelV1QueryChannelClientStateRequest, expandIbcCoreChannelV1QueryChannelClientStateRequest, decodeIbcCoreChannelV1QueryChannelClientStateRequest],
    '/ibc.core.channel.v1.QueryChannelClientStateResponse': [condenseIbcCoreChannelV1QueryChannelClientStateResponse, expandIbcCoreChannelV1QueryChannelClientStateResponse, decodeIbcCoreChannelV1QueryChannelClientStateResponse],
    '/ibc.core.channel.v1.QueryChannelConsensusStateRequest': [condenseIbcCoreChannelV1QueryChannelConsensusStateRequest, expandIbcCoreChannelV1QueryChannelConsensusStateRequest, decodeIbcCoreChannelV1QueryChannelConsensusStateRequest],
    '/ibc.core.channel.v1.QueryChannelConsensusStateResponse': [condenseIbcCoreChannelV1QueryChannelConsensusStateResponse, expandIbcCoreChannelV1QueryChannelConsensusStateResponse, decodeIbcCoreChannelV1QueryChannelConsensusStateResponse],
    '/ibc.core.channel.v1.QueryPacketCommitmentRequest': [condenseIbcCoreChannelV1QueryPacketCommitmentRequest, expandIbcCoreChannelV1QueryPacketCommitmentRequest, decodeIbcCoreChannelV1QueryPacketCommitmentRequest],
    '/ibc.core.channel.v1.QueryPacketCommitmentResponse': [condenseIbcCoreChannelV1QueryPacketCommitmentResponse, expandIbcCoreChannelV1QueryPacketCommitmentResponse, decodeIbcCoreChannelV1QueryPacketCommitmentResponse],
    '/ibc.core.channel.v1.QueryPacketCommitmentsRequest': [condenseIbcCoreChannelV1QueryPacketCommitmentsRequest, expandIbcCoreChannelV1QueryPacketCommitmentsRequest, decodeIbcCoreChannelV1QueryPacketCommitmentsRequest],
    '/ibc.core.channel.v1.QueryPacketCommitmentsResponse': [condenseIbcCoreChannelV1QueryPacketCommitmentsResponse, expandIbcCoreChannelV1QueryPacketCommitmentsResponse, decodeIbcCoreChannelV1QueryPacketCommitmentsResponse],
    '/ibc.core.channel.v1.QueryPacketReceiptRequest': [condenseIbcCoreChannelV1QueryPacketReceiptRequest, expandIbcCoreChannelV1QueryPacketReceiptRequest, decodeIbcCoreChannelV1QueryPacketReceiptRequest],
    '/ibc.core.channel.v1.QueryPacketReceiptResponse': [condenseIbcCoreChannelV1QueryPacketReceiptResponse, expandIbcCoreChannelV1QueryPacketReceiptResponse, decodeIbcCoreChannelV1QueryPacketReceiptResponse],
    '/ibc.core.channel.v1.QueryPacketAcknowledgementRequest': [condenseIbcCoreChannelV1QueryPacketAcknowledgementRequest, expandIbcCoreChannelV1QueryPacketAcknowledgementRequest, decodeIbcCoreChannelV1QueryPacketAcknowledgementRequest],
    '/ibc.core.channel.v1.QueryPacketAcknowledgementResponse': [condenseIbcCoreChannelV1QueryPacketAcknowledgementResponse, expandIbcCoreChannelV1QueryPacketAcknowledgementResponse, decodeIbcCoreChannelV1QueryPacketAcknowledgementResponse],
    '/ibc.core.channel.v1.QueryPacketAcknowledgementsRequest': [condenseIbcCoreChannelV1QueryPacketAcknowledgementsRequest, expandIbcCoreChannelV1QueryPacketAcknowledgementsRequest, decodeIbcCoreChannelV1QueryPacketAcknowledgementsRequest],
    '/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse': [condenseIbcCoreChannelV1QueryPacketAcknowledgementsResponse, expandIbcCoreChannelV1QueryPacketAcknowledgementsResponse, decodeIbcCoreChannelV1QueryPacketAcknowledgementsResponse],
    '/ibc.core.channel.v1.QueryUnreceivedPacketsRequest': [condenseIbcCoreChannelV1QueryUnreceivedPacketsRequest, expandIbcCoreChannelV1QueryUnreceivedPacketsRequest, decodeIbcCoreChannelV1QueryUnreceivedPacketsRequest],
    '/ibc.core.channel.v1.QueryUnreceivedPacketsResponse': [condenseIbcCoreChannelV1QueryUnreceivedPacketsResponse, expandIbcCoreChannelV1QueryUnreceivedPacketsResponse, decodeIbcCoreChannelV1QueryUnreceivedPacketsResponse],
    '/ibc.core.channel.v1.QueryUnreceivedAcksRequest': [condenseIbcCoreChannelV1QueryUnreceivedAcksRequest, expandIbcCoreChannelV1QueryUnreceivedAcksRequest, decodeIbcCoreChannelV1QueryUnreceivedAcksRequest],
    '/ibc.core.channel.v1.QueryUnreceivedAcksResponse': [condenseIbcCoreChannelV1QueryUnreceivedAcksResponse, expandIbcCoreChannelV1QueryUnreceivedAcksResponse, decodeIbcCoreChannelV1QueryUnreceivedAcksResponse],
    '/ibc.core.channel.v1.QueryNextSequenceReceiveRequest': [condenseIbcCoreChannelV1QueryNextSequenceReceiveRequest, expandIbcCoreChannelV1QueryNextSequenceReceiveRequest, decodeIbcCoreChannelV1QueryNextSequenceReceiveRequest],
    '/ibc.core.channel.v1.QueryNextSequenceReceiveResponse': [condenseIbcCoreChannelV1QueryNextSequenceReceiveResponse, expandIbcCoreChannelV1QueryNextSequenceReceiveResponse, decodeIbcCoreChannelV1QueryNextSequenceReceiveResponse],
    '/ibc.core.channel.v1.QueryNextSequenceSendRequest': [condenseIbcCoreChannelV1QueryNextSequenceSendRequest, expandIbcCoreChannelV1QueryNextSequenceSendRequest, decodeIbcCoreChannelV1QueryNextSequenceSendRequest],
    '/ibc.core.channel.v1.QueryNextSequenceSendResponse': [condenseIbcCoreChannelV1QueryNextSequenceSendResponse, expandIbcCoreChannelV1QueryNextSequenceSendResponse, decodeIbcCoreChannelV1QueryNextSequenceSendResponse],
    '/ibc.core.channel.v1.QueryUpgradeErrorRequest': [condenseIbcCoreChannelV1QueryUpgradeErrorRequest, expandIbcCoreChannelV1QueryUpgradeErrorRequest, decodeIbcCoreChannelV1QueryUpgradeErrorRequest],
    '/ibc.core.channel.v1.QueryUpgradeErrorResponse': [condenseIbcCoreChannelV1QueryUpgradeErrorResponse, expandIbcCoreChannelV1QueryUpgradeErrorResponse, decodeIbcCoreChannelV1QueryUpgradeErrorResponse],
    '/ibc.core.channel.v1.QueryUpgradeRequest': [condenseIbcCoreChannelV1QueryUpgradeRequest, expandIbcCoreChannelV1QueryUpgradeRequest, decodeIbcCoreChannelV1QueryUpgradeRequest],
    '/ibc.core.channel.v1.QueryUpgradeResponse': [condenseIbcCoreChannelV1QueryUpgradeResponse, expandIbcCoreChannelV1QueryUpgradeResponse, decodeIbcCoreChannelV1QueryUpgradeResponse],
    '/ibc.core.channel.v1.QueryChannelParamsRequest': [condenseIbcCoreChannelV1QueryChannelParamsRequest, expandIbcCoreChannelV1QueryChannelParamsRequest, decodeIbcCoreChannelV1QueryChannelParamsRequest],
    '/ibc.core.channel.v1.QueryChannelParamsResponse': [condenseIbcCoreChannelV1QueryChannelParamsResponse, expandIbcCoreChannelV1QueryChannelParamsResponse, decodeIbcCoreChannelV1QueryChannelParamsResponse],
    '/ibc.core.channel.v1.GenesisState': [condenseIbcCoreChannelV1GenesisState, expandIbcCoreChannelV1GenesisState, decodeIbcCoreChannelV1GenesisState],
    '/ibc.core.channel.v1.PacketSequence': [condenseIbcCoreChannelV1PacketSequence, expandIbcCoreChannelV1PacketSequence, decodeIbcCoreChannelV1PacketSequence],
    '/ibc.core.channel.v1.Channel': [condenseIbcCoreChannelV1Channel, expandIbcCoreChannelV1Channel, decodeIbcCoreChannelV1Channel],
    '/ibc.core.channel.v1.IdentifiedChannel': [condenseIbcCoreChannelV1IdentifiedChannel, expandIbcCoreChannelV1IdentifiedChannel, decodeIbcCoreChannelV1IdentifiedChannel],
    '/ibc.core.channel.v1.Counterparty': [condenseIbcCoreChannelV1Counterparty, expandIbcCoreChannelV1Counterparty, decodeIbcCoreChannelV1Counterparty],
    '/ibc.core.channel.v1.Packet': [condenseIbcCoreChannelV1Packet, expandIbcCoreChannelV1Packet, decodeIbcCoreChannelV1Packet],
    '/ibc.core.channel.v1.PacketState': [condenseIbcCoreChannelV1PacketState, expandIbcCoreChannelV1PacketState, decodeIbcCoreChannelV1PacketState],
    '/ibc.core.channel.v1.PacketId': [condenseIbcCoreChannelV1PacketId, expandIbcCoreChannelV1PacketId, decodeIbcCoreChannelV1PacketId],
    '/ibc.core.channel.v1.Acknowledgement': [condenseIbcCoreChannelV1Acknowledgement, expandIbcCoreChannelV1Acknowledgement, decodeIbcCoreChannelV1Acknowledgement],
    '/ibc.core.channel.v1.Timeout': [condenseIbcCoreChannelV1Timeout, expandIbcCoreChannelV1Timeout, decodeIbcCoreChannelV1Timeout],
    '/ibc.core.channel.v1.Params': [condenseIbcCoreChannelV1Params, expandIbcCoreChannelV1Params, decodeIbcCoreChannelV1Params],
    '/ibc.core.client.v1.MsgCreateClient': [condenseIbcCoreClientV1MsgCreateClient, expandIbcCoreClientV1MsgCreateClient, decodeIbcCoreClientV1MsgCreateClient],
    '/ibc.core.client.v1.MsgCreateClientResponse': [condenseIbcCoreClientV1MsgCreateClientResponse, expandIbcCoreClientV1MsgCreateClientResponse, decodeIbcCoreClientV1MsgCreateClientResponse],
    '/ibc.core.client.v1.MsgUpdateClient': [condenseIbcCoreClientV1MsgUpdateClient, expandIbcCoreClientV1MsgUpdateClient, decodeIbcCoreClientV1MsgUpdateClient],
    '/ibc.core.client.v1.MsgUpdateClientResponse': [condenseIbcCoreClientV1MsgUpdateClientResponse, expandIbcCoreClientV1MsgUpdateClientResponse, decodeIbcCoreClientV1MsgUpdateClientResponse],
    '/ibc.core.client.v1.MsgUpgradeClient': [condenseIbcCoreClientV1MsgUpgradeClient, expandIbcCoreClientV1MsgUpgradeClient, decodeIbcCoreClientV1MsgUpgradeClient],
    '/ibc.core.client.v1.MsgUpgradeClientResponse': [condenseIbcCoreClientV1MsgUpgradeClientResponse, expandIbcCoreClientV1MsgUpgradeClientResponse, decodeIbcCoreClientV1MsgUpgradeClientResponse],
    '/ibc.core.client.v1.MsgSubmitMisbehaviour': [condenseIbcCoreClientV1MsgSubmitMisbehaviour, expandIbcCoreClientV1MsgSubmitMisbehaviour, decodeIbcCoreClientV1MsgSubmitMisbehaviour],
    '/ibc.core.client.v1.MsgSubmitMisbehaviourResponse': [condenseIbcCoreClientV1MsgSubmitMisbehaviourResponse, expandIbcCoreClientV1MsgSubmitMisbehaviourResponse, decodeIbcCoreClientV1MsgSubmitMisbehaviourResponse],
    '/ibc.core.client.v1.MsgRecoverClient': [condenseIbcCoreClientV1MsgRecoverClient, expandIbcCoreClientV1MsgRecoverClient, decodeIbcCoreClientV1MsgRecoverClient],
    '/ibc.core.client.v1.MsgRecoverClientResponse': [condenseIbcCoreClientV1MsgRecoverClientResponse, expandIbcCoreClientV1MsgRecoverClientResponse, decodeIbcCoreClientV1MsgRecoverClientResponse],
    '/ibc.core.client.v1.MsgIBCSoftwareUpgrade': [condenseIbcCoreClientV1MsgIBCSoftwareUpgrade, expandIbcCoreClientV1MsgIBCSoftwareUpgrade, decodeIbcCoreClientV1MsgIBCSoftwareUpgrade],
    '/ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse': [condenseIbcCoreClientV1MsgIBCSoftwareUpgradeResponse, expandIbcCoreClientV1MsgIBCSoftwareUpgradeResponse, decodeIbcCoreClientV1MsgIBCSoftwareUpgradeResponse],
    '/ibc.core.client.v1.MsgUpdateParams': [condenseIbcCoreClientV1MsgUpdateParams, expandIbcCoreClientV1MsgUpdateParams, decodeIbcCoreClientV1MsgUpdateParams],
    '/ibc.core.client.v1.MsgUpdateParamsResponse': [condenseIbcCoreClientV1MsgUpdateParamsResponse, expandIbcCoreClientV1MsgUpdateParamsResponse, decodeIbcCoreClientV1MsgUpdateParamsResponse],
    '/ibc.core.client.v1.IdentifiedClientState': [condenseIbcCoreClientV1IdentifiedClientState, expandIbcCoreClientV1IdentifiedClientState, decodeIbcCoreClientV1IdentifiedClientState],
    '/ibc.core.client.v1.ConsensusStateWithHeight': [condenseIbcCoreClientV1ConsensusStateWithHeight, expandIbcCoreClientV1ConsensusStateWithHeight, decodeIbcCoreClientV1ConsensusStateWithHeight],
    '/ibc.core.client.v1.ClientConsensusStates': [condenseIbcCoreClientV1ClientConsensusStates, expandIbcCoreClientV1ClientConsensusStates, decodeIbcCoreClientV1ClientConsensusStates],
    '/ibc.core.client.v1.Height': [condenseIbcCoreClientV1Height, expandIbcCoreClientV1Height, decodeIbcCoreClientV1Height],
    '/ibc.core.client.v1.Params': [condenseIbcCoreClientV1Params, expandIbcCoreClientV1Params, decodeIbcCoreClientV1Params],
    '/ibc.core.client.v1.ClientUpdateProposal': [condenseIbcCoreClientV1ClientUpdateProposal, expandIbcCoreClientV1ClientUpdateProposal, decodeIbcCoreClientV1ClientUpdateProposal],
    '/ibc.core.client.v1.UpgradeProposal': [condenseIbcCoreClientV1UpgradeProposal, expandIbcCoreClientV1UpgradeProposal, decodeIbcCoreClientV1UpgradeProposal],
    '/ibc.core.client.v1.QueryClientStateRequest': [condenseIbcCoreClientV1QueryClientStateRequest, expandIbcCoreClientV1QueryClientStateRequest, decodeIbcCoreClientV1QueryClientStateRequest],
    '/ibc.core.client.v1.QueryClientStateResponse': [condenseIbcCoreClientV1QueryClientStateResponse, expandIbcCoreClientV1QueryClientStateResponse, decodeIbcCoreClientV1QueryClientStateResponse],
    '/ibc.core.client.v1.QueryClientStatesRequest': [condenseIbcCoreClientV1QueryClientStatesRequest, expandIbcCoreClientV1QueryClientStatesRequest, decodeIbcCoreClientV1QueryClientStatesRequest],
    '/ibc.core.client.v1.QueryClientStatesResponse': [condenseIbcCoreClientV1QueryClientStatesResponse, expandIbcCoreClientV1QueryClientStatesResponse, decodeIbcCoreClientV1QueryClientStatesResponse],
    '/ibc.core.client.v1.QueryConsensusStateRequest': [condenseIbcCoreClientV1QueryConsensusStateRequest, expandIbcCoreClientV1QueryConsensusStateRequest, decodeIbcCoreClientV1QueryConsensusStateRequest],
    '/ibc.core.client.v1.QueryConsensusStateResponse': [condenseIbcCoreClientV1QueryConsensusStateResponse, expandIbcCoreClientV1QueryConsensusStateResponse, decodeIbcCoreClientV1QueryConsensusStateResponse],
    '/ibc.core.client.v1.QueryConsensusStatesRequest': [condenseIbcCoreClientV1QueryConsensusStatesRequest, expandIbcCoreClientV1QueryConsensusStatesRequest, decodeIbcCoreClientV1QueryConsensusStatesRequest],
    '/ibc.core.client.v1.QueryConsensusStatesResponse': [condenseIbcCoreClientV1QueryConsensusStatesResponse, expandIbcCoreClientV1QueryConsensusStatesResponse, decodeIbcCoreClientV1QueryConsensusStatesResponse],
    '/ibc.core.client.v1.QueryConsensusStateHeightsRequest': [condenseIbcCoreClientV1QueryConsensusStateHeightsRequest, expandIbcCoreClientV1QueryConsensusStateHeightsRequest, decodeIbcCoreClientV1QueryConsensusStateHeightsRequest],
    '/ibc.core.client.v1.QueryConsensusStateHeightsResponse': [condenseIbcCoreClientV1QueryConsensusStateHeightsResponse, expandIbcCoreClientV1QueryConsensusStateHeightsResponse, decodeIbcCoreClientV1QueryConsensusStateHeightsResponse],
    '/ibc.core.client.v1.QueryClientStatusRequest': [condenseIbcCoreClientV1QueryClientStatusRequest, expandIbcCoreClientV1QueryClientStatusRequest, decodeIbcCoreClientV1QueryClientStatusRequest],
    '/ibc.core.client.v1.QueryClientStatusResponse': [condenseIbcCoreClientV1QueryClientStatusResponse, expandIbcCoreClientV1QueryClientStatusResponse, decodeIbcCoreClientV1QueryClientStatusResponse],
    '/ibc.core.client.v1.QueryClientParamsRequest': [condenseIbcCoreClientV1QueryClientParamsRequest, expandIbcCoreClientV1QueryClientParamsRequest, decodeIbcCoreClientV1QueryClientParamsRequest],
    '/ibc.core.client.v1.QueryClientParamsResponse': [condenseIbcCoreClientV1QueryClientParamsResponse, expandIbcCoreClientV1QueryClientParamsResponse, decodeIbcCoreClientV1QueryClientParamsResponse],
    '/ibc.core.client.v1.QueryUpgradedClientStateRequest': [condenseIbcCoreClientV1QueryUpgradedClientStateRequest, expandIbcCoreClientV1QueryUpgradedClientStateRequest, decodeIbcCoreClientV1QueryUpgradedClientStateRequest],
    '/ibc.core.client.v1.QueryUpgradedClientStateResponse': [condenseIbcCoreClientV1QueryUpgradedClientStateResponse, expandIbcCoreClientV1QueryUpgradedClientStateResponse, decodeIbcCoreClientV1QueryUpgradedClientStateResponse],
    '/ibc.core.client.v1.QueryUpgradedConsensusStateRequest': [condenseIbcCoreClientV1QueryUpgradedConsensusStateRequest, expandIbcCoreClientV1QueryUpgradedConsensusStateRequest, decodeIbcCoreClientV1QueryUpgradedConsensusStateRequest],
    '/ibc.core.client.v1.QueryUpgradedConsensusStateResponse': [condenseIbcCoreClientV1QueryUpgradedConsensusStateResponse, expandIbcCoreClientV1QueryUpgradedConsensusStateResponse, decodeIbcCoreClientV1QueryUpgradedConsensusStateResponse],
    '/ibc.core.client.v1.GenesisState': [condenseIbcCoreClientV1GenesisState, expandIbcCoreClientV1GenesisState, decodeIbcCoreClientV1GenesisState],
    '/ibc.core.client.v1.GenesisMetadata': [condenseIbcCoreClientV1GenesisMetadata, expandIbcCoreClientV1GenesisMetadata, decodeIbcCoreClientV1GenesisMetadata],
    '/ibc.core.client.v1.IdentifiedGenesisMetadata': [condenseIbcCoreClientV1IdentifiedGenesisMetadata, expandIbcCoreClientV1IdentifiedGenesisMetadata, decodeIbcCoreClientV1IdentifiedGenesisMetadata],
    '/ibc.lightclients.wasm.v1.MsgStoreCode': [condenseIbcLightclientsWasmV1MsgStoreCode, expandIbcLightclientsWasmV1MsgStoreCode, decodeIbcLightclientsWasmV1MsgStoreCode],
    '/ibc.lightclients.wasm.v1.MsgStoreCodeResponse': [condenseIbcLightclientsWasmV1MsgStoreCodeResponse, expandIbcLightclientsWasmV1MsgStoreCodeResponse, decodeIbcLightclientsWasmV1MsgStoreCodeResponse],
    '/ibc.lightclients.wasm.v1.MsgRemoveChecksum': [condenseIbcLightclientsWasmV1MsgRemoveChecksum, expandIbcLightclientsWasmV1MsgRemoveChecksum, decodeIbcLightclientsWasmV1MsgRemoveChecksum],
    '/ibc.lightclients.wasm.v1.MsgRemoveChecksumResponse': [condenseIbcLightclientsWasmV1MsgRemoveChecksumResponse, expandIbcLightclientsWasmV1MsgRemoveChecksumResponse, decodeIbcLightclientsWasmV1MsgRemoveChecksumResponse],
    '/ibc.lightclients.wasm.v1.MsgMigrateContract': [condenseIbcLightclientsWasmV1MsgMigrateContract, expandIbcLightclientsWasmV1MsgMigrateContract, decodeIbcLightclientsWasmV1MsgMigrateContract],
    '/ibc.lightclients.wasm.v1.MsgMigrateContractResponse': [condenseIbcLightclientsWasmV1MsgMigrateContractResponse, expandIbcLightclientsWasmV1MsgMigrateContractResponse, decodeIbcLightclientsWasmV1MsgMigrateContractResponse],
    '/ibc.lightclients.wasm.v1.QueryChecksumsRequest': [condenseIbcLightclientsWasmV1QueryChecksumsRequest, expandIbcLightclientsWasmV1QueryChecksumsRequest, decodeIbcLightclientsWasmV1QueryChecksumsRequest],
    '/ibc.lightclients.wasm.v1.QueryChecksumsResponse': [condenseIbcLightclientsWasmV1QueryChecksumsResponse, expandIbcLightclientsWasmV1QueryChecksumsResponse, decodeIbcLightclientsWasmV1QueryChecksumsResponse],
    '/ibc.lightclients.wasm.v1.QueryCodeRequest': [condenseIbcLightclientsWasmV1QueryCodeRequest, expandIbcLightclientsWasmV1QueryCodeRequest, decodeIbcLightclientsWasmV1QueryCodeRequest],
    '/ibc.lightclients.wasm.v1.QueryCodeResponse': [condenseIbcLightclientsWasmV1QueryCodeResponse, expandIbcLightclientsWasmV1QueryCodeResponse, decodeIbcLightclientsWasmV1QueryCodeResponse],
    '/ibc.lightclients.wasm.v1.GenesisState': [condenseIbcLightclientsWasmV1GenesisState, expandIbcLightclientsWasmV1GenesisState, decodeIbcLightclientsWasmV1GenesisState],
    '/ibc.lightclients.wasm.v1.Contract': [condenseIbcLightclientsWasmV1Contract, expandIbcLightclientsWasmV1Contract, decodeIbcLightclientsWasmV1Contract],
    '/ibc.lightclients.wasm.v1.ClientState': [condenseIbcLightclientsWasmV1ClientState, expandIbcLightclientsWasmV1ClientState, decodeIbcLightclientsWasmV1ClientState],
    '/ibc.lightclients.wasm.v1.ConsensusState': [condenseIbcLightclientsWasmV1ConsensusState, expandIbcLightclientsWasmV1ConsensusState, decodeIbcLightclientsWasmV1ConsensusState],
    '/ibc.lightclients.wasm.v1.ClientMessage': [condenseIbcLightclientsWasmV1ClientMessage, expandIbcLightclientsWasmV1ClientMessage, decodeIbcLightclientsWasmV1ClientMessage],
    '/ibc.lightclients.wasm.v1.Checksums': [condenseIbcLightclientsWasmV1Checksums, expandIbcLightclientsWasmV1Checksums, decodeIbcLightclientsWasmV1Checksums],
    '/ibc.lightclients.solomachine.v2.ClientState': [condenseIbcLightclientsSolomachineV2ClientState, expandIbcLightclientsSolomachineV2ClientState, decodeIbcLightclientsSolomachineV2ClientState],
    '/ibc.lightclients.solomachine.v2.ConsensusState': [condenseIbcLightclientsSolomachineV2ConsensusState, expandIbcLightclientsSolomachineV2ConsensusState, decodeIbcLightclientsSolomachineV2ConsensusState],
    '/ibc.lightclients.solomachine.v2.Header': [condenseIbcLightclientsSolomachineV2Header, expandIbcLightclientsSolomachineV2Header, decodeIbcLightclientsSolomachineV2Header],
    '/ibc.lightclients.solomachine.v2.Misbehaviour': [condenseIbcLightclientsSolomachineV2Misbehaviour, expandIbcLightclientsSolomachineV2Misbehaviour, decodeIbcLightclientsSolomachineV2Misbehaviour],
    '/ibc.lightclients.solomachine.v2.SignatureAndData': [condenseIbcLightclientsSolomachineV2SignatureAndData, expandIbcLightclientsSolomachineV2SignatureAndData, decodeIbcLightclientsSolomachineV2SignatureAndData],
    '/ibc.lightclients.solomachine.v2.TimestampedSignatureData': [condenseIbcLightclientsSolomachineV2TimestampedSignatureData, expandIbcLightclientsSolomachineV2TimestampedSignatureData, decodeIbcLightclientsSolomachineV2TimestampedSignatureData],
    '/ibc.lightclients.solomachine.v2.SignBytes': [condenseIbcLightclientsSolomachineV2SignBytes, expandIbcLightclientsSolomachineV2SignBytes, decodeIbcLightclientsSolomachineV2SignBytes],
    '/ibc.lightclients.solomachine.v2.HeaderData': [condenseIbcLightclientsSolomachineV2HeaderData, expandIbcLightclientsSolomachineV2HeaderData, decodeIbcLightclientsSolomachineV2HeaderData],
    '/ibc.lightclients.solomachine.v2.ClientStateData': [condenseIbcLightclientsSolomachineV2ClientStateData, expandIbcLightclientsSolomachineV2ClientStateData, decodeIbcLightclientsSolomachineV2ClientStateData],
    '/ibc.lightclients.solomachine.v2.ConsensusStateData': [condenseIbcLightclientsSolomachineV2ConsensusStateData, expandIbcLightclientsSolomachineV2ConsensusStateData, decodeIbcLightclientsSolomachineV2ConsensusStateData],
    '/ibc.lightclients.solomachine.v2.ConnectionStateData': [condenseIbcLightclientsSolomachineV2ConnectionStateData, expandIbcLightclientsSolomachineV2ConnectionStateData, decodeIbcLightclientsSolomachineV2ConnectionStateData],
    '/ibc.lightclients.solomachine.v2.ChannelStateData': [condenseIbcLightclientsSolomachineV2ChannelStateData, expandIbcLightclientsSolomachineV2ChannelStateData, decodeIbcLightclientsSolomachineV2ChannelStateData],
    '/ibc.lightclients.solomachine.v2.PacketCommitmentData': [condenseIbcLightclientsSolomachineV2PacketCommitmentData, expandIbcLightclientsSolomachineV2PacketCommitmentData, decodeIbcLightclientsSolomachineV2PacketCommitmentData],
    '/ibc.lightclients.solomachine.v2.PacketAcknowledgementData': [condenseIbcLightclientsSolomachineV2PacketAcknowledgementData, expandIbcLightclientsSolomachineV2PacketAcknowledgementData, decodeIbcLightclientsSolomachineV2PacketAcknowledgementData],
    '/ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData': [condenseIbcLightclientsSolomachineV2PacketReceiptAbsenceData, expandIbcLightclientsSolomachineV2PacketReceiptAbsenceData, decodeIbcLightclientsSolomachineV2PacketReceiptAbsenceData],
    '/ibc.lightclients.solomachine.v2.NextSequenceRecvData': [condenseIbcLightclientsSolomachineV2NextSequenceRecvData, expandIbcLightclientsSolomachineV2NextSequenceRecvData, decodeIbcLightclientsSolomachineV2NextSequenceRecvData],
    '/ibc.lightclients.solomachine.v3.ClientState': [condenseIbcLightclientsSolomachineV3ClientState, expandIbcLightclientsSolomachineV3ClientState, decodeIbcLightclientsSolomachineV3ClientState],
    '/ibc.lightclients.solomachine.v3.ConsensusState': [condenseIbcLightclientsSolomachineV3ConsensusState, expandIbcLightclientsSolomachineV3ConsensusState, decodeIbcLightclientsSolomachineV3ConsensusState],
    '/ibc.lightclients.solomachine.v3.Header': [condenseIbcLightclientsSolomachineV3Header, expandIbcLightclientsSolomachineV3Header, decodeIbcLightclientsSolomachineV3Header],
    '/ibc.lightclients.solomachine.v3.Misbehaviour': [condenseIbcLightclientsSolomachineV3Misbehaviour, expandIbcLightclientsSolomachineV3Misbehaviour, decodeIbcLightclientsSolomachineV3Misbehaviour],
    '/ibc.lightclients.solomachine.v3.SignatureAndData': [condenseIbcLightclientsSolomachineV3SignatureAndData, expandIbcLightclientsSolomachineV3SignatureAndData, decodeIbcLightclientsSolomachineV3SignatureAndData],
    '/ibc.lightclients.solomachine.v3.TimestampedSignatureData': [condenseIbcLightclientsSolomachineV3TimestampedSignatureData, expandIbcLightclientsSolomachineV3TimestampedSignatureData, decodeIbcLightclientsSolomachineV3TimestampedSignatureData],
    '/ibc.lightclients.solomachine.v3.SignBytes': [condenseIbcLightclientsSolomachineV3SignBytes, expandIbcLightclientsSolomachineV3SignBytes, decodeIbcLightclientsSolomachineV3SignBytes],
    '/ibc.lightclients.solomachine.v3.HeaderData': [condenseIbcLightclientsSolomachineV3HeaderData, expandIbcLightclientsSolomachineV3HeaderData, decodeIbcLightclientsSolomachineV3HeaderData],
    '/ibc.lightclients.tendermint.v1.ClientState': [condenseIbcLightclientsTendermintV1ClientState, expandIbcLightclientsTendermintV1ClientState, decodeIbcLightclientsTendermintV1ClientState],
    '/ibc.lightclients.tendermint.v1.ConsensusState': [condenseIbcLightclientsTendermintV1ConsensusState, expandIbcLightclientsTendermintV1ConsensusState, decodeIbcLightclientsTendermintV1ConsensusState],
    '/ibc.lightclients.tendermint.v1.Misbehaviour': [condenseIbcLightclientsTendermintV1Misbehaviour, expandIbcLightclientsTendermintV1Misbehaviour, decodeIbcLightclientsTendermintV1Misbehaviour],
    '/ibc.lightclients.tendermint.v1.Header': [condenseIbcLightclientsTendermintV1Header, expandIbcLightclientsTendermintV1Header, decodeIbcLightclientsTendermintV1Header],
    '/ibc.lightclients.tendermint.v1.Fraction': [condenseIbcLightclientsTendermintV1Fraction, expandIbcLightclientsTendermintV1Fraction, decodeIbcLightclientsTendermintV1Fraction],
    '/ibc.lightclients.localhost.v2.ClientState': [condenseIbcLightclientsLocalhostV2ClientState, expandIbcLightclientsLocalhostV2ClientState, decodeIbcLightclientsLocalhostV2ClientState],
    '/ibc.applications.fee.v1.MsgRegisterPayee': [condenseIbcApplicationsFeeV1MsgRegisterPayee, expandIbcApplicationsFeeV1MsgRegisterPayee, decodeIbcApplicationsFeeV1MsgRegisterPayee],
    '/ibc.applications.fee.v1.MsgRegisterPayeeResponse': [condenseIbcApplicationsFeeV1MsgRegisterPayeeResponse, expandIbcApplicationsFeeV1MsgRegisterPayeeResponse, decodeIbcApplicationsFeeV1MsgRegisterPayeeResponse],
    '/ibc.applications.fee.v1.MsgRegisterCounterpartyPayee': [condenseIbcApplicationsFeeV1MsgRegisterCounterpartyPayee, expandIbcApplicationsFeeV1MsgRegisterCounterpartyPayee, decodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayee],
    '/ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse': [condenseIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse, expandIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse, decodeIbcApplicationsFeeV1MsgRegisterCounterpartyPayeeResponse],
    '/ibc.applications.fee.v1.MsgPayPacketFee': [condenseIbcApplicationsFeeV1MsgPayPacketFee, expandIbcApplicationsFeeV1MsgPayPacketFee, decodeIbcApplicationsFeeV1MsgPayPacketFee],
    '/ibc.applications.fee.v1.MsgPayPacketFeeResponse': [condenseIbcApplicationsFeeV1MsgPayPacketFeeResponse, expandIbcApplicationsFeeV1MsgPayPacketFeeResponse, decodeIbcApplicationsFeeV1MsgPayPacketFeeResponse],
    '/ibc.applications.fee.v1.MsgPayPacketFeeAsync': [condenseIbcApplicationsFeeV1MsgPayPacketFeeAsync, expandIbcApplicationsFeeV1MsgPayPacketFeeAsync, decodeIbcApplicationsFeeV1MsgPayPacketFeeAsync],
    '/ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse': [condenseIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse, expandIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse, decodeIbcApplicationsFeeV1MsgPayPacketFeeAsyncResponse],
    '/ibc.applications.fee.v1.IncentivizedAcknowledgement': [condenseIbcApplicationsFeeV1IncentivizedAcknowledgement, expandIbcApplicationsFeeV1IncentivizedAcknowledgement, decodeIbcApplicationsFeeV1IncentivizedAcknowledgement],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketsRequest': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketsRequest, expandIbcApplicationsFeeV1QueryIncentivizedPacketsRequest, decodeIbcApplicationsFeeV1QueryIncentivizedPacketsRequest],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketsResponse': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketsResponse, expandIbcApplicationsFeeV1QueryIncentivizedPacketsResponse, decodeIbcApplicationsFeeV1QueryIncentivizedPacketsResponse],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketRequest': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketRequest, expandIbcApplicationsFeeV1QueryIncentivizedPacketRequest, decodeIbcApplicationsFeeV1QueryIncentivizedPacketRequest],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketResponse': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketResponse, expandIbcApplicationsFeeV1QueryIncentivizedPacketResponse, decodeIbcApplicationsFeeV1QueryIncentivizedPacketResponse],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelRequest': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest, expandIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest, decodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelRequest],
    '/ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse': [condenseIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse, expandIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse, decodeIbcApplicationsFeeV1QueryIncentivizedPacketsForChannelResponse],
    '/ibc.applications.fee.v1.QueryTotalRecvFeesRequest': [condenseIbcApplicationsFeeV1QueryTotalRecvFeesRequest, expandIbcApplicationsFeeV1QueryTotalRecvFeesRequest, decodeIbcApplicationsFeeV1QueryTotalRecvFeesRequest],
    '/ibc.applications.fee.v1.QueryTotalRecvFeesResponse': [condenseIbcApplicationsFeeV1QueryTotalRecvFeesResponse, expandIbcApplicationsFeeV1QueryTotalRecvFeesResponse, decodeIbcApplicationsFeeV1QueryTotalRecvFeesResponse],
    '/ibc.applications.fee.v1.QueryTotalAckFeesRequest': [condenseIbcApplicationsFeeV1QueryTotalAckFeesRequest, expandIbcApplicationsFeeV1QueryTotalAckFeesRequest, decodeIbcApplicationsFeeV1QueryTotalAckFeesRequest],
    '/ibc.applications.fee.v1.QueryTotalAckFeesResponse': [condenseIbcApplicationsFeeV1QueryTotalAckFeesResponse, expandIbcApplicationsFeeV1QueryTotalAckFeesResponse, decodeIbcApplicationsFeeV1QueryTotalAckFeesResponse],
    '/ibc.applications.fee.v1.QueryTotalTimeoutFeesRequest': [condenseIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest, expandIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest, decodeIbcApplicationsFeeV1QueryTotalTimeoutFeesRequest],
    '/ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse': [condenseIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse, expandIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse, decodeIbcApplicationsFeeV1QueryTotalTimeoutFeesResponse],
    '/ibc.applications.fee.v1.QueryPayeeRequest': [condenseIbcApplicationsFeeV1QueryPayeeRequest, expandIbcApplicationsFeeV1QueryPayeeRequest, decodeIbcApplicationsFeeV1QueryPayeeRequest],
    '/ibc.applications.fee.v1.QueryPayeeResponse': [condenseIbcApplicationsFeeV1QueryPayeeResponse, expandIbcApplicationsFeeV1QueryPayeeResponse, decodeIbcApplicationsFeeV1QueryPayeeResponse],
    '/ibc.applications.fee.v1.QueryCounterpartyPayeeRequest': [condenseIbcApplicationsFeeV1QueryCounterpartyPayeeRequest, expandIbcApplicationsFeeV1QueryCounterpartyPayeeRequest, decodeIbcApplicationsFeeV1QueryCounterpartyPayeeRequest],
    '/ibc.applications.fee.v1.QueryCounterpartyPayeeResponse': [condenseIbcApplicationsFeeV1QueryCounterpartyPayeeResponse, expandIbcApplicationsFeeV1QueryCounterpartyPayeeResponse, decodeIbcApplicationsFeeV1QueryCounterpartyPayeeResponse],
    '/ibc.applications.fee.v1.QueryFeeEnabledChannelsRequest': [condenseIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest, expandIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest, decodeIbcApplicationsFeeV1QueryFeeEnabledChannelsRequest],
    '/ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse': [condenseIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse, expandIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse, decodeIbcApplicationsFeeV1QueryFeeEnabledChannelsResponse],
    '/ibc.applications.fee.v1.QueryFeeEnabledChannelRequest': [condenseIbcApplicationsFeeV1QueryFeeEnabledChannelRequest, expandIbcApplicationsFeeV1QueryFeeEnabledChannelRequest, decodeIbcApplicationsFeeV1QueryFeeEnabledChannelRequest],
    '/ibc.applications.fee.v1.QueryFeeEnabledChannelResponse': [condenseIbcApplicationsFeeV1QueryFeeEnabledChannelResponse, expandIbcApplicationsFeeV1QueryFeeEnabledChannelResponse, decodeIbcApplicationsFeeV1QueryFeeEnabledChannelResponse],
    '/ibc.applications.fee.v1.Metadata': [condenseIbcApplicationsFeeV1Metadata, expandIbcApplicationsFeeV1Metadata, decodeIbcApplicationsFeeV1Metadata],
    '/ibc.applications.fee.v1.Fee': [condenseIbcApplicationsFeeV1Fee, expandIbcApplicationsFeeV1Fee, decodeIbcApplicationsFeeV1Fee],
    '/ibc.applications.fee.v1.PacketFee': [condenseIbcApplicationsFeeV1PacketFee, expandIbcApplicationsFeeV1PacketFee, decodeIbcApplicationsFeeV1PacketFee],
    '/ibc.applications.fee.v1.PacketFees': [condenseIbcApplicationsFeeV1PacketFees, expandIbcApplicationsFeeV1PacketFees, decodeIbcApplicationsFeeV1PacketFees],
    '/ibc.applications.fee.v1.IdentifiedPacketFees': [condenseIbcApplicationsFeeV1IdentifiedPacketFees, expandIbcApplicationsFeeV1IdentifiedPacketFees, decodeIbcApplicationsFeeV1IdentifiedPacketFees],
    '/ibc.applications.fee.v1.GenesisState': [condenseIbcApplicationsFeeV1GenesisState, expandIbcApplicationsFeeV1GenesisState, decodeIbcApplicationsFeeV1GenesisState],
    '/ibc.applications.fee.v1.FeeEnabledChannel': [condenseIbcApplicationsFeeV1FeeEnabledChannel, expandIbcApplicationsFeeV1FeeEnabledChannel, decodeIbcApplicationsFeeV1FeeEnabledChannel],
    '/ibc.applications.fee.v1.RegisteredPayee': [condenseIbcApplicationsFeeV1RegisteredPayee, expandIbcApplicationsFeeV1RegisteredPayee, decodeIbcApplicationsFeeV1RegisteredPayee],
    '/ibc.applications.fee.v1.RegisteredCounterpartyPayee': [condenseIbcApplicationsFeeV1RegisteredCounterpartyPayee, expandIbcApplicationsFeeV1RegisteredCounterpartyPayee, decodeIbcApplicationsFeeV1RegisteredCounterpartyPayee],
    '/ibc.applications.fee.v1.ForwardRelayerAddress': [condenseIbcApplicationsFeeV1ForwardRelayerAddress, expandIbcApplicationsFeeV1ForwardRelayerAddress, decodeIbcApplicationsFeeV1ForwardRelayerAddress],
    '/ibc.applications.transfer.v1.MsgTransfer': [condenseIbcApplicationsTransferV1MsgTransfer, expandIbcApplicationsTransferV1MsgTransfer, decodeIbcApplicationsTransferV1MsgTransfer],
    '/ibc.applications.transfer.v1.MsgTransferResponse': [condenseIbcApplicationsTransferV1MsgTransferResponse, expandIbcApplicationsTransferV1MsgTransferResponse, decodeIbcApplicationsTransferV1MsgTransferResponse],
    '/ibc.applications.transfer.v1.MsgUpdateParams': [condenseIbcApplicationsTransferV1MsgUpdateParams, expandIbcApplicationsTransferV1MsgUpdateParams, decodeIbcApplicationsTransferV1MsgUpdateParams],
    '/ibc.applications.transfer.v1.MsgUpdateParamsResponse': [condenseIbcApplicationsTransferV1MsgUpdateParamsResponse, expandIbcApplicationsTransferV1MsgUpdateParamsResponse, decodeIbcApplicationsTransferV1MsgUpdateParamsResponse],
    '/ibc.applications.transfer.v1.DenomTrace': [condenseIbcApplicationsTransferV1DenomTrace, expandIbcApplicationsTransferV1DenomTrace, decodeIbcApplicationsTransferV1DenomTrace],
    '/ibc.applications.transfer.v1.Params': [condenseIbcApplicationsTransferV1Params, expandIbcApplicationsTransferV1Params, decodeIbcApplicationsTransferV1Params],
    '/ibc.applications.transfer.v1.QueryDenomTraceRequest': [condenseIbcApplicationsTransferV1QueryDenomTraceRequest, expandIbcApplicationsTransferV1QueryDenomTraceRequest, decodeIbcApplicationsTransferV1QueryDenomTraceRequest],
    '/ibc.applications.transfer.v1.QueryDenomTraceResponse': [condenseIbcApplicationsTransferV1QueryDenomTraceResponse, expandIbcApplicationsTransferV1QueryDenomTraceResponse, decodeIbcApplicationsTransferV1QueryDenomTraceResponse],
    '/ibc.applications.transfer.v1.QueryDenomTracesRequest': [condenseIbcApplicationsTransferV1QueryDenomTracesRequest, expandIbcApplicationsTransferV1QueryDenomTracesRequest, decodeIbcApplicationsTransferV1QueryDenomTracesRequest],
    '/ibc.applications.transfer.v1.QueryDenomTracesResponse': [condenseIbcApplicationsTransferV1QueryDenomTracesResponse, expandIbcApplicationsTransferV1QueryDenomTracesResponse, decodeIbcApplicationsTransferV1QueryDenomTracesResponse],
    '/ibc.applications.transfer.v1.QueryParamsRequest': [condenseIbcApplicationsTransferV1QueryParamsRequest, expandIbcApplicationsTransferV1QueryParamsRequest, decodeIbcApplicationsTransferV1QueryParamsRequest],
    '/ibc.applications.transfer.v1.QueryParamsResponse': [condenseIbcApplicationsTransferV1QueryParamsResponse, expandIbcApplicationsTransferV1QueryParamsResponse, decodeIbcApplicationsTransferV1QueryParamsResponse],
    '/ibc.applications.transfer.v1.QueryDenomHashRequest': [condenseIbcApplicationsTransferV1QueryDenomHashRequest, expandIbcApplicationsTransferV1QueryDenomHashRequest, decodeIbcApplicationsTransferV1QueryDenomHashRequest],
    '/ibc.applications.transfer.v1.QueryDenomHashResponse': [condenseIbcApplicationsTransferV1QueryDenomHashResponse, expandIbcApplicationsTransferV1QueryDenomHashResponse, decodeIbcApplicationsTransferV1QueryDenomHashResponse],
    '/ibc.applications.transfer.v1.QueryEscrowAddressRequest': [condenseIbcApplicationsTransferV1QueryEscrowAddressRequest, expandIbcApplicationsTransferV1QueryEscrowAddressRequest, decodeIbcApplicationsTransferV1QueryEscrowAddressRequest],
    '/ibc.applications.transfer.v1.QueryEscrowAddressResponse': [condenseIbcApplicationsTransferV1QueryEscrowAddressResponse, expandIbcApplicationsTransferV1QueryEscrowAddressResponse, decodeIbcApplicationsTransferV1QueryEscrowAddressResponse],
    '/ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest': [condenseIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest, expandIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest, decodeIbcApplicationsTransferV1QueryTotalEscrowForDenomRequest],
    '/ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse': [condenseIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse, expandIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse, decodeIbcApplicationsTransferV1QueryTotalEscrowForDenomResponse],
    '/ibc.applications.transfer.v1.Allocation': [condenseIbcApplicationsTransferV1Allocation, expandIbcApplicationsTransferV1Allocation, decodeIbcApplicationsTransferV1Allocation],
    '/ibc.applications.transfer.v1.TransferAuthorization': [condenseIbcApplicationsTransferV1TransferAuthorization, expandIbcApplicationsTransferV1TransferAuthorization, decodeIbcApplicationsTransferV1TransferAuthorization],
    '/ibc.applications.transfer.v1.GenesisState': [condenseIbcApplicationsTransferV1GenesisState, expandIbcApplicationsTransferV1GenesisState, decodeIbcApplicationsTransferV1GenesisState],
    '/ibc.applications.transfer.v2.FungibleTokenPacketData': [condenseIbcApplicationsTransferV2FungibleTokenPacketData, expandIbcApplicationsTransferV2FungibleTokenPacketData, decodeIbcApplicationsTransferV2FungibleTokenPacketData],
    '/ibc.applications.interchain_accounts.v1.InterchainAccount': [condenseIbcApplicationsInterchainAccountsV1InterchainAccount, expandIbcApplicationsInterchainAccountsV1InterchainAccount, decodeIbcApplicationsInterchainAccountsV1InterchainAccount],
    '/ibc.applications.interchain_accounts.v1.InterchainAccountPacketData': [condenseIbcApplicationsInterchainAccountsV1InterchainAccountPacketData, expandIbcApplicationsInterchainAccountsV1InterchainAccountPacketData, decodeIbcApplicationsInterchainAccountsV1InterchainAccountPacketData],
    '/ibc.applications.interchain_accounts.v1.CosmosTx': [condenseIbcApplicationsInterchainAccountsV1CosmosTx, expandIbcApplicationsInterchainAccountsV1CosmosTx, decodeIbcApplicationsInterchainAccountsV1CosmosTx],
    '/ibc.applications.interchain_accounts.v1.Metadata': [condenseIbcApplicationsInterchainAccountsV1Metadata, expandIbcApplicationsInterchainAccountsV1Metadata, decodeIbcApplicationsInterchainAccountsV1Metadata],
    '/ibc.applications.interchain_accounts.host.v1.MsgUpdateParams': [condenseIbcApplicationsInterchainAccountsHostV1MsgUpdateParams, expandIbcApplicationsInterchainAccountsHostV1MsgUpdateParams, decodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParams],
    '/ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse': [condenseIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse, expandIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse, decodeIbcApplicationsInterchainAccountsHostV1MsgUpdateParamsResponse],
    '/ibc.applications.interchain_accounts.host.v1.Params': [condenseIbcApplicationsInterchainAccountsHostV1Params, expandIbcApplicationsInterchainAccountsHostV1Params, decodeIbcApplicationsInterchainAccountsHostV1Params],
    '/ibc.applications.interchain_accounts.host.v1.QueryParamsRequest': [condenseIbcApplicationsInterchainAccountsHostV1QueryParamsRequest, expandIbcApplicationsInterchainAccountsHostV1QueryParamsRequest, decodeIbcApplicationsInterchainAccountsHostV1QueryParamsRequest],
    '/ibc.applications.interchain_accounts.host.v1.QueryParamsResponse': [condenseIbcApplicationsInterchainAccountsHostV1QueryParamsResponse, expandIbcApplicationsInterchainAccountsHostV1QueryParamsResponse, decodeIbcApplicationsInterchainAccountsHostV1QueryParamsResponse],
    '/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount': [condenseIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount, expandIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount, decodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccount],
    '/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse': [condenseIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse, expandIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse, decodeIbcApplicationsInterchainAccountsControllerV1MsgRegisterInterchainAccountResponse],
    '/ibc.applications.interchain_accounts.controller.v1.MsgSendTx': [condenseIbcApplicationsInterchainAccountsControllerV1MsgSendTx, expandIbcApplicationsInterchainAccountsControllerV1MsgSendTx, decodeIbcApplicationsInterchainAccountsControllerV1MsgSendTx],
    '/ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse': [condenseIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse, expandIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse, decodeIbcApplicationsInterchainAccountsControllerV1MsgSendTxResponse],
    '/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams': [condenseIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams, expandIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams, decodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParams],
    '/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse': [condenseIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse, expandIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse, decodeIbcApplicationsInterchainAccountsControllerV1MsgUpdateParamsResponse],
    '/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountRequest': [condenseIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest, expandIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest, decodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountRequest],
    '/ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse': [condenseIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse, expandIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse, decodeIbcApplicationsInterchainAccountsControllerV1QueryInterchainAccountResponse],
    '/ibc.applications.interchain_accounts.controller.v1.QueryParamsRequest': [condenseIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest, expandIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest, decodeIbcApplicationsInterchainAccountsControllerV1QueryParamsRequest],
    '/ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse': [condenseIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse, expandIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse, decodeIbcApplicationsInterchainAccountsControllerV1QueryParamsResponse],
    '/ibc.applications.interchain_accounts.controller.v1.Params': [condenseIbcApplicationsInterchainAccountsControllerV1Params, expandIbcApplicationsInterchainAccountsControllerV1Params, decodeIbcApplicationsInterchainAccountsControllerV1Params],
    '/ibc.applications.interchain_accounts.genesis.v1.GenesisState': [condenseIbcApplicationsInterchainAccountsGenesisV1GenesisState, expandIbcApplicationsInterchainAccountsGenesisV1GenesisState, decodeIbcApplicationsInterchainAccountsGenesisV1GenesisState],
    '/ibc.applications.interchain_accounts.genesis.v1.ControllerGenesisState': [condenseIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState, expandIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState, decodeIbcApplicationsInterchainAccountsGenesisV1ControllerGenesisState],
    '/ibc.applications.interchain_accounts.genesis.v1.HostGenesisState': [condenseIbcApplicationsInterchainAccountsGenesisV1HostGenesisState, expandIbcApplicationsInterchainAccountsGenesisV1HostGenesisState, decodeIbcApplicationsInterchainAccountsGenesisV1HostGenesisState],
    '/ibc.applications.interchain_accounts.genesis.v1.ActiveChannel': [condenseIbcApplicationsInterchainAccountsGenesisV1ActiveChannel, expandIbcApplicationsInterchainAccountsGenesisV1ActiveChannel, decodeIbcApplicationsInterchainAccountsGenesisV1ActiveChannel],
    '/ibc.applications.interchain_accounts.genesis.v1.RegisteredInterchainAccount': [condenseIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount, expandIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount, decodeIbcApplicationsInterchainAccountsGenesisV1RegisteredInterchainAccount],
    '/cosmwasm.wasm.v1.MsgStoreCode': [condenseCosmwasmWasmV1MsgStoreCode, expandCosmwasmWasmV1MsgStoreCode, decodeCosmwasmWasmV1MsgStoreCode],
    '/cosmwasm.wasm.v1.MsgStoreCodeResponse': [condenseCosmwasmWasmV1MsgStoreCodeResponse, expandCosmwasmWasmV1MsgStoreCodeResponse, decodeCosmwasmWasmV1MsgStoreCodeResponse],
    '/cosmwasm.wasm.v1.MsgInstantiateContract': [condenseCosmwasmWasmV1MsgInstantiateContract, expandCosmwasmWasmV1MsgInstantiateContract, decodeCosmwasmWasmV1MsgInstantiateContract],
    '/cosmwasm.wasm.v1.MsgInstantiateContractResponse': [condenseCosmwasmWasmV1MsgInstantiateContractResponse, expandCosmwasmWasmV1MsgInstantiateContractResponse, decodeCosmwasmWasmV1MsgInstantiateContractResponse],
    '/cosmwasm.wasm.v1.MsgInstantiateContract2': [condenseCosmwasmWasmV1MsgInstantiateContract2, expandCosmwasmWasmV1MsgInstantiateContract2, decodeCosmwasmWasmV1MsgInstantiateContract2],
    '/cosmwasm.wasm.v1.MsgInstantiateContract2Response': [condenseCosmwasmWasmV1MsgInstantiateContract2Response, expandCosmwasmWasmV1MsgInstantiateContract2Response, decodeCosmwasmWasmV1MsgInstantiateContract2Response],
    '/cosmwasm.wasm.v1.MsgExecuteContract': [condenseCosmwasmWasmV1MsgExecuteContract, expandCosmwasmWasmV1MsgExecuteContract, decodeCosmwasmWasmV1MsgExecuteContract],
    '/cosmwasm.wasm.v1.MsgExecuteContractResponse': [condenseCosmwasmWasmV1MsgExecuteContractResponse, expandCosmwasmWasmV1MsgExecuteContractResponse, decodeCosmwasmWasmV1MsgExecuteContractResponse],
    '/cosmwasm.wasm.v1.MsgMigrateContract': [condenseCosmwasmWasmV1MsgMigrateContract, expandCosmwasmWasmV1MsgMigrateContract, decodeCosmwasmWasmV1MsgMigrateContract],
    '/cosmwasm.wasm.v1.MsgMigrateContractResponse': [condenseCosmwasmWasmV1MsgMigrateContractResponse, expandCosmwasmWasmV1MsgMigrateContractResponse, decodeCosmwasmWasmV1MsgMigrateContractResponse],
    '/cosmwasm.wasm.v1.MsgUpdateAdmin': [condenseCosmwasmWasmV1MsgUpdateAdmin, expandCosmwasmWasmV1MsgUpdateAdmin, decodeCosmwasmWasmV1MsgUpdateAdmin],
    '/cosmwasm.wasm.v1.MsgUpdateAdminResponse': [condenseCosmwasmWasmV1MsgUpdateAdminResponse, expandCosmwasmWasmV1MsgUpdateAdminResponse, decodeCosmwasmWasmV1MsgUpdateAdminResponse],
    '/cosmwasm.wasm.v1.MsgClearAdmin': [condenseCosmwasmWasmV1MsgClearAdmin, expandCosmwasmWasmV1MsgClearAdmin, decodeCosmwasmWasmV1MsgClearAdmin],
    '/cosmwasm.wasm.v1.MsgClearAdminResponse': [condenseCosmwasmWasmV1MsgClearAdminResponse, expandCosmwasmWasmV1MsgClearAdminResponse, decodeCosmwasmWasmV1MsgClearAdminResponse],
    '/cosmwasm.wasm.v1.AccessConfigUpdate': [condenseCosmwasmWasmV1AccessConfigUpdate, expandCosmwasmWasmV1AccessConfigUpdate, decodeCosmwasmWasmV1AccessConfigUpdate],
    '/cosmwasm.wasm.v1.MsgUpdateInstantiateConfig': [condenseCosmwasmWasmV1MsgUpdateInstantiateConfig, expandCosmwasmWasmV1MsgUpdateInstantiateConfig, decodeCosmwasmWasmV1MsgUpdateInstantiateConfig],
    '/cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse': [condenseCosmwasmWasmV1MsgUpdateInstantiateConfigResponse, expandCosmwasmWasmV1MsgUpdateInstantiateConfigResponse, decodeCosmwasmWasmV1MsgUpdateInstantiateConfigResponse],
    '/cosmwasm.wasm.v1.MsgUpdateParams': [condenseCosmwasmWasmV1MsgUpdateParams, expandCosmwasmWasmV1MsgUpdateParams, decodeCosmwasmWasmV1MsgUpdateParams],
    '/cosmwasm.wasm.v1.MsgUpdateParamsResponse': [condenseCosmwasmWasmV1MsgUpdateParamsResponse, expandCosmwasmWasmV1MsgUpdateParamsResponse, decodeCosmwasmWasmV1MsgUpdateParamsResponse],
    '/cosmwasm.wasm.v1.MsgSudoContract': [condenseCosmwasmWasmV1MsgSudoContract, expandCosmwasmWasmV1MsgSudoContract, decodeCosmwasmWasmV1MsgSudoContract],
    '/cosmwasm.wasm.v1.MsgSudoContractResponse': [condenseCosmwasmWasmV1MsgSudoContractResponse, expandCosmwasmWasmV1MsgSudoContractResponse, decodeCosmwasmWasmV1MsgSudoContractResponse],
    '/cosmwasm.wasm.v1.MsgPinCodes': [condenseCosmwasmWasmV1MsgPinCodes, expandCosmwasmWasmV1MsgPinCodes, decodeCosmwasmWasmV1MsgPinCodes],
    '/cosmwasm.wasm.v1.MsgPinCodesResponse': [condenseCosmwasmWasmV1MsgPinCodesResponse, expandCosmwasmWasmV1MsgPinCodesResponse, decodeCosmwasmWasmV1MsgPinCodesResponse],
    '/cosmwasm.wasm.v1.MsgUnpinCodes': [condenseCosmwasmWasmV1MsgUnpinCodes, expandCosmwasmWasmV1MsgUnpinCodes, decodeCosmwasmWasmV1MsgUnpinCodes],
    '/cosmwasm.wasm.v1.MsgUnpinCodesResponse': [condenseCosmwasmWasmV1MsgUnpinCodesResponse, expandCosmwasmWasmV1MsgUnpinCodesResponse, decodeCosmwasmWasmV1MsgUnpinCodesResponse],
    '/cosmwasm.wasm.v1.MsgStoreAndInstantiateContract': [condenseCosmwasmWasmV1MsgStoreAndInstantiateContract, expandCosmwasmWasmV1MsgStoreAndInstantiateContract, decodeCosmwasmWasmV1MsgStoreAndInstantiateContract],
    '/cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse': [condenseCosmwasmWasmV1MsgStoreAndInstantiateContractResponse, expandCosmwasmWasmV1MsgStoreAndInstantiateContractResponse, decodeCosmwasmWasmV1MsgStoreAndInstantiateContractResponse],
    '/cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses': [condenseCosmwasmWasmV1MsgAddCodeUploadParamsAddresses, expandCosmwasmWasmV1MsgAddCodeUploadParamsAddresses, decodeCosmwasmWasmV1MsgAddCodeUploadParamsAddresses],
    '/cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse': [condenseCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse, expandCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse, decodeCosmwasmWasmV1MsgAddCodeUploadParamsAddressesResponse],
    '/cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses': [condenseCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses, expandCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses, decodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddresses],
    '/cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse': [condenseCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse, expandCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse, decodeCosmwasmWasmV1MsgRemoveCodeUploadParamsAddressesResponse],
    '/cosmwasm.wasm.v1.MsgStoreAndMigrateContract': [condenseCosmwasmWasmV1MsgStoreAndMigrateContract, expandCosmwasmWasmV1MsgStoreAndMigrateContract, decodeCosmwasmWasmV1MsgStoreAndMigrateContract],
    '/cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse': [condenseCosmwasmWasmV1MsgStoreAndMigrateContractResponse, expandCosmwasmWasmV1MsgStoreAndMigrateContractResponse, decodeCosmwasmWasmV1MsgStoreAndMigrateContractResponse],
    '/cosmwasm.wasm.v1.MsgUpdateContractLabel': [condenseCosmwasmWasmV1MsgUpdateContractLabel, expandCosmwasmWasmV1MsgUpdateContractLabel, decodeCosmwasmWasmV1MsgUpdateContractLabel],
    '/cosmwasm.wasm.v1.MsgUpdateContractLabelResponse': [condenseCosmwasmWasmV1MsgUpdateContractLabelResponse, expandCosmwasmWasmV1MsgUpdateContractLabelResponse, decodeCosmwasmWasmV1MsgUpdateContractLabelResponse],
    '/cosmwasm.wasm.v1.AccessTypeParam': [condenseCosmwasmWasmV1AccessTypeParam, expandCosmwasmWasmV1AccessTypeParam, decodeCosmwasmWasmV1AccessTypeParam],
    '/cosmwasm.wasm.v1.AccessConfig': [condenseCosmwasmWasmV1AccessConfig, expandCosmwasmWasmV1AccessConfig, decodeCosmwasmWasmV1AccessConfig],
    '/cosmwasm.wasm.v1.Params': [condenseCosmwasmWasmV1Params, expandCosmwasmWasmV1Params, decodeCosmwasmWasmV1Params],
    '/cosmwasm.wasm.v1.CodeInfo': [condenseCosmwasmWasmV1CodeInfo, expandCosmwasmWasmV1CodeInfo, decodeCosmwasmWasmV1CodeInfo],
    '/cosmwasm.wasm.v1.ContractInfo': [condenseCosmwasmWasmV1ContractInfo, expandCosmwasmWasmV1ContractInfo, decodeCosmwasmWasmV1ContractInfo],
    '/cosmwasm.wasm.v1.ContractCodeHistoryEntry': [condenseCosmwasmWasmV1ContractCodeHistoryEntry, expandCosmwasmWasmV1ContractCodeHistoryEntry, decodeCosmwasmWasmV1ContractCodeHistoryEntry],
    '/cosmwasm.wasm.v1.AbsoluteTxPosition': [condenseCosmwasmWasmV1AbsoluteTxPosition, expandCosmwasmWasmV1AbsoluteTxPosition, decodeCosmwasmWasmV1AbsoluteTxPosition],
    '/cosmwasm.wasm.v1.Model': [condenseCosmwasmWasmV1Model, expandCosmwasmWasmV1Model, decodeCosmwasmWasmV1Model],
    '/cosmwasm.wasm.v1.QueryContractInfoRequest': [condenseCosmwasmWasmV1QueryContractInfoRequest, expandCosmwasmWasmV1QueryContractInfoRequest, decodeCosmwasmWasmV1QueryContractInfoRequest],
    '/cosmwasm.wasm.v1.QueryContractInfoResponse': [condenseCosmwasmWasmV1QueryContractInfoResponse, expandCosmwasmWasmV1QueryContractInfoResponse, decodeCosmwasmWasmV1QueryContractInfoResponse],
    '/cosmwasm.wasm.v1.QueryContractHistoryRequest': [condenseCosmwasmWasmV1QueryContractHistoryRequest, expandCosmwasmWasmV1QueryContractHistoryRequest, decodeCosmwasmWasmV1QueryContractHistoryRequest],
    '/cosmwasm.wasm.v1.QueryContractHistoryResponse': [condenseCosmwasmWasmV1QueryContractHistoryResponse, expandCosmwasmWasmV1QueryContractHistoryResponse, decodeCosmwasmWasmV1QueryContractHistoryResponse],
    '/cosmwasm.wasm.v1.QueryContractsByCodeRequest': [condenseCosmwasmWasmV1QueryContractsByCodeRequest, expandCosmwasmWasmV1QueryContractsByCodeRequest, decodeCosmwasmWasmV1QueryContractsByCodeRequest],
    '/cosmwasm.wasm.v1.QueryContractsByCodeResponse': [condenseCosmwasmWasmV1QueryContractsByCodeResponse, expandCosmwasmWasmV1QueryContractsByCodeResponse, decodeCosmwasmWasmV1QueryContractsByCodeResponse],
    '/cosmwasm.wasm.v1.QueryAllContractStateRequest': [condenseCosmwasmWasmV1QueryAllContractStateRequest, expandCosmwasmWasmV1QueryAllContractStateRequest, decodeCosmwasmWasmV1QueryAllContractStateRequest],
    '/cosmwasm.wasm.v1.QueryAllContractStateResponse': [condenseCosmwasmWasmV1QueryAllContractStateResponse, expandCosmwasmWasmV1QueryAllContractStateResponse, decodeCosmwasmWasmV1QueryAllContractStateResponse],
    '/cosmwasm.wasm.v1.QueryRawContractStateRequest': [condenseCosmwasmWasmV1QueryRawContractStateRequest, expandCosmwasmWasmV1QueryRawContractStateRequest, decodeCosmwasmWasmV1QueryRawContractStateRequest],
    '/cosmwasm.wasm.v1.QueryRawContractStateResponse': [condenseCosmwasmWasmV1QueryRawContractStateResponse, expandCosmwasmWasmV1QueryRawContractStateResponse, decodeCosmwasmWasmV1QueryRawContractStateResponse],
    '/cosmwasm.wasm.v1.QuerySmartContractStateRequest': [condenseCosmwasmWasmV1QuerySmartContractStateRequest, expandCosmwasmWasmV1QuerySmartContractStateRequest, decodeCosmwasmWasmV1QuerySmartContractStateRequest],
    '/cosmwasm.wasm.v1.QuerySmartContractStateResponse': [condenseCosmwasmWasmV1QuerySmartContractStateResponse, expandCosmwasmWasmV1QuerySmartContractStateResponse, decodeCosmwasmWasmV1QuerySmartContractStateResponse],
    '/cosmwasm.wasm.v1.QueryCodeRequest': [condenseCosmwasmWasmV1QueryCodeRequest, expandCosmwasmWasmV1QueryCodeRequest, decodeCosmwasmWasmV1QueryCodeRequest],
    '/cosmwasm.wasm.v1.CodeInfoResponse': [condenseCosmwasmWasmV1CodeInfoResponse, expandCosmwasmWasmV1CodeInfoResponse, decodeCosmwasmWasmV1CodeInfoResponse],
    '/cosmwasm.wasm.v1.QueryCodeResponse': [condenseCosmwasmWasmV1QueryCodeResponse, expandCosmwasmWasmV1QueryCodeResponse, decodeCosmwasmWasmV1QueryCodeResponse],
    '/cosmwasm.wasm.v1.QueryCodesRequest': [condenseCosmwasmWasmV1QueryCodesRequest, expandCosmwasmWasmV1QueryCodesRequest, decodeCosmwasmWasmV1QueryCodesRequest],
    '/cosmwasm.wasm.v1.QueryCodesResponse': [condenseCosmwasmWasmV1QueryCodesResponse, expandCosmwasmWasmV1QueryCodesResponse, decodeCosmwasmWasmV1QueryCodesResponse],
    '/cosmwasm.wasm.v1.QueryPinnedCodesRequest': [condenseCosmwasmWasmV1QueryPinnedCodesRequest, expandCosmwasmWasmV1QueryPinnedCodesRequest, decodeCosmwasmWasmV1QueryPinnedCodesRequest],
    '/cosmwasm.wasm.v1.QueryPinnedCodesResponse': [condenseCosmwasmWasmV1QueryPinnedCodesResponse, expandCosmwasmWasmV1QueryPinnedCodesResponse, decodeCosmwasmWasmV1QueryPinnedCodesResponse],
    '/cosmwasm.wasm.v1.QueryParamsRequest': [condenseCosmwasmWasmV1QueryParamsRequest, expandCosmwasmWasmV1QueryParamsRequest, decodeCosmwasmWasmV1QueryParamsRequest],
    '/cosmwasm.wasm.v1.QueryParamsResponse': [condenseCosmwasmWasmV1QueryParamsResponse, expandCosmwasmWasmV1QueryParamsResponse, decodeCosmwasmWasmV1QueryParamsResponse],
    '/cosmwasm.wasm.v1.QueryContractsByCreatorRequest': [condenseCosmwasmWasmV1QueryContractsByCreatorRequest, expandCosmwasmWasmV1QueryContractsByCreatorRequest, decodeCosmwasmWasmV1QueryContractsByCreatorRequest],
    '/cosmwasm.wasm.v1.QueryContractsByCreatorResponse': [condenseCosmwasmWasmV1QueryContractsByCreatorResponse, expandCosmwasmWasmV1QueryContractsByCreatorResponse, decodeCosmwasmWasmV1QueryContractsByCreatorResponse],
    '/cosmwasm.wasm.v1.StoreCodeAuthorization': [condenseCosmwasmWasmV1StoreCodeAuthorization, expandCosmwasmWasmV1StoreCodeAuthorization, decodeCosmwasmWasmV1StoreCodeAuthorization],
    '/cosmwasm.wasm.v1.ContractExecutionAuthorization': [condenseCosmwasmWasmV1ContractExecutionAuthorization, expandCosmwasmWasmV1ContractExecutionAuthorization, decodeCosmwasmWasmV1ContractExecutionAuthorization],
    '/cosmwasm.wasm.v1.ContractMigrationAuthorization': [condenseCosmwasmWasmV1ContractMigrationAuthorization, expandCosmwasmWasmV1ContractMigrationAuthorization, decodeCosmwasmWasmV1ContractMigrationAuthorization],
    '/cosmwasm.wasm.v1.CodeGrant': [condenseCosmwasmWasmV1CodeGrant, expandCosmwasmWasmV1CodeGrant, decodeCosmwasmWasmV1CodeGrant],
    '/cosmwasm.wasm.v1.ContractGrant': [condenseCosmwasmWasmV1ContractGrant, expandCosmwasmWasmV1ContractGrant, decodeCosmwasmWasmV1ContractGrant],
    '/cosmwasm.wasm.v1.MaxCallsLimit': [condenseCosmwasmWasmV1MaxCallsLimit, expandCosmwasmWasmV1MaxCallsLimit, decodeCosmwasmWasmV1MaxCallsLimit],
    '/cosmwasm.wasm.v1.MaxFundsLimit': [condenseCosmwasmWasmV1MaxFundsLimit, expandCosmwasmWasmV1MaxFundsLimit, decodeCosmwasmWasmV1MaxFundsLimit],
    '/cosmwasm.wasm.v1.CombinedLimit': [condenseCosmwasmWasmV1CombinedLimit, expandCosmwasmWasmV1CombinedLimit, decodeCosmwasmWasmV1CombinedLimit],
    '/cosmwasm.wasm.v1.AllowAllMessagesFilter': [condenseCosmwasmWasmV1AllowAllMessagesFilter, expandCosmwasmWasmV1AllowAllMessagesFilter, decodeCosmwasmWasmV1AllowAllMessagesFilter],
    '/cosmwasm.wasm.v1.AcceptedMessageKeysFilter': [condenseCosmwasmWasmV1AcceptedMessageKeysFilter, expandCosmwasmWasmV1AcceptedMessageKeysFilter, decodeCosmwasmWasmV1AcceptedMessageKeysFilter],
    '/cosmwasm.wasm.v1.AcceptedMessagesFilter': [condenseCosmwasmWasmV1AcceptedMessagesFilter, expandCosmwasmWasmV1AcceptedMessagesFilter, decodeCosmwasmWasmV1AcceptedMessagesFilter],
    '/cosmwasm.wasm.v1.GenesisState': [condenseCosmwasmWasmV1GenesisState, expandCosmwasmWasmV1GenesisState, decodeCosmwasmWasmV1GenesisState],
    '/cosmwasm.wasm.v1.Code': [condenseCosmwasmWasmV1Code, expandCosmwasmWasmV1Code, decodeCosmwasmWasmV1Code],
    '/cosmwasm.wasm.v1.Contract': [condenseCosmwasmWasmV1Contract, expandCosmwasmWasmV1Contract, decodeCosmwasmWasmV1Contract],
    '/cosmwasm.wasm.v1.Sequence': [condenseCosmwasmWasmV1Sequence, expandCosmwasmWasmV1Sequence, decodeCosmwasmWasmV1Sequence],
    '/cosmwasm.wasm.v1.MsgIBCSend': [condenseCosmwasmWasmV1MsgIBCSend, expandCosmwasmWasmV1MsgIBCSend, decodeCosmwasmWasmV1MsgIBCSend],
    '/cosmwasm.wasm.v1.MsgIBCSendResponse': [condenseCosmwasmWasmV1MsgIBCSendResponse, expandCosmwasmWasmV1MsgIBCSendResponse, decodeCosmwasmWasmV1MsgIBCSendResponse],
    '/cosmwasm.wasm.v1.MsgIBCCloseChannel': [condenseCosmwasmWasmV1MsgIBCCloseChannel, expandCosmwasmWasmV1MsgIBCCloseChannel, decodeCosmwasmWasmV1MsgIBCCloseChannel],
    '/secret.registration.remote_attestation.v1beta1.QuoteReport': [condenseSecretRegistrationRemoteAttestationV1beta1QuoteReport, expandSecretRegistrationRemoteAttestationV1beta1QuoteReport, decodeSecretRegistrationRemoteAttestationV1beta1QuoteReport],
    '/secret.registration.remote_attestation.v1beta1.QuoteReportBody': [condenseSecretRegistrationRemoteAttestationV1beta1QuoteReportBody, expandSecretRegistrationRemoteAttestationV1beta1QuoteReportBody, decodeSecretRegistrationRemoteAttestationV1beta1QuoteReportBody],
    '/secret.registration.remote_attestation.v1beta1.QuoteReportData': [condenseSecretRegistrationRemoteAttestationV1beta1QuoteReportData, expandSecretRegistrationRemoteAttestationV1beta1QuoteReportData, decodeSecretRegistrationRemoteAttestationV1beta1QuoteReportData],
    '/secret.registration.remote_attestation.v1beta1.EndorsedAttestationReport': [condenseSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport, expandSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport, decodeSecretRegistrationRemoteAttestationV1beta1EndorsedAttestationReport],
    '/secret.registration.remote_attestation.v1beta1.SGXEC256Signature': [condenseSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature, expandSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature, decodeSecretRegistrationRemoteAttestationV1beta1SGXEC256Signature],
    '/secret.registration.remote_attestation.v1beta1.PlatformInfoBlob': [condenseSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob, expandSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob, decodeSecretRegistrationRemoteAttestationV1beta1PlatformInfoBlob],
    '/secret.registration.v1beta1.SeedConfig': [condenseSecretRegistrationV1beta1SeedConfig, expandSecretRegistrationV1beta1SeedConfig, decodeSecretRegistrationV1beta1SeedConfig],
    '/secret.registration.v1beta1.LegacySeedConfig': [condenseSecretRegistrationV1beta1LegacySeedConfig, expandSecretRegistrationV1beta1LegacySeedConfig, decodeSecretRegistrationV1beta1LegacySeedConfig],
    '/secret.registration.v1beta1.RegistrationNodeInfo': [condenseSecretRegistrationV1beta1RegistrationNodeInfo, expandSecretRegistrationV1beta1RegistrationNodeInfo, decodeSecretRegistrationV1beta1RegistrationNodeInfo],
    '/secret.registration.v1beta1.QueryEncryptedSeedRequest': [condenseSecretRegistrationV1beta1QueryEncryptedSeedRequest, expandSecretRegistrationV1beta1QueryEncryptedSeedRequest, decodeSecretRegistrationV1beta1QueryEncryptedSeedRequest],
    '/secret.registration.v1beta1.QueryEncryptedSeedResponse': [condenseSecretRegistrationV1beta1QueryEncryptedSeedResponse, expandSecretRegistrationV1beta1QueryEncryptedSeedResponse, decodeSecretRegistrationV1beta1QueryEncryptedSeedResponse],
    '/secret.registration.v1beta1.GenesisState': [condenseSecretRegistrationV1beta1GenesisState, expandSecretRegistrationV1beta1GenesisState, decodeSecretRegistrationV1beta1GenesisState],
    '/secret.registration.v1beta1.RaAuthenticate': [condenseSecretRegistrationV1beta1RaAuthenticate, expandSecretRegistrationV1beta1RaAuthenticate, decodeSecretRegistrationV1beta1RaAuthenticate],
    '/secret.registration.v1beta1.MasterKey': [condenseSecretRegistrationV1beta1MasterKey, expandSecretRegistrationV1beta1MasterKey, decodeSecretRegistrationV1beta1MasterKey],
    '/secret.registration.v1beta1.Key': [condenseSecretRegistrationV1beta1Key, expandSecretRegistrationV1beta1Key, decodeSecretRegistrationV1beta1Key],
    '/secret.emergencybutton.v1beta1.MsgToggleIbcSwitch': [condenseSecretEmergencybuttonV1beta1MsgToggleIbcSwitch, expandSecretEmergencybuttonV1beta1MsgToggleIbcSwitch, decodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitch],
    '/secret.emergencybutton.v1beta1.MsgToggleIbcSwitchResponse': [condenseSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse, expandSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse, decodeSecretEmergencybuttonV1beta1MsgToggleIbcSwitchResponse],
    '/secret.emergencybutton.v1beta1.ParamsRequest': [condenseSecretEmergencybuttonV1beta1ParamsRequest, expandSecretEmergencybuttonV1beta1ParamsRequest, decodeSecretEmergencybuttonV1beta1ParamsRequest],
    '/secret.emergencybutton.v1beta1.ParamsResponse': [condenseSecretEmergencybuttonV1beta1ParamsResponse, expandSecretEmergencybuttonV1beta1ParamsResponse, decodeSecretEmergencybuttonV1beta1ParamsResponse],
    '/secret.emergencybutton.v1beta1.GenesisState': [condenseSecretEmergencybuttonV1beta1GenesisState, expandSecretEmergencybuttonV1beta1GenesisState, decodeSecretEmergencybuttonV1beta1GenesisState],
    '/secret.emergencybutton.v1beta1.Params': [condenseSecretEmergencybuttonV1beta1Params, expandSecretEmergencybuttonV1beta1Params, decodeSecretEmergencybuttonV1beta1Params],
    '/secret.intertx.v1beta1.MsgRegisterAccount': [condenseSecretIntertxV1beta1MsgRegisterAccount, expandSecretIntertxV1beta1MsgRegisterAccount, decodeSecretIntertxV1beta1MsgRegisterAccount],
    '/secret.intertx.v1beta1.MsgRegisterAccountResponse': [condenseSecretIntertxV1beta1MsgRegisterAccountResponse, expandSecretIntertxV1beta1MsgRegisterAccountResponse, decodeSecretIntertxV1beta1MsgRegisterAccountResponse],
    '/secret.intertx.v1beta1.MsgSubmitTx': [condenseSecretIntertxV1beta1MsgSubmitTx, expandSecretIntertxV1beta1MsgSubmitTx, decodeSecretIntertxV1beta1MsgSubmitTx],
    '/secret.intertx.v1beta1.MsgSubmitTxResponse': [condenseSecretIntertxV1beta1MsgSubmitTxResponse, expandSecretIntertxV1beta1MsgSubmitTxResponse, decodeSecretIntertxV1beta1MsgSubmitTxResponse],
    '/secret.intertx.v1beta1.QueryInterchainAccountFromAddressRequest': [condenseSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest, expandSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest, decodeSecretIntertxV1beta1QueryInterchainAccountFromAddressRequest],
    '/secret.intertx.v1beta1.QueryInterchainAccountFromAddressResponse': [condenseSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse, expandSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse, decodeSecretIntertxV1beta1QueryInterchainAccountFromAddressResponse],
    '/secret.compute.v1beta1.AccessTypeParam': [condenseSecretComputeV1beta1AccessTypeParam, expandSecretComputeV1beta1AccessTypeParam, decodeSecretComputeV1beta1AccessTypeParam],
    '/secret.compute.v1beta1.CodeInfo': [condenseSecretComputeV1beta1CodeInfo, expandSecretComputeV1beta1CodeInfo, decodeSecretComputeV1beta1CodeInfo],
    '/secret.compute.v1beta1.ContractKey': [condenseSecretComputeV1beta1ContractKey, expandSecretComputeV1beta1ContractKey, decodeSecretComputeV1beta1ContractKey],
    '/secret.compute.v1beta1.ContractCustomInfo': [condenseSecretComputeV1beta1ContractCustomInfo, expandSecretComputeV1beta1ContractCustomInfo, decodeSecretComputeV1beta1ContractCustomInfo],
    '/secret.compute.v1beta1.ContractInfo': [condenseSecretComputeV1beta1ContractInfo, expandSecretComputeV1beta1ContractInfo, decodeSecretComputeV1beta1ContractInfo],
    '/secret.compute.v1beta1.AbsoluteTxPosition': [condenseSecretComputeV1beta1AbsoluteTxPosition, expandSecretComputeV1beta1AbsoluteTxPosition, decodeSecretComputeV1beta1AbsoluteTxPosition],
    '/secret.compute.v1beta1.Model': [condenseSecretComputeV1beta1Model, expandSecretComputeV1beta1Model, decodeSecretComputeV1beta1Model],
    '/secret.compute.v1beta1.ContractCodeHistoryEntry': [condenseSecretComputeV1beta1ContractCodeHistoryEntry, expandSecretComputeV1beta1ContractCodeHistoryEntry, decodeSecretComputeV1beta1ContractCodeHistoryEntry],
    '/secret.compute.v1beta1.QuerySecretContractRequest': [condenseSecretComputeV1beta1QuerySecretContractRequest, expandSecretComputeV1beta1QuerySecretContractRequest, decodeSecretComputeV1beta1QuerySecretContractRequest],
    '/secret.compute.v1beta1.QueryByLabelRequest': [condenseSecretComputeV1beta1QueryByLabelRequest, expandSecretComputeV1beta1QueryByLabelRequest, decodeSecretComputeV1beta1QueryByLabelRequest],
    '/secret.compute.v1beta1.QueryByContractAddressRequest': [condenseSecretComputeV1beta1QueryByContractAddressRequest, expandSecretComputeV1beta1QueryByContractAddressRequest, decodeSecretComputeV1beta1QueryByContractAddressRequest],
    '/secret.compute.v1beta1.QueryByCodeIdRequest': [condenseSecretComputeV1beta1QueryByCodeIdRequest, expandSecretComputeV1beta1QueryByCodeIdRequest, decodeSecretComputeV1beta1QueryByCodeIdRequest],
    '/secret.compute.v1beta1.QuerySecretContractResponse': [condenseSecretComputeV1beta1QuerySecretContractResponse, expandSecretComputeV1beta1QuerySecretContractResponse, decodeSecretComputeV1beta1QuerySecretContractResponse],
    '/secret.compute.v1beta1.QueryContractInfoResponse': [condenseSecretComputeV1beta1QueryContractInfoResponse, expandSecretComputeV1beta1QueryContractInfoResponse, decodeSecretComputeV1beta1QueryContractInfoResponse],
    '/secret.compute.v1beta1.ContractInfoWithAddress': [condenseSecretComputeV1beta1ContractInfoWithAddress, expandSecretComputeV1beta1ContractInfoWithAddress, decodeSecretComputeV1beta1ContractInfoWithAddress],
    '/secret.compute.v1beta1.QueryContractsByCodeIdResponse': [condenseSecretComputeV1beta1QueryContractsByCodeIdResponse, expandSecretComputeV1beta1QueryContractsByCodeIdResponse, decodeSecretComputeV1beta1QueryContractsByCodeIdResponse],
    '/secret.compute.v1beta1.CodeInfoResponse': [condenseSecretComputeV1beta1CodeInfoResponse, expandSecretComputeV1beta1CodeInfoResponse, decodeSecretComputeV1beta1CodeInfoResponse],
    '/secret.compute.v1beta1.QueryCodeResponse': [condenseSecretComputeV1beta1QueryCodeResponse, expandSecretComputeV1beta1QueryCodeResponse, decodeSecretComputeV1beta1QueryCodeResponse],
    '/secret.compute.v1beta1.QueryCodesResponse': [condenseSecretComputeV1beta1QueryCodesResponse, expandSecretComputeV1beta1QueryCodesResponse, decodeSecretComputeV1beta1QueryCodesResponse],
    '/secret.compute.v1beta1.QueryContractAddressResponse': [condenseSecretComputeV1beta1QueryContractAddressResponse, expandSecretComputeV1beta1QueryContractAddressResponse, decodeSecretComputeV1beta1QueryContractAddressResponse],
    '/secret.compute.v1beta1.QueryContractLabelResponse': [condenseSecretComputeV1beta1QueryContractLabelResponse, expandSecretComputeV1beta1QueryContractLabelResponse, decodeSecretComputeV1beta1QueryContractLabelResponse],
    '/secret.compute.v1beta1.QueryCodeHashResponse': [condenseSecretComputeV1beta1QueryCodeHashResponse, expandSecretComputeV1beta1QueryCodeHashResponse, decodeSecretComputeV1beta1QueryCodeHashResponse],
    '/secret.compute.v1beta1.DecryptedAnswer': [condenseSecretComputeV1beta1DecryptedAnswer, expandSecretComputeV1beta1DecryptedAnswer, decodeSecretComputeV1beta1DecryptedAnswer],
    '/secret.compute.v1beta1.DecryptedAnswers': [condenseSecretComputeV1beta1DecryptedAnswers, expandSecretComputeV1beta1DecryptedAnswers, decodeSecretComputeV1beta1DecryptedAnswers],
    '/secret.compute.v1beta1.QueryContractHistoryRequest': [condenseSecretComputeV1beta1QueryContractHistoryRequest, expandSecretComputeV1beta1QueryContractHistoryRequest, decodeSecretComputeV1beta1QueryContractHistoryRequest],
    '/secret.compute.v1beta1.QueryContractHistoryResponse': [condenseSecretComputeV1beta1QueryContractHistoryResponse, expandSecretComputeV1beta1QueryContractHistoryResponse, decodeSecretComputeV1beta1QueryContractHistoryResponse],
    '/secret.compute.v1beta1.GenesisState': [condenseSecretComputeV1beta1GenesisState, expandSecretComputeV1beta1GenesisState, decodeSecretComputeV1beta1GenesisState],
    '/secret.compute.v1beta1.Code': [condenseSecretComputeV1beta1Code, expandSecretComputeV1beta1Code, decodeSecretComputeV1beta1Code],
    '/secret.compute.v1beta1.Contract': [condenseSecretComputeV1beta1Contract, expandSecretComputeV1beta1Contract, decodeSecretComputeV1beta1Contract],
    '/secret.compute.v1beta1.Sequence': [condenseSecretComputeV1beta1Sequence, expandSecretComputeV1beta1Sequence, decodeSecretComputeV1beta1Sequence],
    '/secret.compute.v1beta1.MsgStoreCode': [condenseSecretComputeV1beta1MsgStoreCode, expandSecretComputeV1beta1MsgStoreCode, decodeSecretComputeV1beta1MsgStoreCode],
    '/secret.compute.v1beta1.MsgStoreCodeResponse': [condenseSecretComputeV1beta1MsgStoreCodeResponse, expandSecretComputeV1beta1MsgStoreCodeResponse, decodeSecretComputeV1beta1MsgStoreCodeResponse],
    '/secret.compute.v1beta1.MsgInstantiateContract': [condenseSecretComputeV1beta1MsgInstantiateContract, expandSecretComputeV1beta1MsgInstantiateContract, decodeSecretComputeV1beta1MsgInstantiateContract],
    '/secret.compute.v1beta1.MsgInstantiateContractResponse': [condenseSecretComputeV1beta1MsgInstantiateContractResponse, expandSecretComputeV1beta1MsgInstantiateContractResponse, decodeSecretComputeV1beta1MsgInstantiateContractResponse],
    '/secret.compute.v1beta1.MsgExecuteContract': [condenseSecretComputeV1beta1MsgExecuteContract, expandSecretComputeV1beta1MsgExecuteContract, decodeSecretComputeV1beta1MsgExecuteContract],
    '/secret.compute.v1beta1.MsgExecuteContractResponse': [condenseSecretComputeV1beta1MsgExecuteContractResponse, expandSecretComputeV1beta1MsgExecuteContractResponse, decodeSecretComputeV1beta1MsgExecuteContractResponse],
    '/secret.compute.v1beta1.MsgMigrateContract': [condenseSecretComputeV1beta1MsgMigrateContract, expandSecretComputeV1beta1MsgMigrateContract, decodeSecretComputeV1beta1MsgMigrateContract],
    '/secret.compute.v1beta1.MsgMigrateContractResponse': [condenseSecretComputeV1beta1MsgMigrateContractResponse, expandSecretComputeV1beta1MsgMigrateContractResponse, decodeSecretComputeV1beta1MsgMigrateContractResponse],
    '/secret.compute.v1beta1.MsgUpdateAdmin': [condenseSecretComputeV1beta1MsgUpdateAdmin, expandSecretComputeV1beta1MsgUpdateAdmin, decodeSecretComputeV1beta1MsgUpdateAdmin],
    '/secret.compute.v1beta1.MsgUpdateAdminResponse': [condenseSecretComputeV1beta1MsgUpdateAdminResponse, expandSecretComputeV1beta1MsgUpdateAdminResponse, decodeSecretComputeV1beta1MsgUpdateAdminResponse],
    '/secret.compute.v1beta1.MsgClearAdmin': [condenseSecretComputeV1beta1MsgClearAdmin, expandSecretComputeV1beta1MsgClearAdmin, decodeSecretComputeV1beta1MsgClearAdmin],
    '/secret.compute.v1beta1.MsgClearAdminResponse': [condenseSecretComputeV1beta1MsgClearAdminResponse, expandSecretComputeV1beta1MsgClearAdminResponse, decodeSecretComputeV1beta1MsgClearAdminResponse],
    '/akash.provider.v1beta3.QueryProvidersRequest': [condenseAkashProviderV1beta3QueryProvidersRequest, expandAkashProviderV1beta3QueryProvidersRequest, decodeAkashProviderV1beta3QueryProvidersRequest],
    '/akash.provider.v1beta3.QueryProvidersResponse': [condenseAkashProviderV1beta3QueryProvidersResponse, expandAkashProviderV1beta3QueryProvidersResponse, decodeAkashProviderV1beta3QueryProvidersResponse],
    '/akash.provider.v1beta3.QueryProviderRequest': [condenseAkashProviderV1beta3QueryProviderRequest, expandAkashProviderV1beta3QueryProviderRequest, decodeAkashProviderV1beta3QueryProviderRequest],
    '/akash.provider.v1beta3.QueryProviderResponse': [condenseAkashProviderV1beta3QueryProviderResponse, expandAkashProviderV1beta3QueryProviderResponse, decodeAkashProviderV1beta3QueryProviderResponse],
    '/akash.provider.v1beta3.GenesisState': [condenseAkashProviderV1beta3GenesisState, expandAkashProviderV1beta3GenesisState, decodeAkashProviderV1beta3GenesisState],
    '/akash.provider.v1beta3.ProviderInfo': [condenseAkashProviderV1beta3ProviderInfo, expandAkashProviderV1beta3ProviderInfo, decodeAkashProviderV1beta3ProviderInfo],
    '/akash.provider.v1beta3.MsgCreateProvider': [condenseAkashProviderV1beta3MsgCreateProvider, expandAkashProviderV1beta3MsgCreateProvider, decodeAkashProviderV1beta3MsgCreateProvider],
    '/akash.provider.v1beta3.MsgCreateProviderResponse': [condenseAkashProviderV1beta3MsgCreateProviderResponse, expandAkashProviderV1beta3MsgCreateProviderResponse, decodeAkashProviderV1beta3MsgCreateProviderResponse],
    '/akash.provider.v1beta3.MsgUpdateProvider': [condenseAkashProviderV1beta3MsgUpdateProvider, expandAkashProviderV1beta3MsgUpdateProvider, decodeAkashProviderV1beta3MsgUpdateProvider],
    '/akash.provider.v1beta3.MsgUpdateProviderResponse': [condenseAkashProviderV1beta3MsgUpdateProviderResponse, expandAkashProviderV1beta3MsgUpdateProviderResponse, decodeAkashProviderV1beta3MsgUpdateProviderResponse],
    '/akash.provider.v1beta3.MsgDeleteProvider': [condenseAkashProviderV1beta3MsgDeleteProvider, expandAkashProviderV1beta3MsgDeleteProvider, decodeAkashProviderV1beta3MsgDeleteProvider],
    '/akash.provider.v1beta3.MsgDeleteProviderResponse': [condenseAkashProviderV1beta3MsgDeleteProviderResponse, expandAkashProviderV1beta3MsgDeleteProviderResponse, decodeAkashProviderV1beta3MsgDeleteProviderResponse],
    '/akash.provider.v1beta3.Provider': [condenseAkashProviderV1beta3Provider, expandAkashProviderV1beta3Provider, decodeAkashProviderV1beta3Provider],
    '/akash.provider.v1beta2.QueryProvidersRequest': [condenseAkashProviderV1beta2QueryProvidersRequest, expandAkashProviderV1beta2QueryProvidersRequest, decodeAkashProviderV1beta2QueryProvidersRequest],
    '/akash.provider.v1beta2.QueryProvidersResponse': [condenseAkashProviderV1beta2QueryProvidersResponse, expandAkashProviderV1beta2QueryProvidersResponse, decodeAkashProviderV1beta2QueryProvidersResponse],
    '/akash.provider.v1beta2.QueryProviderRequest': [condenseAkashProviderV1beta2QueryProviderRequest, expandAkashProviderV1beta2QueryProviderRequest, decodeAkashProviderV1beta2QueryProviderRequest],
    '/akash.provider.v1beta2.QueryProviderResponse': [condenseAkashProviderV1beta2QueryProviderResponse, expandAkashProviderV1beta2QueryProviderResponse, decodeAkashProviderV1beta2QueryProviderResponse],
    '/akash.provider.v1beta2.GenesisState': [condenseAkashProviderV1beta2GenesisState, expandAkashProviderV1beta2GenesisState, decodeAkashProviderV1beta2GenesisState],
    '/akash.provider.v1beta2.ProviderInfo': [condenseAkashProviderV1beta2ProviderInfo, expandAkashProviderV1beta2ProviderInfo, decodeAkashProviderV1beta2ProviderInfo],
    '/akash.provider.v1beta2.MsgCreateProvider': [condenseAkashProviderV1beta2MsgCreateProvider, expandAkashProviderV1beta2MsgCreateProvider, decodeAkashProviderV1beta2MsgCreateProvider],
    '/akash.provider.v1beta2.MsgCreateProviderResponse': [condenseAkashProviderV1beta2MsgCreateProviderResponse, expandAkashProviderV1beta2MsgCreateProviderResponse, decodeAkashProviderV1beta2MsgCreateProviderResponse],
    '/akash.provider.v1beta2.MsgUpdateProvider': [condenseAkashProviderV1beta2MsgUpdateProvider, expandAkashProviderV1beta2MsgUpdateProvider, decodeAkashProviderV1beta2MsgUpdateProvider],
    '/akash.provider.v1beta2.MsgUpdateProviderResponse': [condenseAkashProviderV1beta2MsgUpdateProviderResponse, expandAkashProviderV1beta2MsgUpdateProviderResponse, decodeAkashProviderV1beta2MsgUpdateProviderResponse],
    '/akash.provider.v1beta2.MsgDeleteProvider': [condenseAkashProviderV1beta2MsgDeleteProvider, expandAkashProviderV1beta2MsgDeleteProvider, decodeAkashProviderV1beta2MsgDeleteProvider],
    '/akash.provider.v1beta2.MsgDeleteProviderResponse': [condenseAkashProviderV1beta2MsgDeleteProviderResponse, expandAkashProviderV1beta2MsgDeleteProviderResponse, decodeAkashProviderV1beta2MsgDeleteProviderResponse],
    '/akash.provider.v1beta2.Provider': [condenseAkashProviderV1beta2Provider, expandAkashProviderV1beta2Provider, decodeAkashProviderV1beta2Provider],
    '/akash.provider.v1beta1.ProviderInfo': [condenseAkashProviderV1beta1ProviderInfo, expandAkashProviderV1beta1ProviderInfo, decodeAkashProviderV1beta1ProviderInfo],
    '/akash.provider.v1beta1.MsgCreateProvider': [condenseAkashProviderV1beta1MsgCreateProvider, expandAkashProviderV1beta1MsgCreateProvider, decodeAkashProviderV1beta1MsgCreateProvider],
    '/akash.provider.v1beta1.MsgCreateProviderResponse': [condenseAkashProviderV1beta1MsgCreateProviderResponse, expandAkashProviderV1beta1MsgCreateProviderResponse, decodeAkashProviderV1beta1MsgCreateProviderResponse],
    '/akash.provider.v1beta1.MsgUpdateProvider': [condenseAkashProviderV1beta1MsgUpdateProvider, expandAkashProviderV1beta1MsgUpdateProvider, decodeAkashProviderV1beta1MsgUpdateProvider],
    '/akash.provider.v1beta1.MsgUpdateProviderResponse': [condenseAkashProviderV1beta1MsgUpdateProviderResponse, expandAkashProviderV1beta1MsgUpdateProviderResponse, decodeAkashProviderV1beta1MsgUpdateProviderResponse],
    '/akash.provider.v1beta1.MsgDeleteProvider': [condenseAkashProviderV1beta1MsgDeleteProvider, expandAkashProviderV1beta1MsgDeleteProvider, decodeAkashProviderV1beta1MsgDeleteProvider],
    '/akash.provider.v1beta1.MsgDeleteProviderResponse': [condenseAkashProviderV1beta1MsgDeleteProviderResponse, expandAkashProviderV1beta1MsgDeleteProviderResponse, decodeAkashProviderV1beta1MsgDeleteProviderResponse],
    '/akash.provider.v1beta1.Provider': [condenseAkashProviderV1beta1Provider, expandAkashProviderV1beta1Provider, decodeAkashProviderV1beta1Provider],
    '/akash.audit.v1beta3.Provider': [condenseAkashAuditV1beta3Provider, expandAkashAuditV1beta3Provider, decodeAkashAuditV1beta3Provider],
    '/akash.audit.v1beta3.AuditedAttributes': [condenseAkashAuditV1beta3AuditedAttributes, expandAkashAuditV1beta3AuditedAttributes, decodeAkashAuditV1beta3AuditedAttributes],
    '/akash.audit.v1beta3.AttributesResponse': [condenseAkashAuditV1beta3AttributesResponse, expandAkashAuditV1beta3AttributesResponse, decodeAkashAuditV1beta3AttributesResponse],
    '/akash.audit.v1beta3.AttributesFilters': [condenseAkashAuditV1beta3AttributesFilters, expandAkashAuditV1beta3AttributesFilters, decodeAkashAuditV1beta3AttributesFilters],
    '/akash.audit.v1beta3.MsgSignProviderAttributes': [condenseAkashAuditV1beta3MsgSignProviderAttributes, expandAkashAuditV1beta3MsgSignProviderAttributes, decodeAkashAuditV1beta3MsgSignProviderAttributes],
    '/akash.audit.v1beta3.MsgSignProviderAttributesResponse': [condenseAkashAuditV1beta3MsgSignProviderAttributesResponse, expandAkashAuditV1beta3MsgSignProviderAttributesResponse, decodeAkashAuditV1beta3MsgSignProviderAttributesResponse],
    '/akash.audit.v1beta3.MsgDeleteProviderAttributes': [condenseAkashAuditV1beta3MsgDeleteProviderAttributes, expandAkashAuditV1beta3MsgDeleteProviderAttributes, decodeAkashAuditV1beta3MsgDeleteProviderAttributes],
    '/akash.audit.v1beta3.MsgDeleteProviderAttributesResponse': [condenseAkashAuditV1beta3MsgDeleteProviderAttributesResponse, expandAkashAuditV1beta3MsgDeleteProviderAttributesResponse, decodeAkashAuditV1beta3MsgDeleteProviderAttributesResponse],
    '/akash.audit.v1beta3.QueryProvidersResponse': [condenseAkashAuditV1beta3QueryProvidersResponse, expandAkashAuditV1beta3QueryProvidersResponse, decodeAkashAuditV1beta3QueryProvidersResponse],
    '/akash.audit.v1beta3.QueryProviderRequest': [condenseAkashAuditV1beta3QueryProviderRequest, expandAkashAuditV1beta3QueryProviderRequest, decodeAkashAuditV1beta3QueryProviderRequest],
    '/akash.audit.v1beta3.QueryAllProvidersAttributesRequest': [condenseAkashAuditV1beta3QueryAllProvidersAttributesRequest, expandAkashAuditV1beta3QueryAllProvidersAttributesRequest, decodeAkashAuditV1beta3QueryAllProvidersAttributesRequest],
    '/akash.audit.v1beta3.QueryProviderAttributesRequest': [condenseAkashAuditV1beta3QueryProviderAttributesRequest, expandAkashAuditV1beta3QueryProviderAttributesRequest, decodeAkashAuditV1beta3QueryProviderAttributesRequest],
    '/akash.audit.v1beta3.QueryProviderAuditorRequest': [condenseAkashAuditV1beta3QueryProviderAuditorRequest, expandAkashAuditV1beta3QueryProviderAuditorRequest, decodeAkashAuditV1beta3QueryProviderAuditorRequest],
    '/akash.audit.v1beta3.QueryAuditorAttributesRequest': [condenseAkashAuditV1beta3QueryAuditorAttributesRequest, expandAkashAuditV1beta3QueryAuditorAttributesRequest, decodeAkashAuditV1beta3QueryAuditorAttributesRequest],
    '/akash.audit.v1beta3.GenesisState': [condenseAkashAuditV1beta3GenesisState, expandAkashAuditV1beta3GenesisState, decodeAkashAuditV1beta3GenesisState],
    '/akash.audit.v1beta2.Provider': [condenseAkashAuditV1beta2Provider, expandAkashAuditV1beta2Provider, decodeAkashAuditV1beta2Provider],
    '/akash.audit.v1beta2.AuditedAttributes': [condenseAkashAuditV1beta2AuditedAttributes, expandAkashAuditV1beta2AuditedAttributes, decodeAkashAuditV1beta2AuditedAttributes],
    '/akash.audit.v1beta2.AttributesResponse': [condenseAkashAuditV1beta2AttributesResponse, expandAkashAuditV1beta2AttributesResponse, decodeAkashAuditV1beta2AttributesResponse],
    '/akash.audit.v1beta2.AttributesFilters': [condenseAkashAuditV1beta2AttributesFilters, expandAkashAuditV1beta2AttributesFilters, decodeAkashAuditV1beta2AttributesFilters],
    '/akash.audit.v1beta2.MsgSignProviderAttributes': [condenseAkashAuditV1beta2MsgSignProviderAttributes, expandAkashAuditV1beta2MsgSignProviderAttributes, decodeAkashAuditV1beta2MsgSignProviderAttributes],
    '/akash.audit.v1beta2.MsgSignProviderAttributesResponse': [condenseAkashAuditV1beta2MsgSignProviderAttributesResponse, expandAkashAuditV1beta2MsgSignProviderAttributesResponse, decodeAkashAuditV1beta2MsgSignProviderAttributesResponse],
    '/akash.audit.v1beta2.MsgDeleteProviderAttributes': [condenseAkashAuditV1beta2MsgDeleteProviderAttributes, expandAkashAuditV1beta2MsgDeleteProviderAttributes, decodeAkashAuditV1beta2MsgDeleteProviderAttributes],
    '/akash.audit.v1beta2.MsgDeleteProviderAttributesResponse': [condenseAkashAuditV1beta2MsgDeleteProviderAttributesResponse, expandAkashAuditV1beta2MsgDeleteProviderAttributesResponse, decodeAkashAuditV1beta2MsgDeleteProviderAttributesResponse],
    '/akash.audit.v1beta2.QueryProvidersResponse': [condenseAkashAuditV1beta2QueryProvidersResponse, expandAkashAuditV1beta2QueryProvidersResponse, decodeAkashAuditV1beta2QueryProvidersResponse],
    '/akash.audit.v1beta2.QueryProviderRequest': [condenseAkashAuditV1beta2QueryProviderRequest, expandAkashAuditV1beta2QueryProviderRequest, decodeAkashAuditV1beta2QueryProviderRequest],
    '/akash.audit.v1beta2.QueryAllProvidersAttributesRequest': [condenseAkashAuditV1beta2QueryAllProvidersAttributesRequest, expandAkashAuditV1beta2QueryAllProvidersAttributesRequest, decodeAkashAuditV1beta2QueryAllProvidersAttributesRequest],
    '/akash.audit.v1beta2.QueryProviderAttributesRequest': [condenseAkashAuditV1beta2QueryProviderAttributesRequest, expandAkashAuditV1beta2QueryProviderAttributesRequest, decodeAkashAuditV1beta2QueryProviderAttributesRequest],
    '/akash.audit.v1beta2.QueryProviderAuditorRequest': [condenseAkashAuditV1beta2QueryProviderAuditorRequest, expandAkashAuditV1beta2QueryProviderAuditorRequest, decodeAkashAuditV1beta2QueryProviderAuditorRequest],
    '/akash.audit.v1beta2.QueryAuditorAttributesRequest': [condenseAkashAuditV1beta2QueryAuditorAttributesRequest, expandAkashAuditV1beta2QueryAuditorAttributesRequest, decodeAkashAuditV1beta2QueryAuditorAttributesRequest],
    '/akash.audit.v1beta2.GenesisState': [condenseAkashAuditV1beta2GenesisState, expandAkashAuditV1beta2GenesisState, decodeAkashAuditV1beta2GenesisState],
    '/akash.audit.v1beta1.Provider': [condenseAkashAuditV1beta1Provider, expandAkashAuditV1beta1Provider, decodeAkashAuditV1beta1Provider],
    '/akash.audit.v1beta1.AuditedAttributes': [condenseAkashAuditV1beta1AuditedAttributes, expandAkashAuditV1beta1AuditedAttributes, decodeAkashAuditV1beta1AuditedAttributes],
    '/akash.audit.v1beta1.AttributesResponse': [condenseAkashAuditV1beta1AttributesResponse, expandAkashAuditV1beta1AttributesResponse, decodeAkashAuditV1beta1AttributesResponse],
    '/akash.audit.v1beta1.AttributesFilters': [condenseAkashAuditV1beta1AttributesFilters, expandAkashAuditV1beta1AttributesFilters, decodeAkashAuditV1beta1AttributesFilters],
    '/akash.audit.v1beta1.MsgSignProviderAttributes': [condenseAkashAuditV1beta1MsgSignProviderAttributes, expandAkashAuditV1beta1MsgSignProviderAttributes, decodeAkashAuditV1beta1MsgSignProviderAttributes],
    '/akash.audit.v1beta1.MsgSignProviderAttributesResponse': [condenseAkashAuditV1beta1MsgSignProviderAttributesResponse, expandAkashAuditV1beta1MsgSignProviderAttributesResponse, decodeAkashAuditV1beta1MsgSignProviderAttributesResponse],
    '/akash.audit.v1beta1.MsgDeleteProviderAttributes': [condenseAkashAuditV1beta1MsgDeleteProviderAttributes, expandAkashAuditV1beta1MsgDeleteProviderAttributes, decodeAkashAuditV1beta1MsgDeleteProviderAttributes],
    '/akash.audit.v1beta1.MsgDeleteProviderAttributesResponse': [condenseAkashAuditV1beta1MsgDeleteProviderAttributesResponse, expandAkashAuditV1beta1MsgDeleteProviderAttributesResponse, decodeAkashAuditV1beta1MsgDeleteProviderAttributesResponse],
    '/akash.take.v1beta3.GenesisState': [condenseAkashTakeV1beta3GenesisState, expandAkashTakeV1beta3GenesisState, decodeAkashTakeV1beta3GenesisState],
    '/akash.take.v1beta3.DenomTakeRate': [condenseAkashTakeV1beta3DenomTakeRate, expandAkashTakeV1beta3DenomTakeRate, decodeAkashTakeV1beta3DenomTakeRate],
    '/akash.take.v1beta3.Params': [condenseAkashTakeV1beta3Params, expandAkashTakeV1beta3Params, decodeAkashTakeV1beta3Params],
    '/akash.deployment.v1beta3.MsgCloseGroup': [condenseAkashDeploymentV1beta3MsgCloseGroup, expandAkashDeploymentV1beta3MsgCloseGroup, decodeAkashDeploymentV1beta3MsgCloseGroup],
    '/akash.deployment.v1beta3.MsgCloseGroupResponse': [condenseAkashDeploymentV1beta3MsgCloseGroupResponse, expandAkashDeploymentV1beta3MsgCloseGroupResponse, decodeAkashDeploymentV1beta3MsgCloseGroupResponse],
    '/akash.deployment.v1beta3.MsgPauseGroup': [condenseAkashDeploymentV1beta3MsgPauseGroup, expandAkashDeploymentV1beta3MsgPauseGroup, decodeAkashDeploymentV1beta3MsgPauseGroup],
    '/akash.deployment.v1beta3.MsgPauseGroupResponse': [condenseAkashDeploymentV1beta3MsgPauseGroupResponse, expandAkashDeploymentV1beta3MsgPauseGroupResponse, decodeAkashDeploymentV1beta3MsgPauseGroupResponse],
    '/akash.deployment.v1beta3.MsgStartGroup': [condenseAkashDeploymentV1beta3MsgStartGroup, expandAkashDeploymentV1beta3MsgStartGroup, decodeAkashDeploymentV1beta3MsgStartGroup],
    '/akash.deployment.v1beta3.MsgStartGroupResponse': [condenseAkashDeploymentV1beta3MsgStartGroupResponse, expandAkashDeploymentV1beta3MsgStartGroupResponse, decodeAkashDeploymentV1beta3MsgStartGroupResponse],
    '/akash.deployment.v1beta3.ResourceUnit': [condenseAkashDeploymentV1beta3ResourceUnit, expandAkashDeploymentV1beta3ResourceUnit, decodeAkashDeploymentV1beta3ResourceUnit],
    '/akash.deployment.v1beta3.Group': [condenseAkashDeploymentV1beta3Group, expandAkashDeploymentV1beta3Group, decodeAkashDeploymentV1beta3Group],
    '/akash.deployment.v1beta3.GroupID': [condenseAkashDeploymentV1beta3GroupID, expandAkashDeploymentV1beta3GroupID, decodeAkashDeploymentV1beta3GroupID],
    '/akash.deployment.v1beta3.DeploymentID': [condenseAkashDeploymentV1beta3DeploymentID, expandAkashDeploymentV1beta3DeploymentID, decodeAkashDeploymentV1beta3DeploymentID],
    '/akash.deployment.v1beta3.Deployment': [condenseAkashDeploymentV1beta3Deployment, expandAkashDeploymentV1beta3Deployment, decodeAkashDeploymentV1beta3Deployment],
    '/akash.deployment.v1beta3.DeploymentFilters': [condenseAkashDeploymentV1beta3DeploymentFilters, expandAkashDeploymentV1beta3DeploymentFilters, decodeAkashDeploymentV1beta3DeploymentFilters],
    '/akash.deployment.v1beta3.QueryDeploymentsRequest': [condenseAkashDeploymentV1beta3QueryDeploymentsRequest, expandAkashDeploymentV1beta3QueryDeploymentsRequest, decodeAkashDeploymentV1beta3QueryDeploymentsRequest],
    '/akash.deployment.v1beta3.QueryDeploymentsResponse': [condenseAkashDeploymentV1beta3QueryDeploymentsResponse, expandAkashDeploymentV1beta3QueryDeploymentsResponse, decodeAkashDeploymentV1beta3QueryDeploymentsResponse],
    '/akash.deployment.v1beta3.QueryDeploymentRequest': [condenseAkashDeploymentV1beta3QueryDeploymentRequest, expandAkashDeploymentV1beta3QueryDeploymentRequest, decodeAkashDeploymentV1beta3QueryDeploymentRequest],
    '/akash.deployment.v1beta3.QueryDeploymentResponse': [condenseAkashDeploymentV1beta3QueryDeploymentResponse, expandAkashDeploymentV1beta3QueryDeploymentResponse, decodeAkashDeploymentV1beta3QueryDeploymentResponse],
    '/akash.deployment.v1beta3.QueryGroupRequest': [condenseAkashDeploymentV1beta3QueryGroupRequest, expandAkashDeploymentV1beta3QueryGroupRequest, decodeAkashDeploymentV1beta3QueryGroupRequest],
    '/akash.deployment.v1beta3.QueryGroupResponse': [condenseAkashDeploymentV1beta3QueryGroupResponse, expandAkashDeploymentV1beta3QueryGroupResponse, decodeAkashDeploymentV1beta3QueryGroupResponse],
    '/akash.deployment.v1beta3.MsgCreateDeployment': [condenseAkashDeploymentV1beta3MsgCreateDeployment, expandAkashDeploymentV1beta3MsgCreateDeployment, decodeAkashDeploymentV1beta3MsgCreateDeployment],
    '/akash.deployment.v1beta3.MsgCreateDeploymentResponse': [condenseAkashDeploymentV1beta3MsgCreateDeploymentResponse, expandAkashDeploymentV1beta3MsgCreateDeploymentResponse, decodeAkashDeploymentV1beta3MsgCreateDeploymentResponse],
    '/akash.deployment.v1beta3.MsgDepositDeployment': [condenseAkashDeploymentV1beta3MsgDepositDeployment, expandAkashDeploymentV1beta3MsgDepositDeployment, decodeAkashDeploymentV1beta3MsgDepositDeployment],
    '/akash.deployment.v1beta3.MsgDepositDeploymentResponse': [condenseAkashDeploymentV1beta3MsgDepositDeploymentResponse, expandAkashDeploymentV1beta3MsgDepositDeploymentResponse, decodeAkashDeploymentV1beta3MsgDepositDeploymentResponse],
    '/akash.deployment.v1beta3.MsgUpdateDeployment': [condenseAkashDeploymentV1beta3MsgUpdateDeployment, expandAkashDeploymentV1beta3MsgUpdateDeployment, decodeAkashDeploymentV1beta3MsgUpdateDeployment],
    '/akash.deployment.v1beta3.MsgUpdateDeploymentResponse': [condenseAkashDeploymentV1beta3MsgUpdateDeploymentResponse, expandAkashDeploymentV1beta3MsgUpdateDeploymentResponse, decodeAkashDeploymentV1beta3MsgUpdateDeploymentResponse],
    '/akash.deployment.v1beta3.MsgCloseDeployment': [condenseAkashDeploymentV1beta3MsgCloseDeployment, expandAkashDeploymentV1beta3MsgCloseDeployment, decodeAkashDeploymentV1beta3MsgCloseDeployment],
    '/akash.deployment.v1beta3.MsgCloseDeploymentResponse': [condenseAkashDeploymentV1beta3MsgCloseDeploymentResponse, expandAkashDeploymentV1beta3MsgCloseDeploymentResponse, decodeAkashDeploymentV1beta3MsgCloseDeploymentResponse],
    '/akash.deployment.v1beta3.DepositDeploymentAuthorization': [condenseAkashDeploymentV1beta3DepositDeploymentAuthorization, expandAkashDeploymentV1beta3DepositDeploymentAuthorization, decodeAkashDeploymentV1beta3DepositDeploymentAuthorization],
    '/akash.deployment.v1beta3.GenesisDeployment': [condenseAkashDeploymentV1beta3GenesisDeployment, expandAkashDeploymentV1beta3GenesisDeployment, decodeAkashDeploymentV1beta3GenesisDeployment],
    '/akash.deployment.v1beta3.GenesisState': [condenseAkashDeploymentV1beta3GenesisState, expandAkashDeploymentV1beta3GenesisState, decodeAkashDeploymentV1beta3GenesisState],
    '/akash.deployment.v1beta3.GroupSpec': [condenseAkashDeploymentV1beta3GroupSpec, expandAkashDeploymentV1beta3GroupSpec, decodeAkashDeploymentV1beta3GroupSpec],
    '/akash.deployment.v1beta3.Params': [condenseAkashDeploymentV1beta3Params, expandAkashDeploymentV1beta3Params, decodeAkashDeploymentV1beta3Params],
    '/akash.deployment.v1beta2.MsgCloseGroup': [condenseAkashDeploymentV1beta2MsgCloseGroup, expandAkashDeploymentV1beta2MsgCloseGroup, decodeAkashDeploymentV1beta2MsgCloseGroup],
    '/akash.deployment.v1beta2.MsgCloseGroupResponse': [condenseAkashDeploymentV1beta2MsgCloseGroupResponse, expandAkashDeploymentV1beta2MsgCloseGroupResponse, decodeAkashDeploymentV1beta2MsgCloseGroupResponse],
    '/akash.deployment.v1beta2.MsgPauseGroup': [condenseAkashDeploymentV1beta2MsgPauseGroup, expandAkashDeploymentV1beta2MsgPauseGroup, decodeAkashDeploymentV1beta2MsgPauseGroup],
    '/akash.deployment.v1beta2.MsgPauseGroupResponse': [condenseAkashDeploymentV1beta2MsgPauseGroupResponse, expandAkashDeploymentV1beta2MsgPauseGroupResponse, decodeAkashDeploymentV1beta2MsgPauseGroupResponse],
    '/akash.deployment.v1beta2.MsgStartGroup': [condenseAkashDeploymentV1beta2MsgStartGroup, expandAkashDeploymentV1beta2MsgStartGroup, decodeAkashDeploymentV1beta2MsgStartGroup],
    '/akash.deployment.v1beta2.MsgStartGroupResponse': [condenseAkashDeploymentV1beta2MsgStartGroupResponse, expandAkashDeploymentV1beta2MsgStartGroupResponse, decodeAkashDeploymentV1beta2MsgStartGroupResponse],
    '/akash.deployment.v1beta2.Group': [condenseAkashDeploymentV1beta2Group, expandAkashDeploymentV1beta2Group, decodeAkashDeploymentV1beta2Group],
    '/akash.deployment.v1beta2.GroupID': [condenseAkashDeploymentV1beta2GroupID, expandAkashDeploymentV1beta2GroupID, decodeAkashDeploymentV1beta2GroupID],
    '/akash.deployment.v1beta2.DeploymentID': [condenseAkashDeploymentV1beta2DeploymentID, expandAkashDeploymentV1beta2DeploymentID, decodeAkashDeploymentV1beta2DeploymentID],
    '/akash.deployment.v1beta2.Deployment': [condenseAkashDeploymentV1beta2Deployment, expandAkashDeploymentV1beta2Deployment, decodeAkashDeploymentV1beta2Deployment],
    '/akash.deployment.v1beta2.DeploymentFilters': [condenseAkashDeploymentV1beta2DeploymentFilters, expandAkashDeploymentV1beta2DeploymentFilters, decodeAkashDeploymentV1beta2DeploymentFilters],
    '/akash.deployment.v1beta2.QueryDeploymentsRequest': [condenseAkashDeploymentV1beta2QueryDeploymentsRequest, expandAkashDeploymentV1beta2QueryDeploymentsRequest, decodeAkashDeploymentV1beta2QueryDeploymentsRequest],
    '/akash.deployment.v1beta2.QueryDeploymentsResponse': [condenseAkashDeploymentV1beta2QueryDeploymentsResponse, expandAkashDeploymentV1beta2QueryDeploymentsResponse, decodeAkashDeploymentV1beta2QueryDeploymentsResponse],
    '/akash.deployment.v1beta2.QueryDeploymentRequest': [condenseAkashDeploymentV1beta2QueryDeploymentRequest, expandAkashDeploymentV1beta2QueryDeploymentRequest, decodeAkashDeploymentV1beta2QueryDeploymentRequest],
    '/akash.deployment.v1beta2.QueryDeploymentResponse': [condenseAkashDeploymentV1beta2QueryDeploymentResponse, expandAkashDeploymentV1beta2QueryDeploymentResponse, decodeAkashDeploymentV1beta2QueryDeploymentResponse],
    '/akash.deployment.v1beta2.QueryGroupRequest': [condenseAkashDeploymentV1beta2QueryGroupRequest, expandAkashDeploymentV1beta2QueryGroupRequest, decodeAkashDeploymentV1beta2QueryGroupRequest],
    '/akash.deployment.v1beta2.QueryGroupResponse': [condenseAkashDeploymentV1beta2QueryGroupResponse, expandAkashDeploymentV1beta2QueryGroupResponse, decodeAkashDeploymentV1beta2QueryGroupResponse],
    '/akash.deployment.v1beta2.MsgCreateDeployment': [condenseAkashDeploymentV1beta2MsgCreateDeployment, expandAkashDeploymentV1beta2MsgCreateDeployment, decodeAkashDeploymentV1beta2MsgCreateDeployment],
    '/akash.deployment.v1beta2.MsgCreateDeploymentResponse': [condenseAkashDeploymentV1beta2MsgCreateDeploymentResponse, expandAkashDeploymentV1beta2MsgCreateDeploymentResponse, decodeAkashDeploymentV1beta2MsgCreateDeploymentResponse],
    '/akash.deployment.v1beta2.MsgDepositDeployment': [condenseAkashDeploymentV1beta2MsgDepositDeployment, expandAkashDeploymentV1beta2MsgDepositDeployment, decodeAkashDeploymentV1beta2MsgDepositDeployment],
    '/akash.deployment.v1beta2.MsgDepositDeploymentResponse': [condenseAkashDeploymentV1beta2MsgDepositDeploymentResponse, expandAkashDeploymentV1beta2MsgDepositDeploymentResponse, decodeAkashDeploymentV1beta2MsgDepositDeploymentResponse],
    '/akash.deployment.v1beta2.MsgUpdateDeployment': [condenseAkashDeploymentV1beta2MsgUpdateDeployment, expandAkashDeploymentV1beta2MsgUpdateDeployment, decodeAkashDeploymentV1beta2MsgUpdateDeployment],
    '/akash.deployment.v1beta2.MsgUpdateDeploymentResponse': [condenseAkashDeploymentV1beta2MsgUpdateDeploymentResponse, expandAkashDeploymentV1beta2MsgUpdateDeploymentResponse, decodeAkashDeploymentV1beta2MsgUpdateDeploymentResponse],
    '/akash.deployment.v1beta2.MsgCloseDeployment': [condenseAkashDeploymentV1beta2MsgCloseDeployment, expandAkashDeploymentV1beta2MsgCloseDeployment, decodeAkashDeploymentV1beta2MsgCloseDeployment],
    '/akash.deployment.v1beta2.MsgCloseDeploymentResponse': [condenseAkashDeploymentV1beta2MsgCloseDeploymentResponse, expandAkashDeploymentV1beta2MsgCloseDeploymentResponse, decodeAkashDeploymentV1beta2MsgCloseDeploymentResponse],
    '/akash.deployment.v1beta2.DepositDeploymentAuthorization': [condenseAkashDeploymentV1beta2DepositDeploymentAuthorization, expandAkashDeploymentV1beta2DepositDeploymentAuthorization, decodeAkashDeploymentV1beta2DepositDeploymentAuthorization],
    '/akash.deployment.v1beta2.GenesisDeployment': [condenseAkashDeploymentV1beta2GenesisDeployment, expandAkashDeploymentV1beta2GenesisDeployment, decodeAkashDeploymentV1beta2GenesisDeployment],
    '/akash.deployment.v1beta2.GenesisState': [condenseAkashDeploymentV1beta2GenesisState, expandAkashDeploymentV1beta2GenesisState, decodeAkashDeploymentV1beta2GenesisState],
    '/akash.deployment.v1beta2.GroupSpec': [condenseAkashDeploymentV1beta2GroupSpec, expandAkashDeploymentV1beta2GroupSpec, decodeAkashDeploymentV1beta2GroupSpec],
    '/akash.deployment.v1beta2.Resource': [condenseAkashDeploymentV1beta2Resource, expandAkashDeploymentV1beta2Resource, decodeAkashDeploymentV1beta2Resource],
    '/akash.deployment.v1beta2.Params': [condenseAkashDeploymentV1beta2Params, expandAkashDeploymentV1beta2Params, decodeAkashDeploymentV1beta2Params],
    '/akash.deployment.v1beta1.MsgCloseGroup': [condenseAkashDeploymentV1beta1MsgCloseGroup, expandAkashDeploymentV1beta1MsgCloseGroup, decodeAkashDeploymentV1beta1MsgCloseGroup],
    '/akash.deployment.v1beta1.MsgCloseGroupResponse': [condenseAkashDeploymentV1beta1MsgCloseGroupResponse, expandAkashDeploymentV1beta1MsgCloseGroupResponse, decodeAkashDeploymentV1beta1MsgCloseGroupResponse],
    '/akash.deployment.v1beta1.MsgPauseGroup': [condenseAkashDeploymentV1beta1MsgPauseGroup, expandAkashDeploymentV1beta1MsgPauseGroup, decodeAkashDeploymentV1beta1MsgPauseGroup],
    '/akash.deployment.v1beta1.MsgPauseGroupResponse': [condenseAkashDeploymentV1beta1MsgPauseGroupResponse, expandAkashDeploymentV1beta1MsgPauseGroupResponse, decodeAkashDeploymentV1beta1MsgPauseGroupResponse],
    '/akash.deployment.v1beta1.MsgStartGroup': [condenseAkashDeploymentV1beta1MsgStartGroup, expandAkashDeploymentV1beta1MsgStartGroup, decodeAkashDeploymentV1beta1MsgStartGroup],
    '/akash.deployment.v1beta1.MsgStartGroupResponse': [condenseAkashDeploymentV1beta1MsgStartGroupResponse, expandAkashDeploymentV1beta1MsgStartGroupResponse, decodeAkashDeploymentV1beta1MsgStartGroupResponse],
    '/akash.deployment.v1beta1.GroupID': [condenseAkashDeploymentV1beta1GroupID, expandAkashDeploymentV1beta1GroupID, decodeAkashDeploymentV1beta1GroupID],
    '/akash.deployment.v1beta1.GroupSpec': [condenseAkashDeploymentV1beta1GroupSpec, expandAkashDeploymentV1beta1GroupSpec, decodeAkashDeploymentV1beta1GroupSpec],
    '/akash.deployment.v1beta1.Group': [condenseAkashDeploymentV1beta1Group, expandAkashDeploymentV1beta1Group, decodeAkashDeploymentV1beta1Group],
    '/akash.deployment.v1beta1.Resource': [condenseAkashDeploymentV1beta1Resource, expandAkashDeploymentV1beta1Resource, decodeAkashDeploymentV1beta1Resource],
    '/akash.deployment.v1beta1.MsgCreateDeployment': [condenseAkashDeploymentV1beta1MsgCreateDeployment, expandAkashDeploymentV1beta1MsgCreateDeployment, decodeAkashDeploymentV1beta1MsgCreateDeployment],
    '/akash.deployment.v1beta1.MsgCreateDeploymentResponse': [condenseAkashDeploymentV1beta1MsgCreateDeploymentResponse, expandAkashDeploymentV1beta1MsgCreateDeploymentResponse, decodeAkashDeploymentV1beta1MsgCreateDeploymentResponse],
    '/akash.deployment.v1beta1.MsgDepositDeployment': [condenseAkashDeploymentV1beta1MsgDepositDeployment, expandAkashDeploymentV1beta1MsgDepositDeployment, decodeAkashDeploymentV1beta1MsgDepositDeployment],
    '/akash.deployment.v1beta1.MsgDepositDeploymentResponse': [condenseAkashDeploymentV1beta1MsgDepositDeploymentResponse, expandAkashDeploymentV1beta1MsgDepositDeploymentResponse, decodeAkashDeploymentV1beta1MsgDepositDeploymentResponse],
    '/akash.deployment.v1beta1.MsgUpdateDeployment': [condenseAkashDeploymentV1beta1MsgUpdateDeployment, expandAkashDeploymentV1beta1MsgUpdateDeployment, decodeAkashDeploymentV1beta1MsgUpdateDeployment],
    '/akash.deployment.v1beta1.MsgUpdateDeploymentResponse': [condenseAkashDeploymentV1beta1MsgUpdateDeploymentResponse, expandAkashDeploymentV1beta1MsgUpdateDeploymentResponse, decodeAkashDeploymentV1beta1MsgUpdateDeploymentResponse],
    '/akash.deployment.v1beta1.MsgCloseDeployment': [condenseAkashDeploymentV1beta1MsgCloseDeployment, expandAkashDeploymentV1beta1MsgCloseDeployment, decodeAkashDeploymentV1beta1MsgCloseDeployment],
    '/akash.deployment.v1beta1.MsgCloseDeploymentResponse': [condenseAkashDeploymentV1beta1MsgCloseDeploymentResponse, expandAkashDeploymentV1beta1MsgCloseDeploymentResponse, decodeAkashDeploymentV1beta1MsgCloseDeploymentResponse],
    '/akash.deployment.v1beta1.DeploymentID': [condenseAkashDeploymentV1beta1DeploymentID, expandAkashDeploymentV1beta1DeploymentID, decodeAkashDeploymentV1beta1DeploymentID],
    '/akash.deployment.v1beta1.Deployment': [condenseAkashDeploymentV1beta1Deployment, expandAkashDeploymentV1beta1Deployment, decodeAkashDeploymentV1beta1Deployment],
    '/akash.deployment.v1beta1.DeploymentFilters': [condenseAkashDeploymentV1beta1DeploymentFilters, expandAkashDeploymentV1beta1DeploymentFilters, decodeAkashDeploymentV1beta1DeploymentFilters],
    '/akash.deployment.v1beta1.QueryDeploymentsRequest': [condenseAkashDeploymentV1beta1QueryDeploymentsRequest, expandAkashDeploymentV1beta1QueryDeploymentsRequest, decodeAkashDeploymentV1beta1QueryDeploymentsRequest],
    '/akash.deployment.v1beta1.QueryDeploymentsResponse': [condenseAkashDeploymentV1beta1QueryDeploymentsResponse, expandAkashDeploymentV1beta1QueryDeploymentsResponse, decodeAkashDeploymentV1beta1QueryDeploymentsResponse],
    '/akash.deployment.v1beta1.QueryDeploymentRequest': [condenseAkashDeploymentV1beta1QueryDeploymentRequest, expandAkashDeploymentV1beta1QueryDeploymentRequest, decodeAkashDeploymentV1beta1QueryDeploymentRequest],
    '/akash.deployment.v1beta1.QueryDeploymentResponse': [condenseAkashDeploymentV1beta1QueryDeploymentResponse, expandAkashDeploymentV1beta1QueryDeploymentResponse, decodeAkashDeploymentV1beta1QueryDeploymentResponse],
    '/akash.deployment.v1beta1.QueryGroupRequest': [condenseAkashDeploymentV1beta1QueryGroupRequest, expandAkashDeploymentV1beta1QueryGroupRequest, decodeAkashDeploymentV1beta1QueryGroupRequest],
    '/akash.deployment.v1beta1.QueryGroupResponse': [condenseAkashDeploymentV1beta1QueryGroupResponse, expandAkashDeploymentV1beta1QueryGroupResponse, decodeAkashDeploymentV1beta1QueryGroupResponse],
    '/akash.deployment.v1beta1.DepositDeploymentAuthorization': [condenseAkashDeploymentV1beta1DepositDeploymentAuthorization, expandAkashDeploymentV1beta1DepositDeploymentAuthorization, decodeAkashDeploymentV1beta1DepositDeploymentAuthorization],
    '/akash.deployment.v1beta1.GenesisDeployment': [condenseAkashDeploymentV1beta1GenesisDeployment, expandAkashDeploymentV1beta1GenesisDeployment, decodeAkashDeploymentV1beta1GenesisDeployment],
    '/akash.deployment.v1beta1.GenesisState': [condenseAkashDeploymentV1beta1GenesisState, expandAkashDeploymentV1beta1GenesisState, decodeAkashDeploymentV1beta1GenesisState],
    '/akash.deployment.v1beta1.Params': [condenseAkashDeploymentV1beta1Params, expandAkashDeploymentV1beta1Params, decodeAkashDeploymentV1beta1Params],
    '/akash.staking.v1beta3.GenesisState': [condenseAkashStakingV1beta3GenesisState, expandAkashStakingV1beta3GenesisState, decodeAkashStakingV1beta3GenesisState],
    '/akash.staking.v1beta3.Params': [condenseAkashStakingV1beta3Params, expandAkashStakingV1beta3Params, decodeAkashStakingV1beta3Params],
    '/akash.cert.v1beta3.CertificateResponse': [condenseAkashCertV1beta3CertificateResponse, expandAkashCertV1beta3CertificateResponse, decodeAkashCertV1beta3CertificateResponse],
    '/akash.cert.v1beta3.QueryCertificatesRequest': [condenseAkashCertV1beta3QueryCertificatesRequest, expandAkashCertV1beta3QueryCertificatesRequest, decodeAkashCertV1beta3QueryCertificatesRequest],
    '/akash.cert.v1beta3.QueryCertificatesResponse': [condenseAkashCertV1beta3QueryCertificatesResponse, expandAkashCertV1beta3QueryCertificatesResponse, decodeAkashCertV1beta3QueryCertificatesResponse],
    '/akash.cert.v1beta3.CertificateID': [condenseAkashCertV1beta3CertificateID, expandAkashCertV1beta3CertificateID, decodeAkashCertV1beta3CertificateID],
    '/akash.cert.v1beta3.Certificate': [condenseAkashCertV1beta3Certificate, expandAkashCertV1beta3Certificate, decodeAkashCertV1beta3Certificate],
    '/akash.cert.v1beta3.CertificateFilter': [condenseAkashCertV1beta3CertificateFilter, expandAkashCertV1beta3CertificateFilter, decodeAkashCertV1beta3CertificateFilter],
    '/akash.cert.v1beta3.MsgCreateCertificate': [condenseAkashCertV1beta3MsgCreateCertificate, expandAkashCertV1beta3MsgCreateCertificate, decodeAkashCertV1beta3MsgCreateCertificate],
    '/akash.cert.v1beta3.MsgCreateCertificateResponse': [condenseAkashCertV1beta3MsgCreateCertificateResponse, expandAkashCertV1beta3MsgCreateCertificateResponse, decodeAkashCertV1beta3MsgCreateCertificateResponse],
    '/akash.cert.v1beta3.MsgRevokeCertificate': [condenseAkashCertV1beta3MsgRevokeCertificate, expandAkashCertV1beta3MsgRevokeCertificate, decodeAkashCertV1beta3MsgRevokeCertificate],
    '/akash.cert.v1beta3.MsgRevokeCertificateResponse': [condenseAkashCertV1beta3MsgRevokeCertificateResponse, expandAkashCertV1beta3MsgRevokeCertificateResponse, decodeAkashCertV1beta3MsgRevokeCertificateResponse],
    '/akash.cert.v1beta3.GenesisCertificate': [condenseAkashCertV1beta3GenesisCertificate, expandAkashCertV1beta3GenesisCertificate, decodeAkashCertV1beta3GenesisCertificate],
    '/akash.cert.v1beta3.GenesisState': [condenseAkashCertV1beta3GenesisState, expandAkashCertV1beta3GenesisState, decodeAkashCertV1beta3GenesisState],
    '/akash.cert.v1beta2.CertificateResponse': [condenseAkashCertV1beta2CertificateResponse, expandAkashCertV1beta2CertificateResponse, decodeAkashCertV1beta2CertificateResponse],
    '/akash.cert.v1beta2.QueryCertificatesRequest': [condenseAkashCertV1beta2QueryCertificatesRequest, expandAkashCertV1beta2QueryCertificatesRequest, decodeAkashCertV1beta2QueryCertificatesRequest],
    '/akash.cert.v1beta2.QueryCertificatesResponse': [condenseAkashCertV1beta2QueryCertificatesResponse, expandAkashCertV1beta2QueryCertificatesResponse, decodeAkashCertV1beta2QueryCertificatesResponse],
    '/akash.cert.v1beta2.CertificateID': [condenseAkashCertV1beta2CertificateID, expandAkashCertV1beta2CertificateID, decodeAkashCertV1beta2CertificateID],
    '/akash.cert.v1beta2.Certificate': [condenseAkashCertV1beta2Certificate, expandAkashCertV1beta2Certificate, decodeAkashCertV1beta2Certificate],
    '/akash.cert.v1beta2.CertificateFilter': [condenseAkashCertV1beta2CertificateFilter, expandAkashCertV1beta2CertificateFilter, decodeAkashCertV1beta2CertificateFilter],
    '/akash.cert.v1beta2.MsgCreateCertificate': [condenseAkashCertV1beta2MsgCreateCertificate, expandAkashCertV1beta2MsgCreateCertificate, decodeAkashCertV1beta2MsgCreateCertificate],
    '/akash.cert.v1beta2.MsgCreateCertificateResponse': [condenseAkashCertV1beta2MsgCreateCertificateResponse, expandAkashCertV1beta2MsgCreateCertificateResponse, decodeAkashCertV1beta2MsgCreateCertificateResponse],
    '/akash.cert.v1beta2.MsgRevokeCertificate': [condenseAkashCertV1beta2MsgRevokeCertificate, expandAkashCertV1beta2MsgRevokeCertificate, decodeAkashCertV1beta2MsgRevokeCertificate],
    '/akash.cert.v1beta2.MsgRevokeCertificateResponse': [condenseAkashCertV1beta2MsgRevokeCertificateResponse, expandAkashCertV1beta2MsgRevokeCertificateResponse, decodeAkashCertV1beta2MsgRevokeCertificateResponse],
    '/akash.cert.v1beta2.GenesisCertificate': [condenseAkashCertV1beta2GenesisCertificate, expandAkashCertV1beta2GenesisCertificate, decodeAkashCertV1beta2GenesisCertificate],
    '/akash.cert.v1beta2.GenesisState': [condenseAkashCertV1beta2GenesisState, expandAkashCertV1beta2GenesisState, decodeAkashCertV1beta2GenesisState],
    '/akash.escrow.v1beta3.AccountID': [condenseAkashEscrowV1beta3AccountID, expandAkashEscrowV1beta3AccountID, decodeAkashEscrowV1beta3AccountID],
    '/akash.escrow.v1beta3.Account': [condenseAkashEscrowV1beta3Account, expandAkashEscrowV1beta3Account, decodeAkashEscrowV1beta3Account],
    '/akash.escrow.v1beta3.FractionalPayment': [condenseAkashEscrowV1beta3FractionalPayment, expandAkashEscrowV1beta3FractionalPayment, decodeAkashEscrowV1beta3FractionalPayment],
    '/akash.escrow.v1beta3.QueryAccountsRequest': [condenseAkashEscrowV1beta3QueryAccountsRequest, expandAkashEscrowV1beta3QueryAccountsRequest, decodeAkashEscrowV1beta3QueryAccountsRequest],
    '/akash.escrow.v1beta3.QueryAccountsResponse': [condenseAkashEscrowV1beta3QueryAccountsResponse, expandAkashEscrowV1beta3QueryAccountsResponse, decodeAkashEscrowV1beta3QueryAccountsResponse],
    '/akash.escrow.v1beta3.QueryPaymentsRequest': [condenseAkashEscrowV1beta3QueryPaymentsRequest, expandAkashEscrowV1beta3QueryPaymentsRequest, decodeAkashEscrowV1beta3QueryPaymentsRequest],
    '/akash.escrow.v1beta3.QueryPaymentsResponse': [condenseAkashEscrowV1beta3QueryPaymentsResponse, expandAkashEscrowV1beta3QueryPaymentsResponse, decodeAkashEscrowV1beta3QueryPaymentsResponse],
    '/akash.escrow.v1beta3.GenesisState': [condenseAkashEscrowV1beta3GenesisState, expandAkashEscrowV1beta3GenesisState, decodeAkashEscrowV1beta3GenesisState],
    '/akash.escrow.v1beta2.AccountID': [condenseAkashEscrowV1beta2AccountID, expandAkashEscrowV1beta2AccountID, decodeAkashEscrowV1beta2AccountID],
    '/akash.escrow.v1beta2.Account': [condenseAkashEscrowV1beta2Account, expandAkashEscrowV1beta2Account, decodeAkashEscrowV1beta2Account],
    '/akash.escrow.v1beta2.FractionalPayment': [condenseAkashEscrowV1beta2FractionalPayment, expandAkashEscrowV1beta2FractionalPayment, decodeAkashEscrowV1beta2FractionalPayment],
    '/akash.escrow.v1beta2.QueryAccountsRequest': [condenseAkashEscrowV1beta2QueryAccountsRequest, expandAkashEscrowV1beta2QueryAccountsRequest, decodeAkashEscrowV1beta2QueryAccountsRequest],
    '/akash.escrow.v1beta2.QueryAccountsResponse': [condenseAkashEscrowV1beta2QueryAccountsResponse, expandAkashEscrowV1beta2QueryAccountsResponse, decodeAkashEscrowV1beta2QueryAccountsResponse],
    '/akash.escrow.v1beta2.QueryPaymentsRequest': [condenseAkashEscrowV1beta2QueryPaymentsRequest, expandAkashEscrowV1beta2QueryPaymentsRequest, decodeAkashEscrowV1beta2QueryPaymentsRequest],
    '/akash.escrow.v1beta2.QueryPaymentsResponse': [condenseAkashEscrowV1beta2QueryPaymentsResponse, expandAkashEscrowV1beta2QueryPaymentsResponse, decodeAkashEscrowV1beta2QueryPaymentsResponse],
    '/akash.escrow.v1beta2.GenesisState': [condenseAkashEscrowV1beta2GenesisState, expandAkashEscrowV1beta2GenesisState, decodeAkashEscrowV1beta2GenesisState],
    '/akash.escrow.v1beta1.AccountID': [condenseAkashEscrowV1beta1AccountID, expandAkashEscrowV1beta1AccountID, decodeAkashEscrowV1beta1AccountID],
    '/akash.escrow.v1beta1.Account': [condenseAkashEscrowV1beta1Account, expandAkashEscrowV1beta1Account, decodeAkashEscrowV1beta1Account],
    '/akash.escrow.v1beta1.Payment': [condenseAkashEscrowV1beta1Payment, expandAkashEscrowV1beta1Payment, decodeAkashEscrowV1beta1Payment],
    '/akash.escrow.v1beta1.QueryAccountsRequest': [condenseAkashEscrowV1beta1QueryAccountsRequest, expandAkashEscrowV1beta1QueryAccountsRequest, decodeAkashEscrowV1beta1QueryAccountsRequest],
    '/akash.escrow.v1beta1.QueryAccountsResponse': [condenseAkashEscrowV1beta1QueryAccountsResponse, expandAkashEscrowV1beta1QueryAccountsResponse, decodeAkashEscrowV1beta1QueryAccountsResponse],
    '/akash.escrow.v1beta1.QueryPaymentsRequest': [condenseAkashEscrowV1beta1QueryPaymentsRequest, expandAkashEscrowV1beta1QueryPaymentsRequest, decodeAkashEscrowV1beta1QueryPaymentsRequest],
    '/akash.escrow.v1beta1.QueryPaymentsResponse': [condenseAkashEscrowV1beta1QueryPaymentsResponse, expandAkashEscrowV1beta1QueryPaymentsResponse, decodeAkashEscrowV1beta1QueryPaymentsResponse],
    '/akash.escrow.v1beta1.GenesisState': [condenseAkashEscrowV1beta1GenesisState, expandAkashEscrowV1beta1GenesisState, decodeAkashEscrowV1beta1GenesisState],
    '/akash.market.v1beta3.MsgCreateBid': [condenseAkashMarketV1beta3MsgCreateBid, expandAkashMarketV1beta3MsgCreateBid, decodeAkashMarketV1beta3MsgCreateBid],
    '/akash.market.v1beta3.MsgCreateBidResponse': [condenseAkashMarketV1beta3MsgCreateBidResponse, expandAkashMarketV1beta3MsgCreateBidResponse, decodeAkashMarketV1beta3MsgCreateBidResponse],
    '/akash.market.v1beta3.MsgCloseBid': [condenseAkashMarketV1beta3MsgCloseBid, expandAkashMarketV1beta3MsgCloseBid, decodeAkashMarketV1beta3MsgCloseBid],
    '/akash.market.v1beta3.MsgCloseBidResponse': [condenseAkashMarketV1beta3MsgCloseBidResponse, expandAkashMarketV1beta3MsgCloseBidResponse, decodeAkashMarketV1beta3MsgCloseBidResponse],
    '/akash.market.v1beta3.BidID': [condenseAkashMarketV1beta3BidID, expandAkashMarketV1beta3BidID, decodeAkashMarketV1beta3BidID],
    '/akash.market.v1beta3.Bid': [condenseAkashMarketV1beta3Bid, expandAkashMarketV1beta3Bid, decodeAkashMarketV1beta3Bid],
    '/akash.market.v1beta3.BidFilters': [condenseAkashMarketV1beta3BidFilters, expandAkashMarketV1beta3BidFilters, decodeAkashMarketV1beta3BidFilters],
    '/akash.market.v1beta3.QueryOrdersRequest': [condenseAkashMarketV1beta3QueryOrdersRequest, expandAkashMarketV1beta3QueryOrdersRequest, decodeAkashMarketV1beta3QueryOrdersRequest],
    '/akash.market.v1beta3.QueryOrdersResponse': [condenseAkashMarketV1beta3QueryOrdersResponse, expandAkashMarketV1beta3QueryOrdersResponse, decodeAkashMarketV1beta3QueryOrdersResponse],
    '/akash.market.v1beta3.QueryOrderRequest': [condenseAkashMarketV1beta3QueryOrderRequest, expandAkashMarketV1beta3QueryOrderRequest, decodeAkashMarketV1beta3QueryOrderRequest],
    '/akash.market.v1beta3.QueryOrderResponse': [condenseAkashMarketV1beta3QueryOrderResponse, expandAkashMarketV1beta3QueryOrderResponse, decodeAkashMarketV1beta3QueryOrderResponse],
    '/akash.market.v1beta3.QueryBidsRequest': [condenseAkashMarketV1beta3QueryBidsRequest, expandAkashMarketV1beta3QueryBidsRequest, decodeAkashMarketV1beta3QueryBidsRequest],
    '/akash.market.v1beta3.QueryBidsResponse': [condenseAkashMarketV1beta3QueryBidsResponse, expandAkashMarketV1beta3QueryBidsResponse, decodeAkashMarketV1beta3QueryBidsResponse],
    '/akash.market.v1beta3.QueryBidRequest': [condenseAkashMarketV1beta3QueryBidRequest, expandAkashMarketV1beta3QueryBidRequest, decodeAkashMarketV1beta3QueryBidRequest],
    '/akash.market.v1beta3.QueryBidResponse': [condenseAkashMarketV1beta3QueryBidResponse, expandAkashMarketV1beta3QueryBidResponse, decodeAkashMarketV1beta3QueryBidResponse],
    '/akash.market.v1beta3.QueryLeasesRequest': [condenseAkashMarketV1beta3QueryLeasesRequest, expandAkashMarketV1beta3QueryLeasesRequest, decodeAkashMarketV1beta3QueryLeasesRequest],
    '/akash.market.v1beta3.QueryLeasesResponse': [condenseAkashMarketV1beta3QueryLeasesResponse, expandAkashMarketV1beta3QueryLeasesResponse, decodeAkashMarketV1beta3QueryLeasesResponse],
    '/akash.market.v1beta3.QueryLeaseRequest': [condenseAkashMarketV1beta3QueryLeaseRequest, expandAkashMarketV1beta3QueryLeaseRequest, decodeAkashMarketV1beta3QueryLeaseRequest],
    '/akash.market.v1beta3.QueryLeaseResponse': [condenseAkashMarketV1beta3QueryLeaseResponse, expandAkashMarketV1beta3QueryLeaseResponse, decodeAkashMarketV1beta3QueryLeaseResponse],
    '/akash.market.v1beta3.MsgWithdrawLease': [condenseAkashMarketV1beta3MsgWithdrawLease, expandAkashMarketV1beta3MsgWithdrawLease, decodeAkashMarketV1beta3MsgWithdrawLease],
    '/akash.market.v1beta3.MsgCreateLease': [condenseAkashMarketV1beta3MsgCreateLease, expandAkashMarketV1beta3MsgCreateLease, decodeAkashMarketV1beta3MsgCreateLease],
    '/akash.market.v1beta3.MsgCloseLease': [condenseAkashMarketV1beta3MsgCloseLease, expandAkashMarketV1beta3MsgCloseLease, decodeAkashMarketV1beta3MsgCloseLease],
    '/akash.market.v1beta3.LeaseID': [condenseAkashMarketV1beta3LeaseID, expandAkashMarketV1beta3LeaseID, decodeAkashMarketV1beta3LeaseID],
    '/akash.market.v1beta3.Lease': [condenseAkashMarketV1beta3Lease, expandAkashMarketV1beta3Lease, decodeAkashMarketV1beta3Lease],
    '/akash.market.v1beta3.LeaseFilters': [condenseAkashMarketV1beta3LeaseFilters, expandAkashMarketV1beta3LeaseFilters, decodeAkashMarketV1beta3LeaseFilters],
    '/akash.market.v1beta3.MsgCreateLeaseResponse': [condenseAkashMarketV1beta3MsgCreateLeaseResponse, expandAkashMarketV1beta3MsgCreateLeaseResponse, decodeAkashMarketV1beta3MsgCreateLeaseResponse],
    '/akash.market.v1beta3.MsgWithdrawLeaseResponse': [condenseAkashMarketV1beta3MsgWithdrawLeaseResponse, expandAkashMarketV1beta3MsgWithdrawLeaseResponse, decodeAkashMarketV1beta3MsgWithdrawLeaseResponse],
    '/akash.market.v1beta3.MsgCloseLeaseResponse': [condenseAkashMarketV1beta3MsgCloseLeaseResponse, expandAkashMarketV1beta3MsgCloseLeaseResponse, decodeAkashMarketV1beta3MsgCloseLeaseResponse],
    '/akash.market.v1beta3.GenesisState': [condenseAkashMarketV1beta3GenesisState, expandAkashMarketV1beta3GenesisState, decodeAkashMarketV1beta3GenesisState],
    '/akash.market.v1beta3.OrderID': [condenseAkashMarketV1beta3OrderID, expandAkashMarketV1beta3OrderID, decodeAkashMarketV1beta3OrderID],
    '/akash.market.v1beta3.Order': [condenseAkashMarketV1beta3Order, expandAkashMarketV1beta3Order, decodeAkashMarketV1beta3Order],
    '/akash.market.v1beta3.OrderFilters': [condenseAkashMarketV1beta3OrderFilters, expandAkashMarketV1beta3OrderFilters, decodeAkashMarketV1beta3OrderFilters],
    '/akash.market.v1beta3.Params': [condenseAkashMarketV1beta3Params, expandAkashMarketV1beta3Params, decodeAkashMarketV1beta3Params],
    '/akash.market.v1beta2.MsgCreateBid': [condenseAkashMarketV1beta2MsgCreateBid, expandAkashMarketV1beta2MsgCreateBid, decodeAkashMarketV1beta2MsgCreateBid],
    '/akash.market.v1beta2.MsgCreateBidResponse': [condenseAkashMarketV1beta2MsgCreateBidResponse, expandAkashMarketV1beta2MsgCreateBidResponse, decodeAkashMarketV1beta2MsgCreateBidResponse],
    '/akash.market.v1beta2.MsgCloseBid': [condenseAkashMarketV1beta2MsgCloseBid, expandAkashMarketV1beta2MsgCloseBid, decodeAkashMarketV1beta2MsgCloseBid],
    '/akash.market.v1beta2.MsgCloseBidResponse': [condenseAkashMarketV1beta2MsgCloseBidResponse, expandAkashMarketV1beta2MsgCloseBidResponse, decodeAkashMarketV1beta2MsgCloseBidResponse],
    '/akash.market.v1beta2.BidID': [condenseAkashMarketV1beta2BidID, expandAkashMarketV1beta2BidID, decodeAkashMarketV1beta2BidID],
    '/akash.market.v1beta2.Bid': [condenseAkashMarketV1beta2Bid, expandAkashMarketV1beta2Bid, decodeAkashMarketV1beta2Bid],
    '/akash.market.v1beta2.BidFilters': [condenseAkashMarketV1beta2BidFilters, expandAkashMarketV1beta2BidFilters, decodeAkashMarketV1beta2BidFilters],
    '/akash.market.v1beta2.QueryOrdersRequest': [condenseAkashMarketV1beta2QueryOrdersRequest, expandAkashMarketV1beta2QueryOrdersRequest, decodeAkashMarketV1beta2QueryOrdersRequest],
    '/akash.market.v1beta2.QueryOrdersResponse': [condenseAkashMarketV1beta2QueryOrdersResponse, expandAkashMarketV1beta2QueryOrdersResponse, decodeAkashMarketV1beta2QueryOrdersResponse],
    '/akash.market.v1beta2.QueryOrderRequest': [condenseAkashMarketV1beta2QueryOrderRequest, expandAkashMarketV1beta2QueryOrderRequest, decodeAkashMarketV1beta2QueryOrderRequest],
    '/akash.market.v1beta2.QueryOrderResponse': [condenseAkashMarketV1beta2QueryOrderResponse, expandAkashMarketV1beta2QueryOrderResponse, decodeAkashMarketV1beta2QueryOrderResponse],
    '/akash.market.v1beta2.QueryBidsRequest': [condenseAkashMarketV1beta2QueryBidsRequest, expandAkashMarketV1beta2QueryBidsRequest, decodeAkashMarketV1beta2QueryBidsRequest],
    '/akash.market.v1beta2.QueryBidsResponse': [condenseAkashMarketV1beta2QueryBidsResponse, expandAkashMarketV1beta2QueryBidsResponse, decodeAkashMarketV1beta2QueryBidsResponse],
    '/akash.market.v1beta2.QueryBidRequest': [condenseAkashMarketV1beta2QueryBidRequest, expandAkashMarketV1beta2QueryBidRequest, decodeAkashMarketV1beta2QueryBidRequest],
    '/akash.market.v1beta2.QueryBidResponse': [condenseAkashMarketV1beta2QueryBidResponse, expandAkashMarketV1beta2QueryBidResponse, decodeAkashMarketV1beta2QueryBidResponse],
    '/akash.market.v1beta2.QueryLeasesRequest': [condenseAkashMarketV1beta2QueryLeasesRequest, expandAkashMarketV1beta2QueryLeasesRequest, decodeAkashMarketV1beta2QueryLeasesRequest],
    '/akash.market.v1beta2.QueryLeasesResponse': [condenseAkashMarketV1beta2QueryLeasesResponse, expandAkashMarketV1beta2QueryLeasesResponse, decodeAkashMarketV1beta2QueryLeasesResponse],
    '/akash.market.v1beta2.QueryLeaseRequest': [condenseAkashMarketV1beta2QueryLeaseRequest, expandAkashMarketV1beta2QueryLeaseRequest, decodeAkashMarketV1beta2QueryLeaseRequest],
    '/akash.market.v1beta2.QueryLeaseResponse': [condenseAkashMarketV1beta2QueryLeaseResponse, expandAkashMarketV1beta2QueryLeaseResponse, decodeAkashMarketV1beta2QueryLeaseResponse],
    '/akash.market.v1beta2.MsgWithdrawLease': [condenseAkashMarketV1beta2MsgWithdrawLease, expandAkashMarketV1beta2MsgWithdrawLease, decodeAkashMarketV1beta2MsgWithdrawLease],
    '/akash.market.v1beta2.MsgCreateLease': [condenseAkashMarketV1beta2MsgCreateLease, expandAkashMarketV1beta2MsgCreateLease, decodeAkashMarketV1beta2MsgCreateLease],
    '/akash.market.v1beta2.MsgCloseLease': [condenseAkashMarketV1beta2MsgCloseLease, expandAkashMarketV1beta2MsgCloseLease, decodeAkashMarketV1beta2MsgCloseLease],
    '/akash.market.v1beta2.LeaseID': [condenseAkashMarketV1beta2LeaseID, expandAkashMarketV1beta2LeaseID, decodeAkashMarketV1beta2LeaseID],
    '/akash.market.v1beta2.Lease': [condenseAkashMarketV1beta2Lease, expandAkashMarketV1beta2Lease, decodeAkashMarketV1beta2Lease],
    '/akash.market.v1beta2.LeaseFilters': [condenseAkashMarketV1beta2LeaseFilters, expandAkashMarketV1beta2LeaseFilters, decodeAkashMarketV1beta2LeaseFilters],
    '/akash.market.v1beta2.MsgCreateLeaseResponse': [condenseAkashMarketV1beta2MsgCreateLeaseResponse, expandAkashMarketV1beta2MsgCreateLeaseResponse, decodeAkashMarketV1beta2MsgCreateLeaseResponse],
    '/akash.market.v1beta2.MsgWithdrawLeaseResponse': [condenseAkashMarketV1beta2MsgWithdrawLeaseResponse, expandAkashMarketV1beta2MsgWithdrawLeaseResponse, decodeAkashMarketV1beta2MsgWithdrawLeaseResponse],
    '/akash.market.v1beta2.MsgCloseLeaseResponse': [condenseAkashMarketV1beta2MsgCloseLeaseResponse, expandAkashMarketV1beta2MsgCloseLeaseResponse, decodeAkashMarketV1beta2MsgCloseLeaseResponse],
    '/akash.market.v1beta2.GenesisState': [condenseAkashMarketV1beta2GenesisState, expandAkashMarketV1beta2GenesisState, decodeAkashMarketV1beta2GenesisState],
    '/akash.market.v1beta2.OrderID': [condenseAkashMarketV1beta2OrderID, expandAkashMarketV1beta2OrderID, decodeAkashMarketV1beta2OrderID],
    '/akash.market.v1beta2.Order': [condenseAkashMarketV1beta2Order, expandAkashMarketV1beta2Order, decodeAkashMarketV1beta2Order],
    '/akash.market.v1beta2.OrderFilters': [condenseAkashMarketV1beta2OrderFilters, expandAkashMarketV1beta2OrderFilters, decodeAkashMarketV1beta2OrderFilters],
    '/akash.market.v1beta2.Params': [condenseAkashMarketV1beta2Params, expandAkashMarketV1beta2Params, decodeAkashMarketV1beta2Params],
    '/akash.inflation.v1beta3.GenesisState': [condenseAkashInflationV1beta3GenesisState, expandAkashInflationV1beta3GenesisState, decodeAkashInflationV1beta3GenesisState],
    '/akash.inflation.v1beta3.Params': [condenseAkashInflationV1beta3Params, expandAkashInflationV1beta3Params, decodeAkashInflationV1beta3Params],
    '/akash.inflation.v1beta2.GenesisState': [condenseAkashInflationV1beta2GenesisState, expandAkashInflationV1beta2GenesisState, decodeAkashInflationV1beta2GenesisState],
    '/akash.inflation.v1beta2.Params': [condenseAkashInflationV1beta2Params, expandAkashInflationV1beta2Params, decodeAkashInflationV1beta2Params],
    '/akash.base.v1beta3.Memory': [condenseAkashBaseV1beta3Memory, expandAkashBaseV1beta3Memory, decodeAkashBaseV1beta3Memory],
    '/akash.base.v1beta3.CPU': [condenseAkashBaseV1beta3CPU, expandAkashBaseV1beta3CPU, decodeAkashBaseV1beta3CPU],
    '/akash.base.v1beta3.Resources': [condenseAkashBaseV1beta3Resources, expandAkashBaseV1beta3Resources, decodeAkashBaseV1beta3Resources],
    '/akash.base.v1beta3.Attribute': [condenseAkashBaseV1beta3Attribute, expandAkashBaseV1beta3Attribute, decodeAkashBaseV1beta3Attribute],
    '/akash.base.v1beta3.SignedBy': [condenseAkashBaseV1beta3SignedBy, expandAkashBaseV1beta3SignedBy, decodeAkashBaseV1beta3SignedBy],
    '/akash.base.v1beta3.PlacementRequirements': [condenseAkashBaseV1beta3PlacementRequirements, expandAkashBaseV1beta3PlacementRequirements, decodeAkashBaseV1beta3PlacementRequirements],
    '/akash.base.v1beta3.Endpoint': [condenseAkashBaseV1beta3Endpoint, expandAkashBaseV1beta3Endpoint, decodeAkashBaseV1beta3Endpoint],
    '/akash.base.v1beta3.GPU': [condenseAkashBaseV1beta3GPU, expandAkashBaseV1beta3GPU, decodeAkashBaseV1beta3GPU],
    '/akash.base.v1beta3.Storage': [condenseAkashBaseV1beta3Storage, expandAkashBaseV1beta3Storage, decodeAkashBaseV1beta3Storage],
    '/akash.base.v1beta3.ResourceValue': [condenseAkashBaseV1beta3ResourceValue, expandAkashBaseV1beta3ResourceValue, decodeAkashBaseV1beta3ResourceValue],
    '/akash.base.v1beta2.ResourceUnits': [condenseAkashBaseV1beta2ResourceUnits, expandAkashBaseV1beta2ResourceUnits, decodeAkashBaseV1beta2ResourceUnits],
    '/akash.base.v1beta2.Attribute': [condenseAkashBaseV1beta2Attribute, expandAkashBaseV1beta2Attribute, decodeAkashBaseV1beta2Attribute],
    '/akash.base.v1beta2.SignedBy': [condenseAkashBaseV1beta2SignedBy, expandAkashBaseV1beta2SignedBy, decodeAkashBaseV1beta2SignedBy],
    '/akash.base.v1beta2.PlacementRequirements': [condenseAkashBaseV1beta2PlacementRequirements, expandAkashBaseV1beta2PlacementRequirements, decodeAkashBaseV1beta2PlacementRequirements],
    '/akash.base.v1beta2.Endpoint': [condenseAkashBaseV1beta2Endpoint, expandAkashBaseV1beta2Endpoint, decodeAkashBaseV1beta2Endpoint],
    '/akash.base.v1beta2.CPU': [condenseAkashBaseV1beta2CPU, expandAkashBaseV1beta2CPU, decodeAkashBaseV1beta2CPU],
    '/akash.base.v1beta2.Memory': [condenseAkashBaseV1beta2Memory, expandAkashBaseV1beta2Memory, decodeAkashBaseV1beta2Memory],
    '/akash.base.v1beta2.Storage': [condenseAkashBaseV1beta2Storage, expandAkashBaseV1beta2Storage, decodeAkashBaseV1beta2Storage],
    '/akash.base.v1beta2.ResourceValue': [condenseAkashBaseV1beta2ResourceValue, expandAkashBaseV1beta2ResourceValue, decodeAkashBaseV1beta2ResourceValue],
    '/akash.base.v1beta1.Attribute': [condenseAkashBaseV1beta1Attribute, expandAkashBaseV1beta1Attribute, decodeAkashBaseV1beta1Attribute],
    '/akash.base.v1beta1.SignedBy': [condenseAkashBaseV1beta1SignedBy, expandAkashBaseV1beta1SignedBy, decodeAkashBaseV1beta1SignedBy],
    '/akash.base.v1beta1.PlacementRequirements': [condenseAkashBaseV1beta1PlacementRequirements, expandAkashBaseV1beta1PlacementRequirements, decodeAkashBaseV1beta1PlacementRequirements],
    '/akash.base.v1beta1.Endpoint': [condenseAkashBaseV1beta1Endpoint, expandAkashBaseV1beta1Endpoint, decodeAkashBaseV1beta1Endpoint],
    '/akash.base.v1beta1.CPU': [condenseAkashBaseV1beta1CPU, expandAkashBaseV1beta1CPU, decodeAkashBaseV1beta1CPU],
    '/akash.base.v1beta1.Memory': [condenseAkashBaseV1beta1Memory, expandAkashBaseV1beta1Memory, decodeAkashBaseV1beta1Memory],
    '/akash.base.v1beta1.Storage': [condenseAkashBaseV1beta1Storage, expandAkashBaseV1beta1Storage, decodeAkashBaseV1beta1Storage],
    '/akash.base.v1beta1.ResourceUnits': [condenseAkashBaseV1beta1ResourceUnits, expandAkashBaseV1beta1ResourceUnits, decodeAkashBaseV1beta1ResourceUnits],
    '/akash.base.v1beta1.ResourceValue': [condenseAkashBaseV1beta1ResourceValue, expandAkashBaseV1beta1ResourceValue, decodeAkashBaseV1beta1ResourceValue],
    '/akash.gov.v1beta3.GenesisState': [condenseAkashGovV1beta3GenesisState, expandAkashGovV1beta3GenesisState, decodeAkashGovV1beta3GenesisState],
    '/akash.gov.v1beta3.DepositParams': [condenseAkashGovV1beta3DepositParams, expandAkashGovV1beta3DepositParams, decodeAkashGovV1beta3DepositParams],
    '/axelar.vote.exported.v1beta1.PollMetadata': [condenseAxelarVoteExportedV1beta1PollMetadata, expandAxelarVoteExportedV1beta1PollMetadata, decodeAxelarVoteExportedV1beta1PollMetadata],
    '/axelar.vote.exported.v1beta1.PollKey': [condenseAxelarVoteExportedV1beta1PollKey, expandAxelarVoteExportedV1beta1PollKey, decodeAxelarVoteExportedV1beta1PollKey],
    '/axelar.vote.exported.v1beta1.PollParticipants': [condenseAxelarVoteExportedV1beta1PollParticipants, expandAxelarVoteExportedV1beta1PollParticipants, decodeAxelarVoteExportedV1beta1PollParticipants],
    '/axelar.vote.v1beta1.VoteRequest': [condenseAxelarVoteV1beta1VoteRequest, expandAxelarVoteV1beta1VoteRequest, decodeAxelarVoteV1beta1VoteRequest],
    '/axelar.vote.v1beta1.VoteResponse': [condenseAxelarVoteV1beta1VoteResponse, expandAxelarVoteV1beta1VoteResponse, decodeAxelarVoteV1beta1VoteResponse],
    '/axelar.vote.v1beta1.Voted': [condenseAxelarVoteV1beta1Voted, expandAxelarVoteV1beta1Voted, decodeAxelarVoteV1beta1Voted],
    '/axelar.vote.v1beta1.TalliedVote': [condenseAxelarVoteV1beta1TalliedVote, expandAxelarVoteV1beta1TalliedVote, decodeAxelarVoteV1beta1TalliedVote],
    '/axelar.vote.v1beta1.ParamsRequest': [condenseAxelarVoteV1beta1ParamsRequest, expandAxelarVoteV1beta1ParamsRequest, decodeAxelarVoteV1beta1ParamsRequest],
    '/axelar.vote.v1beta1.ParamsResponse': [condenseAxelarVoteV1beta1ParamsResponse, expandAxelarVoteV1beta1ParamsResponse, decodeAxelarVoteV1beta1ParamsResponse],
    '/axelar.vote.v1beta1.GenesisState': [condenseAxelarVoteV1beta1GenesisState, expandAxelarVoteV1beta1GenesisState, decodeAxelarVoteV1beta1GenesisState],
    '/axelar.vote.v1beta1.Params': [condenseAxelarVoteV1beta1Params, expandAxelarVoteV1beta1Params, decodeAxelarVoteV1beta1Params],
    '/axelar.snapshot.exported.v1beta1.Participant': [condenseAxelarSnapshotExportedV1beta1Participant, expandAxelarSnapshotExportedV1beta1Participant, decodeAxelarSnapshotExportedV1beta1Participant],
    '/axelar.snapshot.exported.v1beta1.Snapshot': [condenseAxelarSnapshotExportedV1beta1Snapshot, expandAxelarSnapshotExportedV1beta1Snapshot, decodeAxelarSnapshotExportedV1beta1Snapshot],
    '/axelar.snapshot.v1beta1.RegisterProxyRequest': [condenseAxelarSnapshotV1beta1RegisterProxyRequest, expandAxelarSnapshotV1beta1RegisterProxyRequest, decodeAxelarSnapshotV1beta1RegisterProxyRequest],
    '/axelar.snapshot.v1beta1.RegisterProxyResponse': [condenseAxelarSnapshotV1beta1RegisterProxyResponse, expandAxelarSnapshotV1beta1RegisterProxyResponse, decodeAxelarSnapshotV1beta1RegisterProxyResponse],
    '/axelar.snapshot.v1beta1.DeactivateProxyRequest': [condenseAxelarSnapshotV1beta1DeactivateProxyRequest, expandAxelarSnapshotV1beta1DeactivateProxyRequest, decodeAxelarSnapshotV1beta1DeactivateProxyRequest],
    '/axelar.snapshot.v1beta1.DeactivateProxyResponse': [condenseAxelarSnapshotV1beta1DeactivateProxyResponse, expandAxelarSnapshotV1beta1DeactivateProxyResponse, decodeAxelarSnapshotV1beta1DeactivateProxyResponse],
    '/axelar.snapshot.v1beta1.ProxiedValidator': [condenseAxelarSnapshotV1beta1ProxiedValidator, expandAxelarSnapshotV1beta1ProxiedValidator, decodeAxelarSnapshotV1beta1ProxiedValidator],
    '/axelar.snapshot.v1beta1.QueryValidatorsResponse': [condenseAxelarSnapshotV1beta1QueryValidatorsResponse, expandAxelarSnapshotV1beta1QueryValidatorsResponse, decodeAxelarSnapshotV1beta1QueryValidatorsResponse],
    '/axelar.snapshot.v1beta1.ParamsRequest': [condenseAxelarSnapshotV1beta1ParamsRequest, expandAxelarSnapshotV1beta1ParamsRequest, decodeAxelarSnapshotV1beta1ParamsRequest],
    '/axelar.snapshot.v1beta1.ParamsResponse': [condenseAxelarSnapshotV1beta1ParamsResponse, expandAxelarSnapshotV1beta1ParamsResponse, decodeAxelarSnapshotV1beta1ParamsResponse],
    '/axelar.snapshot.v1beta1.GenesisState': [condenseAxelarSnapshotV1beta1GenesisState, expandAxelarSnapshotV1beta1GenesisState, decodeAxelarSnapshotV1beta1GenesisState],
    '/axelar.snapshot.v1beta1.Params': [condenseAxelarSnapshotV1beta1Params, expandAxelarSnapshotV1beta1Params, decodeAxelarSnapshotV1beta1Params],
    '/axelar.axelarnet.v1beta1.LinkRequest': [condenseAxelarAxelarnetV1beta1LinkRequest, expandAxelarAxelarnetV1beta1LinkRequest, decodeAxelarAxelarnetV1beta1LinkRequest],
    '/axelar.axelarnet.v1beta1.LinkResponse': [condenseAxelarAxelarnetV1beta1LinkResponse, expandAxelarAxelarnetV1beta1LinkResponse, decodeAxelarAxelarnetV1beta1LinkResponse],
    '/axelar.axelarnet.v1beta1.ConfirmDepositRequest': [condenseAxelarAxelarnetV1beta1ConfirmDepositRequest, expandAxelarAxelarnetV1beta1ConfirmDepositRequest, decodeAxelarAxelarnetV1beta1ConfirmDepositRequest],
    '/axelar.axelarnet.v1beta1.ConfirmDepositResponse': [condenseAxelarAxelarnetV1beta1ConfirmDepositResponse, expandAxelarAxelarnetV1beta1ConfirmDepositResponse, decodeAxelarAxelarnetV1beta1ConfirmDepositResponse],
    '/axelar.axelarnet.v1beta1.ExecutePendingTransfersRequest': [condenseAxelarAxelarnetV1beta1ExecutePendingTransfersRequest, expandAxelarAxelarnetV1beta1ExecutePendingTransfersRequest, decodeAxelarAxelarnetV1beta1ExecutePendingTransfersRequest],
    '/axelar.axelarnet.v1beta1.ExecutePendingTransfersResponse': [condenseAxelarAxelarnetV1beta1ExecutePendingTransfersResponse, expandAxelarAxelarnetV1beta1ExecutePendingTransfersResponse, decodeAxelarAxelarnetV1beta1ExecutePendingTransfersResponse],
    '/axelar.axelarnet.v1beta1.RegisterIBCPathRequest': [condenseAxelarAxelarnetV1beta1RegisterIBCPathRequest, expandAxelarAxelarnetV1beta1RegisterIBCPathRequest, decodeAxelarAxelarnetV1beta1RegisterIBCPathRequest],
    '/axelar.axelarnet.v1beta1.RegisterIBCPathResponse': [condenseAxelarAxelarnetV1beta1RegisterIBCPathResponse, expandAxelarAxelarnetV1beta1RegisterIBCPathResponse, decodeAxelarAxelarnetV1beta1RegisterIBCPathResponse],
    '/axelar.axelarnet.v1beta1.AddCosmosBasedChainRequest': [condenseAxelarAxelarnetV1beta1AddCosmosBasedChainRequest, expandAxelarAxelarnetV1beta1AddCosmosBasedChainRequest, decodeAxelarAxelarnetV1beta1AddCosmosBasedChainRequest],
    '/axelar.axelarnet.v1beta1.AddCosmosBasedChainResponse': [condenseAxelarAxelarnetV1beta1AddCosmosBasedChainResponse, expandAxelarAxelarnetV1beta1AddCosmosBasedChainResponse, decodeAxelarAxelarnetV1beta1AddCosmosBasedChainResponse],
    '/axelar.axelarnet.v1beta1.RegisterAssetRequest': [condenseAxelarAxelarnetV1beta1RegisterAssetRequest, expandAxelarAxelarnetV1beta1RegisterAssetRequest, decodeAxelarAxelarnetV1beta1RegisterAssetRequest],
    '/axelar.axelarnet.v1beta1.RegisterAssetResponse': [condenseAxelarAxelarnetV1beta1RegisterAssetResponse, expandAxelarAxelarnetV1beta1RegisterAssetResponse, decodeAxelarAxelarnetV1beta1RegisterAssetResponse],
    '/axelar.axelarnet.v1beta1.RouteIBCTransfersRequest': [condenseAxelarAxelarnetV1beta1RouteIBCTransfersRequest, expandAxelarAxelarnetV1beta1RouteIBCTransfersRequest, decodeAxelarAxelarnetV1beta1RouteIBCTransfersRequest],
    '/axelar.axelarnet.v1beta1.RouteIBCTransfersResponse': [condenseAxelarAxelarnetV1beta1RouteIBCTransfersResponse, expandAxelarAxelarnetV1beta1RouteIBCTransfersResponse, decodeAxelarAxelarnetV1beta1RouteIBCTransfersResponse],
    '/axelar.axelarnet.v1beta1.RegisterFeeCollectorRequest': [condenseAxelarAxelarnetV1beta1RegisterFeeCollectorRequest, expandAxelarAxelarnetV1beta1RegisterFeeCollectorRequest, decodeAxelarAxelarnetV1beta1RegisterFeeCollectorRequest],
    '/axelar.axelarnet.v1beta1.RegisterFeeCollectorResponse': [condenseAxelarAxelarnetV1beta1RegisterFeeCollectorResponse, expandAxelarAxelarnetV1beta1RegisterFeeCollectorResponse, decodeAxelarAxelarnetV1beta1RegisterFeeCollectorResponse],
    '/axelar.axelarnet.v1beta1.RetryIBCTransferRequest': [condenseAxelarAxelarnetV1beta1RetryIBCTransferRequest, expandAxelarAxelarnetV1beta1RetryIBCTransferRequest, decodeAxelarAxelarnetV1beta1RetryIBCTransferRequest],
    '/axelar.axelarnet.v1beta1.RetryIBCTransferResponse': [condenseAxelarAxelarnetV1beta1RetryIBCTransferResponse, expandAxelarAxelarnetV1beta1RetryIBCTransferResponse, decodeAxelarAxelarnetV1beta1RetryIBCTransferResponse],
    '/axelar.axelarnet.v1beta1.RouteMessageRequest': [condenseAxelarAxelarnetV1beta1RouteMessageRequest, expandAxelarAxelarnetV1beta1RouteMessageRequest, decodeAxelarAxelarnetV1beta1RouteMessageRequest],
    '/axelar.axelarnet.v1beta1.RouteMessageResponse': [condenseAxelarAxelarnetV1beta1RouteMessageResponse, expandAxelarAxelarnetV1beta1RouteMessageResponse, decodeAxelarAxelarnetV1beta1RouteMessageResponse],
    '/axelar.axelarnet.v1beta1.CallContractRequest': [condenseAxelarAxelarnetV1beta1CallContractRequest, expandAxelarAxelarnetV1beta1CallContractRequest, decodeAxelarAxelarnetV1beta1CallContractRequest],
    '/axelar.axelarnet.v1beta1.CallContractResponse': [condenseAxelarAxelarnetV1beta1CallContractResponse, expandAxelarAxelarnetV1beta1CallContractResponse, decodeAxelarAxelarnetV1beta1CallContractResponse],
    '/axelar.axelarnet.v1beta1.IBCTransferSent': [condenseAxelarAxelarnetV1beta1IBCTransferSent, expandAxelarAxelarnetV1beta1IBCTransferSent, decodeAxelarAxelarnetV1beta1IBCTransferSent],
    '/axelar.axelarnet.v1beta1.IBCTransferCompleted': [condenseAxelarAxelarnetV1beta1IBCTransferCompleted, expandAxelarAxelarnetV1beta1IBCTransferCompleted, decodeAxelarAxelarnetV1beta1IBCTransferCompleted],
    '/axelar.axelarnet.v1beta1.IBCTransferFailed': [condenseAxelarAxelarnetV1beta1IBCTransferFailed, expandAxelarAxelarnetV1beta1IBCTransferFailed, decodeAxelarAxelarnetV1beta1IBCTransferFailed],
    '/axelar.axelarnet.v1beta1.IBCTransferRetried': [condenseAxelarAxelarnetV1beta1IBCTransferRetried, expandAxelarAxelarnetV1beta1IBCTransferRetried, decodeAxelarAxelarnetV1beta1IBCTransferRetried],
    '/axelar.axelarnet.v1beta1.AxelarTransferCompleted': [condenseAxelarAxelarnetV1beta1AxelarTransferCompleted, expandAxelarAxelarnetV1beta1AxelarTransferCompleted, decodeAxelarAxelarnetV1beta1AxelarTransferCompleted],
    '/axelar.axelarnet.v1beta1.FeeCollected': [condenseAxelarAxelarnetV1beta1FeeCollected, expandAxelarAxelarnetV1beta1FeeCollected, decodeAxelarAxelarnetV1beta1FeeCollected],
    '/axelar.axelarnet.v1beta1.FeePaid': [condenseAxelarAxelarnetV1beta1FeePaid, expandAxelarAxelarnetV1beta1FeePaid, decodeAxelarAxelarnetV1beta1FeePaid],
    '/axelar.axelarnet.v1beta1.ContractCallSubmitted': [condenseAxelarAxelarnetV1beta1ContractCallSubmitted, expandAxelarAxelarnetV1beta1ContractCallSubmitted, decodeAxelarAxelarnetV1beta1ContractCallSubmitted],
    '/axelar.axelarnet.v1beta1.ContractCallWithTokenSubmitted': [condenseAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted, expandAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted, decodeAxelarAxelarnetV1beta1ContractCallWithTokenSubmitted],
    '/axelar.axelarnet.v1beta1.TokenSent': [condenseAxelarAxelarnetV1beta1TokenSent, expandAxelarAxelarnetV1beta1TokenSent, decodeAxelarAxelarnetV1beta1TokenSent],
    '/axelar.axelarnet.v1beta1.IBCTransfer': [condenseAxelarAxelarnetV1beta1IBCTransfer, expandAxelarAxelarnetV1beta1IBCTransfer, decodeAxelarAxelarnetV1beta1IBCTransfer],
    '/axelar.axelarnet.v1beta1.CosmosChain': [condenseAxelarAxelarnetV1beta1CosmosChain, expandAxelarAxelarnetV1beta1CosmosChain, decodeAxelarAxelarnetV1beta1CosmosChain],
    '/axelar.axelarnet.v1beta1.Asset': [condenseAxelarAxelarnetV1beta1Asset, expandAxelarAxelarnetV1beta1Asset, decodeAxelarAxelarnetV1beta1Asset],
    '/axelar.axelarnet.v1beta1.Fee': [condenseAxelarAxelarnetV1beta1Fee, expandAxelarAxelarnetV1beta1Fee, decodeAxelarAxelarnetV1beta1Fee],
    '/axelar.axelarnet.v1beta1.PendingIBCTransferCountRequest': [condenseAxelarAxelarnetV1beta1PendingIBCTransferCountRequest, expandAxelarAxelarnetV1beta1PendingIBCTransferCountRequest, decodeAxelarAxelarnetV1beta1PendingIBCTransferCountRequest],
    '/axelar.axelarnet.v1beta1.PendingIBCTransferCountResponse': [condenseAxelarAxelarnetV1beta1PendingIBCTransferCountResponse, expandAxelarAxelarnetV1beta1PendingIBCTransferCountResponse, decodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponse],
    '/axelar.axelarnet.v1beta1.ParamsRequest': [condenseAxelarAxelarnetV1beta1ParamsRequest, expandAxelarAxelarnetV1beta1ParamsRequest, decodeAxelarAxelarnetV1beta1ParamsRequest],
    '/axelar.axelarnet.v1beta1.ParamsResponse': [condenseAxelarAxelarnetV1beta1ParamsResponse, expandAxelarAxelarnetV1beta1ParamsResponse, decodeAxelarAxelarnetV1beta1ParamsResponse],
    '/axelar.axelarnet.v1beta1.GenesisState': [condenseAxelarAxelarnetV1beta1GenesisState, expandAxelarAxelarnetV1beta1GenesisState, decodeAxelarAxelarnetV1beta1GenesisState],
    '/axelar.axelarnet.v1beta1.CallContractsProposal': [condenseAxelarAxelarnetV1beta1CallContractsProposal, expandAxelarAxelarnetV1beta1CallContractsProposal, decodeAxelarAxelarnetV1beta1CallContractsProposal],
    '/axelar.axelarnet.v1beta1.ContractCall': [condenseAxelarAxelarnetV1beta1ContractCall, expandAxelarAxelarnetV1beta1ContractCall, decodeAxelarAxelarnetV1beta1ContractCall],
    '/axelar.axelarnet.v1beta1.Params': [condenseAxelarAxelarnetV1beta1Params, expandAxelarAxelarnetV1beta1Params, decodeAxelarAxelarnetV1beta1Params],
    '/axelar.axelarnet.v1beta1.CallContractProposalMinDeposit': [condenseAxelarAxelarnetV1beta1CallContractProposalMinDeposit, expandAxelarAxelarnetV1beta1CallContractProposalMinDeposit, decodeAxelarAxelarnetV1beta1CallContractProposalMinDeposit],
    '/axelar.multisig.v1beta1.StartKeygenRequest': [condenseAxelarMultisigV1beta1StartKeygenRequest, expandAxelarMultisigV1beta1StartKeygenRequest, decodeAxelarMultisigV1beta1StartKeygenRequest],
    '/axelar.multisig.v1beta1.StartKeygenResponse': [condenseAxelarMultisigV1beta1StartKeygenResponse, expandAxelarMultisigV1beta1StartKeygenResponse, decodeAxelarMultisigV1beta1StartKeygenResponse],
    '/axelar.multisig.v1beta1.SubmitPubKeyRequest': [condenseAxelarMultisigV1beta1SubmitPubKeyRequest, expandAxelarMultisigV1beta1SubmitPubKeyRequest, decodeAxelarMultisigV1beta1SubmitPubKeyRequest],
    '/axelar.multisig.v1beta1.SubmitPubKeyResponse': [condenseAxelarMultisigV1beta1SubmitPubKeyResponse, expandAxelarMultisigV1beta1SubmitPubKeyResponse, decodeAxelarMultisigV1beta1SubmitPubKeyResponse],
    '/axelar.multisig.v1beta1.SubmitSignatureRequest': [condenseAxelarMultisigV1beta1SubmitSignatureRequest, expandAxelarMultisigV1beta1SubmitSignatureRequest, decodeAxelarMultisigV1beta1SubmitSignatureRequest],
    '/axelar.multisig.v1beta1.SubmitSignatureResponse': [condenseAxelarMultisigV1beta1SubmitSignatureResponse, expandAxelarMultisigV1beta1SubmitSignatureResponse, decodeAxelarMultisigV1beta1SubmitSignatureResponse],
    '/axelar.multisig.v1beta1.RotateKeyRequest': [condenseAxelarMultisigV1beta1RotateKeyRequest, expandAxelarMultisigV1beta1RotateKeyRequest, decodeAxelarMultisigV1beta1RotateKeyRequest],
    '/axelar.multisig.v1beta1.RotateKeyResponse': [condenseAxelarMultisigV1beta1RotateKeyResponse, expandAxelarMultisigV1beta1RotateKeyResponse, decodeAxelarMultisigV1beta1RotateKeyResponse],
    '/axelar.multisig.v1beta1.KeygenOptOutRequest': [condenseAxelarMultisigV1beta1KeygenOptOutRequest, expandAxelarMultisigV1beta1KeygenOptOutRequest, decodeAxelarMultisigV1beta1KeygenOptOutRequest],
    '/axelar.multisig.v1beta1.KeygenOptOutResponse': [condenseAxelarMultisigV1beta1KeygenOptOutResponse, expandAxelarMultisigV1beta1KeygenOptOutResponse, decodeAxelarMultisigV1beta1KeygenOptOutResponse],
    '/axelar.multisig.v1beta1.KeygenOptInRequest': [condenseAxelarMultisigV1beta1KeygenOptInRequest, expandAxelarMultisigV1beta1KeygenOptInRequest, decodeAxelarMultisigV1beta1KeygenOptInRequest],
    '/axelar.multisig.v1beta1.KeygenOptInResponse': [condenseAxelarMultisigV1beta1KeygenOptInResponse, expandAxelarMultisigV1beta1KeygenOptInResponse, decodeAxelarMultisigV1beta1KeygenOptInResponse],
    '/axelar.multisig.v1beta1.KeygenStarted': [condenseAxelarMultisigV1beta1KeygenStarted, expandAxelarMultisigV1beta1KeygenStarted, decodeAxelarMultisigV1beta1KeygenStarted],
    '/axelar.multisig.v1beta1.KeygenCompleted': [condenseAxelarMultisigV1beta1KeygenCompleted, expandAxelarMultisigV1beta1KeygenCompleted, decodeAxelarMultisigV1beta1KeygenCompleted],
    '/axelar.multisig.v1beta1.KeygenExpired': [condenseAxelarMultisigV1beta1KeygenExpired, expandAxelarMultisigV1beta1KeygenExpired, decodeAxelarMultisigV1beta1KeygenExpired],
    '/axelar.multisig.v1beta1.PubKeySubmitted': [condenseAxelarMultisigV1beta1PubKeySubmitted, expandAxelarMultisigV1beta1PubKeySubmitted, decodeAxelarMultisigV1beta1PubKeySubmitted],
    '/axelar.multisig.v1beta1.SigningStarted': [condenseAxelarMultisigV1beta1SigningStarted, expandAxelarMultisigV1beta1SigningStarted, decodeAxelarMultisigV1beta1SigningStarted],
    '/axelar.multisig.v1beta1.SigningCompleted': [condenseAxelarMultisigV1beta1SigningCompleted, expandAxelarMultisigV1beta1SigningCompleted, decodeAxelarMultisigV1beta1SigningCompleted],
    '/axelar.multisig.v1beta1.SigningExpired': [condenseAxelarMultisigV1beta1SigningExpired, expandAxelarMultisigV1beta1SigningExpired, decodeAxelarMultisigV1beta1SigningExpired],
    '/axelar.multisig.v1beta1.SignatureSubmitted': [condenseAxelarMultisigV1beta1SignatureSubmitted, expandAxelarMultisigV1beta1SignatureSubmitted, decodeAxelarMultisigV1beta1SignatureSubmitted],
    '/axelar.multisig.v1beta1.KeyAssigned': [condenseAxelarMultisigV1beta1KeyAssigned, expandAxelarMultisigV1beta1KeyAssigned, decodeAxelarMultisigV1beta1KeyAssigned],
    '/axelar.multisig.v1beta1.KeyRotated': [condenseAxelarMultisigV1beta1KeyRotated, expandAxelarMultisigV1beta1KeyRotated, decodeAxelarMultisigV1beta1KeyRotated],
    '/axelar.multisig.v1beta1.KeygenOptOut': [condenseAxelarMultisigV1beta1KeygenOptOut, expandAxelarMultisigV1beta1KeygenOptOut, decodeAxelarMultisigV1beta1KeygenOptOut],
    '/axelar.multisig.v1beta1.KeygenOptIn': [condenseAxelarMultisigV1beta1KeygenOptIn, expandAxelarMultisigV1beta1KeygenOptIn, decodeAxelarMultisigV1beta1KeygenOptIn],
    '/axelar.multisig.v1beta1.Key': [condenseAxelarMultisigV1beta1Key, expandAxelarMultisigV1beta1Key, decodeAxelarMultisigV1beta1Key],
    '/axelar.multisig.v1beta1.KeygenSession': [condenseAxelarMultisigV1beta1KeygenSession, expandAxelarMultisigV1beta1KeygenSession, decodeAxelarMultisigV1beta1KeygenSession],
    '/axelar.multisig.v1beta1.MultiSig': [condenseAxelarMultisigV1beta1MultiSig, expandAxelarMultisigV1beta1MultiSig, decodeAxelarMultisigV1beta1MultiSig],
    '/axelar.multisig.v1beta1.SigningSession': [condenseAxelarMultisigV1beta1SigningSession, expandAxelarMultisigV1beta1SigningSession, decodeAxelarMultisigV1beta1SigningSession],
    '/axelar.multisig.v1beta1.KeyEpoch': [condenseAxelarMultisigV1beta1KeyEpoch, expandAxelarMultisigV1beta1KeyEpoch, decodeAxelarMultisigV1beta1KeyEpoch],
    '/axelar.multisig.v1beta1.KeyIDRequest': [condenseAxelarMultisigV1beta1KeyIDRequest, expandAxelarMultisigV1beta1KeyIDRequest, decodeAxelarMultisigV1beta1KeyIDRequest],
    '/axelar.multisig.v1beta1.KeyIDResponse': [condenseAxelarMultisigV1beta1KeyIDResponse, expandAxelarMultisigV1beta1KeyIDResponse, decodeAxelarMultisigV1beta1KeyIDResponse],
    '/axelar.multisig.v1beta1.NextKeyIDRequest': [condenseAxelarMultisigV1beta1NextKeyIDRequest, expandAxelarMultisigV1beta1NextKeyIDRequest, decodeAxelarMultisigV1beta1NextKeyIDRequest],
    '/axelar.multisig.v1beta1.NextKeyIDResponse': [condenseAxelarMultisigV1beta1NextKeyIDResponse, expandAxelarMultisigV1beta1NextKeyIDResponse, decodeAxelarMultisigV1beta1NextKeyIDResponse],
    '/axelar.multisig.v1beta1.KeyRequest': [condenseAxelarMultisigV1beta1KeyRequest, expandAxelarMultisigV1beta1KeyRequest, decodeAxelarMultisigV1beta1KeyRequest],
    '/axelar.multisig.v1beta1.KeygenParticipant': [condenseAxelarMultisigV1beta1KeygenParticipant, expandAxelarMultisigV1beta1KeygenParticipant, decodeAxelarMultisigV1beta1KeygenParticipant],
    '/axelar.multisig.v1beta1.KeyResponse': [condenseAxelarMultisigV1beta1KeyResponse, expandAxelarMultisigV1beta1KeyResponse, decodeAxelarMultisigV1beta1KeyResponse],
    '/axelar.multisig.v1beta1.KeygenSessionRequest': [condenseAxelarMultisigV1beta1KeygenSessionRequest, expandAxelarMultisigV1beta1KeygenSessionRequest, decodeAxelarMultisigV1beta1KeygenSessionRequest],
    '/axelar.multisig.v1beta1.KeygenSessionResponse': [condenseAxelarMultisigV1beta1KeygenSessionResponse, expandAxelarMultisigV1beta1KeygenSessionResponse, decodeAxelarMultisigV1beta1KeygenSessionResponse],
    '/axelar.multisig.v1beta1.ParamsRequest': [condenseAxelarMultisigV1beta1ParamsRequest, expandAxelarMultisigV1beta1ParamsRequest, decodeAxelarMultisigV1beta1ParamsRequest],
    '/axelar.multisig.v1beta1.ParamsResponse': [condenseAxelarMultisigV1beta1ParamsResponse, expandAxelarMultisigV1beta1ParamsResponse, decodeAxelarMultisigV1beta1ParamsResponse],
    '/axelar.multisig.v1beta1.GenesisState': [condenseAxelarMultisigV1beta1GenesisState, expandAxelarMultisigV1beta1GenesisState, decodeAxelarMultisigV1beta1GenesisState],
    '/axelar.multisig.v1beta1.Params': [condenseAxelarMultisigV1beta1Params, expandAxelarMultisigV1beta1Params, decodeAxelarMultisigV1beta1Params],
    '/axelar.utils.v1beta1.Threshold': [condenseAxelarUtilsV1beta1Threshold, expandAxelarUtilsV1beta1Threshold, decodeAxelarUtilsV1beta1Threshold],
    '/axelar.utils.v1beta1.Bitmap': [condenseAxelarUtilsV1beta1Bitmap, expandAxelarUtilsV1beta1Bitmap, decodeAxelarUtilsV1beta1Bitmap],
    '/axelar.utils.v1beta1.CircularBuffer': [condenseAxelarUtilsV1beta1CircularBuffer, expandAxelarUtilsV1beta1CircularBuffer, decodeAxelarUtilsV1beta1CircularBuffer],
    '/axelar.utils.v1beta1.QueueState': [condenseAxelarUtilsV1beta1QueueState, expandAxelarUtilsV1beta1QueueState, decodeAxelarUtilsV1beta1QueueState],
    '/axelar.nexus.exported.v1beta1.Chain': [condenseAxelarNexusExportedV1beta1Chain, expandAxelarNexusExportedV1beta1Chain, decodeAxelarNexusExportedV1beta1Chain],
    '/axelar.nexus.exported.v1beta1.CrossChainAddress': [condenseAxelarNexusExportedV1beta1CrossChainAddress, expandAxelarNexusExportedV1beta1CrossChainAddress, decodeAxelarNexusExportedV1beta1CrossChainAddress],
    '/axelar.nexus.exported.v1beta1.CrossChainTransfer': [condenseAxelarNexusExportedV1beta1CrossChainTransfer, expandAxelarNexusExportedV1beta1CrossChainTransfer, decodeAxelarNexusExportedV1beta1CrossChainTransfer],
    '/axelar.nexus.exported.v1beta1.TransferFee': [condenseAxelarNexusExportedV1beta1TransferFee, expandAxelarNexusExportedV1beta1TransferFee, decodeAxelarNexusExportedV1beta1TransferFee],
    '/axelar.nexus.exported.v1beta1.FeeInfo': [condenseAxelarNexusExportedV1beta1FeeInfo, expandAxelarNexusExportedV1beta1FeeInfo, decodeAxelarNexusExportedV1beta1FeeInfo],
    '/axelar.nexus.exported.v1beta1.Asset': [condenseAxelarNexusExportedV1beta1Asset, expandAxelarNexusExportedV1beta1Asset, decodeAxelarNexusExportedV1beta1Asset],
    '/axelar.nexus.exported.v1beta1.GeneralMessage': [condenseAxelarNexusExportedV1beta1GeneralMessage, expandAxelarNexusExportedV1beta1GeneralMessage, decodeAxelarNexusExportedV1beta1GeneralMessage],
    '/axelar.nexus.exported.v1beta1.WasmMessage': [condenseAxelarNexusExportedV1beta1WasmMessage, expandAxelarNexusExportedV1beta1WasmMessage, decodeAxelarNexusExportedV1beta1WasmMessage],
    '/axelar.nexus.v1beta1.RegisterChainMaintainerRequest': [condenseAxelarNexusV1beta1RegisterChainMaintainerRequest, expandAxelarNexusV1beta1RegisterChainMaintainerRequest, decodeAxelarNexusV1beta1RegisterChainMaintainerRequest],
    '/axelar.nexus.v1beta1.RegisterChainMaintainerResponse': [condenseAxelarNexusV1beta1RegisterChainMaintainerResponse, expandAxelarNexusV1beta1RegisterChainMaintainerResponse, decodeAxelarNexusV1beta1RegisterChainMaintainerResponse],
    '/axelar.nexus.v1beta1.DeregisterChainMaintainerRequest': [condenseAxelarNexusV1beta1DeregisterChainMaintainerRequest, expandAxelarNexusV1beta1DeregisterChainMaintainerRequest, decodeAxelarNexusV1beta1DeregisterChainMaintainerRequest],
    '/axelar.nexus.v1beta1.DeregisterChainMaintainerResponse': [condenseAxelarNexusV1beta1DeregisterChainMaintainerResponse, expandAxelarNexusV1beta1DeregisterChainMaintainerResponse, decodeAxelarNexusV1beta1DeregisterChainMaintainerResponse],
    '/axelar.nexus.v1beta1.ActivateChainRequest': [condenseAxelarNexusV1beta1ActivateChainRequest, expandAxelarNexusV1beta1ActivateChainRequest, decodeAxelarNexusV1beta1ActivateChainRequest],
    '/axelar.nexus.v1beta1.ActivateChainResponse': [condenseAxelarNexusV1beta1ActivateChainResponse, expandAxelarNexusV1beta1ActivateChainResponse, decodeAxelarNexusV1beta1ActivateChainResponse],
    '/axelar.nexus.v1beta1.DeactivateChainRequest': [condenseAxelarNexusV1beta1DeactivateChainRequest, expandAxelarNexusV1beta1DeactivateChainRequest, decodeAxelarNexusV1beta1DeactivateChainRequest],
    '/axelar.nexus.v1beta1.DeactivateChainResponse': [condenseAxelarNexusV1beta1DeactivateChainResponse, expandAxelarNexusV1beta1DeactivateChainResponse, decodeAxelarNexusV1beta1DeactivateChainResponse],
    '/axelar.nexus.v1beta1.RegisterAssetFeeRequest': [condenseAxelarNexusV1beta1RegisterAssetFeeRequest, expandAxelarNexusV1beta1RegisterAssetFeeRequest, decodeAxelarNexusV1beta1RegisterAssetFeeRequest],
    '/axelar.nexus.v1beta1.RegisterAssetFeeResponse': [condenseAxelarNexusV1beta1RegisterAssetFeeResponse, expandAxelarNexusV1beta1RegisterAssetFeeResponse, decodeAxelarNexusV1beta1RegisterAssetFeeResponse],
    '/axelar.nexus.v1beta1.SetTransferRateLimitRequest': [condenseAxelarNexusV1beta1SetTransferRateLimitRequest, expandAxelarNexusV1beta1SetTransferRateLimitRequest, decodeAxelarNexusV1beta1SetTransferRateLimitRequest],
    '/axelar.nexus.v1beta1.SetTransferRateLimitResponse': [condenseAxelarNexusV1beta1SetTransferRateLimitResponse, expandAxelarNexusV1beta1SetTransferRateLimitResponse, decodeAxelarNexusV1beta1SetTransferRateLimitResponse],
    '/axelar.nexus.v1beta1.FeeDeducted': [condenseAxelarNexusV1beta1FeeDeducted, expandAxelarNexusV1beta1FeeDeducted, decodeAxelarNexusV1beta1FeeDeducted],
    '/axelar.nexus.v1beta1.InsufficientFee': [condenseAxelarNexusV1beta1InsufficientFee, expandAxelarNexusV1beta1InsufficientFee, decodeAxelarNexusV1beta1InsufficientFee],
    '/axelar.nexus.v1beta1.RateLimitUpdated': [condenseAxelarNexusV1beta1RateLimitUpdated, expandAxelarNexusV1beta1RateLimitUpdated, decodeAxelarNexusV1beta1RateLimitUpdated],
    '/axelar.nexus.v1beta1.MessageReceived': [condenseAxelarNexusV1beta1MessageReceived, expandAxelarNexusV1beta1MessageReceived, decodeAxelarNexusV1beta1MessageReceived],
    '/axelar.nexus.v1beta1.MessageProcessing': [condenseAxelarNexusV1beta1MessageProcessing, expandAxelarNexusV1beta1MessageProcessing, decodeAxelarNexusV1beta1MessageProcessing],
    '/axelar.nexus.v1beta1.MessageExecuted': [condenseAxelarNexusV1beta1MessageExecuted, expandAxelarNexusV1beta1MessageExecuted, decodeAxelarNexusV1beta1MessageExecuted],
    '/axelar.nexus.v1beta1.MessageFailed': [condenseAxelarNexusV1beta1MessageFailed, expandAxelarNexusV1beta1MessageFailed, decodeAxelarNexusV1beta1MessageFailed],
    '/axelar.nexus.v1beta1.WasmMessageRouted': [condenseAxelarNexusV1beta1WasmMessageRouted, expandAxelarNexusV1beta1WasmMessageRouted, decodeAxelarNexusV1beta1WasmMessageRouted],
    '/axelar.nexus.v1beta1.MaintainerState': [condenseAxelarNexusV1beta1MaintainerState, expandAxelarNexusV1beta1MaintainerState, decodeAxelarNexusV1beta1MaintainerState],
    '/axelar.nexus.v1beta1.ChainState': [condenseAxelarNexusV1beta1ChainState, expandAxelarNexusV1beta1ChainState, decodeAxelarNexusV1beta1ChainState],
    '/axelar.nexus.v1beta1.LinkedAddresses': [condenseAxelarNexusV1beta1LinkedAddresses, expandAxelarNexusV1beta1LinkedAddresses, decodeAxelarNexusV1beta1LinkedAddresses],
    '/axelar.nexus.v1beta1.RateLimit': [condenseAxelarNexusV1beta1RateLimit, expandAxelarNexusV1beta1RateLimit, decodeAxelarNexusV1beta1RateLimit],
    '/axelar.nexus.v1beta1.TransferEpoch': [condenseAxelarNexusV1beta1TransferEpoch, expandAxelarNexusV1beta1TransferEpoch, decodeAxelarNexusV1beta1TransferEpoch],
    '/axelar.nexus.v1beta1.ChainMaintainersRequest': [condenseAxelarNexusV1beta1ChainMaintainersRequest, expandAxelarNexusV1beta1ChainMaintainersRequest, decodeAxelarNexusV1beta1ChainMaintainersRequest],
    '/axelar.nexus.v1beta1.ChainMaintainersResponse': [condenseAxelarNexusV1beta1ChainMaintainersResponse, expandAxelarNexusV1beta1ChainMaintainersResponse, decodeAxelarNexusV1beta1ChainMaintainersResponse],
    '/axelar.nexus.v1beta1.LatestDepositAddressRequest': [condenseAxelarNexusV1beta1LatestDepositAddressRequest, expandAxelarNexusV1beta1LatestDepositAddressRequest, decodeAxelarNexusV1beta1LatestDepositAddressRequest],
    '/axelar.nexus.v1beta1.LatestDepositAddressResponse': [condenseAxelarNexusV1beta1LatestDepositAddressResponse, expandAxelarNexusV1beta1LatestDepositAddressResponse, decodeAxelarNexusV1beta1LatestDepositAddressResponse],
    '/axelar.nexus.v1beta1.TransfersForChainRequest': [condenseAxelarNexusV1beta1TransfersForChainRequest, expandAxelarNexusV1beta1TransfersForChainRequest, decodeAxelarNexusV1beta1TransfersForChainRequest],
    '/axelar.nexus.v1beta1.TransfersForChainResponse': [condenseAxelarNexusV1beta1TransfersForChainResponse, expandAxelarNexusV1beta1TransfersForChainResponse, decodeAxelarNexusV1beta1TransfersForChainResponse],
    '/axelar.nexus.v1beta1.FeeInfoRequest': [condenseAxelarNexusV1beta1FeeInfoRequest, expandAxelarNexusV1beta1FeeInfoRequest, decodeAxelarNexusV1beta1FeeInfoRequest],
    '/axelar.nexus.v1beta1.FeeInfoResponse': [condenseAxelarNexusV1beta1FeeInfoResponse, expandAxelarNexusV1beta1FeeInfoResponse, decodeAxelarNexusV1beta1FeeInfoResponse],
    '/axelar.nexus.v1beta1.TransferFeeRequest': [condenseAxelarNexusV1beta1TransferFeeRequest, expandAxelarNexusV1beta1TransferFeeRequest, decodeAxelarNexusV1beta1TransferFeeRequest],
    '/axelar.nexus.v1beta1.TransferFeeResponse': [condenseAxelarNexusV1beta1TransferFeeResponse, expandAxelarNexusV1beta1TransferFeeResponse, decodeAxelarNexusV1beta1TransferFeeResponse],
    '/axelar.nexus.v1beta1.ChainsRequest': [condenseAxelarNexusV1beta1ChainsRequest, expandAxelarNexusV1beta1ChainsRequest, decodeAxelarNexusV1beta1ChainsRequest],
    '/axelar.nexus.v1beta1.ChainsResponse': [condenseAxelarNexusV1beta1ChainsResponse, expandAxelarNexusV1beta1ChainsResponse, decodeAxelarNexusV1beta1ChainsResponse],
    '/axelar.nexus.v1beta1.AssetsRequest': [condenseAxelarNexusV1beta1AssetsRequest, expandAxelarNexusV1beta1AssetsRequest, decodeAxelarNexusV1beta1AssetsRequest],
    '/axelar.nexus.v1beta1.AssetsResponse': [condenseAxelarNexusV1beta1AssetsResponse, expandAxelarNexusV1beta1AssetsResponse, decodeAxelarNexusV1beta1AssetsResponse],
    '/axelar.nexus.v1beta1.ChainStateRequest': [condenseAxelarNexusV1beta1ChainStateRequest, expandAxelarNexusV1beta1ChainStateRequest, decodeAxelarNexusV1beta1ChainStateRequest],
    '/axelar.nexus.v1beta1.ChainStateResponse': [condenseAxelarNexusV1beta1ChainStateResponse, expandAxelarNexusV1beta1ChainStateResponse, decodeAxelarNexusV1beta1ChainStateResponse],
    '/axelar.nexus.v1beta1.ChainsByAssetRequest': [condenseAxelarNexusV1beta1ChainsByAssetRequest, expandAxelarNexusV1beta1ChainsByAssetRequest, decodeAxelarNexusV1beta1ChainsByAssetRequest],
    '/axelar.nexus.v1beta1.ChainsByAssetResponse': [condenseAxelarNexusV1beta1ChainsByAssetResponse, expandAxelarNexusV1beta1ChainsByAssetResponse, decodeAxelarNexusV1beta1ChainsByAssetResponse],
    '/axelar.nexus.v1beta1.RecipientAddressRequest': [condenseAxelarNexusV1beta1RecipientAddressRequest, expandAxelarNexusV1beta1RecipientAddressRequest, decodeAxelarNexusV1beta1RecipientAddressRequest],
    '/axelar.nexus.v1beta1.RecipientAddressResponse': [condenseAxelarNexusV1beta1RecipientAddressResponse, expandAxelarNexusV1beta1RecipientAddressResponse, decodeAxelarNexusV1beta1RecipientAddressResponse],
    '/axelar.nexus.v1beta1.TransferRateLimitRequest': [condenseAxelarNexusV1beta1TransferRateLimitRequest, expandAxelarNexusV1beta1TransferRateLimitRequest, decodeAxelarNexusV1beta1TransferRateLimitRequest],
    '/axelar.nexus.v1beta1.TransferRateLimitResponse': [condenseAxelarNexusV1beta1TransferRateLimitResponse, expandAxelarNexusV1beta1TransferRateLimitResponse, decodeAxelarNexusV1beta1TransferRateLimitResponse],
    '/axelar.nexus.v1beta1.TransferRateLimit': [condenseAxelarNexusV1beta1TransferRateLimit, expandAxelarNexusV1beta1TransferRateLimit, decodeAxelarNexusV1beta1TransferRateLimit],
    '/axelar.nexus.v1beta1.MessageRequest': [condenseAxelarNexusV1beta1MessageRequest, expandAxelarNexusV1beta1MessageRequest, decodeAxelarNexusV1beta1MessageRequest],
    '/axelar.nexus.v1beta1.MessageResponse': [condenseAxelarNexusV1beta1MessageResponse, expandAxelarNexusV1beta1MessageResponse, decodeAxelarNexusV1beta1MessageResponse],
    '/axelar.nexus.v1beta1.ParamsRequest': [condenseAxelarNexusV1beta1ParamsRequest, expandAxelarNexusV1beta1ParamsRequest, decodeAxelarNexusV1beta1ParamsRequest],
    '/axelar.nexus.v1beta1.ParamsResponse': [condenseAxelarNexusV1beta1ParamsResponse, expandAxelarNexusV1beta1ParamsResponse, decodeAxelarNexusV1beta1ParamsResponse],
    '/axelar.nexus.v1beta1.GenesisState': [condenseAxelarNexusV1beta1GenesisState, expandAxelarNexusV1beta1GenesisState, decodeAxelarNexusV1beta1GenesisState],
    '/axelar.nexus.v1beta1.Params': [condenseAxelarNexusV1beta1Params, expandAxelarNexusV1beta1Params, decodeAxelarNexusV1beta1Params],
    '/axelar.reward.v1beta1.RefundMsgRequest': [condenseAxelarRewardV1beta1RefundMsgRequest, expandAxelarRewardV1beta1RefundMsgRequest, decodeAxelarRewardV1beta1RefundMsgRequest],
    '/axelar.reward.v1beta1.RefundMsgResponse': [condenseAxelarRewardV1beta1RefundMsgResponse, expandAxelarRewardV1beta1RefundMsgResponse, decodeAxelarRewardV1beta1RefundMsgResponse],
    '/axelar.reward.v1beta1.Pool': [condenseAxelarRewardV1beta1Pool, expandAxelarRewardV1beta1Pool, decodeAxelarRewardV1beta1Pool],
    '/axelar.reward.v1beta1.Refund': [condenseAxelarRewardV1beta1Refund, expandAxelarRewardV1beta1Refund, decodeAxelarRewardV1beta1Refund],
    '/axelar.reward.v1beta1.InflationRateRequest': [condenseAxelarRewardV1beta1InflationRateRequest, expandAxelarRewardV1beta1InflationRateRequest, decodeAxelarRewardV1beta1InflationRateRequest],
    '/axelar.reward.v1beta1.InflationRateResponse': [condenseAxelarRewardV1beta1InflationRateResponse, expandAxelarRewardV1beta1InflationRateResponse, decodeAxelarRewardV1beta1InflationRateResponse],
    '/axelar.reward.v1beta1.ParamsRequest': [condenseAxelarRewardV1beta1ParamsRequest, expandAxelarRewardV1beta1ParamsRequest, decodeAxelarRewardV1beta1ParamsRequest],
    '/axelar.reward.v1beta1.ParamsResponse': [condenseAxelarRewardV1beta1ParamsResponse, expandAxelarRewardV1beta1ParamsResponse, decodeAxelarRewardV1beta1ParamsResponse],
    '/axelar.reward.v1beta1.GenesisState': [condenseAxelarRewardV1beta1GenesisState, expandAxelarRewardV1beta1GenesisState, decodeAxelarRewardV1beta1GenesisState],
    '/axelar.reward.v1beta1.Params': [condenseAxelarRewardV1beta1Params, expandAxelarRewardV1beta1Params, decodeAxelarRewardV1beta1Params],
    '/axelar.evm.v1beta1.SetGatewayRequest': [condenseAxelarEvmV1beta1SetGatewayRequest, expandAxelarEvmV1beta1SetGatewayRequest, decodeAxelarEvmV1beta1SetGatewayRequest],
    '/axelar.evm.v1beta1.SetGatewayResponse': [condenseAxelarEvmV1beta1SetGatewayResponse, expandAxelarEvmV1beta1SetGatewayResponse, decodeAxelarEvmV1beta1SetGatewayResponse],
    '/axelar.evm.v1beta1.ConfirmGatewayTxRequest': [condenseAxelarEvmV1beta1ConfirmGatewayTxRequest, expandAxelarEvmV1beta1ConfirmGatewayTxRequest, decodeAxelarEvmV1beta1ConfirmGatewayTxRequest],
    '/axelar.evm.v1beta1.ConfirmGatewayTxResponse': [condenseAxelarEvmV1beta1ConfirmGatewayTxResponse, expandAxelarEvmV1beta1ConfirmGatewayTxResponse, decodeAxelarEvmV1beta1ConfirmGatewayTxResponse],
    '/axelar.evm.v1beta1.ConfirmGatewayTxsRequest': [condenseAxelarEvmV1beta1ConfirmGatewayTxsRequest, expandAxelarEvmV1beta1ConfirmGatewayTxsRequest, decodeAxelarEvmV1beta1ConfirmGatewayTxsRequest],
    '/axelar.evm.v1beta1.ConfirmGatewayTxsResponse': [condenseAxelarEvmV1beta1ConfirmGatewayTxsResponse, expandAxelarEvmV1beta1ConfirmGatewayTxsResponse, decodeAxelarEvmV1beta1ConfirmGatewayTxsResponse],
    '/axelar.evm.v1beta1.ConfirmDepositRequest': [condenseAxelarEvmV1beta1ConfirmDepositRequest, expandAxelarEvmV1beta1ConfirmDepositRequest, decodeAxelarEvmV1beta1ConfirmDepositRequest],
    '/axelar.evm.v1beta1.ConfirmDepositResponse': [condenseAxelarEvmV1beta1ConfirmDepositResponse, expandAxelarEvmV1beta1ConfirmDepositResponse, decodeAxelarEvmV1beta1ConfirmDepositResponse],
    '/axelar.evm.v1beta1.ConfirmTokenRequest': [condenseAxelarEvmV1beta1ConfirmTokenRequest, expandAxelarEvmV1beta1ConfirmTokenRequest, decodeAxelarEvmV1beta1ConfirmTokenRequest],
    '/axelar.evm.v1beta1.ConfirmTokenResponse': [condenseAxelarEvmV1beta1ConfirmTokenResponse, expandAxelarEvmV1beta1ConfirmTokenResponse, decodeAxelarEvmV1beta1ConfirmTokenResponse],
    '/axelar.evm.v1beta1.ConfirmTransferKeyRequest': [condenseAxelarEvmV1beta1ConfirmTransferKeyRequest, expandAxelarEvmV1beta1ConfirmTransferKeyRequest, decodeAxelarEvmV1beta1ConfirmTransferKeyRequest],
    '/axelar.evm.v1beta1.ConfirmTransferKeyResponse': [condenseAxelarEvmV1beta1ConfirmTransferKeyResponse, expandAxelarEvmV1beta1ConfirmTransferKeyResponse, decodeAxelarEvmV1beta1ConfirmTransferKeyResponse],
    '/axelar.evm.v1beta1.LinkRequest': [condenseAxelarEvmV1beta1LinkRequest, expandAxelarEvmV1beta1LinkRequest, decodeAxelarEvmV1beta1LinkRequest],
    '/axelar.evm.v1beta1.LinkResponse': [condenseAxelarEvmV1beta1LinkResponse, expandAxelarEvmV1beta1LinkResponse, decodeAxelarEvmV1beta1LinkResponse],
    '/axelar.evm.v1beta1.CreateBurnTokensRequest': [condenseAxelarEvmV1beta1CreateBurnTokensRequest, expandAxelarEvmV1beta1CreateBurnTokensRequest, decodeAxelarEvmV1beta1CreateBurnTokensRequest],
    '/axelar.evm.v1beta1.CreateBurnTokensResponse': [condenseAxelarEvmV1beta1CreateBurnTokensResponse, expandAxelarEvmV1beta1CreateBurnTokensResponse, decodeAxelarEvmV1beta1CreateBurnTokensResponse],
    '/axelar.evm.v1beta1.CreateDeployTokenRequest': [condenseAxelarEvmV1beta1CreateDeployTokenRequest, expandAxelarEvmV1beta1CreateDeployTokenRequest, decodeAxelarEvmV1beta1CreateDeployTokenRequest],
    '/axelar.evm.v1beta1.CreateDeployTokenResponse': [condenseAxelarEvmV1beta1CreateDeployTokenResponse, expandAxelarEvmV1beta1CreateDeployTokenResponse, decodeAxelarEvmV1beta1CreateDeployTokenResponse],
    '/axelar.evm.v1beta1.CreatePendingTransfersRequest': [condenseAxelarEvmV1beta1CreatePendingTransfersRequest, expandAxelarEvmV1beta1CreatePendingTransfersRequest, decodeAxelarEvmV1beta1CreatePendingTransfersRequest],
    '/axelar.evm.v1beta1.CreatePendingTransfersResponse': [condenseAxelarEvmV1beta1CreatePendingTransfersResponse, expandAxelarEvmV1beta1CreatePendingTransfersResponse, decodeAxelarEvmV1beta1CreatePendingTransfersResponse],
    '/axelar.evm.v1beta1.CreateTransferOwnershipRequest': [condenseAxelarEvmV1beta1CreateTransferOwnershipRequest, expandAxelarEvmV1beta1CreateTransferOwnershipRequest, decodeAxelarEvmV1beta1CreateTransferOwnershipRequest],
    '/axelar.evm.v1beta1.CreateTransferOwnershipResponse': [condenseAxelarEvmV1beta1CreateTransferOwnershipResponse, expandAxelarEvmV1beta1CreateTransferOwnershipResponse, decodeAxelarEvmV1beta1CreateTransferOwnershipResponse],
    '/axelar.evm.v1beta1.CreateTransferOperatorshipRequest': [condenseAxelarEvmV1beta1CreateTransferOperatorshipRequest, expandAxelarEvmV1beta1CreateTransferOperatorshipRequest, decodeAxelarEvmV1beta1CreateTransferOperatorshipRequest],
    '/axelar.evm.v1beta1.CreateTransferOperatorshipResponse': [condenseAxelarEvmV1beta1CreateTransferOperatorshipResponse, expandAxelarEvmV1beta1CreateTransferOperatorshipResponse, decodeAxelarEvmV1beta1CreateTransferOperatorshipResponse],
    '/axelar.evm.v1beta1.SignCommandsRequest': [condenseAxelarEvmV1beta1SignCommandsRequest, expandAxelarEvmV1beta1SignCommandsRequest, decodeAxelarEvmV1beta1SignCommandsRequest],
    '/axelar.evm.v1beta1.SignCommandsResponse': [condenseAxelarEvmV1beta1SignCommandsResponse, expandAxelarEvmV1beta1SignCommandsResponse, decodeAxelarEvmV1beta1SignCommandsResponse],
    '/axelar.evm.v1beta1.AddChainRequest': [condenseAxelarEvmV1beta1AddChainRequest, expandAxelarEvmV1beta1AddChainRequest, decodeAxelarEvmV1beta1AddChainRequest],
    '/axelar.evm.v1beta1.AddChainResponse': [condenseAxelarEvmV1beta1AddChainResponse, expandAxelarEvmV1beta1AddChainResponse, decodeAxelarEvmV1beta1AddChainResponse],
    '/axelar.evm.v1beta1.RetryFailedEventRequest': [condenseAxelarEvmV1beta1RetryFailedEventRequest, expandAxelarEvmV1beta1RetryFailedEventRequest, decodeAxelarEvmV1beta1RetryFailedEventRequest],
    '/axelar.evm.v1beta1.RetryFailedEventResponse': [condenseAxelarEvmV1beta1RetryFailedEventResponse, expandAxelarEvmV1beta1RetryFailedEventResponse, decodeAxelarEvmV1beta1RetryFailedEventResponse],
    '/axelar.evm.v1beta1.PollFailed': [condenseAxelarEvmV1beta1PollFailed, expandAxelarEvmV1beta1PollFailed, decodeAxelarEvmV1beta1PollFailed],
    '/axelar.evm.v1beta1.PollExpired': [condenseAxelarEvmV1beta1PollExpired, expandAxelarEvmV1beta1PollExpired, decodeAxelarEvmV1beta1PollExpired],
    '/axelar.evm.v1beta1.PollCompleted': [condenseAxelarEvmV1beta1PollCompleted, expandAxelarEvmV1beta1PollCompleted, decodeAxelarEvmV1beta1PollCompleted],
    '/axelar.evm.v1beta1.NoEventsConfirmed': [condenseAxelarEvmV1beta1NoEventsConfirmed, expandAxelarEvmV1beta1NoEventsConfirmed, decodeAxelarEvmV1beta1NoEventsConfirmed],
    '/axelar.evm.v1beta1.ConfirmKeyTransferStarted': [condenseAxelarEvmV1beta1ConfirmKeyTransferStarted, expandAxelarEvmV1beta1ConfirmKeyTransferStarted, decodeAxelarEvmV1beta1ConfirmKeyTransferStarted],
    '/axelar.evm.v1beta1.ConfirmGatewayTxStarted': [condenseAxelarEvmV1beta1ConfirmGatewayTxStarted, expandAxelarEvmV1beta1ConfirmGatewayTxStarted, decodeAxelarEvmV1beta1ConfirmGatewayTxStarted],
    '/axelar.evm.v1beta1.PollMapping': [condenseAxelarEvmV1beta1PollMapping, expandAxelarEvmV1beta1PollMapping, decodeAxelarEvmV1beta1PollMapping],
    '/axelar.evm.v1beta1.ConfirmGatewayTxsStarted': [condenseAxelarEvmV1beta1ConfirmGatewayTxsStarted, expandAxelarEvmV1beta1ConfirmGatewayTxsStarted, decodeAxelarEvmV1beta1ConfirmGatewayTxsStarted],
    '/axelar.evm.v1beta1.ConfirmDepositStarted': [condenseAxelarEvmV1beta1ConfirmDepositStarted, expandAxelarEvmV1beta1ConfirmDepositStarted, decodeAxelarEvmV1beta1ConfirmDepositStarted],
    '/axelar.evm.v1beta1.ConfirmTokenStarted': [condenseAxelarEvmV1beta1ConfirmTokenStarted, expandAxelarEvmV1beta1ConfirmTokenStarted, decodeAxelarEvmV1beta1ConfirmTokenStarted],
    '/axelar.evm.v1beta1.ChainAdded': [condenseAxelarEvmV1beta1ChainAdded, expandAxelarEvmV1beta1ChainAdded, decodeAxelarEvmV1beta1ChainAdded],
    '/axelar.evm.v1beta1.CommandBatchSigned': [condenseAxelarEvmV1beta1CommandBatchSigned, expandAxelarEvmV1beta1CommandBatchSigned, decodeAxelarEvmV1beta1CommandBatchSigned],
    '/axelar.evm.v1beta1.CommandBatchAborted': [condenseAxelarEvmV1beta1CommandBatchAborted, expandAxelarEvmV1beta1CommandBatchAborted, decodeAxelarEvmV1beta1CommandBatchAborted],
    '/axelar.evm.v1beta1.EVMEventConfirmed': [condenseAxelarEvmV1beta1EVMEventConfirmed, expandAxelarEvmV1beta1EVMEventConfirmed, decodeAxelarEvmV1beta1EVMEventConfirmed],
    '/axelar.evm.v1beta1.EVMEventCompleted': [condenseAxelarEvmV1beta1EVMEventCompleted, expandAxelarEvmV1beta1EVMEventCompleted, decodeAxelarEvmV1beta1EVMEventCompleted],
    '/axelar.evm.v1beta1.EVMEventFailed': [condenseAxelarEvmV1beta1EVMEventFailed, expandAxelarEvmV1beta1EVMEventFailed, decodeAxelarEvmV1beta1EVMEventFailed],
    '/axelar.evm.v1beta1.EVMEventRetryFailed': [condenseAxelarEvmV1beta1EVMEventRetryFailed, expandAxelarEvmV1beta1EVMEventRetryFailed, decodeAxelarEvmV1beta1EVMEventRetryFailed],
    '/axelar.evm.v1beta1.ContractCallApproved': [condenseAxelarEvmV1beta1ContractCallApproved, expandAxelarEvmV1beta1ContractCallApproved, decodeAxelarEvmV1beta1ContractCallApproved],
    '/axelar.evm.v1beta1.ContractCallFailed': [condenseAxelarEvmV1beta1ContractCallFailed, expandAxelarEvmV1beta1ContractCallFailed, decodeAxelarEvmV1beta1ContractCallFailed],
    '/axelar.evm.v1beta1.ContractCallWithMintApproved': [condenseAxelarEvmV1beta1ContractCallWithMintApproved, expandAxelarEvmV1beta1ContractCallWithMintApproved, decodeAxelarEvmV1beta1ContractCallWithMintApproved],
    '/axelar.evm.v1beta1.TokenSent': [condenseAxelarEvmV1beta1TokenSent, expandAxelarEvmV1beta1TokenSent, decodeAxelarEvmV1beta1TokenSent],
    '/axelar.evm.v1beta1.MintCommand': [condenseAxelarEvmV1beta1MintCommand, expandAxelarEvmV1beta1MintCommand, decodeAxelarEvmV1beta1MintCommand],
    '/axelar.evm.v1beta1.BurnCommand': [condenseAxelarEvmV1beta1BurnCommand, expandAxelarEvmV1beta1BurnCommand, decodeAxelarEvmV1beta1BurnCommand],
    '/axelar.evm.v1beta1.VoteEvents': [condenseAxelarEvmV1beta1VoteEvents, expandAxelarEvmV1beta1VoteEvents, decodeAxelarEvmV1beta1VoteEvents],
    '/axelar.evm.v1beta1.Event': [condenseAxelarEvmV1beta1Event, expandAxelarEvmV1beta1Event, decodeAxelarEvmV1beta1Event],
    '/axelar.evm.v1beta1.EventTokenSent': [condenseAxelarEvmV1beta1EventTokenSent, expandAxelarEvmV1beta1EventTokenSent, decodeAxelarEvmV1beta1EventTokenSent],
    '/axelar.evm.v1beta1.EventContractCall': [condenseAxelarEvmV1beta1EventContractCall, expandAxelarEvmV1beta1EventContractCall, decodeAxelarEvmV1beta1EventContractCall],
    '/axelar.evm.v1beta1.EventContractCallWithToken': [condenseAxelarEvmV1beta1EventContractCallWithToken, expandAxelarEvmV1beta1EventContractCallWithToken, decodeAxelarEvmV1beta1EventContractCallWithToken],
    '/axelar.evm.v1beta1.EventTransfer': [condenseAxelarEvmV1beta1EventTransfer, expandAxelarEvmV1beta1EventTransfer, decodeAxelarEvmV1beta1EventTransfer],
    '/axelar.evm.v1beta1.EventTokenDeployed': [condenseAxelarEvmV1beta1EventTokenDeployed, expandAxelarEvmV1beta1EventTokenDeployed, decodeAxelarEvmV1beta1EventTokenDeployed],
    '/axelar.evm.v1beta1.EventMultisigOwnershipTransferred': [condenseAxelarEvmV1beta1EventMultisigOwnershipTransferred, expandAxelarEvmV1beta1EventMultisigOwnershipTransferred, decodeAxelarEvmV1beta1EventMultisigOwnershipTransferred],
    '/axelar.evm.v1beta1.EventMultisigOperatorshipTransferred': [condenseAxelarEvmV1beta1EventMultisigOperatorshipTransferred, expandAxelarEvmV1beta1EventMultisigOperatorshipTransferred, decodeAxelarEvmV1beta1EventMultisigOperatorshipTransferred],
    '/axelar.evm.v1beta1.NetworkInfo': [condenseAxelarEvmV1beta1NetworkInfo, expandAxelarEvmV1beta1NetworkInfo, decodeAxelarEvmV1beta1NetworkInfo],
    '/axelar.evm.v1beta1.BurnerInfo': [condenseAxelarEvmV1beta1BurnerInfo, expandAxelarEvmV1beta1BurnerInfo, decodeAxelarEvmV1beta1BurnerInfo],
    '/axelar.evm.v1beta1.ERC20Deposit': [condenseAxelarEvmV1beta1ERC20Deposit, expandAxelarEvmV1beta1ERC20Deposit, decodeAxelarEvmV1beta1ERC20Deposit],
    '/axelar.evm.v1beta1.ERC20TokenMetadata': [condenseAxelarEvmV1beta1ERC20TokenMetadata, expandAxelarEvmV1beta1ERC20TokenMetadata, decodeAxelarEvmV1beta1ERC20TokenMetadata],
    '/axelar.evm.v1beta1.TransactionMetadata': [condenseAxelarEvmV1beta1TransactionMetadata, expandAxelarEvmV1beta1TransactionMetadata, decodeAxelarEvmV1beta1TransactionMetadata],
    '/axelar.evm.v1beta1.Command': [condenseAxelarEvmV1beta1Command, expandAxelarEvmV1beta1Command, decodeAxelarEvmV1beta1Command],
    '/axelar.evm.v1beta1.CommandBatchMetadata': [condenseAxelarEvmV1beta1CommandBatchMetadata, expandAxelarEvmV1beta1CommandBatchMetadata, decodeAxelarEvmV1beta1CommandBatchMetadata],
    '/axelar.evm.v1beta1.SigMetadata': [condenseAxelarEvmV1beta1SigMetadata, expandAxelarEvmV1beta1SigMetadata, decodeAxelarEvmV1beta1SigMetadata],
    '/axelar.evm.v1beta1.TransferKey': [condenseAxelarEvmV1beta1TransferKey, expandAxelarEvmV1beta1TransferKey, decodeAxelarEvmV1beta1TransferKey],
    '/axelar.evm.v1beta1.Asset': [condenseAxelarEvmV1beta1Asset, expandAxelarEvmV1beta1Asset, decodeAxelarEvmV1beta1Asset],
    '/axelar.evm.v1beta1.TokenDetails': [condenseAxelarEvmV1beta1TokenDetails, expandAxelarEvmV1beta1TokenDetails, decodeAxelarEvmV1beta1TokenDetails],
    '/axelar.evm.v1beta1.Gateway': [condenseAxelarEvmV1beta1Gateway, expandAxelarEvmV1beta1Gateway, decodeAxelarEvmV1beta1Gateway],
    '/axelar.evm.v1beta1.PollMetadata': [condenseAxelarEvmV1beta1PollMetadata, expandAxelarEvmV1beta1PollMetadata, decodeAxelarEvmV1beta1PollMetadata],
    '/axelar.evm.v1beta1.DepositQueryParams': [condenseAxelarEvmV1beta1DepositQueryParams, expandAxelarEvmV1beta1DepositQueryParams, decodeAxelarEvmV1beta1DepositQueryParams],
    '/axelar.evm.v1beta1.BatchedCommandsRequest': [condenseAxelarEvmV1beta1BatchedCommandsRequest, expandAxelarEvmV1beta1BatchedCommandsRequest, decodeAxelarEvmV1beta1BatchedCommandsRequest],
    '/axelar.evm.v1beta1.BatchedCommandsResponse': [condenseAxelarEvmV1beta1BatchedCommandsResponse, expandAxelarEvmV1beta1BatchedCommandsResponse, decodeAxelarEvmV1beta1BatchedCommandsResponse],
    '/axelar.evm.v1beta1.KeyAddressRequest': [condenseAxelarEvmV1beta1KeyAddressRequest, expandAxelarEvmV1beta1KeyAddressRequest, decodeAxelarEvmV1beta1KeyAddressRequest],
    '/axelar.evm.v1beta1.KeyAddressResponse': [condenseAxelarEvmV1beta1KeyAddressResponse, expandAxelarEvmV1beta1KeyAddressResponse, decodeAxelarEvmV1beta1KeyAddressResponse],
    '/axelar.evm.v1beta1.QueryTokenAddressResponse': [condenseAxelarEvmV1beta1QueryTokenAddressResponse, expandAxelarEvmV1beta1QueryTokenAddressResponse, decodeAxelarEvmV1beta1QueryTokenAddressResponse],
    '/axelar.evm.v1beta1.QueryDepositStateParams': [condenseAxelarEvmV1beta1QueryDepositStateParams, expandAxelarEvmV1beta1QueryDepositStateParams, decodeAxelarEvmV1beta1QueryDepositStateParams],
    '/axelar.evm.v1beta1.DepositStateRequest': [condenseAxelarEvmV1beta1DepositStateRequest, expandAxelarEvmV1beta1DepositStateRequest, decodeAxelarEvmV1beta1DepositStateRequest],
    '/axelar.evm.v1beta1.DepositStateResponse': [condenseAxelarEvmV1beta1DepositStateResponse, expandAxelarEvmV1beta1DepositStateResponse, decodeAxelarEvmV1beta1DepositStateResponse],
    '/axelar.evm.v1beta1.EventRequest': [condenseAxelarEvmV1beta1EventRequest, expandAxelarEvmV1beta1EventRequest, decodeAxelarEvmV1beta1EventRequest],
    '/axelar.evm.v1beta1.EventResponse': [condenseAxelarEvmV1beta1EventResponse, expandAxelarEvmV1beta1EventResponse, decodeAxelarEvmV1beta1EventResponse],
    '/axelar.evm.v1beta1.QueryBurnerAddressResponse': [condenseAxelarEvmV1beta1QueryBurnerAddressResponse, expandAxelarEvmV1beta1QueryBurnerAddressResponse, decodeAxelarEvmV1beta1QueryBurnerAddressResponse],
    '/axelar.evm.v1beta1.ChainsRequest': [condenseAxelarEvmV1beta1ChainsRequest, expandAxelarEvmV1beta1ChainsRequest, decodeAxelarEvmV1beta1ChainsRequest],
    '/axelar.evm.v1beta1.ChainsResponse': [condenseAxelarEvmV1beta1ChainsResponse, expandAxelarEvmV1beta1ChainsResponse, decodeAxelarEvmV1beta1ChainsResponse],
    '/axelar.evm.v1beta1.CommandRequest': [condenseAxelarEvmV1beta1CommandRequest, expandAxelarEvmV1beta1CommandRequest, decodeAxelarEvmV1beta1CommandRequest],
    '/axelar.evm.v1beta1.CommandResponse': [condenseAxelarEvmV1beta1CommandResponse, expandAxelarEvmV1beta1CommandResponse, decodeAxelarEvmV1beta1CommandResponse],
    '/axelar.evm.v1beta1.PendingCommandsRequest': [condenseAxelarEvmV1beta1PendingCommandsRequest, expandAxelarEvmV1beta1PendingCommandsRequest, decodeAxelarEvmV1beta1PendingCommandsRequest],
    '/axelar.evm.v1beta1.PendingCommandsResponse': [condenseAxelarEvmV1beta1PendingCommandsResponse, expandAxelarEvmV1beta1PendingCommandsResponse, decodeAxelarEvmV1beta1PendingCommandsResponse],
    '/axelar.evm.v1beta1.QueryCommandResponse': [condenseAxelarEvmV1beta1QueryCommandResponse, expandAxelarEvmV1beta1QueryCommandResponse, decodeAxelarEvmV1beta1QueryCommandResponse],
    '/axelar.evm.v1beta1.BurnerInfoRequest': [condenseAxelarEvmV1beta1BurnerInfoRequest, expandAxelarEvmV1beta1BurnerInfoRequest, decodeAxelarEvmV1beta1BurnerInfoRequest],
    '/axelar.evm.v1beta1.BurnerInfoResponse': [condenseAxelarEvmV1beta1BurnerInfoResponse, expandAxelarEvmV1beta1BurnerInfoResponse, decodeAxelarEvmV1beta1BurnerInfoResponse],
    '/axelar.evm.v1beta1.ConfirmationHeightRequest': [condenseAxelarEvmV1beta1ConfirmationHeightRequest, expandAxelarEvmV1beta1ConfirmationHeightRequest, decodeAxelarEvmV1beta1ConfirmationHeightRequest],
    '/axelar.evm.v1beta1.ConfirmationHeightResponse': [condenseAxelarEvmV1beta1ConfirmationHeightResponse, expandAxelarEvmV1beta1ConfirmationHeightResponse, decodeAxelarEvmV1beta1ConfirmationHeightResponse],
    '/axelar.evm.v1beta1.GatewayAddressRequest': [condenseAxelarEvmV1beta1GatewayAddressRequest, expandAxelarEvmV1beta1GatewayAddressRequest, decodeAxelarEvmV1beta1GatewayAddressRequest],
    '/axelar.evm.v1beta1.GatewayAddressResponse': [condenseAxelarEvmV1beta1GatewayAddressResponse, expandAxelarEvmV1beta1GatewayAddressResponse, decodeAxelarEvmV1beta1GatewayAddressResponse],
    '/axelar.evm.v1beta1.BytecodeRequest': [condenseAxelarEvmV1beta1BytecodeRequest, expandAxelarEvmV1beta1BytecodeRequest, decodeAxelarEvmV1beta1BytecodeRequest],
    '/axelar.evm.v1beta1.BytecodeResponse': [condenseAxelarEvmV1beta1BytecodeResponse, expandAxelarEvmV1beta1BytecodeResponse, decodeAxelarEvmV1beta1BytecodeResponse],
    '/axelar.evm.v1beta1.ERC20TokensRequest': [condenseAxelarEvmV1beta1ERC20TokensRequest, expandAxelarEvmV1beta1ERC20TokensRequest, decodeAxelarEvmV1beta1ERC20TokensRequest],
    '/axelar.evm.v1beta1.ERC20TokensResponse': [condenseAxelarEvmV1beta1ERC20TokensResponse, expandAxelarEvmV1beta1ERC20TokensResponse, decodeAxelarEvmV1beta1ERC20TokensResponse],
    '/axelar.evm.v1beta1.TokenInfoRequest': [condenseAxelarEvmV1beta1TokenInfoRequest, expandAxelarEvmV1beta1TokenInfoRequest, decodeAxelarEvmV1beta1TokenInfoRequest],
    '/axelar.evm.v1beta1.TokenInfoResponse': [condenseAxelarEvmV1beta1TokenInfoResponse, expandAxelarEvmV1beta1TokenInfoResponse, decodeAxelarEvmV1beta1TokenInfoResponse],
    '/axelar.evm.v1beta1.Proof': [condenseAxelarEvmV1beta1Proof, expandAxelarEvmV1beta1Proof, decodeAxelarEvmV1beta1Proof],
    '/axelar.evm.v1beta1.ParamsRequest': [condenseAxelarEvmV1beta1ParamsRequest, expandAxelarEvmV1beta1ParamsRequest, decodeAxelarEvmV1beta1ParamsRequest],
    '/axelar.evm.v1beta1.ParamsResponse': [condenseAxelarEvmV1beta1ParamsResponse, expandAxelarEvmV1beta1ParamsResponse, decodeAxelarEvmV1beta1ParamsResponse],
    '/axelar.evm.v1beta1.GenesisState': [condenseAxelarEvmV1beta1GenesisState, expandAxelarEvmV1beta1GenesisState, decodeAxelarEvmV1beta1GenesisState],
    '/axelar.evm.v1beta1.Params': [condenseAxelarEvmV1beta1Params, expandAxelarEvmV1beta1Params, decodeAxelarEvmV1beta1Params],
    '/axelar.evm.v1beta1.PendingChain': [condenseAxelarEvmV1beta1PendingChain, expandAxelarEvmV1beta1PendingChain, decodeAxelarEvmV1beta1PendingChain],
    '/axelar.tss.tofnd.v1beta1.KeygenRequest': [condenseAxelarTssTofndV1beta1KeygenRequest, expandAxelarTssTofndV1beta1KeygenRequest, decodeAxelarTssTofndV1beta1KeygenRequest],
    '/axelar.tss.tofnd.v1beta1.KeygenResponse': [condenseAxelarTssTofndV1beta1KeygenResponse, expandAxelarTssTofndV1beta1KeygenResponse, decodeAxelarTssTofndV1beta1KeygenResponse],
    '/axelar.tss.tofnd.v1beta1.SignRequest': [condenseAxelarTssTofndV1beta1SignRequest, expandAxelarTssTofndV1beta1SignRequest, decodeAxelarTssTofndV1beta1SignRequest],
    '/axelar.tss.tofnd.v1beta1.SignResponse': [condenseAxelarTssTofndV1beta1SignResponse, expandAxelarTssTofndV1beta1SignResponse, decodeAxelarTssTofndV1beta1SignResponse],
    '/axelar.tss.tofnd.v1beta1.RecoverRequest': [condenseAxelarTssTofndV1beta1RecoverRequest, expandAxelarTssTofndV1beta1RecoverRequest, decodeAxelarTssTofndV1beta1RecoverRequest],
    '/axelar.tss.tofnd.v1beta1.RecoverResponse': [condenseAxelarTssTofndV1beta1RecoverResponse, expandAxelarTssTofndV1beta1RecoverResponse, decodeAxelarTssTofndV1beta1RecoverResponse],
    '/axelar.tss.tofnd.v1beta1.KeygenOutput': [condenseAxelarTssTofndV1beta1KeygenOutput, expandAxelarTssTofndV1beta1KeygenOutput, decodeAxelarTssTofndV1beta1KeygenOutput],
    '/axelar.tss.tofnd.v1beta1.MessageIn': [condenseAxelarTssTofndV1beta1MessageIn, expandAxelarTssTofndV1beta1MessageIn, decodeAxelarTssTofndV1beta1MessageIn],
    '/axelar.tss.tofnd.v1beta1.MessageOut': [condenseAxelarTssTofndV1beta1MessageOut, expandAxelarTssTofndV1beta1MessageOut, decodeAxelarTssTofndV1beta1MessageOut],
    '/axelar.tss.tofnd.v1beta1.TrafficIn': [condenseAxelarTssTofndV1beta1TrafficIn, expandAxelarTssTofndV1beta1TrafficIn, decodeAxelarTssTofndV1beta1TrafficIn],
    '/axelar.tss.tofnd.v1beta1.TrafficOut': [condenseAxelarTssTofndV1beta1TrafficOut, expandAxelarTssTofndV1beta1TrafficOut, decodeAxelarTssTofndV1beta1TrafficOut],
    '/axelar.tss.tofnd.v1beta1.KeygenInit': [condenseAxelarTssTofndV1beta1KeygenInit, expandAxelarTssTofndV1beta1KeygenInit, decodeAxelarTssTofndV1beta1KeygenInit],
    '/axelar.tss.tofnd.v1beta1.SignInit': [condenseAxelarTssTofndV1beta1SignInit, expandAxelarTssTofndV1beta1SignInit, decodeAxelarTssTofndV1beta1SignInit],
    '/axelar.tss.tofnd.v1beta1.KeyPresenceRequest': [condenseAxelarTssTofndV1beta1KeyPresenceRequest, expandAxelarTssTofndV1beta1KeyPresenceRequest, decodeAxelarTssTofndV1beta1KeyPresenceRequest],
    '/axelar.tss.tofnd.v1beta1.KeyPresenceResponse': [condenseAxelarTssTofndV1beta1KeyPresenceResponse, expandAxelarTssTofndV1beta1KeyPresenceResponse, decodeAxelarTssTofndV1beta1KeyPresenceResponse],
    '/axelar.tss.exported.v1beta1.KeyRequirement': [condenseAxelarTssExportedV1beta1KeyRequirement, expandAxelarTssExportedV1beta1KeyRequirement, decodeAxelarTssExportedV1beta1KeyRequirement],
    '/axelar.tss.exported.v1beta1.SigKeyPair': [condenseAxelarTssExportedV1beta1SigKeyPair, expandAxelarTssExportedV1beta1SigKeyPair, decodeAxelarTssExportedV1beta1SigKeyPair],
    '/axelar.tss.v1beta1.StartKeygenRequest': [condenseAxelarTssV1beta1StartKeygenRequest, expandAxelarTssV1beta1StartKeygenRequest, decodeAxelarTssV1beta1StartKeygenRequest],
    '/axelar.tss.v1beta1.StartKeygenResponse': [condenseAxelarTssV1beta1StartKeygenResponse, expandAxelarTssV1beta1StartKeygenResponse, decodeAxelarTssV1beta1StartKeygenResponse],
    '/axelar.tss.v1beta1.RotateKeyRequest': [condenseAxelarTssV1beta1RotateKeyRequest, expandAxelarTssV1beta1RotateKeyRequest, decodeAxelarTssV1beta1RotateKeyRequest],
    '/axelar.tss.v1beta1.RotateKeyResponse': [condenseAxelarTssV1beta1RotateKeyResponse, expandAxelarTssV1beta1RotateKeyResponse, decodeAxelarTssV1beta1RotateKeyResponse],
    '/axelar.tss.v1beta1.ProcessKeygenTrafficRequest': [condenseAxelarTssV1beta1ProcessKeygenTrafficRequest, expandAxelarTssV1beta1ProcessKeygenTrafficRequest, decodeAxelarTssV1beta1ProcessKeygenTrafficRequest],
    '/axelar.tss.v1beta1.ProcessKeygenTrafficResponse': [condenseAxelarTssV1beta1ProcessKeygenTrafficResponse, expandAxelarTssV1beta1ProcessKeygenTrafficResponse, decodeAxelarTssV1beta1ProcessKeygenTrafficResponse],
    '/axelar.tss.v1beta1.ProcessSignTrafficRequest': [condenseAxelarTssV1beta1ProcessSignTrafficRequest, expandAxelarTssV1beta1ProcessSignTrafficRequest, decodeAxelarTssV1beta1ProcessSignTrafficRequest],
    '/axelar.tss.v1beta1.ProcessSignTrafficResponse': [condenseAxelarTssV1beta1ProcessSignTrafficResponse, expandAxelarTssV1beta1ProcessSignTrafficResponse, decodeAxelarTssV1beta1ProcessSignTrafficResponse],
    '/axelar.tss.v1beta1.VotePubKeyRequest': [condenseAxelarTssV1beta1VotePubKeyRequest, expandAxelarTssV1beta1VotePubKeyRequest, decodeAxelarTssV1beta1VotePubKeyRequest],
    '/axelar.tss.v1beta1.VotePubKeyResponse': [condenseAxelarTssV1beta1VotePubKeyResponse, expandAxelarTssV1beta1VotePubKeyResponse, decodeAxelarTssV1beta1VotePubKeyResponse],
    '/axelar.tss.v1beta1.VoteSigRequest': [condenseAxelarTssV1beta1VoteSigRequest, expandAxelarTssV1beta1VoteSigRequest, decodeAxelarTssV1beta1VoteSigRequest],
    '/axelar.tss.v1beta1.VoteSigResponse': [condenseAxelarTssV1beta1VoteSigResponse, expandAxelarTssV1beta1VoteSigResponse, decodeAxelarTssV1beta1VoteSigResponse],
    '/axelar.tss.v1beta1.HeartBeatRequest': [condenseAxelarTssV1beta1HeartBeatRequest, expandAxelarTssV1beta1HeartBeatRequest, decodeAxelarTssV1beta1HeartBeatRequest],
    '/axelar.tss.v1beta1.HeartBeatResponse': [condenseAxelarTssV1beta1HeartBeatResponse, expandAxelarTssV1beta1HeartBeatResponse, decodeAxelarTssV1beta1HeartBeatResponse],
    '/axelar.tss.v1beta1.RegisterExternalKeysRequest': [condenseAxelarTssV1beta1RegisterExternalKeysRequest, expandAxelarTssV1beta1RegisterExternalKeysRequest, decodeAxelarTssV1beta1RegisterExternalKeysRequest],
    '/axelar.tss.v1beta1.RegisterExternalKeysResponse': [condenseAxelarTssV1beta1RegisterExternalKeysResponse, expandAxelarTssV1beta1RegisterExternalKeysResponse, decodeAxelarTssV1beta1RegisterExternalKeysResponse],
    '/axelar.tss.v1beta1.SubmitMultisigPubKeysRequest': [condenseAxelarTssV1beta1SubmitMultisigPubKeysRequest, expandAxelarTssV1beta1SubmitMultisigPubKeysRequest, decodeAxelarTssV1beta1SubmitMultisigPubKeysRequest],
    '/axelar.tss.v1beta1.SubmitMultisigPubKeysResponse': [condenseAxelarTssV1beta1SubmitMultisigPubKeysResponse, expandAxelarTssV1beta1SubmitMultisigPubKeysResponse, decodeAxelarTssV1beta1SubmitMultisigPubKeysResponse],
    '/axelar.tss.v1beta1.SubmitMultisigSignaturesRequest': [condenseAxelarTssV1beta1SubmitMultisigSignaturesRequest, expandAxelarTssV1beta1SubmitMultisigSignaturesRequest, decodeAxelarTssV1beta1SubmitMultisigSignaturesRequest],
    '/axelar.tss.v1beta1.SubmitMultisigSignaturesResponse': [condenseAxelarTssV1beta1SubmitMultisigSignaturesResponse, expandAxelarTssV1beta1SubmitMultisigSignaturesResponse, decodeAxelarTssV1beta1SubmitMultisigSignaturesResponse],
    '/axelar.tss.v1beta1.KeygenVoteData': [condenseAxelarTssV1beta1KeygenVoteData, expandAxelarTssV1beta1KeygenVoteData, decodeAxelarTssV1beta1KeygenVoteData],
    '/axelar.tss.v1beta1.KeyInfo': [condenseAxelarTssV1beta1KeyInfo, expandAxelarTssV1beta1KeyInfo, decodeAxelarTssV1beta1KeyInfo],
    '/axelar.tss.v1beta1.MultisigInfo': [condenseAxelarTssV1beta1MultisigInfo, expandAxelarTssV1beta1MultisigInfo, decodeAxelarTssV1beta1MultisigInfo],
    '/axelar.tss.v1beta1.KeyRecoveryInfo': [condenseAxelarTssV1beta1KeyRecoveryInfo, expandAxelarTssV1beta1KeyRecoveryInfo, decodeAxelarTssV1beta1KeyRecoveryInfo],
    '/axelar.tss.v1beta1.ExternalKeys': [condenseAxelarTssV1beta1ExternalKeys, expandAxelarTssV1beta1ExternalKeys, decodeAxelarTssV1beta1ExternalKeys],
    '/axelar.tss.v1beta1.ValidatorStatus': [condenseAxelarTssV1beta1ValidatorStatus, expandAxelarTssV1beta1ValidatorStatus, decodeAxelarTssV1beta1ValidatorStatus],
    '/axelar.tss.v1beta1.ParamsRequest': [condenseAxelarTssV1beta1ParamsRequest, expandAxelarTssV1beta1ParamsRequest, decodeAxelarTssV1beta1ParamsRequest],
    '/axelar.tss.v1beta1.ParamsResponse': [condenseAxelarTssV1beta1ParamsResponse, expandAxelarTssV1beta1ParamsResponse, decodeAxelarTssV1beta1ParamsResponse],
    '/axelar.tss.v1beta1.GenesisState': [condenseAxelarTssV1beta1GenesisState, expandAxelarTssV1beta1GenesisState, decodeAxelarTssV1beta1GenesisState],
    '/axelar.tss.v1beta1.Params': [condenseAxelarTssV1beta1Params, expandAxelarTssV1beta1Params, decodeAxelarTssV1beta1Params],
    '/axelar.permission.v1beta1.UpdateGovernanceKeyRequest': [condenseAxelarPermissionV1beta1UpdateGovernanceKeyRequest, expandAxelarPermissionV1beta1UpdateGovernanceKeyRequest, decodeAxelarPermissionV1beta1UpdateGovernanceKeyRequest],
    '/axelar.permission.v1beta1.UpdateGovernanceKeyResponse': [condenseAxelarPermissionV1beta1UpdateGovernanceKeyResponse, expandAxelarPermissionV1beta1UpdateGovernanceKeyResponse, decodeAxelarPermissionV1beta1UpdateGovernanceKeyResponse],
    '/axelar.permission.v1beta1.RegisterControllerRequest': [condenseAxelarPermissionV1beta1RegisterControllerRequest, expandAxelarPermissionV1beta1RegisterControllerRequest, decodeAxelarPermissionV1beta1RegisterControllerRequest],
    '/axelar.permission.v1beta1.RegisterControllerResponse': [condenseAxelarPermissionV1beta1RegisterControllerResponse, expandAxelarPermissionV1beta1RegisterControllerResponse, decodeAxelarPermissionV1beta1RegisterControllerResponse],
    '/axelar.permission.v1beta1.DeregisterControllerRequest': [condenseAxelarPermissionV1beta1DeregisterControllerRequest, expandAxelarPermissionV1beta1DeregisterControllerRequest, decodeAxelarPermissionV1beta1DeregisterControllerRequest],
    '/axelar.permission.v1beta1.DeregisterControllerResponse': [condenseAxelarPermissionV1beta1DeregisterControllerResponse, expandAxelarPermissionV1beta1DeregisterControllerResponse, decodeAxelarPermissionV1beta1DeregisterControllerResponse],
    '/axelar.permission.v1beta1.GovAccount': [condenseAxelarPermissionV1beta1GovAccount, expandAxelarPermissionV1beta1GovAccount, decodeAxelarPermissionV1beta1GovAccount],
    '/axelar.permission.v1beta1.QueryGovernanceKeyRequest': [condenseAxelarPermissionV1beta1QueryGovernanceKeyRequest, expandAxelarPermissionV1beta1QueryGovernanceKeyRequest, decodeAxelarPermissionV1beta1QueryGovernanceKeyRequest],
    '/axelar.permission.v1beta1.QueryGovernanceKeyResponse': [condenseAxelarPermissionV1beta1QueryGovernanceKeyResponse, expandAxelarPermissionV1beta1QueryGovernanceKeyResponse, decodeAxelarPermissionV1beta1QueryGovernanceKeyResponse],
    '/axelar.permission.v1beta1.ParamsRequest': [condenseAxelarPermissionV1beta1ParamsRequest, expandAxelarPermissionV1beta1ParamsRequest, decodeAxelarPermissionV1beta1ParamsRequest],
    '/axelar.permission.v1beta1.ParamsResponse': [condenseAxelarPermissionV1beta1ParamsResponse, expandAxelarPermissionV1beta1ParamsResponse, decodeAxelarPermissionV1beta1ParamsResponse],
    '/axelar.permission.v1beta1.GenesisState': [condenseAxelarPermissionV1beta1GenesisState, expandAxelarPermissionV1beta1GenesisState, decodeAxelarPermissionV1beta1GenesisState],
    '/axelar.permission.v1beta1.Params': [condenseAxelarPermissionV1beta1Params, expandAxelarPermissionV1beta1Params, decodeAxelarPermissionV1beta1Params],
    '/gaia.globalfee.v1beta1.QueryParamsRequest': [condenseGaiaGlobalfeeV1beta1QueryParamsRequest, expandGaiaGlobalfeeV1beta1QueryParamsRequest, decodeGaiaGlobalfeeV1beta1QueryParamsRequest],
    '/gaia.globalfee.v1beta1.QueryParamsResponse': [condenseGaiaGlobalfeeV1beta1QueryParamsResponse, expandGaiaGlobalfeeV1beta1QueryParamsResponse, decodeGaiaGlobalfeeV1beta1QueryParamsResponse],
    '/gaia.globalfee.v1beta1.GenesisState': [condenseGaiaGlobalfeeV1beta1GenesisState, expandGaiaGlobalfeeV1beta1GenesisState, decodeGaiaGlobalfeeV1beta1GenesisState],
    '/gaia.globalfee.v1beta1.Params': [condenseGaiaGlobalfeeV1beta1Params, expandGaiaGlobalfeeV1beta1Params, decodeGaiaGlobalfeeV1beta1Params],
    '/juno.cwhooks.v1.MsgUpdateParams': [condenseJunoCwhooksV1MsgUpdateParams, expandJunoCwhooksV1MsgUpdateParams, decodeJunoCwhooksV1MsgUpdateParams],
    '/juno.cwhooks.v1.MsgUpdateParamsResponse': [condenseJunoCwhooksV1MsgUpdateParamsResponse, expandJunoCwhooksV1MsgUpdateParamsResponse, decodeJunoCwhooksV1MsgUpdateParamsResponse],
    '/juno.cwhooks.v1.MsgRegisterStaking': [condenseJunoCwhooksV1MsgRegisterStaking, expandJunoCwhooksV1MsgRegisterStaking, decodeJunoCwhooksV1MsgRegisterStaking],
    '/juno.cwhooks.v1.MsgRegisterStakingResponse': [condenseJunoCwhooksV1MsgRegisterStakingResponse, expandJunoCwhooksV1MsgRegisterStakingResponse, decodeJunoCwhooksV1MsgRegisterStakingResponse],
    '/juno.cwhooks.v1.MsgRegisterGovernance': [condenseJunoCwhooksV1MsgRegisterGovernance, expandJunoCwhooksV1MsgRegisterGovernance, decodeJunoCwhooksV1MsgRegisterGovernance],
    '/juno.cwhooks.v1.MsgRegisterGovernanceResponse': [condenseJunoCwhooksV1MsgRegisterGovernanceResponse, expandJunoCwhooksV1MsgRegisterGovernanceResponse, decodeJunoCwhooksV1MsgRegisterGovernanceResponse],
    '/juno.cwhooks.v1.MsgUnregisterGovernance': [condenseJunoCwhooksV1MsgUnregisterGovernance, expandJunoCwhooksV1MsgUnregisterGovernance, decodeJunoCwhooksV1MsgUnregisterGovernance],
    '/juno.cwhooks.v1.MsgUnregisterGovernanceResponse': [condenseJunoCwhooksV1MsgUnregisterGovernanceResponse, expandJunoCwhooksV1MsgUnregisterGovernanceResponse, decodeJunoCwhooksV1MsgUnregisterGovernanceResponse],
    '/juno.cwhooks.v1.MsgUnregisterStaking': [condenseJunoCwhooksV1MsgUnregisterStaking, expandJunoCwhooksV1MsgUnregisterStaking, decodeJunoCwhooksV1MsgUnregisterStaking],
    '/juno.cwhooks.v1.MsgUnregisterStakingResponse': [condenseJunoCwhooksV1MsgUnregisterStakingResponse, expandJunoCwhooksV1MsgUnregisterStakingResponse, decodeJunoCwhooksV1MsgUnregisterStakingResponse],
    '/juno.cwhooks.v1.QueryParamsRequest': [condenseJunoCwhooksV1QueryParamsRequest, expandJunoCwhooksV1QueryParamsRequest, decodeJunoCwhooksV1QueryParamsRequest],
    '/juno.cwhooks.v1.QueryParamsResponse': [condenseJunoCwhooksV1QueryParamsResponse, expandJunoCwhooksV1QueryParamsResponse, decodeJunoCwhooksV1QueryParamsResponse],
    '/juno.cwhooks.v1.QueryStakingContractsRequest': [condenseJunoCwhooksV1QueryStakingContractsRequest, expandJunoCwhooksV1QueryStakingContractsRequest, decodeJunoCwhooksV1QueryStakingContractsRequest],
    '/juno.cwhooks.v1.QueryStakingContractsResponse': [condenseJunoCwhooksV1QueryStakingContractsResponse, expandJunoCwhooksV1QueryStakingContractsResponse, decodeJunoCwhooksV1QueryStakingContractsResponse],
    '/juno.cwhooks.v1.QueryGovernanceContractsRequest': [condenseJunoCwhooksV1QueryGovernanceContractsRequest, expandJunoCwhooksV1QueryGovernanceContractsRequest, decodeJunoCwhooksV1QueryGovernanceContractsRequest],
    '/juno.cwhooks.v1.QueryGovernanceContractsResponse': [condenseJunoCwhooksV1QueryGovernanceContractsResponse, expandJunoCwhooksV1QueryGovernanceContractsResponse, decodeJunoCwhooksV1QueryGovernanceContractsResponse],
    '/juno.cwhooks.v1.GenesisState': [condenseJunoCwhooksV1GenesisState, expandJunoCwhooksV1GenesisState, decodeJunoCwhooksV1GenesisState],
    '/juno.cwhooks.v1.Params': [condenseJunoCwhooksV1Params, expandJunoCwhooksV1Params, decodeJunoCwhooksV1Params],
    '/juno.drip.v1.MsgDistributeTokens': [condenseJunoDripV1MsgDistributeTokens, expandJunoDripV1MsgDistributeTokens, decodeJunoDripV1MsgDistributeTokens],
    '/juno.drip.v1.MsgDistributeTokensResponse': [condenseJunoDripV1MsgDistributeTokensResponse, expandJunoDripV1MsgDistributeTokensResponse, decodeJunoDripV1MsgDistributeTokensResponse],
    '/juno.drip.v1.MsgUpdateParams': [condenseJunoDripV1MsgUpdateParams, expandJunoDripV1MsgUpdateParams, decodeJunoDripV1MsgUpdateParams],
    '/juno.drip.v1.MsgUpdateParamsResponse': [condenseJunoDripV1MsgUpdateParamsResponse, expandJunoDripV1MsgUpdateParamsResponse, decodeJunoDripV1MsgUpdateParamsResponse],
    '/juno.drip.v1.QueryParamsRequest': [condenseJunoDripV1QueryParamsRequest, expandJunoDripV1QueryParamsRequest, decodeJunoDripV1QueryParamsRequest],
    '/juno.drip.v1.QueryParamsResponse': [condenseJunoDripV1QueryParamsResponse, expandJunoDripV1QueryParamsResponse, decodeJunoDripV1QueryParamsResponse],
    '/juno.drip.v1.GenesisState': [condenseJunoDripV1GenesisState, expandJunoDripV1GenesisState, decodeJunoDripV1GenesisState],
    '/juno.drip.v1.Params': [condenseJunoDripV1Params, expandJunoDripV1Params, decodeJunoDripV1Params],
    '/juno.feeshare.v1.MsgRegisterFeeShare': [condenseJunoFeeshareV1MsgRegisterFeeShare, expandJunoFeeshareV1MsgRegisterFeeShare, decodeJunoFeeshareV1MsgRegisterFeeShare],
    '/juno.feeshare.v1.MsgRegisterFeeShareResponse': [condenseJunoFeeshareV1MsgRegisterFeeShareResponse, expandJunoFeeshareV1MsgRegisterFeeShareResponse, decodeJunoFeeshareV1MsgRegisterFeeShareResponse],
    '/juno.feeshare.v1.MsgUpdateFeeShare': [condenseJunoFeeshareV1MsgUpdateFeeShare, expandJunoFeeshareV1MsgUpdateFeeShare, decodeJunoFeeshareV1MsgUpdateFeeShare],
    '/juno.feeshare.v1.MsgUpdateFeeShareResponse': [condenseJunoFeeshareV1MsgUpdateFeeShareResponse, expandJunoFeeshareV1MsgUpdateFeeShareResponse, decodeJunoFeeshareV1MsgUpdateFeeShareResponse],
    '/juno.feeshare.v1.MsgCancelFeeShare': [condenseJunoFeeshareV1MsgCancelFeeShare, expandJunoFeeshareV1MsgCancelFeeShare, decodeJunoFeeshareV1MsgCancelFeeShare],
    '/juno.feeshare.v1.MsgCancelFeeShareResponse': [condenseJunoFeeshareV1MsgCancelFeeShareResponse, expandJunoFeeshareV1MsgCancelFeeShareResponse, decodeJunoFeeshareV1MsgCancelFeeShareResponse],
    '/juno.feeshare.v1.MsgUpdateParams': [condenseJunoFeeshareV1MsgUpdateParams, expandJunoFeeshareV1MsgUpdateParams, decodeJunoFeeshareV1MsgUpdateParams],
    '/juno.feeshare.v1.MsgUpdateParamsResponse': [condenseJunoFeeshareV1MsgUpdateParamsResponse, expandJunoFeeshareV1MsgUpdateParamsResponse, decodeJunoFeeshareV1MsgUpdateParamsResponse],
    '/juno.feeshare.v1.QueryFeeSharesRequest': [condenseJunoFeeshareV1QueryFeeSharesRequest, expandJunoFeeshareV1QueryFeeSharesRequest, decodeJunoFeeshareV1QueryFeeSharesRequest],
    '/juno.feeshare.v1.QueryFeeSharesResponse': [condenseJunoFeeshareV1QueryFeeSharesResponse, expandJunoFeeshareV1QueryFeeSharesResponse, decodeJunoFeeshareV1QueryFeeSharesResponse],
    '/juno.feeshare.v1.QueryFeeShareRequest': [condenseJunoFeeshareV1QueryFeeShareRequest, expandJunoFeeshareV1QueryFeeShareRequest, decodeJunoFeeshareV1QueryFeeShareRequest],
    '/juno.feeshare.v1.QueryFeeShareResponse': [condenseJunoFeeshareV1QueryFeeShareResponse, expandJunoFeeshareV1QueryFeeShareResponse, decodeJunoFeeshareV1QueryFeeShareResponse],
    '/juno.feeshare.v1.QueryParamsRequest': [condenseJunoFeeshareV1QueryParamsRequest, expandJunoFeeshareV1QueryParamsRequest, decodeJunoFeeshareV1QueryParamsRequest],
    '/juno.feeshare.v1.QueryParamsResponse': [condenseJunoFeeshareV1QueryParamsResponse, expandJunoFeeshareV1QueryParamsResponse, decodeJunoFeeshareV1QueryParamsResponse],
    '/juno.feeshare.v1.QueryDeployerFeeSharesRequest': [condenseJunoFeeshareV1QueryDeployerFeeSharesRequest, expandJunoFeeshareV1QueryDeployerFeeSharesRequest, decodeJunoFeeshareV1QueryDeployerFeeSharesRequest],
    '/juno.feeshare.v1.QueryDeployerFeeSharesResponse': [condenseJunoFeeshareV1QueryDeployerFeeSharesResponse, expandJunoFeeshareV1QueryDeployerFeeSharesResponse, decodeJunoFeeshareV1QueryDeployerFeeSharesResponse],
    '/juno.feeshare.v1.QueryWithdrawerFeeSharesRequest': [condenseJunoFeeshareV1QueryWithdrawerFeeSharesRequest, expandJunoFeeshareV1QueryWithdrawerFeeSharesRequest, decodeJunoFeeshareV1QueryWithdrawerFeeSharesRequest],
    '/juno.feeshare.v1.QueryWithdrawerFeeSharesResponse': [condenseJunoFeeshareV1QueryWithdrawerFeeSharesResponse, expandJunoFeeshareV1QueryWithdrawerFeeSharesResponse, decodeJunoFeeshareV1QueryWithdrawerFeeSharesResponse],
    '/juno.feeshare.v1.GenesisState': [condenseJunoFeeshareV1GenesisState, expandJunoFeeshareV1GenesisState, decodeJunoFeeshareV1GenesisState],
    '/juno.feeshare.v1.Params': [condenseJunoFeeshareV1Params, expandJunoFeeshareV1Params, decodeJunoFeeshareV1Params],
    '/juno.feeshare.v1.FeeShare': [condenseJunoFeeshareV1FeeShare, expandJunoFeeshareV1FeeShare, decodeJunoFeeshareV1FeeShare],
    '/juno.mint.MsgUpdateParams': [condenseJunoMintMsgUpdateParams, expandJunoMintMsgUpdateParams, decodeJunoMintMsgUpdateParams],
    '/juno.mint.MsgUpdateParamsResponse': [condenseJunoMintMsgUpdateParamsResponse, expandJunoMintMsgUpdateParamsResponse, decodeJunoMintMsgUpdateParamsResponse],
    '/juno.mint.QueryParamsRequest': [condenseJunoMintQueryParamsRequest, expandJunoMintQueryParamsRequest, decodeJunoMintQueryParamsRequest],
    '/juno.mint.QueryParamsResponse': [condenseJunoMintQueryParamsResponse, expandJunoMintQueryParamsResponse, decodeJunoMintQueryParamsResponse],
    '/juno.mint.QueryInflationRequest': [condenseJunoMintQueryInflationRequest, expandJunoMintQueryInflationRequest, decodeJunoMintQueryInflationRequest],
    '/juno.mint.QueryInflationResponse': [condenseJunoMintQueryInflationResponse, expandJunoMintQueryInflationResponse, decodeJunoMintQueryInflationResponse],
    '/juno.mint.QueryAnnualProvisionsRequest': [condenseJunoMintQueryAnnualProvisionsRequest, expandJunoMintQueryAnnualProvisionsRequest, decodeJunoMintQueryAnnualProvisionsRequest],
    '/juno.mint.QueryAnnualProvisionsResponse': [condenseJunoMintQueryAnnualProvisionsResponse, expandJunoMintQueryAnnualProvisionsResponse, decodeJunoMintQueryAnnualProvisionsResponse],
    '/juno.mint.QueryTargetSupplyRequest': [condenseJunoMintQueryTargetSupplyRequest, expandJunoMintQueryTargetSupplyRequest, decodeJunoMintQueryTargetSupplyRequest],
    '/juno.mint.QueryTargetSupplyResponse': [condenseJunoMintQueryTargetSupplyResponse, expandJunoMintQueryTargetSupplyResponse, decodeJunoMintQueryTargetSupplyResponse],
    '/juno.mint.GenesisState': [condenseJunoMintGenesisState, expandJunoMintGenesisState, decodeJunoMintGenesisState],
    '/juno.mint.Minter': [condenseJunoMintMinter, expandJunoMintMinter, decodeJunoMintMinter],
    '/juno.mint.Params': [condenseJunoMintParams, expandJunoMintParams, decodeJunoMintParams],
    '/juno.feepay.v1.MsgRegisterFeePayContract': [condenseJunoFeepayV1MsgRegisterFeePayContract, expandJunoFeepayV1MsgRegisterFeePayContract, decodeJunoFeepayV1MsgRegisterFeePayContract],
    '/juno.feepay.v1.MsgRegisterFeePayContractResponse': [condenseJunoFeepayV1MsgRegisterFeePayContractResponse, expandJunoFeepayV1MsgRegisterFeePayContractResponse, decodeJunoFeepayV1MsgRegisterFeePayContractResponse],
    '/juno.feepay.v1.MsgUnregisterFeePayContract': [condenseJunoFeepayV1MsgUnregisterFeePayContract, expandJunoFeepayV1MsgUnregisterFeePayContract, decodeJunoFeepayV1MsgUnregisterFeePayContract],
    '/juno.feepay.v1.MsgUnregisterFeePayContractResponse': [condenseJunoFeepayV1MsgUnregisterFeePayContractResponse, expandJunoFeepayV1MsgUnregisterFeePayContractResponse, decodeJunoFeepayV1MsgUnregisterFeePayContractResponse],
    '/juno.feepay.v1.MsgFundFeePayContract': [condenseJunoFeepayV1MsgFundFeePayContract, expandJunoFeepayV1MsgFundFeePayContract, decodeJunoFeepayV1MsgFundFeePayContract],
    '/juno.feepay.v1.MsgFundFeePayContractResponse': [condenseJunoFeepayV1MsgFundFeePayContractResponse, expandJunoFeepayV1MsgFundFeePayContractResponse, decodeJunoFeepayV1MsgFundFeePayContractResponse],
    '/juno.feepay.v1.MsgUpdateFeePayContractWalletLimit': [condenseJunoFeepayV1MsgUpdateFeePayContractWalletLimit, expandJunoFeepayV1MsgUpdateFeePayContractWalletLimit, decodeJunoFeepayV1MsgUpdateFeePayContractWalletLimit],
    '/juno.feepay.v1.MsgUpdateFeePayContractWalletLimitResponse': [condenseJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse, expandJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse, decodeJunoFeepayV1MsgUpdateFeePayContractWalletLimitResponse],
    '/juno.feepay.v1.MsgUpdateParams': [condenseJunoFeepayV1MsgUpdateParams, expandJunoFeepayV1MsgUpdateParams, decodeJunoFeepayV1MsgUpdateParams],
    '/juno.feepay.v1.MsgUpdateParamsResponse': [condenseJunoFeepayV1MsgUpdateParamsResponse, expandJunoFeepayV1MsgUpdateParamsResponse, decodeJunoFeepayV1MsgUpdateParamsResponse],
    '/juno.feepay.v1.QueryFeePayContract': [condenseJunoFeepayV1QueryFeePayContract, expandJunoFeepayV1QueryFeePayContract, decodeJunoFeepayV1QueryFeePayContract],
    '/juno.feepay.v1.QueryFeePayContractResponse': [condenseJunoFeepayV1QueryFeePayContractResponse, expandJunoFeepayV1QueryFeePayContractResponse, decodeJunoFeepayV1QueryFeePayContractResponse],
    '/juno.feepay.v1.QueryFeePayContracts': [condenseJunoFeepayV1QueryFeePayContracts, expandJunoFeepayV1QueryFeePayContracts, decodeJunoFeepayV1QueryFeePayContracts],
    '/juno.feepay.v1.QueryFeePayContractsResponse': [condenseJunoFeepayV1QueryFeePayContractsResponse, expandJunoFeepayV1QueryFeePayContractsResponse, decodeJunoFeepayV1QueryFeePayContractsResponse],
    '/juno.feepay.v1.QueryFeePayContractUses': [condenseJunoFeepayV1QueryFeePayContractUses, expandJunoFeepayV1QueryFeePayContractUses, decodeJunoFeepayV1QueryFeePayContractUses],
    '/juno.feepay.v1.QueryFeePayContractUsesResponse': [condenseJunoFeepayV1QueryFeePayContractUsesResponse, expandJunoFeepayV1QueryFeePayContractUsesResponse, decodeJunoFeepayV1QueryFeePayContractUsesResponse],
    '/juno.feepay.v1.QueryFeePayWalletIsEligible': [condenseJunoFeepayV1QueryFeePayWalletIsEligible, expandJunoFeepayV1QueryFeePayWalletIsEligible, decodeJunoFeepayV1QueryFeePayWalletIsEligible],
    '/juno.feepay.v1.QueryFeePayWalletIsEligibleResponse': [condenseJunoFeepayV1QueryFeePayWalletIsEligibleResponse, expandJunoFeepayV1QueryFeePayWalletIsEligibleResponse, decodeJunoFeepayV1QueryFeePayWalletIsEligibleResponse],
    '/juno.feepay.v1.QueryParamsRequest': [condenseJunoFeepayV1QueryParamsRequest, expandJunoFeepayV1QueryParamsRequest, decodeJunoFeepayV1QueryParamsRequest],
    '/juno.feepay.v1.QueryParamsResponse': [condenseJunoFeepayV1QueryParamsResponse, expandJunoFeepayV1QueryParamsResponse, decodeJunoFeepayV1QueryParamsResponse],
    '/juno.feepay.v1.GenesisState': [condenseJunoFeepayV1GenesisState, expandJunoFeepayV1GenesisState, decodeJunoFeepayV1GenesisState],
    '/juno.feepay.v1.Params': [condenseJunoFeepayV1Params, expandJunoFeepayV1Params, decodeJunoFeepayV1Params],
    '/juno.feepay.v1.FeePayContract': [condenseJunoFeepayV1FeePayContract, expandJunoFeepayV1FeePayContract, decodeJunoFeepayV1FeePayContract],
    '/juno.feepay.v1.FeePayWalletUsage': [condenseJunoFeepayV1FeePayWalletUsage, expandJunoFeepayV1FeePayWalletUsage, decodeJunoFeepayV1FeePayWalletUsage],
    '/juno.clock.v1.MsgRegisterClockContract': [condenseJunoClockV1MsgRegisterClockContract, expandJunoClockV1MsgRegisterClockContract, decodeJunoClockV1MsgRegisterClockContract],
    '/juno.clock.v1.MsgRegisterClockContractResponse': [condenseJunoClockV1MsgRegisterClockContractResponse, expandJunoClockV1MsgRegisterClockContractResponse, decodeJunoClockV1MsgRegisterClockContractResponse],
    '/juno.clock.v1.MsgUnregisterClockContract': [condenseJunoClockV1MsgUnregisterClockContract, expandJunoClockV1MsgUnregisterClockContract, decodeJunoClockV1MsgUnregisterClockContract],
    '/juno.clock.v1.MsgUnregisterClockContractResponse': [condenseJunoClockV1MsgUnregisterClockContractResponse, expandJunoClockV1MsgUnregisterClockContractResponse, decodeJunoClockV1MsgUnregisterClockContractResponse],
    '/juno.clock.v1.MsgUnjailClockContract': [condenseJunoClockV1MsgUnjailClockContract, expandJunoClockV1MsgUnjailClockContract, decodeJunoClockV1MsgUnjailClockContract],
    '/juno.clock.v1.MsgUnjailClockContractResponse': [condenseJunoClockV1MsgUnjailClockContractResponse, expandJunoClockV1MsgUnjailClockContractResponse, decodeJunoClockV1MsgUnjailClockContractResponse],
    '/juno.clock.v1.MsgUpdateParams': [condenseJunoClockV1MsgUpdateParams, expandJunoClockV1MsgUpdateParams, decodeJunoClockV1MsgUpdateParams],
    '/juno.clock.v1.MsgUpdateParamsResponse': [condenseJunoClockV1MsgUpdateParamsResponse, expandJunoClockV1MsgUpdateParamsResponse, decodeJunoClockV1MsgUpdateParamsResponse],
    '/juno.clock.v1.ClockContract': [condenseJunoClockV1ClockContract, expandJunoClockV1ClockContract, decodeJunoClockV1ClockContract],
    '/juno.clock.v1.QueryClockContracts': [condenseJunoClockV1QueryClockContracts, expandJunoClockV1QueryClockContracts, decodeJunoClockV1QueryClockContracts],
    '/juno.clock.v1.QueryClockContractsResponse': [condenseJunoClockV1QueryClockContractsResponse, expandJunoClockV1QueryClockContractsResponse, decodeJunoClockV1QueryClockContractsResponse],
    '/juno.clock.v1.QueryClockContract': [condenseJunoClockV1QueryClockContract, expandJunoClockV1QueryClockContract, decodeJunoClockV1QueryClockContract],
    '/juno.clock.v1.QueryClockContractResponse': [condenseJunoClockV1QueryClockContractResponse, expandJunoClockV1QueryClockContractResponse, decodeJunoClockV1QueryClockContractResponse],
    '/juno.clock.v1.QueryParamsRequest': [condenseJunoClockV1QueryParamsRequest, expandJunoClockV1QueryParamsRequest, decodeJunoClockV1QueryParamsRequest],
    '/juno.clock.v1.QueryParamsResponse': [condenseJunoClockV1QueryParamsResponse, expandJunoClockV1QueryParamsResponse, decodeJunoClockV1QueryParamsResponse],
    '/juno.clock.v1.GenesisState': [condenseJunoClockV1GenesisState, expandJunoClockV1GenesisState, decodeJunoClockV1GenesisState],
    '/juno.clock.v1.Params': [condenseJunoClockV1Params, expandJunoClockV1Params, decodeJunoClockV1Params],
    '/osmosis.protorev.v1beta1.MsgSetHotRoutes': [condenseOsmosisProtorevV1beta1MsgSetHotRoutes, expandOsmosisProtorevV1beta1MsgSetHotRoutes, decodeOsmosisProtorevV1beta1MsgSetHotRoutes],
    '/osmosis.protorev.v1beta1.MsgSetHotRoutesResponse': [condenseOsmosisProtorevV1beta1MsgSetHotRoutesResponse, expandOsmosisProtorevV1beta1MsgSetHotRoutesResponse, decodeOsmosisProtorevV1beta1MsgSetHotRoutesResponse],
    '/osmosis.protorev.v1beta1.MsgSetDeveloperAccount': [condenseOsmosisProtorevV1beta1MsgSetDeveloperAccount, expandOsmosisProtorevV1beta1MsgSetDeveloperAccount, decodeOsmosisProtorevV1beta1MsgSetDeveloperAccount],
    '/osmosis.protorev.v1beta1.MsgSetDeveloperAccountResponse': [condenseOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse, expandOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse, decodeOsmosisProtorevV1beta1MsgSetDeveloperAccountResponse],
    '/osmosis.protorev.v1beta1.MsgSetInfoByPoolType': [condenseOsmosisProtorevV1beta1MsgSetInfoByPoolType, expandOsmosisProtorevV1beta1MsgSetInfoByPoolType, decodeOsmosisProtorevV1beta1MsgSetInfoByPoolType],
    '/osmosis.protorev.v1beta1.MsgSetInfoByPoolTypeResponse': [condenseOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse, expandOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse, decodeOsmosisProtorevV1beta1MsgSetInfoByPoolTypeResponse],
    '/osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerTx': [condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx, expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx, decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTx],
    '/osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerTxResponse': [condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse, expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse, decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerTxResponse],
    '/osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerBlock': [condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock, expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock, decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlock],
    '/osmosis.protorev.v1beta1.MsgSetMaxPoolPointsPerBlockResponse': [condenseOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse, expandOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse, decodeOsmosisProtorevV1beta1MsgSetMaxPoolPointsPerBlockResponse],
    '/osmosis.protorev.v1beta1.MsgSetBaseDenoms': [condenseOsmosisProtorevV1beta1MsgSetBaseDenoms, expandOsmosisProtorevV1beta1MsgSetBaseDenoms, decodeOsmosisProtorevV1beta1MsgSetBaseDenoms],
    '/osmosis.protorev.v1beta1.MsgSetBaseDenomsResponse': [condenseOsmosisProtorevV1beta1MsgSetBaseDenomsResponse, expandOsmosisProtorevV1beta1MsgSetBaseDenomsResponse, decodeOsmosisProtorevV1beta1MsgSetBaseDenomsResponse],
    '/osmosis.protorev.v1beta1.SetProtoRevEnabledProposal': [condenseOsmosisProtorevV1beta1SetProtoRevEnabledProposal, expandOsmosisProtorevV1beta1SetProtoRevEnabledProposal, decodeOsmosisProtorevV1beta1SetProtoRevEnabledProposal],
    '/osmosis.protorev.v1beta1.SetProtoRevAdminAccountProposal': [condenseOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal, expandOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal, decodeOsmosisProtorevV1beta1SetProtoRevAdminAccountProposal],
    '/osmosis.protorev.v1beta1.TokenPairArbRoutes': [condenseOsmosisProtorevV1beta1TokenPairArbRoutes, expandOsmosisProtorevV1beta1TokenPairArbRoutes, decodeOsmosisProtorevV1beta1TokenPairArbRoutes],
    '/osmosis.protorev.v1beta1.Route': [condenseOsmosisProtorevV1beta1Route, expandOsmosisProtorevV1beta1Route, decodeOsmosisProtorevV1beta1Route],
    '/osmosis.protorev.v1beta1.Trade': [condenseOsmosisProtorevV1beta1Trade, expandOsmosisProtorevV1beta1Trade, decodeOsmosisProtorevV1beta1Trade],
    '/osmosis.protorev.v1beta1.RouteStatistics': [condenseOsmosisProtorevV1beta1RouteStatistics, expandOsmosisProtorevV1beta1RouteStatistics, decodeOsmosisProtorevV1beta1RouteStatistics],
    '/osmosis.protorev.v1beta1.PoolWeights': [condenseOsmosisProtorevV1beta1PoolWeights, expandOsmosisProtorevV1beta1PoolWeights, decodeOsmosisProtorevV1beta1PoolWeights],
    '/osmosis.protorev.v1beta1.InfoByPoolType': [condenseOsmosisProtorevV1beta1InfoByPoolType, expandOsmosisProtorevV1beta1InfoByPoolType, decodeOsmosisProtorevV1beta1InfoByPoolType],
    '/osmosis.protorev.v1beta1.StablePoolInfo': [condenseOsmosisProtorevV1beta1StablePoolInfo, expandOsmosisProtorevV1beta1StablePoolInfo, decodeOsmosisProtorevV1beta1StablePoolInfo],
    '/osmosis.protorev.v1beta1.BalancerPoolInfo': [condenseOsmosisProtorevV1beta1BalancerPoolInfo, expandOsmosisProtorevV1beta1BalancerPoolInfo, decodeOsmosisProtorevV1beta1BalancerPoolInfo],
    '/osmosis.protorev.v1beta1.ConcentratedPoolInfo': [condenseOsmosisProtorevV1beta1ConcentratedPoolInfo, expandOsmosisProtorevV1beta1ConcentratedPoolInfo, decodeOsmosisProtorevV1beta1ConcentratedPoolInfo],
    '/osmosis.protorev.v1beta1.CosmwasmPoolInfo': [condenseOsmosisProtorevV1beta1CosmwasmPoolInfo, expandOsmosisProtorevV1beta1CosmwasmPoolInfo, decodeOsmosisProtorevV1beta1CosmwasmPoolInfo],
    '/osmosis.protorev.v1beta1.WeightMap': [condenseOsmosisProtorevV1beta1WeightMap, expandOsmosisProtorevV1beta1WeightMap, decodeOsmosisProtorevV1beta1WeightMap],
    '/osmosis.protorev.v1beta1.BaseDenom': [condenseOsmosisProtorevV1beta1BaseDenom, expandOsmosisProtorevV1beta1BaseDenom, decodeOsmosisProtorevV1beta1BaseDenom],
    '/osmosis.protorev.v1beta1.QueryParamsRequest': [condenseOsmosisProtorevV1beta1QueryParamsRequest, expandOsmosisProtorevV1beta1QueryParamsRequest, decodeOsmosisProtorevV1beta1QueryParamsRequest],
    '/osmosis.protorev.v1beta1.QueryParamsResponse': [condenseOsmosisProtorevV1beta1QueryParamsResponse, expandOsmosisProtorevV1beta1QueryParamsResponse, decodeOsmosisProtorevV1beta1QueryParamsResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevNumberOfTradesRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevNumberOfTradesResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevNumberOfTradesResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevProfitsByDenomRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevProfitsByDenomResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevProfitsByDenomResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAllProfitsRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAllProfitsResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevAllProfitsResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevStatisticsByRouteRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevStatisticsByRouteResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevStatisticsByRouteResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAllRouteStatisticsRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAllRouteStatisticsResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevAllRouteStatisticsResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevTokenPairArbRoutesRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevTokenPairArbRoutesResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevTokenPairArbRoutesResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAdminAccountRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevAdminAccountResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevAdminAccountResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevDeveloperAccountRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevDeveloperAccountResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevDeveloperAccountResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevInfoByPoolTypeRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevInfoByPoolTypeResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevInfoByPoolTypeResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerBlockRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerBlockResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerBlockResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerTxRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevMaxPoolPointsPerTxResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevMaxPoolPointsPerTxResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevBaseDenomsRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevBaseDenomsResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevBaseDenomsResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevEnabledRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevEnabledResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevEnabledResponse],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevPoolRequest': [condenseOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest, expandOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest, decodeOsmosisProtorevV1beta1QueryGetProtoRevPoolRequest],
    '/osmosis.protorev.v1beta1.QueryGetProtoRevPoolResponse': [condenseOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse, expandOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse, decodeOsmosisProtorevV1beta1QueryGetProtoRevPoolResponse],
    '/osmosis.protorev.v1beta1.GenesisState': [condenseOsmosisProtorevV1beta1GenesisState, expandOsmosisProtorevV1beta1GenesisState, decodeOsmosisProtorevV1beta1GenesisState],
    '/osmosis.protorev.v1beta1.Params': [condenseOsmosisProtorevV1beta1Params, expandOsmosisProtorevV1beta1Params, decodeOsmosisProtorevV1beta1Params],
    '/osmosis.mint.v1beta1.QueryParamsRequest': [condenseOsmosisMintV1beta1QueryParamsRequest, expandOsmosisMintV1beta1QueryParamsRequest, decodeOsmosisMintV1beta1QueryParamsRequest],
    '/osmosis.mint.v1beta1.QueryParamsResponse': [condenseOsmosisMintV1beta1QueryParamsResponse, expandOsmosisMintV1beta1QueryParamsResponse, decodeOsmosisMintV1beta1QueryParamsResponse],
    '/osmosis.mint.v1beta1.QueryEpochProvisionsRequest': [condenseOsmosisMintV1beta1QueryEpochProvisionsRequest, expandOsmosisMintV1beta1QueryEpochProvisionsRequest, decodeOsmosisMintV1beta1QueryEpochProvisionsRequest],
    '/osmosis.mint.v1beta1.QueryEpochProvisionsResponse': [condenseOsmosisMintV1beta1QueryEpochProvisionsResponse, expandOsmosisMintV1beta1QueryEpochProvisionsResponse, decodeOsmosisMintV1beta1QueryEpochProvisionsResponse],
    '/osmosis.mint.v1beta1.GenesisState': [condenseOsmosisMintV1beta1GenesisState, expandOsmosisMintV1beta1GenesisState, decodeOsmosisMintV1beta1GenesisState],
    '/osmosis.mint.v1beta1.Minter': [condenseOsmosisMintV1beta1Minter, expandOsmosisMintV1beta1Minter, decodeOsmosisMintV1beta1Minter],
    '/osmosis.mint.v1beta1.WeightedAddress': [condenseOsmosisMintV1beta1WeightedAddress, expandOsmosisMintV1beta1WeightedAddress, decodeOsmosisMintV1beta1WeightedAddress],
    '/osmosis.mint.v1beta1.DistributionProportions': [condenseOsmosisMintV1beta1DistributionProportions, expandOsmosisMintV1beta1DistributionProportions, decodeOsmosisMintV1beta1DistributionProportions],
    '/osmosis.mint.v1beta1.Params': [condenseOsmosisMintV1beta1Params, expandOsmosisMintV1beta1Params, decodeOsmosisMintV1beta1Params],
    '/osmosis.incentives.MsgCreateGauge': [condenseOsmosisIncentivesMsgCreateGauge, expandOsmosisIncentivesMsgCreateGauge, decodeOsmosisIncentivesMsgCreateGauge],
    '/osmosis.incentives.MsgCreateGaugeResponse': [condenseOsmosisIncentivesMsgCreateGaugeResponse, expandOsmosisIncentivesMsgCreateGaugeResponse, decodeOsmosisIncentivesMsgCreateGaugeResponse],
    '/osmosis.incentives.MsgAddToGauge': [condenseOsmosisIncentivesMsgAddToGauge, expandOsmosisIncentivesMsgAddToGauge, decodeOsmosisIncentivesMsgAddToGauge],
    '/osmosis.incentives.MsgAddToGaugeResponse': [condenseOsmosisIncentivesMsgAddToGaugeResponse, expandOsmosisIncentivesMsgAddToGaugeResponse, decodeOsmosisIncentivesMsgAddToGaugeResponse],
    '/osmosis.incentives.MsgCreateGroup': [condenseOsmosisIncentivesMsgCreateGroup, expandOsmosisIncentivesMsgCreateGroup, decodeOsmosisIncentivesMsgCreateGroup],
    '/osmosis.incentives.MsgCreateGroupResponse': [condenseOsmosisIncentivesMsgCreateGroupResponse, expandOsmosisIncentivesMsgCreateGroupResponse, decodeOsmosisIncentivesMsgCreateGroupResponse],
    '/osmosis.incentives.CreateGroupsProposal': [condenseOsmosisIncentivesCreateGroupsProposal, expandOsmosisIncentivesCreateGroupsProposal, decodeOsmosisIncentivesCreateGroupsProposal],
    '/osmosis.incentives.InternalGaugeInfo': [condenseOsmosisIncentivesInternalGaugeInfo, expandOsmosisIncentivesInternalGaugeInfo, decodeOsmosisIncentivesInternalGaugeInfo],
    '/osmosis.incentives.InternalGaugeRecord': [condenseOsmosisIncentivesInternalGaugeRecord, expandOsmosisIncentivesInternalGaugeRecord, decodeOsmosisIncentivesInternalGaugeRecord],
    '/osmosis.incentives.Group': [condenseOsmosisIncentivesGroup, expandOsmosisIncentivesGroup, decodeOsmosisIncentivesGroup],
    '/osmosis.incentives.CreateGroup': [condenseOsmosisIncentivesCreateGroup, expandOsmosisIncentivesCreateGroup, decodeOsmosisIncentivesCreateGroup],
    '/osmosis.incentives.GroupsWithGauge': [condenseOsmosisIncentivesGroupsWithGauge, expandOsmosisIncentivesGroupsWithGauge, decodeOsmosisIncentivesGroupsWithGauge],
    '/osmosis.incentives.Gauge': [condenseOsmosisIncentivesGauge, expandOsmosisIncentivesGauge, decodeOsmosisIncentivesGauge],
    '/osmosis.incentives.LockableDurationsInfo': [condenseOsmosisIncentivesLockableDurationsInfo, expandOsmosisIncentivesLockableDurationsInfo, decodeOsmosisIncentivesLockableDurationsInfo],
    '/osmosis.incentives.ModuleToDistributeCoinsRequest': [condenseOsmosisIncentivesModuleToDistributeCoinsRequest, expandOsmosisIncentivesModuleToDistributeCoinsRequest, decodeOsmosisIncentivesModuleToDistributeCoinsRequest],
    '/osmosis.incentives.ModuleToDistributeCoinsResponse': [condenseOsmosisIncentivesModuleToDistributeCoinsResponse, expandOsmosisIncentivesModuleToDistributeCoinsResponse, decodeOsmosisIncentivesModuleToDistributeCoinsResponse],
    '/osmosis.incentives.GaugeByIDRequest': [condenseOsmosisIncentivesGaugeByIDRequest, expandOsmosisIncentivesGaugeByIDRequest, decodeOsmosisIncentivesGaugeByIDRequest],
    '/osmosis.incentives.GaugeByIDResponse': [condenseOsmosisIncentivesGaugeByIDResponse, expandOsmosisIncentivesGaugeByIDResponse, decodeOsmosisIncentivesGaugeByIDResponse],
    '/osmosis.incentives.GaugesRequest': [condenseOsmosisIncentivesGaugesRequest, expandOsmosisIncentivesGaugesRequest, decodeOsmosisIncentivesGaugesRequest],
    '/osmosis.incentives.GaugesResponse': [condenseOsmosisIncentivesGaugesResponse, expandOsmosisIncentivesGaugesResponse, decodeOsmosisIncentivesGaugesResponse],
    '/osmosis.incentives.ActiveGaugesRequest': [condenseOsmosisIncentivesActiveGaugesRequest, expandOsmosisIncentivesActiveGaugesRequest, decodeOsmosisIncentivesActiveGaugesRequest],
    '/osmosis.incentives.ActiveGaugesResponse': [condenseOsmosisIncentivesActiveGaugesResponse, expandOsmosisIncentivesActiveGaugesResponse, decodeOsmosisIncentivesActiveGaugesResponse],
    '/osmosis.incentives.ActiveGaugesPerDenomRequest': [condenseOsmosisIncentivesActiveGaugesPerDenomRequest, expandOsmosisIncentivesActiveGaugesPerDenomRequest, decodeOsmosisIncentivesActiveGaugesPerDenomRequest],
    '/osmosis.incentives.ActiveGaugesPerDenomResponse': [condenseOsmosisIncentivesActiveGaugesPerDenomResponse, expandOsmosisIncentivesActiveGaugesPerDenomResponse, decodeOsmosisIncentivesActiveGaugesPerDenomResponse],
    '/osmosis.incentives.UpcomingGaugesRequest': [condenseOsmosisIncentivesUpcomingGaugesRequest, expandOsmosisIncentivesUpcomingGaugesRequest, decodeOsmosisIncentivesUpcomingGaugesRequest],
    '/osmosis.incentives.UpcomingGaugesResponse': [condenseOsmosisIncentivesUpcomingGaugesResponse, expandOsmosisIncentivesUpcomingGaugesResponse, decodeOsmosisIncentivesUpcomingGaugesResponse],
    '/osmosis.incentives.UpcomingGaugesPerDenomRequest': [condenseOsmosisIncentivesUpcomingGaugesPerDenomRequest, expandOsmosisIncentivesUpcomingGaugesPerDenomRequest, decodeOsmosisIncentivesUpcomingGaugesPerDenomRequest],
    '/osmosis.incentives.UpcomingGaugesPerDenomResponse': [condenseOsmosisIncentivesUpcomingGaugesPerDenomResponse, expandOsmosisIncentivesUpcomingGaugesPerDenomResponse, decodeOsmosisIncentivesUpcomingGaugesPerDenomResponse],
    '/osmosis.incentives.RewardsEstRequest': [condenseOsmosisIncentivesRewardsEstRequest, expandOsmosisIncentivesRewardsEstRequest, decodeOsmosisIncentivesRewardsEstRequest],
    '/osmosis.incentives.RewardsEstResponse': [condenseOsmosisIncentivesRewardsEstResponse, expandOsmosisIncentivesRewardsEstResponse, decodeOsmosisIncentivesRewardsEstResponse],
    '/osmosis.incentives.QueryLockableDurationsRequest': [condenseOsmosisIncentivesQueryLockableDurationsRequest, expandOsmosisIncentivesQueryLockableDurationsRequest, decodeOsmosisIncentivesQueryLockableDurationsRequest],
    '/osmosis.incentives.QueryLockableDurationsResponse': [condenseOsmosisIncentivesQueryLockableDurationsResponse, expandOsmosisIncentivesQueryLockableDurationsResponse, decodeOsmosisIncentivesQueryLockableDurationsResponse],
    '/osmosis.incentives.QueryAllGroupsRequest': [condenseOsmosisIncentivesQueryAllGroupsRequest, expandOsmosisIncentivesQueryAllGroupsRequest, decodeOsmosisIncentivesQueryAllGroupsRequest],
    '/osmosis.incentives.QueryAllGroupsResponse': [condenseOsmosisIncentivesQueryAllGroupsResponse, expandOsmosisIncentivesQueryAllGroupsResponse, decodeOsmosisIncentivesQueryAllGroupsResponse],
    '/osmosis.incentives.QueryAllGroupsGaugesRequest': [condenseOsmosisIncentivesQueryAllGroupsGaugesRequest, expandOsmosisIncentivesQueryAllGroupsGaugesRequest, decodeOsmosisIncentivesQueryAllGroupsGaugesRequest],
    '/osmosis.incentives.QueryAllGroupsGaugesResponse': [condenseOsmosisIncentivesQueryAllGroupsGaugesResponse, expandOsmosisIncentivesQueryAllGroupsGaugesResponse, decodeOsmosisIncentivesQueryAllGroupsGaugesResponse],
    '/osmosis.incentives.QueryAllGroupsWithGaugeRequest': [condenseOsmosisIncentivesQueryAllGroupsWithGaugeRequest, expandOsmosisIncentivesQueryAllGroupsWithGaugeRequest, decodeOsmosisIncentivesQueryAllGroupsWithGaugeRequest],
    '/osmosis.incentives.QueryAllGroupsWithGaugeResponse': [condenseOsmosisIncentivesQueryAllGroupsWithGaugeResponse, expandOsmosisIncentivesQueryAllGroupsWithGaugeResponse, decodeOsmosisIncentivesQueryAllGroupsWithGaugeResponse],
    '/osmosis.incentives.QueryGroupByGroupGaugeIDRequest': [condenseOsmosisIncentivesQueryGroupByGroupGaugeIDRequest, expandOsmosisIncentivesQueryGroupByGroupGaugeIDRequest, decodeOsmosisIncentivesQueryGroupByGroupGaugeIDRequest],
    '/osmosis.incentives.QueryGroupByGroupGaugeIDResponse': [condenseOsmosisIncentivesQueryGroupByGroupGaugeIDResponse, expandOsmosisIncentivesQueryGroupByGroupGaugeIDResponse, decodeOsmosisIncentivesQueryGroupByGroupGaugeIDResponse],
    '/osmosis.incentives.QueryCurrentWeightByGroupGaugeIDRequest': [condenseOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest, expandOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest, decodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDRequest],
    '/osmosis.incentives.QueryCurrentWeightByGroupGaugeIDResponse': [condenseOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse, expandOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse, decodeOsmosisIncentivesQueryCurrentWeightByGroupGaugeIDResponse],
    '/osmosis.incentives.GaugeWeight': [condenseOsmosisIncentivesGaugeWeight, expandOsmosisIncentivesGaugeWeight, decodeOsmosisIncentivesGaugeWeight],
    '/osmosis.incentives.GenesisState': [condenseOsmosisIncentivesGenesisState, expandOsmosisIncentivesGenesisState, decodeOsmosisIncentivesGenesisState],
    '/osmosis.incentives.Params': [condenseOsmosisIncentivesParams, expandOsmosisIncentivesParams, decodeOsmosisIncentivesParams],
    '/osmosis.accum.v1beta1.AccumulatorContent': [condenseOsmosisAccumV1beta1AccumulatorContent, expandOsmosisAccumV1beta1AccumulatorContent, decodeOsmosisAccumV1beta1AccumulatorContent],
    '/osmosis.accum.v1beta1.Options': [condenseOsmosisAccumV1beta1Options, expandOsmosisAccumV1beta1Options, decodeOsmosisAccumV1beta1Options],
    '/osmosis.accum.v1beta1.Record': [condenseOsmosisAccumV1beta1Record, expandOsmosisAccumV1beta1Record, decodeOsmosisAccumV1beta1Record],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool': [condenseOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool, expandOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool, decodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPool],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse': [condenseOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse, expandOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse, decodeOsmosisGammPoolmodelsStableswapV1beta1MsgCreateStableswapPoolResponse],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors': [condenseOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors, expandOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors, decodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactors],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse': [condenseOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse, expandOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse, decodeOsmosisGammPoolmodelsStableswapV1beta1MsgStableSwapAdjustScalingFactorsResponse],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams': [condenseOsmosisGammPoolmodelsStableswapV1beta1PoolParams, expandOsmosisGammPoolmodelsStableswapV1beta1PoolParams, decodeOsmosisGammPoolmodelsStableswapV1beta1PoolParams],
    '/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool': [condenseOsmosisGammPoolmodelsStableswapV1beta1Pool, expandOsmosisGammPoolmodelsStableswapV1beta1Pool, decodeOsmosisGammPoolmodelsStableswapV1beta1Pool],
    '/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool': [condenseOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool, expandOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool, decodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPool],
    '/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse': [condenseOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse, expandOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse, decodeOsmosisGammPoolmodelsBalancerV1beta1MsgCreateBalancerPoolResponse],
    '/osmosis.gamm.v1beta1.SmoothWeightChangeParams': [condenseOsmosisGammV1beta1SmoothWeightChangeParams, expandOsmosisGammV1beta1SmoothWeightChangeParams, decodeOsmosisGammV1beta1SmoothWeightChangeParams],
    '/osmosis.gamm.v1beta1.PoolParams': [condenseOsmosisGammV1beta1PoolParams, expandOsmosisGammV1beta1PoolParams, decodeOsmosisGammV1beta1PoolParams],
    '/osmosis.gamm.v1beta1.PoolAsset': [condenseOsmosisGammV1beta1PoolAsset, expandOsmosisGammV1beta1PoolAsset, decodeOsmosisGammV1beta1PoolAsset],
    '/osmosis.gamm.v1beta1.Pool': [condenseOsmosisGammV1beta1Pool, expandOsmosisGammV1beta1Pool, decodeOsmosisGammV1beta1Pool],
    '/osmosis.gamm.v2.QuerySpotPriceRequest': [condenseOsmosisGammV2QuerySpotPriceRequest, expandOsmosisGammV2QuerySpotPriceRequest, decodeOsmosisGammV2QuerySpotPriceRequest],
    '/osmosis.gamm.v2.QuerySpotPriceResponse': [condenseOsmosisGammV2QuerySpotPriceResponse, expandOsmosisGammV2QuerySpotPriceResponse, decodeOsmosisGammV2QuerySpotPriceResponse],
    '/osmosis.gamm.v1beta1.MsgJoinPool': [condenseOsmosisGammV1beta1MsgJoinPool, expandOsmosisGammV1beta1MsgJoinPool, decodeOsmosisGammV1beta1MsgJoinPool],
    '/osmosis.gamm.v1beta1.MsgJoinPoolResponse': [condenseOsmosisGammV1beta1MsgJoinPoolResponse, expandOsmosisGammV1beta1MsgJoinPoolResponse, decodeOsmosisGammV1beta1MsgJoinPoolResponse],
    '/osmosis.gamm.v1beta1.MsgExitPool': [condenseOsmosisGammV1beta1MsgExitPool, expandOsmosisGammV1beta1MsgExitPool, decodeOsmosisGammV1beta1MsgExitPool],
    '/osmosis.gamm.v1beta1.MsgExitPoolResponse': [condenseOsmosisGammV1beta1MsgExitPoolResponse, expandOsmosisGammV1beta1MsgExitPoolResponse, decodeOsmosisGammV1beta1MsgExitPoolResponse],
    '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn': [condenseOsmosisGammV1beta1MsgSwapExactAmountIn, expandOsmosisGammV1beta1MsgSwapExactAmountIn, decodeOsmosisGammV1beta1MsgSwapExactAmountIn],
    '/osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse': [condenseOsmosisGammV1beta1MsgSwapExactAmountInResponse, expandOsmosisGammV1beta1MsgSwapExactAmountInResponse, decodeOsmosisGammV1beta1MsgSwapExactAmountInResponse],
    '/osmosis.gamm.v1beta1.MsgSwapExactAmountOut': [condenseOsmosisGammV1beta1MsgSwapExactAmountOut, expandOsmosisGammV1beta1MsgSwapExactAmountOut, decodeOsmosisGammV1beta1MsgSwapExactAmountOut],
    '/osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse': [condenseOsmosisGammV1beta1MsgSwapExactAmountOutResponse, expandOsmosisGammV1beta1MsgSwapExactAmountOutResponse, decodeOsmosisGammV1beta1MsgSwapExactAmountOutResponse],
    '/osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn': [condenseOsmosisGammV1beta1MsgJoinSwapExternAmountIn, expandOsmosisGammV1beta1MsgJoinSwapExternAmountIn, decodeOsmosisGammV1beta1MsgJoinSwapExternAmountIn],
    '/osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse': [condenseOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse, expandOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse, decodeOsmosisGammV1beta1MsgJoinSwapExternAmountInResponse],
    '/osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut': [condenseOsmosisGammV1beta1MsgJoinSwapShareAmountOut, expandOsmosisGammV1beta1MsgJoinSwapShareAmountOut, decodeOsmosisGammV1beta1MsgJoinSwapShareAmountOut],
    '/osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse': [condenseOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse, expandOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse, decodeOsmosisGammV1beta1MsgJoinSwapShareAmountOutResponse],
    '/osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn': [condenseOsmosisGammV1beta1MsgExitSwapShareAmountIn, expandOsmosisGammV1beta1MsgExitSwapShareAmountIn, decodeOsmosisGammV1beta1MsgExitSwapShareAmountIn],
    '/osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse': [condenseOsmosisGammV1beta1MsgExitSwapShareAmountInResponse, expandOsmosisGammV1beta1MsgExitSwapShareAmountInResponse, decodeOsmosisGammV1beta1MsgExitSwapShareAmountInResponse],
    '/osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut': [condenseOsmosisGammV1beta1MsgExitSwapExternAmountOut, expandOsmosisGammV1beta1MsgExitSwapExternAmountOut, decodeOsmosisGammV1beta1MsgExitSwapExternAmountOut],
    '/osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse': [condenseOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse, expandOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse, decodeOsmosisGammV1beta1MsgExitSwapExternAmountOutResponse],
    '/osmosis.gamm.v1beta1.ReplaceMigrationRecordsProposal': [condenseOsmosisGammV1beta1ReplaceMigrationRecordsProposal, expandOsmosisGammV1beta1ReplaceMigrationRecordsProposal, decodeOsmosisGammV1beta1ReplaceMigrationRecordsProposal],
    '/osmosis.gamm.v1beta1.UpdateMigrationRecordsProposal': [condenseOsmosisGammV1beta1UpdateMigrationRecordsProposal, expandOsmosisGammV1beta1UpdateMigrationRecordsProposal, decodeOsmosisGammV1beta1UpdateMigrationRecordsProposal],
    '/osmosis.gamm.v1beta1.PoolRecordWithCFMMLink': [condenseOsmosisGammV1beta1PoolRecordWithCFMMLink, expandOsmosisGammV1beta1PoolRecordWithCFMMLink, decodeOsmosisGammV1beta1PoolRecordWithCFMMLink],
    '/osmosis.gamm.v1beta1.CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal': [condenseOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal, expandOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal, decodeOsmosisGammV1beta1CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal],
    '/osmosis.gamm.v1beta1.SetScalingFactorControllerProposal': [condenseOsmosisGammV1beta1SetScalingFactorControllerProposal, expandOsmosisGammV1beta1SetScalingFactorControllerProposal, decodeOsmosisGammV1beta1SetScalingFactorControllerProposal],
    '/osmosis.gamm.v1beta1.QueryPoolRequest': [condenseOsmosisGammV1beta1QueryPoolRequest, expandOsmosisGammV1beta1QueryPoolRequest, decodeOsmosisGammV1beta1QueryPoolRequest],
    '/osmosis.gamm.v1beta1.QueryPoolResponse': [condenseOsmosisGammV1beta1QueryPoolResponse, expandOsmosisGammV1beta1QueryPoolResponse, decodeOsmosisGammV1beta1QueryPoolResponse],
    '/osmosis.gamm.v1beta1.QueryPoolsRequest': [condenseOsmosisGammV1beta1QueryPoolsRequest, expandOsmosisGammV1beta1QueryPoolsRequest, decodeOsmosisGammV1beta1QueryPoolsRequest],
    '/osmosis.gamm.v1beta1.QueryPoolsResponse': [condenseOsmosisGammV1beta1QueryPoolsResponse, expandOsmosisGammV1beta1QueryPoolsResponse, decodeOsmosisGammV1beta1QueryPoolsResponse],
    '/osmosis.gamm.v1beta1.QueryNumPoolsRequest': [condenseOsmosisGammV1beta1QueryNumPoolsRequest, expandOsmosisGammV1beta1QueryNumPoolsRequest, decodeOsmosisGammV1beta1QueryNumPoolsRequest],
    '/osmosis.gamm.v1beta1.QueryNumPoolsResponse': [condenseOsmosisGammV1beta1QueryNumPoolsResponse, expandOsmosisGammV1beta1QueryNumPoolsResponse, decodeOsmosisGammV1beta1QueryNumPoolsResponse],
    '/osmosis.gamm.v1beta1.QueryPoolTypeRequest': [condenseOsmosisGammV1beta1QueryPoolTypeRequest, expandOsmosisGammV1beta1QueryPoolTypeRequest, decodeOsmosisGammV1beta1QueryPoolTypeRequest],
    '/osmosis.gamm.v1beta1.QueryPoolTypeResponse': [condenseOsmosisGammV1beta1QueryPoolTypeResponse, expandOsmosisGammV1beta1QueryPoolTypeResponse, decodeOsmosisGammV1beta1QueryPoolTypeResponse],
    '/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest': [condenseOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest, expandOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest, decodeOsmosisGammV1beta1QueryCalcJoinPoolSharesRequest],
    '/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse': [condenseOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse, expandOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse, decodeOsmosisGammV1beta1QueryCalcJoinPoolSharesResponse],
    '/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest': [condenseOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest, expandOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest, decodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesRequest],
    '/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse': [condenseOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse, expandOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse, decodeOsmosisGammV1beta1QueryCalcExitPoolCoinsFromSharesResponse],
    '/osmosis.gamm.v1beta1.QueryPoolParamsRequest': [condenseOsmosisGammV1beta1QueryPoolParamsRequest, expandOsmosisGammV1beta1QueryPoolParamsRequest, decodeOsmosisGammV1beta1QueryPoolParamsRequest],
    '/osmosis.gamm.v1beta1.QueryPoolParamsResponse': [condenseOsmosisGammV1beta1QueryPoolParamsResponse, expandOsmosisGammV1beta1QueryPoolParamsResponse, decodeOsmosisGammV1beta1QueryPoolParamsResponse],
    '/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest': [condenseOsmosisGammV1beta1QueryTotalPoolLiquidityRequest, expandOsmosisGammV1beta1QueryTotalPoolLiquidityRequest, decodeOsmosisGammV1beta1QueryTotalPoolLiquidityRequest],
    '/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse': [condenseOsmosisGammV1beta1QueryTotalPoolLiquidityResponse, expandOsmosisGammV1beta1QueryTotalPoolLiquidityResponse, decodeOsmosisGammV1beta1QueryTotalPoolLiquidityResponse],
    '/osmosis.gamm.v1beta1.QueryTotalSharesRequest': [condenseOsmosisGammV1beta1QueryTotalSharesRequest, expandOsmosisGammV1beta1QueryTotalSharesRequest, decodeOsmosisGammV1beta1QueryTotalSharesRequest],
    '/osmosis.gamm.v1beta1.QueryTotalSharesResponse': [condenseOsmosisGammV1beta1QueryTotalSharesResponse, expandOsmosisGammV1beta1QueryTotalSharesResponse, decodeOsmosisGammV1beta1QueryTotalSharesResponse],
    '/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest': [condenseOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest, expandOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest, decodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesRequest],
    '/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse': [condenseOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse, expandOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse, decodeOsmosisGammV1beta1QueryCalcJoinPoolNoSwapSharesResponse],
    '/osmosis.gamm.v1beta1.QuerySpotPriceRequest': [condenseOsmosisGammV1beta1QuerySpotPriceRequest, expandOsmosisGammV1beta1QuerySpotPriceRequest, decodeOsmosisGammV1beta1QuerySpotPriceRequest],
    '/osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest': [condenseOsmosisGammV1beta1QueryPoolsWithFilterRequest, expandOsmosisGammV1beta1QueryPoolsWithFilterRequest, decodeOsmosisGammV1beta1QueryPoolsWithFilterRequest],
    '/osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse': [condenseOsmosisGammV1beta1QueryPoolsWithFilterResponse, expandOsmosisGammV1beta1QueryPoolsWithFilterResponse, decodeOsmosisGammV1beta1QueryPoolsWithFilterResponse],
    '/osmosis.gamm.v1beta1.QuerySpotPriceResponse': [condenseOsmosisGammV1beta1QuerySpotPriceResponse, expandOsmosisGammV1beta1QuerySpotPriceResponse, decodeOsmosisGammV1beta1QuerySpotPriceResponse],
    '/osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest': [condenseOsmosisGammV1beta1QuerySwapExactAmountInRequest, expandOsmosisGammV1beta1QuerySwapExactAmountInRequest, decodeOsmosisGammV1beta1QuerySwapExactAmountInRequest],
    '/osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse': [condenseOsmosisGammV1beta1QuerySwapExactAmountInResponse, expandOsmosisGammV1beta1QuerySwapExactAmountInResponse, decodeOsmosisGammV1beta1QuerySwapExactAmountInResponse],
    '/osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest': [condenseOsmosisGammV1beta1QuerySwapExactAmountOutRequest, expandOsmosisGammV1beta1QuerySwapExactAmountOutRequest, decodeOsmosisGammV1beta1QuerySwapExactAmountOutRequest],
    '/osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse': [condenseOsmosisGammV1beta1QuerySwapExactAmountOutResponse, expandOsmosisGammV1beta1QuerySwapExactAmountOutResponse, decodeOsmosisGammV1beta1QuerySwapExactAmountOutResponse],
    '/osmosis.gamm.v1beta1.QueryTotalLiquidityRequest': [condenseOsmosisGammV1beta1QueryTotalLiquidityRequest, expandOsmosisGammV1beta1QueryTotalLiquidityRequest, decodeOsmosisGammV1beta1QueryTotalLiquidityRequest],
    '/osmosis.gamm.v1beta1.QueryTotalLiquidityResponse': [condenseOsmosisGammV1beta1QueryTotalLiquidityResponse, expandOsmosisGammV1beta1QueryTotalLiquidityResponse, decodeOsmosisGammV1beta1QueryTotalLiquidityResponse],
    '/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest': [condenseOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest, expandOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest, decodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMRequest],
    '/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse': [condenseOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse, expandOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse, decodeOsmosisGammV1beta1QueryConcentratedPoolIdLinkFromCFMMResponse],
    '/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest': [condenseOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest, expandOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest, decodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksRequest],
    '/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse': [condenseOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse, expandOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse, decodeOsmosisGammV1beta1QueryCFMMConcentratedPoolLinksResponse],
    '/osmosis.gamm.v1beta1.Params': [condenseOsmosisGammV1beta1Params, expandOsmosisGammV1beta1Params, decodeOsmosisGammV1beta1Params],
    '/osmosis.gamm.v1beta1.GenesisState': [condenseOsmosisGammV1beta1GenesisState, expandOsmosisGammV1beta1GenesisState, decodeOsmosisGammV1beta1GenesisState],
    '/osmosis.gamm.v1beta1.MigrationRecords': [condenseOsmosisGammV1beta1MigrationRecords, expandOsmosisGammV1beta1MigrationRecords, decodeOsmosisGammV1beta1MigrationRecords],
    '/osmosis.gamm.v1beta1.BalancerToConcentratedPoolLink': [condenseOsmosisGammV1beta1BalancerToConcentratedPoolLink, expandOsmosisGammV1beta1BalancerToConcentratedPoolLink, decodeOsmosisGammV1beta1BalancerToConcentratedPoolLink],
    '/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest': [condenseOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest, expandOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest, decodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthRequest],
    '/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse': [condenseOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse, expandOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse, decodeOsmosisDowntimedetectorV1beta1RecoveredSinceDowntimeOfLengthResponse],
    '/osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry': [condenseOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry, expandOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry, decodeOsmosisDowntimedetectorV1beta1GenesisDowntimeEntry],
    '/osmosis.downtimedetector.v1beta1.GenesisState': [condenseOsmosisDowntimedetectorV1beta1GenesisState, expandOsmosisDowntimedetectorV1beta1GenesisState, decodeOsmosisDowntimedetectorV1beta1GenesisState],
    '/osmosis.superfluid.MsgSuperfluidDelegate': [condenseOsmosisSuperfluidMsgSuperfluidDelegate, expandOsmosisSuperfluidMsgSuperfluidDelegate, decodeOsmosisSuperfluidMsgSuperfluidDelegate],
    '/osmosis.superfluid.MsgSuperfluidDelegateResponse': [condenseOsmosisSuperfluidMsgSuperfluidDelegateResponse, expandOsmosisSuperfluidMsgSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgSuperfluidDelegateResponse],
    '/osmosis.superfluid.MsgSuperfluidUndelegate': [condenseOsmosisSuperfluidMsgSuperfluidUndelegate, expandOsmosisSuperfluidMsgSuperfluidUndelegate, decodeOsmosisSuperfluidMsgSuperfluidUndelegate],
    '/osmosis.superfluid.MsgSuperfluidUndelegateResponse': [condenseOsmosisSuperfluidMsgSuperfluidUndelegateResponse, expandOsmosisSuperfluidMsgSuperfluidUndelegateResponse, decodeOsmosisSuperfluidMsgSuperfluidUndelegateResponse],
    '/osmosis.superfluid.MsgSuperfluidUnbondLock': [condenseOsmosisSuperfluidMsgSuperfluidUnbondLock, expandOsmosisSuperfluidMsgSuperfluidUnbondLock, decodeOsmosisSuperfluidMsgSuperfluidUnbondLock],
    '/osmosis.superfluid.MsgSuperfluidUnbondLockResponse': [condenseOsmosisSuperfluidMsgSuperfluidUnbondLockResponse, expandOsmosisSuperfluidMsgSuperfluidUnbondLockResponse, decodeOsmosisSuperfluidMsgSuperfluidUnbondLockResponse],
    '/osmosis.superfluid.MsgSuperfluidUndelegateAndUnbondLock': [condenseOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock, expandOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock, decodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLock],
    '/osmosis.superfluid.MsgSuperfluidUndelegateAndUnbondLockResponse': [condenseOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse, expandOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse, decodeOsmosisSuperfluidMsgSuperfluidUndelegateAndUnbondLockResponse],
    '/osmosis.superfluid.MsgLockAndSuperfluidDelegate': [condenseOsmosisSuperfluidMsgLockAndSuperfluidDelegate, expandOsmosisSuperfluidMsgLockAndSuperfluidDelegate, decodeOsmosisSuperfluidMsgLockAndSuperfluidDelegate],
    '/osmosis.superfluid.MsgLockAndSuperfluidDelegateResponse': [condenseOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse, expandOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgLockAndSuperfluidDelegateResponse],
    '/osmosis.superfluid.MsgCreateFullRangePositionAndSuperfluidDelegate': [condenseOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate, expandOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate, decodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegate],
    '/osmosis.superfluid.MsgCreateFullRangePositionAndSuperfluidDelegateResponse': [condenseOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse, expandOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse, decodeOsmosisSuperfluidMsgCreateFullRangePositionAndSuperfluidDelegateResponse],
    '/osmosis.superfluid.MsgUnPoolWhitelistedPool': [condenseOsmosisSuperfluidMsgUnPoolWhitelistedPool, expandOsmosisSuperfluidMsgUnPoolWhitelistedPool, decodeOsmosisSuperfluidMsgUnPoolWhitelistedPool],
    '/osmosis.superfluid.MsgUnPoolWhitelistedPoolResponse': [condenseOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse, expandOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse, decodeOsmosisSuperfluidMsgUnPoolWhitelistedPoolResponse],
    '/osmosis.superfluid.MsgUnlockAndMigrateSharesToFullRangeConcentratedPosition': [condenseOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition, expandOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition, decodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPosition],
    '/osmosis.superfluid.MsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse': [condenseOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse, expandOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse, decodeOsmosisSuperfluidMsgUnlockAndMigrateSharesToFullRangeConcentratedPositionResponse],
    '/osmosis.superfluid.MsgAddToConcentratedLiquiditySuperfluidPosition': [condenseOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition, expandOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition, decodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPosition],
    '/osmosis.superfluid.MsgAddToConcentratedLiquiditySuperfluidPositionResponse': [condenseOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse, expandOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse, decodeOsmosisSuperfluidMsgAddToConcentratedLiquiditySuperfluidPositionResponse],
    '/osmosis.superfluid.MsgUnbondConvertAndStake': [condenseOsmosisSuperfluidMsgUnbondConvertAndStake, expandOsmosisSuperfluidMsgUnbondConvertAndStake, decodeOsmosisSuperfluidMsgUnbondConvertAndStake],
    '/osmosis.superfluid.MsgUnbondConvertAndStakeResponse': [condenseOsmosisSuperfluidMsgUnbondConvertAndStakeResponse, expandOsmosisSuperfluidMsgUnbondConvertAndStakeResponse, decodeOsmosisSuperfluidMsgUnbondConvertAndStakeResponse],
    '/osmosis.superfluid.QueryParamsRequest': [condenseOsmosisSuperfluidQueryParamsRequest, expandOsmosisSuperfluidQueryParamsRequest, decodeOsmosisSuperfluidQueryParamsRequest],
    '/osmosis.superfluid.QueryParamsResponse': [condenseOsmosisSuperfluidQueryParamsResponse, expandOsmosisSuperfluidQueryParamsResponse, decodeOsmosisSuperfluidQueryParamsResponse],
    '/osmosis.superfluid.AssetTypeRequest': [condenseOsmosisSuperfluidAssetTypeRequest, expandOsmosisSuperfluidAssetTypeRequest, decodeOsmosisSuperfluidAssetTypeRequest],
    '/osmosis.superfluid.AssetTypeResponse': [condenseOsmosisSuperfluidAssetTypeResponse, expandOsmosisSuperfluidAssetTypeResponse, decodeOsmosisSuperfluidAssetTypeResponse],
    '/osmosis.superfluid.AllAssetsRequest': [condenseOsmosisSuperfluidAllAssetsRequest, expandOsmosisSuperfluidAllAssetsRequest, decodeOsmosisSuperfluidAllAssetsRequest],
    '/osmosis.superfluid.AllAssetsResponse': [condenseOsmosisSuperfluidAllAssetsResponse, expandOsmosisSuperfluidAllAssetsResponse, decodeOsmosisSuperfluidAllAssetsResponse],
    '/osmosis.superfluid.AssetMultiplierRequest': [condenseOsmosisSuperfluidAssetMultiplierRequest, expandOsmosisSuperfluidAssetMultiplierRequest, decodeOsmosisSuperfluidAssetMultiplierRequest],
    '/osmosis.superfluid.AssetMultiplierResponse': [condenseOsmosisSuperfluidAssetMultiplierResponse, expandOsmosisSuperfluidAssetMultiplierResponse, decodeOsmosisSuperfluidAssetMultiplierResponse],
    '/osmosis.superfluid.SuperfluidIntermediaryAccountInfo': [condenseOsmosisSuperfluidSuperfluidIntermediaryAccountInfo, expandOsmosisSuperfluidSuperfluidIntermediaryAccountInfo, decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo],
    '/osmosis.superfluid.AllIntermediaryAccountsRequest': [condenseOsmosisSuperfluidAllIntermediaryAccountsRequest, expandOsmosisSuperfluidAllIntermediaryAccountsRequest, decodeOsmosisSuperfluidAllIntermediaryAccountsRequest],
    '/osmosis.superfluid.AllIntermediaryAccountsResponse': [condenseOsmosisSuperfluidAllIntermediaryAccountsResponse, expandOsmosisSuperfluidAllIntermediaryAccountsResponse, decodeOsmosisSuperfluidAllIntermediaryAccountsResponse],
    '/osmosis.superfluid.ConnectedIntermediaryAccountRequest': [condenseOsmosisSuperfluidConnectedIntermediaryAccountRequest, expandOsmosisSuperfluidConnectedIntermediaryAccountRequest, decodeOsmosisSuperfluidConnectedIntermediaryAccountRequest],
    '/osmosis.superfluid.ConnectedIntermediaryAccountResponse': [condenseOsmosisSuperfluidConnectedIntermediaryAccountResponse, expandOsmosisSuperfluidConnectedIntermediaryAccountResponse, decodeOsmosisSuperfluidConnectedIntermediaryAccountResponse],
    '/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest': [condenseOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest, expandOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest, decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest],
    '/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse': [condenseOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse, expandOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse, decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse],
    '/osmosis.superfluid.Delegations': [condenseOsmosisSuperfluidDelegations, expandOsmosisSuperfluidDelegations, decodeOsmosisSuperfluidDelegations],
    '/osmosis.superfluid.TotalSuperfluidDelegationsRequest': [condenseOsmosisSuperfluidTotalSuperfluidDelegationsRequest, expandOsmosisSuperfluidTotalSuperfluidDelegationsRequest, decodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest],
    '/osmosis.superfluid.TotalSuperfluidDelegationsResponse': [condenseOsmosisSuperfluidTotalSuperfluidDelegationsResponse, expandOsmosisSuperfluidTotalSuperfluidDelegationsResponse, decodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse],
    '/osmosis.superfluid.SuperfluidDelegationAmountRequest': [condenseOsmosisSuperfluidSuperfluidDelegationAmountRequest, expandOsmosisSuperfluidSuperfluidDelegationAmountRequest, decodeOsmosisSuperfluidSuperfluidDelegationAmountRequest],
    '/osmosis.superfluid.SuperfluidDelegationAmountResponse': [condenseOsmosisSuperfluidSuperfluidDelegationAmountResponse, expandOsmosisSuperfluidSuperfluidDelegationAmountResponse, decodeOsmosisSuperfluidSuperfluidDelegationAmountResponse],
    '/osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest': [condenseOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest, expandOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest, decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest],
    '/osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse': [condenseOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse, expandOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse, decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse],
    '/osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest': [condenseOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest, expandOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest, decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest],
    '/osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse': [condenseOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse, expandOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse, decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse],
    '/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest': [condenseOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest, expandOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest, decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest],
    '/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse': [condenseOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse, expandOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse, decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse],
    '/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest': [condenseOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, expandOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest, decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest],
    '/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse': [condenseOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, expandOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse, decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse],
    '/osmosis.superfluid.QueryTotalDelegationByDelegatorRequest': [condenseOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest, expandOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest, decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest],
    '/osmosis.superfluid.QueryTotalDelegationByDelegatorResponse': [condenseOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse, expandOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse, decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse],
    '/osmosis.superfluid.QueryUnpoolWhitelistRequest': [condenseOsmosisSuperfluidQueryUnpoolWhitelistRequest, expandOsmosisSuperfluidQueryUnpoolWhitelistRequest, decodeOsmosisSuperfluidQueryUnpoolWhitelistRequest],
    '/osmosis.superfluid.QueryUnpoolWhitelistResponse': [condenseOsmosisSuperfluidQueryUnpoolWhitelistResponse, expandOsmosisSuperfluidQueryUnpoolWhitelistResponse, decodeOsmosisSuperfluidQueryUnpoolWhitelistResponse],
    '/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest': [condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest, expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest],
    '/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse': [condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse, expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse],
    '/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest': [condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest, expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest],
    '/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse': [condenseOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse, expandOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse, decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse],
    '/osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal': [condenseOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal, expandOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal, decodeOsmosisSuperfluidV1beta1SetSuperfluidAssetsProposal],
    '/osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal': [condenseOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal, expandOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal, decodeOsmosisSuperfluidV1beta1RemoveSuperfluidAssetsProposal],
    '/osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal': [condenseOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal, expandOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal, decodeOsmosisSuperfluidV1beta1UpdateUnpoolWhiteListProposal],
    '/osmosis.superfluid.GenesisState': [condenseOsmosisSuperfluidGenesisState, expandOsmosisSuperfluidGenesisState, decodeOsmosisSuperfluidGenesisState],
    '/osmosis.superfluid.SuperfluidAsset': [condenseOsmosisSuperfluidSuperfluidAsset, expandOsmosisSuperfluidSuperfluidAsset, decodeOsmosisSuperfluidSuperfluidAsset],
    '/osmosis.superfluid.SuperfluidIntermediaryAccount': [condenseOsmosisSuperfluidSuperfluidIntermediaryAccount, expandOsmosisSuperfluidSuperfluidIntermediaryAccount, decodeOsmosisSuperfluidSuperfluidIntermediaryAccount],
    '/osmosis.superfluid.OsmoEquivalentMultiplierRecord': [condenseOsmosisSuperfluidOsmoEquivalentMultiplierRecord, expandOsmosisSuperfluidOsmoEquivalentMultiplierRecord, decodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord],
    '/osmosis.superfluid.SuperfluidDelegationRecord': [condenseOsmosisSuperfluidSuperfluidDelegationRecord, expandOsmosisSuperfluidSuperfluidDelegationRecord, decodeOsmosisSuperfluidSuperfluidDelegationRecord],
    '/osmosis.superfluid.LockIdIntermediaryAccountConnection': [condenseOsmosisSuperfluidLockIdIntermediaryAccountConnection, expandOsmosisSuperfluidLockIdIntermediaryAccountConnection, decodeOsmosisSuperfluidLockIdIntermediaryAccountConnection],
    '/osmosis.superfluid.UnpoolWhitelistedPools': [condenseOsmosisSuperfluidUnpoolWhitelistedPools, expandOsmosisSuperfluidUnpoolWhitelistedPools, decodeOsmosisSuperfluidUnpoolWhitelistedPools],
    '/osmosis.superfluid.ConcentratedPoolUserPositionRecord': [condenseOsmosisSuperfluidConcentratedPoolUserPositionRecord, expandOsmosisSuperfluidConcentratedPoolUserPositionRecord, decodeOsmosisSuperfluidConcentratedPoolUserPositionRecord],
    '/osmosis.superfluid.Params': [condenseOsmosisSuperfluidParams, expandOsmosisSuperfluidParams, decodeOsmosisSuperfluidParams],
    '/osmosis.cosmwasmpool.v1beta1.UploadCosmWasmPoolCodeAndWhiteListProposal': [condenseOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal, expandOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal, decodeOsmosisCosmwasmpoolV1beta1UploadCosmWasmPoolCodeAndWhiteListProposal],
    '/osmosis.cosmwasmpool.v1beta1.MigratePoolContractsProposal': [condenseOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal, expandOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal, decodeOsmosisCosmwasmpoolV1beta1MigratePoolContractsProposal],
    '/osmosis.cosmwasmpool.v1beta1.ParamsRequest': [condenseOsmosisCosmwasmpoolV1beta1ParamsRequest, expandOsmosisCosmwasmpoolV1beta1ParamsRequest, decodeOsmosisCosmwasmpoolV1beta1ParamsRequest],
    '/osmosis.cosmwasmpool.v1beta1.ParamsResponse': [condenseOsmosisCosmwasmpoolV1beta1ParamsResponse, expandOsmosisCosmwasmpoolV1beta1ParamsResponse, decodeOsmosisCosmwasmpoolV1beta1ParamsResponse],
    '/osmosis.cosmwasmpool.v1beta1.PoolsRequest': [condenseOsmosisCosmwasmpoolV1beta1PoolsRequest, expandOsmosisCosmwasmpoolV1beta1PoolsRequest, decodeOsmosisCosmwasmpoolV1beta1PoolsRequest],
    '/osmosis.cosmwasmpool.v1beta1.PoolsResponse': [condenseOsmosisCosmwasmpoolV1beta1PoolsResponse, expandOsmosisCosmwasmpoolV1beta1PoolsResponse, decodeOsmosisCosmwasmpoolV1beta1PoolsResponse],
    '/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest': [condenseOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest, expandOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest, decodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdRequest],
    '/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse': [condenseOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse, expandOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse, decodeOsmosisCosmwasmpoolV1beta1ContractInfoByPoolIdResponse],
    '/osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPool': [condenseOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool, expandOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool, decodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPool],
    '/osmosis.cosmwasmpool.v1beta1.MsgCreateCosmWasmPoolResponse': [condenseOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse, expandOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse, decodeOsmosisCosmwasmpoolV1beta1MsgCreateCosmWasmPoolResponse],
    '/osmosis.cosmwasmpool.v1beta1.CosmWasmPool': [condenseOsmosisCosmwasmpoolV1beta1CosmWasmPool, expandOsmosisCosmwasmpoolV1beta1CosmWasmPool, decodeOsmosisCosmwasmpoolV1beta1CosmWasmPool],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountIn': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountIn, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountIn, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountIn],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountInSudoMsg': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsg],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountInSudoMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountInSudoMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountOut': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOut, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOut, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOut],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountOutSudoMsg': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsg],
    '/osmosis.cosmwasmpool.v1beta1.SwapExactAmountOutSudoMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse, expandOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse, decodeOsmosisCosmwasmpoolV1beta1SwapExactAmountOutSudoMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.EmptyRequest': [condenseOsmosisCosmwasmpoolV1beta1EmptyRequest, expandOsmosisCosmwasmpoolV1beta1EmptyRequest, decodeOsmosisCosmwasmpoolV1beta1EmptyRequest],
    '/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest': [condenseOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest, expandOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest, decodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgRequest],
    '/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse, expandOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse, decodeOsmosisCosmwasmpoolV1beta1JoinPoolExecuteMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest': [condenseOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest, expandOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest, decodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgRequest],
    '/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse, expandOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse, decodeOsmosisCosmwasmpoolV1beta1ExitPoolExecuteMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.InstantiateMsg': [condenseOsmosisCosmwasmpoolV1beta1InstantiateMsg, expandOsmosisCosmwasmpoolV1beta1InstantiateMsg, decodeOsmosisCosmwasmpoolV1beta1InstantiateMsg],
    '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn': [condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn, expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn, decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenIn],
    '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest': [condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest, expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest, decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInRequest],
    '/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse': [condenseOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse, expandOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse, decodeOsmosisCosmwasmpoolV1beta1CalcOutAmtGivenInResponse],
    '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut': [condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut, expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut, decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOut],
    '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest': [condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest, expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest, decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutRequest],
    '/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse': [condenseOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse, expandOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse, decodeOsmosisCosmwasmpoolV1beta1CalcInAmtGivenOutResponse],
    '/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsg': [condenseOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg, expandOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg, decodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsg],
    '/osmosis.cosmwasmpool.v1beta1.GetSwapFeeQueryMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse, expandOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse, decodeOsmosisCosmwasmpoolV1beta1GetSwapFeeQueryMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.SpotPrice': [condenseOsmosisCosmwasmpoolV1beta1SpotPrice, expandOsmosisCosmwasmpoolV1beta1SpotPrice, decodeOsmosisCosmwasmpoolV1beta1SpotPrice],
    '/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsg': [condenseOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg, expandOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg, decodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsg],
    '/osmosis.cosmwasmpool.v1beta1.SpotPriceQueryMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse, expandOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse, decodeOsmosisCosmwasmpoolV1beta1SpotPriceQueryMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.EmptyStruct': [condenseOsmosisCosmwasmpoolV1beta1EmptyStruct, expandOsmosisCosmwasmpoolV1beta1EmptyStruct, decodeOsmosisCosmwasmpoolV1beta1EmptyStruct],
    '/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsg': [condenseOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg, expandOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg, decodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsg],
    '/osmosis.cosmwasmpool.v1beta1.GetTotalPoolLiquidityQueryMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse, expandOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse, decodeOsmosisCosmwasmpoolV1beta1GetTotalPoolLiquidityQueryMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsg': [condenseOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg, expandOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg, decodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsg],
    '/osmosis.cosmwasmpool.v1beta1.GetTotalSharesQueryMsgResponse': [condenseOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse, expandOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse, decodeOsmosisCosmwasmpoolV1beta1GetTotalSharesQueryMsgResponse],
    '/osmosis.cosmwasmpool.v1beta1.GenesisState': [condenseOsmosisCosmwasmpoolV1beta1GenesisState, expandOsmosisCosmwasmpoolV1beta1GenesisState, decodeOsmosisCosmwasmpoolV1beta1GenesisState],
    '/osmosis.cosmwasmpool.v1beta1.Params': [condenseOsmosisCosmwasmpoolV1beta1Params, expandOsmosisCosmwasmpoolV1beta1Params, decodeOsmosisCosmwasmpoolV1beta1Params],
    '/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition': [condenseOsmosisConcentratedliquidityV1beta1MsgCreatePosition, expandOsmosisConcentratedliquidityV1beta1MsgCreatePosition, decodeOsmosisConcentratedliquidityV1beta1MsgCreatePosition],
    '/osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse, expandOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse, decodeOsmosisConcentratedliquidityV1beta1MsgCreatePositionResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgAddToPosition': [condenseOsmosisConcentratedliquidityV1beta1MsgAddToPosition, expandOsmosisConcentratedliquidityV1beta1MsgAddToPosition, decodeOsmosisConcentratedliquidityV1beta1MsgAddToPosition],
    '/osmosis.concentratedliquidity.v1beta1.MsgAddToPositionResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse, expandOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse, decodeOsmosisConcentratedliquidityV1beta1MsgAddToPositionResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition': [condenseOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition, expandOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition, decodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPosition],
    '/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse, expandOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse, decodeOsmosisConcentratedliquidityV1beta1MsgWithdrawPositionResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewards': [condenseOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards, expandOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards, decodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewards],
    '/osmosis.concentratedliquidity.v1beta1.MsgCollectSpreadRewardsResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse, expandOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse, decodeOsmosisConcentratedliquidityV1beta1MsgCollectSpreadRewardsResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives': [condenseOsmosisConcentratedliquidityV1beta1MsgCollectIncentives, expandOsmosisConcentratedliquidityV1beta1MsgCollectIncentives, decodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentives],
    '/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse, expandOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse, decodeOsmosisConcentratedliquidityV1beta1MsgCollectIncentivesResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions': [condenseOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions, expandOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions, decodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositions],
    '/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse, expandOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse, decodeOsmosisConcentratedliquidityV1beta1MsgFungifyChargedPositionsResponse],
    '/osmosis.concentratedliquidity.v1beta1.MsgTransferPositions': [condenseOsmosisConcentratedliquidityV1beta1MsgTransferPositions, expandOsmosisConcentratedliquidityV1beta1MsgTransferPositions, decodeOsmosisConcentratedliquidityV1beta1MsgTransferPositions],
    '/osmosis.concentratedliquidity.v1beta1.MsgTransferPositionsResponse': [condenseOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse, expandOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse, decodeOsmosisConcentratedliquidityV1beta1MsgTransferPositionsResponse],
    '/osmosis.concentratedliquidity.v1beta1.TickInfo': [condenseOsmosisConcentratedliquidityV1beta1TickInfo, expandOsmosisConcentratedliquidityV1beta1TickInfo, decodeOsmosisConcentratedliquidityV1beta1TickInfo],
    '/osmosis.concentratedliquidity.v1beta1.UptimeTrackers': [condenseOsmosisConcentratedliquidityV1beta1UptimeTrackers, expandOsmosisConcentratedliquidityV1beta1UptimeTrackers, decodeOsmosisConcentratedliquidityV1beta1UptimeTrackers],
    '/osmosis.concentratedliquidity.v1beta1.UptimeTracker': [condenseOsmosisConcentratedliquidityV1beta1UptimeTracker, expandOsmosisConcentratedliquidityV1beta1UptimeTracker, decodeOsmosisConcentratedliquidityV1beta1UptimeTracker],
    '/osmosis.concentratedliquidity.v1beta1.CreateConcentratedLiquidityPoolsProposal': [condenseOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal, expandOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal, decodeOsmosisConcentratedliquidityV1beta1CreateConcentratedLiquidityPoolsProposal],
    '/osmosis.concentratedliquidity.v1beta1.TickSpacingDecreaseProposal': [condenseOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal, expandOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal, decodeOsmosisConcentratedliquidityV1beta1TickSpacingDecreaseProposal],
    '/osmosis.concentratedliquidity.v1beta1.PoolIdToTickSpacingRecord': [condenseOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord, expandOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord, decodeOsmosisConcentratedliquidityV1beta1PoolIdToTickSpacingRecord],
    '/osmosis.concentratedliquidity.v1beta1.PoolRecord': [condenseOsmosisConcentratedliquidityV1beta1PoolRecord, expandOsmosisConcentratedliquidityV1beta1PoolRecord, decodeOsmosisConcentratedliquidityV1beta1PoolRecord],
    '/osmosis.concentratedliquidity.v1beta1.IncentiveRecord': [condenseOsmosisConcentratedliquidityV1beta1IncentiveRecord, expandOsmosisConcentratedliquidityV1beta1IncentiveRecord, decodeOsmosisConcentratedliquidityV1beta1IncentiveRecord],
    '/osmosis.concentratedliquidity.v1beta1.IncentiveRecordBody': [condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordBody, expandOsmosisConcentratedliquidityV1beta1IncentiveRecordBody, decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordBody],
    '/osmosis.concentratedliquidity.v1beta1.Pool': [condenseOsmosisConcentratedliquidityV1beta1Pool, expandOsmosisConcentratedliquidityV1beta1Pool, decodeOsmosisConcentratedliquidityV1beta1Pool],
    '/osmosis.concentratedliquidity.v1beta1.Position': [condenseOsmosisConcentratedliquidityV1beta1Position, expandOsmosisConcentratedliquidityV1beta1Position, decodeOsmosisConcentratedliquidityV1beta1Position],
    '/osmosis.concentratedliquidity.v1beta1.FullPositionBreakdown': [condenseOsmosisConcentratedliquidityV1beta1FullPositionBreakdown, expandOsmosisConcentratedliquidityV1beta1FullPositionBreakdown, decodeOsmosisConcentratedliquidityV1beta1FullPositionBreakdown],
    '/osmosis.concentratedliquidity.v1beta1.PositionWithPeriodLock': [condenseOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock, expandOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock, decodeOsmosisConcentratedliquidityV1beta1PositionWithPeriodLock],
    '/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool': [condenseOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool, expandOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool, decodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPool],
    '/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse': [condenseOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse, expandOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse, decodeOsmosisConcentratedliquidityPoolmodelConcentratedV1beta1MsgCreateConcentratedPoolResponse],
    '/osmosis.concentratedliquidity.v1beta1.UserPositionsRequest': [condenseOsmosisConcentratedliquidityV1beta1UserPositionsRequest, expandOsmosisConcentratedliquidityV1beta1UserPositionsRequest, decodeOsmosisConcentratedliquidityV1beta1UserPositionsRequest],
    '/osmosis.concentratedliquidity.v1beta1.UserPositionsResponse': [condenseOsmosisConcentratedliquidityV1beta1UserPositionsResponse, expandOsmosisConcentratedliquidityV1beta1UserPositionsResponse, decodeOsmosisConcentratedliquidityV1beta1UserPositionsResponse],
    '/osmosis.concentratedliquidity.v1beta1.PositionByIdRequest': [condenseOsmosisConcentratedliquidityV1beta1PositionByIdRequest, expandOsmosisConcentratedliquidityV1beta1PositionByIdRequest, decodeOsmosisConcentratedliquidityV1beta1PositionByIdRequest],
    '/osmosis.concentratedliquidity.v1beta1.PositionByIdResponse': [condenseOsmosisConcentratedliquidityV1beta1PositionByIdResponse, expandOsmosisConcentratedliquidityV1beta1PositionByIdResponse, decodeOsmosisConcentratedliquidityV1beta1PositionByIdResponse],
    '/osmosis.concentratedliquidity.v1beta1.PoolsRequest': [condenseOsmosisConcentratedliquidityV1beta1PoolsRequest, expandOsmosisConcentratedliquidityV1beta1PoolsRequest, decodeOsmosisConcentratedliquidityV1beta1PoolsRequest],
    '/osmosis.concentratedliquidity.v1beta1.PoolsResponse': [condenseOsmosisConcentratedliquidityV1beta1PoolsResponse, expandOsmosisConcentratedliquidityV1beta1PoolsResponse, decodeOsmosisConcentratedliquidityV1beta1PoolsResponse],
    '/osmosis.concentratedliquidity.v1beta1.ParamsRequest': [condenseOsmosisConcentratedliquidityV1beta1ParamsRequest, expandOsmosisConcentratedliquidityV1beta1ParamsRequest, decodeOsmosisConcentratedliquidityV1beta1ParamsRequest],
    '/osmosis.concentratedliquidity.v1beta1.ParamsResponse': [condenseOsmosisConcentratedliquidityV1beta1ParamsResponse, expandOsmosisConcentratedliquidityV1beta1ParamsResponse, decodeOsmosisConcentratedliquidityV1beta1ParamsResponse],
    '/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet': [condenseOsmosisConcentratedliquidityV1beta1TickLiquidityNet, expandOsmosisConcentratedliquidityV1beta1TickLiquidityNet, decodeOsmosisConcentratedliquidityV1beta1TickLiquidityNet],
    '/osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange': [condenseOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange, expandOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange, decodeOsmosisConcentratedliquidityV1beta1LiquidityDepthWithRange],
    '/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest': [condenseOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest, expandOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest, decodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionRequest],
    '/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse': [condenseOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse, expandOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse, decodeOsmosisConcentratedliquidityV1beta1LiquidityNetInDirectionResponse],
    '/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest': [condenseOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest, expandOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest, decodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeRequest],
    '/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse': [condenseOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse, expandOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse, decodeOsmosisConcentratedliquidityV1beta1LiquidityPerTickRangeResponse],
    '/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest': [condenseOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest, expandOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest, decodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsRequest],
    '/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse': [condenseOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse, expandOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse, decodeOsmosisConcentratedliquidityV1beta1ClaimableSpreadRewardsResponse],
    '/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest': [condenseOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest, expandOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest, decodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesRequest],
    '/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse': [condenseOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse, expandOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse, decodeOsmosisConcentratedliquidityV1beta1ClaimableIncentivesResponse],
    '/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest': [condenseOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest, expandOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest, decodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsRequest],
    '/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse': [condenseOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse, expandOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse, decodeOsmosisConcentratedliquidityV1beta1PoolAccumulatorRewardsResponse],
    '/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest': [condenseOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest, expandOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest, decodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersRequest],
    '/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse': [condenseOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse, expandOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse, decodeOsmosisConcentratedliquidityV1beta1TickAccumulatorTrackersResponse],
    '/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest': [condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest, expandOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest, decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsRequest],
    '/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse': [condenseOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse, expandOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse, decodeOsmosisConcentratedliquidityV1beta1IncentiveRecordsResponse],
    '/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest': [condenseOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest, expandOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest, decodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdRequest],
    '/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse': [condenseOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse, expandOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse, decodeOsmosisConcentratedliquidityV1beta1CFMMPoolIdLinkFromConcentratedPoolIdResponse],
    '/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest': [condenseOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest, expandOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest, decodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsRequest],
    '/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse': [condenseOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse, expandOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse, decodeOsmosisConcentratedliquidityV1beta1UserUnbondingPositionsResponse],
    '/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest': [condenseOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest, expandOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest, decodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityRequest],
    '/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse': [condenseOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse, expandOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse, decodeOsmosisConcentratedliquidityV1beta1GetTotalLiquidityResponse],
    '/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest': [condenseOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest, expandOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest, decodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksRequest],
    '/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse': [condenseOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse, expandOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse, decodeOsmosisConcentratedliquidityV1beta1NumNextInitializedTicksResponse],
    '/osmosis.concentratedliquidity.v1beta1.FullTick': [condenseOsmosisConcentratedliquidityV1beta1FullTick, expandOsmosisConcentratedliquidityV1beta1FullTick, decodeOsmosisConcentratedliquidityV1beta1FullTick],
    '/osmosis.concentratedliquidity.v1beta1.PoolData': [condenseOsmosisConcentratedliquidityV1beta1PoolData, expandOsmosisConcentratedliquidityV1beta1PoolData, decodeOsmosisConcentratedliquidityV1beta1PoolData],
    '/osmosis.concentratedliquidity.v1beta1.PositionData': [condenseOsmosisConcentratedliquidityV1beta1PositionData, expandOsmosisConcentratedliquidityV1beta1PositionData, decodeOsmosisConcentratedliquidityV1beta1PositionData],
    '/osmosis.concentratedliquidity.v1beta1.GenesisState': [condenseOsmosisConcentratedliquidityV1beta1GenesisState, expandOsmosisConcentratedliquidityV1beta1GenesisState, decodeOsmosisConcentratedliquidityV1beta1GenesisState],
    '/osmosis.concentratedliquidity.v1beta1.AccumObject': [condenseOsmosisConcentratedliquidityV1beta1AccumObject, expandOsmosisConcentratedliquidityV1beta1AccumObject, decodeOsmosisConcentratedliquidityV1beta1AccumObject],
    '/osmosis.concentratedliquidity.Params': [condenseOsmosisConcentratedliquidityParams, expandOsmosisConcentratedliquidityParams, decodeOsmosisConcentratedliquidityParams],
    '/osmosis.store.v1beta1.Node': [condenseOsmosisStoreV1beta1Node, expandOsmosisStoreV1beta1Node, decodeOsmosisStoreV1beta1Node],
    '/osmosis.store.v1beta1.Child': [condenseOsmosisStoreV1beta1Child, expandOsmosisStoreV1beta1Child, decodeOsmosisStoreV1beta1Child],
    '/osmosis.store.v1beta1.Leaf': [condenseOsmosisStoreV1beta1Leaf, expandOsmosisStoreV1beta1Leaf, decodeOsmosisStoreV1beta1Leaf],
    '/osmosis.ibcratelimit.v1beta1.ParamsRequest': [condenseOsmosisIbcratelimitV1beta1ParamsRequest, expandOsmosisIbcratelimitV1beta1ParamsRequest, decodeOsmosisIbcratelimitV1beta1ParamsRequest],
    '/osmosis.ibcratelimit.v1beta1.ParamsResponse': [condenseOsmosisIbcratelimitV1beta1ParamsResponse, expandOsmosisIbcratelimitV1beta1ParamsResponse, decodeOsmosisIbcratelimitV1beta1ParamsResponse],
    '/osmosis.ibcratelimit.v1beta1.GenesisState': [condenseOsmosisIbcratelimitV1beta1GenesisState, expandOsmosisIbcratelimitV1beta1GenesisState, decodeOsmosisIbcratelimitV1beta1GenesisState],
    '/osmosis.ibcratelimit.v1beta1.Params': [condenseOsmosisIbcratelimitV1beta1Params, expandOsmosisIbcratelimitV1beta1Params, decodeOsmosisIbcratelimitV1beta1Params],
    '/osmosis.ibchooks.MsgEmitIBCAck': [condenseOsmosisIbchooksMsgEmitIBCAck, expandOsmosisIbchooksMsgEmitIBCAck, decodeOsmosisIbchooksMsgEmitIBCAck],
    '/osmosis.ibchooks.MsgEmitIBCAckResponse': [condenseOsmosisIbchooksMsgEmitIBCAckResponse, expandOsmosisIbchooksMsgEmitIBCAckResponse, decodeOsmosisIbchooksMsgEmitIBCAckResponse],
    '/osmosis.ibchooks.GenesisState': [condenseOsmosisIbchooksGenesisState, expandOsmosisIbchooksGenesisState, decodeOsmosisIbchooksGenesisState],
    '/osmosis.ibchooks.Params': [condenseOsmosisIbchooksParams, expandOsmosisIbchooksParams, decodeOsmosisIbchooksParams],
    '/osmosis.epochs.v1beta1.QueryEpochsInfoRequest': [condenseOsmosisEpochsV1beta1QueryEpochsInfoRequest, expandOsmosisEpochsV1beta1QueryEpochsInfoRequest, decodeOsmosisEpochsV1beta1QueryEpochsInfoRequest],
    '/osmosis.epochs.v1beta1.QueryEpochsInfoResponse': [condenseOsmosisEpochsV1beta1QueryEpochsInfoResponse, expandOsmosisEpochsV1beta1QueryEpochsInfoResponse, decodeOsmosisEpochsV1beta1QueryEpochsInfoResponse],
    '/osmosis.epochs.v1beta1.QueryCurrentEpochRequest': [condenseOsmosisEpochsV1beta1QueryCurrentEpochRequest, expandOsmosisEpochsV1beta1QueryCurrentEpochRequest, decodeOsmosisEpochsV1beta1QueryCurrentEpochRequest],
    '/osmosis.epochs.v1beta1.QueryCurrentEpochResponse': [condenseOsmosisEpochsV1beta1QueryCurrentEpochResponse, expandOsmosisEpochsV1beta1QueryCurrentEpochResponse, decodeOsmosisEpochsV1beta1QueryCurrentEpochResponse],
    '/osmosis.epochs.v1beta1.EpochInfo': [condenseOsmosisEpochsV1beta1EpochInfo, expandOsmosisEpochsV1beta1EpochInfo, decodeOsmosisEpochsV1beta1EpochInfo],
    '/osmosis.epochs.v1beta1.GenesisState': [condenseOsmosisEpochsV1beta1GenesisState, expandOsmosisEpochsV1beta1GenesisState, decodeOsmosisEpochsV1beta1GenesisState],
    '/osmosis.txfees.v1beta1.UpdateFeeTokenProposal': [condenseOsmosisTxfeesV1beta1UpdateFeeTokenProposal, expandOsmosisTxfeesV1beta1UpdateFeeTokenProposal, decodeOsmosisTxfeesV1beta1UpdateFeeTokenProposal],
    '/osmosis.txfees.v1beta1.FeeToken': [condenseOsmosisTxfeesV1beta1FeeToken, expandOsmosisTxfeesV1beta1FeeToken, decodeOsmosisTxfeesV1beta1FeeToken],
    '/osmosis.txfees.v1beta1.QueryFeeTokensRequest': [condenseOsmosisTxfeesV1beta1QueryFeeTokensRequest, expandOsmosisTxfeesV1beta1QueryFeeTokensRequest, decodeOsmosisTxfeesV1beta1QueryFeeTokensRequest],
    '/osmosis.txfees.v1beta1.QueryFeeTokensResponse': [condenseOsmosisTxfeesV1beta1QueryFeeTokensResponse, expandOsmosisTxfeesV1beta1QueryFeeTokensResponse, decodeOsmosisTxfeesV1beta1QueryFeeTokensResponse],
    '/osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest': [condenseOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest, expandOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest, decodeOsmosisTxfeesV1beta1QueryDenomSpotPriceRequest],
    '/osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse': [condenseOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse, expandOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse, decodeOsmosisTxfeesV1beta1QueryDenomSpotPriceResponse],
    '/osmosis.txfees.v1beta1.QueryDenomPoolIdRequest': [condenseOsmosisTxfeesV1beta1QueryDenomPoolIdRequest, expandOsmosisTxfeesV1beta1QueryDenomPoolIdRequest, decodeOsmosisTxfeesV1beta1QueryDenomPoolIdRequest],
    '/osmosis.txfees.v1beta1.QueryDenomPoolIdResponse': [condenseOsmosisTxfeesV1beta1QueryDenomPoolIdResponse, expandOsmosisTxfeesV1beta1QueryDenomPoolIdResponse, decodeOsmosisTxfeesV1beta1QueryDenomPoolIdResponse],
    '/osmosis.txfees.v1beta1.QueryBaseDenomRequest': [condenseOsmosisTxfeesV1beta1QueryBaseDenomRequest, expandOsmosisTxfeesV1beta1QueryBaseDenomRequest, decodeOsmosisTxfeesV1beta1QueryBaseDenomRequest],
    '/osmosis.txfees.v1beta1.QueryBaseDenomResponse': [condenseOsmosisTxfeesV1beta1QueryBaseDenomResponse, expandOsmosisTxfeesV1beta1QueryBaseDenomResponse, decodeOsmosisTxfeesV1beta1QueryBaseDenomResponse],
    '/osmosis.txfees.v1beta1.GenesisState': [condenseOsmosisTxfeesV1beta1GenesisState, expandOsmosisTxfeesV1beta1GenesisState, decodeOsmosisTxfeesV1beta1GenesisState],
    '/osmosis.twap.v1beta1.ArithmeticTwapRequest': [condenseOsmosisTwapV1beta1ArithmeticTwapRequest, expandOsmosisTwapV1beta1ArithmeticTwapRequest, decodeOsmosisTwapV1beta1ArithmeticTwapRequest],
    '/osmosis.twap.v1beta1.ArithmeticTwapResponse': [condenseOsmosisTwapV1beta1ArithmeticTwapResponse, expandOsmosisTwapV1beta1ArithmeticTwapResponse, decodeOsmosisTwapV1beta1ArithmeticTwapResponse],
    '/osmosis.twap.v1beta1.ArithmeticTwapToNowRequest': [condenseOsmosisTwapV1beta1ArithmeticTwapToNowRequest, expandOsmosisTwapV1beta1ArithmeticTwapToNowRequest, decodeOsmosisTwapV1beta1ArithmeticTwapToNowRequest],
    '/osmosis.twap.v1beta1.ArithmeticTwapToNowResponse': [condenseOsmosisTwapV1beta1ArithmeticTwapToNowResponse, expandOsmosisTwapV1beta1ArithmeticTwapToNowResponse, decodeOsmosisTwapV1beta1ArithmeticTwapToNowResponse],
    '/osmosis.twap.v1beta1.GeometricTwapRequest': [condenseOsmosisTwapV1beta1GeometricTwapRequest, expandOsmosisTwapV1beta1GeometricTwapRequest, decodeOsmosisTwapV1beta1GeometricTwapRequest],
    '/osmosis.twap.v1beta1.GeometricTwapResponse': [condenseOsmosisTwapV1beta1GeometricTwapResponse, expandOsmosisTwapV1beta1GeometricTwapResponse, decodeOsmosisTwapV1beta1GeometricTwapResponse],
    '/osmosis.twap.v1beta1.GeometricTwapToNowRequest': [condenseOsmosisTwapV1beta1GeometricTwapToNowRequest, expandOsmosisTwapV1beta1GeometricTwapToNowRequest, decodeOsmosisTwapV1beta1GeometricTwapToNowRequest],
    '/osmosis.twap.v1beta1.GeometricTwapToNowResponse': [condenseOsmosisTwapV1beta1GeometricTwapToNowResponse, expandOsmosisTwapV1beta1GeometricTwapToNowResponse, decodeOsmosisTwapV1beta1GeometricTwapToNowResponse],
    '/osmosis.twap.v1beta1.ParamsRequest': [condenseOsmosisTwapV1beta1ParamsRequest, expandOsmosisTwapV1beta1ParamsRequest, decodeOsmosisTwapV1beta1ParamsRequest],
    '/osmosis.twap.v1beta1.ParamsResponse': [condenseOsmosisTwapV1beta1ParamsResponse, expandOsmosisTwapV1beta1ParamsResponse, decodeOsmosisTwapV1beta1ParamsResponse],
    '/osmosis.twap.v1beta1.Params': [condenseOsmosisTwapV1beta1Params, expandOsmosisTwapV1beta1Params, decodeOsmosisTwapV1beta1Params],
    '/osmosis.twap.v1beta1.GenesisState': [condenseOsmosisTwapV1beta1GenesisState, expandOsmosisTwapV1beta1GenesisState, decodeOsmosisTwapV1beta1GenesisState],
    '/osmosis.twap.v1beta1.TwapRecord': [condenseOsmosisTwapV1beta1TwapRecord, expandOsmosisTwapV1beta1TwapRecord, decodeOsmosisTwapV1beta1TwapRecord],
    '/osmosis.poolmanager.v2.SpotPriceRequest': [condenseOsmosisPoolmanagerV2SpotPriceRequest, expandOsmosisPoolmanagerV2SpotPriceRequest, decodeOsmosisPoolmanagerV2SpotPriceRequest],
    '/osmosis.poolmanager.v2.SpotPriceResponse': [condenseOsmosisPoolmanagerV2SpotPriceResponse, expandOsmosisPoolmanagerV2SpotPriceResponse, decodeOsmosisPoolmanagerV2SpotPriceResponse],
    '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountIn': [condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn, expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn, decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountIn],
    '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountInResponse': [condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse, expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse, decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountInResponse],
    '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountIn': [condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn, expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn, decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountIn],
    '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountInResponse': [condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse, expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse, decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountInResponse],
    '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountOut': [condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut, expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut, decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOut],
    '/osmosis.poolmanager.v1beta1.MsgSwapExactAmountOutResponse': [condenseOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse, expandOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse, decodeOsmosisPoolmanagerV1beta1MsgSwapExactAmountOutResponse],
    '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOut': [condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut, expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut, decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOut],
    '/osmosis.poolmanager.v1beta1.MsgSplitRouteSwapExactAmountOutResponse': [condenseOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse, expandOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse, decodeOsmosisPoolmanagerV1beta1MsgSplitRouteSwapExactAmountOutResponse],
    '/osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFee': [condenseOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee, expandOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee, decodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFee],
    '/osmosis.poolmanager.v1beta1.MsgSetDenomPairTakerFeeResponse': [condenseOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse, expandOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse, decodeOsmosisPoolmanagerV1beta1MsgSetDenomPairTakerFeeResponse],
    '/osmosis.poolmanager.v1beta1.DenomPairTakerFee': [condenseOsmosisPoolmanagerV1beta1DenomPairTakerFee, expandOsmosisPoolmanagerV1beta1DenomPairTakerFee, decodeOsmosisPoolmanagerV1beta1DenomPairTakerFee],
    '/osmosis.poolmanager.v1beta1.DenomPairTakerFeeProposal': [condenseOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal, expandOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal, decodeOsmosisPoolmanagerV1beta1DenomPairTakerFeeProposal],
    '/osmosis.poolmanager.v1beta1.ParamsRequest': [condenseOsmosisPoolmanagerV1beta1ParamsRequest, expandOsmosisPoolmanagerV1beta1ParamsRequest, decodeOsmosisPoolmanagerV1beta1ParamsRequest],
    '/osmosis.poolmanager.v1beta1.ParamsResponse': [condenseOsmosisPoolmanagerV1beta1ParamsResponse, expandOsmosisPoolmanagerV1beta1ParamsResponse, decodeOsmosisPoolmanagerV1beta1ParamsResponse],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInWithPrimitiveTypesRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInWithPrimitiveTypesRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountInRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest, expandOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest, decodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountInRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountInResponse': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountInResponse],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutWithPrimitiveTypesRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutWithPrimitiveTypesRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSinglePoolSwapExactAmountOutRequest': [condenseOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest, expandOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest, decodeOsmosisPoolmanagerV1beta1EstimateSinglePoolSwapExactAmountOutRequest],
    '/osmosis.poolmanager.v1beta1.EstimateSwapExactAmountOutResponse': [condenseOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse, expandOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse, decodeOsmosisPoolmanagerV1beta1EstimateSwapExactAmountOutResponse],
    '/osmosis.poolmanager.v1beta1.NumPoolsRequest': [condenseOsmosisPoolmanagerV1beta1NumPoolsRequest, expandOsmosisPoolmanagerV1beta1NumPoolsRequest, decodeOsmosisPoolmanagerV1beta1NumPoolsRequest],
    '/osmosis.poolmanager.v1beta1.NumPoolsResponse': [condenseOsmosisPoolmanagerV1beta1NumPoolsResponse, expandOsmosisPoolmanagerV1beta1NumPoolsResponse, decodeOsmosisPoolmanagerV1beta1NumPoolsResponse],
    '/osmosis.poolmanager.v1beta1.PoolRequest': [condenseOsmosisPoolmanagerV1beta1PoolRequest, expandOsmosisPoolmanagerV1beta1PoolRequest, decodeOsmosisPoolmanagerV1beta1PoolRequest],
    '/osmosis.poolmanager.v1beta1.PoolResponse': [condenseOsmosisPoolmanagerV1beta1PoolResponse, expandOsmosisPoolmanagerV1beta1PoolResponse, decodeOsmosisPoolmanagerV1beta1PoolResponse],
    '/osmosis.poolmanager.v1beta1.AllPoolsRequest': [condenseOsmosisPoolmanagerV1beta1AllPoolsRequest, expandOsmosisPoolmanagerV1beta1AllPoolsRequest, decodeOsmosisPoolmanagerV1beta1AllPoolsRequest],
    '/osmosis.poolmanager.v1beta1.AllPoolsResponse': [condenseOsmosisPoolmanagerV1beta1AllPoolsResponse, expandOsmosisPoolmanagerV1beta1AllPoolsResponse, decodeOsmosisPoolmanagerV1beta1AllPoolsResponse],
    '/osmosis.poolmanager.v1beta1.SpotPriceRequest': [condenseOsmosisPoolmanagerV1beta1SpotPriceRequest, expandOsmosisPoolmanagerV1beta1SpotPriceRequest, decodeOsmosisPoolmanagerV1beta1SpotPriceRequest],
    '/osmosis.poolmanager.v1beta1.SpotPriceResponse': [condenseOsmosisPoolmanagerV1beta1SpotPriceResponse, expandOsmosisPoolmanagerV1beta1SpotPriceResponse, decodeOsmosisPoolmanagerV1beta1SpotPriceResponse],
    '/osmosis.poolmanager.v1beta1.TotalPoolLiquidityRequest': [condenseOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest, expandOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest, decodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityRequest],
    '/osmosis.poolmanager.v1beta1.TotalPoolLiquidityResponse': [condenseOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse, expandOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse, decodeOsmosisPoolmanagerV1beta1TotalPoolLiquidityResponse],
    '/osmosis.poolmanager.v1beta1.TotalLiquidityRequest': [condenseOsmosisPoolmanagerV1beta1TotalLiquidityRequest, expandOsmosisPoolmanagerV1beta1TotalLiquidityRequest, decodeOsmosisPoolmanagerV1beta1TotalLiquidityRequest],
    '/osmosis.poolmanager.v1beta1.TotalLiquidityResponse': [condenseOsmosisPoolmanagerV1beta1TotalLiquidityResponse, expandOsmosisPoolmanagerV1beta1TotalLiquidityResponse, decodeOsmosisPoolmanagerV1beta1TotalLiquidityResponse],
    '/osmosis.poolmanager.v1beta1.TotalVolumeForPoolRequest': [condenseOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest, expandOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest, decodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolRequest],
    '/osmosis.poolmanager.v1beta1.TotalVolumeForPoolResponse': [condenseOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse, expandOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse, decodeOsmosisPoolmanagerV1beta1TotalVolumeForPoolResponse],
    '/osmosis.poolmanager.v1beta1.TradingPairTakerFeeRequest': [condenseOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest, expandOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest, decodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeRequest],
    '/osmosis.poolmanager.v1beta1.TradingPairTakerFeeResponse': [condenseOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse, expandOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse, decodeOsmosisPoolmanagerV1beta1TradingPairTakerFeeResponse],
    '/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactRequest': [condenseOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest, expandOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest, decodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactRequest],
    '/osmosis.poolmanager.v1beta1.EstimateTradeBasedOnPriceImpactResponse': [condenseOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse, expandOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse, decodeOsmosisPoolmanagerV1beta1EstimateTradeBasedOnPriceImpactResponse],
    '/osmosis.poolmanager.v1beta1.TrackedVolume': [condenseOsmosisPoolmanagerV1beta1TrackedVolume, expandOsmosisPoolmanagerV1beta1TrackedVolume, decodeOsmosisPoolmanagerV1beta1TrackedVolume],
    '/osmosis.poolmanager.v1beta1.ModuleRoute': [condenseOsmosisPoolmanagerV1beta1ModuleRoute, expandOsmosisPoolmanagerV1beta1ModuleRoute, decodeOsmosisPoolmanagerV1beta1ModuleRoute],
    '/osmosis.poolmanager.v1beta1.Params': [condenseOsmosisPoolmanagerV1beta1Params, expandOsmosisPoolmanagerV1beta1Params, decodeOsmosisPoolmanagerV1beta1Params],
    '/osmosis.poolmanager.v1beta1.GenesisState': [condenseOsmosisPoolmanagerV1beta1GenesisState, expandOsmosisPoolmanagerV1beta1GenesisState, decodeOsmosisPoolmanagerV1beta1GenesisState],
    '/osmosis.poolmanager.v1beta1.TakerFeeParams': [condenseOsmosisPoolmanagerV1beta1TakerFeeParams, expandOsmosisPoolmanagerV1beta1TakerFeeParams, decodeOsmosisPoolmanagerV1beta1TakerFeeParams],
    '/osmosis.poolmanager.v1beta1.TakerFeeDistributionPercentage': [condenseOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage, expandOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage, decodeOsmosisPoolmanagerV1beta1TakerFeeDistributionPercentage],
    '/osmosis.poolmanager.v1beta1.SwapAmountInRoute': [condenseOsmosisPoolmanagerV1beta1SwapAmountInRoute, expandOsmosisPoolmanagerV1beta1SwapAmountInRoute, decodeOsmosisPoolmanagerV1beta1SwapAmountInRoute],
    '/osmosis.poolmanager.v1beta1.SwapAmountOutRoute': [condenseOsmosisPoolmanagerV1beta1SwapAmountOutRoute, expandOsmosisPoolmanagerV1beta1SwapAmountOutRoute, decodeOsmosisPoolmanagerV1beta1SwapAmountOutRoute],
    '/osmosis.poolmanager.v1beta1.SwapAmountInSplitRoute': [condenseOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute, expandOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute, decodeOsmosisPoolmanagerV1beta1SwapAmountInSplitRoute],
    '/osmosis.poolmanager.v1beta1.SwapAmountOutSplitRoute': [condenseOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute, expandOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute, decodeOsmosisPoolmanagerV1beta1SwapAmountOutSplitRoute],
    '/osmosis.tokenfactory.v1beta1.MsgCreateDenom': [condenseOsmosisTokenfactoryV1beta1MsgCreateDenom, expandOsmosisTokenfactoryV1beta1MsgCreateDenom, decodeOsmosisTokenfactoryV1beta1MsgCreateDenom],
    '/osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse': [condenseOsmosisTokenfactoryV1beta1MsgCreateDenomResponse, expandOsmosisTokenfactoryV1beta1MsgCreateDenomResponse, decodeOsmosisTokenfactoryV1beta1MsgCreateDenomResponse],
    '/osmosis.tokenfactory.v1beta1.MsgMint': [condenseOsmosisTokenfactoryV1beta1MsgMint, expandOsmosisTokenfactoryV1beta1MsgMint, decodeOsmosisTokenfactoryV1beta1MsgMint],
    '/osmosis.tokenfactory.v1beta1.MsgMintResponse': [condenseOsmosisTokenfactoryV1beta1MsgMintResponse, expandOsmosisTokenfactoryV1beta1MsgMintResponse, decodeOsmosisTokenfactoryV1beta1MsgMintResponse],
    '/osmosis.tokenfactory.v1beta1.MsgBurn': [condenseOsmosisTokenfactoryV1beta1MsgBurn, expandOsmosisTokenfactoryV1beta1MsgBurn, decodeOsmosisTokenfactoryV1beta1MsgBurn],
    '/osmosis.tokenfactory.v1beta1.MsgBurnResponse': [condenseOsmosisTokenfactoryV1beta1MsgBurnResponse, expandOsmosisTokenfactoryV1beta1MsgBurnResponse, decodeOsmosisTokenfactoryV1beta1MsgBurnResponse],
    '/osmosis.tokenfactory.v1beta1.MsgChangeAdmin': [condenseOsmosisTokenfactoryV1beta1MsgChangeAdmin, expandOsmosisTokenfactoryV1beta1MsgChangeAdmin, decodeOsmosisTokenfactoryV1beta1MsgChangeAdmin],
    '/osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse': [condenseOsmosisTokenfactoryV1beta1MsgChangeAdminResponse, expandOsmosisTokenfactoryV1beta1MsgChangeAdminResponse, decodeOsmosisTokenfactoryV1beta1MsgChangeAdminResponse],
    '/osmosis.tokenfactory.v1beta1.MsgSetBeforeSendHook': [condenseOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook, expandOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook, decodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHook],
    '/osmosis.tokenfactory.v1beta1.MsgSetBeforeSendHookResponse': [condenseOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse, expandOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse, decodeOsmosisTokenfactoryV1beta1MsgSetBeforeSendHookResponse],
    '/osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata': [condenseOsmosisTokenfactoryV1beta1MsgSetDenomMetadata, expandOsmosisTokenfactoryV1beta1MsgSetDenomMetadata, decodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadata],
    '/osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse': [condenseOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse, expandOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse, decodeOsmosisTokenfactoryV1beta1MsgSetDenomMetadataResponse],
    '/osmosis.tokenfactory.v1beta1.MsgForceTransfer': [condenseOsmosisTokenfactoryV1beta1MsgForceTransfer, expandOsmosisTokenfactoryV1beta1MsgForceTransfer, decodeOsmosisTokenfactoryV1beta1MsgForceTransfer],
    '/osmosis.tokenfactory.v1beta1.MsgForceTransferResponse': [condenseOsmosisTokenfactoryV1beta1MsgForceTransferResponse, expandOsmosisTokenfactoryV1beta1MsgForceTransferResponse, decodeOsmosisTokenfactoryV1beta1MsgForceTransferResponse],
    '/osmosis.tokenfactory.v1beta1.QueryParamsRequest': [condenseOsmosisTokenfactoryV1beta1QueryParamsRequest, expandOsmosisTokenfactoryV1beta1QueryParamsRequest, decodeOsmosisTokenfactoryV1beta1QueryParamsRequest],
    '/osmosis.tokenfactory.v1beta1.QueryParamsResponse': [condenseOsmosisTokenfactoryV1beta1QueryParamsResponse, expandOsmosisTokenfactoryV1beta1QueryParamsResponse, decodeOsmosisTokenfactoryV1beta1QueryParamsResponse],
    '/osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest': [condenseOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest, expandOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest, decodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataRequest],
    '/osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse': [condenseOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse, expandOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse, decodeOsmosisTokenfactoryV1beta1QueryDenomAuthorityMetadataResponse],
    '/osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest': [condenseOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest, expandOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest, decodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorRequest],
    '/osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse': [condenseOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse, expandOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse, decodeOsmosisTokenfactoryV1beta1QueryDenomsFromCreatorResponse],
    '/osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressRequest': [condenseOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest, expandOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest, decodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressRequest],
    '/osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressResponse': [condenseOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse, expandOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse, decodeOsmosisTokenfactoryV1beta1QueryBeforeSendHookAddressResponse],
    '/osmosis.tokenfactory.v1beta1.GenesisState': [condenseOsmosisTokenfactoryV1beta1GenesisState, expandOsmosisTokenfactoryV1beta1GenesisState, decodeOsmosisTokenfactoryV1beta1GenesisState],
    '/osmosis.tokenfactory.v1beta1.GenesisDenom': [condenseOsmosisTokenfactoryV1beta1GenesisDenom, expandOsmosisTokenfactoryV1beta1GenesisDenom, decodeOsmosisTokenfactoryV1beta1GenesisDenom],
    '/osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata': [condenseOsmosisTokenfactoryV1beta1DenomAuthorityMetadata, expandOsmosisTokenfactoryV1beta1DenomAuthorityMetadata, decodeOsmosisTokenfactoryV1beta1DenomAuthorityMetadata],
    '/osmosis.tokenfactory.v1beta1.Params': [condenseOsmosisTokenfactoryV1beta1Params, expandOsmosisTokenfactoryV1beta1Params, decodeOsmosisTokenfactoryV1beta1Params],
    '/osmosis.poolincentives.v1beta1.ReplacePoolIncentivesProposal': [condenseOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal, expandOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal, decodeOsmosisPoolincentivesV1beta1ReplacePoolIncentivesProposal],
    '/osmosis.poolincentives.v1beta1.UpdatePoolIncentivesProposal': [condenseOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal, expandOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal, decodeOsmosisPoolincentivesV1beta1UpdatePoolIncentivesProposal],
    '/osmosis.poolincentives.v1beta1.Params': [condenseOsmosisPoolincentivesV1beta1Params, expandOsmosisPoolincentivesV1beta1Params, decodeOsmosisPoolincentivesV1beta1Params],
    '/osmosis.poolincentives.v1beta1.LockableDurationsInfo': [condenseOsmosisPoolincentivesV1beta1LockableDurationsInfo, expandOsmosisPoolincentivesV1beta1LockableDurationsInfo, decodeOsmosisPoolincentivesV1beta1LockableDurationsInfo],
    '/osmosis.poolincentives.v1beta1.DistrInfo': [condenseOsmosisPoolincentivesV1beta1DistrInfo, expandOsmosisPoolincentivesV1beta1DistrInfo, decodeOsmosisPoolincentivesV1beta1DistrInfo],
    '/osmosis.poolincentives.v1beta1.DistrRecord': [condenseOsmosisPoolincentivesV1beta1DistrRecord, expandOsmosisPoolincentivesV1beta1DistrRecord, decodeOsmosisPoolincentivesV1beta1DistrRecord],
    '/osmosis.poolincentives.v1beta1.PoolToGauge': [condenseOsmosisPoolincentivesV1beta1PoolToGauge, expandOsmosisPoolincentivesV1beta1PoolToGauge, decodeOsmosisPoolincentivesV1beta1PoolToGauge],
    '/osmosis.poolincentives.v1beta1.AnyPoolToInternalGauges': [condenseOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges, expandOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges, decodeOsmosisPoolincentivesV1beta1AnyPoolToInternalGauges],
    '/osmosis.poolincentives.v1beta1.ConcentratedPoolToNoLockGauges': [condenseOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges, expandOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges, decodeOsmosisPoolincentivesV1beta1ConcentratedPoolToNoLockGauges],
    '/osmosis.poolincentives.v1beta1.QueryGaugeIdsRequest': [condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest, expandOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest, decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsRequest],
    '/osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse': [condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse, expandOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse, decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponse],
    '/osmosis.poolincentives.v1beta1.QueryDistrInfoRequest': [condenseOsmosisPoolincentivesV1beta1QueryDistrInfoRequest, expandOsmosisPoolincentivesV1beta1QueryDistrInfoRequest, decodeOsmosisPoolincentivesV1beta1QueryDistrInfoRequest],
    '/osmosis.poolincentives.v1beta1.QueryDistrInfoResponse': [condenseOsmosisPoolincentivesV1beta1QueryDistrInfoResponse, expandOsmosisPoolincentivesV1beta1QueryDistrInfoResponse, decodeOsmosisPoolincentivesV1beta1QueryDistrInfoResponse],
    '/osmosis.poolincentives.v1beta1.QueryParamsRequest': [condenseOsmosisPoolincentivesV1beta1QueryParamsRequest, expandOsmosisPoolincentivesV1beta1QueryParamsRequest, decodeOsmosisPoolincentivesV1beta1QueryParamsRequest],
    '/osmosis.poolincentives.v1beta1.QueryParamsResponse': [condenseOsmosisPoolincentivesV1beta1QueryParamsResponse, expandOsmosisPoolincentivesV1beta1QueryParamsResponse, decodeOsmosisPoolincentivesV1beta1QueryParamsResponse],
    '/osmosis.poolincentives.v1beta1.QueryLockableDurationsRequest': [condenseOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest, expandOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest, decodeOsmosisPoolincentivesV1beta1QueryLockableDurationsRequest],
    '/osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse': [condenseOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse, expandOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse, decodeOsmosisPoolincentivesV1beta1QueryLockableDurationsResponse],
    '/osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsRequest': [condenseOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest, expandOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest, decodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsRequest],
    '/osmosis.poolincentives.v1beta1.IncentivizedPool': [condenseOsmosisPoolincentivesV1beta1IncentivizedPool, expandOsmosisPoolincentivesV1beta1IncentivizedPool, decodeOsmosisPoolincentivesV1beta1IncentivizedPool],
    '/osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse': [condenseOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse, expandOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse, decodeOsmosisPoolincentivesV1beta1QueryIncentivizedPoolsResponse],
    '/osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesRequest': [condenseOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest, expandOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest, decodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesRequest],
    '/osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse': [condenseOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse, expandOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse, decodeOsmosisPoolincentivesV1beta1QueryExternalIncentiveGaugesResponse],
    '/osmosis.poolincentives.v1beta1.GenesisState': [condenseOsmosisPoolincentivesV1beta1GenesisState, expandOsmosisPoolincentivesV1beta1GenesisState, decodeOsmosisPoolincentivesV1beta1GenesisState],
    '/osmosis.poolincentives.v1beta1.MigrationRecords': [condenseOsmosisPoolincentivesV1beta1MigrationRecords, expandOsmosisPoolincentivesV1beta1MigrationRecords, decodeOsmosisPoolincentivesV1beta1MigrationRecords],
    '/osmosis.poolincentives.v1beta1.BalancerToConcentratedPoolLink': [condenseOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink, expandOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink, decodeOsmosisPoolincentivesV1beta1BalancerToConcentratedPoolLink],
    '/osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreference': [condenseOsmosisValsetprefV1beta1MsgSetValidatorSetPreference, expandOsmosisValsetprefV1beta1MsgSetValidatorSetPreference, decodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreference],
    '/osmosis.valsetpref.v1beta1.MsgSetValidatorSetPreferenceResponse': [condenseOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse, expandOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse, decodeOsmosisValsetprefV1beta1MsgSetValidatorSetPreferenceResponse],
    '/osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSet': [condenseOsmosisValsetprefV1beta1MsgDelegateToValidatorSet, expandOsmosisValsetprefV1beta1MsgDelegateToValidatorSet, decodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSet],
    '/osmosis.valsetpref.v1beta1.MsgDelegateToValidatorSetResponse': [condenseOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse, expandOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse, decodeOsmosisValsetprefV1beta1MsgDelegateToValidatorSetResponse],
    '/osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSet': [condenseOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet, expandOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet, decodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSet],
    '/osmosis.valsetpref.v1beta1.MsgUndelegateFromValidatorSetResponse': [condenseOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse, expandOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse, decodeOsmosisValsetprefV1beta1MsgUndelegateFromValidatorSetResponse],
    '/osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSet': [condenseOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet, expandOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet, decodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSet],
    '/osmosis.valsetpref.v1beta1.MsgUndelegateFromRebalancedValidatorSetResponse': [condenseOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse, expandOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse, decodeOsmosisValsetprefV1beta1MsgUndelegateFromRebalancedValidatorSetResponse],
    '/osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSet': [condenseOsmosisValsetprefV1beta1MsgRedelegateValidatorSet, expandOsmosisValsetprefV1beta1MsgRedelegateValidatorSet, decodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSet],
    '/osmosis.valsetpref.v1beta1.MsgRedelegateValidatorSetResponse': [condenseOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse, expandOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse, decodeOsmosisValsetprefV1beta1MsgRedelegateValidatorSetResponse],
    '/osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewards': [condenseOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards, expandOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards, decodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewards],
    '/osmosis.valsetpref.v1beta1.MsgWithdrawDelegationRewardsResponse': [condenseOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse, expandOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse, decodeOsmosisValsetprefV1beta1MsgWithdrawDelegationRewardsResponse],
    '/osmosis.valsetpref.v1beta1.MsgDelegateBondedTokens': [condenseOsmosisValsetprefV1beta1MsgDelegateBondedTokens, expandOsmosisValsetprefV1beta1MsgDelegateBondedTokens, decodeOsmosisValsetprefV1beta1MsgDelegateBondedTokens],
    '/osmosis.valsetpref.v1beta1.MsgDelegateBondedTokensResponse': [condenseOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse, expandOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse, decodeOsmosisValsetprefV1beta1MsgDelegateBondedTokensResponse],
    '/osmosis.valsetpref.v1beta1.UserValidatorPreferencesRequest': [condenseOsmosisValsetprefV1beta1UserValidatorPreferencesRequest, expandOsmosisValsetprefV1beta1UserValidatorPreferencesRequest, decodeOsmosisValsetprefV1beta1UserValidatorPreferencesRequest],
    '/osmosis.valsetpref.v1beta1.UserValidatorPreferencesResponse': [condenseOsmosisValsetprefV1beta1UserValidatorPreferencesResponse, expandOsmosisValsetprefV1beta1UserValidatorPreferencesResponse, decodeOsmosisValsetprefV1beta1UserValidatorPreferencesResponse],
    '/osmosis.valsetpref.v1beta1.ValidatorPreference': [condenseOsmosisValsetprefV1beta1ValidatorPreference, expandOsmosisValsetprefV1beta1ValidatorPreference, decodeOsmosisValsetprefV1beta1ValidatorPreference],
    '/osmosis.valsetpref.v1beta1.ValidatorSetPreferences': [condenseOsmosisValsetprefV1beta1ValidatorSetPreferences, expandOsmosisValsetprefV1beta1ValidatorSetPreferences, decodeOsmosisValsetprefV1beta1ValidatorSetPreferences],
    '/osmosis.lockup.MsgLockTokens': [condenseOsmosisLockupMsgLockTokens, expandOsmosisLockupMsgLockTokens, decodeOsmosisLockupMsgLockTokens],
    '/osmosis.lockup.MsgLockTokensResponse': [condenseOsmosisLockupMsgLockTokensResponse, expandOsmosisLockupMsgLockTokensResponse, decodeOsmosisLockupMsgLockTokensResponse],
    '/osmosis.lockup.MsgBeginUnlockingAll': [condenseOsmosisLockupMsgBeginUnlockingAll, expandOsmosisLockupMsgBeginUnlockingAll, decodeOsmosisLockupMsgBeginUnlockingAll],
    '/osmosis.lockup.MsgBeginUnlockingAllResponse': [condenseOsmosisLockupMsgBeginUnlockingAllResponse, expandOsmosisLockupMsgBeginUnlockingAllResponse, decodeOsmosisLockupMsgBeginUnlockingAllResponse],
    '/osmosis.lockup.MsgBeginUnlocking': [condenseOsmosisLockupMsgBeginUnlocking, expandOsmosisLockupMsgBeginUnlocking, decodeOsmosisLockupMsgBeginUnlocking],
    '/osmosis.lockup.MsgBeginUnlockingResponse': [condenseOsmosisLockupMsgBeginUnlockingResponse, expandOsmosisLockupMsgBeginUnlockingResponse, decodeOsmosisLockupMsgBeginUnlockingResponse],
    '/osmosis.lockup.MsgExtendLockup': [condenseOsmosisLockupMsgExtendLockup, expandOsmosisLockupMsgExtendLockup, decodeOsmosisLockupMsgExtendLockup],
    '/osmosis.lockup.MsgExtendLockupResponse': [condenseOsmosisLockupMsgExtendLockupResponse, expandOsmosisLockupMsgExtendLockupResponse, decodeOsmosisLockupMsgExtendLockupResponse],
    '/osmosis.lockup.MsgForceUnlock': [condenseOsmosisLockupMsgForceUnlock, expandOsmosisLockupMsgForceUnlock, decodeOsmosisLockupMsgForceUnlock],
    '/osmosis.lockup.MsgForceUnlockResponse': [condenseOsmosisLockupMsgForceUnlockResponse, expandOsmosisLockupMsgForceUnlockResponse, decodeOsmosisLockupMsgForceUnlockResponse],
    '/osmosis.lockup.MsgSetRewardReceiverAddress': [condenseOsmosisLockupMsgSetRewardReceiverAddress, expandOsmosisLockupMsgSetRewardReceiverAddress, decodeOsmosisLockupMsgSetRewardReceiverAddress],
    '/osmosis.lockup.MsgSetRewardReceiverAddressResponse': [condenseOsmosisLockupMsgSetRewardReceiverAddressResponse, expandOsmosisLockupMsgSetRewardReceiverAddressResponse, decodeOsmosisLockupMsgSetRewardReceiverAddressResponse],
    '/osmosis.lockup.ModuleBalanceRequest': [condenseOsmosisLockupModuleBalanceRequest, expandOsmosisLockupModuleBalanceRequest, decodeOsmosisLockupModuleBalanceRequest],
    '/osmosis.lockup.ModuleBalanceResponse': [condenseOsmosisLockupModuleBalanceResponse, expandOsmosisLockupModuleBalanceResponse, decodeOsmosisLockupModuleBalanceResponse],
    '/osmosis.lockup.ModuleLockedAmountRequest': [condenseOsmosisLockupModuleLockedAmountRequest, expandOsmosisLockupModuleLockedAmountRequest, decodeOsmosisLockupModuleLockedAmountRequest],
    '/osmosis.lockup.ModuleLockedAmountResponse': [condenseOsmosisLockupModuleLockedAmountResponse, expandOsmosisLockupModuleLockedAmountResponse, decodeOsmosisLockupModuleLockedAmountResponse],
    '/osmosis.lockup.AccountUnlockableCoinsRequest': [condenseOsmosisLockupAccountUnlockableCoinsRequest, expandOsmosisLockupAccountUnlockableCoinsRequest, decodeOsmosisLockupAccountUnlockableCoinsRequest],
    '/osmosis.lockup.AccountUnlockableCoinsResponse': [condenseOsmosisLockupAccountUnlockableCoinsResponse, expandOsmosisLockupAccountUnlockableCoinsResponse, decodeOsmosisLockupAccountUnlockableCoinsResponse],
    '/osmosis.lockup.AccountUnlockingCoinsRequest': [condenseOsmosisLockupAccountUnlockingCoinsRequest, expandOsmosisLockupAccountUnlockingCoinsRequest, decodeOsmosisLockupAccountUnlockingCoinsRequest],
    '/osmosis.lockup.AccountUnlockingCoinsResponse': [condenseOsmosisLockupAccountUnlockingCoinsResponse, expandOsmosisLockupAccountUnlockingCoinsResponse, decodeOsmosisLockupAccountUnlockingCoinsResponse],
    '/osmosis.lockup.AccountLockedCoinsRequest': [condenseOsmosisLockupAccountLockedCoinsRequest, expandOsmosisLockupAccountLockedCoinsRequest, decodeOsmosisLockupAccountLockedCoinsRequest],
    '/osmosis.lockup.AccountLockedCoinsResponse': [condenseOsmosisLockupAccountLockedCoinsResponse, expandOsmosisLockupAccountLockedCoinsResponse, decodeOsmosisLockupAccountLockedCoinsResponse],
    '/osmosis.lockup.AccountLockedPastTimeRequest': [condenseOsmosisLockupAccountLockedPastTimeRequest, expandOsmosisLockupAccountLockedPastTimeRequest, decodeOsmosisLockupAccountLockedPastTimeRequest],
    '/osmosis.lockup.AccountLockedPastTimeResponse': [condenseOsmosisLockupAccountLockedPastTimeResponse, expandOsmosisLockupAccountLockedPastTimeResponse, decodeOsmosisLockupAccountLockedPastTimeResponse],
    '/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest': [condenseOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest, expandOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest, decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyRequest],
    '/osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse': [condenseOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse, expandOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse, decodeOsmosisLockupAccountLockedPastTimeNotUnlockingOnlyResponse],
    '/osmosis.lockup.AccountUnlockedBeforeTimeRequest': [condenseOsmosisLockupAccountUnlockedBeforeTimeRequest, expandOsmosisLockupAccountUnlockedBeforeTimeRequest, decodeOsmosisLockupAccountUnlockedBeforeTimeRequest],
    '/osmosis.lockup.AccountUnlockedBeforeTimeResponse': [condenseOsmosisLockupAccountUnlockedBeforeTimeResponse, expandOsmosisLockupAccountUnlockedBeforeTimeResponse, decodeOsmosisLockupAccountUnlockedBeforeTimeResponse],
    '/osmosis.lockup.AccountLockedPastTimeDenomRequest': [condenseOsmosisLockupAccountLockedPastTimeDenomRequest, expandOsmosisLockupAccountLockedPastTimeDenomRequest, decodeOsmosisLockupAccountLockedPastTimeDenomRequest],
    '/osmosis.lockup.AccountLockedPastTimeDenomResponse': [condenseOsmosisLockupAccountLockedPastTimeDenomResponse, expandOsmosisLockupAccountLockedPastTimeDenomResponse, decodeOsmosisLockupAccountLockedPastTimeDenomResponse],
    '/osmosis.lockup.LockedDenomRequest': [condenseOsmosisLockupLockedDenomRequest, expandOsmosisLockupLockedDenomRequest, decodeOsmosisLockupLockedDenomRequest],
    '/osmosis.lockup.LockedDenomResponse': [condenseOsmosisLockupLockedDenomResponse, expandOsmosisLockupLockedDenomResponse, decodeOsmosisLockupLockedDenomResponse],
    '/osmosis.lockup.LockedRequest': [condenseOsmosisLockupLockedRequest, expandOsmosisLockupLockedRequest, decodeOsmosisLockupLockedRequest],
    '/osmosis.lockup.LockedResponse': [condenseOsmosisLockupLockedResponse, expandOsmosisLockupLockedResponse, decodeOsmosisLockupLockedResponse],
    '/osmosis.lockup.LockRewardReceiverRequest': [condenseOsmosisLockupLockRewardReceiverRequest, expandOsmosisLockupLockRewardReceiverRequest, decodeOsmosisLockupLockRewardReceiverRequest],
    '/osmosis.lockup.LockRewardReceiverResponse': [condenseOsmosisLockupLockRewardReceiverResponse, expandOsmosisLockupLockRewardReceiverResponse, decodeOsmosisLockupLockRewardReceiverResponse],
    '/osmosis.lockup.NextLockIDRequest': [condenseOsmosisLockupNextLockIDRequest, expandOsmosisLockupNextLockIDRequest, decodeOsmosisLockupNextLockIDRequest],
    '/osmosis.lockup.NextLockIDResponse': [condenseOsmosisLockupNextLockIDResponse, expandOsmosisLockupNextLockIDResponse, decodeOsmosisLockupNextLockIDResponse],
    '/osmosis.lockup.SyntheticLockupsByLockupIDRequest': [condenseOsmosisLockupSyntheticLockupsByLockupIDRequest, expandOsmosisLockupSyntheticLockupsByLockupIDRequest, decodeOsmosisLockupSyntheticLockupsByLockupIDRequest],
    '/osmosis.lockup.SyntheticLockupsByLockupIDResponse': [condenseOsmosisLockupSyntheticLockupsByLockupIDResponse, expandOsmosisLockupSyntheticLockupsByLockupIDResponse, decodeOsmosisLockupSyntheticLockupsByLockupIDResponse],
    '/osmosis.lockup.SyntheticLockupByLockupIDRequest': [condenseOsmosisLockupSyntheticLockupByLockupIDRequest, expandOsmosisLockupSyntheticLockupByLockupIDRequest, decodeOsmosisLockupSyntheticLockupByLockupIDRequest],
    '/osmosis.lockup.SyntheticLockupByLockupIDResponse': [condenseOsmosisLockupSyntheticLockupByLockupIDResponse, expandOsmosisLockupSyntheticLockupByLockupIDResponse, decodeOsmosisLockupSyntheticLockupByLockupIDResponse],
    '/osmosis.lockup.AccountLockedLongerDurationRequest': [condenseOsmosisLockupAccountLockedLongerDurationRequest, expandOsmosisLockupAccountLockedLongerDurationRequest, decodeOsmosisLockupAccountLockedLongerDurationRequest],
    '/osmosis.lockup.AccountLockedLongerDurationResponse': [condenseOsmosisLockupAccountLockedLongerDurationResponse, expandOsmosisLockupAccountLockedLongerDurationResponse, decodeOsmosisLockupAccountLockedLongerDurationResponse],
    '/osmosis.lockup.AccountLockedDurationRequest': [condenseOsmosisLockupAccountLockedDurationRequest, expandOsmosisLockupAccountLockedDurationRequest, decodeOsmosisLockupAccountLockedDurationRequest],
    '/osmosis.lockup.AccountLockedDurationResponse': [condenseOsmosisLockupAccountLockedDurationResponse, expandOsmosisLockupAccountLockedDurationResponse, decodeOsmosisLockupAccountLockedDurationResponse],
    '/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest': [condenseOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest, expandOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest, decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyRequest],
    '/osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse': [condenseOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse, expandOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse, decodeOsmosisLockupAccountLockedLongerDurationNotUnlockingOnlyResponse],
    '/osmosis.lockup.AccountLockedLongerDurationDenomRequest': [condenseOsmosisLockupAccountLockedLongerDurationDenomRequest, expandOsmosisLockupAccountLockedLongerDurationDenomRequest, decodeOsmosisLockupAccountLockedLongerDurationDenomRequest],
    '/osmosis.lockup.AccountLockedLongerDurationDenomResponse': [condenseOsmosisLockupAccountLockedLongerDurationDenomResponse, expandOsmosisLockupAccountLockedLongerDurationDenomResponse, decodeOsmosisLockupAccountLockedLongerDurationDenomResponse],
    '/osmosis.lockup.QueryParamsRequest': [condenseOsmosisLockupQueryParamsRequest, expandOsmosisLockupQueryParamsRequest, decodeOsmosisLockupQueryParamsRequest],
    '/osmosis.lockup.QueryParamsResponse': [condenseOsmosisLockupQueryParamsResponse, expandOsmosisLockupQueryParamsResponse, decodeOsmosisLockupQueryParamsResponse],
    '/osmosis.lockup.GenesisState': [condenseOsmosisLockupGenesisState, expandOsmosisLockupGenesisState, decodeOsmosisLockupGenesisState],
    '/osmosis.lockup.PeriodLock': [condenseOsmosisLockupPeriodLock, expandOsmosisLockupPeriodLock, decodeOsmosisLockupPeriodLock],
    '/osmosis.lockup.QueryCondition': [condenseOsmosisLockupQueryCondition, expandOsmosisLockupQueryCondition, decodeOsmosisLockupQueryCondition],
    '/osmosis.lockup.SyntheticLock': [condenseOsmosisLockupSyntheticLock, expandOsmosisLockupSyntheticLock, decodeOsmosisLockupSyntheticLock],
    '/osmosis.lockup.Params': [condenseOsmosisLockupParams, expandOsmosisLockupParams, decodeOsmosisLockupParams],
    '/google.protobuf.Timestamp': [condenseGoogleProtobufTimestamp, expandGoogleProtobufTimestamp, decodeGoogleProtobufTimestamp],
    '/google.protobuf.Duration': [condenseGoogleProtobufDuration, expandGoogleProtobufDuration, decodeGoogleProtobufDuration],
    '/google.protobuf.Any': [condenseGoogleProtobufAny, expandGoogleProtobufAny, decodeGoogleProtobufAny],
    '/cosmos.crypto.keyring.v1.Record.Local': [condenseCosmosCryptoKeyringV1RecordLocal, expandCosmosCryptoKeyringV1RecordLocal, decodeCosmosCryptoKeyringV1RecordLocal],
    '/cosmos.crypto.keyring.v1.Record.Ledger': [condenseCosmosCryptoKeyringV1RecordLedger, expandCosmosCryptoKeyringV1RecordLedger, decodeCosmosCryptoKeyringV1RecordLedger],
    '/cosmos.crypto.keyring.v1.Record.Multi': [condenseCosmosCryptoKeyringV1RecordMulti, expandCosmosCryptoKeyringV1RecordMulti, decodeCosmosCryptoKeyringV1RecordMulti],
    '/cosmos.crypto.keyring.v1.Record.Offline': [condenseCosmosCryptoKeyringV1RecordOffline, expandCosmosCryptoKeyringV1RecordOffline, decodeCosmosCryptoKeyringV1RecordOffline],
    '/cosmos.tx.signing.v1beta1.SignatureDescriptor.Data': [condenseCosmosTxSigningV1beta1SignatureDescriptorData, expandCosmosTxSigningV1beta1SignatureDescriptorData, decodeCosmosTxSigningV1beta1SignatureDescriptorData],
    '/cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single': [condenseCosmosTxSigningV1beta1SignatureDescriptorDataSingle, expandCosmosTxSigningV1beta1SignatureDescriptorDataSingle, decodeCosmosTxSigningV1beta1SignatureDescriptorDataSingle],
    '/cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi': [condenseCosmosTxSigningV1beta1SignatureDescriptorDataMulti, expandCosmosTxSigningV1beta1SignatureDescriptorDataMulti, decodeCosmosTxSigningV1beta1SignatureDescriptorDataMulti],
    '/cosmos.tx.v1beta1.ModeInfo.Single': [condenseCosmosTxV1beta1ModeInfoSingle, expandCosmosTxV1beta1ModeInfoSingle, decodeCosmosTxV1beta1ModeInfoSingle],
    '/cosmos.tx.v1beta1.ModeInfo.Multi': [condenseCosmosTxV1beta1ModeInfoMulti, expandCosmosTxV1beta1ModeInfoMulti, decodeCosmosTxV1beta1ModeInfoMulti],
    '/cosmos.staking.v1beta1.StakeAuthorization.Validators': [condenseCosmosStakingV1beta1StakeAuthorizationValidators, expandCosmosStakingV1beta1StakeAuthorizationValidators, decodeCosmosStakingV1beta1StakeAuthorizationValidators],
    '/cosmos.orm.v1alpha1.ModuleSchemaDescriptor.FileEntry': [condenseCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry, expandCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry, decodeCosmosOrmV1alpha1ModuleSchemaDescriptorFileEntry],
    '/cosmos.orm.query.v1alpha1.ListRequest.Prefix': [condenseCosmosOrmQueryV1alpha1ListRequestPrefix, expandCosmosOrmQueryV1alpha1ListRequestPrefix, decodeCosmosOrmQueryV1alpha1ListRequestPrefix],
    '/cosmos.orm.query.v1alpha1.ListRequest.Range': [condenseCosmosOrmQueryV1alpha1ListRequestRange, expandCosmosOrmQueryV1alpha1ListRequestRange, decodeCosmosOrmQueryV1alpha1ListRequestRange],
    '/cosmos.autocli.v1.AppOptionsResponse.ModuleOptionsEntry': [condenseCosmosAutocliV1AppOptionsResponseModuleOptionsEntry, expandCosmosAutocliV1AppOptionsResponseModuleOptionsEntry, decodeCosmosAutocliV1AppOptionsResponseModuleOptionsEntry],
    '/cosmos.autocli.v1.RpcCommandOptions.FlagOptionsEntry': [condenseCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry, expandCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry, decodeCosmosAutocliV1RpcCommandOptionsFlagOptionsEntry],
    '/cosmos.autocli.v1.ServiceCommandDescriptor.SubCommandsEntry': [condenseCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry, expandCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry, decodeCosmosAutocliV1ServiceCommandDescriptorSubCommandsEntry],
    '/google.protobuf.FileDescriptorProto': [condenseGoogleProtobufFileDescriptorProto, expandGoogleProtobufFileDescriptorProto, decodeGoogleProtobufFileDescriptorProto],
    '/google.protobuf.DescriptorProto': [condenseGoogleProtobufDescriptorProto, expandGoogleProtobufDescriptorProto, decodeGoogleProtobufDescriptorProto],
    '/google.protobuf.FieldDescriptorProto': [condenseGoogleProtobufFieldDescriptorProto, expandGoogleProtobufFieldDescriptorProto, decodeGoogleProtobufFieldDescriptorProto],
    '/google.protobuf.FieldOptions': [condenseGoogleProtobufFieldOptions, expandGoogleProtobufFieldOptions, decodeGoogleProtobufFieldOptions],
    '/google.protobuf.FieldOptions.EditionDefault': [condenseGoogleProtobufFieldOptionsEditionDefault, expandGoogleProtobufFieldOptionsEditionDefault, decodeGoogleProtobufFieldOptionsEditionDefault],
    '/google.protobuf.FeatureSet': [condenseGoogleProtobufFeatureSet, expandGoogleProtobufFeatureSet, decodeGoogleProtobufFeatureSet],
    '/google.protobuf.UninterpretedOption': [condenseGoogleProtobufUninterpretedOption, expandGoogleProtobufUninterpretedOption, decodeGoogleProtobufUninterpretedOption],
    '/google.protobuf.UninterpretedOption.NamePart': [condenseGoogleProtobufUninterpretedOptionNamePart, expandGoogleProtobufUninterpretedOptionNamePart, decodeGoogleProtobufUninterpretedOptionNamePart],
    '/google.protobuf.EnumDescriptorProto': [condenseGoogleProtobufEnumDescriptorProto, expandGoogleProtobufEnumDescriptorProto, decodeGoogleProtobufEnumDescriptorProto],
    '/google.protobuf.EnumValueDescriptorProto': [condenseGoogleProtobufEnumValueDescriptorProto, expandGoogleProtobufEnumValueDescriptorProto, decodeGoogleProtobufEnumValueDescriptorProto],
    '/google.protobuf.EnumValueOptions': [condenseGoogleProtobufEnumValueOptions, expandGoogleProtobufEnumValueOptions, decodeGoogleProtobufEnumValueOptions],
    '/google.protobuf.EnumOptions': [condenseGoogleProtobufEnumOptions, expandGoogleProtobufEnumOptions, decodeGoogleProtobufEnumOptions],
    '/google.protobuf.EnumDescriptorProto.EnumReservedRange': [condenseGoogleProtobufEnumDescriptorProtoEnumReservedRange, expandGoogleProtobufEnumDescriptorProtoEnumReservedRange, decodeGoogleProtobufEnumDescriptorProtoEnumReservedRange],
    '/google.protobuf.DescriptorProto.ExtensionRange': [condenseGoogleProtobufDescriptorProtoExtensionRange, expandGoogleProtobufDescriptorProtoExtensionRange, decodeGoogleProtobufDescriptorProtoExtensionRange],
    '/google.protobuf.ExtensionRangeOptions': [condenseGoogleProtobufExtensionRangeOptions, expandGoogleProtobufExtensionRangeOptions, decodeGoogleProtobufExtensionRangeOptions],
    '/google.protobuf.ExtensionRangeOptions.Declaration': [condenseGoogleProtobufExtensionRangeOptionsDeclaration, expandGoogleProtobufExtensionRangeOptionsDeclaration, decodeGoogleProtobufExtensionRangeOptionsDeclaration],
    '/google.protobuf.MessageOptions': [condenseGoogleProtobufMessageOptions, expandGoogleProtobufMessageOptions, decodeGoogleProtobufMessageOptions],
    '/google.protobuf.OneofDescriptorProto': [condenseGoogleProtobufOneofDescriptorProto, expandGoogleProtobufOneofDescriptorProto, decodeGoogleProtobufOneofDescriptorProto],
    '/google.protobuf.OneofOptions': [condenseGoogleProtobufOneofOptions, expandGoogleProtobufOneofOptions, decodeGoogleProtobufOneofOptions],
    '/google.protobuf.DescriptorProto.ReservedRange': [condenseGoogleProtobufDescriptorProtoReservedRange, expandGoogleProtobufDescriptorProtoReservedRange, decodeGoogleProtobufDescriptorProtoReservedRange],
    '/google.protobuf.ServiceDescriptorProto': [condenseGoogleProtobufServiceDescriptorProto, expandGoogleProtobufServiceDescriptorProto, decodeGoogleProtobufServiceDescriptorProto],
    '/google.protobuf.MethodDescriptorProto': [condenseGoogleProtobufMethodDescriptorProto, expandGoogleProtobufMethodDescriptorProto, decodeGoogleProtobufMethodDescriptorProto],
    '/google.protobuf.MethodOptions': [condenseGoogleProtobufMethodOptions, expandGoogleProtobufMethodOptions, decodeGoogleProtobufMethodOptions],
    '/google.protobuf.ServiceOptions': [condenseGoogleProtobufServiceOptions, expandGoogleProtobufServiceOptions, decodeGoogleProtobufServiceOptions],
    '/google.protobuf.FileOptions': [condenseGoogleProtobufFileOptions, expandGoogleProtobufFileOptions, decodeGoogleProtobufFileOptions],
    '/google.protobuf.SourceCodeInfo': [condenseGoogleProtobufSourceCodeInfo, expandGoogleProtobufSourceCodeInfo, decodeGoogleProtobufSourceCodeInfo],
    '/google.protobuf.SourceCodeInfo.Location': [condenseGoogleProtobufSourceCodeInfoLocation, expandGoogleProtobufSourceCodeInfoLocation, decodeGoogleProtobufSourceCodeInfoLocation],
    '/axelar.snapshot.exported.v1beta1.Snapshot.ParticipantsEntry': [condenseAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry, expandAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry, decodeAxelarSnapshotExportedV1beta1SnapshotParticipantsEntry],
    '/axelar.vote.v1beta1.TalliedVote.IsVoterLateEntry': [condenseAxelarVoteV1beta1TalliedVoteIsVoterLateEntry, expandAxelarVoteV1beta1TalliedVoteIsVoterLateEntry, decodeAxelarVoteV1beta1TalliedVoteIsVoterLateEntry],
    '/axelar.snapshot.v1beta1.QueryValidatorsResponse.Validator': [condenseAxelarSnapshotV1beta1QueryValidatorsResponseValidator, expandAxelarSnapshotV1beta1QueryValidatorsResponseValidator, decodeAxelarSnapshotV1beta1QueryValidatorsResponseValidator],
    '/axelar.snapshot.v1beta1.QueryValidatorsResponse.TssIllegibilityInfo': [condenseAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo, expandAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo, decodeAxelarSnapshotV1beta1QueryValidatorsResponseTssIllegibilityInfo],
    '/axelar.axelarnet.v1beta1.PendingIBCTransferCountResponse.TransfersByChainEntry': [condenseAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry, expandAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry, decodeAxelarAxelarnetV1beta1PendingIBCTransferCountResponseTransfersByChainEntry],
    '/axelar.utils.v1beta1.QueueState.ItemsEntry': [condenseAxelarUtilsV1beta1QueueStateItemsEntry, expandAxelarUtilsV1beta1QueueStateItemsEntry, decodeAxelarUtilsV1beta1QueueStateItemsEntry],
    '/axelar.utils.v1beta1.QueueState.Item': [condenseAxelarUtilsV1beta1QueueStateItem, expandAxelarUtilsV1beta1QueueStateItem, decodeAxelarUtilsV1beta1QueueStateItem],
    '/axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry': [condenseAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry, expandAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry, decodeAxelarAxelarnetV1beta1GenesisStateSeqIdMappingEntry],
    '/axelar.multisig.v1beta1.SigningStarted.PubKeysEntry': [condenseAxelarMultisigV1beta1SigningStartedPubKeysEntry, expandAxelarMultisigV1beta1SigningStartedPubKeysEntry, decodeAxelarMultisigV1beta1SigningStartedPubKeysEntry],
    '/axelar.multisig.v1beta1.Key.PubKeysEntry': [condenseAxelarMultisigV1beta1KeyPubKeysEntry, expandAxelarMultisigV1beta1KeyPubKeysEntry, decodeAxelarMultisigV1beta1KeyPubKeysEntry],
    '/axelar.multisig.v1beta1.KeygenSession.IsPubKeyReceivedEntry': [condenseAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry, expandAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry, decodeAxelarMultisigV1beta1KeygenSessionIsPubKeyReceivedEntry],
    '/axelar.multisig.v1beta1.MultiSig.SigsEntry': [condenseAxelarMultisigV1beta1MultiSigSigsEntry, expandAxelarMultisigV1beta1MultiSigSigsEntry, decodeAxelarMultisigV1beta1MultiSigSigsEntry],
    '/axelar.reward.v1beta1.Pool.Reward': [condenseAxelarRewardV1beta1PoolReward, expandAxelarRewardV1beta1PoolReward, decodeAxelarRewardV1beta1PoolReward],
    '/axelar.evm.v1beta1.KeyAddressResponse.WeightedAddress': [condenseAxelarEvmV1beta1KeyAddressResponseWeightedAddress, expandAxelarEvmV1beta1KeyAddressResponseWeightedAddress, decodeAxelarEvmV1beta1KeyAddressResponseWeightedAddress],
    '/axelar.evm.v1beta1.CommandResponse.ParamsEntry': [condenseAxelarEvmV1beta1CommandResponseParamsEntry, expandAxelarEvmV1beta1CommandResponseParamsEntry, decodeAxelarEvmV1beta1CommandResponseParamsEntry],
    '/axelar.evm.v1beta1.QueryCommandResponse.ParamsEntry': [condenseAxelarEvmV1beta1QueryCommandResponseParamsEntry, expandAxelarEvmV1beta1QueryCommandResponseParamsEntry, decodeAxelarEvmV1beta1QueryCommandResponseParamsEntry],
    '/axelar.evm.v1beta1.ERC20TokensResponse.Token': [condenseAxelarEvmV1beta1ERC20TokensResponseToken, expandAxelarEvmV1beta1ERC20TokensResponseToken, decodeAxelarEvmV1beta1ERC20TokensResponseToken],
    '/axelar.evm.v1beta1.GenesisState.Chain': [condenseAxelarEvmV1beta1GenesisStateChain, expandAxelarEvmV1beta1GenesisStateChain, decodeAxelarEvmV1beta1GenesisStateChain],
    '/axelar.tss.tofnd.v1beta1.MessageOut.KeygenResult': [condenseAxelarTssTofndV1beta1MessageOutKeygenResult, expandAxelarTssTofndV1beta1MessageOutKeygenResult, decodeAxelarTssTofndV1beta1MessageOutKeygenResult],
    '/axelar.tss.tofnd.v1beta1.MessageOut.CriminalList': [condenseAxelarTssTofndV1beta1MessageOutCriminalList, expandAxelarTssTofndV1beta1MessageOutCriminalList, decodeAxelarTssTofndV1beta1MessageOutCriminalList],
    '/axelar.tss.tofnd.v1beta1.MessageOut.CriminalList.Criminal': [condenseAxelarTssTofndV1beta1MessageOutCriminalListCriminal, expandAxelarTssTofndV1beta1MessageOutCriminalListCriminal, decodeAxelarTssTofndV1beta1MessageOutCriminalListCriminal],
    '/axelar.tss.tofnd.v1beta1.MessageOut.SignResult': [condenseAxelarTssTofndV1beta1MessageOutSignResult, expandAxelarTssTofndV1beta1MessageOutSignResult, decodeAxelarTssTofndV1beta1MessageOutSignResult],
    '/axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey': [condenseAxelarTssV1beta1RegisterExternalKeysRequestExternalKey, expandAxelarTssV1beta1RegisterExternalKeysRequestExternalKey, decodeAxelarTssV1beta1RegisterExternalKeysRequestExternalKey],
    '/axelar.tss.v1beta1.MultisigInfo.Info': [condenseAxelarTssV1beta1MultisigInfoInfo, expandAxelarTssV1beta1MultisigInfoInfo, decodeAxelarTssV1beta1MultisigInfoInfo],
    '/axelar.tss.v1beta1.KeyRecoveryInfo.PrivateEntry': [condenseAxelarTssV1beta1KeyRecoveryInfoPrivateEntry, expandAxelarTssV1beta1KeyRecoveryInfoPrivateEntry, decodeAxelarTssV1beta1KeyRecoveryInfoPrivateEntry],
    '/osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration': [condenseOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration, expandOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration, decodeOsmosisPoolincentivesV1beta1QueryGaugeIdsResponseGaugeIdWithDuration],
};
export const condenseJsonAny = (g_any, p_type = g_any?.['@type']) => g_any ? encodeGoogleProtobufAny(p_type, H_REGISTRY_ANY[p_type][0](g_any)) : __UNDEFINED;
export const expandJsonAny = ([s_type_url, atu8_value]) => ({
    '@type': s_type_url,
    ...H_REGISTRY_ANY[s_type_url][2](atu8_value),
});
// export const expandProtobufAny = (atu8_any: DecodedGoogleProtobufAny | undefined): JsonAny | undefined => g_any? expandGoogleProtobufAny(p_type!, H_REGISTRY_ANY[p_type!][1](g_any)): __UNDEFINED;
//# sourceMappingURL=_any_condense.js.map