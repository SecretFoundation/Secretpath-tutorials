import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashBaseAttribute } from '../../base/v1beta2/attribute.js';
/**
 * Encodes a `Provider` protobuf message: stores owner auditor and attributes details
 * @param sa_owner - `owner`:
 * @param s_auditor - `auditor`:
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditProvider = (sa_owner, s_auditor, a_attributes) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_auditor) // string auditor = 2
    .B(a_attributes, 4) // Attribute[] attributes = 4
    .o;
/**
 * Encodes a `AuditedAttributes` protobuf message: Attributes
 * @param sa_owner - `owner`:
 * @param s_auditor - `auditor`:
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditAuditedAttributes = (sa_owner, s_auditor, a_attributes) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_auditor) // string auditor = 2
    .B(a_attributes) // Attribute[] attributes = 3
    .o;
/**
 * Encodes a `AttributesResponse` protobuf message: represents details of deployment along with group details
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditAttributesResponse = (a_attributes) => Protobuf() // ...
    .B(a_attributes) // AuditedAttributes[] attributes = 1
    .o;
/**
 * Encodes a `AttributesFilters` protobuf message: defines filters used to filter deployments
 * @param a_auditors - `auditors`:
 * @param a_owners - `owners`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditAttributesFilters = (a_auditors, a_owners) => Protobuf() // ...
    .S(a_auditors) // string[] auditors = 1
    .S(a_owners) // string[] owners = 2
    .o;
/**
 * Encodes a `MsgSignProviderAttributes` protobuf message: defines an SDK message for signing a provider attributes
 * @param sa_owner - `owner`:
 * @param s_auditor - `auditor`:
 * @param a_attributes - `attributes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditMsgSignProviderAttributes = (sa_owner, s_auditor, a_attributes) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_auditor) // string auditor = 2
    .B(a_attributes) // Attribute[] attributes = 3
    .o;
/**
 * Encodes a `MsgSignProviderAttributesResponse` protobuf message: defines the Msg/CreateProvider response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditMsgSignProviderAttributesResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgDeleteProviderAttributes` protobuf message: defined the Msg/DeleteProviderAttributes
 * @param sa_owner - `owner`:
 * @param s_auditor - `auditor`:
 * @param a_keys - `keys`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditMsgDeleteProviderAttributes = (sa_owner, s_auditor, a_keys) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_auditor) // string auditor = 2
    .S(a_keys) // string[] keys = 3
    .o;
/**
 * Encodes a `MsgDeleteProviderAttributesResponse` protobuf message: defines the Msg/ProviderAttributes response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashAuditMsgDeleteProviderAttributesResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf Provider message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAkashAuditProvider}
 */
export const decodeAkashAuditProvider = ((atu8_payload, [sa_owner, s_auditor, , a_attributes] = decode_protobuf(atu8_payload, [5, 5, 0, 0], [0, 0, 0, decodeAkashBaseAttribute])) => [sa_owner, s_auditor, __UNDEFINED, a_attributes]);
/**
 * Decodes a protobuf AuditedAttributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditAuditedAttributes}
 */
export const decodeAkashAuditAuditedAttributes = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeAkashBaseAttribute]);
/**
 * Decodes a protobuf Attributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditAttributesResponse}
 */
export const decodeAkashAuditAttributesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeAkashAuditAuditedAttributes]);
/**
 * Decodes a protobuf AttributesFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditAttributesFilters}
 */
export const decodeAkashAuditAttributesFilters = (atu8_payload) => decode_protobuf(atu8_payload, [4, 4]);
/**
 * Decodes a protobuf SignProviderAttributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditMsgSignProviderAttributes}
 */
export const decodeAkashAuditMsgSignProviderAttributes = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeAkashBaseAttribute]);
/**
 * Decodes a protobuf SignProviderAttributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditMsgSignProviderAttributesResponse}
 */
export const decodeAkashAuditMsgSignProviderAttributesResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DeleteProviderAttributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditMsgDeleteProviderAttributes}
 */
export const decodeAkashAuditMsgDeleteProviderAttributes = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 4]);
/**
 * Decodes a protobuf DeleteProviderAttributes message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditMsgDeleteProviderAttributesResponse}
 */
export const decodeAkashAuditMsgDeleteProviderAttributesResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link AkashAuditProvider} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: auditor -
 *   - 3: attributes -
 */
export const destructAkashAuditProvider = (g_struct) => [g_struct.owner, g_struct.auditor, __UNDEFINED, g_struct.attributes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_PROVIDER = '/akash.audit.v1beta2.Provider';
/**
 * Destructures the fields of a {@link AkashAuditAuditedAttributes} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: auditor -
 *   - 2: attributes -
 */
export const destructAkashAuditAuditedAttributes = (g_struct) => [g_struct.owner, g_struct.auditor, g_struct.attributes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_AUDITED_ATTRIBUTES = '/akash.audit.v1beta2.AuditedAttributes';
/**
 * Destructures the fields of a {@link AkashAuditAttributesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: attributes -
 */
export const destructAkashAuditAttributesResponse = (g_struct) => [g_struct.attributes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_ATTRIBUTES_RESPONSE = '/akash.audit.v1beta2.AttributesResponse';
/**
 * Destructures the fields of a {@link AkashAuditAttributesFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: auditors -
 *   - 1: owners -
 */
export const destructAkashAuditAttributesFilters = (g_struct) => [g_struct.auditors, g_struct.owners];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_ATTRIBUTES_FILTERS = '/akash.audit.v1beta2.AttributesFilters';
/**
 * Destructures the fields of a {@link AkashAuditMsgSignProviderAttributes} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: auditor -
 *   - 2: attributes -
 */
export const destructAkashAuditMsgSignProviderAttributes = (g_struct) => [g_struct.owner, g_struct.auditor, g_struct.attributes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_MSG_SIGN_PROVIDER_ATTRIBUTES = '/akash.audit.v1beta2.MsgSignProviderAttributes';
/**
 * Destructures the fields of a {@link AkashAuditMsgSignProviderAttributesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashAuditMsgSignProviderAttributesResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_MSG_SIGN_PROVIDER_ATTRIBUTES_RESPONSE = '/akash.audit.v1beta2.MsgSignProviderAttributesResponse';
/**
 * Destructures the fields of a {@link AkashAuditMsgDeleteProviderAttributes} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: auditor -
 *   - 2: keys -
 */
export const destructAkashAuditMsgDeleteProviderAttributes = (g_struct) => [g_struct.owner, g_struct.auditor, g_struct.keys];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_MSG_DELETE_PROVIDER_ATTRIBUTES = '/akash.audit.v1beta2.MsgDeleteProviderAttributes';
/**
 * Destructures the fields of a {@link AkashAuditMsgDeleteProviderAttributesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashAuditMsgDeleteProviderAttributesResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_AUDIT_MSG_DELETE_PROVIDER_ATTRIBUTES_RESPONSE = '/akash.audit.v1beta2.MsgDeleteProviderAttributesResponse';
//# sourceMappingURL=audit.js.map