/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashAuditProvider, DecodedAkashAuditProvider } from './audit.js';
import type { CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse, CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest } from '../../../cosmos/base/query/v1beta1/pagination.js';
export type EncodedAkashAuditQueryProvidersResponse = Encoded<'/akash.audit.v1beta3.QueryProvidersResponse'>;
export type EncodedAkashAuditQueryProviderRequest = Encoded<'/akash.audit.v1beta3.QueryProviderRequest'>;
export type EncodedAkashAuditQueryAllProvidersAttributesRequest = Encoded<'/akash.audit.v1beta3.QueryAllProvidersAttributesRequest'>;
export type EncodedAkashAuditQueryProviderAttributesRequest = Encoded<'/akash.audit.v1beta3.QueryProviderAttributesRequest'>;
export type EncodedAkashAuditQueryProviderAuditorRequest = Encoded<'/akash.audit.v1beta3.QueryProviderAuditorRequest'>;
export type EncodedAkashAuditQueryAuditorAttributesRequest = Encoded<'/akash.audit.v1beta3.QueryAuditorAttributesRequest'>;
/**
 * Queries all providers buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: providers - the 'providers' response property
 *   - 1: pagination - the 'providers' response property
 */
export declare const queryAkashAuditAllProvidersAttributes: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashAuditQueryProvidersResponse>>;
/**
 * Queries all provider signed attributes buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_owner -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: providers - the 'providers' response property
 *   - 1: pagination - the 'providers' response property
 */
export declare const queryAkashAuditProviderAttributes: (z_req: string | ({
    origin: string;
} & RequestInit), sa_owner?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashAuditQueryProvidersResponse>>;
/**
 * Queries provider signed attributes by specific auditor buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_auditor -
 * @param sa_owner -
 * @returns a tuple where:
 *   - 0: providers - the 'providers' response property
 *   - 1: pagination - the 'providers' response property
 */
export declare const queryAkashAuditProviderAuditorAttributes: (z_req: string | ({
    origin: string;
} & RequestInit), s_auditor?: Opt<string>, sa_owner?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashAuditQueryProvidersResponse>>;
/**
 * Queries all providers signed by this auditor buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_auditor -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: providers - the 'providers' response property
 *   - 1: pagination - the 'providers' response property
 */
export declare const queryAkashAuditAuditorAttributes: (z_req: string | ({
    origin: string;
} & RequestInit), s_auditor?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashAuditQueryProvidersResponse>>;
/**
 * Encodes a `QueryProvidersResponse` protobuf message: response type for the Query/Providers RPC method
 * @param a_providers - `providers`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryProvidersResponse: (a_providers?: Opt<Encoded<'/akash.audit.v1beta3.Provider'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashAuditQueryProvidersResponse;
/**
 * Encodes a `QueryProviderRequest` protobuf message: request type for the Query/Provider RPC method
 * @param s_auditor - `auditor`:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryProviderRequest: (s_auditor?: Opt<string>, sa_owner?: Opt<WeakAccountAddr>) => EncodedAkashAuditQueryProviderRequest;
/**
 * Encodes a `QueryAllProvidersAttributesRequest` protobuf message: request type for the Query/All Providers RPC method
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryAllProvidersAttributesRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashAuditQueryAllProvidersAttributesRequest;
/**
 * Encodes a `QueryProviderAttributesRequest` protobuf message: request type for the Query/Provider RPC method
 * @param sa_owner - `owner`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryProviderAttributesRequest: (sa_owner?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashAuditQueryProviderAttributesRequest;
/**
 * Encodes a `QueryProviderAuditorRequest` protobuf message: request type for the Query/Providers RPC method
 * @param s_auditor - `auditor`:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryProviderAuditorRequest: (s_auditor?: Opt<string>, sa_owner?: Opt<WeakAccountAddr>) => EncodedAkashAuditQueryProviderAuditorRequest;
/**
 * Encodes a `QueryAuditorAttributesRequest` protobuf message: request type for the Query/Providers RPC method
 * @param s_auditor - `auditor`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashAuditQueryAuditorAttributesRequest: (s_auditor?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashAuditQueryAuditorAttributesRequest;
/**
 * A decoded protobuf QueryProviders message
 *
 * Tuple where:
 *   - 0: providers -
 *   - 1: pagination -
 */
export type DecodedAkashAuditQueryProvidersResponse = [
    a_providers?: DecodedAkashAuditProvider[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryProviders message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryProvidersResponse}
 */
export declare const decodeAkashAuditQueryProvidersResponse: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryProvidersResponse;
/**
 * A decoded protobuf QueryProviderRequest message
 *
 * Tuple where:
 *   - 0: auditor -
 *   - 1: owner -
 */
export type DecodedAkashAuditQueryProviderRequest = [
    s_auditor?: string,
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryProviderRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryProviderRequest}
 */
export declare const decodeAkashAuditQueryProviderRequest: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryProviderRequest;
/**
 * A decoded protobuf QueryAllProvidersAttributesRequest message
 *
 * Alias for: pagination -
 */
export type DecodedAkashAuditQueryAllProvidersAttributesRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAllProvidersAttributesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryAllProvidersAttributesRequest}
 */
export declare const decodeAkashAuditQueryAllProvidersAttributesRequest: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryAllProvidersAttributesRequest;
/**
 * A decoded protobuf QueryProviderAttributesRequest message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: pagination -
 */
export type DecodedAkashAuditQueryProviderAttributesRequest = [
    sa_owner?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryProviderAttributesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryProviderAttributesRequest}
 */
export declare const decodeAkashAuditQueryProviderAttributesRequest: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryProviderAttributesRequest;
/**
 * A decoded protobuf QueryProviderAuditorRequest message
 *
 * Tuple where:
 *   - 0: auditor -
 *   - 1: owner -
 */
export type DecodedAkashAuditQueryProviderAuditorRequest = [
    s_auditor?: string,
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryProviderAuditorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryProviderAuditorRequest}
 */
export declare const decodeAkashAuditQueryProviderAuditorRequest: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryProviderAuditorRequest;
/**
 * A decoded protobuf QueryAuditorAttributesRequest message
 *
 * Tuple where:
 *   - 0: auditor -
 *   - 1: pagination -
 */
export type DecodedAkashAuditQueryAuditorAttributesRequest = [
    s_auditor?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryAuditorAttributesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashAuditQueryAuditorAttributesRequest}
 */
export declare const decodeAkashAuditQueryAuditorAttributesRequest: (atu8_payload: Uint8Array) => DecodedAkashAuditQueryAuditorAttributesRequest;
/**
 * Destructures the fields of a {@link AkashAuditQueryProvidersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: providers -
 *   - 1: pagination -
 */
export declare const destructAkashAuditQueryProvidersResponse: (g_struct: AkashAuditQueryProvidersResponse) => [providers?: AkashAuditProvider[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_PROVIDERS_RESPONSE = "/akash.audit.v1beta3.QueryProvidersResponse";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryProvidersResponse` - response type for the Query/Providers RPC method
 */
export type AkashAuditQueryProvidersResponse = {
    providers?: AkashAuditProvider[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link AkashAuditQueryProviderRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: auditor -
 *   - 1: owner -
 */
export declare const destructAkashAuditQueryProviderRequest: (g_struct: AkashAuditQueryProviderRequest) => [auditor?: string, owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_PROVIDER_REQUEST = "/akash.audit.v1beta3.QueryProviderRequest";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryProviderRequest` - request type for the Query/Provider RPC method
 */
export type AkashAuditQueryProviderRequest = {
    auditor?: string | undefined;
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link AkashAuditQueryAllProvidersAttributesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination -
 */
export declare const destructAkashAuditQueryAllProvidersAttributesRequest: (g_struct: AkashAuditQueryAllProvidersAttributesRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_ALL_PROVIDERS_ATTRIBUTES_REQUEST = "/akash.audit.v1beta3.QueryAllProvidersAttributesRequest";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryAllProvidersAttributesRequest` - request type for the Query/All Providers RPC method
 */
export type AkashAuditQueryAllProvidersAttributesRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashAuditQueryProviderAttributesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: pagination -
 */
export declare const destructAkashAuditQueryProviderAttributesRequest: (g_struct: AkashAuditQueryProviderAttributesRequest) => [owner?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_PROVIDER_ATTRIBUTES_REQUEST = "/akash.audit.v1beta3.QueryProviderAttributesRequest";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryProviderAttributesRequest` - request type for the Query/Provider RPC method
 */
export type AkashAuditQueryProviderAttributesRequest = {
    owner?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashAuditQueryProviderAuditorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: auditor -
 *   - 1: owner -
 */
export declare const destructAkashAuditQueryProviderAuditorRequest: (g_struct: AkashAuditQueryProviderAuditorRequest) => [auditor?: string, owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_PROVIDER_AUDITOR_REQUEST = "/akash.audit.v1beta3.QueryProviderAuditorRequest";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryProviderAuditorRequest` - request type for the Query/Providers RPC method
 */
export type AkashAuditQueryProviderAuditorRequest = {
    auditor?: string | undefined;
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link AkashAuditQueryAuditorAttributesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: auditor -
 *   - 1: pagination -
 */
export declare const destructAkashAuditQueryAuditorAttributesRequest: (g_struct: AkashAuditQueryAuditorAttributesRequest) => [auditor?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_AUDIT_QUERY_AUDITOR_ATTRIBUTES_REQUEST = "/akash.audit.v1beta3.QueryAuditorAttributesRequest";
/**
 * JSON serialization of `akash.audit.v1beta3.QueryAuditorAttributesRequest` - request type for the Query/Providers RPC method
 */
export type AkashAuditQueryAuditorAttributesRequest = {
    auditor?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
