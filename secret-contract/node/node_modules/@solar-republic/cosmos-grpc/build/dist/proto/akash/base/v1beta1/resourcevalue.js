import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `ResourceValue` protobuf message: Unit stores cpu, memory and storage metrics
 * @param atu8_val - `val`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashBaseResourceValue = (atu8_val) => Protobuf() // ...
    .b(atu8_val) // bytes val = 1
    .o;
/**
 * Decodes a protobuf ResourceValue message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashBaseResourceValue}
 */
export const decodeAkashBaseResourceValue = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link AkashBaseResourceValue} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: val -
 */
export const destructAkashBaseResourceValue = (g_struct) => [safe_base64_to_bytes(g_struct.val)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_BASE_RESOURCE_VALUE = '/akash.base.v1beta1.ResourceValue';
//# sourceMappingURL=resourcevalue.js.map