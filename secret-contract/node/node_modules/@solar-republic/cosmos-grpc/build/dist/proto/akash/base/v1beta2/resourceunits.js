/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashBaseEndpoint } from './endpoint.js';
import { decodeAkashBaseCPU, decodeAkashBaseMemory, decodeAkashBaseStorage } from './resource.js';
/**
 * Encodes a `ResourceUnits` protobuf message: describes all available resources types for deployment/node etc if field is nil resource is not present in the given data-structure
 * @param g_cpu - `cpu`:
 * @param g_memory - `memory`:
 * @param a_storages - `storage`:
 * @param a_endpoints - `endpoints`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashBaseResourceUnits = (atu8_cpu, atu8_memory, a_storages, a_endpoints) => Protobuf() // ...
    .b(atu8_cpu) // CPU cpu = 1
    .b(atu8_memory) // Memory memory = 2
    .B(a_storages) // Storage[] storage = 3
    .B(a_endpoints) // Endpoint[] endpoints = 4
    .o;
/**
 * Decodes a protobuf ResourceUnits message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashBaseResourceUnits}
 */
export const decodeAkashBaseResourceUnits = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 0, 0], [decodeAkashBaseCPU, decodeAkashBaseMemory, decodeAkashBaseStorage, decodeAkashBaseEndpoint]);
/**
 * Destructures the fields of a {@link AkashBaseResourceUnits} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cpu -
 *   - 1: memory -
 *   - 2: storage -
 *   - 3: endpoints -
 */
export const destructAkashBaseResourceUnits = (g_struct) => [g_struct.cpu, g_struct.memory, g_struct.storage, g_struct.endpoints];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_BASE_RESOURCE_UNITS = '/akash.base.v1beta2.ResourceUnits';
//# sourceMappingURL=resourceunits.js.map