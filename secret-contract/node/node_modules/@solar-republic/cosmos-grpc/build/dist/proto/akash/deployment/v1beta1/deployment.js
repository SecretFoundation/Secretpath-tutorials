import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, coin } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeAkashDeploymentGroupSpec } from './group.js';
/**
 * Encodes a `MsgCreateDeployment` protobuf message: defines an SDK message for creating deployment
 * @param g_id - `id`:
 * @param a_groups - `groups`:
 * @param atu8_version - `version`:
 * @param a_deposit - `deposit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgCreateDeployment = (atu8_id, a_groups, atu8_version, a_deposit) => Protobuf() // ...
    .b(atu8_id) // DeploymentID id = 1
    .B(a_groups) // GroupSpec[] groups = 2
    .b(atu8_version) // bytes version = 3
    .b(coin(a_deposit)) // Coin deposit = 4
    .o;
/**
 * Encodes a `MsgCreateDeploymentResponse` protobuf message: defines the Msg/CreateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgCreateDeploymentResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgDepositDeployment` protobuf message: deposits more funds into the deposit account
 * @param g_id - `id`:
 * @param a_amount - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgDepositDeployment = (atu8_id, a_amount) => Protobuf() // ...
    .b(atu8_id) // DeploymentID id = 1
    .b(coin(a_amount)) // Coin amount = 2
    .o;
/**
 * Encodes a `MsgDepositDeploymentResponse` protobuf message: MsgCreateDeploymentResponse defines the Msg/CreateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgDepositDeploymentResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgUpdateDeployment` protobuf message: defines an SDK message for updating deployment
 * @param g_id - `id`:
 * @param a_groups - `groups`:
 * @param atu8_version - `version`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgUpdateDeployment = (atu8_id, a_groups, atu8_version) => Protobuf() // ...
    .b(atu8_id) // DeploymentID id = 1
    .B(a_groups) // GroupSpec[] groups = 2
    .b(atu8_version) // bytes version = 3
    .o;
/**
 * Encodes a `MsgUpdateDeploymentResponse` protobuf message: defines the Msg/UpdateDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgUpdateDeploymentResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgCloseDeployment` protobuf message: defines an SDK message for closing deployment
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgCloseDeployment = (atu8_id) => Protobuf() // ...
    .b(atu8_id) // DeploymentID id = 1
    .o;
/**
 * Encodes a `MsgCloseDeploymentResponse` protobuf message: defines the Msg/CloseDeployment response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentMsgCloseDeploymentResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `DeploymentID` protobuf message: stores owner and sequence number
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentDeploymentID = (sa_owner, sg_dseq) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .o;
/**
 * Encodes a `Deployment` protobuf message: stores deploymentID, state and version details
 * @param g_deployment_id - `deployment_id`:
 * @param xc_state - `state`:
 * @param atu8_version - `version`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentDeployment = (atu8_deployment_id, xc_state, atu8_version, sg_created_at) => Protobuf() // ...
    .b(atu8_deployment_id) // DeploymentID deployment_id = 1
    .v(xc_state) // State state = 2
    .b(atu8_version) // bytes version = 3
    .g(sg_created_at) // int32 created_at = 4
    .o;
/**
 * Encodes a `DeploymentFilters` protobuf message: defines filters used to filter deployments
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashDeploymentDeploymentFilters = (sa_owner, sg_dseq, s_state) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .g(sg_dseq) // uint64 dseq = 2
    .s(s_state) // string state = 3
    .o;
/**
 * Decodes a protobuf CreateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCreateDeployment}
 */
export const decodeAkashDeploymentMsgCreateDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0, 1, 1], [decodeAkashDeploymentDeploymentID, decodeAkashDeploymentGroupSpec, 0, decode_coin]);
/**
 * Decodes a protobuf CreateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCreateDeploymentResponse}
 */
export const decodeAkashDeploymentMsgCreateDeploymentResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DepositDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgDepositDeployment}
 */
export const decodeAkashDeploymentMsgDepositDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [decodeAkashDeploymentDeploymentID, decode_coin]);
/**
 * Decodes a protobuf DepositDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgDepositDeploymentResponse}
 */
export const decodeAkashDeploymentMsgDepositDeploymentResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf UpdateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgUpdateDeployment}
 */
export const decodeAkashDeploymentMsgUpdateDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0, 1], [decodeAkashDeploymentDeploymentID, decodeAkashDeploymentGroupSpec]);
/**
 * Decodes a protobuf UpdateDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgUpdateDeploymentResponse}
 */
export const decodeAkashDeploymentMsgUpdateDeploymentResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf CloseDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseDeployment}
 */
export const decodeAkashDeploymentMsgCloseDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeAkashDeploymentDeploymentID]);
/**
 * Decodes a protobuf CloseDeployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseDeploymentResponse}
 */
export const decodeAkashDeploymentMsgCloseDeploymentResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DeploymentID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentID}
 */
export const decodeAkashDeploymentDeploymentID = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Decodes a protobuf Deployment message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeployment}
 */
export const decodeAkashDeploymentDeployment = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 3], [decodeAkashDeploymentDeploymentID]);
/**
 * Decodes a protobuf DeploymentFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentDeploymentFilters}
 */
export const decodeAkashDeploymentDeploymentFilters = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 5]);
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCreateDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 *   - 3: deposit -
 */
export const destructAkashDeploymentMsgCreateDeployment = (g_struct) => [g_struct.id, g_struct.groups, safe_base64_to_bytes(g_struct.version), g_struct.deposit];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CREATE_DEPLOYMENT = '/akash.deployment.v1beta1.MsgCreateDeployment';
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 */
export const destructAkashDeploymentDeploymentID = (g_struct) => [g_struct.owner, g_struct.dseq];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_I_D = '/akash.deployment.v1beta1.DeploymentID';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCreateDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashDeploymentMsgCreateDeploymentResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CREATE_DEPLOYMENT_RESPONSE = '/akash.deployment.v1beta1.MsgCreateDeploymentResponse';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgDepositDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: amount -
 */
export const destructAkashDeploymentMsgDepositDeployment = (g_struct) => [g_struct.id, g_struct.amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_DEPOSIT_DEPLOYMENT = '/akash.deployment.v1beta1.MsgDepositDeployment';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgDepositDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashDeploymentMsgDepositDeploymentResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_DEPOSIT_DEPLOYMENT_RESPONSE = '/akash.deployment.v1beta1.MsgDepositDeploymentResponse';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgUpdateDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: groups -
 *   - 2: version -
 */
export const destructAkashDeploymentMsgUpdateDeployment = (g_struct) => [g_struct.id, g_struct.groups, safe_base64_to_bytes(g_struct.version)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_UPDATE_DEPLOYMENT = '/akash.deployment.v1beta1.MsgUpdateDeployment';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgUpdateDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashDeploymentMsgUpdateDeploymentResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_UPDATE_DEPLOYMENT_RESPONSE = '/akash.deployment.v1beta1.MsgUpdateDeploymentResponse';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export const destructAkashDeploymentMsgCloseDeployment = (g_struct) => [g_struct.id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_DEPLOYMENT = '/akash.deployment.v1beta1.MsgCloseDeployment';
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseDeploymentResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashDeploymentMsgCloseDeploymentResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_DEPLOYMENT_RESPONSE = '/akash.deployment.v1beta1.MsgCloseDeploymentResponse';
/**
 * Destructures the fields of a {@link AkashDeploymentDeployment} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: deployment_id -
 *   - 1: state -
 *   - 2: version -
 *   - 3: created_at -
 */
export const destructAkashDeploymentDeployment = (g_struct) => [g_struct.deployment_id, g_struct.state, safe_base64_to_bytes(g_struct.version), g_struct.created_at];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT = '/akash.deployment.v1beta1.Deployment';
/**
 * Destructures the fields of a {@link AkashDeploymentDeploymentFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: state -
 */
export const destructAkashDeploymentDeploymentFilters = (g_struct) => [g_struct.owner, g_struct.dseq, g_struct.state];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_DEPLOYMENT_FILTERS = '/akash.deployment.v1beta1.DeploymentFilters';
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = 0;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid = 'DeploymentStateInvalid';
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active = 1;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active = 'DeploymentActive';
/**
 * Protobuf enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashDeploymentDeploymentState}
 */
export const XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed = 2;
/**
 * JSON enum value for `akash.deployment.v1beta1.Deployment.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashDeploymentDeploymentState}
 */
export const SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed = 'DeploymentClosed';
/**
 * Maps a protobuf enum int value for `akash.deployment.v1beta1.Deployment.State` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumAkashDeploymentDeploymentState = {
    [XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid]: SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid,
    [XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active]: SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active,
    [XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed]: SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed,
};
/**
 * Maps a JSON enum string value for `akash.deployment.v1beta1.Deployment.State` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumAkashDeploymentDeploymentState = {
    [SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_invalid]: XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_invalid,
    [SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_active]: XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_active,
    [SI_JSON_AKASH_DEPLOYMENT_DEPLOYMENT_closed]: XC_PROTO_AKASH_DEPLOYMENT_DEPLOYMENT_closed,
};
//# sourceMappingURL=deployment.js.map