import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashDeploymentGroupID, DecodedAkashDeploymentGroupID } from './groupid.js';
export type EncodedAkashDeploymentMsgCloseGroup = Encoded<'/akash.deployment.v1beta3.MsgCloseGroup'>;
export type EncodedAkashDeploymentMsgCloseGroupResponse = Encoded<'/akash.deployment.v1beta3.MsgCloseGroupResponse'>;
export type EncodedAkashDeploymentMsgPauseGroup = Encoded<'/akash.deployment.v1beta3.MsgPauseGroup'>;
export type EncodedAkashDeploymentMsgPauseGroupResponse = Encoded<'/akash.deployment.v1beta3.MsgPauseGroupResponse'>;
export type EncodedAkashDeploymentMsgStartGroup = Encoded<'/akash.deployment.v1beta3.MsgStartGroup'>;
export type EncodedAkashDeploymentMsgStartGroupResponse = Encoded<'/akash.deployment.v1beta3.MsgStartGroupResponse'>;
/**
 * Encodes a `MsgCloseGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta3.GroupID'>>) => EncodedAkashDeploymentMsgCloseGroup;
/**
 * Encodes a `MsgCloseGroupResponse` protobuf message: defines the Msg/CloseGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgCloseGroupResponse: () => EncodedAkashDeploymentMsgCloseGroupResponse;
/**
 * Encodes a `MsgPauseGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgPauseGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta3.GroupID'>>) => EncodedAkashDeploymentMsgPauseGroup;
/**
 * Encodes a `MsgPauseGroupResponse` protobuf message: defines the Msg/PauseGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgPauseGroupResponse: () => EncodedAkashDeploymentMsgPauseGroupResponse;
/**
 * Encodes a `MsgStartGroup` protobuf message: defines SDK message to close a single Group within a Deployment.
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgStartGroup: (atu8_id?: Opt<Encoded<'/akash.deployment.v1beta3.GroupID'>>) => EncodedAkashDeploymentMsgStartGroup;
/**
 * Encodes a `MsgStartGroupResponse` protobuf message: defines the Msg/StartGroup response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentMsgStartGroupResponse: () => EncodedAkashDeploymentMsgStartGroupResponse;
/**
 * A decoded protobuf CloseGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgCloseGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf CloseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseGroup}
 */
export declare const decodeAkashDeploymentMsgCloseGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgCloseGroup;
/**
 * A decoded protobuf CloseGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgCloseGroupResponse = [];
/**
 * Decodes a protobuf CloseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgCloseGroupResponse}
 */
export declare const decodeAkashDeploymentMsgCloseGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf PauseGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgPauseGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf PauseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgPauseGroup}
 */
export declare const decodeAkashDeploymentMsgPauseGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgPauseGroup;
/**
 * A decoded protobuf PauseGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgPauseGroupResponse = [];
/**
 * Decodes a protobuf PauseGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgPauseGroupResponse}
 */
export declare const decodeAkashDeploymentMsgPauseGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf StartGroup message
 *
 * Alias for: id -
 */
export type DecodedAkashDeploymentMsgStartGroup = [
    a_id?: DecodedAkashDeploymentGroupID
];
/**
 * Decodes a protobuf StartGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgStartGroup}
 */
export declare const decodeAkashDeploymentMsgStartGroup: (atu8_payload: Uint8Array) => DecodedAkashDeploymentMsgStartGroup;
/**
 * A decoded protobuf StartGroup message
 *
 * Tuple where:
 */
export type DecodedAkashDeploymentMsgStartGroupResponse = [];
/**
 * Decodes a protobuf StartGroup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentMsgStartGroupResponse}
 */
export declare const decodeAkashDeploymentMsgStartGroupResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgCloseGroup: (g_struct: AkashDeploymentMsgCloseGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_GROUP = "/akash.deployment.v1beta3.MsgCloseGroup";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgCloseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgCloseGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgCloseGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgCloseGroupResponse: (g_struct: AkashDeploymentMsgCloseGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_CLOSE_GROUP_RESPONSE = "/akash.deployment.v1beta3.MsgCloseGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgCloseGroupResponse` - defines the Msg/CloseGroup response type.
 */
export type AkashDeploymentMsgCloseGroupResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgPauseGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgPauseGroup: (g_struct: AkashDeploymentMsgPauseGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_PAUSE_GROUP = "/akash.deployment.v1beta3.MsgPauseGroup";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgPauseGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgPauseGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgPauseGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgPauseGroupResponse: (g_struct: AkashDeploymentMsgPauseGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_PAUSE_GROUP_RESPONSE = "/akash.deployment.v1beta3.MsgPauseGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgPauseGroupResponse` - defines the Msg/PauseGroup response type.
 */
export type AkashDeploymentMsgPauseGroupResponse = {};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgStartGroup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashDeploymentMsgStartGroup: (g_struct: AkashDeploymentMsgStartGroup) => [id?: AkashDeploymentGroupID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_START_GROUP = "/akash.deployment.v1beta3.MsgStartGroup";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgStartGroup` - defines SDK message to close a single Group within a Deployment.
 */
export type AkashDeploymentMsgStartGroup = {
    id?: AkashDeploymentGroupID | undefined;
};
/**
 * Destructures the fields of a {@link AkashDeploymentMsgStartGroupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashDeploymentMsgStartGroupResponse: (g_struct: AkashDeploymentMsgStartGroupResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_MSG_START_GROUP_RESPONSE = "/akash.deployment.v1beta3.MsgStartGroupResponse";
/**
 * JSON serialization of `akash.deployment.v1beta3.MsgStartGroupResponse` - defines the Msg/StartGroup response type.
 */
export type AkashDeploymentMsgStartGroupResponse = {};
