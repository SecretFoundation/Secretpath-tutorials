import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashBaseResources, DecodedAkashBaseResources } from '../../base/v1beta3/resources.js';
import type { CosmosBaseDecCoin, DecodedCosmosBaseDecCoin } from '../../../cosmos/base/v1beta1/coin.js';
export type EncodedAkashDeploymentResourceUnit = Encoded<'/akash.deployment.v1beta3.ResourceUnit'>;
/**
 * Encodes a `ResourceUnit` protobuf message: extends Resources and adds Count along with the Price
 * @param g_resource - `resource`:
 * @param n_count - `count`:
 * @param g_price - `price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashDeploymentResourceUnit: (atu8_resource?: Opt<Encoded<'/akash.base.v1beta3.Resources'>>, n_count?: Opt<number>, atu8_price?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>>) => EncodedAkashDeploymentResourceUnit;
/**
 * A decoded protobuf ResourceUnit message
 *
 * Tuple where:
 *   - 0: resource -
 *   - 1: count -
 *   - 2: price -
 */
export type DecodedAkashDeploymentResourceUnit = [
    a_resource?: DecodedAkashBaseResources,
    n_count?: number,
    a_price?: DecodedCosmosBaseDecCoin
];
/**
 * Decodes a protobuf ResourceUnit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashDeploymentResourceUnit}
 */
export declare const decodeAkashDeploymentResourceUnit: (atu8_payload: Uint8Array) => DecodedAkashDeploymentResourceUnit;
/**
 * Destructures the fields of a {@link AkashDeploymentResourceUnit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: resource -
 *   - 1: count -
 *   - 2: price -
 */
export declare const destructAkashDeploymentResourceUnit: (g_struct: AkashDeploymentResourceUnit) => [resource?: AkashBaseResources, count?: number, price?: CosmosBaseDecCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_DEPLOYMENT_RESOURCE_UNIT = "/akash.deployment.v1beta3.ResourceUnit";
/**
 * JSON serialization of `akash.deployment.v1beta3.ResourceUnit` - extends Resources and adds Count along with the Price
 */
export type AkashDeploymentResourceUnit = {
    resource?: AkashBaseResources | undefined;
    count?: number | undefined;
    price?: CosmosBaseDecCoin | undefined;
};
