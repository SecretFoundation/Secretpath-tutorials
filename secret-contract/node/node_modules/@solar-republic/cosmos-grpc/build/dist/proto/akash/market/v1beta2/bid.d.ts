import type { WeakInt64Str, WeakUint64Str, WeakAccountAddr, SlimCoin, CwInt64, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashMarketOrderID, DecodedAkashMarketOrderID } from './order.js';
import type { CosmosBaseDecCoin, DecodedCosmosBaseDecCoin, CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
export type EncodedAkashMarketMsgCreateBid = Encoded<'/akash.market.v1beta2.MsgCreateBid'>;
export type EncodedAkashMarketMsgCreateBidResponse = Encoded<'/akash.market.v1beta2.MsgCreateBidResponse'>;
export type EncodedAkashMarketMsgCloseBid = Encoded<'/akash.market.v1beta2.MsgCloseBid'>;
export type EncodedAkashMarketMsgCloseBidResponse = Encoded<'/akash.market.v1beta2.MsgCloseBidResponse'>;
export type EncodedAkashMarketBidID = Encoded<'/akash.market.v1beta2.BidID'>;
export type EncodedAkashMarketBid = Encoded<'/akash.market.v1beta2.Bid'>;
export type EncodedAkashMarketBidFilters = Encoded<'/akash.market.v1beta2.BidFilters'>;
/**
 * Encodes a `MsgCreateBid` protobuf message: defines an SDK message for creating Bid
 * @param g_order - `order`:
 * @param s_provider - `provider`:
 * @param g_price - `price`:
 * @param a_deposit - `deposit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketMsgCreateBid: (atu8_order?: Opt<Encoded<'/akash.market.v1beta2.OrderID'>>, s_provider?: Opt<string>, atu8_price?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>>, a_deposit?: Opt<SlimCoin>) => EncodedAkashMarketMsgCreateBid;
/**
 * Encodes a `MsgCreateBidResponse` protobuf message: defines the Msg/CreateBid response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketMsgCreateBidResponse: () => EncodedAkashMarketMsgCreateBidResponse;
/**
 * Encodes a `MsgCloseBid` protobuf message: defines an SDK message for closing bid
 * @param g_bid_id - `bid_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketMsgCloseBid: (atu8_bid_id?: Opt<Encoded<'/akash.market.v1beta2.BidID'>>) => EncodedAkashMarketMsgCloseBid;
/**
 * Encodes a `MsgCloseBidResponse` protobuf message: defines the Msg/CloseBid response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketMsgCloseBidResponse: () => EncodedAkashMarketMsgCloseBidResponse;
/**
 * Encodes a `BidID` protobuf message: stores owner and all other seq numbers A successful bid becomes a Lease(ID).
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @param s_provider - `provider`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketBidID: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>, n_gseq?: Opt<number>, n_oseq?: Opt<number>, s_provider?: Opt<string>) => EncodedAkashMarketBidID;
/**
 * Encodes a `Bid` protobuf message: stores BidID, state of bid and price
 * @param g_bid_id - `bid_id`:
 * @param xc_state - `state`:
 * @param g_price - `price`:
 * @param sg_created_at - `created_at`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketBid: (atu8_bid_id?: Opt<Encoded<'/akash.market.v1beta2.BidID'>>, xc_state?: Opt<ProtoEnumAkashMarketBidState>, atu8_price?: Opt<Encoded<'/cosmos.base.v1beta1.DecCoin'>>, sg_created_at?: Opt<WeakInt64Str>) => EncodedAkashMarketBid;
/**
 * Encodes a `BidFilters` protobuf message: defines flags for bid list filter
 * @param sa_owner - `owner`:
 * @param sg_dseq - `dseq`:
 * @param n_gseq - `gseq`:
 * @param n_oseq - `oseq`:
 * @param s_provider - `provider`:
 * @param s_state - `state`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketBidFilters: (sa_owner?: Opt<WeakAccountAddr>, sg_dseq?: Opt<WeakUint64Str>, n_gseq?: Opt<number>, n_oseq?: Opt<number>, s_provider?: Opt<string>, s_state?: Opt<string>) => EncodedAkashMarketBidFilters;
/**
 * A decoded protobuf CreateBid message
 *
 * Tuple where:
 *   - 0: order -
 *   - 1: provider -
 *   - 2: price -
 *   - 3: deposit -
 */
export type DecodedAkashMarketMsgCreateBid = [
    a_order?: DecodedAkashMarketOrderID,
    s_provider?: string,
    a_price?: DecodedCosmosBaseDecCoin,
    a_deposit?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf CreateBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCreateBid}
 */
export declare const decodeAkashMarketMsgCreateBid: (atu8_payload: Uint8Array) => DecodedAkashMarketMsgCreateBid;
/**
 * A decoded protobuf CreateBid message
 *
 * Tuple where:
 */
export type DecodedAkashMarketMsgCreateBidResponse = [];
/**
 * Decodes a protobuf CreateBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCreateBidResponse}
 */
export declare const decodeAkashMarketMsgCreateBidResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf CloseBid message
 *
 * Alias for: bid_id -
 */
export type DecodedAkashMarketMsgCloseBid = [
    a_bid_id?: DecodedAkashMarketBidID
];
/**
 * Decodes a protobuf CloseBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCloseBid}
 */
export declare const decodeAkashMarketMsgCloseBid: (atu8_payload: Uint8Array) => DecodedAkashMarketMsgCloseBid;
/**
 * A decoded protobuf CloseBid message
 *
 * Tuple where:
 */
export type DecodedAkashMarketMsgCloseBidResponse = [];
/**
 * Decodes a protobuf CloseBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketMsgCloseBidResponse}
 */
export declare const decodeAkashMarketMsgCloseBidResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf BidID message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 */
export type DecodedAkashMarketBidID = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64,
    n_gseq?: number,
    n_oseq?: number,
    s_provider?: string
];
/**
 * Decodes a protobuf BidID message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBidID}
 */
export declare const decodeAkashMarketBidID: (atu8_payload: Uint8Array) => DecodedAkashMarketBidID;
/**
 * A decoded protobuf Bid message
 *
 * Tuple where:
 *   - 0: bid_id -
 *   - 1: state -
 *   - 2: price -
 *   - 3: created_at -
 */
export type DecodedAkashMarketBid = [
    a_bid_id?: DecodedAkashMarketBidID,
    xc_state?: ProtoEnumAkashMarketBidState,
    a_price?: DecodedCosmosBaseDecCoin,
    sg_created_at?: CwInt64
];
/**
 * Decodes a protobuf Bid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBid}
 */
export declare const decodeAkashMarketBid: (atu8_payload: Uint8Array) => DecodedAkashMarketBid;
/**
 * A decoded protobuf BidFilters message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 *   - 5: state -
 */
export type DecodedAkashMarketBidFilters = [
    sa_owner?: CwAccountAddr,
    sg_dseq?: CwUint64,
    n_gseq?: number,
    n_oseq?: number,
    s_provider?: string,
    s_state?: string
];
/**
 * Decodes a protobuf BidFilters message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketBidFilters}
 */
export declare const decodeAkashMarketBidFilters: (atu8_payload: Uint8Array) => DecodedAkashMarketBidFilters;
/**
 * Destructures the fields of a {@link AkashMarketMsgCreateBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: order -
 *   - 1: provider -
 *   - 2: price -
 *   - 3: deposit -
 */
export declare const destructAkashMarketMsgCreateBid: (g_struct: AkashMarketMsgCreateBid) => [order?: AkashMarketOrderID, provider?: string, price?: CosmosBaseDecCoin, deposit?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CREATE_BID = "/akash.market.v1beta2.MsgCreateBid";
/**
 * JSON serialization of `akash.market.v1beta2.MsgCreateBid` - defines an SDK message for creating Bid
 */
export type AkashMarketMsgCreateBid = {
    order?: AkashMarketOrderID | undefined;
    provider?: string | undefined;
    price?: CosmosBaseDecCoin | undefined;
    deposit?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketMsgCreateBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashMarketMsgCreateBidResponse: (g_struct: AkashMarketMsgCreateBidResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CREATE_BID_RESPONSE = "/akash.market.v1beta2.MsgCreateBidResponse";
/**
 * JSON serialization of `akash.market.v1beta2.MsgCreateBidResponse` - defines the Msg/CreateBid response type.
 */
export type AkashMarketMsgCreateBidResponse = {};
/**
 * Destructures the fields of a {@link AkashMarketMsgCloseBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid_id -
 */
export declare const destructAkashMarketMsgCloseBid: (g_struct: AkashMarketMsgCloseBid) => [bid_id?: AkashMarketBidID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CLOSE_BID = "/akash.market.v1beta2.MsgCloseBid";
/**
 * JSON serialization of `akash.market.v1beta2.MsgCloseBid` - defines an SDK message for closing bid
 */
export type AkashMarketMsgCloseBid = {
    bid_id?: AkashMarketBidID | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketBidID} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 */
export declare const destructAkashMarketBidID: (g_struct: AkashMarketBidID) => [owner?: CwAccountAddr, dseq?: CwUint64, gseq?: number, oseq?: number, provider?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_BID_I_D = "/akash.market.v1beta2.BidID";
/**
 * JSON serialization of `akash.market.v1beta2.BidID` - stores owner and all other seq numbers A successful bid becomes a Lease(ID).
 */
export type AkashMarketBidID = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
    gseq?: number | undefined;
    oseq?: number | undefined;
    provider?: string | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketMsgCloseBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAkashMarketMsgCloseBidResponse: (g_struct: AkashMarketMsgCloseBidResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_MSG_CLOSE_BID_RESPONSE = "/akash.market.v1beta2.MsgCloseBidResponse";
/**
 * JSON serialization of `akash.market.v1beta2.MsgCloseBidResponse` - defines the Msg/CloseBid response type.
 */
export type AkashMarketMsgCloseBidResponse = {};
/**
 * Destructures the fields of a {@link AkashMarketBid} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid_id -
 *   - 1: state -
 *   - 2: price -
 *   - 3: created_at -
 */
export declare const destructAkashMarketBid: (g_struct: AkashMarketBid) => [bid_id?: AkashMarketBidID, state?: JsonEnumAkashMarketBidState, price?: CosmosBaseDecCoin, created_at?: CwInt64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_BID = "/akash.market.v1beta2.Bid";
/**
 * JSON serialization of `akash.market.v1beta2.Bid` - stores BidID, state of bid and price
 */
export type AkashMarketBid = {
    bid_id?: AkashMarketBidID | undefined;
    state?: JsonEnumAkashMarketBidState | undefined;
    price?: CosmosBaseDecCoin | undefined;
    created_at?: CwInt64 | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketBidFilters} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: dseq -
 *   - 2: gseq -
 *   - 3: oseq -
 *   - 4: provider -
 *   - 5: state -
 */
export declare const destructAkashMarketBidFilters: (g_struct: AkashMarketBidFilters) => [owner?: CwAccountAddr, dseq?: CwUint64, gseq?: number, oseq?: number, provider?: string, state?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_BID_FILTERS = "/akash.market.v1beta2.BidFilters";
/**
 * JSON serialization of `akash.market.v1beta2.BidFilters` - defines flags for bid list filter
 */
export type AkashMarketBidFilters = {
    owner?: CwAccountAddr | undefined;
    dseq?: CwUint64 | undefined;
    gseq?: number | undefined;
    oseq?: number | undefined;
    provider?: string | undefined;
    state?: string | undefined;
};
/**
 * Protobuf enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export declare const XC_PROTO_AKASH_MARKET_BID_invalid = 0;
/**
 * JSON enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **invalid** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export declare const SI_JSON_AKASH_MARKET_BID_invalid = "BidStateInvalid";
/**
 * Protobuf enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export declare const XC_PROTO_AKASH_MARKET_BID_open = 1;
/**
 * JSON enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **open** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export declare const SI_JSON_AKASH_MARKET_BID_open = "BidOpen";
/**
 * Protobuf enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export declare const XC_PROTO_AKASH_MARKET_BID_active = 2;
/**
 * JSON enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **active** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export declare const SI_JSON_AKASH_MARKET_BID_active = "BidActive";
/**
 * Protobuf enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **lost** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export declare const XC_PROTO_AKASH_MARKET_BID_lost = 3;
/**
 * JSON enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **lost** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export declare const SI_JSON_AKASH_MARKET_BID_lost = "BidLost";
/**
 * Protobuf enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link ProtoEnumAkashMarketBidState}
 */
export declare const XC_PROTO_AKASH_MARKET_BID_closed = 4;
/**
 * JSON enum value for `akash.market.v1beta2.Bid.State`.
 *
 * **closed** -
 *
 * Belongs to enum type {@link JsonEnumAkashMarketBidState}
 */
export declare const SI_JSON_AKASH_MARKET_BID_closed = "BidClosed";
/**
 * Raw protobuf enum values for `akash.market.v1beta2.Bid.State` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_AKASH_MARKET_BID_invalid}
 *   - {@link XC_PROTO_AKASH_MARKET_BID_open}
 *   - {@link XC_PROTO_AKASH_MARKET_BID_active}
 *   - {@link XC_PROTO_AKASH_MARKET_BID_lost}
 *   - {@link XC_PROTO_AKASH_MARKET_BID_closed}
 */
export type ProtoEnumAkashMarketBidState = typeof XC_PROTO_AKASH_MARKET_BID_invalid | typeof XC_PROTO_AKASH_MARKET_BID_open | typeof XC_PROTO_AKASH_MARKET_BID_active | typeof XC_PROTO_AKASH_MARKET_BID_lost | typeof XC_PROTO_AKASH_MARKET_BID_closed;
/**
 * JSON enum values for `akash.market.v1beta2.Bid.State` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_AKASH_MARKET_BID_invalid}
 *   - {@link SI_JSON_AKASH_MARKET_BID_open}
 *   - {@link SI_JSON_AKASH_MARKET_BID_active}
 *   - {@link SI_JSON_AKASH_MARKET_BID_lost}
 *   - {@link SI_JSON_AKASH_MARKET_BID_closed}
 */
export type JsonEnumAkashMarketBidState = typeof SI_JSON_AKASH_MARKET_BID_invalid | typeof SI_JSON_AKASH_MARKET_BID_open | typeof SI_JSON_AKASH_MARKET_BID_active | typeof SI_JSON_AKASH_MARKET_BID_lost | typeof SI_JSON_AKASH_MARKET_BID_closed;
/**
 * Maps a protobuf enum int value for `akash.market.v1beta2.Bid.State` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumAkashMarketBidState: Record<ProtoEnumAkashMarketBidState, JsonEnumAkashMarketBidState>;
/**
 * Maps a JSON enum string value for `akash.market.v1beta2.Bid.State` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumAkashMarketBidState: Record<JsonEnumAkashMarketBidState, ProtoEnumAkashMarketBidState>;
