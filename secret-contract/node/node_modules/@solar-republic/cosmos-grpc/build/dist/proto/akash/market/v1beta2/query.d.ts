/// <reference types="node" />
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashEscrowAccount, DecodedAkashEscrowAccount, AkashEscrowFractionalPayment, DecodedAkashEscrowFractionalPayment } from '../../escrow/v1beta2/types.js';
import type { AkashMarketBidFilters, DecodedAkashMarketBidFilters, AkashMarketBidID, DecodedAkashMarketBidID, AkashMarketBid, DecodedAkashMarketBid } from './bid.js';
import type { AkashMarketLeaseFilters, DecodedAkashMarketLeaseFilters, AkashMarketLeaseID, DecodedAkashMarketLeaseID, AkashMarketLease, DecodedAkashMarketLease } from './lease.js';
import type { AkashMarketOrderFilters, DecodedAkashMarketOrderFilters, AkashMarketOrder, DecodedAkashMarketOrder, AkashMarketOrderID, DecodedAkashMarketOrderID } from './order.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
export type EncodedAkashMarketQueryOrdersRequest = Encoded<'/akash.market.v1beta2.QueryOrdersRequest'>;
export type EncodedAkashMarketQueryOrdersResponse = Encoded<'/akash.market.v1beta2.QueryOrdersResponse'>;
export type EncodedAkashMarketQueryOrderRequest = Encoded<'/akash.market.v1beta2.QueryOrderRequest'>;
export type EncodedAkashMarketQueryOrderResponse = Encoded<'/akash.market.v1beta2.QueryOrderResponse'>;
export type EncodedAkashMarketQueryBidsRequest = Encoded<'/akash.market.v1beta2.QueryBidsRequest'>;
export type EncodedAkashMarketQueryBidsResponse = Encoded<'/akash.market.v1beta2.QueryBidsResponse'>;
export type EncodedAkashMarketQueryBidRequest = Encoded<'/akash.market.v1beta2.QueryBidRequest'>;
export type EncodedAkashMarketQueryBidResponse = Encoded<'/akash.market.v1beta2.QueryBidResponse'>;
export type EncodedAkashMarketQueryLeasesRequest = Encoded<'/akash.market.v1beta2.QueryLeasesRequest'>;
export type EncodedAkashMarketQueryLeasesResponse = Encoded<'/akash.market.v1beta2.QueryLeasesResponse'>;
export type EncodedAkashMarketQueryLeaseRequest = Encoded<'/akash.market.v1beta2.QueryLeaseRequest'>;
export type EncodedAkashMarketQueryLeaseResponse = Encoded<'/akash.market.v1beta2.QueryLeaseResponse'>;
/**
 * Queries orders with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: orders - the 'orders' response property
 *   - 1: pagination - the 'orders' response property
 */
export declare const queryAkashMarketOrders: (z_req: string | ({
    origin: string;
} & RequestInit), g_filters?: Opt<AkashMarketOrderFilters>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryOrdersResponse>>;
/**
 * Queries order details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: order - the 'order' response property
 */
export declare const queryAkashMarketOrder: (z_req: string | ({
    origin: string;
} & RequestInit), g_id?: Opt<AkashMarketOrderID>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryOrderResponse>>;
/**
 * Queries bids with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: bids - the 'bids' response property
 *   - 1: pagination - the 'bids' response property
 */
export declare const queryAkashMarketBids: (z_req: string | ({
    origin: string;
} & RequestInit), g_filters?: Opt<AkashMarketBidFilters>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryBidsResponse>>;
/**
 * Queries bid details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: bid - the 'bid' response property
 *   - 1: escrow_account - the 'bid' response property
 */
export declare const queryAkashMarketBid: (z_req: string | ({
    origin: string;
} & RequestInit), g_id?: Opt<AkashMarketBidID>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryBidResponse>>;
/**
 * Queries leases with filters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_filters -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: leases - the 'leases' response property
 *   - 1: pagination - the 'leases' response property
 */
export declare const queryAkashMarketLeases: (z_req: string | ({
    origin: string;
} & RequestInit), g_filters?: Opt<AkashMarketLeaseFilters>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryLeasesResponse>>;
/**
 * Queries lease details
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_id -
 * @returns a tuple where:
 *   - 0: lease - the 'lease' response property
 *   - 1: escrow_payment - the 'lease' response property
 */
export declare const queryAkashMarketLease: (z_req: string | ({
    origin: string;
} & RequestInit), g_id?: Opt<AkashMarketLeaseID>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AkashMarketQueryLeaseResponse>>;
/**
 * Encodes a `QueryOrdersRequest` protobuf message: request type for the Query/Orders RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryOrdersRequest: (atu8_filters?: Opt<Encoded<'/akash.market.v1beta2.OrderFilters'>>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashMarketQueryOrdersRequest;
/**
 * Encodes a `QueryOrdersResponse` protobuf message: response type for the Query/Orders RPC method
 * @param a_orders - `orders`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryOrdersResponse: (a_orders?: Opt<Encoded<'/akash.market.v1beta2.Order'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashMarketQueryOrdersResponse;
/**
 * Encodes a `QueryOrderRequest` protobuf message: request type for the Query/Order RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryOrderRequest: (atu8_id?: Opt<Encoded<'/akash.market.v1beta2.OrderID'>>) => EncodedAkashMarketQueryOrderRequest;
/**
 * Encodes a `QueryOrderResponse` protobuf message: response type for the Query/Order RPC method
 * @param g_order - `order`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryOrderResponse: (atu8_order?: Opt<Encoded<'/akash.market.v1beta2.Order'>>) => EncodedAkashMarketQueryOrderResponse;
/**
 * Encodes a `QueryBidsRequest` protobuf message: request type for the Query/Bids RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryBidsRequest: (atu8_filters?: Opt<Encoded<'/akash.market.v1beta2.BidFilters'>>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashMarketQueryBidsRequest;
/**
 * Encodes a `QueryBidsResponse` protobuf message: response type for the Query/Bids RPC method
 * @param a_bids - `bids`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryBidsResponse: (a_bids?: Opt<Encoded<'/akash.market.v1beta2.QueryBidResponse'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashMarketQueryBidsResponse;
/**
 * Encodes a `QueryBidRequest` protobuf message: request type for the Query/Bid RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryBidRequest: (atu8_id?: Opt<Encoded<'/akash.market.v1beta2.BidID'>>) => EncodedAkashMarketQueryBidRequest;
/**
 * Encodes a `QueryBidResponse` protobuf message: response type for the Query/Bid RPC method
 * @param g_bid - `bid`:
 * @param g_escrow_account - `escrow_account`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryBidResponse: (atu8_bid?: Opt<Encoded<'/akash.market.v1beta2.Bid'>>, atu8_escrow_account?: Opt<Encoded<'/akash.escrow.v1beta2.Account'>>) => EncodedAkashMarketQueryBidResponse;
/**
 * Encodes a `QueryLeasesRequest` protobuf message: request type for the Query/Leases RPC method
 * @param g_filters - `filters`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryLeasesRequest: (atu8_filters?: Opt<Encoded<'/akash.market.v1beta2.LeaseFilters'>>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedAkashMarketQueryLeasesRequest;
/**
 * Encodes a `QueryLeasesResponse` protobuf message: response type for the Query/Leases RPC method
 * @param a_leases - `leases`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryLeasesResponse: (a_leases?: Opt<Encoded<'/akash.market.v1beta2.QueryLeaseResponse'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedAkashMarketQueryLeasesResponse;
/**
 * Encodes a `QueryLeaseRequest` protobuf message: request type for the Query/Lease RPC method
 * @param g_id - `id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryLeaseRequest: (atu8_id?: Opt<Encoded<'/akash.market.v1beta2.LeaseID'>>) => EncodedAkashMarketQueryLeaseRequest;
/**
 * Encodes a `QueryLeaseResponse` protobuf message: response type for the Query/Lease RPC method
 * @param g_lease - `lease`:
 * @param g_escrow_payment - `escrow_payment`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashMarketQueryLeaseResponse: (atu8_lease?: Opt<Encoded<'/akash.market.v1beta2.Lease'>>, atu8_escrow_payment?: Opt<Encoded<'/akash.escrow.v1beta2.FractionalPayment'>>) => EncodedAkashMarketQueryLeaseResponse;
/**
 * A decoded protobuf QueryOrdersRequest message
 *
 * Tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryOrdersRequest = [
    a_filters?: DecodedAkashMarketOrderFilters,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryOrdersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrdersRequest}
 */
export declare const decodeAkashMarketQueryOrdersRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryOrdersRequest;
/**
 * A decoded protobuf QueryOrders message
 *
 * Tuple where:
 *   - 0: orders -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryOrdersResponse = [
    a_orders?: DecodedAkashMarketOrder[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryOrders message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrdersResponse}
 */
export declare const decodeAkashMarketQueryOrdersResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryOrdersResponse;
/**
 * A decoded protobuf QueryOrderRequest message
 *
 * Alias for: id -
 */
export type DecodedAkashMarketQueryOrderRequest = [
    a_id?: DecodedAkashMarketOrderID
];
/**
 * Decodes a protobuf QueryOrderRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrderRequest}
 */
export declare const decodeAkashMarketQueryOrderRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryOrderRequest;
/**
 * A decoded protobuf QueryOrder message
 *
 * Alias for: order -
 */
export type DecodedAkashMarketQueryOrderResponse = [
    a_order?: DecodedAkashMarketOrder
];
/**
 * Decodes a protobuf QueryOrder message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryOrderResponse}
 */
export declare const decodeAkashMarketQueryOrderResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryOrderResponse;
/**
 * A decoded protobuf QueryBidsRequest message
 *
 * Tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryBidsRequest = [
    a_filters?: DecodedAkashMarketBidFilters,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryBidsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidsRequest}
 */
export declare const decodeAkashMarketQueryBidsRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryBidsRequest;
/**
 * A decoded protobuf QueryBids message
 *
 * Tuple where:
 *   - 0: bids -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryBidsResponse = [
    a_bids?: DecodedAkashMarketQueryBidResponse[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryBids message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidsResponse}
 */
export declare const decodeAkashMarketQueryBidsResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryBidsResponse;
/**
 * A decoded protobuf QueryBidRequest message
 *
 * Alias for: id -
 */
export type DecodedAkashMarketQueryBidRequest = [
    a_id?: DecodedAkashMarketBidID
];
/**
 * Decodes a protobuf QueryBidRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidRequest}
 */
export declare const decodeAkashMarketQueryBidRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryBidRequest;
/**
 * A decoded protobuf QueryBid message
 *
 * Tuple where:
 *   - 0: bid -
 *   - 1: escrow_account -
 */
export type DecodedAkashMarketQueryBidResponse = [
    a_bid?: DecodedAkashMarketBid,
    a_escrow_account?: DecodedAkashEscrowAccount
];
/**
 * Decodes a protobuf QueryBid message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryBidResponse}
 */
export declare const decodeAkashMarketQueryBidResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryBidResponse;
/**
 * A decoded protobuf QueryLeasesRequest message
 *
 * Tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryLeasesRequest = [
    a_filters?: DecodedAkashMarketLeaseFilters,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryLeasesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeasesRequest}
 */
export declare const decodeAkashMarketQueryLeasesRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryLeasesRequest;
/**
 * A decoded protobuf QueryLeases message
 *
 * Tuple where:
 *   - 0: leases -
 *   - 1: pagination -
 */
export type DecodedAkashMarketQueryLeasesResponse = [
    a_leases?: DecodedAkashMarketQueryLeaseResponse[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryLeases message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeasesResponse}
 */
export declare const decodeAkashMarketQueryLeasesResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryLeasesResponse;
/**
 * A decoded protobuf QueryLeaseRequest message
 *
 * Alias for: id -
 */
export type DecodedAkashMarketQueryLeaseRequest = [
    a_id?: DecodedAkashMarketLeaseID
];
/**
 * Decodes a protobuf QueryLeaseRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeaseRequest}
 */
export declare const decodeAkashMarketQueryLeaseRequest: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryLeaseRequest;
/**
 * A decoded protobuf QueryLease message
 *
 * Tuple where:
 *   - 0: lease -
 *   - 1: escrow_payment -
 */
export type DecodedAkashMarketQueryLeaseResponse = [
    a_lease?: DecodedAkashMarketLease,
    a_escrow_payment?: DecodedAkashEscrowFractionalPayment
];
/**
 * Decodes a protobuf QueryLease message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashMarketQueryLeaseResponse}
 */
export declare const decodeAkashMarketQueryLeaseResponse: (atu8_payload: Uint8Array) => DecodedAkashMarketQueryLeaseResponse;
/**
 * Destructures the fields of a {@link AkashMarketQueryOrdersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryOrdersRequest: (g_struct: AkashMarketQueryOrdersRequest) => [filters?: AkashMarketOrderFilters, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDERS_REQUEST = "/akash.market.v1beta2.QueryOrdersRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryOrdersRequest` - request type for the Query/Orders RPC method
 */
export type AkashMarketQueryOrdersRequest = {
    filters?: AkashMarketOrderFilters | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryOrdersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: orders -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryOrdersResponse: (g_struct: AkashMarketQueryOrdersResponse) => [orders?: AkashMarketOrder[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDERS_RESPONSE = "/akash.market.v1beta2.QueryOrdersResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryOrdersResponse` - response type for the Query/Orders RPC method
 */
export type AkashMarketQueryOrdersResponse = {
    orders?: AkashMarketOrder[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryOrderRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashMarketQueryOrderRequest: (g_struct: AkashMarketQueryOrderRequest) => [id?: AkashMarketOrderID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDER_REQUEST = "/akash.market.v1beta2.QueryOrderRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryOrderRequest` - request type for the Query/Order RPC method
 */
export type AkashMarketQueryOrderRequest = {
    id?: AkashMarketOrderID | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryOrderResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: order -
 */
export declare const destructAkashMarketQueryOrderResponse: (g_struct: AkashMarketQueryOrderResponse) => [order?: AkashMarketOrder];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_ORDER_RESPONSE = "/akash.market.v1beta2.QueryOrderResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryOrderResponse` - response type for the Query/Order RPC method
 */
export type AkashMarketQueryOrderResponse = {
    order?: AkashMarketOrder | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryBidsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryBidsRequest: (g_struct: AkashMarketQueryBidsRequest) => [filters?: AkashMarketBidFilters, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BIDS_REQUEST = "/akash.market.v1beta2.QueryBidsRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryBidsRequest` - request type for the Query/Bids RPC method
 */
export type AkashMarketQueryBidsRequest = {
    filters?: AkashMarketBidFilters | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryBidsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bids -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryBidsResponse: (g_struct: AkashMarketQueryBidsResponse) => [bids?: AkashMarketQueryBidResponse[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BIDS_RESPONSE = "/akash.market.v1beta2.QueryBidsResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryBidsResponse` - response type for the Query/Bids RPC method
 */
export type AkashMarketQueryBidsResponse = {
    bids?: AkashMarketQueryBidResponse[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryBidResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: bid -
 *   - 1: escrow_account -
 */
export declare const destructAkashMarketQueryBidResponse: (g_struct: AkashMarketQueryBidResponse) => [bid?: AkashMarketBid, escrow_account?: AkashEscrowAccount];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BID_RESPONSE = "/akash.market.v1beta2.QueryBidResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryBidResponse` - response type for the Query/Bid RPC method
 */
export type AkashMarketQueryBidResponse = {
    bid?: AkashMarketBid | undefined;
    escrow_account?: AkashEscrowAccount | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryBidRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashMarketQueryBidRequest: (g_struct: AkashMarketQueryBidRequest) => [id?: AkashMarketBidID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_BID_REQUEST = "/akash.market.v1beta2.QueryBidRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryBidRequest` - request type for the Query/Bid RPC method
 */
export type AkashMarketQueryBidRequest = {
    id?: AkashMarketBidID | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryLeasesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: filters -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryLeasesRequest: (g_struct: AkashMarketQueryLeasesRequest) => [filters?: AkashMarketLeaseFilters, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASES_REQUEST = "/akash.market.v1beta2.QueryLeasesRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryLeasesRequest` - request type for the Query/Leases RPC method
 */
export type AkashMarketQueryLeasesRequest = {
    filters?: AkashMarketLeaseFilters | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryLeasesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: leases -
 *   - 1: pagination -
 */
export declare const destructAkashMarketQueryLeasesResponse: (g_struct: AkashMarketQueryLeasesResponse) => [leases?: AkashMarketQueryLeaseResponse[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASES_RESPONSE = "/akash.market.v1beta2.QueryLeasesResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryLeasesResponse` - response type for the Query/Leases RPC method
 */
export type AkashMarketQueryLeasesResponse = {
    leases?: AkashMarketQueryLeaseResponse[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryLeaseResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lease -
 *   - 1: escrow_payment -
 */
export declare const destructAkashMarketQueryLeaseResponse: (g_struct: AkashMarketQueryLeaseResponse) => [lease?: AkashMarketLease, escrow_payment?: AkashEscrowFractionalPayment];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASE_RESPONSE = "/akash.market.v1beta2.QueryLeaseResponse";
/**
 * JSON serialization of `akash.market.v1beta2.QueryLeaseResponse` - response type for the Query/Lease RPC method
 */
export type AkashMarketQueryLeaseResponse = {
    lease?: AkashMarketLease | undefined;
    escrow_payment?: AkashEscrowFractionalPayment | undefined;
};
/**
 * Destructures the fields of a {@link AkashMarketQueryLeaseRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 */
export declare const destructAkashMarketQueryLeaseRequest: (g_struct: AkashMarketQueryLeaseRequest) => [id?: AkashMarketLeaseID];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_MARKET_QUERY_LEASE_REQUEST = "/akash.market.v1beta2.QueryLeaseRequest";
/**
 * JSON serialization of `akash.market.v1beta2.QueryLeaseRequest` - request type for the Query/Lease RPC method
 */
export type AkashMarketQueryLeaseRequest = {
    id?: AkashMarketLeaseID | undefined;
};
