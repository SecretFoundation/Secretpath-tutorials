import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAkashBaseAttribute } from '../../base/v1beta1/attribute.js';
/**
 * Encodes a `ProviderInfo` protobuf message:
 * @param s_email - `email`:
 * @param s_website - `website`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderProviderInfo = (s_email, s_website) => Protobuf() // ...
    .s(s_email) // string email = 1
    .s(s_website) // string website = 2
    .o;
/**
 * Encodes a `MsgCreateProvider` protobuf message: defines an SDK message for creating a provider
 * @param sa_owner - `owner`:
 * @param s_host_uri - `host_uri`:
 * @param a_attributes - `attributes`:
 * @param g_info - `info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgCreateProvider = (sa_owner, s_host_uri, a_attributes, atu8_info) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_host_uri) // string host_uri = 2
    .B(a_attributes) // Attribute[] attributes = 3
    .b(atu8_info) // ProviderInfo info = 4
    .o;
/**
 * Encodes a `MsgCreateProviderResponse` protobuf message: defines the Msg/CreateProvider response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgCreateProviderResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgUpdateProvider` protobuf message: defines an SDK message for updating a provider
 * @param sa_owner - `owner`:
 * @param s_host_uri - `host_uri`:
 * @param a_attributes - `attributes`:
 * @param g_info - `info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgUpdateProvider = (sa_owner, s_host_uri, a_attributes, atu8_info) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_host_uri) // string host_uri = 2
    .B(a_attributes) // Attribute[] attributes = 3
    .b(atu8_info) // ProviderInfo info = 4
    .o;
/**
 * Encodes a `MsgUpdateProviderResponse` protobuf message: defines the Msg/UpdateProvider response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgUpdateProviderResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgDeleteProvider` protobuf message: defines an SDK message for deleting a provider
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgDeleteProvider = (sa_owner) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .o;
/**
 * Encodes a `MsgDeleteProviderResponse` protobuf message: defines the Msg/DeleteProvider response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderMsgDeleteProviderResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `Provider` protobuf message: stores owner and host details
 * @param sa_owner - `owner`:
 * @param s_host_uri - `host_uri`:
 * @param a_attributes - `attributes`:
 * @param g_info - `info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashProviderProvider = (sa_owner, s_host_uri, a_attributes, atu8_info) => Protobuf() // ...
    .s(sa_owner) // string owner = 1
    .s(s_host_uri) // string host_uri = 2
    .B(a_attributes) // Attribute[] attributes = 3
    .b(atu8_info) // ProviderInfo info = 4
    .o;
/**
 * Decodes a protobuf ProviderInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderProviderInfo}
 */
export const decodeAkashProviderProviderInfo = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf CreateProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgCreateProvider}
 */
export const decodeAkashProviderMsgCreateProvider = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0, 1], [0, 0, decodeAkashBaseAttribute, decodeAkashProviderProviderInfo]);
/**
 * Decodes a protobuf CreateProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgCreateProviderResponse}
 */
export const decodeAkashProviderMsgCreateProviderResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf UpdateProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgUpdateProvider}
 */
export const decodeAkashProviderMsgUpdateProvider = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0, 1], [0, 0, decodeAkashBaseAttribute, decodeAkashProviderProviderInfo]);
/**
 * Decodes a protobuf UpdateProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgUpdateProviderResponse}
 */
export const decodeAkashProviderMsgUpdateProviderResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DeleteProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgDeleteProvider}
 */
export const decodeAkashProviderMsgDeleteProvider = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf DeleteProvider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderMsgDeleteProviderResponse}
 */
export const decodeAkashProviderMsgDeleteProviderResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Provider message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashProviderProvider}
 */
export const decodeAkashProviderProvider = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0, 1], [0, 0, decodeAkashBaseAttribute, decodeAkashProviderProviderInfo]);
/**
 * Destructures the fields of a {@link AkashProviderProviderInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: email -
 *   - 1: website -
 */
export const destructAkashProviderProviderInfo = (g_struct) => [g_struct.email, g_struct.website];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_PROVIDER_INFO = '/akash.provider.v1beta1.ProviderInfo';
/**
 * Destructures the fields of a {@link AkashProviderMsgCreateProvider} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: host_uri -
 *   - 2: attributes -
 *   - 3: info -
 */
export const destructAkashProviderMsgCreateProvider = (g_struct) => [g_struct.owner, g_struct.host_uri, g_struct.attributes, g_struct.info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_CREATE_PROVIDER = '/akash.provider.v1beta1.MsgCreateProvider';
/**
 * Destructures the fields of a {@link AkashProviderMsgCreateProviderResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashProviderMsgCreateProviderResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_CREATE_PROVIDER_RESPONSE = '/akash.provider.v1beta1.MsgCreateProviderResponse';
/**
 * Destructures the fields of a {@link AkashProviderMsgUpdateProvider} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: host_uri -
 *   - 2: attributes -
 *   - 3: info -
 */
export const destructAkashProviderMsgUpdateProvider = (g_struct) => [g_struct.owner, g_struct.host_uri, g_struct.attributes, g_struct.info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_UPDATE_PROVIDER = '/akash.provider.v1beta1.MsgUpdateProvider';
/**
 * Destructures the fields of a {@link AkashProviderMsgUpdateProviderResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashProviderMsgUpdateProviderResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_UPDATE_PROVIDER_RESPONSE = '/akash.provider.v1beta1.MsgUpdateProviderResponse';
/**
 * Destructures the fields of a {@link AkashProviderMsgDeleteProvider} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 */
export const destructAkashProviderMsgDeleteProvider = (g_struct) => [g_struct.owner];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_DELETE_PROVIDER = '/akash.provider.v1beta1.MsgDeleteProvider';
/**
 * Destructures the fields of a {@link AkashProviderMsgDeleteProviderResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAkashProviderMsgDeleteProviderResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_MSG_DELETE_PROVIDER_RESPONSE = '/akash.provider.v1beta1.MsgDeleteProviderResponse';
/**
 * Destructures the fields of a {@link AkashProviderProvider} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: host_uri -
 *   - 2: attributes -
 *   - 3: info -
 */
export const destructAkashProviderProvider = (g_struct) => [g_struct.owner, g_struct.host_uri, g_struct.attributes, g_struct.info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_PROVIDER_PROVIDER = '/akash.provider.v1beta1.Provider';
//# sourceMappingURL=provider.js.map