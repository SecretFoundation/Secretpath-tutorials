import type { Encoded, Opt } from '../../../../api/types.js';
import type { AkashStakingParams, DecodedAkashStakingParams } from './params.js';
export type EncodedAkashStakingGenesisState = Encoded<'/akash.staking.v1beta3.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: stores slice of genesis deployment instance
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAkashStakingGenesisState: (atu8_params?: Opt<Encoded<'/akash.staking.v1beta3.Params'>>) => EncodedAkashStakingGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params -
 */
export type DecodedAkashStakingGenesisState = [
    a_params?: DecodedAkashStakingParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashStakingGenesisState}
 */
export declare const decodeAkashStakingGenesisState: (atu8_payload: Uint8Array) => DecodedAkashStakingGenesisState;
/**
 * Destructures the fields of a {@link AkashStakingGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructAkashStakingGenesisState: (g_struct: AkashStakingGenesisState) => [params?: AkashStakingParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AKASH_STAKING_GENESIS_STATE = "/akash.staking.v1beta3.GenesisState";
/**
 * JSON serialization of `akash.staking.v1beta3.GenesisState` - stores slice of genesis deployment instance
 */
export type AkashStakingGenesisState = {
    params?: AkashStakingParams | undefined;
};
