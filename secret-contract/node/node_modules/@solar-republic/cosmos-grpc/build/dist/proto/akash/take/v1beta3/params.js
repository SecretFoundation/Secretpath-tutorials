/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `DenomTakeRate` protobuf message: describes take rate for specified denom
 * @param s_denom - `denom`:
 * @param n_rate - `rate`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashTakeDenomTakeRate = (s_denom, n_rate) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .v(n_rate) // uint32 rate = 2
    .o;
/**
 * Encodes a `Params` protobuf message: defines the parameters for the x/take package
 * @param a_denom_take_rates - `denom_take_rates`: denom -> % take rate
 * @param n_default_take_rate - `default_take_rate`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAkashTakeParams = (a_denom_take_rates, n_default_take_rate) => Protobuf() // ...
    .B(a_denom_take_rates) // DenomTakeRate[] denom_take_rates = 1
    .v(n_default_take_rate) // uint32 default_take_rate = 2
    .o;
/**
 * Decodes a protobuf DenomTakeRate message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashTakeDenomTakeRate}
 */
export const decodeAkashTakeDenomTakeRate = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAkashTakeParams}
 */
export const decodeAkashTakeParams = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeAkashTakeDenomTakeRate]);
/**
 * Destructures the fields of a {@link AkashTakeParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom_take_rates - denom -> % take rate
 *   - 1: default_take_rate -
 */
export const destructAkashTakeParams = (g_struct) => [g_struct.denom_take_rates, g_struct.default_take_rate];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_TAKE_PARAMS = '/akash.take.v1beta3.Params';
/**
 * Destructures the fields of a {@link AkashTakeDenomTakeRate} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: rate -
 */
export const destructAkashTakeDenomTakeRate = (g_struct) => [g_struct.denom, g_struct.rate];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AKASH_TAKE_DENOM_TAKE_RATE = '/akash.take.v1beta3.DenomTakeRate';
//# sourceMappingURL=params.js.map