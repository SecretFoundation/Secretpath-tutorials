import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarAxelarnetParams, DecodedAxelarAxelarnetParams } from './params.js';
import type { AxelarAxelarnetCosmosChain, DecodedAxelarAxelarnetCosmosChain, AxelarAxelarnetIBCTransfer, DecodedAxelarAxelarnetIBCTransfer } from './types.js';
import type { AxelarUtilsQueueState, DecodedAxelarUtilsQueueState } from '../../utils/v1beta1/queuer.js';
export type EncodedAxelarAxelarnetGenesisState = Encoded<'/axelar.axelarnet.v1beta1.GenesisState'>;
export type EncodedAxelarAxelarnetGenesisStateSeqIdMappingEntry = Encoded<'/axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry'>;
/**
 * Encodes a `GenesisState` protobuf message:
 * @param g_params - `params`:
 * @param atu8_collector_address - `collector_address`:
 * @param a_chains - `chains`:
 * @param g_transfer_queue - `transfer_queue`:
 * @param a_ibc_transfers - `ibc_transfers`:
 * @param a_seq_id_mappings - `seq_id_mapping`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetGenesisState: (atu8_params?: Opt<Encoded<'/axelar.axelarnet.v1beta1.Params'>>, atu8_collector_address?: Opt<Uint8Array>, a_chains?: Opt<Encoded<'/axelar.axelarnet.v1beta1.CosmosChain'>[]>, atu8_transfer_queue?: Opt<Encoded<'/axelar.utils.v1beta1.QueueState'>>, a_ibc_transfers?: Opt<Encoded<'/axelar.axelarnet.v1beta1.IBCTransfer'>[]>, a_seq_id_mappings?: Opt<Encoded<'/axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry'>[]>) => EncodedAxelarAxelarnetGenesisState;
/**
 * Encodes a `SeqIdMappingEntry` protobuf message:
 * @param s_key - `key`:
 * @param sg_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarAxelarnetGenesisStateSeqIdMappingEntry: (s_key?: Opt<string>, sg_value?: Opt<WeakUint64Str>) => EncodedAxelarAxelarnetGenesisStateSeqIdMappingEntry;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: params -
 *   - 1: collector_address -
 *   - 2: chains -
 *   - 4: transfer_queue -
 *   - 6: ibc_transfers -
 *   - 7: seq_id_mapping -
 */
export type DecodedAxelarAxelarnetGenesisState = [
    a_params?: DecodedAxelarAxelarnetParams,
    atu8_collector_address?: Uint8Array,
    a_chains?: DecodedAxelarAxelarnetCosmosChain[],
    w_0?: undefined,
    a_transfer_queue?: DecodedAxelarUtilsQueueState,
    w_0?: undefined,
    a_ibc_transfers?: DecodedAxelarAxelarnetIBCTransfer[],
    a_seq_id_mapping?: DecodedAxelarAxelarnetGenesisStateSeqIdMappingEntry[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarAxelarnetGenesisState}
 */
export declare const decodeAxelarAxelarnetGenesisState: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedAxelarAxelarnetGenesisState;
/**
 * A decoded protobuf SeqIdMappingEntry message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export type DecodedAxelarAxelarnetGenesisStateSeqIdMappingEntry = [
    s_key?: string,
    sg_value?: CwUint64
];
/**
 * Decodes a protobuf SeqIdMappingEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetGenesisStateSeqIdMappingEntry}
 */
export declare const decodeAxelarAxelarnetGenesisStateSeqIdMappingEntry: (atu8_payload: Uint8Array) => DecodedAxelarAxelarnetGenesisStateSeqIdMappingEntry;
/**
 * Destructures the fields of a {@link AxelarAxelarnetGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: collector_address -
 *   - 2: chains -
 *   - 4: transfer_queue -
 *   - 6: ibc_transfers -
 *   - 7: seq_id_mapping -
 */
export declare const destructAxelarAxelarnetGenesisState: (g_struct: AxelarAxelarnetGenesisState) => [params?: AxelarAxelarnetParams, collector_address?: Uint8Array, chains?: AxelarAxelarnetCosmosChain[], EMPTY?: void, transfer_queue?: AxelarUtilsQueueState, EMPTY?: void, ibc_transfers?: AxelarAxelarnetIBCTransfer[], seq_id_mapping?: AxelarAxelarnetGenesisStateSeqIdMappingEntry[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_GENESIS_STATE = "/axelar.axelarnet.v1beta1.GenesisState";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.GenesisState` -
 */
export type AxelarAxelarnetGenesisState = {
    params?: AxelarAxelarnetParams | undefined;
    collector_address?: CwBase64 | undefined;
    chains?: AxelarAxelarnetCosmosChain[] | undefined;
    transfer_queue?: AxelarUtilsQueueState | undefined;
    ibc_transfers?: AxelarAxelarnetIBCTransfer[] | undefined;
    seq_id_mapping?: AxelarAxelarnetGenesisStateSeqIdMappingEntry[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarAxelarnetGenesisStateSeqIdMappingEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export declare const destructAxelarAxelarnetGenesisStateSeqIdMappingEntry: (g_struct: AxelarAxelarnetGenesisStateSeqIdMappingEntry) => [key?: string, value?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_AXELARNET_GENESIS_STATE_SEQ_ID_MAPPING_ENTRY = "/axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry";
/**
 * JSON serialization of `axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry` -
 */
export type AxelarAxelarnetGenesisStateSeqIdMappingEntry = {
    key?: string | undefined;
    value?: CwUint64 | undefined;
};
