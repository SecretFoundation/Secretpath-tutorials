import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeAxelarAxelarnetParams } from './params.js';
import { decodeAxelarAxelarnetCosmosChain, decodeAxelarAxelarnetIBCTransfer } from './types.js';
import { decodeAxelarUtilsQueueState } from '../../utils/v1beta1/queuer.js';
/**
 * Encodes a `GenesisState` protobuf message:
 * @param g_params - `params`:
 * @param atu8_collector_address - `collector_address`:
 * @param a_chains - `chains`:
 * @param g_transfer_queue - `transfer_queue`:
 * @param a_ibc_transfers - `ibc_transfers`:
 * @param a_seq_id_mappings - `seq_id_mapping`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarAxelarnetGenesisState = (atu8_params, atu8_collector_address, a_chains, atu8_transfer_queue, a_ibc_transfers, a_seq_id_mappings) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .b(atu8_collector_address) // bytes collector_address = 2
    .B(a_chains) // CosmosChain[] chains = 3
    .b(atu8_transfer_queue, 5) // QueueState transfer_queue = 5
    .B(a_ibc_transfers, 7) // IBCTransfer[] ibc_transfers = 7
    .B(a_seq_id_mappings, 8) // SeqIdMappingEntry[] seq_id_mapping = 8
    .o;
/**
 * Encodes a `SeqIdMappingEntry` protobuf message:
 * @param s_key - `key`:
 * @param sg_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarAxelarnetGenesisStateSeqIdMappingEntry = (s_key, sg_value) => Protobuf() // ...
    .s(s_key) // string key = 1
    .g(sg_value) // uint64 value = 2
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedAxelarAxelarnetGenesisState}
 */
export const decodeAxelarAxelarnetGenesisState = ((atu8_payload, [a_params, atu8_collector_address, a_chains, , a_transfer_queue, , a_ibc_transfers, a_seq_id_mapping] = decode_protobuf(atu8_payload, [1, 1, 0, 0, 1, 0, 0, 0], [decodeAxelarAxelarnetParams, 0, decodeAxelarAxelarnetCosmosChain, 0, decodeAxelarUtilsQueueState, 0, decodeAxelarAxelarnetIBCTransfer, decodeAxelarAxelarnetGenesisStateSeqIdMappingEntry])) => [a_params, atu8_collector_address, a_chains, __UNDEFINED, a_transfer_queue, __UNDEFINED, a_ibc_transfers, a_seq_id_mapping]);
/**
 * Decodes a protobuf SeqIdMappingEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarAxelarnetGenesisStateSeqIdMappingEntry}
 */
export const decodeAxelarAxelarnetGenesisStateSeqIdMappingEntry = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Destructures the fields of a {@link AxelarAxelarnetGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: collector_address -
 *   - 2: chains -
 *   - 4: transfer_queue -
 *   - 6: ibc_transfers -
 *   - 7: seq_id_mapping -
 */
export const destructAxelarAxelarnetGenesisState = (g_struct) => [g_struct.params, safe_base64_to_bytes(g_struct.collector_address), g_struct.chains, __UNDEFINED, g_struct.transfer_queue, __UNDEFINED, g_struct.ibc_transfers, g_struct.seq_id_mapping];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_AXELARNET_GENESIS_STATE = '/axelar.axelarnet.v1beta1.GenesisState';
/**
 * Destructures the fields of a {@link AxelarAxelarnetGenesisStateSeqIdMappingEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export const destructAxelarAxelarnetGenesisStateSeqIdMappingEntry = (g_struct) => [g_struct.key, g_struct.value];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_AXELARNET_GENESIS_STATE_SEQ_ID_MAPPING_ENTRY = '/axelar.axelarnet.v1beta1.GenesisState.SeqIdMappingEntry';
//# sourceMappingURL=genesis.js.map