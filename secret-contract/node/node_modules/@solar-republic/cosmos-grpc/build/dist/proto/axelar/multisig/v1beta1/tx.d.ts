import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedAxelarMultisigStartKeygenRequest = Encoded<'/axelar.multisig.v1beta1.StartKeygenRequest'>;
export type EncodedAxelarMultisigStartKeygenResponse = Encoded<'/axelar.multisig.v1beta1.StartKeygenResponse'>;
export type EncodedAxelarMultisigSubmitPubKeyRequest = Encoded<'/axelar.multisig.v1beta1.SubmitPubKeyRequest'>;
export type EncodedAxelarMultisigSubmitPubKeyResponse = Encoded<'/axelar.multisig.v1beta1.SubmitPubKeyResponse'>;
export type EncodedAxelarMultisigSubmitSignatureRequest = Encoded<'/axelar.multisig.v1beta1.SubmitSignatureRequest'>;
export type EncodedAxelarMultisigSubmitSignatureResponse = Encoded<'/axelar.multisig.v1beta1.SubmitSignatureResponse'>;
export type EncodedAxelarMultisigRotateKeyRequest = Encoded<'/axelar.multisig.v1beta1.RotateKeyRequest'>;
export type EncodedAxelarMultisigRotateKeyResponse = Encoded<'/axelar.multisig.v1beta1.RotateKeyResponse'>;
export type EncodedAxelarMultisigKeygenOptOutRequest = Encoded<'/axelar.multisig.v1beta1.KeygenOptOutRequest'>;
export type EncodedAxelarMultisigKeygenOptOutResponse = Encoded<'/axelar.multisig.v1beta1.KeygenOptOutResponse'>;
export type EncodedAxelarMultisigKeygenOptInRequest = Encoded<'/axelar.multisig.v1beta1.KeygenOptInRequest'>;
export type EncodedAxelarMultisigKeygenOptInResponse = Encoded<'/axelar.multisig.v1beta1.KeygenOptInResponse'>;
/**
 * Encodes a `StartKeygenRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param si_key - `key_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigStartKeygenRequest: (sa_sender?: Opt<WeakAccountAddr>, si_key?: Opt<string>) => EncodedAxelarMultisigStartKeygenRequest;
/**
 * Encodes a `StartKeygenResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigStartKeygenResponse: () => EncodedAxelarMultisigStartKeygenResponse;
/**
 * Encodes a `SubmitPubKeyRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param si_key - `key_id`:
 * @param atu8_pub_key - `pub_key`:
 * @param atu8_signature - `signature`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigSubmitPubKeyRequest: (sa_sender?: Opt<WeakAccountAddr>, si_key?: Opt<string>, atu8_pub_key?: Opt<Uint8Array>, atu8_signature?: Opt<Uint8Array>) => EncodedAxelarMultisigSubmitPubKeyRequest;
/**
 * Encodes a `SubmitPubKeyResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigSubmitPubKeyResponse: () => EncodedAxelarMultisigSubmitPubKeyResponse;
/**
 * Encodes a `SubmitSignatureRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param sg_sig_id - `sig_id`:
 * @param atu8_signature - `signature`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigSubmitSignatureRequest: (sa_sender?: Opt<WeakAccountAddr>, sg_sig_id?: Opt<WeakUint64Str>, atu8_signature?: Opt<Uint8Array>) => EncodedAxelarMultisigSubmitSignatureRequest;
/**
 * Encodes a `SubmitSignatureResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigSubmitSignatureResponse: () => EncodedAxelarMultisigSubmitSignatureResponse;
/**
 * Encodes a `RotateKeyRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param si_key - `key_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigRotateKeyRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, si_key?: Opt<string>) => EncodedAxelarMultisigRotateKeyRequest;
/**
 * Encodes a `RotateKeyResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigRotateKeyResponse: () => EncodedAxelarMultisigRotateKeyResponse;
/**
 * Encodes a `KeygenOptOutRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigKeygenOptOutRequest: (sa_sender?: Opt<WeakAccountAddr>) => EncodedAxelarMultisigKeygenOptOutRequest;
/**
 * Encodes a `KeygenOptOutResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigKeygenOptOutResponse: () => EncodedAxelarMultisigKeygenOptOutResponse;
/**
 * Encodes a `KeygenOptInRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigKeygenOptInRequest: (sa_sender?: Opt<WeakAccountAddr>) => EncodedAxelarMultisigKeygenOptInRequest;
/**
 * Encodes a `KeygenOptInResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarMultisigKeygenOptInResponse: () => EncodedAxelarMultisigKeygenOptInResponse;
/**
 * A decoded protobuf StartKeygenRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 */
export type DecodedAxelarMultisigStartKeygenRequest = [
    sa_sender?: CwAccountAddr,
    si_key?: string
];
/**
 * Decodes a protobuf StartKeygenRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigStartKeygenRequest}
 */
export declare const decodeAxelarMultisigStartKeygenRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigStartKeygenRequest;
/**
 * A decoded protobuf StartKeygen message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigStartKeygenResponse = [];
/**
 * Decodes a protobuf StartKeygen message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigStartKeygenResponse}
 */
export declare const decodeAxelarMultisigStartKeygenResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SubmitPubKeyRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 *   - 2: pub_key -
 *   - 3: signature -
 */
export type DecodedAxelarMultisigSubmitPubKeyRequest = [
    sa_sender?: CwAccountAddr,
    si_key?: string,
    atu8_pub_key?: Uint8Array,
    atu8_signature?: Uint8Array
];
/**
 * Decodes a protobuf SubmitPubKeyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigSubmitPubKeyRequest}
 */
export declare const decodeAxelarMultisigSubmitPubKeyRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigSubmitPubKeyRequest;
/**
 * A decoded protobuf SubmitPubKey message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigSubmitPubKeyResponse = [];
/**
 * Decodes a protobuf SubmitPubKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigSubmitPubKeyResponse}
 */
export declare const decodeAxelarMultisigSubmitPubKeyResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SubmitSignatureRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: sig_id -
 *   - 2: signature -
 */
export type DecodedAxelarMultisigSubmitSignatureRequest = [
    sa_sender?: CwAccountAddr,
    sg_sig_id?: CwUint64,
    atu8_signature?: Uint8Array
];
/**
 * Decodes a protobuf SubmitSignatureRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigSubmitSignatureRequest}
 */
export declare const decodeAxelarMultisigSubmitSignatureRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigSubmitSignatureRequest;
/**
 * A decoded protobuf SubmitSignature message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigSubmitSignatureResponse = [];
/**
 * Decodes a protobuf SubmitSignature message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigSubmitSignatureResponse}
 */
export declare const decodeAxelarMultisigSubmitSignatureResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RotateKeyRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export type DecodedAxelarMultisigRotateKeyRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    si_key?: string
];
/**
 * Decodes a protobuf RotateKeyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigRotateKeyRequest}
 */
export declare const decodeAxelarMultisigRotateKeyRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigRotateKeyRequest;
/**
 * A decoded protobuf RotateKey message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigRotateKeyResponse = [];
/**
 * Decodes a protobuf RotateKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigRotateKeyResponse}
 */
export declare const decodeAxelarMultisigRotateKeyResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf KeygenOptOutRequest message
 *
 * Alias for: sender -
 */
export type DecodedAxelarMultisigKeygenOptOutRequest = [
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf KeygenOptOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigKeygenOptOutRequest}
 */
export declare const decodeAxelarMultisigKeygenOptOutRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigKeygenOptOutRequest;
/**
 * A decoded protobuf KeygenOptOut message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigKeygenOptOutResponse = [];
/**
 * Decodes a protobuf KeygenOptOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigKeygenOptOutResponse}
 */
export declare const decodeAxelarMultisigKeygenOptOutResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf KeygenOptInRequest message
 *
 * Alias for: sender -
 */
export type DecodedAxelarMultisigKeygenOptInRequest = [
    sa_sender?: CwAccountAddr
];
/**
 * Decodes a protobuf KeygenOptInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigKeygenOptInRequest}
 */
export declare const decodeAxelarMultisigKeygenOptInRequest: (atu8_payload: Uint8Array) => DecodedAxelarMultisigKeygenOptInRequest;
/**
 * A decoded protobuf KeygenOptIn message
 *
 * Tuple where:
 */
export type DecodedAxelarMultisigKeygenOptInResponse = [];
/**
 * Decodes a protobuf KeygenOptIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarMultisigKeygenOptInResponse}
 */
export declare const decodeAxelarMultisigKeygenOptInResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link AxelarMultisigStartKeygenRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 */
export declare const destructAxelarMultisigStartKeygenRequest: (g_struct: AxelarMultisigStartKeygenRequest) => [sender?: CwAccountAddr, key_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_START_KEYGEN_REQUEST = "/axelar.multisig.v1beta1.StartKeygenRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.StartKeygenRequest` -
 */
export type AxelarMultisigStartKeygenRequest = {
    sender?: CwAccountAddr | undefined;
    key_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigStartKeygenResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigStartKeygenResponse: (g_struct: AxelarMultisigStartKeygenResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_START_KEYGEN_RESPONSE = "/axelar.multisig.v1beta1.StartKeygenResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.StartKeygenResponse` -
 */
export type AxelarMultisigStartKeygenResponse = {};
/**
 * Destructures the fields of a {@link AxelarMultisigSubmitPubKeyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 *   - 2: pub_key -
 *   - 3: signature -
 */
export declare const destructAxelarMultisigSubmitPubKeyRequest: (g_struct: AxelarMultisigSubmitPubKeyRequest) => [sender?: CwAccountAddr, key_id?: string, pub_key?: Uint8Array, signature?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_SUBMIT_PUB_KEY_REQUEST = "/axelar.multisig.v1beta1.SubmitPubKeyRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.SubmitPubKeyRequest` -
 */
export type AxelarMultisigSubmitPubKeyRequest = {
    sender?: CwAccountAddr | undefined;
    key_id?: string | undefined;
    pub_key?: CwBase64 | undefined;
    signature?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigSubmitPubKeyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigSubmitPubKeyResponse: (g_struct: AxelarMultisigSubmitPubKeyResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_SUBMIT_PUB_KEY_RESPONSE = "/axelar.multisig.v1beta1.SubmitPubKeyResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.SubmitPubKeyResponse` -
 */
export type AxelarMultisigSubmitPubKeyResponse = {};
/**
 * Destructures the fields of a {@link AxelarMultisigSubmitSignatureRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: sig_id -
 *   - 2: signature -
 */
export declare const destructAxelarMultisigSubmitSignatureRequest: (g_struct: AxelarMultisigSubmitSignatureRequest) => [sender?: CwAccountAddr, sig_id?: CwUint64, signature?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_SUBMIT_SIGNATURE_REQUEST = "/axelar.multisig.v1beta1.SubmitSignatureRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.SubmitSignatureRequest` -
 */
export type AxelarMultisigSubmitSignatureRequest = {
    sender?: CwAccountAddr | undefined;
    sig_id?: CwUint64 | undefined;
    signature?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigSubmitSignatureResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigSubmitSignatureResponse: (g_struct: AxelarMultisigSubmitSignatureResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_SUBMIT_SIGNATURE_RESPONSE = "/axelar.multisig.v1beta1.SubmitSignatureResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.SubmitSignatureResponse` -
 */
export type AxelarMultisigSubmitSignatureResponse = {};
/**
 * Destructures the fields of a {@link AxelarMultisigRotateKeyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_id -
 */
export declare const destructAxelarMultisigRotateKeyRequest: (g_struct: AxelarMultisigRotateKeyRequest) => [sender?: CwBase64, chain?: string, key_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_ROTATE_KEY_REQUEST = "/axelar.multisig.v1beta1.RotateKeyRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.RotateKeyRequest` -
 */
export type AxelarMultisigRotateKeyRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    key_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigRotateKeyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigRotateKeyResponse: (g_struct: AxelarMultisigRotateKeyResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_ROTATE_KEY_RESPONSE = "/axelar.multisig.v1beta1.RotateKeyResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.RotateKeyResponse` -
 */
export type AxelarMultisigRotateKeyResponse = {};
/**
 * Destructures the fields of a {@link AxelarMultisigKeygenOptOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 */
export declare const destructAxelarMultisigKeygenOptOutRequest: (g_struct: AxelarMultisigKeygenOptOutRequest) => [sender?: CwBase64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_KEYGEN_OPT_OUT_REQUEST = "/axelar.multisig.v1beta1.KeygenOptOutRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.KeygenOptOutRequest` -
 */
export type AxelarMultisigKeygenOptOutRequest = {
    sender?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigKeygenOptOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigKeygenOptOutResponse: (g_struct: AxelarMultisigKeygenOptOutResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_KEYGEN_OPT_OUT_RESPONSE = "/axelar.multisig.v1beta1.KeygenOptOutResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.KeygenOptOutResponse` -
 */
export type AxelarMultisigKeygenOptOutResponse = {};
/**
 * Destructures the fields of a {@link AxelarMultisigKeygenOptInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 */
export declare const destructAxelarMultisigKeygenOptInRequest: (g_struct: AxelarMultisigKeygenOptInRequest) => [sender?: CwBase64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_KEYGEN_OPT_IN_REQUEST = "/axelar.multisig.v1beta1.KeygenOptInRequest";
/**
 * JSON serialization of `axelar.multisig.v1beta1.KeygenOptInRequest` -
 */
export type AxelarMultisigKeygenOptInRequest = {
    sender?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarMultisigKeygenOptInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarMultisigKeygenOptInResponse: (g_struct: AxelarMultisigKeygenOptInResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_MULTISIG_KEYGEN_OPT_IN_RESPONSE = "/axelar.multisig.v1beta1.KeygenOptInResponse";
/**
 * JSON serialization of `axelar.multisig.v1beta1.KeygenOptInResponse` -
 */
export type AxelarMultisigKeygenOptInResponse = {};
