import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAxelarNexusExportedChain, decodeAxelarNexusExportedCrossChainTransfer, decodeAxelarNexusExportedTransferFee, decodeAxelarNexusExportedFeeInfo, decodeAxelarNexusExportedGeneralMessage } from '../exported/v1beta1/types.js';
import { decodeAxelarNexusParams } from './params.js';
import { decodeAxelarNexusChainState, decodeAxelarNexusLinkedAddresses, decodeAxelarNexusRateLimit, decodeAxelarNexusTransferEpoch } from './types.js';
/**
 * Encodes a `GenesisState` protobuf message: represents the genesis state
 * @param g_params - `params`:
 * @param sg_nonce - `nonce`:
 * @param a_chains - `chains`:
 * @param a_chain_states - `chain_states`:
 * @param a_linked_addresses - `linked_addresses`:
 * @param a_transfers - `transfers`:
 * @param g_fee - `fee`:
 * @param a_fee_infos - `fee_infos`:
 * @param a_rate_limits - `rate_limits`:
 * @param a_transfer_epochs - `transfer_epochs`:
 * @param a_messages - `messages`:
 * @param sg_message_nonce - `message_nonce`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusGenesisState = (atu8_params, sg_nonce, a_chains, a_chain_states, a_linked_addresses, a_transfers, atu8_fee, a_fee_infos, a_rate_limits, a_transfer_epochs, a_messages, sg_message_nonce) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .g(sg_nonce) // uint64 nonce = 2
    .B(a_chains) // Chain[] chains = 3
    .B(a_chain_states) // ChainState[] chain_states = 4
    .B(a_linked_addresses) // LinkedAddresses[] linked_addresses = 5
    .B(a_transfers) // CrossChainTransfer[] transfers = 6
    .b(atu8_fee) // TransferFee fee = 7
    .B(a_fee_infos) // FeeInfo[] fee_infos = 8
    .B(a_rate_limits) // RateLimit[] rate_limits = 9
    .B(a_transfer_epochs) // TransferEpoch[] transfer_epochs = 10
    .B(a_messages) // GeneralMessage[] messages = 11
    .g(sg_message_nonce) // uint64 message_nonce = 12
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusGenesisState}
 */
export const decodeAxelarNexusGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3], [decodeAxelarNexusParams, 0, decodeAxelarNexusExportedChain, decodeAxelarNexusChainState, decodeAxelarNexusLinkedAddresses, decodeAxelarNexusExportedCrossChainTransfer, decodeAxelarNexusExportedTransferFee, decodeAxelarNexusExportedFeeInfo, decodeAxelarNexusRateLimit, decodeAxelarNexusTransferEpoch, decodeAxelarNexusExportedGeneralMessage]);
/**
 * Destructures the fields of a {@link AxelarNexusGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: nonce -
 *   - 2: chains -
 *   - 3: chain_states -
 *   - 4: linked_addresses -
 *   - 5: transfers -
 *   - 6: fee -
 *   - 7: fee_infos -
 *   - 8: rate_limits -
 *   - 9: transfer_epochs -
 *   - 10: messages -
 *   - 11: message_nonce -
 */
export const destructAxelarNexusGenesisState = (g_struct) => [g_struct.params, g_struct.nonce, g_struct.chains, g_struct.chain_states, g_struct.linked_addresses, g_struct.transfers, g_struct.fee, g_struct.fee_infos, g_struct.rate_limits, g_struct.transfer_epochs, g_struct.messages, g_struct.message_nonce];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_GENESIS_STATE = '/axelar.nexus.v1beta1.GenesisState';
//# sourceMappingURL=genesis.js.map