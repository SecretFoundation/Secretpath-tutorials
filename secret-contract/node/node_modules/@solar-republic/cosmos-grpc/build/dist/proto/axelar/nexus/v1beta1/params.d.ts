import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarUtilsThreshold, DecodedAxelarUtilsThreshold } from '../../utils/v1beta1/threshold.js';
export type EncodedAxelarNexusParams = Encoded<'/axelar.nexus.v1beta1.Params'>;
/**
 * Encodes a `Params` protobuf message: represent the genesis parameters for the module
 * @param g_chain_activation_threshold - `chain_activation_threshold`:
 * @param g_chain_maintainer_missing_vote_threshold - `chain_maintainer_missing_vote_threshold`:
 * @param g_chain_maintainer_incorrect_vote_threshold - `chain_maintainer_incorrect_vote_threshold`:
 * @param n_chain_maintainer_check_window - `chain_maintainer_check_window`:
 * @param atu8_gateway - `gateway`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarNexusParams: (atu8_chain_activation_threshold?: Opt<Encoded<'/axelar.utils.v1beta1.Threshold'>>, atu8_chain_maintainer_missing_vote_threshold?: Opt<Encoded<'/axelar.utils.v1beta1.Threshold'>>, atu8_chain_maintainer_incorrect_vote_threshold?: Opt<Encoded<'/axelar.utils.v1beta1.Threshold'>>, n_chain_maintainer_check_window?: Opt<number>, atu8_gateway?: Opt<Uint8Array>) => EncodedAxelarNexusParams;
/**
 * A decoded protobuf Params message
 *
 * Tuple where:
 *   - 0: chain_activation_threshold -
 *   - 1: chain_maintainer_missing_vote_threshold -
 *   - 2: chain_maintainer_incorrect_vote_threshold -
 *   - 3: chain_maintainer_check_window -
 *   - 4: gateway -
 */
export type DecodedAxelarNexusParams = [
    a_chain_activation_threshold?: DecodedAxelarUtilsThreshold,
    a_chain_maintainer_missing_vote_threshold?: DecodedAxelarUtilsThreshold,
    a_chain_maintainer_incorrect_vote_threshold?: DecodedAxelarUtilsThreshold,
    n_chain_maintainer_check_window?: number,
    atu8_gateway?: Uint8Array
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusParams}
 */
export declare const decodeAxelarNexusParams: (atu8_payload: Uint8Array) => DecodedAxelarNexusParams;
/**
 * Destructures the fields of a {@link AxelarNexusParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: chain_activation_threshold -
 *   - 1: chain_maintainer_missing_vote_threshold -
 *   - 2: chain_maintainer_incorrect_vote_threshold -
 *   - 3: chain_maintainer_check_window -
 *   - 4: gateway -
 */
export declare const destructAxelarNexusParams: (g_struct: AxelarNexusParams) => [chain_activation_threshold?: AxelarUtilsThreshold, chain_maintainer_missing_vote_threshold?: AxelarUtilsThreshold, chain_maintainer_incorrect_vote_threshold?: AxelarUtilsThreshold, chain_maintainer_check_window?: number, gateway?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_NEXUS_PARAMS = "/axelar.nexus.v1beta1.Params";
/**
 * JSON serialization of `axelar.nexus.v1beta1.Params` - represent the genesis parameters for the module
 */
export type AxelarNexusParams = {
    chain_activation_threshold?: AxelarUtilsThreshold | undefined;
    chain_maintainer_missing_vote_threshold?: AxelarUtilsThreshold | undefined;
    chain_maintainer_incorrect_vote_threshold?: AxelarUtilsThreshold | undefined;
    chain_maintainer_check_window?: number | undefined;
    gateway?: CwBase64 | undefined;
};
