import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeAxelarUtilsThreshold } from '../../utils/v1beta1/threshold.js';
/**
 * Encodes a `Params` protobuf message: represent the genesis parameters for the module
 * @param g_chain_activation_threshold - `chain_activation_threshold`:
 * @param g_chain_maintainer_missing_vote_threshold - `chain_maintainer_missing_vote_threshold`:
 * @param g_chain_maintainer_incorrect_vote_threshold - `chain_maintainer_incorrect_vote_threshold`:
 * @param n_chain_maintainer_check_window - `chain_maintainer_check_window`:
 * @param atu8_gateway - `gateway`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusParams = (atu8_chain_activation_threshold, atu8_chain_maintainer_missing_vote_threshold, atu8_chain_maintainer_incorrect_vote_threshold, n_chain_maintainer_check_window, atu8_gateway) => Protobuf() // ...
    .b(atu8_chain_activation_threshold) // Threshold chain_activation_threshold = 1
    .b(atu8_chain_maintainer_missing_vote_threshold) // Threshold chain_maintainer_missing_vote_threshold = 2
    .b(atu8_chain_maintainer_incorrect_vote_threshold) // Threshold chain_maintainer_incorrect_vote_threshold = 3
    .v(n_chain_maintainer_check_window) // int32 chain_maintainer_check_window = 4
    .b(atu8_gateway) // bytes gateway = 5
    .o;
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusParams}
 */
export const decodeAxelarNexusParams = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1, 1, 1], [decodeAxelarUtilsThreshold, decodeAxelarUtilsThreshold, decodeAxelarUtilsThreshold]);
/**
 * Destructures the fields of a {@link AxelarNexusParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: chain_activation_threshold -
 *   - 1: chain_maintainer_missing_vote_threshold -
 *   - 2: chain_maintainer_incorrect_vote_threshold -
 *   - 3: chain_maintainer_check_window -
 *   - 4: gateway -
 */
export const destructAxelarNexusParams = (g_struct) => [g_struct.chain_activation_threshold, g_struct.chain_maintainer_missing_vote_threshold, g_struct.chain_maintainer_incorrect_vote_threshold, g_struct.chain_maintainer_check_window, safe_base64_to_bytes(g_struct.gateway)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_PARAMS = '/axelar.nexus.v1beta1.Params';
//# sourceMappingURL=params.js.map