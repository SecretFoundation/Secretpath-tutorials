import { bech32_decode } from '@solar-republic/crypto';
import { parse_duration } from '../../../../api/json.js';
import { decode_protobuf, decode_coin, decode_temporal } from '../../../../api/protobuf-reader.js';
import { Protobuf, temporal, coin } from '../../../../api/protobuf-writer.js';
import { decodeAxelarNexusExportedFeeInfo } from '../exported/v1beta1/types.js';
/**
 * Encodes a `RegisterChainMaintainerRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param a_chains - `chains`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusRegisterChainMaintainerRequest = (sa_sender, a_chains) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .S(a_chains) // string[] chains = 2
    .o;
/**
 * Encodes a `RegisterChainMaintainerResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusRegisterChainMaintainerResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `DeregisterChainMaintainerRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param a_chains - `chains`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusDeregisterChainMaintainerRequest = (sa_sender, a_chains) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .S(a_chains) // string[] chains = 2
    .o;
/**
 * Encodes a `DeregisterChainMaintainerResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusDeregisterChainMaintainerResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ActivateChainRequest` protobuf message: represents a message to activate chains
 * @param sa_sender - `sender`:
 * @param a_chains - `chains`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusActivateChainRequest = (sa_sender, a_chains) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .S(a_chains) // string[] chains = 2
    .o;
/**
 * Encodes a `ActivateChainResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusActivateChainResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `DeactivateChainRequest` protobuf message: represents a message to deactivate chains
 * @param sa_sender - `sender`:
 * @param a_chains - `chains`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusDeactivateChainRequest = (sa_sender, a_chains) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .S(a_chains) // string[] chains = 2
    .o;
/**
 * Encodes a `DeactivateChainResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusDeactivateChainResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `RegisterAssetFeeRequest` protobuf message: represents a message to register the transfer fee info associated to an asset on a chain
 * @param sa_sender - `sender`:
 * @param g_fee_info - `fee_info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusRegisterAssetFeeRequest = (sa_sender, atu8_fee_info) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .b(atu8_fee_info) // FeeInfo fee_info = 2
    .o;
/**
 * Encodes a `RegisterAssetFeeResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusRegisterAssetFeeResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `SetTransferRateLimitRequest` protobuf message: represents a message to set rate limits on transfers
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param a_limit - `limit`:
 * @param xt_window - `window`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusSetTransferRateLimitRequest = (sa_sender, s_chain, a_limit, xt_window) => Protobuf() // ...
    .b(bech32_decode(sa_sender)) // bytes sender = 1
    .s(s_chain) // string chain = 2
    .b(coin(a_limit)) // Coin limit = 3
    .b(temporal(xt_window)) // Duration window = 4
    .o;
/**
 * Encodes a `SetTransferRateLimitResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarNexusSetTransferRateLimitResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf RegisterChainMaintainerRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusRegisterChainMaintainerRequest}
 */
export const decodeAxelarNexusRegisterChainMaintainerRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 4]);
/**
 * Decodes a protobuf RegisterChainMaintainer message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusRegisterChainMaintainerResponse}
 */
export const decodeAxelarNexusRegisterChainMaintainerResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DeregisterChainMaintainerRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusDeregisterChainMaintainerRequest}
 */
export const decodeAxelarNexusDeregisterChainMaintainerRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 4]);
/**
 * Decodes a protobuf DeregisterChainMaintainer message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusDeregisterChainMaintainerResponse}
 */
export const decodeAxelarNexusDeregisterChainMaintainerResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf ActivateChainRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusActivateChainRequest}
 */
export const decodeAxelarNexusActivateChainRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 4]);
/**
 * Decodes a protobuf ActivateChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusActivateChainResponse}
 */
export const decodeAxelarNexusActivateChainResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DeactivateChainRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusDeactivateChainRequest}
 */
export const decodeAxelarNexusDeactivateChainRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 4]);
/**
 * Decodes a protobuf DeactivateChain message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusDeactivateChainResponse}
 */
export const decodeAxelarNexusDeactivateChainResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf RegisterAssetFeeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusRegisterAssetFeeRequest}
 */
export const decodeAxelarNexusRegisterAssetFeeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1], [0, decodeAxelarNexusExportedFeeInfo]);
/**
 * Decodes a protobuf RegisterAssetFee message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusRegisterAssetFeeResponse}
 */
export const decodeAxelarNexusRegisterAssetFeeResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf SetTransferRateLimitRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusSetTransferRateLimitRequest}
 */
export const decodeAxelarNexusSetTransferRateLimitRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5, 1, [3, 1]], [0, 0, decode_coin, decode_temporal]);
/**
 * Decodes a protobuf SetTransferRateLimit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarNexusSetTransferRateLimitResponse}
 */
export const decodeAxelarNexusSetTransferRateLimitResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link AxelarNexusRegisterChainMaintainerRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chains -
 */
export const destructAxelarNexusRegisterChainMaintainerRequest = (g_struct) => [g_struct.sender, g_struct.chains];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_REGISTER_CHAIN_MAINTAINER_REQUEST = '/axelar.nexus.v1beta1.RegisterChainMaintainerRequest';
/**
 * Destructures the fields of a {@link AxelarNexusRegisterChainMaintainerResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusRegisterChainMaintainerResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_REGISTER_CHAIN_MAINTAINER_RESPONSE = '/axelar.nexus.v1beta1.RegisterChainMaintainerResponse';
/**
 * Destructures the fields of a {@link AxelarNexusDeregisterChainMaintainerRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chains -
 */
export const destructAxelarNexusDeregisterChainMaintainerRequest = (g_struct) => [g_struct.sender, g_struct.chains];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_DEREGISTER_CHAIN_MAINTAINER_REQUEST = '/axelar.nexus.v1beta1.DeregisterChainMaintainerRequest';
/**
 * Destructures the fields of a {@link AxelarNexusDeregisterChainMaintainerResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusDeregisterChainMaintainerResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_DEREGISTER_CHAIN_MAINTAINER_RESPONSE = '/axelar.nexus.v1beta1.DeregisterChainMaintainerResponse';
/**
 * Destructures the fields of a {@link AxelarNexusActivateChainRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chains -
 */
export const destructAxelarNexusActivateChainRequest = (g_struct) => [g_struct.sender, g_struct.chains];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_ACTIVATE_CHAIN_REQUEST = '/axelar.nexus.v1beta1.ActivateChainRequest';
/**
 * Destructures the fields of a {@link AxelarNexusActivateChainResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusActivateChainResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_ACTIVATE_CHAIN_RESPONSE = '/axelar.nexus.v1beta1.ActivateChainResponse';
/**
 * Destructures the fields of a {@link AxelarNexusDeactivateChainRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chains -
 */
export const destructAxelarNexusDeactivateChainRequest = (g_struct) => [g_struct.sender, g_struct.chains];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_DEACTIVATE_CHAIN_REQUEST = '/axelar.nexus.v1beta1.DeactivateChainRequest';
/**
 * Destructures the fields of a {@link AxelarNexusDeactivateChainResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusDeactivateChainResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_DEACTIVATE_CHAIN_RESPONSE = '/axelar.nexus.v1beta1.DeactivateChainResponse';
/**
 * Destructures the fields of a {@link AxelarNexusRegisterAssetFeeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: fee_info -
 */
export const destructAxelarNexusRegisterAssetFeeRequest = (g_struct) => [g_struct.sender, g_struct.fee_info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_REGISTER_ASSET_FEE_REQUEST = '/axelar.nexus.v1beta1.RegisterAssetFeeRequest';
/**
 * Destructures the fields of a {@link AxelarNexusRegisterAssetFeeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusRegisterAssetFeeResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_REGISTER_ASSET_FEE_RESPONSE = '/axelar.nexus.v1beta1.RegisterAssetFeeResponse';
/**
 * Destructures the fields of a {@link AxelarNexusSetTransferRateLimitRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: limit -
 *   - 3: window -
 */
export const destructAxelarNexusSetTransferRateLimitRequest = (g_struct) => [g_struct.sender, g_struct.chain, g_struct.limit, parse_duration(g_struct.window)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_SET_TRANSFER_RATE_LIMIT_REQUEST = '/axelar.nexus.v1beta1.SetTransferRateLimitRequest';
/**
 * Destructures the fields of a {@link AxelarNexusSetTransferRateLimitResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructAxelarNexusSetTransferRateLimitResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_NEXUS_SET_TRANSFER_RATE_LIMIT_RESPONSE = '/axelar.nexus.v1beta1.SetTransferRateLimitResponse';
//# sourceMappingURL=tx.js.map