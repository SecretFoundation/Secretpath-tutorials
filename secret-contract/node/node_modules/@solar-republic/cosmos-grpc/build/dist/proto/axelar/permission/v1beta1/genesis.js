/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeAxelarPermissionParams } from './params.js';
import { decodeAxelarPermissionGovAccount } from './types.js';
import { decodeCosmosCryptoMultisigLegacyAminoPubKey } from '../../../cosmos/crypto/multisig/keys.js';
/**
 * Encodes a `GenesisState` protobuf message: represents the genesis state
 * @param g_params - `params`:
 * @param g_governance_key - `governance_key`:
 * @param a_gov_accounts - `gov_accounts`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarPermissionGenesisState = (atu8_params, atu8_governance_key, a_gov_accounts) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .b(atu8_governance_key) // LegacyAminoPubKey governance_key = 2
    .B(a_gov_accounts) // GovAccount[] gov_accounts = 3
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarPermissionGenesisState}
 */
export const decodeAxelarPermissionGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 0], [decodeAxelarPermissionParams, decodeCosmosCryptoMultisigLegacyAminoPubKey, decodeAxelarPermissionGovAccount]);
/**
 * Destructures the fields of a {@link AxelarPermissionGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 *   - 1: governance_key -
 *   - 2: gov_accounts -
 */
export const destructAxelarPermissionGenesisState = (g_struct) => [g_struct.params, g_struct.governance_key, g_struct.gov_accounts];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_PERMISSION_GENESIS_STATE = '/axelar.permission.v1beta1.GenesisState';
//# sourceMappingURL=genesis.js.map