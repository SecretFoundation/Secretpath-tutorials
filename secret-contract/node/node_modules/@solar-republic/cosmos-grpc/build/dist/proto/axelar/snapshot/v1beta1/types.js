import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `ProxiedValidator` protobuf message:
 * @param atu8_validator - `validator`:
 * @param atu8_proxy - `proxy`:
 * @param b_active - `active`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeAxelarSnapshotProxiedValidator = (atu8_validator, atu8_proxy, b_active) => Protobuf() // ...
    .b(atu8_validator) // bytes validator = 1
    .b(atu8_proxy) // bytes proxy = 2
    .v(b_active) // boolean active = 3
    .o;
/**
 * Decodes a protobuf ProxiedValidator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarSnapshotProxiedValidator}
 */
export const decodeAxelarSnapshotProxiedValidator = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1]);
/**
 * Destructures the fields of a {@link AxelarSnapshotProxiedValidator} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator -
 *   - 1: proxy -
 *   - 2: active -
 */
export const destructAxelarSnapshotProxiedValidator = (g_struct) => [safe_base64_to_bytes(g_struct.validator), safe_base64_to_bytes(g_struct.proxy), g_struct.active];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_AXELAR_SNAPSHOT_PROXIED_VALIDATOR = '/axelar.snapshot.v1beta1.ProxiedValidator';
//# sourceMappingURL=types.js.map