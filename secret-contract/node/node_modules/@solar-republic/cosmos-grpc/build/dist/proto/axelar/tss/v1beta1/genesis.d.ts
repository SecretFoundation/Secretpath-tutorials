import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarTssParams, DecodedAxelarTssParams } from './params.js';
export type EncodedAxelarTssGenesisState = Encoded<'/axelar.tss.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssGenesisState: (atu8_params?: Opt<Encoded<'/axelar.tss.v1beta1.Params'>>) => EncodedAxelarTssGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params -
 */
export type DecodedAxelarTssGenesisState = [
    a_params?: DecodedAxelarTssParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssGenesisState}
 */
export declare const decodeAxelarTssGenesisState: (atu8_payload: Uint8Array) => DecodedAxelarTssGenesisState;
/**
 * Destructures the fields of a {@link AxelarTssGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructAxelarTssGenesisState: (g_struct: AxelarTssGenesisState) => [params?: AxelarTssParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_GENESIS_STATE = "/axelar.tss.v1beta1.GenesisState";
/**
 * JSON serialization of `axelar.tss.v1beta1.GenesisState` -
 */
export type AxelarTssGenesisState = {
    params?: AxelarTssParams | undefined;
};
