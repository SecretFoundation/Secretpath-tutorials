import type { WeakAccountAddr, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { ProtoEnumAxelarTssExportedKeyRole, JsonEnumAxelarTssExportedKeyRole, AxelarTssExportedSigKeyPair, DecodedAxelarTssExportedSigKeyPair } from '../exported/v1beta1/types.js';
import type { AxelarTssTofndTrafficOut, DecodedAxelarTssTofndTrafficOut, AxelarTssTofndMessageOutKeygenResult, DecodedAxelarTssTofndMessageOutKeygenResult, AxelarTssTofndMessageOutSignResult, DecodedAxelarTssTofndMessageOutSignResult } from '../tofnd/v1beta1/tofnd.js';
import type { AxelarTssKeyInfo, DecodedAxelarTssKeyInfo } from './types.js';
import type { AxelarVoteExportedPollKey, DecodedAxelarVoteExportedPollKey } from '../../vote/exported/v1beta1/types.js';
export type EncodedAxelarTssStartKeygenRequest = Encoded<'/axelar.tss.v1beta1.StartKeygenRequest'>;
export type EncodedAxelarTssStartKeygenResponse = Encoded<'/axelar.tss.v1beta1.StartKeygenResponse'>;
export type EncodedAxelarTssRotateKeyRequest = Encoded<'/axelar.tss.v1beta1.RotateKeyRequest'>;
export type EncodedAxelarTssRotateKeyResponse = Encoded<'/axelar.tss.v1beta1.RotateKeyResponse'>;
export type EncodedAxelarTssProcessKeygenTrafficRequest = Encoded<'/axelar.tss.v1beta1.ProcessKeygenTrafficRequest'>;
export type EncodedAxelarTssProcessKeygenTrafficResponse = Encoded<'/axelar.tss.v1beta1.ProcessKeygenTrafficResponse'>;
export type EncodedAxelarTssProcessSignTrafficRequest = Encoded<'/axelar.tss.v1beta1.ProcessSignTrafficRequest'>;
export type EncodedAxelarTssProcessSignTrafficResponse = Encoded<'/axelar.tss.v1beta1.ProcessSignTrafficResponse'>;
export type EncodedAxelarTssVotePubKeyRequest = Encoded<'/axelar.tss.v1beta1.VotePubKeyRequest'>;
export type EncodedAxelarTssVotePubKeyResponse = Encoded<'/axelar.tss.v1beta1.VotePubKeyResponse'>;
export type EncodedAxelarTssVoteSigRequest = Encoded<'/axelar.tss.v1beta1.VoteSigRequest'>;
export type EncodedAxelarTssVoteSigResponse = Encoded<'/axelar.tss.v1beta1.VoteSigResponse'>;
export type EncodedAxelarTssHeartBeatRequest = Encoded<'/axelar.tss.v1beta1.HeartBeatRequest'>;
export type EncodedAxelarTssHeartBeatResponse = Encoded<'/axelar.tss.v1beta1.HeartBeatResponse'>;
export type EncodedAxelarTssRegisterExternalKeysRequest = Encoded<'/axelar.tss.v1beta1.RegisterExternalKeysRequest'>;
export type EncodedAxelarTssRegisterExternalKeysResponse = Encoded<'/axelar.tss.v1beta1.RegisterExternalKeysResponse'>;
export type EncodedAxelarTssSubmitMultisigPubKeysRequest = Encoded<'/axelar.tss.v1beta1.SubmitMultisigPubKeysRequest'>;
export type EncodedAxelarTssSubmitMultisigPubKeysResponse = Encoded<'/axelar.tss.v1beta1.SubmitMultisigPubKeysResponse'>;
export type EncodedAxelarTssSubmitMultisigSignaturesRequest = Encoded<'/axelar.tss.v1beta1.SubmitMultisigSignaturesRequest'>;
export type EncodedAxelarTssSubmitMultisigSignaturesResponse = Encoded<'/axelar.tss.v1beta1.SubmitMultisigSignaturesResponse'>;
export type EncodedAxelarTssRegisterExternalKeysRequestExternalKey = Encoded<'/axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey'>;
/**
 * Encodes a `StartKeygenRequest` protobuf message: indicate the start of keygen
 * @param sa_sender - `sender`:
 * @param g_key_info - `key_info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssStartKeygenRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_key_info?: Opt<Encoded<'/axelar.tss.v1beta1.KeyInfo'>>) => EncodedAxelarTssStartKeygenRequest;
/**
 * Encodes a `StartKeygenResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssStartKeygenResponse: () => EncodedAxelarTssStartKeygenResponse;
/**
 * Encodes a `RotateKeyRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param xc_key_role - `key_role`:
 * @param si_key - `key_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssRotateKeyRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, xc_key_role?: Opt<ProtoEnumAxelarTssExportedKeyRole>, si_key?: Opt<string>) => EncodedAxelarTssRotateKeyRequest;
/**
 * Encodes a `RotateKeyResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssRotateKeyResponse: () => EncodedAxelarTssRotateKeyResponse;
/**
 * Encodes a `ProcessKeygenTrafficRequest` protobuf message: protocol message
 * @param sa_sender - `sender`:
 * @param si_session - `session_id`:
 * @param g_payload - `payload`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssProcessKeygenTrafficRequest: (sa_sender?: Opt<WeakAccountAddr>, si_session?: Opt<string>, atu8_payload?: Opt<Encoded<'/axelar.tss.tofnd.v1beta1.TrafficOut'>>) => EncodedAxelarTssProcessKeygenTrafficRequest;
/**
 * Encodes a `ProcessKeygenTrafficResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssProcessKeygenTrafficResponse: () => EncodedAxelarTssProcessKeygenTrafficResponse;
/**
 * Encodes a `ProcessSignTrafficRequest` protobuf message: protocol message
 * @param sa_sender - `sender`:
 * @param si_session - `session_id`:
 * @param g_payload - `payload`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssProcessSignTrafficRequest: (sa_sender?: Opt<WeakAccountAddr>, si_session?: Opt<string>, atu8_payload?: Opt<Encoded<'/axelar.tss.tofnd.v1beta1.TrafficOut'>>) => EncodedAxelarTssProcessSignTrafficRequest;
/**
 * Encodes a `ProcessSignTrafficResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssProcessSignTrafficResponse: () => EncodedAxelarTssProcessSignTrafficResponse;
/**
 * Encodes a `VotePubKeyRequest` protobuf message: represents the message to vote on a public key
 * @param sa_sender - `sender`:
 * @param g_poll_key - `poll_key`:
 * @param g_result - `result`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssVotePubKeyRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_poll_key?: Opt<Encoded<'/axelar.vote.exported.v1beta1.PollKey'>>, atu8_result?: Opt<Encoded<'/axelar.tss.tofnd.v1beta1.MessageOut.KeygenResult'>>) => EncodedAxelarTssVotePubKeyRequest;
/**
 * Encodes a `VotePubKeyResponse` protobuf message:
 * @param s_log - `log`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssVotePubKeyResponse: (s_log?: Opt<string>) => EncodedAxelarTssVotePubKeyResponse;
/**
 * Encodes a `VoteSigRequest` protobuf message: represents a message to vote for a signature
 * @param sa_sender - `sender`:
 * @param g_poll_key - `poll_key`:
 * @param g_result - `result`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssVoteSigRequest: (sa_sender?: Opt<WeakAccountAddr>, atu8_poll_key?: Opt<Encoded<'/axelar.vote.exported.v1beta1.PollKey'>>, atu8_result?: Opt<Encoded<'/axelar.tss.tofnd.v1beta1.MessageOut.SignResult'>>) => EncodedAxelarTssVoteSigRequest;
/**
 * Encodes a `VoteSigResponse` protobuf message:
 * @param s_log - `log`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssVoteSigResponse: (s_log?: Opt<string>) => EncodedAxelarTssVoteSigResponse;
/**
 * Encodes a `HeartBeatRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param a_key_ids - `key_ids`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssHeartBeatRequest: (sa_sender?: Opt<WeakAccountAddr>, a_key_ids?: Opt<string[]>) => EncodedAxelarTssHeartBeatRequest;
/**
 * Encodes a `HeartBeatResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssHeartBeatResponse: () => EncodedAxelarTssHeartBeatResponse;
/**
 * Encodes a `RegisterExternalKeysRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param s_chain - `chain`:
 * @param a_external_keys - `external_keys`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssRegisterExternalKeysRequest: (sa_sender?: Opt<WeakAccountAddr>, s_chain?: Opt<string>, a_external_keys?: Opt<Encoded<'/axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey'>[]>) => EncodedAxelarTssRegisterExternalKeysRequest;
/**
 * Encodes a `RegisterExternalKeysResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssRegisterExternalKeysResponse: () => EncodedAxelarTssRegisterExternalKeysResponse;
/**
 * Encodes a `SubmitMultisigPubKeysRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param si_key - `key_id`:
 * @param a_sig_key_pairs - `sig_key_pairs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssSubmitMultisigPubKeysRequest: (sa_sender?: Opt<WeakAccountAddr>, si_key?: Opt<string>, a_sig_key_pairs?: Opt<Encoded<'/axelar.tss.exported.v1beta1.SigKeyPair'>[]>) => EncodedAxelarTssSubmitMultisigPubKeysRequest;
/**
 * Encodes a `SubmitMultisigPubKeysResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssSubmitMultisigPubKeysResponse: () => EncodedAxelarTssSubmitMultisigPubKeysResponse;
/**
 * Encodes a `SubmitMultisigSignaturesRequest` protobuf message:
 * @param sa_sender - `sender`:
 * @param si_sig - `sig_id`:
 * @param a_signatures - `signatures`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssSubmitMultisigSignaturesRequest: (sa_sender?: Opt<WeakAccountAddr>, si_sig?: Opt<string>, a_signatures?: Opt<Uint8Array[]>) => EncodedAxelarTssSubmitMultisigSignaturesRequest;
/**
 * Encodes a `SubmitMultisigSignaturesResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssSubmitMultisigSignaturesResponse: () => EncodedAxelarTssSubmitMultisigSignaturesResponse;
/**
 * Encodes a `ExternalKey` protobuf message:
 * @param s_id - `id`:
 * @param atu8_pub_key - `pub_key`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarTssRegisterExternalKeysRequestExternalKey: (s_id?: Opt<string>, atu8_pub_key?: Opt<Uint8Array>) => EncodedAxelarTssRegisterExternalKeysRequestExternalKey;
/**
 * A decoded protobuf StartKeygenRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: key_info -
 */
export type DecodedAxelarTssStartKeygenRequest = [
    sa_sender?: CwAccountAddr,
    a_key_info?: DecodedAxelarTssKeyInfo
];
/**
 * Decodes a protobuf StartKeygenRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssStartKeygenRequest}
 */
export declare const decodeAxelarTssStartKeygenRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssStartKeygenRequest;
/**
 * A decoded protobuf StartKeygen message
 *
 * Tuple where:
 */
export type DecodedAxelarTssStartKeygenResponse = [];
/**
 * Decodes a protobuf StartKeygen message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssStartKeygenResponse}
 */
export declare const decodeAxelarTssStartKeygenResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RotateKeyRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_role -
 *   - 3: key_id -
 */
export type DecodedAxelarTssRotateKeyRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    xc_key_role?: ProtoEnumAxelarTssExportedKeyRole,
    si_key?: string
];
/**
 * Decodes a protobuf RotateKeyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssRotateKeyRequest}
 */
export declare const decodeAxelarTssRotateKeyRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssRotateKeyRequest;
/**
 * A decoded protobuf RotateKey message
 *
 * Tuple where:
 */
export type DecodedAxelarTssRotateKeyResponse = [];
/**
 * Decodes a protobuf RotateKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssRotateKeyResponse}
 */
export declare const decodeAxelarTssRotateKeyResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ProcessKeygenTrafficRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: session_id -
 *   - 2: payload -
 */
export type DecodedAxelarTssProcessKeygenTrafficRequest = [
    sa_sender?: CwAccountAddr,
    si_session?: string,
    a_payload?: DecodedAxelarTssTofndTrafficOut
];
/**
 * Decodes a protobuf ProcessKeygenTrafficRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssProcessKeygenTrafficRequest}
 */
export declare const decodeAxelarTssProcessKeygenTrafficRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssProcessKeygenTrafficRequest;
/**
 * A decoded protobuf ProcessKeygenTraffic message
 *
 * Tuple where:
 */
export type DecodedAxelarTssProcessKeygenTrafficResponse = [];
/**
 * Decodes a protobuf ProcessKeygenTraffic message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssProcessKeygenTrafficResponse}
 */
export declare const decodeAxelarTssProcessKeygenTrafficResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ProcessSignTrafficRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: session_id -
 *   - 2: payload -
 */
export type DecodedAxelarTssProcessSignTrafficRequest = [
    sa_sender?: CwAccountAddr,
    si_session?: string,
    a_payload?: DecodedAxelarTssTofndTrafficOut
];
/**
 * Decodes a protobuf ProcessSignTrafficRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssProcessSignTrafficRequest}
 */
export declare const decodeAxelarTssProcessSignTrafficRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssProcessSignTrafficRequest;
/**
 * A decoded protobuf ProcessSignTraffic message
 *
 * Tuple where:
 */
export type DecodedAxelarTssProcessSignTrafficResponse = [];
/**
 * Decodes a protobuf ProcessSignTraffic message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssProcessSignTrafficResponse}
 */
export declare const decodeAxelarTssProcessSignTrafficResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf VotePubKeyRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: poll_key -
 *   - 2: result -
 */
export type DecodedAxelarTssVotePubKeyRequest = [
    sa_sender?: CwAccountAddr,
    a_poll_key?: DecodedAxelarVoteExportedPollKey,
    a_result?: DecodedAxelarTssTofndMessageOutKeygenResult
];
/**
 * Decodes a protobuf VotePubKeyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssVotePubKeyRequest}
 */
export declare const decodeAxelarTssVotePubKeyRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssVotePubKeyRequest;
/**
 * A decoded protobuf VotePubKey message
 *
 * Alias for: log -
 */
export type DecodedAxelarTssVotePubKeyResponse = [
    s_log?: string
];
/**
 * Decodes a protobuf VotePubKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssVotePubKeyResponse}
 */
export declare const decodeAxelarTssVotePubKeyResponse: (atu8_payload: Uint8Array) => DecodedAxelarTssVotePubKeyResponse;
/**
 * A decoded protobuf VoteSigRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: poll_key -
 *   - 2: result -
 */
export type DecodedAxelarTssVoteSigRequest = [
    sa_sender?: CwAccountAddr,
    a_poll_key?: DecodedAxelarVoteExportedPollKey,
    a_result?: DecodedAxelarTssTofndMessageOutSignResult
];
/**
 * Decodes a protobuf VoteSigRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssVoteSigRequest}
 */
export declare const decodeAxelarTssVoteSigRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssVoteSigRequest;
/**
 * A decoded protobuf VoteSig message
 *
 * Alias for: log -
 */
export type DecodedAxelarTssVoteSigResponse = [
    s_log?: string
];
/**
 * Decodes a protobuf VoteSig message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssVoteSigResponse}
 */
export declare const decodeAxelarTssVoteSigResponse: (atu8_payload: Uint8Array) => DecodedAxelarTssVoteSigResponse;
/**
 * A decoded protobuf HeartBeatRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: key_ids -
 */
export type DecodedAxelarTssHeartBeatRequest = [
    sa_sender?: CwAccountAddr,
    a_key_ids?: string[]
];
/**
 * Decodes a protobuf HeartBeatRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssHeartBeatRequest}
 */
export declare const decodeAxelarTssHeartBeatRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssHeartBeatRequest;
/**
 * A decoded protobuf HeartBeat message
 *
 * Tuple where:
 */
export type DecodedAxelarTssHeartBeatResponse = [];
/**
 * Decodes a protobuf HeartBeat message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssHeartBeatResponse}
 */
export declare const decodeAxelarTssHeartBeatResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf RegisterExternalKeysRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: external_keys -
 */
export type DecodedAxelarTssRegisterExternalKeysRequest = [
    sa_sender?: CwAccountAddr,
    s_chain?: string,
    a_external_keys?: DecodedAxelarTssRegisterExternalKeysRequestExternalKey[]
];
/**
 * Decodes a protobuf RegisterExternalKeysRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssRegisterExternalKeysRequest}
 */
export declare const decodeAxelarTssRegisterExternalKeysRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssRegisterExternalKeysRequest;
/**
 * A decoded protobuf RegisterExternalKeys message
 *
 * Tuple where:
 */
export type DecodedAxelarTssRegisterExternalKeysResponse = [];
/**
 * Decodes a protobuf RegisterExternalKeys message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssRegisterExternalKeysResponse}
 */
export declare const decodeAxelarTssRegisterExternalKeysResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SubmitMultisigPubKeysRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 *   - 2: sig_key_pairs -
 */
export type DecodedAxelarTssSubmitMultisigPubKeysRequest = [
    sa_sender?: CwAccountAddr,
    si_key?: string,
    a_sig_key_pairs?: DecodedAxelarTssExportedSigKeyPair[]
];
/**
 * Decodes a protobuf SubmitMultisigPubKeysRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssSubmitMultisigPubKeysRequest}
 */
export declare const decodeAxelarTssSubmitMultisigPubKeysRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssSubmitMultisigPubKeysRequest;
/**
 * A decoded protobuf SubmitMultisigPubKeys message
 *
 * Tuple where:
 */
export type DecodedAxelarTssSubmitMultisigPubKeysResponse = [];
/**
 * Decodes a protobuf SubmitMultisigPubKeys message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssSubmitMultisigPubKeysResponse}
 */
export declare const decodeAxelarTssSubmitMultisigPubKeysResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf SubmitMultisigSignaturesRequest message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: sig_id -
 *   - 2: signatures -
 */
export type DecodedAxelarTssSubmitMultisigSignaturesRequest = [
    sa_sender?: CwAccountAddr,
    si_sig?: string,
    a_signatures?: Uint8Array[]
];
/**
 * Decodes a protobuf SubmitMultisigSignaturesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssSubmitMultisigSignaturesRequest}
 */
export declare const decodeAxelarTssSubmitMultisigSignaturesRequest: (atu8_payload: Uint8Array) => DecodedAxelarTssSubmitMultisigSignaturesRequest;
/**
 * A decoded protobuf SubmitMultisigSignatures message
 *
 * Tuple where:
 */
export type DecodedAxelarTssSubmitMultisigSignaturesResponse = [];
/**
 * Decodes a protobuf SubmitMultisigSignatures message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssSubmitMultisigSignaturesResponse}
 */
export declare const decodeAxelarTssSubmitMultisigSignaturesResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ExternalKey message
 *
 * Tuple where:
 *   - 0: id -
 *   - 1: pub_key -
 */
export type DecodedAxelarTssRegisterExternalKeysRequestExternalKey = [
    s_id?: string,
    atu8_pub_key?: Uint8Array
];
/**
 * Decodes a protobuf ExternalKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarTssRegisterExternalKeysRequestExternalKey}
 */
export declare const decodeAxelarTssRegisterExternalKeysRequestExternalKey: (atu8_payload: Uint8Array) => DecodedAxelarTssRegisterExternalKeysRequestExternalKey;
/**
 * Destructures the fields of a {@link AxelarTssStartKeygenRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: key_info -
 */
export declare const destructAxelarTssStartKeygenRequest: (g_struct: AxelarTssStartKeygenRequest) => [sender?: CwAccountAddr, key_info?: AxelarTssKeyInfo];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_START_KEYGEN_REQUEST = "/axelar.tss.v1beta1.StartKeygenRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.StartKeygenRequest` - indicate the start of keygen
 */
export type AxelarTssStartKeygenRequest = {
    sender?: CwAccountAddr | undefined;
    key_info?: AxelarTssKeyInfo | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssStartKeygenResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssStartKeygenResponse: (g_struct: AxelarTssStartKeygenResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_START_KEYGEN_RESPONSE = "/axelar.tss.v1beta1.StartKeygenResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.StartKeygenResponse` -
 */
export type AxelarTssStartKeygenResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssRotateKeyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: key_role -
 *   - 3: key_id -
 */
export declare const destructAxelarTssRotateKeyRequest: (g_struct: AxelarTssRotateKeyRequest) => [sender?: CwBase64, chain?: string, key_role?: JsonEnumAxelarTssExportedKeyRole, key_id?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_ROTATE_KEY_REQUEST = "/axelar.tss.v1beta1.RotateKeyRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.RotateKeyRequest` -
 */
export type AxelarTssRotateKeyRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    key_role?: JsonEnumAxelarTssExportedKeyRole | undefined;
    key_id?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssRotateKeyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssRotateKeyResponse: (g_struct: AxelarTssRotateKeyResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_ROTATE_KEY_RESPONSE = "/axelar.tss.v1beta1.RotateKeyResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.RotateKeyResponse` -
 */
export type AxelarTssRotateKeyResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssProcessKeygenTrafficRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: session_id -
 *   - 2: payload -
 */
export declare const destructAxelarTssProcessKeygenTrafficRequest: (g_struct: AxelarTssProcessKeygenTrafficRequest) => [sender?: CwBase64, session_id?: string, payload?: AxelarTssTofndTrafficOut];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_PROCESS_KEYGEN_TRAFFIC_REQUEST = "/axelar.tss.v1beta1.ProcessKeygenTrafficRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.ProcessKeygenTrafficRequest` - protocol message
 */
export type AxelarTssProcessKeygenTrafficRequest = {
    sender?: CwBase64 | undefined;
    session_id?: string | undefined;
    payload?: AxelarTssTofndTrafficOut | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssProcessKeygenTrafficResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssProcessKeygenTrafficResponse: (g_struct: AxelarTssProcessKeygenTrafficResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_PROCESS_KEYGEN_TRAFFIC_RESPONSE = "/axelar.tss.v1beta1.ProcessKeygenTrafficResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.ProcessKeygenTrafficResponse` -
 */
export type AxelarTssProcessKeygenTrafficResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssProcessSignTrafficRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: session_id -
 *   - 2: payload -
 */
export declare const destructAxelarTssProcessSignTrafficRequest: (g_struct: AxelarTssProcessSignTrafficRequest) => [sender?: CwBase64, session_id?: string, payload?: AxelarTssTofndTrafficOut];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_PROCESS_SIGN_TRAFFIC_REQUEST = "/axelar.tss.v1beta1.ProcessSignTrafficRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.ProcessSignTrafficRequest` - protocol message
 */
export type AxelarTssProcessSignTrafficRequest = {
    sender?: CwBase64 | undefined;
    session_id?: string | undefined;
    payload?: AxelarTssTofndTrafficOut | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssProcessSignTrafficResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssProcessSignTrafficResponse: (g_struct: AxelarTssProcessSignTrafficResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_PROCESS_SIGN_TRAFFIC_RESPONSE = "/axelar.tss.v1beta1.ProcessSignTrafficResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.ProcessSignTrafficResponse` -
 */
export type AxelarTssProcessSignTrafficResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssVotePubKeyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: poll_key -
 *   - 2: result -
 */
export declare const destructAxelarTssVotePubKeyRequest: (g_struct: AxelarTssVotePubKeyRequest) => [sender?: CwBase64, poll_key?: AxelarVoteExportedPollKey, result?: AxelarTssTofndMessageOutKeygenResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_VOTE_PUB_KEY_REQUEST = "/axelar.tss.v1beta1.VotePubKeyRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.VotePubKeyRequest` - represents the message to vote on a public key
 */
export type AxelarTssVotePubKeyRequest = {
    sender?: CwBase64 | undefined;
    poll_key?: AxelarVoteExportedPollKey | undefined;
    result?: AxelarTssTofndMessageOutKeygenResult | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssVotePubKeyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: log -
 */
export declare const destructAxelarTssVotePubKeyResponse: (g_struct: AxelarTssVotePubKeyResponse) => [log?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_VOTE_PUB_KEY_RESPONSE = "/axelar.tss.v1beta1.VotePubKeyResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.VotePubKeyResponse` -
 */
export type AxelarTssVotePubKeyResponse = {
    log?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssVoteSigRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: poll_key -
 *   - 2: result -
 */
export declare const destructAxelarTssVoteSigRequest: (g_struct: AxelarTssVoteSigRequest) => [sender?: CwBase64, poll_key?: AxelarVoteExportedPollKey, result?: AxelarTssTofndMessageOutSignResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_VOTE_SIG_REQUEST = "/axelar.tss.v1beta1.VoteSigRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.VoteSigRequest` - represents a message to vote for a signature
 */
export type AxelarTssVoteSigRequest = {
    sender?: CwBase64 | undefined;
    poll_key?: AxelarVoteExportedPollKey | undefined;
    result?: AxelarTssTofndMessageOutSignResult | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssVoteSigResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: log -
 */
export declare const destructAxelarTssVoteSigResponse: (g_struct: AxelarTssVoteSigResponse) => [log?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_VOTE_SIG_RESPONSE = "/axelar.tss.v1beta1.VoteSigResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.VoteSigResponse` -
 */
export type AxelarTssVoteSigResponse = {
    log?: string | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssHeartBeatRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: key_ids -
 */
export declare const destructAxelarTssHeartBeatRequest: (g_struct: AxelarTssHeartBeatRequest) => [sender?: CwBase64, key_ids?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_HEART_BEAT_REQUEST = "/axelar.tss.v1beta1.HeartBeatRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.HeartBeatRequest` -
 */
export type AxelarTssHeartBeatRequest = {
    sender?: CwBase64 | undefined;
    key_ids?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssHeartBeatResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssHeartBeatResponse: (g_struct: AxelarTssHeartBeatResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_HEART_BEAT_RESPONSE = "/axelar.tss.v1beta1.HeartBeatResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.HeartBeatResponse` -
 */
export type AxelarTssHeartBeatResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssRegisterExternalKeysRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: chain -
 *   - 2: external_keys -
 */
export declare const destructAxelarTssRegisterExternalKeysRequest: (g_struct: AxelarTssRegisterExternalKeysRequest) => [sender?: CwBase64, chain?: string, external_keys?: AxelarTssRegisterExternalKeysRequestExternalKey[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_REGISTER_EXTERNAL_KEYS_REQUEST = "/axelar.tss.v1beta1.RegisterExternalKeysRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.RegisterExternalKeysRequest` -
 */
export type AxelarTssRegisterExternalKeysRequest = {
    sender?: CwBase64 | undefined;
    chain?: string | undefined;
    external_keys?: AxelarTssRegisterExternalKeysRequestExternalKey[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssRegisterExternalKeysRequestExternalKey} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: pub_key -
 */
export declare const destructAxelarTssRegisterExternalKeysRequestExternalKey: (g_struct: AxelarTssRegisterExternalKeysRequestExternalKey) => [id?: string, pub_key?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_REGISTER_EXTERNAL_KEYS_REQUEST_EXTERNAL_KEY = "/axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey";
/**
 * JSON serialization of `axelar.tss.v1beta1.RegisterExternalKeysRequest.ExternalKey` -
 */
export type AxelarTssRegisterExternalKeysRequestExternalKey = {
    id?: string | undefined;
    pub_key?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssRegisterExternalKeysResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssRegisterExternalKeysResponse: (g_struct: AxelarTssRegisterExternalKeysResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_REGISTER_EXTERNAL_KEYS_RESPONSE = "/axelar.tss.v1beta1.RegisterExternalKeysResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.RegisterExternalKeysResponse` -
 */
export type AxelarTssRegisterExternalKeysResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssSubmitMultisigPubKeysRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: key_id -
 *   - 2: sig_key_pairs -
 */
export declare const destructAxelarTssSubmitMultisigPubKeysRequest: (g_struct: AxelarTssSubmitMultisigPubKeysRequest) => [sender?: CwBase64, key_id?: string, sig_key_pairs?: AxelarTssExportedSigKeyPair[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_SUBMIT_MULTISIG_PUB_KEYS_REQUEST = "/axelar.tss.v1beta1.SubmitMultisigPubKeysRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.SubmitMultisigPubKeysRequest` -
 */
export type AxelarTssSubmitMultisigPubKeysRequest = {
    sender?: CwBase64 | undefined;
    key_id?: string | undefined;
    sig_key_pairs?: AxelarTssExportedSigKeyPair[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssSubmitMultisigPubKeysResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssSubmitMultisigPubKeysResponse: (g_struct: AxelarTssSubmitMultisigPubKeysResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_SUBMIT_MULTISIG_PUB_KEYS_RESPONSE = "/axelar.tss.v1beta1.SubmitMultisigPubKeysResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.SubmitMultisigPubKeysResponse` -
 */
export type AxelarTssSubmitMultisigPubKeysResponse = {};
/**
 * Destructures the fields of a {@link AxelarTssSubmitMultisigSignaturesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: sig_id -
 *   - 2: signatures -
 */
export declare const destructAxelarTssSubmitMultisigSignaturesRequest: (g_struct: AxelarTssSubmitMultisigSignaturesRequest) => [sender?: CwBase64, sig_id?: string, signatures?: Uint8Array[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_SUBMIT_MULTISIG_SIGNATURES_REQUEST = "/axelar.tss.v1beta1.SubmitMultisigSignaturesRequest";
/**
 * JSON serialization of `axelar.tss.v1beta1.SubmitMultisigSignaturesRequest` -
 */
export type AxelarTssSubmitMultisigSignaturesRequest = {
    sender?: CwBase64 | undefined;
    sig_id?: string | undefined;
    signatures?: CwBase64[] | undefined;
};
/**
 * Destructures the fields of a {@link AxelarTssSubmitMultisigSignaturesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarTssSubmitMultisigSignaturesResponse: (g_struct: AxelarTssSubmitMultisigSignaturesResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_TSS_SUBMIT_MULTISIG_SIGNATURES_RESPONSE = "/axelar.tss.v1beta1.SubmitMultisigSignaturesResponse";
/**
 * JSON serialization of `axelar.tss.v1beta1.SubmitMultisigSignaturesResponse` -
 */
export type AxelarTssSubmitMultisigSignaturesResponse = {};
