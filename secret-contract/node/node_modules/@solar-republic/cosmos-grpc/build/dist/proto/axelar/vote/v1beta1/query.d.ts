import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarVoteParams, DecodedAxelarVoteParams } from './params.js';
export type EncodedAxelarVoteParamsRequest = Encoded<'/axelar.vote.v1beta1.ParamsRequest'>;
export type EncodedAxelarVoteParamsResponse = Encoded<'/axelar.vote.v1beta1.ParamsResponse'>;
/**
 * Encodes a `ParamsRequest` protobuf message: represents a message that queries the params
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarVoteParamsRequest: () => EncodedAxelarVoteParamsRequest;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeAxelarVoteParamsResponse: (atu8_params?: Opt<Encoded<'/axelar.vote.v1beta1.Params'>>) => EncodedAxelarVoteParamsResponse;
/**
 * A decoded protobuf ParamsRequest message
 *
 * Tuple where:
 */
export type DecodedAxelarVoteParamsRequest = [];
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarVoteParamsRequest}
 */
export declare const decodeAxelarVoteParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Params message
 *
 * Alias for: params -
 */
export type DecodedAxelarVoteParamsResponse = [
    a_params?: DecodedAxelarVoteParams
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedAxelarVoteParamsResponse}
 */
export declare const decodeAxelarVoteParamsResponse: (atu8_payload: Uint8Array) => DecodedAxelarVoteParamsResponse;
/**
 * Destructures the fields of a {@link AxelarVoteParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructAxelarVoteParamsRequest: (g_struct: AxelarVoteParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_VOTE_PARAMS_REQUEST = "/axelar.vote.v1beta1.ParamsRequest";
/**
 * JSON serialization of `axelar.vote.v1beta1.ParamsRequest` - represents a message that queries the params
 */
export type AxelarVoteParamsRequest = {};
/**
 * Destructures the fields of a {@link AxelarVoteParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructAxelarVoteParamsResponse: (g_struct: AxelarVoteParamsResponse) => [params?: AxelarVoteParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_AXELAR_VOTE_PARAMS_RESPONSE = "/axelar.vote.v1beta1.ParamsResponse";
/**
 * JSON serialization of `axelar.vote.v1beta1.ParamsResponse` -
 */
export type AxelarVoteParamsResponse = {
    params?: AxelarVoteParams | undefined;
};
