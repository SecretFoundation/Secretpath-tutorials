/// <reference types="node" />
import type { Encoded, Opt } from '../../../../api/types.js';
import type { AxelarVoteParamsResponse } from './query.js';
import type { AxelarVoteVoteResponse } from './tx.js';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_poll_id -
 * @param atu8_vote -
 * @returns a tuple where:
 *   - 0: log - the 'log' response property
 */
export declare const submitAxelarVoteVote: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sg_poll_id?: Opt<`${bigint}`>, atu8_vote?: Opt<Encoded<"github.com/cosmos/codec/ProtoMarshaler">>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarVoteVoteResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryAxelarVoteParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<AxelarVoteParamsResponse>>;
