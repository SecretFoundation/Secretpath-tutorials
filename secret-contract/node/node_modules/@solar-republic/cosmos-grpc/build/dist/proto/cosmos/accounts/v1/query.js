import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `AccountQueryRequest` protobuf message: the request type for the Query/AccountQuery RPC
 * @param s_target - `target`: defines the account to be queried.
 * @param atu8_request - `request`: defines the query message being sent to the account.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAccountsAccountQueryRequest = (s_target, atu8_request) => Protobuf() // ...
    .s(s_target) // string target = 1
    .b(atu8_request) // bytes request = 2
    .o;
/**
 * Encodes a `AccountQueryResponse` protobuf message: the response type for the Query/AccountQuery RPC method.
 * @param atu8_response - `response`: defines the query response of the account.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAccountsAccountQueryResponse = (atu8_response) => Protobuf() // ...
    .b(atu8_response) // bytes response = 1
    .o;
/**
 * Decodes a protobuf AccountQueryRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAccountsAccountQueryRequest}
 */
export const decodeCosmosAccountsAccountQueryRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1]);
/**
 * Decodes a protobuf AccountQuery message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAccountsAccountQueryResponse}
 */
export const decodeCosmosAccountsAccountQueryResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link CosmosAccountsAccountQueryRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: target - defines the account to be queried.
 *   - 1: request - defines the query message being sent to the account.
 */
export const destructCosmosAccountsAccountQueryRequest = (g_struct) => [g_struct.target, safe_base64_to_bytes(g_struct.request)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ACCOUNTS_ACCOUNT_QUERY_REQUEST = '/cosmos.accounts.v1.AccountQueryRequest';
/**
 * Destructures the fields of a {@link CosmosAccountsAccountQueryResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: response - defines the query response of the account.
 */
export const destructCosmosAccountsAccountQueryResponse = (g_struct) => [safe_base64_to_bytes(g_struct.response)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ACCOUNTS_ACCOUNT_QUERY_RESPONSE = '/cosmos.accounts.v1.AccountQueryResponse';
//# sourceMappingURL=query.js.map