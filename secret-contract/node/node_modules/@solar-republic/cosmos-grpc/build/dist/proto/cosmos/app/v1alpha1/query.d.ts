import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosAppConfig, DecodedCosmosAppConfig } from './config.js';
export type EncodedCosmosAppQueryConfigRequest = Encoded<'/cosmos.app.v1alpha1.QueryConfigRequest'>;
export type EncodedCosmosAppQueryConfigResponse = Encoded<'/cosmos.app.v1alpha1.QueryConfigResponse'>;
/**
 * Encodes a `QueryConfigRequest` protobuf message: the Query/Config request type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAppQueryConfigRequest: () => EncodedCosmosAppQueryConfigRequest;
/**
 * Encodes a `QueryConfigResponse` protobuf message: QueryConfigRequest is the Query/Config response type.
 * @param g_config - `config`: the current app config.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAppQueryConfigResponse: (atu8_config?: Opt<Encoded<'/cosmos.app.v1alpha1.Config'>>) => EncodedCosmosAppQueryConfigResponse;
/**
 * A decoded protobuf QueryConfigRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosAppQueryConfigRequest = [];
/**
 * Decodes a protobuf QueryConfigRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAppQueryConfigRequest}
 */
export declare const decodeCosmosAppQueryConfigRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryConfig message
 *
 * Alias for: config - the current app config.
 */
export type DecodedCosmosAppQueryConfigResponse = [
    a_config?: DecodedCosmosAppConfig
];
/**
 * Decodes a protobuf QueryConfig message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAppQueryConfigResponse}
 */
export declare const decodeCosmosAppQueryConfigResponse: (atu8_payload: Uint8Array) => DecodedCosmosAppQueryConfigResponse;
/**
 * Destructures the fields of a {@link CosmosAppQueryConfigRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosAppQueryConfigRequest: (g_struct: CosmosAppQueryConfigRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_APP_QUERY_CONFIG_REQUEST = "/cosmos.app.v1alpha1.QueryConfigRequest";
/**
 * JSON serialization of `cosmos.app.v1alpha1.QueryConfigRequest` - the Query/Config request type.
 */
export type CosmosAppQueryConfigRequest = {};
/**
 * Destructures the fields of a {@link CosmosAppQueryConfigResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: config - the current app config.
 */
export declare const destructCosmosAppQueryConfigResponse: (g_struct: CosmosAppQueryConfigResponse) => [config?: CosmosAppConfig];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_APP_QUERY_CONFIG_RESPONSE = "/cosmos.app.v1alpha1.QueryConfigResponse";
/**
 * JSON serialization of `cosmos.app.v1alpha1.QueryConfigResponse` - QueryConfigRequest is the Query/Config response type.
 */
export type CosmosAppQueryConfigResponse = {
    config?: CosmosAppConfig | undefined;
};
