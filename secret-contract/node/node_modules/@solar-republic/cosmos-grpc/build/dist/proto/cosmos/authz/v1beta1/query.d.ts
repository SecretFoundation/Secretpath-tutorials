/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosAuthzGrant, DecodedCosmosAuthzGrant, CosmosAuthzGrantAuthorization, DecodedCosmosAuthzGrantAuthorization } from './authz.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
export type EncodedCosmosAuthzQueryGrantsRequest = Encoded<'/cosmos.authz.v1beta1.QueryGrantsRequest'>;
export type EncodedCosmosAuthzQueryGrantsResponse = Encoded<'/cosmos.authz.v1beta1.QueryGrantsResponse'>;
export type EncodedCosmosAuthzQueryGranterGrantsRequest = Encoded<'/cosmos.authz.v1beta1.QueryGranterGrantsRequest'>;
export type EncodedCosmosAuthzQueryGranterGrantsResponse = Encoded<'/cosmos.authz.v1beta1.QueryGranterGrantsResponse'>;
export type EncodedCosmosAuthzQueryGranteeGrantsRequest = Encoded<'/cosmos.authz.v1beta1.QueryGranteeGrantsRequest'>;
export type EncodedCosmosAuthzQueryGranteeGrantsResponse = Encoded<'/cosmos.authz.v1beta1.QueryGranteeGrantsResponse'>;
/**
 * Returns list of `Authorization`, granted to the grantee by the granter.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param sa_grantee -
 * @param s_msg_type_url - Optional, msg_type_url, when set, will query only grants matching given msg type.
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - authorizations is a list of grants granted for grantee by granter.
 *   - 1: pagination - authorizations is a list of grants granted for grantee by granter.
 */
export declare const queryCosmosAuthzGrants: (z_req: string | ({
    origin: string;
} & RequestInit), sa_granter?: Opt<`${string}1${string}`>, sa_grantee?: Opt<`${string}1${string}`>, s_msg_type_url?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthzQueryGrantsResponse>>;
/**
 * Returns list of `GrantAuthorization`, granted by granter. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted by the granter.
 *   - 1: pagination - a list of grants granted by the granter.
 */
export declare const queryCosmosAuthzGranterGrants: (z_req: string | ({
    origin: string;
} & RequestInit), sa_granter?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthzQueryGranterGrantsResponse>>;
/**
 * Returns a list of `GrantAuthorization` by grantee. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_grantee -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted to the grantee.
 *   - 1: pagination - a list of grants granted to the grantee.
 */
export declare const queryCosmosAuthzGranteeGrants: (z_req: string | ({
    origin: string;
} & RequestInit), sa_grantee?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosAuthzQueryGranteeGrantsResponse>>;
/**
 * Encodes a `QueryGrantsRequest` protobuf message: the request type for the Query/Grants RPC method.
 * @param sa_granter - `granter`:
 * @param sa_grantee - `grantee`:
 * @param s_msg_type_url - `msg_type_url`: Optional, msg_type_url, when set, will query only grants matching given msg type.
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGrantsRequest: (sa_granter?: Opt<WeakAccountAddr>, sa_grantee?: Opt<WeakAccountAddr>, s_msg_type_url?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosAuthzQueryGrantsRequest;
/**
 * Encodes a `QueryGrantsResponse` protobuf message: the response type for the Query/Authorizations RPC method.
 * @param a_grants - `grants`: authorizations is a list of grants granted for grantee by granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGrantsResponse: (a_grants?: Opt<Encoded<'/cosmos.authz.v1beta1.Grant'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosAuthzQueryGrantsResponse;
/**
 * Encodes a `QueryGranterGrantsRequest` protobuf message: the request type for the Query/GranterGrants RPC method.
 * @param sa_granter - `granter`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGranterGrantsRequest: (sa_granter?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosAuthzQueryGranterGrantsRequest;
/**
 * Encodes a `QueryGranterGrantsResponse` protobuf message: the response type for the Query/GranterGrants RPC method.
 * @param a_grants - `grants`: a list of grants granted by the granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGranterGrantsResponse: (a_grants?: Opt<Encoded<'/cosmos.authz.v1beta1.GrantAuthorization'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosAuthzQueryGranterGrantsResponse;
/**
 * Encodes a `QueryGranteeGrantsRequest` protobuf message: the request type for the Query/GranteeGrants RPC method.
 * @param sa_grantee - `grantee`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGranteeGrantsRequest: (sa_grantee?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosAuthzQueryGranteeGrantsRequest;
/**
 * Encodes a `QueryGranteeGrantsResponse` protobuf message: the response type for the Query/GranteeGrants RPC method.
 * @param a_grants - `grants`: a list of grants granted to the grantee.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosAuthzQueryGranteeGrantsResponse: (a_grants?: Opt<Encoded<'/cosmos.authz.v1beta1.GrantAuthorization'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosAuthzQueryGranteeGrantsResponse;
/**
 * A decoded protobuf QueryGrantsRequest message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: msg_type_url - Optional, msg_type_url, when set, will query only grants matching given msg type.
 *   - 3: pagination - defines an pagination for the request.
 */
export type DecodedCosmosAuthzQueryGrantsRequest = [
    sa_granter?: CwAccountAddr,
    sa_grantee?: CwAccountAddr,
    s_msg_type_url?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGrantsRequest}
 */
export declare const decodeCosmosAuthzQueryGrantsRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGrantsRequest;
/**
 * A decoded protobuf QueryGrants message
 *
 * Tuple where:
 *   - 0: grants - authorizations is a list of grants granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export type DecodedCosmosAuthzQueryGrantsResponse = [
    a_grants?: DecodedCosmosAuthzGrant[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGrantsResponse}
 */
export declare const decodeCosmosAuthzQueryGrantsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGrantsResponse;
/**
 * A decoded protobuf QueryGranterGrantsRequest message
 *
 * Tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export type DecodedCosmosAuthzQueryGranterGrantsRequest = [
    sa_granter?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryGranterGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranterGrantsRequest}
 */
export declare const decodeCosmosAuthzQueryGranterGrantsRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGranterGrantsRequest;
/**
 * A decoded protobuf QueryGranterGrants message
 *
 * Tuple where:
 *   - 0: grants - a list of grants granted by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export type DecodedCosmosAuthzQueryGranterGrantsResponse = [
    a_grants?: DecodedCosmosAuthzGrantAuthorization[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryGranterGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranterGrantsResponse}
 */
export declare const decodeCosmosAuthzQueryGranterGrantsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGranterGrantsResponse;
/**
 * A decoded protobuf QueryGranteeGrantsRequest message
 *
 * Tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export type DecodedCosmosAuthzQueryGranteeGrantsRequest = [
    sa_grantee?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryGranteeGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranteeGrantsRequest}
 */
export declare const decodeCosmosAuthzQueryGranteeGrantsRequest: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGranteeGrantsRequest;
/**
 * A decoded protobuf QueryGranteeGrants message
 *
 * Tuple where:
 *   - 0: grants - a list of grants granted to the grantee.
 *   - 1: pagination - defines an pagination for the response.
 */
export type DecodedCosmosAuthzQueryGranteeGrantsResponse = [
    a_grants?: DecodedCosmosAuthzGrantAuthorization[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryGranteeGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranteeGrantsResponse}
 */
export declare const decodeCosmosAuthzQueryGranteeGrantsResponse: (atu8_payload: Uint8Array) => DecodedCosmosAuthzQueryGranteeGrantsResponse;
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: msg_type_url - Optional, msg_type_url, when set, will query only grants matching given msg type.
 *   - 3: pagination - defines an pagination for the request.
 */
export declare const destructCosmosAuthzQueryGrantsRequest: (g_struct: CosmosAuthzQueryGrantsRequest) => [granter?: CwAccountAddr, grantee?: CwAccountAddr, msg_type_url?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTS_REQUEST = "/cosmos.authz.v1beta1.QueryGrantsRequest";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGrantsRequest` - the request type for the Query/Grants RPC method.
 */
export type CosmosAuthzQueryGrantsRequest = {
    granter?: CwAccountAddr | undefined;
    grantee?: CwAccountAddr | undefined;
    msg_type_url?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - authorizations is a list of grants granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export declare const destructCosmosAuthzQueryGrantsResponse: (g_struct: CosmosAuthzQueryGrantsResponse) => [grants?: CosmosAuthzGrant[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTS_RESPONSE = "/cosmos.authz.v1beta1.QueryGrantsResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGrantsResponse` - the response type for the Query/Authorizations RPC method.
 */
export type CosmosAuthzQueryGrantsResponse = {
    grants?: CosmosAuthzGrant[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranterGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export declare const destructCosmosAuthzQueryGranterGrantsRequest: (g_struct: CosmosAuthzQueryGranterGrantsRequest) => [granter?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTER_GRANTS_REQUEST = "/cosmos.authz.v1beta1.QueryGranterGrantsRequest";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGranterGrantsRequest` - the request type for the Query/GranterGrants RPC method.
 */
export type CosmosAuthzQueryGranterGrantsRequest = {
    granter?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranterGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export declare const destructCosmosAuthzQueryGranterGrantsResponse: (g_struct: CosmosAuthzQueryGranterGrantsResponse) => [grants?: CosmosAuthzGrantAuthorization[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTER_GRANTS_RESPONSE = "/cosmos.authz.v1beta1.QueryGranterGrantsResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGranterGrantsResponse` - the response type for the Query/GranterGrants RPC method.
 */
export type CosmosAuthzQueryGranterGrantsResponse = {
    grants?: CosmosAuthzGrantAuthorization[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranteeGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export declare const destructCosmosAuthzQueryGranteeGrantsRequest: (g_struct: CosmosAuthzQueryGranteeGrantsRequest) => [grantee?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTEE_GRANTS_REQUEST = "/cosmos.authz.v1beta1.QueryGranteeGrantsRequest";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGranteeGrantsRequest` - the request type for the Query/GranteeGrants RPC method.
 */
export type CosmosAuthzQueryGranteeGrantsRequest = {
    grantee?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranteeGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted to the grantee.
 *   - 1: pagination - defines an pagination for the response.
 */
export declare const destructCosmosAuthzQueryGranteeGrantsResponse: (g_struct: CosmosAuthzQueryGranteeGrantsResponse) => [grants?: CosmosAuthzGrantAuthorization[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTEE_GRANTS_RESPONSE = "/cosmos.authz.v1beta1.QueryGranteeGrantsResponse";
/**
 * JSON serialization of `cosmos.authz.v1beta1.QueryGranteeGrantsResponse` - the response type for the Query/GranteeGrants RPC method.
 */
export type CosmosAuthzQueryGranteeGrantsResponse = {
    grants?: CosmosAuthzGrantAuthorization[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
