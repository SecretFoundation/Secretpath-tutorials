import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosAuthzGrant, decodeCosmosAuthzGrantAuthorization } from './authz.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
const SR_LCD_COSMOS_AUTHZ_QUERY = '/cosmos/authz/v1beta1/grants';
/**
 * Returns list of `Authorization`, granted to the grantee by the granter.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param sa_grantee -
 * @param s_msg_type_url - Optional, msg_type_url, when set, will query only grants matching given msg type.
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - authorizations is a list of grants granted for grantee by granter.
 *   - 1: pagination - authorizations is a list of grants granted for grantee by granter.
 */
export const queryCosmosAuthzGrants = restful_grpc((sa_granter, sa_grantee, s_msg_type_url, g_pagination) => [SR_LCD_COSMOS_AUTHZ_QUERY, {
        granter: sa_granter,
        grantee: sa_grantee,
        msg_type_url: s_msg_type_url,
        pagination: g_pagination,
    }]);
/**
 * Returns list of `GrantAuthorization`, granted by granter. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted by the granter.
 *   - 1: pagination - a list of grants granted by the granter.
 */
export const queryCosmosAuthzGranterGrants = restful_grpc((sa_granter, g_pagination) => [SR_LCD_COSMOS_AUTHZ_QUERY + '/granter/' + sa_granter, {
        pagination: g_pagination,
    }]);
/**
 * Returns a list of `GrantAuthorization` by grantee. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_grantee -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted to the grantee.
 *   - 1: pagination - a list of grants granted to the grantee.
 */
export const queryCosmosAuthzGranteeGrants = restful_grpc((sa_grantee, g_pagination) => [SR_LCD_COSMOS_AUTHZ_QUERY + '/grantee/' + sa_grantee, {
        pagination: g_pagination,
    }]);
/**
 * Encodes a `QueryGrantsRequest` protobuf message: the request type for the Query/Grants RPC method.
 * @param sa_granter - `granter`:
 * @param sa_grantee - `grantee`:
 * @param s_msg_type_url - `msg_type_url`: Optional, msg_type_url, when set, will query only grants matching given msg type.
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGrantsRequest = (sa_granter, sa_grantee, s_msg_type_url, atu8_pagination) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .s(sa_grantee) // string grantee = 2
    .s(s_msg_type_url) // string msg_type_url = 3
    .b(atu8_pagination) // PageRequest pagination = 4
    .o;
/**
 * Encodes a `QueryGrantsResponse` protobuf message: the response type for the Query/Authorizations RPC method.
 * @param a_grants - `grants`: authorizations is a list of grants granted for grantee by granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGrantsResponse = (a_grants, atu8_pagination) => Protobuf() // ...
    .B(a_grants) // Grant[] grants = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryGranterGrantsRequest` protobuf message: the request type for the Query/GranterGrants RPC method.
 * @param sa_granter - `granter`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGranterGrantsRequest = (sa_granter, atu8_pagination) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryGranterGrantsResponse` protobuf message: the response type for the Query/GranterGrants RPC method.
 * @param a_grants - `grants`: a list of grants granted by the granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGranterGrantsResponse = (a_grants, atu8_pagination) => Protobuf() // ...
    .B(a_grants) // GrantAuthorization[] grants = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryGranteeGrantsRequest` protobuf message: the request type for the Query/GranteeGrants RPC method.
 * @param sa_grantee - `grantee`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGranteeGrantsRequest = (sa_grantee, atu8_pagination) => Protobuf() // ...
    .s(sa_grantee) // string grantee = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryGranteeGrantsResponse` protobuf message: the response type for the Query/GranteeGrants RPC method.
 * @param a_grants - `grants`: a list of grants granted to the grantee.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosAuthzQueryGranteeGrantsResponse = (a_grants, atu8_pagination) => Protobuf() // ...
    .B(a_grants) // GrantAuthorization[] grants = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Decodes a protobuf QueryGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGrantsRequest}
 */
export const decodeCosmosAuthzQueryGrantsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5, 1], [0, 0, 0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGrantsResponse}
 */
export const decodeCosmosAuthzQueryGrantsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosAuthzGrant, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryGranterGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranterGrantsRequest}
 */
export const decodeCosmosAuthzQueryGranterGrantsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryGranterGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranterGrantsResponse}
 */
export const decodeCosmosAuthzQueryGranterGrantsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosAuthzGrantAuthorization, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryGranteeGrantsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranteeGrantsRequest}
 */
export const decodeCosmosAuthzQueryGranteeGrantsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryGranteeGrants message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosAuthzQueryGranteeGrantsResponse}
 */
export const decodeCosmosAuthzQueryGranteeGrantsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosAuthzGrantAuthorization, decodeCosmosBaseQueryPageResponse]);
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: grantee -
 *   - 2: msg_type_url - Optional, msg_type_url, when set, will query only grants matching given msg type.
 *   - 3: pagination - defines an pagination for the request.
 */
export const destructCosmosAuthzQueryGrantsRequest = (g_struct) => [g_struct.granter, g_struct.grantee, g_struct.msg_type_url, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTS_REQUEST = '/cosmos.authz.v1beta1.QueryGrantsRequest';
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - authorizations is a list of grants granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export const destructCosmosAuthzQueryGrantsResponse = (g_struct) => [g_struct.grants, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTS_RESPONSE = '/cosmos.authz.v1beta1.QueryGrantsResponse';
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranterGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export const destructCosmosAuthzQueryGranterGrantsRequest = (g_struct) => [g_struct.granter, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTER_GRANTS_REQUEST = '/cosmos.authz.v1beta1.QueryGranterGrantsRequest';
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranterGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export const destructCosmosAuthzQueryGranterGrantsResponse = (g_struct) => [g_struct.grants, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTER_GRANTS_RESPONSE = '/cosmos.authz.v1beta1.QueryGranterGrantsResponse';
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranteeGrantsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export const destructCosmosAuthzQueryGranteeGrantsRequest = (g_struct) => [g_struct.grantee, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTEE_GRANTS_REQUEST = '/cosmos.authz.v1beta1.QueryGranteeGrantsRequest';
/**
 * Destructures the fields of a {@link CosmosAuthzQueryGranteeGrantsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grants - a list of grants granted to the grantee.
 *   - 1: pagination - defines an pagination for the response.
 */
export const destructCosmosAuthzQueryGranteeGrantsResponse = (g_struct) => [g_struct.grants, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_AUTHZ_QUERY_GRANTEE_GRANTS_RESPONSE = '/cosmos.authz.v1beta1.QueryGranteeGrantsResponse';
//# sourceMappingURL=query.js.map