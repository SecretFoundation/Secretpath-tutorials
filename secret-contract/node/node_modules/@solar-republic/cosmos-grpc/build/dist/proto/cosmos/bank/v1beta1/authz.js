import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, any, coins } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `SendAuthorization` protobuf message wrapped in the `Any` container: allows the grantee to spend up to spend_limit coins from the granter's account. Since: cosmos-sdk 0.43
 * @param a_spend_limits - `spend_limit`:
 * @param a_allow_lists - `allow_list`: specifies an optional list of addresses to whom the grantee can send tokens on behalf of the granter. If omitted, any recipient is allowed. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anySendAuthorization = (a_spend_limits, a_allow_lists) => any('/cosmos.bank.v1beta1.SendAuthorization', Protobuf() // ...
    .B(coins(a_spend_limits)) // Coin[] spend_limit = 1
    .S(a_allow_lists) // string[] allow_list = 2
    .o);
/**
 * Encodes a `SendAuthorization` protobuf message: allows the grantee to spend up to spend_limit coins from the granter's account. Since: cosmos-sdk 0.43
 * @param a_spend_limits - `spend_limit`:
 * @param a_allow_lists - `allow_list`: specifies an optional list of addresses to whom the grantee can send tokens on behalf of the granter. If omitted, any recipient is allowed. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosBankSendAuthorization = (a_spend_limits, a_allow_lists) => Protobuf() // ...
    .B(coins(a_spend_limits)) // Coin[] spend_limit = 1
    .S(a_allow_lists) // string[] allow_list = 2
    .o;
/**
 * Decodes a protobuf SendAuthorization message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankSendAuthorization}
 */
export const decodeCosmosBankSendAuthorization = (atu8_payload) => decode_protobuf(atu8_payload, [0, 4], [decode_coin]);
/**
 * Destructures the fields of a {@link CosmosBankSendAuthorization} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spend_limit -
 *   - 1: allow_list - specifies an optional list of addresses to whom the grantee can send tokens on behalf of the granter. If omitted, any recipient is allowed. Since: cosmos-sdk 0.47
 */
export const destructCosmosBankSendAuthorization = (g_struct) => [g_struct.spend_limit, g_struct.allow_list];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_BANK_SEND_AUTHORIZATION = '/cosmos.bank.v1beta1.SendAuthorization';
//# sourceMappingURL=authz.js.map