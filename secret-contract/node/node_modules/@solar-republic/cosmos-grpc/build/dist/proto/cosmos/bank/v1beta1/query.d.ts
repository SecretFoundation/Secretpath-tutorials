/// <reference types="node" />
import type { WeakAccountAddr, SlimCoin, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBankParams, DecodedCosmosBankParams, CosmosBankMetadata, DecodedCosmosBankMetadata, CosmosBankSendEnabled, DecodedCosmosBankSendEnabled } from './bank.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosBaseCoin } from '../../base/v1beta1/coin.js';
export type EncodedCosmosBankQueryBalanceRequest = Encoded<'/cosmos.bank.v1beta1.QueryBalanceRequest'>;
export type EncodedCosmosBankQueryBalanceResponse = Encoded<'/cosmos.bank.v1beta1.QueryBalanceResponse'>;
export type EncodedCosmosBankQueryAllBalancesRequest = Encoded<'/cosmos.bank.v1beta1.QueryAllBalancesRequest'>;
export type EncodedCosmosBankQueryAllBalancesResponse = Encoded<'/cosmos.bank.v1beta1.QueryAllBalancesResponse'>;
export type EncodedCosmosBankQuerySpendableBalancesRequest = Encoded<'/cosmos.bank.v1beta1.QuerySpendableBalancesRequest'>;
export type EncodedCosmosBankQuerySpendableBalancesResponse = Encoded<'/cosmos.bank.v1beta1.QuerySpendableBalancesResponse'>;
export type EncodedCosmosBankQuerySpendableBalanceByDenomRequest = Encoded<'/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest'>;
export type EncodedCosmosBankQuerySpendableBalanceByDenomResponse = Encoded<'/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse'>;
export type EncodedCosmosBankQueryTotalSupplyRequest = Encoded<'/cosmos.bank.v1beta1.QueryTotalSupplyRequest'>;
export type EncodedCosmosBankQueryTotalSupplyResponse = Encoded<'/cosmos.bank.v1beta1.QueryTotalSupplyResponse'>;
export type EncodedCosmosBankQuerySupplyOfRequest = Encoded<'/cosmos.bank.v1beta1.QuerySupplyOfRequest'>;
export type EncodedCosmosBankQuerySupplyOfResponse = Encoded<'/cosmos.bank.v1beta1.QuerySupplyOfResponse'>;
export type EncodedCosmosBankQueryParamsRequest = Encoded<'/cosmos.bank.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosBankQueryParamsResponse = Encoded<'/cosmos.bank.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosBankQueryDenomsMetadataRequest = Encoded<'/cosmos.bank.v1beta1.QueryDenomsMetadataRequest'>;
export type EncodedCosmosBankQueryDenomsMetadataResponse = Encoded<'/cosmos.bank.v1beta1.QueryDenomsMetadataResponse'>;
export type EncodedCosmosBankQueryDenomMetadataRequest = Encoded<'/cosmos.bank.v1beta1.QueryDenomMetadataRequest'>;
export type EncodedCosmosBankQueryDenomMetadataResponse = Encoded<'/cosmos.bank.v1beta1.QueryDenomMetadataResponse'>;
export type EncodedCosmosBankQueryDenomMetadataByQueryStringRequest = Encoded<'/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest'>;
export type EncodedCosmosBankQueryDenomMetadataByQueryStringResponse = Encoded<'/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse'>;
export type EncodedCosmosBankQueryDenomOwnersRequest = Encoded<'/cosmos.bank.v1beta1.QueryDenomOwnersRequest'>;
export type EncodedCosmosBankDenomOwner = Encoded<'/cosmos.bank.v1beta1.DenomOwner'>;
export type EncodedCosmosBankQueryDenomOwnersResponse = Encoded<'/cosmos.bank.v1beta1.QueryDenomOwnersResponse'>;
export type EncodedCosmosBankQuerySendEnabledRequest = Encoded<'/cosmos.bank.v1beta1.QuerySendEnabledRequest'>;
export type EncodedCosmosBankQuerySendEnabledResponse = Encoded<'/cosmos.bank.v1beta1.QuerySendEnabledResponse'>;
/**
 * Queries the balance of a single coin for a single account.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address to query balances for.
 * @param s_denom - the coin denom to query balances for.
 * @returns a tuple where:
 *   - 0: balance - the balance of the coin.
 */
export declare const queryCosmosBankBalance: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryBalanceResponse>>;
/**
 * Queries the balance of all coins for a single account. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address to query balances for.
 * @param g_pagination - defines an optional pagination for the request.
 * @param b_resolve_denom - the flag to resolve the denom into a human-readable form from the metadata. Since: cosmos-sdk 0.50
 * @returns a tuple where:
 *   - 0: balances - the balances of all the coins.
 *   - 1: pagination - the balances of all the coins.
 */
export declare const queryCosmosBankAllBalances: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>, b_resolve_denom?: Opt<boolean | 0 | 1>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryAllBalancesResponse>>;
/**
 * Queries the spendable balance of all coins for a single account. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address to query spendable balances for.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: balances - the spendable balances of all the coins.
 *   - 1: pagination - the spendable balances of all the coins.
 */
export declare const queryCosmosBankSpendableBalances: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQuerySpendableBalancesResponse>>;
/**
 * Queries the spendable balance of a single denom for a single account. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address - the address to query balances for.
 * @param s_denom - the coin denom to query balances for.
 * @returns a tuple where:
 *   - 0: balance - the balance of the coin.
 */
export declare const queryCosmosBankSpendableBalanceByDenom: (z_req: string | ({
    origin: string;
} & RequestInit), sa_address?: Opt<`${string}1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQuerySpendableBalanceByDenomResponse>>;
/**
 * Queries the total supply of all coins. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request. Since: cosmos-sdk 0.43
 * @returns a tuple where:
 *   - 0: supply - the supply of the coins
 *   - 1: pagination - the supply of the coins
 */
export declare const queryCosmosBankTotalSupply: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryTotalSupplyResponse>>;
/**
 * Queries the supply of a single coin. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom - the coin denom to query balances for.
 * @returns a tuple where:
 *   - 0: amount - the supply of the coin.
 */
export declare const queryCosmosBankSupplyOf: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQuerySupplyOfResponse>>;
/**
 * Queries the parameters of x/bank module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - provides the parameters of the bank module.
 */
export declare const queryCosmosBankParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryParamsResponse>>;
/**
 * DenomsMetadata queries the client metadata of a given coin denomination.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom - the coin denom to query the metadata for.
 * @returns a tuple where:
 *   - 0: metadata - describes and provides all the client information for the requested token.
 */
export declare const queryCosmosBankDenomMetadata: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryDenomMetadataResponse>>;
/**
 * DenomsMetadata queries the client metadata of a given coin denomination.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom - the coin denom to query the metadata for.
 * @returns a tuple where:
 *   - 0: metadata - describes and provides all the client information for the requested token.
 */
export declare const queryCosmosBankDenomMetadataByQueryString: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryDenomMetadataByQueryStringResponse>>;
/**
 * Queries the client metadata for all registered coin denominations.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: metadatas - metadata provides the client information for all the registered tokens.
 *   - 1: pagination - metadata provides the client information for all the registered tokens.
 */
export declare const queryCosmosBankDenomsMetadata: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryDenomsMetadataResponse>>;
/**
 * Queries for all account addresses that own a particular token denomination. When called from another module, this query might consume a high amount of gas if the pagination field is incorrectly set. Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom - defines the coin denomination to query all account holders for.
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: denom_owners - the 'denom_owners' response property
 *   - 1: pagination - the 'denom_owners' response property
 */
export declare const queryCosmosBankDenomOwners: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQueryDenomOwnersResponse>>;
/**
 * Queries for SendEnabled entries. This query only returns denominations that have specific SendEnabled settings. Any denomination that does not have a specific setting will use the default params.default_send_enabled, and will not be returned by this query. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param a_denoms - the specific denoms you want look up. Leave empty to get all entries.
 * @param g_pagination - defines an optional pagination for the request. This field is only read if the denoms field is empty.
 * @returns a tuple where:
 *   - 0: send_enabled - the 'send_enabled' response property
 *   - 1: pagination - the 'send_enabled' response property
 */
export declare const queryCosmosBankSendEnabled: (z_req: string | ({
    origin: string;
} & RequestInit), a_denoms?: Opt<string[]>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosBankQuerySendEnabledResponse>>;
/**
 * Encodes a `QueryBalanceRequest` protobuf message: the request type for the Query/Balance RPC method.
 * @param sa_address - `address`: the address to query balances for.
 * @param s_denom - `denom`: the coin denom to query balances for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryBalanceRequest: (sa_address?: Opt<WeakAccountAddr>, s_denom?: Opt<string>) => EncodedCosmosBankQueryBalanceRequest;
/**
 * Encodes a `QueryBalanceResponse` protobuf message: the response type for the Query/Balance RPC method.
 * @param a_balance - `balance`: the balance of the coin.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryBalanceResponse: (a_balance?: Opt<SlimCoin>) => EncodedCosmosBankQueryBalanceResponse;
/**
 * Encodes a `QueryAllBalancesRequest` protobuf message: QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 * @param sa_address - `address`: the address to query balances for.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @param b_resolve_denom - `resolve_denom`: the flag to resolve the denom into a human-readable form from the metadata. Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryAllBalancesRequest: (sa_address?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>, b_resolve_denom?: Opt<boolean | 0 | 1>) => EncodedCosmosBankQueryAllBalancesRequest;
/**
 * Encodes a `QueryAllBalancesResponse` protobuf message: the response type for the Query/AllBalances RPC method.
 * @param a_balances - `balances`: the balances of all the coins.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryAllBalancesResponse: (a_balances?: Opt<SlimCoin[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQueryAllBalancesResponse;
/**
 * Encodes a `QuerySpendableBalancesRequest` protobuf message: defines the gRPC request structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 * @param sa_address - `address`: the address to query spendable balances for.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySpendableBalancesRequest: (sa_address?: Opt<WeakAccountAddr>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosBankQuerySpendableBalancesRequest;
/**
 * Encodes a `QuerySpendableBalancesResponse` protobuf message: defines the gRPC response structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 * @param a_balances - `balances`: the spendable balances of all the coins.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySpendableBalancesResponse: (a_balances?: Opt<SlimCoin[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQuerySpendableBalancesResponse;
/**
 * Encodes a `QuerySpendableBalanceByDenomRequest` protobuf message: defines the gRPC request structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 * @param sa_address - `address`: the address to query balances for.
 * @param s_denom - `denom`: the coin denom to query balances for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySpendableBalanceByDenomRequest: (sa_address?: Opt<WeakAccountAddr>, s_denom?: Opt<string>) => EncodedCosmosBankQuerySpendableBalanceByDenomRequest;
/**
 * Encodes a `QuerySpendableBalanceByDenomResponse` protobuf message: defines the gRPC response structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 * @param a_balance - `balance`: the balance of the coin.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySpendableBalanceByDenomResponse: (a_balance?: Opt<SlimCoin>) => EncodedCosmosBankQuerySpendableBalanceByDenomResponse;
/**
 * Encodes a `QueryTotalSupplyRequest` protobuf message: the request type for the Query/TotalSupply RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request. Since: cosmos-sdk 0.43
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryTotalSupplyRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosBankQueryTotalSupplyRequest;
/**
 * Encodes a `QueryTotalSupplyResponse` protobuf message: the response type for the Query/TotalSupply RPC method
 * @param a_supplys - `supply`: the supply of the coins
 * @param g_pagination - `pagination`: defines the pagination in the response. Since: cosmos-sdk 0.43
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryTotalSupplyResponse: (a_supplys?: Opt<SlimCoin[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQueryTotalSupplyResponse;
/**
 * Encodes a `QuerySupplyOfRequest` protobuf message: the request type for the Query/SupplyOf RPC method.
 * @param s_denom - `denom`: the coin denom to query balances for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySupplyOfRequest: (s_denom?: Opt<string>) => EncodedCosmosBankQuerySupplyOfRequest;
/**
 * Encodes a `QuerySupplyOfResponse` protobuf message: the response type for the Query/SupplyOf RPC method.
 * @param a_amount - `amount`: the supply of the coin.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySupplyOfResponse: (a_amount?: Opt<SlimCoin>) => EncodedCosmosBankQuerySupplyOfResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message: defines the request type for querying x/bank parameters.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryParamsRequest: () => EncodedCosmosBankQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: defines the response type for querying x/bank parameters.
 * @param g_params - `params`: provides the parameters of the bank module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryParamsResponse: (atu8_params?: Opt<Encoded<'/cosmos.bank.v1beta1.Params'>>) => EncodedCosmosBankQueryParamsResponse;
/**
 * Encodes a `QueryDenomsMetadataRequest` protobuf message: the request type for the Query/DenomsMetadata RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomsMetadataRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosBankQueryDenomsMetadataRequest;
/**
 * Encodes a `QueryDenomsMetadataResponse` protobuf message: the response type for the Query/DenomsMetadata RPC method.
 * @param a_metadatas - `metadatas`: metadata provides the client information for all the registered tokens.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomsMetadataResponse: (a_metadatas?: Opt<Encoded<'/cosmos.bank.v1beta1.Metadata'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQueryDenomsMetadataResponse;
/**
 * Encodes a `QueryDenomMetadataRequest` protobuf message: the request type for the Query/DenomMetadata RPC method.
 * @param s_denom - `denom`: the coin denom to query the metadata for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomMetadataRequest: (s_denom?: Opt<string>) => EncodedCosmosBankQueryDenomMetadataRequest;
/**
 * Encodes a `QueryDenomMetadataResponse` protobuf message: the response type for the Query/DenomMetadata RPC method.
 * @param g_metadata - `metadata`: describes and provides all the client information for the requested token.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomMetadataResponse: (atu8_metadata?: Opt<Encoded<'/cosmos.bank.v1beta1.Metadata'>>) => EncodedCosmosBankQueryDenomMetadataResponse;
/**
 * Encodes a `QueryDenomMetadataByQueryStringRequest` protobuf message: the request type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataRequest but receives denom as query string.
 * @param s_denom - `denom`: the coin denom to query the metadata for.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomMetadataByQueryStringRequest: (s_denom?: Opt<string>) => EncodedCosmosBankQueryDenomMetadataByQueryStringRequest;
/**
 * Encodes a `QueryDenomMetadataByQueryStringResponse` protobuf message: the response type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
 * @param g_metadata - `metadata`: describes and provides all the client information for the requested token.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomMetadataByQueryStringResponse: (atu8_metadata?: Opt<Encoded<'/cosmos.bank.v1beta1.Metadata'>>) => EncodedCosmosBankQueryDenomMetadataByQueryStringResponse;
/**
 * Encodes a `QueryDenomOwnersRequest` protobuf message: defines the request type for the DenomOwners RPC query, which queries for a paginated set of all account holders of a particular denomination.
 * @param s_denom - `denom`: defines the coin denomination to query all account holders for.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomOwnersRequest: (s_denom?: Opt<string>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosBankQueryDenomOwnersRequest;
/**
 * Encodes a `DenomOwner` protobuf message: defines structure representing an account that owns or holds a particular denominated token. It contains the account address and account balance of the denominated token. Since: cosmos-sdk 0.46
 * @param sa_address - `address`: defines the address that owns a particular denomination.
 * @param a_balance - `balance`: the balance of the denominated coin for an account.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankDenomOwner: (sa_address?: Opt<WeakAccountAddr>, a_balance?: Opt<SlimCoin>) => EncodedCosmosBankDenomOwner;
/**
 * Encodes a `QueryDenomOwnersResponse` protobuf message: defines the RPC response of a DenomOwners RPC query. Since: cosmos-sdk 0.46
 * @param a_denom_owners - `denom_owners`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQueryDenomOwnersResponse: (a_denom_owners?: Opt<Encoded<'/cosmos.bank.v1beta1.DenomOwner'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQueryDenomOwnersResponse;
/**
 * Encodes a `QuerySendEnabledRequest` protobuf message: defines the RPC request for looking up SendEnabled entries. Since: cosmos-sdk 0.47
 * @param a_denoms - `denoms`: the specific denoms you want look up. Leave empty to get all entries.
 * @param g_pagination - `pagination`: defines an optional pagination for the request. This field is only read if the denoms field is empty.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySendEnabledRequest: (a_denoms?: Opt<string[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosBankQuerySendEnabledRequest;
/**
 * Encodes a `QuerySendEnabledResponse` protobuf message: defines the RPC response of a SendEnable query. Since: cosmos-sdk 0.47
 * @param a_send_enableds - `send_enabled`:
 * @param g_pagination - `pagination`: defines the pagination in the response. This field is only populated if the denoms field in the request is empty.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBankQuerySendEnabledResponse: (a_send_enableds?: Opt<Encoded<'/cosmos.bank.v1beta1.SendEnabled'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosBankQuerySendEnabledResponse;
/**
 * A decoded protobuf QueryBalanceRequest message
 *
 * Tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: denom - the coin denom to query balances for.
 */
export type DecodedCosmosBankQueryBalanceRequest = [
    sa_address?: CwAccountAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf QueryBalanceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryBalanceRequest}
 */
export declare const decodeCosmosBankQueryBalanceRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryBalanceRequest;
/**
 * A decoded protobuf QueryBalance message
 *
 * Alias for: balance - the balance of the coin.
 */
export type DecodedCosmosBankQueryBalanceResponse = [
    a_balance?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf QueryBalance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryBalanceResponse}
 */
export declare const decodeCosmosBankQueryBalanceResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryBalanceResponse;
/**
 * A decoded protobuf QueryAllBalancesRequest message
 *
 * Tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: pagination - defines an optional pagination for the request.
 *   - 2: resolve_denom - the flag to resolve the denom into a human-readable form from the metadata. Since: cosmos-sdk 0.50
 */
export type DecodedCosmosBankQueryAllBalancesRequest = [
    sa_address?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest,
    b_resolve_denom?: 0 | 1
];
/**
 * Decodes a protobuf QueryAllBalancesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryAllBalancesRequest}
 */
export declare const decodeCosmosBankQueryAllBalancesRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryAllBalancesRequest;
/**
 * A decoded protobuf QueryAllBalances message
 *
 * Tuple where:
 *   - 0: balances - the balances of all the coins.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosBankQueryAllBalancesResponse = [
    a_balances?: [
        string,
        string
    ][],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryAllBalances message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryAllBalancesResponse}
 */
export declare const decodeCosmosBankQueryAllBalancesResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryAllBalancesResponse;
/**
 * A decoded protobuf QuerySpendableBalancesRequest message
 *
 * Tuple where:
 *   - 0: address - the address to query spendable balances for.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosBankQuerySpendableBalancesRequest = [
    sa_address?: CwAccountAddr,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QuerySpendableBalancesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySpendableBalancesRequest}
 */
export declare const decodeCosmosBankQuerySpendableBalancesRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySpendableBalancesRequest;
/**
 * A decoded protobuf QuerySpendableBalances message
 *
 * Tuple where:
 *   - 0: balances - the spendable balances of all the coins.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosBankQuerySpendableBalancesResponse = [
    a_balances?: [
        string,
        string
    ][],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QuerySpendableBalances message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySpendableBalancesResponse}
 */
export declare const decodeCosmosBankQuerySpendableBalancesResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySpendableBalancesResponse;
/**
 * A decoded protobuf QuerySpendableBalanceByDenomRequest message
 *
 * Tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: denom - the coin denom to query balances for.
 */
export type DecodedCosmosBankQuerySpendableBalanceByDenomRequest = [
    sa_address?: CwAccountAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf QuerySpendableBalanceByDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySpendableBalanceByDenomRequest}
 */
export declare const decodeCosmosBankQuerySpendableBalanceByDenomRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySpendableBalanceByDenomRequest;
/**
 * A decoded protobuf QuerySpendableBalanceByDenom message
 *
 * Alias for: balance - the balance of the coin.
 */
export type DecodedCosmosBankQuerySpendableBalanceByDenomResponse = [
    a_balance?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf QuerySpendableBalanceByDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySpendableBalanceByDenomResponse}
 */
export declare const decodeCosmosBankQuerySpendableBalanceByDenomResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySpendableBalanceByDenomResponse;
/**
 * A decoded protobuf QueryTotalSupplyRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request. Since: cosmos-sdk 0.43
 */
export type DecodedCosmosBankQueryTotalSupplyRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryTotalSupplyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryTotalSupplyRequest}
 */
export declare const decodeCosmosBankQueryTotalSupplyRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryTotalSupplyRequest;
/**
 * A decoded protobuf QueryTotalSupply message
 *
 * Tuple where:
 *   - 0: supply - the supply of the coins
 *   - 1: pagination - defines the pagination in the response. Since: cosmos-sdk 0.43
 */
export type DecodedCosmosBankQueryTotalSupplyResponse = [
    a_supply?: [
        string,
        string
    ][],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryTotalSupply message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryTotalSupplyResponse}
 */
export declare const decodeCosmosBankQueryTotalSupplyResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryTotalSupplyResponse;
/**
 * A decoded protobuf QuerySupplyOfRequest message
 *
 * Alias for: denom - the coin denom to query balances for.
 */
export type DecodedCosmosBankQuerySupplyOfRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QuerySupplyOfRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySupplyOfRequest}
 */
export declare const decodeCosmosBankQuerySupplyOfRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySupplyOfRequest;
/**
 * A decoded protobuf QuerySupplyOf message
 *
 * Alias for: amount - the supply of the coin.
 */
export type DecodedCosmosBankQuerySupplyOfResponse = [
    a_amount?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf QuerySupplyOf message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQuerySupplyOfResponse}
 */
export declare const decodeCosmosBankQuerySupplyOfResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQuerySupplyOfResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosBankQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryParamsRequest}
 */
export declare const decodeCosmosBankQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - provides the parameters of the bank module.
 */
export type DecodedCosmosBankQueryParamsResponse = [
    a_params?: DecodedCosmosBankParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryParamsResponse}
 */
export declare const decodeCosmosBankQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryParamsResponse;
/**
 * A decoded protobuf QueryDenomsMetadataRequest message
 *
 * Alias for: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosBankQueryDenomsMetadataRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryDenomsMetadataRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomsMetadataRequest}
 */
export declare const decodeCosmosBankQueryDenomsMetadataRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomsMetadataRequest;
/**
 * A decoded protobuf QueryDenomsMetadata message
 *
 * Tuple where:
 *   - 0: metadatas - metadata provides the client information for all the registered tokens.
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosBankQueryDenomsMetadataResponse = [
    a_metadatas?: DecodedCosmosBankMetadata[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryDenomsMetadata message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomsMetadataResponse}
 */
export declare const decodeCosmosBankQueryDenomsMetadataResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomsMetadataResponse;
/**
 * A decoded protobuf QueryDenomMetadataRequest message
 *
 * Alias for: denom - the coin denom to query the metadata for.
 */
export type DecodedCosmosBankQueryDenomMetadataRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QueryDenomMetadataRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomMetadataRequest}
 */
export declare const decodeCosmosBankQueryDenomMetadataRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomMetadataRequest;
/**
 * A decoded protobuf QueryDenomMetadata message
 *
 * Alias for: metadata - describes and provides all the client information for the requested token.
 */
export type DecodedCosmosBankQueryDenomMetadataResponse = [
    a_metadata?: DecodedCosmosBankMetadata
];
/**
 * Decodes a protobuf QueryDenomMetadata message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomMetadataResponse}
 */
export declare const decodeCosmosBankQueryDenomMetadataResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomMetadataResponse;
/**
 * A decoded protobuf QueryDenomMetadataByQueryStringRequest message
 *
 * Alias for: denom - the coin denom to query the metadata for.
 */
export type DecodedCosmosBankQueryDenomMetadataByQueryStringRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QueryDenomMetadataByQueryStringRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomMetadataByQueryStringRequest}
 */
export declare const decodeCosmosBankQueryDenomMetadataByQueryStringRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomMetadataByQueryStringRequest;
/**
 * A decoded protobuf QueryDenomMetadataByQueryString message
 *
 * Alias for: metadata - describes and provides all the client information for the requested token.
 */
export type DecodedCosmosBankQueryDenomMetadataByQueryStringResponse = [
    a_metadata?: DecodedCosmosBankMetadata
];
/**
 * Decodes a protobuf QueryDenomMetadataByQueryString message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomMetadataByQueryStringResponse}
 */
export declare const decodeCosmosBankQueryDenomMetadataByQueryStringResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomMetadataByQueryStringResponse;
/**
 * A decoded protobuf QueryDenomOwnersRequest message
 *
 * Tuple where:
 *   - 0: denom - defines the coin denomination to query all account holders for.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export type DecodedCosmosBankQueryDenomOwnersRequest = [
    s_denom?: string,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryDenomOwnersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomOwnersRequest}
 */
export declare const decodeCosmosBankQueryDenomOwnersRequest: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomOwnersRequest;
/**
 * A decoded protobuf DenomOwner message
 *
 * Tuple where:
 *   - 0: address - defines the address that owns a particular denomination.
 *   - 1: balance - the balance of the denominated coin for an account.
 */
export type DecodedCosmosBankDenomOwner = [
    sa_address?: CwAccountAddr,
    a_balance?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf DenomOwner message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankDenomOwner}
 */
export declare const decodeCosmosBankDenomOwner: (atu8_payload: Uint8Array) => DecodedCosmosBankDenomOwner;
/**
 * A decoded protobuf QueryDenomOwners message
 *
 * Tuple where:
 *   - 0: denom_owners -
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedCosmosBankQueryDenomOwnersResponse = [
    a_denom_owners?: DecodedCosmosBankDenomOwner[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryDenomOwners message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBankQueryDenomOwnersResponse}
 */
export declare const decodeCosmosBankQueryDenomOwnersResponse: (atu8_payload: Uint8Array) => DecodedCosmosBankQueryDenomOwnersResponse;
/**
 * A decoded protobuf QuerySendEnabledRequest message
 *
 * Alias for: denoms - the specific denoms you want look up. Leave empty to get all entries.
 */
export type DecodedCosmosBankQuerySendEnabledRequest = [
    a_denoms?: string[]
] & {
    98?: DecodedCosmosBaseQueryPageRequest;
};
/**
 * Decodes a protobuf QuerySendEnabledRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmosBankQuerySendEnabledRequest}
 */
export declare const decodeCosmosBankQuerySendEnabledRequest: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedCosmosBankQuerySendEnabledRequest;
/**
 * A decoded protobuf QuerySendEnabled message
 *
 * Alias for: send_enabled -
 */
export type DecodedCosmosBankQuerySendEnabledResponse = [
    a_send_enabled?: DecodedCosmosBankSendEnabled[]
] & {
    98?: DecodedCosmosBaseQueryPageResponse;
};
/**
 * Decodes a protobuf QuerySendEnabled message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmosBankQuerySendEnabledResponse}
 */
export declare const decodeCosmosBankQuerySendEnabledResponse: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedCosmosBankQuerySendEnabledResponse;
/**
 * Destructures the fields of a {@link CosmosBankQueryBalanceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: denom - the coin denom to query balances for.
 */
export declare const destructCosmosBankQueryBalanceRequest: (g_struct: CosmosBankQueryBalanceRequest) => [address?: CwAccountAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_BALANCE_REQUEST = "/cosmos.bank.v1beta1.QueryBalanceRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryBalanceRequest` - the request type for the Query/Balance RPC method.
 */
export type CosmosBankQueryBalanceRequest = {
    address?: CwAccountAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryBalanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: balance - the balance of the coin.
 */
export declare const destructCosmosBankQueryBalanceResponse: (g_struct: CosmosBankQueryBalanceResponse) => [balance?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_BALANCE_RESPONSE = "/cosmos.bank.v1beta1.QueryBalanceResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryBalanceResponse` - the response type for the Query/Balance RPC method.
 */
export type CosmosBankQueryBalanceResponse = {
    balance?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryAllBalancesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: pagination - defines an optional pagination for the request.
 *   - 2: resolve_denom - the flag to resolve the denom into a human-readable form from the metadata. Since: cosmos-sdk 0.50
 */
export declare const destructCosmosBankQueryAllBalancesRequest: (g_struct: CosmosBankQueryAllBalancesRequest) => [address?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest, resolve_denom?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_ALL_BALANCES_REQUEST = "/cosmos.bank.v1beta1.QueryAllBalancesRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryAllBalancesRequest` - QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 */
export type CosmosBankQueryAllBalancesRequest = {
    address?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
    resolve_denom?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryAllBalancesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: balances - the balances of all the coins.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosBankQueryAllBalancesResponse: (g_struct: CosmosBankQueryAllBalancesResponse) => [balances?: CosmosBaseCoin[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_ALL_BALANCES_RESPONSE = "/cosmos.bank.v1beta1.QueryAllBalancesResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryAllBalancesResponse` - the response type for the Query/AllBalances RPC method.
 */
export type CosmosBankQueryAllBalancesResponse = {
    balances?: CosmosBaseCoin[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySpendableBalancesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address to query spendable balances for.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosBankQuerySpendableBalancesRequest: (g_struct: CosmosBankQuerySpendableBalancesRequest) => [address?: CwAccountAddr, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SPENDABLE_BALANCES_REQUEST = "/cosmos.bank.v1beta1.QuerySpendableBalancesRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySpendableBalancesRequest` - defines the gRPC request structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 */
export type CosmosBankQuerySpendableBalancesRequest = {
    address?: CwAccountAddr | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySpendableBalancesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: balances - the spendable balances of all the coins.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosBankQuerySpendableBalancesResponse: (g_struct: CosmosBankQuerySpendableBalancesResponse) => [balances?: CosmosBaseCoin[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SPENDABLE_BALANCES_RESPONSE = "/cosmos.bank.v1beta1.QuerySpendableBalancesResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySpendableBalancesResponse` - defines the gRPC response structure for querying an account's spendable balances. Since: cosmos-sdk 0.46
 */
export type CosmosBankQuerySpendableBalancesResponse = {
    balances?: CosmosBaseCoin[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySpendableBalanceByDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the address to query balances for.
 *   - 1: denom - the coin denom to query balances for.
 */
export declare const destructCosmosBankQuerySpendableBalanceByDenomRequest: (g_struct: CosmosBankQuerySpendableBalanceByDenomRequest) => [address?: CwAccountAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SPENDABLE_BALANCE_BY_DENOM_REQUEST = "/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest` - defines the gRPC request structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 */
export type CosmosBankQuerySpendableBalanceByDenomRequest = {
    address?: CwAccountAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySpendableBalanceByDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: balance - the balance of the coin.
 */
export declare const destructCosmosBankQuerySpendableBalanceByDenomResponse: (g_struct: CosmosBankQuerySpendableBalanceByDenomResponse) => [balance?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SPENDABLE_BALANCE_BY_DENOM_RESPONSE = "/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse` - defines the gRPC response structure for querying an account's spendable balance for a specific denom. Since: cosmos-sdk 0.47
 */
export type CosmosBankQuerySpendableBalanceByDenomResponse = {
    balance?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryTotalSupplyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request. Since: cosmos-sdk 0.43
 */
export declare const destructCosmosBankQueryTotalSupplyRequest: (g_struct: CosmosBankQueryTotalSupplyRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_TOTAL_SUPPLY_REQUEST = "/cosmos.bank.v1beta1.QueryTotalSupplyRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryTotalSupplyRequest` - the request type for the Query/TotalSupply RPC method.
 */
export type CosmosBankQueryTotalSupplyRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryTotalSupplyResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: supply - the supply of the coins
 *   - 1: pagination - defines the pagination in the response. Since: cosmos-sdk 0.43
 */
export declare const destructCosmosBankQueryTotalSupplyResponse: (g_struct: CosmosBankQueryTotalSupplyResponse) => [supply?: CosmosBaseCoin[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_TOTAL_SUPPLY_RESPONSE = "/cosmos.bank.v1beta1.QueryTotalSupplyResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryTotalSupplyResponse` - the response type for the Query/TotalSupply RPC method
 */
export type CosmosBankQueryTotalSupplyResponse = {
    supply?: CosmosBaseCoin[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySupplyOfRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom - the coin denom to query balances for.
 */
export declare const destructCosmosBankQuerySupplyOfRequest: (g_struct: CosmosBankQuerySupplyOfRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SUPPLY_OF_REQUEST = "/cosmos.bank.v1beta1.QuerySupplyOfRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySupplyOfRequest` - the request type for the Query/SupplyOf RPC method.
 */
export type CosmosBankQuerySupplyOfRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySupplyOfResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount - the supply of the coin.
 */
export declare const destructCosmosBankQuerySupplyOfResponse: (g_struct: CosmosBankQuerySupplyOfResponse) => [amount?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SUPPLY_OF_RESPONSE = "/cosmos.bank.v1beta1.QuerySupplyOfResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySupplyOfResponse` - the response type for the Query/SupplyOf RPC method.
 */
export type CosmosBankQuerySupplyOfResponse = {
    amount?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBankQueryParamsRequest: (g_struct: CosmosBankQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_PARAMS_REQUEST = "/cosmos.bank.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryParamsRequest` - defines the request type for querying x/bank parameters.
 */
export type CosmosBankQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosBankQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - provides the parameters of the bank module.
 */
export declare const destructCosmosBankQueryParamsResponse: (g_struct: CosmosBankQueryParamsResponse) => [params?: CosmosBankParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_PARAMS_RESPONSE = "/cosmos.bank.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryParamsResponse` - defines the response type for querying x/bank parameters.
 */
export type CosmosBankQueryParamsResponse = {
    params?: CosmosBankParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomsMetadataRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosBankQueryDenomsMetadataRequest: (g_struct: CosmosBankQueryDenomsMetadataRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOMS_METADATA_REQUEST = "/cosmos.bank.v1beta1.QueryDenomsMetadataRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomsMetadataRequest` - the request type for the Query/DenomsMetadata RPC method.
 */
export type CosmosBankQueryDenomsMetadataRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomsMetadataResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: metadatas - metadata provides the client information for all the registered tokens.
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosBankQueryDenomsMetadataResponse: (g_struct: CosmosBankQueryDenomsMetadataResponse) => [metadatas?: CosmosBankMetadata[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOMS_METADATA_RESPONSE = "/cosmos.bank.v1beta1.QueryDenomsMetadataResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomsMetadataResponse` - the response type for the Query/DenomsMetadata RPC method.
 */
export type CosmosBankQueryDenomsMetadataResponse = {
    metadatas?: CosmosBankMetadata[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomMetadataRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom - the coin denom to query the metadata for.
 */
export declare const destructCosmosBankQueryDenomMetadataRequest: (g_struct: CosmosBankQueryDenomMetadataRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_METADATA_REQUEST = "/cosmos.bank.v1beta1.QueryDenomMetadataRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomMetadataRequest` - the request type for the Query/DenomMetadata RPC method.
 */
export type CosmosBankQueryDenomMetadataRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomMetadataResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: metadata - describes and provides all the client information for the requested token.
 */
export declare const destructCosmosBankQueryDenomMetadataResponse: (g_struct: CosmosBankQueryDenomMetadataResponse) => [metadata?: CosmosBankMetadata];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_METADATA_RESPONSE = "/cosmos.bank.v1beta1.QueryDenomMetadataResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomMetadataResponse` - the response type for the Query/DenomMetadata RPC method.
 */
export type CosmosBankQueryDenomMetadataResponse = {
    metadata?: CosmosBankMetadata | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomMetadataByQueryStringRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom - the coin denom to query the metadata for.
 */
export declare const destructCosmosBankQueryDenomMetadataByQueryStringRequest: (g_struct: CosmosBankQueryDenomMetadataByQueryStringRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_METADATA_BY_QUERY_STRING_REQUEST = "/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest` - the request type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataRequest but receives denom as query string.
 */
export type CosmosBankQueryDenomMetadataByQueryStringRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomMetadataByQueryStringResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: metadata - describes and provides all the client information for the requested token.
 */
export declare const destructCosmosBankQueryDenomMetadataByQueryStringResponse: (g_struct: CosmosBankQueryDenomMetadataByQueryStringResponse) => [metadata?: CosmosBankMetadata];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_METADATA_BY_QUERY_STRING_RESPONSE = "/cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse` - the response type for the Query/DenomMetadata RPC method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
 */
export type CosmosBankQueryDenomMetadataByQueryStringResponse = {
    metadata?: CosmosBankMetadata | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomOwnersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom - defines the coin denomination to query all account holders for.
 *   - 1: pagination - defines an optional pagination for the request.
 */
export declare const destructCosmosBankQueryDenomOwnersRequest: (g_struct: CosmosBankQueryDenomOwnersRequest) => [denom?: string, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_OWNERS_REQUEST = "/cosmos.bank.v1beta1.QueryDenomOwnersRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomOwnersRequest` - defines the request type for the DenomOwners RPC query, which queries for a paginated set of all account holders of a particular denomination.
 */
export type CosmosBankQueryDenomOwnersRequest = {
    denom?: string | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankDenomOwner} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - defines the address that owns a particular denomination.
 *   - 1: balance - the balance of the denominated coin for an account.
 */
export declare const destructCosmosBankDenomOwner: (g_struct: CosmosBankDenomOwner) => [address?: CwAccountAddr, balance?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_DENOM_OWNER = "/cosmos.bank.v1beta1.DenomOwner";
/**
 * JSON serialization of `cosmos.bank.v1beta1.DenomOwner` - defines structure representing an account that owns or holds a particular denominated token. It contains the account address and account balance of the denominated token. Since: cosmos-sdk 0.46
 */
export type CosmosBankDenomOwner = {
    address?: CwAccountAddr | undefined;
    balance?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQueryDenomOwnersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom_owners -
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructCosmosBankQueryDenomOwnersResponse: (g_struct: CosmosBankQueryDenomOwnersResponse) => [denom_owners?: CosmosBankDenomOwner[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_DENOM_OWNERS_RESPONSE = "/cosmos.bank.v1beta1.QueryDenomOwnersResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QueryDenomOwnersResponse` - defines the RPC response of a DenomOwners RPC query. Since: cosmos-sdk 0.46
 */
export type CosmosBankQueryDenomOwnersResponse = {
    denom_owners?: CosmosBankDenomOwner[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySendEnabledRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denoms - the specific denoms you want look up. Leave empty to get all entries.
 *   - 98: pagination - defines an optional pagination for the request. This field is only read if the denoms field is empty.
 */
export declare const destructCosmosBankQuerySendEnabledRequest: (g_struct: CosmosBankQuerySendEnabledRequest) => [denoms?: string[]] & {
    99?: CosmosBaseQueryPageRequest;
};
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SEND_ENABLED_REQUEST = "/cosmos.bank.v1beta1.QuerySendEnabledRequest";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySendEnabledRequest` - defines the RPC request for looking up SendEnabled entries. Since: cosmos-sdk 0.47
 */
export type CosmosBankQuerySendEnabledRequest = {
    denoms?: string[] | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBankQuerySendEnabledResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: send_enabled -
 *   - 98: pagination - defines the pagination in the response. This field is only populated if the denoms field in the request is empty.
 */
export declare const destructCosmosBankQuerySendEnabledResponse: (g_struct: CosmosBankQuerySendEnabledResponse) => [send_enabled?: CosmosBankSendEnabled[]] & {
    99?: CosmosBaseQueryPageResponse;
};
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BANK_QUERY_SEND_ENABLED_RESPONSE = "/cosmos.bank.v1beta1.QuerySendEnabledResponse";
/**
 * JSON serialization of `cosmos.bank.v1beta1.QuerySendEnabledResponse` - defines the RPC response of a SendEnable query. Since: cosmos-sdk 0.47
 */
export type CosmosBankQuerySendEnabledResponse = {
    send_enabled?: CosmosBankSendEnabled[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
