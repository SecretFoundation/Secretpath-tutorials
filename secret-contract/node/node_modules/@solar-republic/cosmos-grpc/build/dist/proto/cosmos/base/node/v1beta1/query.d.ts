/// <reference types="node" />
import type { WeakUint64Str, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt, WeakTimestampStr } from '../../../../../api/types.js';
export type EncodedCosmosBaseNodeConfigRequest = Encoded<'/cosmos.base.node.v1beta1.ConfigRequest'>;
export type EncodedCosmosBaseNodeConfigResponse = Encoded<'/cosmos.base.node.v1beta1.ConfigResponse'>;
export type EncodedCosmosBaseNodeStatusRequest = Encoded<'/cosmos.base.node.v1beta1.StatusRequest'>;
export type EncodedCosmosBaseNodeStatusResponse = Encoded<'/cosmos.base.node.v1beta1.StatusResponse'>;
/**
 * Queries for the operator configuration.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: minimum_gas_price - the 'minimum_gas_price' response property
 *   - 1: pruning_keep_recent - the 'minimum_gas_price' response property
 *   - 2: pruning_interval - the 'minimum_gas_price' response property
 */
export declare const queryCosmosBaseNodeConfig: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<CosmosBaseNodeConfigResponse>>;
/**
 * Queries for the node status.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: earliest_store_height - the 'earliest_store_height' response property
 *   - 1: height - the 'earliest_store_height' response property
 *   - 2: timestamp - the 'earliest_store_height' response property
 *   - 3: app_hash - the 'earliest_store_height' response property
 *   - 4: validator_hash - the 'earliest_store_height' response property
 */
export declare const queryCosmosBaseNodeStatus: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../../api/transport.js").NetworkJsonResponse<CosmosBaseNodeStatusResponse>>;
/**
 * Encodes a `ConfigRequest` protobuf message: defines the request structure for the Config gRPC query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseNodeConfigRequest: () => EncodedCosmosBaseNodeConfigRequest;
/**
 * Encodes a `ConfigResponse` protobuf message: defines the response structure for the Config gRPC query.
 * @param s_minimum_gas_price - `minimum_gas_price`:
 * @param s_pruning_keep_recent - `pruning_keep_recent`: pruning settings
 * @param s_pruning_interval - `pruning_interval`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseNodeConfigResponse: (s_minimum_gas_price?: Opt<string>, s_pruning_keep_recent?: Opt<string>, s_pruning_interval?: Opt<string>) => EncodedCosmosBaseNodeConfigResponse;
/**
 * Encodes a `StatusRequest` protobuf message: StateRequest defines the request structure for the status of a node.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseNodeStatusRequest: () => EncodedCosmosBaseNodeStatusRequest;
/**
 * Encodes a `StatusResponse` protobuf message: StateResponse defines the response structure for the status of a node.
 * @param sg_earliest_store_height - `earliest_store_height`:
 * @param sg_height - `height`:
 * @param xt_timestamp - `timestamp`:
 * @param atu8_app_hash - `app_hash`:
 * @param atu8_validator_hash - `validator_hash`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseNodeStatusResponse: (sg_earliest_store_height?: Opt<WeakUint64Str>, sg_height?: Opt<WeakUint64Str>, xt_timestamp?: Opt<number>, atu8_app_hash?: Opt<Uint8Array>, atu8_validator_hash?: Opt<Uint8Array>) => EncodedCosmosBaseNodeStatusResponse;
/**
 * A decoded protobuf ConfigRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosBaseNodeConfigRequest = [];
/**
 * Decodes a protobuf ConfigRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeConfigRequest}
 */
export declare const decodeCosmosBaseNodeConfigRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Config message
 *
 * Tuple where:
 *   - 0: minimum_gas_price -
 *   - 1: pruning_keep_recent - pruning settings
 *   - 2: pruning_interval -
 */
export type DecodedCosmosBaseNodeConfigResponse = [
    s_minimum_gas_price?: string,
    s_pruning_keep_recent?: string,
    s_pruning_interval?: string
];
/**
 * Decodes a protobuf Config message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeConfigResponse}
 */
export declare const decodeCosmosBaseNodeConfigResponse: (atu8_payload: Uint8Array) => DecodedCosmosBaseNodeConfigResponse;
/**
 * A decoded protobuf StatusRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosBaseNodeStatusRequest = [];
/**
 * Decodes a protobuf StatusRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeStatusRequest}
 */
export declare const decodeCosmosBaseNodeStatusRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf Status message
 *
 * Tuple where:
 *   - 0: earliest_store_height -
 *   - 1: height -
 *   - 2: timestamp -
 *   - 3: app_hash -
 *   - 4: validator_hash -
 */
export type DecodedCosmosBaseNodeStatusResponse = [
    sg_earliest_store_height?: CwUint64,
    sg_height?: CwUint64,
    a_timestamp?: [
        string,
        number
    ],
    atu8_app_hash?: Uint8Array,
    atu8_validator_hash?: Uint8Array
];
/**
 * Decodes a protobuf Status message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeStatusResponse}
 */
export declare const decodeCosmosBaseNodeStatusResponse: (atu8_payload: Uint8Array) => DecodedCosmosBaseNodeStatusResponse;
/**
 * Destructures the fields of a {@link CosmosBaseNodeConfigRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBaseNodeConfigRequest: (g_struct: CosmosBaseNodeConfigRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_CONFIG_REQUEST = "/cosmos.base.node.v1beta1.ConfigRequest";
/**
 * JSON serialization of `cosmos.base.node.v1beta1.ConfigRequest` - defines the request structure for the Config gRPC query.
 */
export type CosmosBaseNodeConfigRequest = {};
/**
 * Destructures the fields of a {@link CosmosBaseNodeConfigResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: minimum_gas_price -
 *   - 1: pruning_keep_recent - pruning settings
 *   - 2: pruning_interval -
 */
export declare const destructCosmosBaseNodeConfigResponse: (g_struct: CosmosBaseNodeConfigResponse) => [minimum_gas_price?: string, pruning_keep_recent?: string, pruning_interval?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_CONFIG_RESPONSE = "/cosmos.base.node.v1beta1.ConfigResponse";
/**
 * JSON serialization of `cosmos.base.node.v1beta1.ConfigResponse` - defines the response structure for the Config gRPC query.
 */
export type CosmosBaseNodeConfigResponse = {
    minimum_gas_price?: string | undefined;
    pruning_keep_recent?: string | undefined;
    pruning_interval?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBaseNodeStatusRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosBaseNodeStatusRequest: (g_struct: CosmosBaseNodeStatusRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_STATUS_REQUEST = "/cosmos.base.node.v1beta1.StatusRequest";
/**
 * JSON serialization of `cosmos.base.node.v1beta1.StatusRequest` - StateRequest defines the request structure for the status of a node.
 */
export type CosmosBaseNodeStatusRequest = {};
/**
 * Destructures the fields of a {@link CosmosBaseNodeStatusResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: earliest_store_height -
 *   - 1: height -
 *   - 2: timestamp -
 *   - 3: app_hash -
 *   - 4: validator_hash -
 */
export declare const destructCosmosBaseNodeStatusResponse: (g_struct: CosmosBaseNodeStatusResponse) => [earliest_store_height?: CwUint64, height?: CwUint64, timestamp?: number, app_hash?: Uint8Array, validator_hash?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_STATUS_RESPONSE = "/cosmos.base.node.v1beta1.StatusResponse";
/**
 * JSON serialization of `cosmos.base.node.v1beta1.StatusResponse` - StateResponse defines the response structure for the status of a node.
 */
export type CosmosBaseNodeStatusResponse = {
    earliest_store_height?: CwUint64 | undefined;
    height?: CwUint64 | undefined;
    timestamp?: WeakTimestampStr | undefined;
    app_hash?: CwBase64 | undefined;
    validator_hash?: CwBase64 | undefined;
};
