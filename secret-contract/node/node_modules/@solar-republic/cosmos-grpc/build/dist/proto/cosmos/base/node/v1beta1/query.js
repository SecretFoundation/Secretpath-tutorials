import { parse_timestamp } from '../../../../../api/json.js';
import { decode_protobuf, decode_temporal } from '../../../../../api/protobuf-reader.js';
import { Protobuf, temporal } from '../../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../../api/transport.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
const SR_LCD_COSMOS_BASE_NODE_SERVICE = '/cosmos/base/node/v1beta1/';
/**
 * Queries for the operator configuration.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: minimum_gas_price - the 'minimum_gas_price' response property
 *   - 1: pruning_keep_recent - the 'minimum_gas_price' response property
 *   - 2: pruning_interval - the 'minimum_gas_price' response property
 */
export const queryCosmosBaseNodeConfig = restful_grpc(() => [SR_LCD_COSMOS_BASE_NODE_SERVICE + 'config']);
/**
 * Queries for the node status.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: earliest_store_height - the 'earliest_store_height' response property
 *   - 1: height - the 'earliest_store_height' response property
 *   - 2: timestamp - the 'earliest_store_height' response property
 *   - 3: app_hash - the 'earliest_store_height' response property
 *   - 4: validator_hash - the 'earliest_store_height' response property
 */
export const queryCosmosBaseNodeStatus = restful_grpc(() => [SR_LCD_COSMOS_BASE_NODE_SERVICE + 'status']);
/**
 * Encodes a `ConfigRequest` protobuf message: defines the request structure for the Config gRPC query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosBaseNodeConfigRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ConfigResponse` protobuf message: defines the response structure for the Config gRPC query.
 * @param s_minimum_gas_price - `minimum_gas_price`:
 * @param s_pruning_keep_recent - `pruning_keep_recent`: pruning settings
 * @param s_pruning_interval - `pruning_interval`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosBaseNodeConfigResponse = (s_minimum_gas_price, s_pruning_keep_recent, s_pruning_interval) => Protobuf() // ...
    .s(s_minimum_gas_price) // string minimum_gas_price = 1
    .s(s_pruning_keep_recent) // string pruning_keep_recent = 2
    .s(s_pruning_interval) // string pruning_interval = 3
    .o;
/**
 * Encodes a `StatusRequest` protobuf message: StateRequest defines the request structure for the status of a node.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosBaseNodeStatusRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `StatusResponse` protobuf message: StateResponse defines the response structure for the status of a node.
 * @param sg_earliest_store_height - `earliest_store_height`:
 * @param sg_height - `height`:
 * @param xt_timestamp - `timestamp`:
 * @param atu8_app_hash - `app_hash`:
 * @param atu8_validator_hash - `validator_hash`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosBaseNodeStatusResponse = (sg_earliest_store_height, sg_height, xt_timestamp, atu8_app_hash, atu8_validator_hash) => Protobuf() // ...
    .g(sg_earliest_store_height) // uint64 earliest_store_height = 1
    .g(sg_height) // uint64 height = 2
    .b(temporal(xt_timestamp)) // Timestamp timestamp = 3
    .b(atu8_app_hash) // bytes app_hash = 4
    .b(atu8_validator_hash) // bytes validator_hash = 5
    .o;
/**
 * Decodes a protobuf ConfigRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeConfigRequest}
 */
export const decodeCosmosBaseNodeConfigRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Config message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeConfigResponse}
 */
export const decodeCosmosBaseNodeConfigResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Decodes a protobuf StatusRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeStatusRequest}
 */
export const decodeCosmosBaseNodeStatusRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Status message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseNodeStatusResponse}
 */
export const decodeCosmosBaseNodeStatusResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3, 3, [3, 1], 1, 1], [0, 0, decode_temporal]);
/**
 * Destructures the fields of a {@link CosmosBaseNodeConfigRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosBaseNodeConfigRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_CONFIG_REQUEST = '/cosmos.base.node.v1beta1.ConfigRequest';
/**
 * Destructures the fields of a {@link CosmosBaseNodeConfigResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: minimum_gas_price -
 *   - 1: pruning_keep_recent - pruning settings
 *   - 2: pruning_interval -
 */
export const destructCosmosBaseNodeConfigResponse = (g_struct) => [g_struct.minimum_gas_price, g_struct.pruning_keep_recent, g_struct.pruning_interval];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_CONFIG_RESPONSE = '/cosmos.base.node.v1beta1.ConfigResponse';
/**
 * Destructures the fields of a {@link CosmosBaseNodeStatusRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosBaseNodeStatusRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_STATUS_REQUEST = '/cosmos.base.node.v1beta1.StatusRequest';
/**
 * Destructures the fields of a {@link CosmosBaseNodeStatusResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: earliest_store_height -
 *   - 1: height -
 *   - 2: timestamp -
 *   - 3: app_hash -
 *   - 4: validator_hash -
 */
export const destructCosmosBaseNodeStatusResponse = (g_struct) => [g_struct.earliest_store_height, g_struct.height, parse_timestamp(g_struct.timestamp), safe_base64_to_bytes(g_struct.app_hash), safe_base64_to_bytes(g_struct.validator_hash)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_BASE_NODE_STATUS_RESPONSE = '/cosmos.base.node.v1beta1.StatusResponse';
//# sourceMappingURL=query.js.map