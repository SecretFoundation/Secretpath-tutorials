import type { WeakInt64Str, WeakAccountAddr, CwInt64, CwBase64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt, WeakTimestampStr } from '../../../../../api/types.js';
import type { TendermintTypesEvidenceList, DecodedTendermintTypesEvidenceList } from '../../../../tendermint/types/evidence.js';
import type { TendermintTypesData, DecodedTendermintTypesData, TendermintTypesCommit, DecodedTendermintTypesCommit, TendermintTypesBlockID, DecodedTendermintTypesBlockID } from '../../../../tendermint/types/types.js';
import type { TendermintVersionConsensus, DecodedTendermintVersionConsensus } from '../../../../tendermint/version/types.js';
export type EncodedCosmosBaseTendermintBlock = Encoded<'/cosmos.base.tendermint.v1beta1.Block'>;
export type EncodedCosmosBaseTendermintHeader = Encoded<'/cosmos.base.tendermint.v1beta1.Header'>;
/**
 * Encodes a `Block` protobuf message: tendermint type Block, with the Header proposer address field converted to bech32 string.
 * @param g_header - `header`:
 * @param g_data - `data`:
 * @param g_evidence - `evidence`:
 * @param g_last_commit - `last_commit`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseTendermintBlock: (atu8_header?: Opt<Encoded<'/cosmos.base.tendermint.v1beta1.Header'>>, atu8_data?: Opt<Encoded<'/tendermint.types.Data'>>, atu8_evidence?: Opt<Encoded<'/tendermint.types.EvidenceList'>>, atu8_last_commit?: Opt<Encoded<'/tendermint.types.Commit'>>) => EncodedCosmosBaseTendermintBlock;
/**
 * Encodes a `Header` protobuf message: defines the structure of a Tendermint block header.
 * @param g_version - `version`: basic block info
 * @param si_chain - `chain_id`:
 * @param sg_height - `height`:
 * @param xt_time - `time`:
 * @param g_last_block_id - `last_block_id`: prev block info
 * @param atu8_last_commit_hash - `last_commit_hash`: hashes of block data
 * @param atu8_data_hash - `data_hash`:
 * @param atu8_validators_hash - `validators_hash`: hashes from the app output from the prev block
 * @param atu8_next_validators_hash - `next_validators_hash`:
 * @param atu8_consensus_hash - `consensus_hash`:
 * @param atu8_app_hash - `app_hash`:
 * @param atu8_last_results_hash - `last_results_hash`:
 * @param atu8_evidence_hash - `evidence_hash`: consensus info
 * @param sa_proposer - `proposer_address`: the original block proposer address, formatted as a Bech32 string. In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string for better UX.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosBaseTendermintHeader: (atu8_version?: Opt<Encoded<'/tendermint.version.Consensus'>>, si_chain?: Opt<string>, sg_height?: Opt<WeakInt64Str>, xt_time?: Opt<number>, atu8_last_block_id?: Opt<Encoded<'/tendermint.types.BlockID'>>, atu8_last_commit_hash?: Opt<Uint8Array>, atu8_data_hash?: Opt<Uint8Array>, atu8_validators_hash?: Opt<Uint8Array>, atu8_next_validators_hash?: Opt<Uint8Array>, atu8_consensus_hash?: Opt<Uint8Array>, atu8_app_hash?: Opt<Uint8Array>, atu8_last_results_hash?: Opt<Uint8Array>, atu8_evidence_hash?: Opt<Uint8Array>, sa_proposer?: Opt<WeakAccountAddr>) => EncodedCosmosBaseTendermintHeader;
/**
 * A decoded protobuf Block message
 *
 * Tuple where:
 *   - 0: header -
 *   - 1: data -
 *   - 2: evidence -
 *   - 3: last_commit -
 */
export type DecodedCosmosBaseTendermintBlock = [
    a_header?: DecodedCosmosBaseTendermintHeader,
    a_data?: DecodedTendermintTypesData,
    a_evidence?: DecodedTendermintTypesEvidenceList,
    a_last_commit?: DecodedTendermintTypesCommit
];
/**
 * Decodes a protobuf Block message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseTendermintBlock}
 */
export declare const decodeCosmosBaseTendermintBlock: (atu8_payload: Uint8Array) => DecodedCosmosBaseTendermintBlock;
/**
 * A decoded protobuf Header message
 *
 * Tuple where:
 *   - 0: version - basic block info
 *   - 1: chain_id -
 *   - 2: height -
 *   - 3: time -
 *   - 4: last_block_id - prev block info
 *   - 5: last_commit_hash - hashes of block data
 *   - 6: data_hash -
 *   - 7: validators_hash - hashes from the app output from the prev block
 *   - 8: next_validators_hash -
 *   - 9: consensus_hash -
 *   - 10: app_hash -
 *   - 11: last_results_hash -
 *   - 12: evidence_hash - consensus info
 *   - 13: proposer_address - the original block proposer address, formatted as a Bech32 string. In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string for better UX.
 */
export type DecodedCosmosBaseTendermintHeader = [
    a_version?: DecodedTendermintVersionConsensus,
    si_chain?: string,
    sg_height?: CwInt64,
    a_time?: [
        string,
        number
    ],
    a_last_block_id?: DecodedTendermintTypesBlockID,
    atu8_last_commit_hash?: Uint8Array,
    atu8_data_hash?: Uint8Array,
    atu8_validators_hash?: Uint8Array,
    atu8_next_validators_hash?: Uint8Array,
    atu8_consensus_hash?: Uint8Array,
    atu8_app_hash?: Uint8Array,
    atu8_last_results_hash?: Uint8Array,
    atu8_evidence_hash?: Uint8Array,
    sa_proposer?: CwAccountAddr
];
/**
 * Decodes a protobuf Header message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosBaseTendermintHeader}
 */
export declare const decodeCosmosBaseTendermintHeader: (atu8_payload: Uint8Array) => DecodedCosmosBaseTendermintHeader;
/**
 * Destructures the fields of a {@link CosmosBaseTendermintBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: header -
 *   - 1: data -
 *   - 2: evidence -
 *   - 3: last_commit -
 */
export declare const destructCosmosBaseTendermintBlock: (g_struct: CosmosBaseTendermintBlock) => [header?: CosmosBaseTendermintHeader, data?: TendermintTypesData, evidence?: TendermintTypesEvidenceList, last_commit?: TendermintTypesCommit];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_TENDERMINT_BLOCK = "/cosmos.base.tendermint.v1beta1.Block";
/**
 * JSON serialization of `cosmos.base.tendermint.v1beta1.Block` - tendermint type Block, with the Header proposer address field converted to bech32 string.
 */
export type CosmosBaseTendermintBlock = {
    header?: CosmosBaseTendermintHeader | undefined;
    data?: TendermintTypesData | undefined;
    evidence?: TendermintTypesEvidenceList | undefined;
    last_commit?: TendermintTypesCommit | undefined;
};
/**
 * Destructures the fields of a {@link CosmosBaseTendermintHeader} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: version - basic block info
 *   - 1: chain_id -
 *   - 2: height -
 *   - 3: time -
 *   - 4: last_block_id - prev block info
 *   - 5: last_commit_hash - hashes of block data
 *   - 6: data_hash -
 *   - 7: validators_hash - hashes from the app output from the prev block
 *   - 8: next_validators_hash -
 *   - 9: consensus_hash -
 *   - 10: app_hash -
 *   - 11: last_results_hash -
 *   - 12: evidence_hash - consensus info
 *   - 13: proposer_address - the original block proposer address, formatted as a Bech32 string. In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string for better UX.
 */
export declare const destructCosmosBaseTendermintHeader: (g_struct: CosmosBaseTendermintHeader) => [version?: TendermintVersionConsensus, chain_id?: string, height?: CwInt64, time?: number, last_block_id?: TendermintTypesBlockID, last_commit_hash?: Uint8Array, data_hash?: Uint8Array, validators_hash?: Uint8Array, next_validators_hash?: Uint8Array, consensus_hash?: Uint8Array, app_hash?: Uint8Array, last_results_hash?: Uint8Array, evidence_hash?: Uint8Array, proposer_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_BASE_TENDERMINT_HEADER = "/cosmos.base.tendermint.v1beta1.Header";
/**
 * JSON serialization of `cosmos.base.tendermint.v1beta1.Header` - defines the structure of a Tendermint block header.
 */
export type CosmosBaseTendermintHeader = {
    version?: TendermintVersionConsensus | undefined;
    chain_id?: string | undefined;
    height?: CwInt64 | undefined;
    time?: WeakTimestampStr | undefined;
    last_block_id?: TendermintTypesBlockID | undefined;
    last_commit_hash?: CwBase64 | undefined;
    data_hash?: CwBase64 | undefined;
    validators_hash?: CwBase64 | undefined;
    next_validators_hash?: CwBase64 | undefined;
    consensus_hash?: CwBase64 | undefined;
    app_hash?: CwBase64 | undefined;
    last_results_hash?: CwBase64 | undefined;
    evidence_hash?: CwBase64 | undefined;
    proposer_address?: CwAccountAddr | undefined;
};
