import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import { decodeCosmosCircuitPermissions, decodeCosmosCircuitGenesisAccountPermissions } from './types.js';
const SR_LCD_COSMOS_CIRCUIT_QUERY = '/cosmos/circuit/v1/';
/**
 * Returns account permissions.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @returns a tuple where:
 *   - 0: permission - the 'permission' response property
 */
export const queryCosmosCircuitAccount = restful_grpc(sa_address => [SR_LCD_COSMOS_CIRCUIT_QUERY + 'accounts/' + sa_address]);
/**
 * Account returns account permissions.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 *   - 1: pagination - the 'accounts' response property
 */
export const queryCosmosCircuitAccounts = restful_grpc(g_pagination => [SR_LCD_COSMOS_CIRCUIT_QUERY + 'accounts', {
        pagination: g_pagination,
    }]);
/**
 * Returns a list of disabled message urls
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: disabled_list - the 'disabled_list' response property
 */
export const queryCosmosCircuitDisabledList = restful_grpc(() => [SR_LCD_COSMOS_CIRCUIT_QUERY + 'disable_list']);
/**
 * Encodes a `QueryAccountRequest` protobuf message: the request type for the Query/Account RPC method.
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitQueryAccountRequest = (sa_address) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .o;
/**
 * Encodes a `AccountResponse` protobuf message: the response type for the Query/Account RPC method.
 * @param g_permission - `permission`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitAccountResponse = (atu8_permission) => Protobuf() // ...
    .b(atu8_permission) // Permissions permission = 1
    .o;
/**
 * Encodes a `QueryAccountsRequest` protobuf message: the request type for the Query/Accounts RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitQueryAccountsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `AccountsResponse` protobuf message: the response type for the Query/Accounts RPC method.
 * @param a_accounts - `accounts`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitAccountsResponse = (a_accounts, atu8_pagination) => Protobuf() // ...
    .B(a_accounts) // GenesisAccountPermissions[] accounts = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryDisabledListRequest` protobuf message: QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitQueryDisabledListRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `DisabledListResponse` protobuf message: the response type for the Query/DisabledList RPC method.
 * @param a_disabled_lists - `disabled_list`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCircuitDisabledListResponse = (a_disabled_lists) => Protobuf() // ...
    .S(a_disabled_lists) // string[] disabled_list = 1
    .o;
/**
 * Decodes a protobuf QueryAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryAccountRequest}
 */
export const decodeCosmosCircuitQueryAccountRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf Account message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitAccountResponse}
 */
export const decodeCosmosCircuitAccountResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosCircuitPermissions]);
/**
 * Decodes a protobuf QueryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryAccountsRequest}
 */
export const decodeCosmosCircuitQueryAccountsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf Accounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitAccountsResponse}
 */
export const decodeCosmosCircuitAccountsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosCircuitGenesisAccountPermissions, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryDisabledListRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitQueryDisabledListRequest}
 */
export const decodeCosmosCircuitQueryDisabledListRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf DisabledList message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCircuitDisabledListResponse}
 */
export const decodeCosmosCircuitDisabledListResponse = (atu8_payload) => decode_protobuf(atu8_payload, [4]);
/**
 * Destructures the fields of a {@link CosmosCircuitQueryAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export const destructCosmosCircuitQueryAccountRequest = (g_struct) => [g_struct.address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_ACCOUNT_REQUEST = '/cosmos.circuit.v1.QueryAccountRequest';
/**
 * Destructures the fields of a {@link CosmosCircuitAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: permission -
 */
export const destructCosmosCircuitAccountResponse = (g_struct) => [g_struct.permission];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_ACCOUNT_RESPONSE = '/cosmos.circuit.v1.AccountResponse';
/**
 * Destructures the fields of a {@link CosmosCircuitQueryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export const destructCosmosCircuitQueryAccountsRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_ACCOUNTS_REQUEST = '/cosmos.circuit.v1.QueryAccountsRequest';
/**
 * Destructures the fields of a {@link CosmosCircuitAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructCosmosCircuitAccountsResponse = (g_struct) => [g_struct.accounts, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_ACCOUNTS_RESPONSE = '/cosmos.circuit.v1.AccountsResponse';
/**
 * Destructures the fields of a {@link CosmosCircuitQueryDisabledListRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosCircuitQueryDisabledListRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_QUERY_DISABLED_LIST_REQUEST = '/cosmos.circuit.v1.QueryDisabledListRequest';
/**
 * Destructures the fields of a {@link CosmosCircuitDisabledListResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: disabled_list -
 */
export const destructCosmosCircuitDisabledListResponse = (g_struct) => [g_struct.disabled_list];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CIRCUIT_DISABLED_LIST_RESPONSE = '/cosmos.circuit.v1.DisabledListResponse';
//# sourceMappingURL=query.js.map