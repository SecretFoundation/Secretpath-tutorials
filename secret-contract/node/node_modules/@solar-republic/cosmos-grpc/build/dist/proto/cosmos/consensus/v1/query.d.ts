/// <reference types="node" />
import type { Encoded, Opt } from '../../../../api/types.js';
import type { TendermintTypesConsensusParams, DecodedTendermintTypesConsensusParams } from '../../../tendermint/types/params.js';
export type EncodedCosmosConsensusQueryParamsRequest = Encoded<'/cosmos.consensus.v1.QueryParamsRequest'>;
export type EncodedCosmosConsensusQueryParamsResponse = Encoded<'/cosmos.consensus.v1.QueryParamsResponse'>;
/**
 * Queries the parameters of x/consensus module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 */
export declare const queryCosmosConsensusParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosConsensusQueryParamsResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: defines the request type for querying x/consensus parameters.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosConsensusQueryParamsRequest: () => EncodedCosmosConsensusQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: defines the response type for querying x/consensus parameters.
 * @param g_params - `params`: the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosConsensusQueryParamsResponse: (atu8_params?: Opt<Encoded<'/tendermint.types.ConsensusParams'>>) => EncodedCosmosConsensusQueryParamsResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosConsensusQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusQueryParamsRequest}
 */
export declare const decodeCosmosConsensusQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 */
export type DecodedCosmosConsensusQueryParamsResponse = [
    a_params?: DecodedTendermintTypesConsensusParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusQueryParamsResponse}
 */
export declare const decodeCosmosConsensusQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosConsensusQueryParamsResponse;
/**
 * Destructures the fields of a {@link CosmosConsensusQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosConsensusQueryParamsRequest: (g_struct: CosmosConsensusQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_QUERY_PARAMS_REQUEST = "/cosmos.consensus.v1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.consensus.v1.QueryParamsRequest` - defines the request type for querying x/consensus parameters.
 */
export type CosmosConsensusQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosConsensusQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 */
export declare const destructCosmosConsensusQueryParamsResponse: (g_struct: CosmosConsensusQueryParamsResponse) => [params?: TendermintTypesConsensusParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_QUERY_PARAMS_RESPONSE = "/cosmos.consensus.v1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.consensus.v1.QueryParamsResponse` - defines the response type for querying x/consensus parameters.
 */
export type CosmosConsensusQueryParamsResponse = {
    params?: TendermintTypesConsensusParams | undefined;
};
