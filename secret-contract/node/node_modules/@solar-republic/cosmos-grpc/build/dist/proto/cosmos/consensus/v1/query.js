/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeTendermintTypesConsensusParams } from '../../../tendermint/types/params.js';
const SR_LCD_COSMOS_CONSENSUS_QUERY = '/cosmos/consensus/v1/params';
/**
 * Queries the parameters of x/consensus module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 */
export const queryCosmosConsensusParams = restful_grpc(() => [SR_LCD_COSMOS_CONSENSUS_QUERY]);
/**
 * Encodes a `QueryParamsRequest` protobuf message: defines the request type for querying x/consensus parameters.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosConsensusQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: defines the response type for querying x/consensus parameters.
 * @param g_params - `params`: the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosConsensusQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // ConsensusParams params = 1
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusQueryParamsRequest}
 */
export const decodeCosmosConsensusQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusQueryParamsResponse}
 */
export const decodeCosmosConsensusQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeTendermintTypesConsensusParams]);
/**
 * Destructures the fields of a {@link CosmosConsensusQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosConsensusQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_QUERY_PARAMS_REQUEST = '/cosmos.consensus.v1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link CosmosConsensusQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - the tendermint consensus params stored in the consensus module. Please note that `params.version` is not populated in this response, it is tracked separately in the x/upgrade module.
 */
export const destructCosmosConsensusQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_QUERY_PARAMS_RESPONSE = '/cosmos.consensus.v1.QueryParamsResponse';
//# sourceMappingURL=query.js.map