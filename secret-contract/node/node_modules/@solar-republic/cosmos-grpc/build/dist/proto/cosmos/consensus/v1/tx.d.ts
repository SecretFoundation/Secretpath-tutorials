import type { Encoded, Opt } from '../../../../api/types.js';
import type { TendermintTypesBlockParams, DecodedTendermintTypesBlockParams, TendermintTypesEvidenceParams, DecodedTendermintTypesEvidenceParams, TendermintTypesValidatorParams, DecodedTendermintTypesValidatorParams, TendermintTypesABCIParams, DecodedTendermintTypesABCIParams } from '../../../tendermint/types/params.js';
export type EncodedCosmosConsensusMsgUpdateParams = Encoded<'/cosmos.consensus.v1.MsgUpdateParams'>;
export type EncodedCosmosConsensusMsgUpdateParamsResponse = Encoded<'/cosmos.consensus.v1.MsgUpdateParamsResponse'>;
/**
 * Encodes a `MsgUpdateParams` protobuf message: the Msg/UpdateParams request type.
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param g_block - `block`: params defines the x/consensus parameters to update. VersionsParams is not included in this Msg because it is tracked separarately in x/upgrade. NOTE: All parameters must be supplied.
 * @param g_evidence - `evidence`:
 * @param g_validator - `validator`:
 * @param g_abci - `abci`: Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosConsensusMsgUpdateParams: (s_authority?: Opt<string>, atu8_block?: Opt<Encoded<'/tendermint.types.BlockParams'>>, atu8_evidence?: Opt<Encoded<'/tendermint.types.EvidenceParams'>>, atu8_validator?: Opt<Encoded<'/tendermint.types.ValidatorParams'>>, atu8_abci?: Opt<Encoded<'/tendermint.types.ABCIParams'>>) => EncodedCosmosConsensusMsgUpdateParams;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response structure for executing a MsgUpdateParams message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosConsensusMsgUpdateParamsResponse: () => EncodedCosmosConsensusMsgUpdateParamsResponse;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: block - params defines the x/consensus parameters to update. VersionsParams is not included in this Msg because it is tracked separarately in x/upgrade. NOTE: All parameters must be supplied.
 *   - 2: evidence -
 *   - 3: validator -
 *   - 4: abci - Since: cosmos-sdk 0.50
 */
export type DecodedCosmosConsensusMsgUpdateParams = [
    s_authority?: string,
    a_block?: DecodedTendermintTypesBlockParams,
    a_evidence?: DecodedTendermintTypesEvidenceParams,
    a_validator?: DecodedTendermintTypesValidatorParams,
    a_abci?: DecodedTendermintTypesABCIParams
];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusMsgUpdateParams}
 */
export declare const decodeCosmosConsensusMsgUpdateParams: (atu8_payload: Uint8Array) => DecodedCosmosConsensusMsgUpdateParams;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 */
export type DecodedCosmosConsensusMsgUpdateParamsResponse = [];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosConsensusMsgUpdateParamsResponse}
 */
export declare const decodeCosmosConsensusMsgUpdateParamsResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link CosmosConsensusMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: block - params defines the x/consensus parameters to update. VersionsParams is not included in this Msg because it is tracked separarately in x/upgrade. NOTE: All parameters must be supplied.
 *   - 2: evidence -
 *   - 3: validator -
 *   - 4: abci - Since: cosmos-sdk 0.50
 */
export declare const destructCosmosConsensusMsgUpdateParams: (g_struct: CosmosConsensusMsgUpdateParams) => [authority?: string, block?: TendermintTypesBlockParams, evidence?: TendermintTypesEvidenceParams, validator?: TendermintTypesValidatorParams, abci?: TendermintTypesABCIParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_MSG_UPDATE_PARAMS = "/cosmos.consensus.v1.MsgUpdateParams";
/**
 * JSON serialization of `cosmos.consensus.v1.MsgUpdateParams` - the Msg/UpdateParams request type.
 */
export type CosmosConsensusMsgUpdateParams = {
    authority?: string | undefined;
    block?: TendermintTypesBlockParams | undefined;
    evidence?: TendermintTypesEvidenceParams | undefined;
    validator?: TendermintTypesValidatorParams | undefined;
    abci?: TendermintTypesABCIParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosConsensusMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosConsensusMsgUpdateParamsResponse: (g_struct: CosmosConsensusMsgUpdateParamsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CONSENSUS_MSG_UPDATE_PARAMS_RESPONSE = "/cosmos.consensus.v1.MsgUpdateParamsResponse";
/**
 * JSON serialization of `cosmos.consensus.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message.
 */
export type CosmosConsensusMsgUpdateParamsResponse = {};
