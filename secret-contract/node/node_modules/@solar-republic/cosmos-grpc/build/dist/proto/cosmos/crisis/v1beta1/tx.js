import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, coin } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `MsgVerifyInvariant` protobuf message: represents a message to verify a particular invariance.
 * @param sa_sender - `sender`: the account address of private key to send coins to fee collector account.
 * @param s_invariant_module_name - `invariant_module_name`: name of the invariant module.
 * @param s_invariant_route - `invariant_route`: the msg's invariant route.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCrisisMsgVerifyInvariant = (sa_sender, s_invariant_module_name, s_invariant_route) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .s(s_invariant_module_name) // string invariant_module_name = 2
    .s(s_invariant_route) // string invariant_route = 3
    .o;
/**
 * Encodes a `MsgVerifyInvariantResponse` protobuf message: defines the Msg/VerifyInvariant response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCrisisMsgVerifyInvariantResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgUpdateParams` protobuf message: the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param a_constant_fee - `constant_fee`: defines the x/crisis parameter.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCrisisMsgUpdateParams = (s_authority, a_constant_fee) => Protobuf() // ...
    .s(s_authority) // string authority = 1
    .b(coin(a_constant_fee)) // Coin constant_fee = 2
    .o;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCrisisMsgUpdateParamsResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf VerifyInvariant message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCrisisMsgVerifyInvariant}
 */
export const decodeCosmosCrisisMsgVerifyInvariant = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Decodes a protobuf VerifyInvariant message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCrisisMsgVerifyInvariantResponse}
 */
export const decodeCosmosCrisisMsgVerifyInvariantResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCrisisMsgUpdateParams}
 */
export const decodeCosmosCrisisMsgUpdateParams = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decode_coin]);
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCrisisMsgUpdateParamsResponse}
 */
export const decodeCosmosCrisisMsgUpdateParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link CosmosCrisisMsgVerifyInvariant} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender - the account address of private key to send coins to fee collector account.
 *   - 1: invariant_module_name - name of the invariant module.
 *   - 2: invariant_route - the msg's invariant route.
 */
export const destructCosmosCrisisMsgVerifyInvariant = (g_struct) => [g_struct.sender, g_struct.invariant_module_name, g_struct.invariant_route];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRISIS_MSG_VERIFY_INVARIANT = '/cosmos.crisis.v1beta1.MsgVerifyInvariant';
/**
 * Destructures the fields of a {@link CosmosCrisisMsgVerifyInvariantResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosCrisisMsgVerifyInvariantResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRISIS_MSG_VERIFY_INVARIANT_RESPONSE = '/cosmos.crisis.v1beta1.MsgVerifyInvariantResponse';
/**
 * Destructures the fields of a {@link CosmosCrisisMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: constant_fee - defines the x/crisis parameter.
 */
export const destructCosmosCrisisMsgUpdateParams = (g_struct) => [g_struct.authority, g_struct.constant_fee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRISIS_MSG_UPDATE_PARAMS = '/cosmos.crisis.v1beta1.MsgUpdateParams';
/**
 * Destructures the fields of a {@link CosmosCrisisMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosCrisisMsgUpdateParamsResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRISIS_MSG_UPDATE_PARAMS_RESPONSE = '/cosmos.crisis.v1beta1.MsgUpdateParamsResponse';
//# sourceMappingURL=tx.js.map