import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedCosmosCryptoHdBIP44Params = Encoded<'/cosmos.crypto.hd.v1.BIP44Params'>;
/**
 * Encodes a `BIP44Params` protobuf message: used as path field in ledger item in Record.
 * @param n_purpose - `purpose`: a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
 * @param n_coin_type - `coin_type`: a constant that improves privacy
 * @param n_account - `account`: splits the key space into independent user identities
 * @param b_change - `change`: a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal chain.
 * @param n_address_index - `address_index`: used as child index in BIP32 derivation
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCryptoHdBIP44Params: (n_purpose?: Opt<number>, n_coin_type?: Opt<number>, n_account?: Opt<number>, b_change?: Opt<boolean | 0 | 1>, n_address_index?: Opt<number>) => EncodedCosmosCryptoHdBIP44Params;
/**
 * A decoded protobuf BIP44Params message
 *
 * Tuple where:
 *   - 0: purpose - a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
 *   - 1: coin_type - a constant that improves privacy
 *   - 2: account - splits the key space into independent user identities
 *   - 3: change - a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal chain.
 *   - 4: address_index - used as child index in BIP32 derivation
 */
export type DecodedCosmosCryptoHdBIP44Params = [
    n_purpose?: number,
    n_coin_type?: number,
    n_account?: number,
    b_change?: 0 | 1,
    n_address_index?: number
];
/**
 * Decodes a protobuf BIP44Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoHdBIP44Params}
 */
export declare const decodeCosmosCryptoHdBIP44Params: (atu8_payload: Uint8Array) => DecodedCosmosCryptoHdBIP44Params;
/**
 * Destructures the fields of a {@link CosmosCryptoHdBIP44Params} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: purpose - a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
 *   - 1: coin_type - a constant that improves privacy
 *   - 2: account - splits the key space into independent user identities
 *   - 3: change - a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal chain.
 *   - 4: address_index - used as child index in BIP32 derivation
 */
export declare const destructCosmosCryptoHdBIP44Params: (g_struct: CosmosCryptoHdBIP44Params) => [purpose?: number, coin_type?: number, account?: number, change?: boolean, address_index?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CRYPTO_HD_B_I_P44_PARAMS = "/cosmos.crypto.hd.v1.BIP44Params";
/**
 * JSON serialization of `cosmos.crypto.hd.v1.BIP44Params` - used as path field in ledger item in Record.
 */
export type CosmosCryptoHdBIP44Params = {
    purpose?: number | undefined;
    coin_type?: number | undefined;
    account?: number | undefined;
    change?: boolean | undefined;
    address_index?: number | undefined;
};
