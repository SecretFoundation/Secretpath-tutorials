/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { decodeCosmosCryptoHdBIP44Params } from '../../hd/v1/hd.js';
import { decodeGoogleProtobufAny } from '../../../../google/protobuf/any.js';
/**
 * Encodes a `Record` protobuf message: used for representing a key in the keyring.
 * @param s_name - `name`: represents a name of Record
 * @param atu8_pub_key - `pub_key`: represents a public key in any format
 * @param g_local - `local`: stores the private key locally.
 * @param g_ledger - `ledger`: stores the information about a Ledger key.
 * @param g_multi - `multi`: Multi does not store any other information.
 * @param g_offline - `offline`: Offline does not store any other information.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoKeyringRecord = (s_name, atu8_pub_key, atu8_local, atu8_ledger, atu8_multi, atu8_offline) => Protobuf() // ...
    .s(s_name) // string name = 1
    .b(atu8_pub_key) // Any pub_key = 2
    .b(atu8_local) // Local local = 3
    .b(atu8_ledger) // Ledger ledger = 4
    .b(atu8_multi) // Multi multi = 5
    .b(atu8_offline) // Offline offline = 6
    .o;
/**
 * Encodes a `Local` protobuf message:
 * @param atu8_priv_key - `priv_key`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoKeyringRecordLocal = (atu8_priv_key) => Protobuf() // ...
    .b(atu8_priv_key) // Any priv_key = 1
    .o;
/**
 * Encodes a `Ledger` protobuf message:
 * @param g_path - `path`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoKeyringRecordLedger = (atu8_path) => Protobuf() // ...
    .b(atu8_path) // BIP44Params path = 1
    .o;
/**
 * Encodes a `Multi` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoKeyringRecordMulti = () => Protobuf() // ...
    .o;
/**
 * Encodes a `Offline` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosCryptoKeyringRecordOffline = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf Record message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoKeyringRecord}
 */
export const decodeCosmosCryptoKeyringRecord = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1, 1, 1, 1, 1], [0, decodeGoogleProtobufAny, decodeCosmosCryptoKeyringRecordLocal, decodeCosmosCryptoKeyringRecordLedger, decodeCosmosCryptoKeyringRecordMulti, decodeCosmosCryptoKeyringRecordOffline]);
/**
 * Decodes a protobuf Local message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoKeyringRecordLocal}
 */
export const decodeCosmosCryptoKeyringRecordLocal = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf Ledger message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoKeyringRecordLedger}
 */
export const decodeCosmosCryptoKeyringRecordLedger = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosCryptoHdBIP44Params]);
/**
 * Decodes a protobuf Multi message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoKeyringRecordMulti}
 */
export const decodeCosmosCryptoKeyringRecordMulti = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Offline message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoKeyringRecordOffline}
 */
export const decodeCosmosCryptoKeyringRecordOffline = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link CosmosCryptoKeyringRecord} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: name - represents a name of Record
 *   - 1: pub_key - represents a public key in any format
 *   - 2: local - stores the private key locally.
 *   - 3: ledger - stores the information about a Ledger key.
 *   - 4: multi - Multi does not store any other information.
 *   - 5: offline - Offline does not store any other information.
 */
export const destructCosmosCryptoKeyringRecord = (g_struct) => [g_struct.name, g_struct.pub_key, g_struct.local, g_struct.ledger, g_struct.multi, g_struct.offline];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_KEYRING_RECORD = '/cosmos.crypto.keyring.v1.Record';
/**
 * Destructures the fields of a {@link CosmosCryptoKeyringRecordLocal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: priv_key -
 */
export const destructCosmosCryptoKeyringRecordLocal = (g_struct) => [g_struct.priv_key];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_KEYRING_RECORD_LOCAL = '/cosmos.crypto.keyring.v1.Record.Local';
/**
 * Destructures the fields of a {@link CosmosCryptoKeyringRecordLedger} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: path -
 */
export const destructCosmosCryptoKeyringRecordLedger = (g_struct) => [g_struct.path];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_KEYRING_RECORD_LEDGER = '/cosmos.crypto.keyring.v1.Record.Ledger';
/**
 * Destructures the fields of a {@link CosmosCryptoKeyringRecordMulti} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosCryptoKeyringRecordMulti = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_KEYRING_RECORD_MULTI = '/cosmos.crypto.keyring.v1.Record.Multi';
/**
 * Destructures the fields of a {@link CosmosCryptoKeyringRecordOffline} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosCryptoKeyringRecordOffline = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_CRYPTO_KEYRING_RECORD_OFFLINE = '/cosmos.crypto.keyring.v1.Record.Offline';
//# sourceMappingURL=record.js.map