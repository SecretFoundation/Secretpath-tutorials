import type { Encoded, JsonAny, Opt } from '../../../../api/types.js';
import type { DecodedGoogleProtobufAny } from '../../../google/protobuf/any.js';
export type EncodedCosmosCryptoMultisigLegacyAminoPubKey = Encoded<'/cosmos.crypto.multisig.LegacyAminoPubKey'>;
/**
 * Encodes a `LegacyAminoPubKey` protobuf message: specifies a public key type which nests multiple public keys and a threshold, it uses legacy amino address rules.
 * @param n_threshold - `threshold`:
 * @param a_public_keys - `public_keys`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosCryptoMultisigLegacyAminoPubKey: (n_threshold?: Opt<number>, a_public_keys?: Opt<Uint8Array[]>) => EncodedCosmosCryptoMultisigLegacyAminoPubKey;
/**
 * A decoded protobuf LegacyAminoPubKey message
 *
 * Tuple where:
 *   - 0: threshold -
 *   - 1: public_keys -
 */
export type DecodedCosmosCryptoMultisigLegacyAminoPubKey = [
    n_threshold?: number,
    a_public_keys?: DecodedGoogleProtobufAny[]
];
/**
 * Decodes a protobuf LegacyAminoPubKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosCryptoMultisigLegacyAminoPubKey}
 */
export declare const decodeCosmosCryptoMultisigLegacyAminoPubKey: (atu8_payload: Uint8Array) => DecodedCosmosCryptoMultisigLegacyAminoPubKey;
/**
 * Destructures the fields of a {@link CosmosCryptoMultisigLegacyAminoPubKey} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: threshold -
 *   - 1: public_keys -
 */
export declare const destructCosmosCryptoMultisigLegacyAminoPubKey: (g_struct: CosmosCryptoMultisigLegacyAminoPubKey) => [threshold?: number, public_keys?: JsonAny[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_CRYPTO_MULTISIG_LEGACY_AMINO_PUB_KEY = "/cosmos.crypto.multisig.LegacyAminoPubKey";
/**
 * JSON serialization of `cosmos.crypto.multisig.LegacyAminoPubKey` - specifies a public key type which nests multiple public keys and a threshold, it uses legacy amino address rules.
 */
export type CosmosCryptoMultisigLegacyAminoPubKey = {
    threshold?: number | undefined;
    public_keys?: JsonAny[] | undefined;
};
