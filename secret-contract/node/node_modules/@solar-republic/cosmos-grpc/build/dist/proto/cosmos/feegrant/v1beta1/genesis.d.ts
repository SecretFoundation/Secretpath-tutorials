import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosFeegrantGrant, DecodedCosmosFeegrantGrant } from './feegrant.js';
export type EncodedCosmosFeegrantGenesisState = Encoded<'/cosmos.feegrant.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message: contains a set of fee allowances, persisted from the store
 * @param a_allowances - `allowances`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosFeegrantGenesisState: (a_allowances?: Opt<Encoded<'/cosmos.feegrant.v1beta1.Grant'>[]>) => EncodedCosmosFeegrantGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: allowances -
 */
export type DecodedCosmosFeegrantGenesisState = [
    a_allowances?: DecodedCosmosFeegrantGrant[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantGenesisState}
 */
export declare const decodeCosmosFeegrantGenesisState: (atu8_payload: Uint8Array) => DecodedCosmosFeegrantGenesisState;
/**
 * Destructures the fields of a {@link CosmosFeegrantGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowances -
 */
export declare const destructCosmosFeegrantGenesisState: (g_struct: CosmosFeegrantGenesisState) => [allowances?: CosmosFeegrantGrant[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_GENESIS_STATE = "/cosmos.feegrant.v1beta1.GenesisState";
/**
 * JSON serialization of `cosmos.feegrant.v1beta1.GenesisState` - contains a set of fee allowances, persisted from the store
 */
export type CosmosFeegrantGenesisState = {
    allowances?: CosmosFeegrantGrant[] | undefined;
};
