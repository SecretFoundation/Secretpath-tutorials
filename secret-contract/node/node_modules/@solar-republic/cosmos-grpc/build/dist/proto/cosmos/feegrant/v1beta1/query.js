import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import { decodeCosmosFeegrantGrant } from './feegrant.js';
const SR_LCD_COSMOS_FEEGRANT_QUERY = '/cosmos/feegrant/v1beta1/';
/**
 * Returns granted allwance to the grantee by the granter.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter - the address of the user granting an allowance of their funds.
 * @param sa_grantee - the address of the user being granted an allowance of another user's funds.
 * @returns a tuple where:
 *   - 0: allowance - a allowance granted for grantee by granter.
 */
export const queryCosmosFeegrantAllowance = restful_grpc((sa_granter, sa_grantee) => [SR_LCD_COSMOS_FEEGRANT_QUERY + 'allowance/' + sa_granter + '/' + sa_grantee]);
/**
 * Returns all the grants for the given grantee address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_grantee -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: allowances - allowance's granted for grantee by granter.
 *   - 1: pagination - allowance's granted for grantee by granter.
 */
export const queryCosmosFeegrantAllowances = restful_grpc((sa_grantee, g_pagination) => [SR_LCD_COSMOS_FEEGRANT_QUERY + 'allowances/' + sa_grantee, {
        pagination: g_pagination,
    }]);
/**
 * Returns all the grants given by an address Since: cosmos-sdk 0.46
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_granter -
 * @param g_pagination - defines an pagination for the request.
 * @returns a tuple where:
 *   - 0: allowances - that have been issued by the granter.
 *   - 1: pagination - that have been issued by the granter.
 */
export const queryCosmosFeegrantAllowancesByGranter = restful_grpc((sa_granter, g_pagination) => [SR_LCD_COSMOS_FEEGRANT_QUERY + 'issued/' + sa_granter, {
        pagination: g_pagination,
    }]);
/**
 * Encodes a `QueryAllowanceRequest` protobuf message: the request type for the Query/Allowance RPC method.
 * @param sa_granter - `granter`: the address of the user granting an allowance of their funds.
 * @param sa_grantee - `grantee`: the address of the user being granted an allowance of another user's funds.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowanceRequest = (sa_granter, sa_grantee) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .s(sa_grantee) // string grantee = 2
    .o;
/**
 * Encodes a `QueryAllowanceResponse` protobuf message: the response type for the Query/Allowance RPC method.
 * @param g_allowance - `allowance`: a allowance granted for grantee by granter.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowanceResponse = (atu8_allowance) => Protobuf() // ...
    .b(atu8_allowance) // Grant allowance = 1
    .o;
/**
 * Encodes a `QueryAllowancesRequest` protobuf message: the request type for the Query/Allowances RPC method.
 * @param sa_grantee - `grantee`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowancesRequest = (sa_grantee, atu8_pagination) => Protobuf() // ...
    .s(sa_grantee) // string grantee = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryAllowancesResponse` protobuf message: the response type for the Query/Allowances RPC method.
 * @param a_allowances - `allowances`: allowance's granted for grantee by granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowancesResponse = (a_allowances, atu8_pagination) => Protobuf() // ...
    .B(a_allowances) // Grant[] allowances = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryAllowancesByGranterRequest` protobuf message: the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 * @param sa_granter - `granter`:
 * @param g_pagination - `pagination`: defines an pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowancesByGranterRequest = (sa_granter, atu8_pagination) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryAllowancesByGranterResponse` protobuf message: the response type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46
 * @param a_allowances - `allowances`: that have been issued by the granter.
 * @param g_pagination - `pagination`: defines an pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantQueryAllowancesByGranterResponse = (a_allowances, atu8_pagination) => Protobuf() // ...
    .B(a_allowances) // Grant[] allowances = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Decodes a protobuf QueryAllowanceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowanceRequest}
 */
export const decodeCosmosFeegrantQueryAllowanceRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf QueryAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowanceResponse}
 */
export const decodeCosmosFeegrantQueryAllowanceResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosFeegrantGrant]);
/**
 * Decodes a protobuf QueryAllowancesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesRequest}
 */
export const decodeCosmosFeegrantQueryAllowancesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryAllowances message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesResponse}
 */
export const decodeCosmosFeegrantQueryAllowancesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosFeegrantGrant, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryAllowancesByGranterRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesByGranterRequest}
 */
export const decodeCosmosFeegrantQueryAllowancesByGranterRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryAllowancesByGranter message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantQueryAllowancesByGranterResponse}
 */
export const decodeCosmosFeegrantQueryAllowancesByGranterResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosFeegrantGrant, decodeCosmosBaseQueryPageResponse]);
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowanceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter - the address of the user granting an allowance of their funds.
 *   - 1: grantee - the address of the user being granted an allowance of another user's funds.
 */
export const destructCosmosFeegrantQueryAllowanceRequest = (g_struct) => [g_struct.granter, g_struct.grantee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCE_REQUEST = '/cosmos.feegrant.v1beta1.QueryAllowanceRequest';
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowance - a allowance granted for grantee by granter.
 */
export const destructCosmosFeegrantQueryAllowanceResponse = (g_struct) => [g_struct.allowance];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCE_RESPONSE = '/cosmos.feegrant.v1beta1.QueryAllowanceResponse';
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: grantee -
 *   - 1: pagination - defines an pagination for the request.
 */
export const destructCosmosFeegrantQueryAllowancesRequest = (g_struct) => [g_struct.grantee, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_REQUEST = '/cosmos.feegrant.v1beta1.QueryAllowancesRequest';
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowances - allowance's granted for grantee by granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export const destructCosmosFeegrantQueryAllowancesResponse = (g_struct) => [g_struct.allowances, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_RESPONSE = '/cosmos.feegrant.v1beta1.QueryAllowancesResponse';
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesByGranterRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter -
 *   - 1: pagination - defines an pagination for the request.
 */
export const destructCosmosFeegrantQueryAllowancesByGranterRequest = (g_struct) => [g_struct.granter, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_BY_GRANTER_REQUEST = '/cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest';
/**
 * Destructures the fields of a {@link CosmosFeegrantQueryAllowancesByGranterResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowances - that have been issued by the granter.
 *   - 1: pagination - defines an pagination for the response.
 */
export const destructCosmosFeegrantQueryAllowancesByGranterResponse = (g_struct) => [g_struct.allowances, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_QUERY_ALLOWANCES_BY_GRANTER_RESPONSE = '/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse';
//# sourceMappingURL=query.js.map