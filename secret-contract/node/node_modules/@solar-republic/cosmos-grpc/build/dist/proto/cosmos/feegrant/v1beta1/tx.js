import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeGoogleProtobufAny } from '../../../google/protobuf/any.js';
/**
 * Encodes a `MsgGrantAllowance` protobuf message: adds permission for Grantee to spend up to Allowance of fees from the account of Granter.
 * @param sa_granter - `granter`: the address of the user granting an allowance of their funds.
 * @param sa_grantee - `grantee`: the address of the user being granted an allowance of another user's funds.
 * @param atu8_allowance - `allowance`: can be any of basic, periodic, allowed fee allowance.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantMsgGrantAllowance = (sa_granter, sa_grantee, atu8_allowance) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .s(sa_grantee) // string grantee = 2
    .b(atu8_allowance) // Any allowance = 3
    .o;
/**
 * Encodes a `MsgGrantAllowanceResponse` protobuf message: defines the Msg/GrantAllowanceResponse response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantMsgGrantAllowanceResponse = () => Protobuf() // ...
    .o;
/**
 * Encodes a `MsgRevokeAllowance` protobuf message: removes any existing Allowance from Granter to Grantee.
 * @param sa_granter - `granter`: the address of the user granting an allowance of their funds.
 * @param sa_grantee - `grantee`: the address of the user being granted an allowance of another user's funds.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantMsgRevokeAllowance = (sa_granter, sa_grantee) => Protobuf() // ...
    .s(sa_granter) // string granter = 1
    .s(sa_grantee) // string grantee = 2
    .o;
/**
 * Encodes a `MsgRevokeAllowanceResponse` protobuf message: defines the Msg/RevokeAllowanceResponse response type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosFeegrantMsgRevokeAllowanceResponse = () => Protobuf() // ...
    .o;
/**
 * Decodes a protobuf GrantAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantMsgGrantAllowance}
 */
export const decodeCosmosFeegrantMsgGrantAllowance = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1], [0, 0, decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf GrantAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantMsgGrantAllowanceResponse}
 */
export const decodeCosmosFeegrantMsgGrantAllowanceResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf RevokeAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantMsgRevokeAllowance}
 */
export const decodeCosmosFeegrantMsgRevokeAllowance = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf RevokeAllowance message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosFeegrantMsgRevokeAllowanceResponse}
 */
export const decodeCosmosFeegrantMsgRevokeAllowanceResponse = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Destructures the fields of a {@link CosmosFeegrantMsgGrantAllowance} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter - the address of the user granting an allowance of their funds.
 *   - 1: grantee - the address of the user being granted an allowance of another user's funds.
 *   - 2: allowance - can be any of basic, periodic, allowed fee allowance.
 */
export const destructCosmosFeegrantMsgGrantAllowance = (g_struct) => [g_struct.granter, g_struct.grantee, g_struct.allowance];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_MSG_GRANT_ALLOWANCE = '/cosmos.feegrant.v1beta1.MsgGrantAllowance';
/**
 * Destructures the fields of a {@link CosmosFeegrantMsgGrantAllowanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosFeegrantMsgGrantAllowanceResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_MSG_GRANT_ALLOWANCE_RESPONSE = '/cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse';
/**
 * Destructures the fields of a {@link CosmosFeegrantMsgRevokeAllowance} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: granter - the address of the user granting an allowance of their funds.
 *   - 1: grantee - the address of the user being granted an allowance of another user's funds.
 */
export const destructCosmosFeegrantMsgRevokeAllowance = (g_struct) => [g_struct.granter, g_struct.grantee];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_MSG_REVOKE_ALLOWANCE = '/cosmos.feegrant.v1beta1.MsgRevokeAllowance';
/**
 * Destructures the fields of a {@link CosmosFeegrantMsgRevokeAllowanceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosFeegrantMsgRevokeAllowanceResponse = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_FEEGRANT_MSG_REVOKE_ALLOWANCE_RESPONSE = '/cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse';
//# sourceMappingURL=tx.js.map