import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeCosmosGovDeposit, decodeCosmosGovVote, decodeCosmosGovProposal, decodeCosmosGovDepositParams, decodeCosmosGovVotingParams, decodeCosmosGovTallyParams, decodeCosmosGovParams } from './gov.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the gov module's genesis state.
 * @param sg_starting_proposal_id - `starting_proposal_id`: the ID of the starting proposal.
 * @param a_deposits - `deposits`: defines all the deposits present at genesis.
 * @param a_votes - `votes`: defines all the votes present at genesis.
 * @param a_proposals - `proposals`: defines all the proposals present at genesis.
 * @param g_deposit_params - `deposit_params`: Deprecated: Prefer to use `params` instead. deposit_params defines all the paramaters of related to deposit.
 * @param g_voting_params - `voting_params`: Deprecated: Prefer to use `params` instead. voting_params defines all the paramaters of related to voting.
 * @param g_tally_params - `tally_params`: Deprecated: Prefer to use `params` instead. tally_params defines all the paramaters of related to tally.
 * @param g_params - `params`: defines all the paramaters of x/gov module. Since: cosmos-sdk 0.47
 * @param s_constitution - `constitution`: The constitution allows builders to lay a foundation and define purpose. This is an immutable string set in genesis. There are no amendments, to go outside of scope, just fork. constitution is an immutable string in genesis for a chain builder to lay out their vision, ideas and ideals. Since: cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosGovGenesisState = (sg_starting_proposal_id, a_deposits, a_votes, a_proposals, atu8_deposit_params, atu8_voting_params, atu8_tally_params, atu8_params, s_constitution) => Protobuf() // ...
    .g(sg_starting_proposal_id) // uint64 starting_proposal_id = 1
    .B(a_deposits) // Deposit[] deposits = 2
    .B(a_votes) // Vote[] votes = 3
    .B(a_proposals) // Proposal[] proposals = 4
    .b(atu8_deposit_params) // DepositParams deposit_params = 5
    .b(atu8_voting_params) // VotingParams voting_params = 6
    .b(atu8_tally_params) // TallyParams tally_params = 7
    .b(atu8_params) // Params params = 8
    .s(s_constitution) // string constitution = 9
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosGovGenesisState}
 */
export const decodeCosmosGovGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [3, 0, 0, 0, 1, 1, 1, 1, 5], [0, decodeCosmosGovDeposit, decodeCosmosGovVote, decodeCosmosGovProposal, decodeCosmosGovDepositParams, decodeCosmosGovVotingParams, decodeCosmosGovTallyParams, decodeCosmosGovParams]);
/**
 * Destructures the fields of a {@link CosmosGovGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: starting_proposal_id - the ID of the starting proposal.
 *   - 1: deposits - defines all the deposits present at genesis.
 *   - 2: votes - defines all the votes present at genesis.
 *   - 3: proposals - defines all the proposals present at genesis.
 *   - 4: deposit_params - Deprecated: Prefer to use `params` instead. deposit_params defines all the paramaters of related to deposit.
 *   - 5: voting_params - Deprecated: Prefer to use `params` instead. voting_params defines all the paramaters of related to voting.
 *   - 6: tally_params - Deprecated: Prefer to use `params` instead. tally_params defines all the paramaters of related to tally.
 *   - 7: params - defines all the paramaters of x/gov module. Since: cosmos-sdk 0.47
 *   - 8: constitution - The constitution allows builders to lay a foundation and define purpose. This is an immutable string set in genesis. There are no amendments, to go outside of scope, just fork. constitution is an immutable string in genesis for a chain builder to lay out their vision, ideas and ideals. Since: cosmos-sdk 0.50
 */
export const destructCosmosGovGenesisState = (g_struct) => [g_struct.starting_proposal_id, g_struct.deposits, g_struct.votes, g_struct.proposals, g_struct.deposit_params, g_struct.voting_params, g_struct.tally_params, g_struct.params, g_struct.constitution];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_GOV_GENESIS_STATE = '/cosmos.gov.v1.GenesisState';
//# sourceMappingURL=genesis.js.map