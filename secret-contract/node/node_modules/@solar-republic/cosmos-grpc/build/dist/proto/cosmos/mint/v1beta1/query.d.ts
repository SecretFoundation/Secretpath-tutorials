/// <reference types="node" />
import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosMintParams, DecodedCosmosMintParams } from './mint.js';
export type EncodedCosmosMintQueryParamsRequest = Encoded<'/cosmos.mint.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosMintQueryParamsResponse = Encoded<'/cosmos.mint.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosMintQueryInflationRequest = Encoded<'/cosmos.mint.v1beta1.QueryInflationRequest'>;
export type EncodedCosmosMintQueryInflationResponse = Encoded<'/cosmos.mint.v1beta1.QueryInflationResponse'>;
export type EncodedCosmosMintQueryAnnualProvisionsRequest = Encoded<'/cosmos.mint.v1beta1.QueryAnnualProvisionsRequest'>;
export type EncodedCosmosMintQueryAnnualProvisionsResponse = Encoded<'/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse'>;
/**
 * Returns the total set of minting parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryCosmosMintParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosMintQueryParamsResponse>>;
/**
 * Returns the current minting inflation value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export declare const queryCosmosMintInflation: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosMintQueryInflationResponse>>;
/**
 * Current minting annual provisions value.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export declare const queryCosmosMintAnnualProvisions: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosMintQueryAnnualProvisionsResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryParamsRequest: () => EncodedCosmosMintQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryParamsResponse: (atu8_params?: Opt<Encoded<'/cosmos.mint.v1beta1.Params'>>) => EncodedCosmosMintQueryParamsResponse;
/**
 * Encodes a `QueryInflationRequest` protobuf message: the request type for the Query/Inflation RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryInflationRequest: () => EncodedCosmosMintQueryInflationRequest;
/**
 * Encodes a `QueryInflationResponse` protobuf message: the response type for the Query/Inflation RPC method.
 * @param atu8_inflation - `inflation`: the current minting inflation value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryInflationResponse: (atu8_inflation?: Opt<Uint8Array>) => EncodedCosmosMintQueryInflationResponse;
/**
 * Encodes a `QueryAnnualProvisionsRequest` protobuf message: the request type for the Query/AnnualProvisions RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryAnnualProvisionsRequest: () => EncodedCosmosMintQueryAnnualProvisionsRequest;
/**
 * Encodes a `QueryAnnualProvisionsResponse` protobuf message: the response type for the Query/AnnualProvisions RPC method.
 * @param atu8_annual_provisions - `annual_provisions`: the current minting annual provisions value.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosMintQueryAnnualProvisionsResponse: (atu8_annual_provisions?: Opt<Uint8Array>) => EncodedCosmosMintQueryAnnualProvisionsResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosMintQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryParamsRequest}
 */
export declare const decodeCosmosMintQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedCosmosMintQueryParamsResponse = [
    a_params?: DecodedCosmosMintParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryParamsResponse}
 */
export declare const decodeCosmosMintQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosMintQueryParamsResponse;
/**
 * A decoded protobuf QueryInflationRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosMintQueryInflationRequest = [];
/**
 * Decodes a protobuf QueryInflationRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryInflationRequest}
 */
export declare const decodeCosmosMintQueryInflationRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryInflation message
 *
 * Alias for: inflation - the current minting inflation value.
 */
export type DecodedCosmosMintQueryInflationResponse = [
    atu8_inflation?: Uint8Array
];
/**
 * Decodes a protobuf QueryInflation message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryInflationResponse}
 */
export declare const decodeCosmosMintQueryInflationResponse: (atu8_payload: Uint8Array) => DecodedCosmosMintQueryInflationResponse;
/**
 * A decoded protobuf QueryAnnualProvisionsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosMintQueryAnnualProvisionsRequest = [];
/**
 * Decodes a protobuf QueryAnnualProvisionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryAnnualProvisionsRequest}
 */
export declare const decodeCosmosMintQueryAnnualProvisionsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryAnnualProvisions message
 *
 * Alias for: annual_provisions - the current minting annual provisions value.
 */
export type DecodedCosmosMintQueryAnnualProvisionsResponse = [
    atu8_annual_provisions?: Uint8Array
];
/**
 * Decodes a protobuf QueryAnnualProvisions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosMintQueryAnnualProvisionsResponse}
 */
export declare const decodeCosmosMintQueryAnnualProvisionsResponse: (atu8_payload: Uint8Array) => DecodedCosmosMintQueryAnnualProvisionsResponse;
/**
 * Destructures the fields of a {@link CosmosMintQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosMintQueryParamsRequest: (g_struct: CosmosMintQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_PARAMS_REQUEST = "/cosmos.mint.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type CosmosMintQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosMintQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructCosmosMintQueryParamsResponse: (g_struct: CosmosMintQueryParamsResponse) => [params?: CosmosMintParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_PARAMS_RESPONSE = "/cosmos.mint.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type CosmosMintQueryParamsResponse = {
    params?: CosmosMintParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosMintQueryInflationRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosMintQueryInflationRequest: (g_struct: CosmosMintQueryInflationRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_INFLATION_REQUEST = "/cosmos.mint.v1beta1.QueryInflationRequest";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryInflationRequest` - the request type for the Query/Inflation RPC method.
 */
export type CosmosMintQueryInflationRequest = {};
/**
 * Destructures the fields of a {@link CosmosMintQueryInflationResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: inflation - the current minting inflation value.
 */
export declare const destructCosmosMintQueryInflationResponse: (g_struct: CosmosMintQueryInflationResponse) => [inflation?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_INFLATION_RESPONSE = "/cosmos.mint.v1beta1.QueryInflationResponse";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryInflationResponse` - the response type for the Query/Inflation RPC method.
 */
export type CosmosMintQueryInflationResponse = {
    inflation?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosMintQueryAnnualProvisionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosMintQueryAnnualProvisionsRequest: (g_struct: CosmosMintQueryAnnualProvisionsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_ANNUAL_PROVISIONS_REQUEST = "/cosmos.mint.v1beta1.QueryAnnualProvisionsRequest";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryAnnualProvisionsRequest` - the request type for the Query/AnnualProvisions RPC method.
 */
export type CosmosMintQueryAnnualProvisionsRequest = {};
/**
 * Destructures the fields of a {@link CosmosMintQueryAnnualProvisionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: annual_provisions - the current minting annual provisions value.
 */
export declare const destructCosmosMintQueryAnnualProvisionsResponse: (g_struct: CosmosMintQueryAnnualProvisionsResponse) => [annual_provisions?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_MINT_QUERY_ANNUAL_PROVISIONS_RESPONSE = "/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse";
/**
 * JSON serialization of `cosmos.mint.v1beta1.QueryAnnualProvisionsResponse` - the response type for the Query/AnnualProvisions RPC method.
 */
export type CosmosMintQueryAnnualProvisionsResponse = {
    annual_provisions?: CwBase64 | undefined;
};
