import { __UNDEFINED } from '@blake.regalia/belt';
import { parse_duration, parse_timestamp } from '../../../../../api/json.js';
import { decode_protobuf, decode_temporal } from '../../../../../api/protobuf-reader.js';
import { Protobuf, temporal } from '../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../base/query/v1beta1/pagination.js';
import { decodeGoogleProtobufAny } from '../../../../google/protobuf/any.js';
/**
 * Encodes a `GetRequest` protobuf message: the Query/Get request type.
 * @param s_message_name - `message_name`: the fully-qualified message name of the ORM table being queried.
 * @param s_index - `index`: the index fields expression used in orm definitions. If it is empty, the table's primary key is assumed. If it is non-empty, it must refer to an unique index.
 * @param a_values - `values`: the values of the fields corresponding to the requested index. There must be as many values provided as there are fields in the index and these values must correspond to the index field types.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryGetRequest = (s_message_name, s_index, a_values) => Protobuf() // ...
    .s(s_message_name) // string message_name = 1
    .s(s_index) // string index = 2
    .B(a_values) // IndexValue[] values = 3
    .o;
/**
 * Encodes a `GetResponse` protobuf message: the Query/Get response type.
 * @param atu8_result - `result`: the result of the get query. If no value is found, the gRPC status code NOT_FOUND will be returned.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryGetResponse = (atu8_result) => Protobuf() // ...
    .b(atu8_result) // Any result = 1
    .o;
/**
 * Encodes a `ListRequest` protobuf message: the Query/List request type.
 * @param s_message_name - `message_name`: the fully-qualified message name of the ORM table being queried.
 * @param s_index - `index`: the index fields expression used in orm definitions. If it is empty, the table's primary key is assumed.
 * @param g_prefix - `prefix`: defines a prefix query.
 * @param g_range - `range`: defines a range query.
 * @param g_pagination - `pagination`: the pagination request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryListRequest = (s_message_name, s_index, atu8_prefix, atu8_range, atu8_pagination) => Protobuf() // ...
    .s(s_message_name) // string message_name = 1
    .s(s_index) // string index = 2
    .b(atu8_prefix) // Prefix prefix = 3
    .b(atu8_range) // Range range = 4
    .b(atu8_pagination) // PageRequest pagination = 5
    .o;
/**
 * Encodes a `ListResponse` protobuf message: the Query/List response type.
 * @param a_results - `results`: the results of the query.
 * @param g_pagination - `pagination`: the pagination response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryListResponse = (a_results, atu8_pagination) => Protobuf() // ...
    .B(a_results) // Any[] results = 1
    .b(atu8_pagination, 5) // PageResponse pagination = 5
    .o;
/**
 * Encodes a `IndexValue` protobuf message: represents the value of a field in an ORM index expression.
 * @param sg_uint - `uint`: specifies a value for an uint32, fixed32, uint64, or fixed64 index field.
 * @param sg_int - `int`: 64 specifies a value for an int32, sfixed32, int64, or sfixed64 index field.
 * @param s_str - `str`: specifies a value for a string index field.
 * @param atu8_bytes - `bytes`: specifies a value for a bytes index field.
 * @param s_enum - `enum`: specifies a value for an enum index field.
 * @param b_bool - `bool`: specifies a value for a bool index field.
 * @param xt_timestamp - `timestamp`: specifies a value for a timestamp index field.
 * @param xt_duration - `duration`: specifies a value for a duration index field.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryIndexValue = (sg_uint, sg_int, s_str, atu8_bytes, s_enum, b_bool, xt_timestamp, xt_duration) => Protobuf() // ...
    .g(sg_uint) // uint64 uint = 1
    .g(sg_int) // int32 int = 2
    .s(s_str) // string str = 3
    .b(atu8_bytes) // bytes bytes = 4
    .s(s_enum) // string enum = 5
    .v(b_bool) // boolean bool = 6
    .b(temporal(xt_timestamp)) // Timestamp timestamp = 7
    .b(temporal(xt_duration)) // Duration duration = 8
    .o;
/**
 * Encodes a `Prefix` protobuf message:
 * @param a_values - `values`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryListRequestPrefix = (a_values) => Protobuf() // ...
    .B(a_values) // IndexValue[] values = 1
    .o;
/**
 * Encodes a `Range` protobuf message:
 * @param a_starts - `start`:
 * @param a_ends - `end`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmQueryListRequestRange = (a_starts, a_ends) => Protobuf() // ...
    .B(a_starts) // IndexValue[] start = 1
    .B(a_ends) // IndexValue[] end = 2
    .o;
/**
 * Decodes a protobuf GetRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryGetRequest}
 */
export const decodeCosmosOrmQueryGetRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeCosmosOrmQueryIndexValue]);
/**
 * Decodes a protobuf Get message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryGetResponse}
 */
export const decodeCosmosOrmQueryGetResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf ListRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryListRequest}
 */
export const decodeCosmosOrmQueryListRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1, 1, 1], [0, 0, decodeCosmosOrmQueryListRequestPrefix, decodeCosmosOrmQueryListRequestRange, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf List message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedCosmosOrmQueryListResponse}
 */
export const decodeCosmosOrmQueryListResponse = ((atu8_payload, [a_results, , , , a_pagination] = decode_protobuf(atu8_payload, [0, 0, 0, 0, 1], [decodeGoogleProtobufAny, 0, 0, 0, decodeCosmosBaseQueryPageResponse])) => [a_results, __UNDEFINED, __UNDEFINED, __UNDEFINED, a_pagination]);
/**
 * Decodes a protobuf IndexValue message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryIndexValue}
 */
export const decodeCosmosOrmQueryIndexValue = (atu8_payload) => decode_protobuf(atu8_payload, [3, 3, 5, 1, 5, 1, [3, 1], [3, 1]], [0, 0, 0, 0, 0, 0, decode_temporal, decode_temporal]);
/**
 * Decodes a protobuf Prefix message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryListRequestPrefix}
 */
export const decodeCosmosOrmQueryListRequestPrefix = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeCosmosOrmQueryIndexValue]);
/**
 * Decodes a protobuf Range message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmQueryListRequestRange}
 */
export const decodeCosmosOrmQueryListRequestRange = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0], [decodeCosmosOrmQueryIndexValue, decodeCosmosOrmQueryIndexValue]);
/**
 * Destructures the fields of a {@link CosmosOrmQueryGetRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: message_name - the fully-qualified message name of the ORM table being queried.
 *   - 1: index - the index fields expression used in orm definitions. If it is empty, the table's primary key is assumed. If it is non-empty, it must refer to an unique index.
 *   - 2: values - the values of the fields corresponding to the requested index. There must be as many values provided as there are fields in the index and these values must correspond to the index field types.
 */
export const destructCosmosOrmQueryGetRequest = (g_struct) => [g_struct.message_name, g_struct.index, g_struct.values];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_GET_REQUEST = '/cosmos.orm.query.v1alpha1.GetRequest';
/**
 * Destructures the fields of a {@link CosmosOrmQueryIndexValue} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: uint - specifies a value for an uint32, fixed32, uint64, or fixed64 index field.
 *   - 1: int - 64 specifies a value for an int32, sfixed32, int64, or sfixed64 index field.
 *   - 2: str - specifies a value for a string index field.
 *   - 3: bytes - specifies a value for a bytes index field.
 *   - 4: enum - specifies a value for an enum index field.
 *   - 5: bool - specifies a value for a bool index field.
 *   - 6: timestamp - specifies a value for a timestamp index field.
 *   - 7: duration - specifies a value for a duration index field.
 */
export const destructCosmosOrmQueryIndexValue = (g_struct) => [g_struct.uint, g_struct.int, g_struct.str, safe_base64_to_bytes(g_struct.bytes), g_struct.enum, g_struct.bool, parse_timestamp(g_struct.timestamp), parse_duration(g_struct.duration)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_INDEX_VALUE = '/cosmos.orm.query.v1alpha1.IndexValue';
/**
 * Destructures the fields of a {@link CosmosOrmQueryGetResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: result - the result of the get query. If no value is found, the gRPC status code NOT_FOUND will be returned.
 */
export const destructCosmosOrmQueryGetResponse = (g_struct) => [g_struct.result];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_GET_RESPONSE = '/cosmos.orm.query.v1alpha1.GetResponse';
/**
 * Destructures the fields of a {@link CosmosOrmQueryListRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: message_name - the fully-qualified message name of the ORM table being queried.
 *   - 1: index - the index fields expression used in orm definitions. If it is empty, the table's primary key is assumed.
 *   - 2: prefix - defines a prefix query.
 *   - 3: range - defines a range query.
 *   - 4: pagination - the pagination request.
 */
export const destructCosmosOrmQueryListRequest = (g_struct) => [g_struct.message_name, g_struct.index, g_struct.prefix, g_struct.range, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_LIST_REQUEST = '/cosmos.orm.query.v1alpha1.ListRequest';
/**
 * Destructures the fields of a {@link CosmosOrmQueryListRequestPrefix} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: values -
 */
export const destructCosmosOrmQueryListRequestPrefix = (g_struct) => [g_struct.values];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_LIST_REQUEST_PREFIX = '/cosmos.orm.query.v1alpha1.ListRequest.Prefix';
/**
 * Destructures the fields of a {@link CosmosOrmQueryListRequestRange} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: start -
 *   - 1: end -
 */
export const destructCosmosOrmQueryListRequestRange = (g_struct) => [g_struct.start, g_struct.end];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_LIST_REQUEST_RANGE = '/cosmos.orm.query.v1alpha1.ListRequest.Range';
/**
 * Destructures the fields of a {@link CosmosOrmQueryListResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: results - the results of the query.
 *   - 4: pagination - the pagination response.
 */
export const destructCosmosOrmQueryListResponse = (g_struct) => [g_struct.results, __UNDEFINED, __UNDEFINED, __UNDEFINED, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_QUERY_LIST_RESPONSE = '/cosmos.orm.query.v1alpha1.ListResponse';
//# sourceMappingURL=query.js.map