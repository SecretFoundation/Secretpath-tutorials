import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `ModuleSchemaDescriptor` protobuf message: describe's a module's ORM schema.
 * @param a_schema_files - `schema_file`:
 * @param atu8_prefix - `prefix`: an optional prefix that precedes all keys in this module's store.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmModuleSchemaDescriptor = (a_schema_files, atu8_prefix) => Protobuf() // ...
    .B(a_schema_files) // FileEntry[] schema_file = 1
    .b(atu8_prefix) // bytes prefix = 2
    .o;
/**
 * Encodes a `FileEntry` protobuf message:
 * @param n_id - `id`:
 * @param s_proto_file_name - `proto_file_name`:
 * @param xc_storage_type - `storage_type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosOrmModuleSchemaDescriptorFileEntry = (n_id, s_proto_file_name, xc_storage_type) => Protobuf() // ...
    .v(n_id) // uint32 id = 1
    .s(s_proto_file_name) // string proto_file_name = 2
    .v(xc_storage_type) // StorageType storage_type = 3
    .o;
/**
 * Decodes a protobuf ModuleSchemaDescriptor message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmModuleSchemaDescriptor}
 */
export const decodeCosmosOrmModuleSchemaDescriptor = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosOrmModuleSchemaDescriptorFileEntry]);
/**
 * Decodes a protobuf FileEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosOrmModuleSchemaDescriptorFileEntry}
 */
export const decodeCosmosOrmModuleSchemaDescriptorFileEntry = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5, 1]);
/**
 * Destructures the fields of a {@link CosmosOrmModuleSchemaDescriptor} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: schema_file -
 *   - 1: prefix - an optional prefix that precedes all keys in this module's store.
 */
export const destructCosmosOrmModuleSchemaDescriptor = (g_struct) => [g_struct.schema_file, safe_base64_to_bytes(g_struct.prefix)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_MODULE_SCHEMA_DESCRIPTOR = '/cosmos.orm.v1alpha1.ModuleSchemaDescriptor';
/**
 * Destructures the fields of a {@link CosmosOrmModuleSchemaDescriptorFileEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id -
 *   - 1: proto_file_name -
 *   - 2: storage_type -
 */
export const destructCosmosOrmModuleSchemaDescriptorFileEntry = (g_struct) => [g_struct.id, g_struct.proto_file_name, g_struct.storage_type];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_ORM_MODULE_SCHEMA_DESCRIPTOR_FILE_ENTRY = '/cosmos.orm.v1alpha1.ModuleSchemaDescriptor.FileEntry';
/**
 * Protobuf enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_DEFAULT_UNSPECIFIED** - indicates the persistent storage where all data is stored in the regular Merkle-tree backed KV-store.
 *
 * Belongs to enum type {@link ProtoEnumCosmosOrmStorageType}
 */
export const XC_PROTO_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED = 0;
/**
 * JSON enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_DEFAULT_UNSPECIFIED** - indicates the persistent storage where all data is stored in the regular Merkle-tree backed KV-store.
 *
 * Belongs to enum type {@link JsonEnumCosmosOrmStorageType}
 */
export const SI_JSON_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED = 'STORAGE_TYPE_DEFAULT_UNSPECIFIED';
/**
 * Protobuf enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_MEMORY** - indicates in-memory storage that will be reloaded every time an app restarts. Tables with this type of storage will by default be ignored when importing and exporting a module's state from JSON.
 *
 * Belongs to enum type {@link ProtoEnumCosmosOrmStorageType}
 */
export const XC_PROTO_COSMOS_ORM_STORAGE_TYPE_MEMORY = 1;
/**
 * JSON enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_MEMORY** - indicates in-memory storage that will be reloaded every time an app restarts. Tables with this type of storage will by default be ignored when importing and exporting a module's state from JSON.
 *
 * Belongs to enum type {@link JsonEnumCosmosOrmStorageType}
 */
export const SI_JSON_COSMOS_ORM_STORAGE_TYPE_MEMORY = 'STORAGE_TYPE_MEMORY';
/**
 * Protobuf enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_TRANSIENT** - indicates transient storage that is reset at the end of every block. Tables with this type of storage will by default be ignored when importing and exporting a module's state from JSON.
 *
 * Belongs to enum type {@link ProtoEnumCosmosOrmStorageType}
 */
export const XC_PROTO_COSMOS_ORM_STORAGE_TYPE_TRANSIENT = 2;
/**
 * JSON enum value for `cosmos.orm.v1alpha1.StorageType`.
 *
 * **STORAGE_TYPE_TRANSIENT** - indicates transient storage that is reset at the end of every block. Tables with this type of storage will by default be ignored when importing and exporting a module's state from JSON.
 *
 * Belongs to enum type {@link JsonEnumCosmosOrmStorageType}
 */
export const SI_JSON_COSMOS_ORM_STORAGE_TYPE_TRANSIENT = 'STORAGE_TYPE_TRANSIENT';
/**
 * Maps a protobuf enum int value for `cosmos.orm.v1alpha1.StorageType` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumCosmosOrmStorageType = {
    [XC_PROTO_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED]: SI_JSON_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED,
    [XC_PROTO_COSMOS_ORM_STORAGE_TYPE_MEMORY]: SI_JSON_COSMOS_ORM_STORAGE_TYPE_MEMORY,
    [XC_PROTO_COSMOS_ORM_STORAGE_TYPE_TRANSIENT]: SI_JSON_COSMOS_ORM_STORAGE_TYPE_TRANSIENT,
};
/**
 * Maps a JSON enum string value for `cosmos.orm.v1alpha1.StorageType` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumCosmosOrmStorageType = {
    [SI_JSON_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED]: XC_PROTO_COSMOS_ORM_STORAGE_TYPE_DEFAULT_UNSPECIFIED,
    [SI_JSON_COSMOS_ORM_STORAGE_TYPE_MEMORY]: XC_PROTO_COSMOS_ORM_STORAGE_TYPE_MEMORY,
    [SI_JSON_COSMOS_ORM_STORAGE_TYPE_TRANSIENT]: XC_PROTO_COSMOS_ORM_STORAGE_TYPE_TRANSIENT,
};
//# sourceMappingURL=schema.js.map