/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeGoogleProtobufFileDescriptorProto } from '../../../google/protobuf/descriptor.js';
/**
 * Encodes a `FileDescriptorsRequest` protobuf message: the Query/FileDescriptors request type.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosReflectionFileDescriptorsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `FileDescriptorsResponse` protobuf message: the Query/FileDescriptors response type.
 * @param a_files - `files`: the file descriptors.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosReflectionFileDescriptorsResponse = (a_files) => Protobuf() // ...
    .B(a_files) // FileDescriptorProto[] files = 1
    .o;
/**
 * Decodes a protobuf FileDescriptorsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosReflectionFileDescriptorsRequest}
 */
export const decodeCosmosReflectionFileDescriptorsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf FileDescriptors message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosReflectionFileDescriptorsResponse}
 */
export const decodeCosmosReflectionFileDescriptorsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeGoogleProtobufFileDescriptorProto]);
/**
 * Destructures the fields of a {@link CosmosReflectionFileDescriptorsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosReflectionFileDescriptorsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_REFLECTION_FILE_DESCRIPTORS_REQUEST = '/cosmos.reflection.v1.FileDescriptorsRequest';
/**
 * Destructures the fields of a {@link CosmosReflectionFileDescriptorsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: files - the file descriptors.
 */
export const destructCosmosReflectionFileDescriptorsResponse = (g_struct) => [g_struct.files];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_REFLECTION_FILE_DESCRIPTORS_RESPONSE = '/cosmos.reflection.v1.FileDescriptorsResponse';
//# sourceMappingURL=reflection.js.map