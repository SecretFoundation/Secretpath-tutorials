import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeCosmosSlashingParams, decodeCosmosSlashingValidatorSigningInfo } from './slashing.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the slashing module's genesis state.
 * @param g_params - `params`: defines all the parameters of the module.
 * @param a_signing_infos - `signing_infos`: represents a map between validator addresses and their signing infos.
 * @param a_missed_blocks - `missed_blocks`: represents a map between validator addresses and their missed blocks.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingGenesisState = (atu8_params, a_signing_infos, a_missed_blocks) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .B(a_signing_infos) // SigningInfo[] signing_infos = 2
    .B(a_missed_blocks) // ValidatorMissedBlocks[] missed_blocks = 3
    .o;
/**
 * Encodes a `SigningInfo` protobuf message: stores validator signing info of corresponding address.
 * @param sa_address - `address`: the validator address.
 * @param g_validator_signing_info - `validator_signing_info`: represents the signing info of this validator.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingSigningInfo = (sa_address, atu8_validator_signing_info) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .b(atu8_validator_signing_info) // ValidatorSigningInfo validator_signing_info = 2
    .o;
/**
 * Encodes a `ValidatorMissedBlocks` protobuf message: contains array of missed blocks of corresponding address.
 * @param sa_address - `address`: the validator address.
 * @param a_missed_blocks - `missed_blocks`: an array of missed blocks by the validator.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingValidatorMissedBlocks = (sa_address, a_missed_blocks) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .B(a_missed_blocks) // MissedBlock[] missed_blocks = 2
    .o;
/**
 * Encodes a `MissedBlock` protobuf message: contains height and missed status as boolean.
 * @param sg_index - `index`: the height at which the block was missed.
 * @param b_missed - `missed`: the missed status.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingMissedBlock = (sg_index, b_missed) => Protobuf() // ...
    .g(sg_index) // int32 index = 1
    .v(b_missed) // boolean missed = 2
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingGenesisState}
 */
export const decodeCosmosSlashingGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0, 0], [decodeCosmosSlashingParams, decodeCosmosSlashingSigningInfo, decodeCosmosSlashingValidatorMissedBlocks]);
/**
 * Decodes a protobuf SigningInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingSigningInfo}
 */
export const decodeCosmosSlashingSigningInfo = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeCosmosSlashingValidatorSigningInfo]);
/**
 * Decodes a protobuf ValidatorMissedBlocks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingValidatorMissedBlocks}
 */
export const decodeCosmosSlashingValidatorMissedBlocks = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0], [0, decodeCosmosSlashingMissedBlock]);
/**
 * Decodes a protobuf MissedBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingMissedBlock}
 */
export const decodeCosmosSlashingMissedBlock = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1]);
/**
 * Destructures the fields of a {@link CosmosSlashingGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines all the parameters of the module.
 *   - 1: signing_infos - represents a map between validator addresses and their signing infos.
 *   - 2: missed_blocks - represents a map between validator addresses and their missed blocks.
 */
export const destructCosmosSlashingGenesisState = (g_struct) => [g_struct.params, g_struct.signing_infos, g_struct.missed_blocks];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_GENESIS_STATE = '/cosmos.slashing.v1beta1.GenesisState';
/**
 * Destructures the fields of a {@link CosmosSlashingSigningInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the validator address.
 *   - 1: validator_signing_info - represents the signing info of this validator.
 */
export const destructCosmosSlashingSigningInfo = (g_struct) => [g_struct.address, g_struct.validator_signing_info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_SIGNING_INFO = '/cosmos.slashing.v1beta1.SigningInfo';
/**
 * Destructures the fields of a {@link CosmosSlashingValidatorMissedBlocks} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address - the validator address.
 *   - 1: missed_blocks - an array of missed blocks by the validator.
 */
export const destructCosmosSlashingValidatorMissedBlocks = (g_struct) => [g_struct.address, g_struct.missed_blocks];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_VALIDATOR_MISSED_BLOCKS = '/cosmos.slashing.v1beta1.ValidatorMissedBlocks';
/**
 * Destructures the fields of a {@link CosmosSlashingMissedBlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: index - the height at which the block was missed.
 *   - 1: missed - the missed status.
 */
export const destructCosmosSlashingMissedBlock = (g_struct) => [g_struct.index, g_struct.missed];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_MISSED_BLOCK = '/cosmos.slashing.v1beta1.MissedBlock';
//# sourceMappingURL=genesis.js.map