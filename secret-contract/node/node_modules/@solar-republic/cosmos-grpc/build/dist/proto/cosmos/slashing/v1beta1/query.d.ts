/// <reference types="node" />
import type { WeakAccountAddr, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosSlashingParams, DecodedCosmosSlashingParams, CosmosSlashingValidatorSigningInfo, DecodedCosmosSlashingValidatorSigningInfo } from './slashing.js';
export type EncodedCosmosSlashingQueryParamsRequest = Encoded<'/cosmos.slashing.v1beta1.QueryParamsRequest'>;
export type EncodedCosmosSlashingQueryParamsResponse = Encoded<'/cosmos.slashing.v1beta1.QueryParamsResponse'>;
export type EncodedCosmosSlashingQuerySigningInfoRequest = Encoded<'/cosmos.slashing.v1beta1.QuerySigningInfoRequest'>;
export type EncodedCosmosSlashingQuerySigningInfoResponse = Encoded<'/cosmos.slashing.v1beta1.QuerySigningInfoResponse'>;
export type EncodedCosmosSlashingQuerySigningInfosRequest = Encoded<'/cosmos.slashing.v1beta1.QuerySigningInfosRequest'>;
export type EncodedCosmosSlashingQuerySigningInfosResponse = Encoded<'/cosmos.slashing.v1beta1.QuerySigningInfosResponse'>;
/**
 * Queries the parameters of slashing module
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryCosmosSlashingParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosSlashingQueryParamsResponse>>;
/**
 * Queries the signing info of given cons address
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_cons - the address to query signing info of
 * @returns a tuple where:
 *   - 0: val_signing_info - the signing info of requested val cons address
 */
export declare const queryCosmosSlashingSigningInfo: (z_req: string | ({
    origin: string;
} & RequestInit), sa_cons?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosSlashingQuerySigningInfoResponse>>;
/**
 * Queries signing info of all validators
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: info - the signing info of all validators
 *   - 1: pagination - the signing info of all validators
 */
export declare const queryCosmosSlashingSigningInfos: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosSlashingQuerySigningInfosResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQueryParamsRequest: () => EncodedCosmosSlashingQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQueryParamsResponse: (atu8_params?: Opt<Encoded<'/cosmos.slashing.v1beta1.Params'>>) => EncodedCosmosSlashingQueryParamsResponse;
/**
 * Encodes a `QuerySigningInfoRequest` protobuf message: the request type for the Query/SigningInfo RPC method
 * @param sa_cons - `cons_address`: the address to query signing info of
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQuerySigningInfoRequest: (sa_cons?: Opt<WeakAccountAddr>) => EncodedCosmosSlashingQuerySigningInfoRequest;
/**
 * Encodes a `QuerySigningInfoResponse` protobuf message: the response type for the Query/SigningInfo RPC method
 * @param g_val_signing_info - `val_signing_info`: the signing info of requested val cons address
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQuerySigningInfoResponse: (atu8_val_signing_info?: Opt<Encoded<'/cosmos.slashing.v1beta1.ValidatorSigningInfo'>>) => EncodedCosmosSlashingQuerySigningInfoResponse;
/**
 * Encodes a `QuerySigningInfosRequest` protobuf message: the request type for the Query/SigningInfos RPC method
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQuerySigningInfosRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosSlashingQuerySigningInfosRequest;
/**
 * Encodes a `QuerySigningInfosResponse` protobuf message: the response type for the Query/SigningInfos RPC method
 * @param a_infos - `info`: the signing info of all validators
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosSlashingQuerySigningInfosResponse: (a_infos?: Opt<Encoded<'/cosmos.slashing.v1beta1.ValidatorSigningInfo'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosSlashingQuerySigningInfosResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedCosmosSlashingQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQueryParamsRequest}
 */
export declare const decodeCosmosSlashingQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params -
 */
export type DecodedCosmosSlashingQueryParamsResponse = [
    a_params?: DecodedCosmosSlashingParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQueryParamsResponse}
 */
export declare const decodeCosmosSlashingQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedCosmosSlashingQueryParamsResponse;
/**
 * A decoded protobuf QuerySigningInfoRequest message
 *
 * Alias for: cons_address - the address to query signing info of
 */
export type DecodedCosmosSlashingQuerySigningInfoRequest = [
    sa_cons?: CwAccountAddr
];
/**
 * Decodes a protobuf QuerySigningInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfoRequest}
 */
export declare const decodeCosmosSlashingQuerySigningInfoRequest: (atu8_payload: Uint8Array) => DecodedCosmosSlashingQuerySigningInfoRequest;
/**
 * A decoded protobuf QuerySigningInfo message
 *
 * Alias for: val_signing_info - the signing info of requested val cons address
 */
export type DecodedCosmosSlashingQuerySigningInfoResponse = [
    a_val_signing_info?: DecodedCosmosSlashingValidatorSigningInfo
];
/**
 * Decodes a protobuf QuerySigningInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfoResponse}
 */
export declare const decodeCosmosSlashingQuerySigningInfoResponse: (atu8_payload: Uint8Array) => DecodedCosmosSlashingQuerySigningInfoResponse;
/**
 * A decoded protobuf QuerySigningInfosRequest message
 *
 * Alias for: pagination -
 */
export type DecodedCosmosSlashingQuerySigningInfosRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QuerySigningInfosRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfosRequest}
 */
export declare const decodeCosmosSlashingQuerySigningInfosRequest: (atu8_payload: Uint8Array) => DecodedCosmosSlashingQuerySigningInfosRequest;
/**
 * A decoded protobuf QuerySigningInfos message
 *
 * Tuple where:
 *   - 0: info - the signing info of all validators
 *   - 1: pagination -
 */
export type DecodedCosmosSlashingQuerySigningInfosResponse = [
    a_info?: DecodedCosmosSlashingValidatorSigningInfo[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QuerySigningInfos message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfosResponse}
 */
export declare const decodeCosmosSlashingQuerySigningInfosResponse: (atu8_payload: Uint8Array) => DecodedCosmosSlashingQuerySigningInfosResponse;
/**
 * Destructures the fields of a {@link CosmosSlashingQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosSlashingQueryParamsRequest: (g_struct: CosmosSlashingQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_PARAMS_REQUEST = "/cosmos.slashing.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QueryParamsRequest` - the request type for the Query/Params RPC method
 */
export type CosmosSlashingQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link CosmosSlashingQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructCosmosSlashingQueryParamsResponse: (g_struct: CosmosSlashingQueryParamsResponse) => [params?: CosmosSlashingParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_PARAMS_RESPONSE = "/cosmos.slashing.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QueryParamsResponse` - the response type for the Query/Params RPC method
 */
export type CosmosSlashingQueryParamsResponse = {
    params?: CosmosSlashingParams | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cons_address - the address to query signing info of
 */
export declare const destructCosmosSlashingQuerySigningInfoRequest: (g_struct: CosmosSlashingQuerySigningInfoRequest) => [cons_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFO_REQUEST = "/cosmos.slashing.v1beta1.QuerySigningInfoRequest";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QuerySigningInfoRequest` - the request type for the Query/SigningInfo RPC method
 */
export type CosmosSlashingQuerySigningInfoRequest = {
    cons_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: val_signing_info - the signing info of requested val cons address
 */
export declare const destructCosmosSlashingQuerySigningInfoResponse: (g_struct: CosmosSlashingQuerySigningInfoResponse) => [val_signing_info?: CosmosSlashingValidatorSigningInfo];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFO_RESPONSE = "/cosmos.slashing.v1beta1.QuerySigningInfoResponse";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QuerySigningInfoResponse` - the response type for the Query/SigningInfo RPC method
 */
export type CosmosSlashingQuerySigningInfoResponse = {
    val_signing_info?: CosmosSlashingValidatorSigningInfo | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfosRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination -
 */
export declare const destructCosmosSlashingQuerySigningInfosRequest: (g_struct: CosmosSlashingQuerySigningInfosRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFOS_REQUEST = "/cosmos.slashing.v1beta1.QuerySigningInfosRequest";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QuerySigningInfosRequest` - the request type for the Query/SigningInfos RPC method
 */
export type CosmosSlashingQuerySigningInfosRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfosResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: info - the signing info of all validators
 *   - 1: pagination -
 */
export declare const destructCosmosSlashingQuerySigningInfosResponse: (g_struct: CosmosSlashingQuerySigningInfosResponse) => [info?: CosmosSlashingValidatorSigningInfo[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFOS_RESPONSE = "/cosmos.slashing.v1beta1.QuerySigningInfosResponse";
/**
 * JSON serialization of `cosmos.slashing.v1beta1.QuerySigningInfosResponse` - the response type for the Query/SigningInfos RPC method
 */
export type CosmosSlashingQuerySigningInfosResponse = {
    info?: CosmosSlashingValidatorSigningInfo[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
