import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import { decodeCosmosSlashingParams, decodeCosmosSlashingValidatorSigningInfo } from './slashing.js';
const SR_LCD_COSMOS_SLASHING_QUERY = '/cosmos/slashing/v1beta1/';
/**
 * Queries the parameters of slashing module
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryCosmosSlashingParams = restful_grpc(() => [SR_LCD_COSMOS_SLASHING_QUERY + 'params']);
/**
 * Queries the signing info of given cons address
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_cons - the address to query signing info of
 * @returns a tuple where:
 *   - 0: val_signing_info - the signing info of requested val cons address
 */
export const queryCosmosSlashingSigningInfo = restful_grpc(sa_cons => [SR_LCD_COSMOS_SLASHING_QUERY + 'signing_infos/' + sa_cons]);
/**
 * Queries signing info of all validators
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: info - the signing info of all validators
 *   - 1: pagination - the signing info of all validators
 */
export const queryCosmosSlashingSigningInfos = restful_grpc(g_pagination => [SR_LCD_COSMOS_SLASHING_QUERY + 'signing_infos', {
        pagination: g_pagination,
    }]);
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `QuerySigningInfoRequest` protobuf message: the request type for the Query/SigningInfo RPC method
 * @param sa_cons - `cons_address`: the address to query signing info of
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQuerySigningInfoRequest = (sa_cons) => Protobuf() // ...
    .s(sa_cons) // string cons_address = 1
    .o;
/**
 * Encodes a `QuerySigningInfoResponse` protobuf message: the response type for the Query/SigningInfo RPC method
 * @param g_val_signing_info - `val_signing_info`: the signing info of requested val cons address
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQuerySigningInfoResponse = (atu8_val_signing_info) => Protobuf() // ...
    .b(atu8_val_signing_info) // ValidatorSigningInfo val_signing_info = 1
    .o;
/**
 * Encodes a `QuerySigningInfosRequest` protobuf message: the request type for the Query/SigningInfos RPC method
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQuerySigningInfosRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `QuerySigningInfosResponse` protobuf message: the response type for the Query/SigningInfos RPC method
 * @param a_infos - `info`: the signing info of all validators
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosSlashingQuerySigningInfosResponse = (a_infos, atu8_pagination) => Protobuf() // ...
    .B(a_infos) // ValidatorSigningInfo[] info = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQueryParamsRequest}
 */
export const decodeCosmosSlashingQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQueryParamsResponse}
 */
export const decodeCosmosSlashingQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosSlashingParams]);
/**
 * Decodes a protobuf QuerySigningInfoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfoRequest}
 */
export const decodeCosmosSlashingQuerySigningInfoRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QuerySigningInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfoResponse}
 */
export const decodeCosmosSlashingQuerySigningInfoResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosSlashingValidatorSigningInfo]);
/**
 * Decodes a protobuf QuerySigningInfosRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfosRequest}
 */
export const decodeCosmosSlashingQuerySigningInfosRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QuerySigningInfos message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosSlashingQuerySigningInfosResponse}
 */
export const decodeCosmosSlashingQuerySigningInfosResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeCosmosSlashingValidatorSigningInfo, decodeCosmosBaseQueryPageResponse]);
/**
 * Destructures the fields of a {@link CosmosSlashingQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructCosmosSlashingQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_PARAMS_REQUEST = '/cosmos.slashing.v1beta1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link CosmosSlashingQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructCosmosSlashingQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_PARAMS_RESPONSE = '/cosmos.slashing.v1beta1.QueryParamsResponse';
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cons_address - the address to query signing info of
 */
export const destructCosmosSlashingQuerySigningInfoRequest = (g_struct) => [g_struct.cons_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFO_REQUEST = '/cosmos.slashing.v1beta1.QuerySigningInfoRequest';
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: val_signing_info - the signing info of requested val cons address
 */
export const destructCosmosSlashingQuerySigningInfoResponse = (g_struct) => [g_struct.val_signing_info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFO_RESPONSE = '/cosmos.slashing.v1beta1.QuerySigningInfoResponse';
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfosRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination -
 */
export const destructCosmosSlashingQuerySigningInfosRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFOS_REQUEST = '/cosmos.slashing.v1beta1.QuerySigningInfosRequest';
/**
 * Destructures the fields of a {@link CosmosSlashingQuerySigningInfosResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: info - the signing info of all validators
 *   - 1: pagination -
 */
export const destructCosmosSlashingQuerySigningInfosResponse = (g_struct) => [g_struct.info, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_SLASHING_QUERY_SIGNING_INFOS_RESPONSE = '/cosmos.slashing.v1beta1.QuerySigningInfosResponse';
//# sourceMappingURL=query.js.map