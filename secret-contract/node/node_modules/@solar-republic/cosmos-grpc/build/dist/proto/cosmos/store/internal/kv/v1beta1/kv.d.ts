import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../../api/types.js';
export type EncodedCosmosStoreInternalKvPairs = Encoded<'/cosmos.store.internal.kv.v1beta1.Pairs'>;
export type EncodedCosmosStoreInternalKvPair = Encoded<'/cosmos.store.internal.kv.v1beta1.Pair'>;
/**
 * Encodes a `Pairs` protobuf message: defines a repeated slice of Pair objects.
 * @param a_pairs - `pairs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreInternalKvPairs: (a_pairs?: Opt<Encoded<'/cosmos.store.internal.kv.v1beta1.Pair'>[]>) => EncodedCosmosStoreInternalKvPairs;
/**
 * Encodes a `Pair` protobuf message: defines a key/value bytes tuple.
 * @param atu8_key - `key`:
 * @param atu8_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreInternalKvPair: (atu8_key?: Opt<Uint8Array>, atu8_value?: Opt<Uint8Array>) => EncodedCosmosStoreInternalKvPair;
/**
 * A decoded protobuf Pairs message
 *
 * Alias for: pairs -
 */
export type DecodedCosmosStoreInternalKvPairs = [
    a_pairs?: DecodedCosmosStoreInternalKvPair[]
];
/**
 * Decodes a protobuf Pairs message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreInternalKvPairs}
 */
export declare const decodeCosmosStoreInternalKvPairs: (atu8_payload: Uint8Array) => DecodedCosmosStoreInternalKvPairs;
/**
 * A decoded protobuf Pair message
 *
 * Tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export type DecodedCosmosStoreInternalKvPair = [
    atu8_key?: Uint8Array,
    atu8_value?: Uint8Array
];
/**
 * Decodes a protobuf Pair message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreInternalKvPair}
 */
export declare const decodeCosmosStoreInternalKvPair: (atu8_payload: Uint8Array) => DecodedCosmosStoreInternalKvPair;
/**
 * Destructures the fields of a {@link CosmosStoreInternalKvPairs} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pairs -
 */
export declare const destructCosmosStoreInternalKvPairs: (g_struct: CosmosStoreInternalKvPairs) => [pairs?: CosmosStoreInternalKvPair[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_INTERNAL_KV_PAIRS = "/cosmos.store.internal.kv.v1beta1.Pairs";
/**
 * JSON serialization of `cosmos.store.internal.kv.v1beta1.Pairs` - defines a repeated slice of Pair objects.
 */
export type CosmosStoreInternalKvPairs = {
    pairs?: CosmosStoreInternalKvPair[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosStoreInternalKvPair} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export declare const destructCosmosStoreInternalKvPair: (g_struct: CosmosStoreInternalKvPair) => [key?: Uint8Array, value?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_INTERNAL_KV_PAIR = "/cosmos.store.internal.kv.v1beta1.Pair";
/**
 * JSON serialization of `cosmos.store.internal.kv.v1beta1.Pair` - defines a key/value bytes tuple.
 */
export type CosmosStoreInternalKvPair = {
    key?: CwBase64 | undefined;
    value?: CwBase64 | undefined;
};
