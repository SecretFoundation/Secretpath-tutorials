import { decode_protobuf } from '../../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../../../api/util.js';
/**
 * Encodes a `Pairs` protobuf message: defines a repeated slice of Pair objects.
 * @param a_pairs - `pairs`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreInternalKvPairs = (a_pairs) => Protobuf() // ...
    .B(a_pairs) // Pair[] pairs = 1
    .o;
/**
 * Encodes a `Pair` protobuf message: defines a key/value bytes tuple.
 * @param atu8_key - `key`:
 * @param atu8_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeCosmosStoreInternalKvPair = (atu8_key, atu8_value) => Protobuf() // ...
    .b(atu8_key) // bytes key = 1
    .b(atu8_value) // bytes value = 2
    .o;
/**
 * Decodes a protobuf Pairs message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreInternalKvPairs}
 */
export const decodeCosmosStoreInternalKvPairs = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeCosmosStoreInternalKvPair]);
/**
 * Decodes a protobuf Pair message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreInternalKvPair}
 */
export const decodeCosmosStoreInternalKvPair = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1]);
/**
 * Destructures the fields of a {@link CosmosStoreInternalKvPairs} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pairs -
 */
export const destructCosmosStoreInternalKvPairs = (g_struct) => [g_struct.pairs];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_INTERNAL_KV_PAIRS = '/cosmos.store.internal.kv.v1beta1.Pairs';
/**
 * Destructures the fields of a {@link CosmosStoreInternalKvPair} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: key -
 *   - 1: value -
 */
export const destructCosmosStoreInternalKvPair = (g_struct) => [safe_base64_to_bytes(g_struct.key), safe_base64_to_bytes(g_struct.value)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_COSMOS_STORE_INTERNAL_KV_PAIR = '/cosmos.store.internal.kv.v1beta1.Pair';
//# sourceMappingURL=kv.js.map