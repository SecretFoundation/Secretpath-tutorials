import type { WeakInt64Str, CwInt64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { CosmosStoreStoreKVPair, DecodedCosmosStoreStoreKVPair } from '../../v1beta1/listening.js';
import type { TendermintAbciRequestFinalizeBlock, DecodedTendermintAbciRequestFinalizeBlock, TendermintAbciResponseFinalizeBlock, DecodedTendermintAbciResponseFinalizeBlock, TendermintAbciResponseCommit, DecodedTendermintAbciResponseCommit } from '../../../../tendermint/abci/types.js';
export type EncodedCosmosStoreStreamingAbciListenFinalizeBlockRequest = Encoded<'/cosmos.store.streaming.abci.ListenFinalizeBlockRequest'>;
export type EncodedCosmosStoreStreamingAbciListenFinalizeBlockResponse = Encoded<'/cosmos.store.streaming.abci.ListenFinalizeBlockResponse'>;
export type EncodedCosmosStoreStreamingAbciListenCommitRequest = Encoded<'/cosmos.store.streaming.abci.ListenCommitRequest'>;
export type EncodedCosmosStoreStreamingAbciListenCommitResponse = Encoded<'/cosmos.store.streaming.abci.ListenCommitResponse'>;
/**
 * Encodes a `ListenFinalizeBlockRequest` protobuf message: ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 * @param g_req - `req`:
 * @param g_res - `res`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreStreamingAbciListenFinalizeBlockRequest: (atu8_req?: Opt<Encoded<'/tendermint.abci.RequestFinalizeBlock'>>, atu8_res?: Opt<Encoded<'/tendermint.abci.ResponseFinalizeBlock'>>) => EncodedCosmosStoreStreamingAbciListenFinalizeBlockRequest;
/**
 * Encodes a `ListenFinalizeBlockResponse` protobuf message: ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreStreamingAbciListenFinalizeBlockResponse: () => EncodedCosmosStoreStreamingAbciListenFinalizeBlockResponse;
/**
 * Encodes a `ListenCommitRequest` protobuf message: the request type for the ListenCommit RPC method
 * @param sg_block_height - `block_height`: explicitly pass in block height as ResponseCommit does not contain this info
 * @param g_res - `res`:
 * @param a_change_sets - `change_set`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreStreamingAbciListenCommitRequest: (sg_block_height?: Opt<WeakInt64Str>, atu8_res?: Opt<Encoded<'/tendermint.abci.ResponseCommit'>>, a_change_sets?: Opt<Encoded<'/cosmos.store.v1beta1.StoreKVPair'>[]>) => EncodedCosmosStoreStreamingAbciListenCommitRequest;
/**
 * Encodes a `ListenCommitResponse` protobuf message: the response type for the ListenCommit RPC method
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosStoreStreamingAbciListenCommitResponse: () => EncodedCosmosStoreStreamingAbciListenCommitResponse;
/**
 * A decoded protobuf ListenFinalizeBlockRequest message
 *
 * Tuple where:
 *   - 0: req -
 *   - 1: res -
 */
export type DecodedCosmosStoreStreamingAbciListenFinalizeBlockRequest = [
    a_req?: DecodedTendermintAbciRequestFinalizeBlock,
    a_res?: DecodedTendermintAbciResponseFinalizeBlock
];
/**
 * Decodes a protobuf ListenFinalizeBlockRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenFinalizeBlockRequest}
 */
export declare const decodeCosmosStoreStreamingAbciListenFinalizeBlockRequest: (atu8_payload: Uint8Array) => DecodedCosmosStoreStreamingAbciListenFinalizeBlockRequest;
/**
 * A decoded protobuf ListenFinalizeBlock message
 *
 * Tuple where:
 */
export type DecodedCosmosStoreStreamingAbciListenFinalizeBlockResponse = [];
/**
 * Decodes a protobuf ListenFinalizeBlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenFinalizeBlockResponse}
 */
export declare const decodeCosmosStoreStreamingAbciListenFinalizeBlockResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ListenCommitRequest message
 *
 * Tuple where:
 *   - 0: block_height - explicitly pass in block height as ResponseCommit does not contain this info
 *   - 1: res -
 *   - 2: change_set -
 */
export type DecodedCosmosStoreStreamingAbciListenCommitRequest = [
    sg_block_height?: CwInt64,
    a_res?: DecodedTendermintAbciResponseCommit,
    a_change_set?: DecodedCosmosStoreStoreKVPair[]
];
/**
 * Decodes a protobuf ListenCommitRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenCommitRequest}
 */
export declare const decodeCosmosStoreStreamingAbciListenCommitRequest: (atu8_payload: Uint8Array) => DecodedCosmosStoreStreamingAbciListenCommitRequest;
/**
 * A decoded protobuf ListenCommit message
 *
 * Tuple where:
 */
export type DecodedCosmosStoreStreamingAbciListenCommitResponse = [];
/**
 * Decodes a protobuf ListenCommit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosStoreStreamingAbciListenCommitResponse}
 */
export declare const decodeCosmosStoreStreamingAbciListenCommitResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenFinalizeBlockRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: req -
 *   - 1: res -
 */
export declare const destructCosmosStoreStreamingAbciListenFinalizeBlockRequest: (g_struct: CosmosStoreStreamingAbciListenFinalizeBlockRequest) => [req?: TendermintAbciRequestFinalizeBlock, res?: TendermintAbciResponseFinalizeBlock];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_FINALIZE_BLOCK_REQUEST = "/cosmos.store.streaming.abci.ListenFinalizeBlockRequest";
/**
 * JSON serialization of `cosmos.store.streaming.abci.ListenFinalizeBlockRequest` - ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 */
export type CosmosStoreStreamingAbciListenFinalizeBlockRequest = {
    req?: TendermintAbciRequestFinalizeBlock | undefined;
    res?: TendermintAbciResponseFinalizeBlock | undefined;
};
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenFinalizeBlockResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosStoreStreamingAbciListenFinalizeBlockResponse: (g_struct: CosmosStoreStreamingAbciListenFinalizeBlockResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_FINALIZE_BLOCK_RESPONSE = "/cosmos.store.streaming.abci.ListenFinalizeBlockResponse";
/**
 * JSON serialization of `cosmos.store.streaming.abci.ListenFinalizeBlockResponse` - ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 */
export type CosmosStoreStreamingAbciListenFinalizeBlockResponse = {};
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenCommitRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: block_height - explicitly pass in block height as ResponseCommit does not contain this info
 *   - 1: res -
 *   - 2: change_set -
 */
export declare const destructCosmosStoreStreamingAbciListenCommitRequest: (g_struct: CosmosStoreStreamingAbciListenCommitRequest) => [block_height?: CwInt64, res?: TendermintAbciResponseCommit, change_set?: CosmosStoreStoreKVPair[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_COMMIT_REQUEST = "/cosmos.store.streaming.abci.ListenCommitRequest";
/**
 * JSON serialization of `cosmos.store.streaming.abci.ListenCommitRequest` - the request type for the ListenCommit RPC method
 */
export type CosmosStoreStreamingAbciListenCommitRequest = {
    block_height?: CwInt64 | undefined;
    res?: TendermintAbciResponseCommit | undefined;
    change_set?: CosmosStoreStoreKVPair[] | undefined;
};
/**
 * Destructures the fields of a {@link CosmosStoreStreamingAbciListenCommitResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructCosmosStoreStreamingAbciListenCommitResponse: (g_struct: CosmosStoreStreamingAbciListenCommitResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_STORE_STREAMING_ABCI_LISTEN_COMMIT_RESPONSE = "/cosmos.store.streaming.abci.ListenCommitResponse";
/**
 * JSON serialization of `cosmos.store.streaming.abci.ListenCommitResponse` - the response type for the ListenCommit RPC method
 */
export type CosmosStoreStreamingAbciListenCommitResponse = {};
