/// <reference types="node" />
import type { WeakInt64Str, WeakUint64Str, CwInt64, CwUint64, CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseAbciTxResponse, DecodedCosmosBaseAbciTxResponse, CosmosBaseAbciGasInfo, DecodedCosmosBaseAbciGasInfo, CosmosBaseAbciResult, DecodedCosmosBaseAbciResult } from '../../base/abci/v1beta1/abci.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../base/query/v1beta1/pagination.js';
import type { CosmosTxTx, DecodedCosmosTxTx } from './tx.js';
import type { TendermintTypesBlock, DecodedTendermintTypesBlock } from '../../../tendermint/types/block.js';
import type { TendermintTypesBlockID, DecodedTendermintTypesBlockID } from '../../../tendermint/types/types.js';
export type EncodedCosmosTxGetTxsEventRequest = Encoded<'/cosmos.tx.v1beta1.GetTxsEventRequest'>;
export type EncodedCosmosTxGetTxsEventResponse = Encoded<'/cosmos.tx.v1beta1.GetTxsEventResponse'>;
export type EncodedCosmosTxBroadcastTxRequest = Encoded<'/cosmos.tx.v1beta1.BroadcastTxRequest'>;
export type EncodedCosmosTxBroadcastTxResponse = Encoded<'/cosmos.tx.v1beta1.BroadcastTxResponse'>;
export type EncodedCosmosTxSimulateRequest = Encoded<'/cosmos.tx.v1beta1.SimulateRequest'>;
export type EncodedCosmosTxSimulateResponse = Encoded<'/cosmos.tx.v1beta1.SimulateResponse'>;
export type EncodedCosmosTxGetTxRequest = Encoded<'/cosmos.tx.v1beta1.GetTxRequest'>;
export type EncodedCosmosTxGetTxResponse = Encoded<'/cosmos.tx.v1beta1.GetTxResponse'>;
export type EncodedCosmosTxGetBlockWithTxsRequest = Encoded<'/cosmos.tx.v1beta1.GetBlockWithTxsRequest'>;
export type EncodedCosmosTxGetBlockWithTxsResponse = Encoded<'/cosmos.tx.v1beta1.GetBlockWithTxsResponse'>;
export type EncodedCosmosTxTxDecodeRequest = Encoded<'/cosmos.tx.v1beta1.TxDecodeRequest'>;
export type EncodedCosmosTxTxDecodeResponse = Encoded<'/cosmos.tx.v1beta1.TxDecodeResponse'>;
export type EncodedCosmosTxTxEncodeRequest = Encoded<'/cosmos.tx.v1beta1.TxEncodeRequest'>;
export type EncodedCosmosTxTxEncodeResponse = Encoded<'/cosmos.tx.v1beta1.TxEncodeResponse'>;
export type EncodedCosmosTxTxEncodeAminoRequest = Encoded<'/cosmos.tx.v1beta1.TxEncodeAminoRequest'>;
export type EncodedCosmosTxTxEncodeAminoResponse = Encoded<'/cosmos.tx.v1beta1.TxEncodeAminoResponse'>;
export type EncodedCosmosTxTxDecodeAminoRequest = Encoded<'/cosmos.tx.v1beta1.TxDecodeAminoRequest'>;
export type EncodedCosmosTxTxDecodeAminoResponse = Encoded<'/cosmos.tx.v1beta1.TxDecodeAminoResponse'>;
/**
 * Simulates executing a transaction for estimating gas usage.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_tx - the transaction to simulate. Deprecated. Send raw tx bytes instead.
 * @param atu8_tx_bytes - the raw transaction. Since: cosmos-sdk 0.43
 * @returns a tuple where:
 *   - 0: gas_info - the information about gas used in the simulation.
 *   - 1: result - the information about gas used in the simulation.
 */
export declare const submitCosmosTxSimulate: (z_req: string | ({
    origin: string;
} & RequestInit), g_tx?: Opt<CosmosTxTx>, atu8_tx_bytes?: Opt<Uint8Array>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxSimulateResponse>>;
/**
 * Fetches a tx by hash.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_hash - the tx hash to query, encoded as a hex string.
 * @returns a tuple where:
 *   - 0: tx - the queried transaction.
 *   - 1: tx_response - the queried transaction.
 */
export declare const queryCosmosTxGetTx: (z_req: string | ({
    origin: string;
} & RequestInit), s_hash?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxGetTxResponse>>;
/**
 * Broadcast transaction.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param atu8_tx_bytes - the raw transaction.
 * @param xc_mode -
 * @returns a tuple where:
 *   - 0: tx_response - the queried TxResponses.
 */
export declare const submitCosmosTxBroadcastTx: (z_req: string | ({
    origin: string;
} & RequestInit), atu8_tx_bytes?: Opt<Uint8Array>, xc_mode?: Opt<ProtoEnumCosmosTxBroadcastMode>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxBroadcastTxResponse>>;
/**
 * Fetches txs by event.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param a_events - the list of transaction event type. Deprecated: post v0.47.x use query instead, which should contain a valid events query.
 * @param g_pagination - defines a pagination for the request. Deprecated: post v0.46.x use page and limit instead.
 * @param xc_order_by -
 * @param sg_page - the page number to query, starts at 1. If not provided, will default to first page.
 * @param sg_limit - the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
 * @param s_query - defines the transaction event query that is proxied to Tendermint's TxSearch RPC method. The query must be valid. Since cosmos-sdk 0.50
 * @returns a tuple where:
 *   - 0: txs - the list of queried transactions.
 *   - 1: tx_responses - the list of queried transactions.
 *   - 2: pagination - the list of queried transactions.
 *   - 3: total - the list of queried transactions.
 */
export declare const queryCosmosTxGetTxsEvent: (z_req: string | ({
    origin: string;
} & RequestInit), a_events?: Opt<string[]>, g_pagination?: Opt<CosmosBaseQueryPageRequest>, xc_order_by?: Opt<ProtoEnumCosmosTxOrderBy>, sg_page?: Opt<`${bigint}`>, sg_limit?: Opt<`${bigint}`>, s_query?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxGetTxsEventResponse>>;
/**
 * Fetches a block with decoded txs. Since: cosmos-sdk 0.45.2
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_height - the height of the block to query.
 * @param g_pagination - defines a pagination for the request.
 * @returns a tuple where:
 *   - 0: txs - the transactions in the block.
 *   - 1: block_id - the transactions in the block.
 *   - 2: block - the transactions in the block.
 *   - 3: pagination - the transactions in the block.
 */
export declare const queryCosmosTxGetBlockWithTxs: (z_req: string | ({
    origin: string;
} & RequestInit), sg_height?: Opt<`${bigint}`>, g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxGetBlockWithTxsResponse>>;
/**
 * Decodes the transaction. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param atu8_tx_bytes - the raw transaction.
 * @returns a tuple where:
 *   - 0: tx - the decoded transaction.
 */
export declare const submitCosmosTxTxDecode: (z_req: string | ({
    origin: string;
} & RequestInit), atu8_tx_bytes?: Opt<Uint8Array>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxTxDecodeResponse>>;
/**
 * Encodes the transaction. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_tx - the transaction to encode.
 * @returns a tuple where:
 *   - 0: tx_bytes - the encoded transaction bytes.
 */
export declare const submitCosmosTxTxEncode: (z_req: string | ({
    origin: string;
} & RequestInit), g_tx?: Opt<CosmosTxTx>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxTxEncodeResponse>>;
/**
 * Encodes an Amino transaction from JSON to encoded bytes. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_amino_json -
 * @returns a tuple where:
 *   - 0: amino_binary - the 'amino_binary' response property
 */
export declare const submitCosmosTxTxEncodeAmino: (z_req: string | ({
    origin: string;
} & RequestInit), s_amino_json?: Opt<string>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxTxEncodeAminoResponse>>;
/**
 * Decodes an Amino transaction from encoded bytes to JSON. Since: cosmos-sdk 0.47
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param atu8_amino_binary -
 * @returns a tuple where:
 *   - 0: amino_json - the 'amino_json' response property
 */
export declare const submitCosmosTxTxDecodeAmino: (z_req: string | ({
    origin: string;
} & RequestInit), atu8_amino_binary?: Opt<Uint8Array>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<CosmosTxTxDecodeAminoResponse>>;
/**
 * Encodes a `GetTxsEventRequest` protobuf message: the request type for the Service.TxsByEvents RPC method.
 * @param a_events - `events`: the list of transaction event type. Deprecated: post v0.47.x use query instead, which should contain a valid events query.
 * @param g_pagination - `pagination`: defines a pagination for the request. Deprecated: post v0.46.x use page and limit instead.
 * @param xc_order_by - `order_by`:
 * @param sg_page - `page`: the page number to query, starts at 1. If not provided, will default to first page.
 * @param sg_limit - `limit`: the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
 * @param s_query - `query`: defines the transaction event query that is proxied to Tendermint's TxSearch RPC method. The query must be valid. Since cosmos-sdk 0.50
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetTxsEventRequest: (a_events?: Opt<string[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>, xc_order_by?: Opt<ProtoEnumCosmosTxOrderBy>, sg_page?: Opt<WeakUint64Str>, sg_limit?: Opt<WeakUint64Str>, s_query?: Opt<string>) => EncodedCosmosTxGetTxsEventRequest;
/**
 * Encodes a `GetTxsEventResponse` protobuf message: the response type for the Service.TxsByEvents RPC method.
 * @param a_txs - `txs`: the list of queried transactions.
 * @param a_tx_responses - `tx_responses`: the list of queried TxResponses.
 * @param g_pagination - `pagination`: defines a pagination for the response. Deprecated: post v0.46.x use total instead.
 * @param sg_total - `total`: total number of results available
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetTxsEventResponse: (a_txs?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>[]>, a_tx_responses?: Opt<Encoded<'/cosmos.base.abci.v1beta1.TxResponse'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>, sg_total?: Opt<WeakUint64Str>) => EncodedCosmosTxGetTxsEventResponse;
/**
 * Encodes a `BroadcastTxRequest` protobuf message: the request type for the Service.BroadcastTxRequest RPC method.
 * @param atu8_tx_bytes - `tx_bytes`: the raw transaction.
 * @param xc_mode - `mode`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxBroadcastTxRequest: (atu8_tx_bytes?: Opt<Uint8Array>, xc_mode?: Opt<ProtoEnumCosmosTxBroadcastMode>) => EncodedCosmosTxBroadcastTxRequest;
/**
 * Encodes a `BroadcastTxResponse` protobuf message: the response type for the Service.BroadcastTx method.
 * @param g_tx_response - `tx_response`: the queried TxResponses.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxBroadcastTxResponse: (atu8_tx_response?: Opt<Encoded<'/cosmos.base.abci.v1beta1.TxResponse'>>) => EncodedCosmosTxBroadcastTxResponse;
/**
 * Encodes a `SimulateRequest` protobuf message: the request type for the Service.Simulate RPC method.
 * @param g_tx - `tx`: the transaction to simulate. Deprecated. Send raw tx bytes instead.
 * @param atu8_tx_bytes - `tx_bytes`: the raw transaction. Since: cosmos-sdk 0.43
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxSimulateRequest: (atu8_tx?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>>, atu8_tx_bytes?: Opt<Uint8Array>) => EncodedCosmosTxSimulateRequest;
/**
 * Encodes a `SimulateResponse` protobuf message: the response type for the Service.SimulateRPC method.
 * @param g_gas_info - `gas_info`: the information about gas used in the simulation.
 * @param g_result - `result`: the result of the simulation.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxSimulateResponse: (atu8_gas_info?: Opt<Encoded<'/cosmos.base.abci.v1beta1.GasInfo'>>, atu8_result?: Opt<Encoded<'/cosmos.base.abci.v1beta1.Result'>>) => EncodedCosmosTxSimulateResponse;
/**
 * Encodes a `GetTxRequest` protobuf message: the request type for the Service.GetTx RPC method.
 * @param s_hash - `hash`: the tx hash to query, encoded as a hex string.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetTxRequest: (s_hash?: Opt<string>) => EncodedCosmosTxGetTxRequest;
/**
 * Encodes a `GetTxResponse` protobuf message: the response type for the Service.GetTx method.
 * @param g_tx - `tx`: the queried transaction.
 * @param g_tx_response - `tx_response`: the queried TxResponses.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetTxResponse: (atu8_tx?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>>, atu8_tx_response?: Opt<Encoded<'/cosmos.base.abci.v1beta1.TxResponse'>>) => EncodedCosmosTxGetTxResponse;
/**
 * Encodes a `GetBlockWithTxsRequest` protobuf message: the request type for the Service.GetBlockWithTxs RPC method. Since: cosmos-sdk 0.45.2
 * @param sg_height - `height`: the height of the block to query.
 * @param g_pagination - `pagination`: defines a pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetBlockWithTxsRequest: (sg_height?: Opt<WeakInt64Str>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedCosmosTxGetBlockWithTxsRequest;
/**
 * Encodes a `GetBlockWithTxsResponse` protobuf message: the response type for the Service.GetBlockWithTxs method. Since: cosmos-sdk 0.45.2
 * @param a_txs - `txs`: the transactions in the block.
 * @param g_block_id - `block_id`:
 * @param g_block - `block`:
 * @param g_pagination - `pagination`: defines a pagination for the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxGetBlockWithTxsResponse: (a_txs?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>[]>, atu8_block_id?: Opt<Encoded<'/tendermint.types.BlockID'>>, atu8_block?: Opt<Encoded<'/tendermint.types.Block'>>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedCosmosTxGetBlockWithTxsResponse;
/**
 * Encodes a `TxDecodeRequest` protobuf message: the request type for the Service.TxDecode RPC method. Since: cosmos-sdk 0.47
 * @param atu8_tx_bytes - `tx_bytes`: the raw transaction.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxDecodeRequest: (atu8_tx_bytes?: Opt<Uint8Array>) => EncodedCosmosTxTxDecodeRequest;
/**
 * Encodes a `TxDecodeResponse` protobuf message: the response type for the Service.TxDecode method. Since: cosmos-sdk 0.47
 * @param g_tx - `tx`: the decoded transaction.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxDecodeResponse: (atu8_tx?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>>) => EncodedCosmosTxTxDecodeResponse;
/**
 * Encodes a `TxEncodeRequest` protobuf message: the request type for the Service.TxEncode RPC method. Since: cosmos-sdk 0.47
 * @param g_tx - `tx`: the transaction to encode.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxEncodeRequest: (atu8_tx?: Opt<Encoded<'/cosmos.tx.v1beta1.Tx'>>) => EncodedCosmosTxTxEncodeRequest;
/**
 * Encodes a `TxEncodeResponse` protobuf message: the response type for the Service.TxEncode method. Since: cosmos-sdk 0.47
 * @param atu8_tx_bytes - `tx_bytes`: the encoded transaction bytes.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxEncodeResponse: (atu8_tx_bytes?: Opt<Uint8Array>) => EncodedCosmosTxTxEncodeResponse;
/**
 * Encodes a `TxEncodeAminoRequest` protobuf message: the request type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 * @param s_amino_json - `amino_json`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxEncodeAminoRequest: (s_amino_json?: Opt<string>) => EncodedCosmosTxTxEncodeAminoRequest;
/**
 * Encodes a `TxEncodeAminoResponse` protobuf message: the response type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 * @param atu8_amino_binary - `amino_binary`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxEncodeAminoResponse: (atu8_amino_binary?: Opt<Uint8Array>) => EncodedCosmosTxTxEncodeAminoResponse;
/**
 * Encodes a `TxDecodeAminoRequest` protobuf message: the request type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 * @param atu8_amino_binary - `amino_binary`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxDecodeAminoRequest: (atu8_amino_binary?: Opt<Uint8Array>) => EncodedCosmosTxTxDecodeAminoRequest;
/**
 * Encodes a `TxDecodeAminoResponse` protobuf message: the response type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 * @param s_amino_json - `amino_json`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeCosmosTxTxDecodeAminoResponse: (s_amino_json?: Opt<string>) => EncodedCosmosTxTxDecodeAminoResponse;
/**
 * A decoded protobuf GetTxsEventRequest message
 *
 * Tuple where:
 *   - 0: events - the list of transaction event type. Deprecated: post v0.47.x use query instead, which should contain a valid events query.
 *   - 1: pagination - defines a pagination for the request. Deprecated: post v0.46.x use page and limit instead.
 *   - 2: order_by -
 *   - 3: page - the page number to query, starts at 1. If not provided, will default to first page.
 *   - 4: limit - the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
 *   - 5: query - defines the transaction event query that is proxied to Tendermint's TxSearch RPC method. The query must be valid. Since cosmos-sdk 0.50
 */
export type DecodedCosmosTxGetTxsEventRequest = [
    a_events?: string[],
    a_pagination?: DecodedCosmosBaseQueryPageRequest,
    xc_order_by?: ProtoEnumCosmosTxOrderBy,
    sg_page?: CwUint64,
    sg_limit?: CwUint64,
    s_query?: string
];
/**
 * Decodes a protobuf GetTxsEventRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetTxsEventRequest}
 */
export declare const decodeCosmosTxGetTxsEventRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxGetTxsEventRequest;
/**
 * A decoded protobuf GetTxsEvent message
 *
 * Tuple where:
 *   - 0: txs - the list of queried transactions.
 *   - 1: tx_responses - the list of queried TxResponses.
 *   - 2: pagination - defines a pagination for the response. Deprecated: post v0.46.x use total instead.
 *   - 3: total - total number of results available
 */
export type DecodedCosmosTxGetTxsEventResponse = [
    a_txs?: DecodedCosmosTxTx[],
    a_tx_responses?: DecodedCosmosBaseAbciTxResponse[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse,
    sg_total?: CwUint64
];
/**
 * Decodes a protobuf GetTxsEvent message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetTxsEventResponse}
 */
export declare const decodeCosmosTxGetTxsEventResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxGetTxsEventResponse;
/**
 * A decoded protobuf BroadcastTxRequest message
 *
 * Tuple where:
 *   - 0: tx_bytes - the raw transaction.
 *   - 1: mode -
 */
export type DecodedCosmosTxBroadcastTxRequest = [
    atu8_tx_bytes?: Uint8Array,
    xc_mode?: ProtoEnumCosmosTxBroadcastMode
];
/**
 * Decodes a protobuf BroadcastTxRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxBroadcastTxRequest}
 */
export declare const decodeCosmosTxBroadcastTxRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxBroadcastTxRequest;
/**
 * A decoded protobuf BroadcastTx message
 *
 * Alias for: tx_response - the queried TxResponses.
 */
export type DecodedCosmosTxBroadcastTxResponse = [
    a_tx_response?: DecodedCosmosBaseAbciTxResponse
];
/**
 * Decodes a protobuf BroadcastTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxBroadcastTxResponse}
 */
export declare const decodeCosmosTxBroadcastTxResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxBroadcastTxResponse;
/**
 * A decoded protobuf SimulateRequest message
 *
 * Tuple where:
 *   - 0: tx - the transaction to simulate. Deprecated. Send raw tx bytes instead.
 *   - 1: tx_bytes - the raw transaction. Since: cosmos-sdk 0.43
 */
export type DecodedCosmosTxSimulateRequest = [
    a_tx?: DecodedCosmosTxTx,
    atu8_tx_bytes?: Uint8Array
];
/**
 * Decodes a protobuf SimulateRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxSimulateRequest}
 */
export declare const decodeCosmosTxSimulateRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxSimulateRequest;
/**
 * A decoded protobuf Simulate message
 *
 * Tuple where:
 *   - 0: gas_info - the information about gas used in the simulation.
 *   - 1: result - the result of the simulation.
 */
export type DecodedCosmosTxSimulateResponse = [
    a_gas_info?: DecodedCosmosBaseAbciGasInfo,
    a_result?: DecodedCosmosBaseAbciResult
];
/**
 * Decodes a protobuf Simulate message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxSimulateResponse}
 */
export declare const decodeCosmosTxSimulateResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxSimulateResponse;
/**
 * A decoded protobuf GetTxRequest message
 *
 * Alias for: hash - the tx hash to query, encoded as a hex string.
 */
export type DecodedCosmosTxGetTxRequest = [
    s_hash?: string
];
/**
 * Decodes a protobuf GetTxRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetTxRequest}
 */
export declare const decodeCosmosTxGetTxRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxGetTxRequest;
/**
 * A decoded protobuf GetTx message
 *
 * Tuple where:
 *   - 0: tx - the queried transaction.
 *   - 1: tx_response - the queried TxResponses.
 */
export type DecodedCosmosTxGetTxResponse = [
    a_tx?: DecodedCosmosTxTx,
    a_tx_response?: DecodedCosmosBaseAbciTxResponse
];
/**
 * Decodes a protobuf GetTx message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetTxResponse}
 */
export declare const decodeCosmosTxGetTxResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxGetTxResponse;
/**
 * A decoded protobuf GetBlockWithTxsRequest message
 *
 * Tuple where:
 *   - 0: height - the height of the block to query.
 *   - 1: pagination - defines a pagination for the request.
 */
export type DecodedCosmosTxGetBlockWithTxsRequest = [
    sg_height?: CwInt64,
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf GetBlockWithTxsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetBlockWithTxsRequest}
 */
export declare const decodeCosmosTxGetBlockWithTxsRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxGetBlockWithTxsRequest;
/**
 * A decoded protobuf GetBlockWithTxs message
 *
 * Tuple where:
 *   - 0: txs - the transactions in the block.
 *   - 1: block_id -
 *   - 2: block -
 *   - 3: pagination - defines a pagination for the response.
 */
export type DecodedCosmosTxGetBlockWithTxsResponse = [
    a_txs?: DecodedCosmosTxTx[],
    a_block_id?: DecodedTendermintTypesBlockID,
    a_block?: DecodedTendermintTypesBlock,
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf GetBlockWithTxs message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxGetBlockWithTxsResponse}
 */
export declare const decodeCosmosTxGetBlockWithTxsResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxGetBlockWithTxsResponse;
/**
 * A decoded protobuf TxDecodeRequest message
 *
 * Alias for: tx_bytes - the raw transaction.
 */
export type DecodedCosmosTxTxDecodeRequest = [
    atu8_tx_bytes?: Uint8Array
];
/**
 * Decodes a protobuf TxDecodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxDecodeRequest}
 */
export declare const decodeCosmosTxTxDecodeRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxTxDecodeRequest;
/**
 * A decoded protobuf TxDecode message
 *
 * Alias for: tx - the decoded transaction.
 */
export type DecodedCosmosTxTxDecodeResponse = [
    a_tx?: DecodedCosmosTxTx
];
/**
 * Decodes a protobuf TxDecode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxDecodeResponse}
 */
export declare const decodeCosmosTxTxDecodeResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxTxDecodeResponse;
/**
 * A decoded protobuf TxEncodeRequest message
 *
 * Alias for: tx - the transaction to encode.
 */
export type DecodedCosmosTxTxEncodeRequest = [
    a_tx?: DecodedCosmosTxTx
];
/**
 * Decodes a protobuf TxEncodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxEncodeRequest}
 */
export declare const decodeCosmosTxTxEncodeRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxTxEncodeRequest;
/**
 * A decoded protobuf TxEncode message
 *
 * Alias for: tx_bytes - the encoded transaction bytes.
 */
export type DecodedCosmosTxTxEncodeResponse = [
    atu8_tx_bytes?: Uint8Array
];
/**
 * Decodes a protobuf TxEncode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxEncodeResponse}
 */
export declare const decodeCosmosTxTxEncodeResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxTxEncodeResponse;
/**
 * A decoded protobuf TxEncodeAminoRequest message
 *
 * Alias for: amino_json -
 */
export type DecodedCosmosTxTxEncodeAminoRequest = [
    s_amino_json?: string
];
/**
 * Decodes a protobuf TxEncodeAminoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxEncodeAminoRequest}
 */
export declare const decodeCosmosTxTxEncodeAminoRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxTxEncodeAminoRequest;
/**
 * A decoded protobuf TxEncodeAmino message
 *
 * Alias for: amino_binary -
 */
export type DecodedCosmosTxTxEncodeAminoResponse = [
    atu8_amino_binary?: Uint8Array
];
/**
 * Decodes a protobuf TxEncodeAmino message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxEncodeAminoResponse}
 */
export declare const decodeCosmosTxTxEncodeAminoResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxTxEncodeAminoResponse;
/**
 * A decoded protobuf TxDecodeAminoRequest message
 *
 * Alias for: amino_binary -
 */
export type DecodedCosmosTxTxDecodeAminoRequest = [
    atu8_amino_binary?: Uint8Array
];
/**
 * Decodes a protobuf TxDecodeAminoRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxDecodeAminoRequest}
 */
export declare const decodeCosmosTxTxDecodeAminoRequest: (atu8_payload: Uint8Array) => DecodedCosmosTxTxDecodeAminoRequest;
/**
 * A decoded protobuf TxDecodeAmino message
 *
 * Alias for: amino_json -
 */
export type DecodedCosmosTxTxDecodeAminoResponse = [
    s_amino_json?: string
];
/**
 * Decodes a protobuf TxDecodeAmino message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedCosmosTxTxDecodeAminoResponse}
 */
export declare const decodeCosmosTxTxDecodeAminoResponse: (atu8_payload: Uint8Array) => DecodedCosmosTxTxDecodeAminoResponse;
/**
 * Destructures the fields of a {@link CosmosTxGetTxsEventRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: events - the list of transaction event type. Deprecated: post v0.47.x use query instead, which should contain a valid events query.
 *   - 1: pagination - defines a pagination for the request. Deprecated: post v0.46.x use page and limit instead.
 *   - 2: order_by -
 *   - 3: page - the page number to query, starts at 1. If not provided, will default to first page.
 *   - 4: limit - the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app.
 *   - 5: query - defines the transaction event query that is proxied to Tendermint's TxSearch RPC method. The query must be valid. Since cosmos-sdk 0.50
 */
export declare const destructCosmosTxGetTxsEventRequest: (g_struct: CosmosTxGetTxsEventRequest) => [events?: string[], pagination?: CosmosBaseQueryPageRequest, order_by?: JsonEnumCosmosTxOrderBy, page?: CwUint64, limit?: CwUint64, query?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_TXS_EVENT_REQUEST = "/cosmos.tx.v1beta1.GetTxsEventRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetTxsEventRequest` - the request type for the Service.TxsByEvents RPC method.
 */
export type CosmosTxGetTxsEventRequest = {
    events?: string[] | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
    order_by?: JsonEnumCosmosTxOrderBy | undefined;
    page?: CwUint64 | undefined;
    limit?: CwUint64 | undefined;
    query?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxGetTxsEventResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: txs - the list of queried transactions.
 *   - 1: tx_responses - the list of queried TxResponses.
 *   - 2: pagination - defines a pagination for the response. Deprecated: post v0.46.x use total instead.
 *   - 3: total - total number of results available
 */
export declare const destructCosmosTxGetTxsEventResponse: (g_struct: CosmosTxGetTxsEventResponse) => [txs?: CosmosTxTx[], tx_responses?: CosmosBaseAbciTxResponse[], pagination?: CosmosBaseQueryPageResponse, total?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_TXS_EVENT_RESPONSE = "/cosmos.tx.v1beta1.GetTxsEventResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetTxsEventResponse` - the response type for the Service.TxsByEvents RPC method.
 */
export type CosmosTxGetTxsEventResponse = {
    txs?: CosmosTxTx[] | undefined;
    tx_responses?: CosmosBaseAbciTxResponse[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
    total?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxBroadcastTxRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx_bytes - the raw transaction.
 *   - 1: mode -
 */
export declare const destructCosmosTxBroadcastTxRequest: (g_struct: CosmosTxBroadcastTxRequest) => [tx_bytes?: Uint8Array, mode?: JsonEnumCosmosTxBroadcastMode];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_BROADCAST_TX_REQUEST = "/cosmos.tx.v1beta1.BroadcastTxRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.BroadcastTxRequest` - the request type for the Service.BroadcastTxRequest RPC method.
 */
export type CosmosTxBroadcastTxRequest = {
    tx_bytes?: CwBase64 | undefined;
    mode?: JsonEnumCosmosTxBroadcastMode | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxBroadcastTxResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx_response - the queried TxResponses.
 */
export declare const destructCosmosTxBroadcastTxResponse: (g_struct: CosmosTxBroadcastTxResponse) => [tx_response?: CosmosBaseAbciTxResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_BROADCAST_TX_RESPONSE = "/cosmos.tx.v1beta1.BroadcastTxResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.BroadcastTxResponse` - the response type for the Service.BroadcastTx method.
 */
export type CosmosTxBroadcastTxResponse = {
    tx_response?: CosmosBaseAbciTxResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxSimulateRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx - the transaction to simulate. Deprecated. Send raw tx bytes instead.
 *   - 1: tx_bytes - the raw transaction. Since: cosmos-sdk 0.43
 */
export declare const destructCosmosTxSimulateRequest: (g_struct: CosmosTxSimulateRequest) => [tx?: CosmosTxTx, tx_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_SIMULATE_REQUEST = "/cosmos.tx.v1beta1.SimulateRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.SimulateRequest` - the request type for the Service.Simulate RPC method.
 */
export type CosmosTxSimulateRequest = {
    tx?: CosmosTxTx | undefined;
    tx_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxSimulateResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: gas_info - the information about gas used in the simulation.
 *   - 1: result - the result of the simulation.
 */
export declare const destructCosmosTxSimulateResponse: (g_struct: CosmosTxSimulateResponse) => [gas_info?: CosmosBaseAbciGasInfo, result?: CosmosBaseAbciResult];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_SIMULATE_RESPONSE = "/cosmos.tx.v1beta1.SimulateResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.SimulateResponse` - the response type for the Service.SimulateRPC method.
 */
export type CosmosTxSimulateResponse = {
    gas_info?: CosmosBaseAbciGasInfo | undefined;
    result?: CosmosBaseAbciResult | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxGetTxRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: hash - the tx hash to query, encoded as a hex string.
 */
export declare const destructCosmosTxGetTxRequest: (g_struct: CosmosTxGetTxRequest) => [hash?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_TX_REQUEST = "/cosmos.tx.v1beta1.GetTxRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetTxRequest` - the request type for the Service.GetTx RPC method.
 */
export type CosmosTxGetTxRequest = {
    hash?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxGetTxResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx - the queried transaction.
 *   - 1: tx_response - the queried TxResponses.
 */
export declare const destructCosmosTxGetTxResponse: (g_struct: CosmosTxGetTxResponse) => [tx?: CosmosTxTx, tx_response?: CosmosBaseAbciTxResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_TX_RESPONSE = "/cosmos.tx.v1beta1.GetTxResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetTxResponse` - the response type for the Service.GetTx method.
 */
export type CosmosTxGetTxResponse = {
    tx?: CosmosTxTx | undefined;
    tx_response?: CosmosBaseAbciTxResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxGetBlockWithTxsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: height - the height of the block to query.
 *   - 1: pagination - defines a pagination for the request.
 */
export declare const destructCosmosTxGetBlockWithTxsRequest: (g_struct: CosmosTxGetBlockWithTxsRequest) => [height?: CwInt64, pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_BLOCK_WITH_TXS_REQUEST = "/cosmos.tx.v1beta1.GetBlockWithTxsRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetBlockWithTxsRequest` - the request type for the Service.GetBlockWithTxs RPC method. Since: cosmos-sdk 0.45.2
 */
export type CosmosTxGetBlockWithTxsRequest = {
    height?: CwInt64 | undefined;
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxGetBlockWithTxsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: txs - the transactions in the block.
 *   - 1: block_id -
 *   - 2: block -
 *   - 3: pagination - defines a pagination for the response.
 */
export declare const destructCosmosTxGetBlockWithTxsResponse: (g_struct: CosmosTxGetBlockWithTxsResponse) => [txs?: CosmosTxTx[], block_id?: TendermintTypesBlockID, block?: TendermintTypesBlock, pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_GET_BLOCK_WITH_TXS_RESPONSE = "/cosmos.tx.v1beta1.GetBlockWithTxsResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.GetBlockWithTxsResponse` - the response type for the Service.GetBlockWithTxs method. Since: cosmos-sdk 0.45.2
 */
export type CosmosTxGetBlockWithTxsResponse = {
    txs?: CosmosTxTx[] | undefined;
    block_id?: TendermintTypesBlockID | undefined;
    block?: TendermintTypesBlock | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxDecodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx_bytes - the raw transaction.
 */
export declare const destructCosmosTxTxDecodeRequest: (g_struct: CosmosTxTxDecodeRequest) => [tx_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_DECODE_REQUEST = "/cosmos.tx.v1beta1.TxDecodeRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxDecodeRequest` - the request type for the Service.TxDecode RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxDecodeRequest = {
    tx_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxDecodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx - the decoded transaction.
 */
export declare const destructCosmosTxTxDecodeResponse: (g_struct: CosmosTxTxDecodeResponse) => [tx?: CosmosTxTx];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_DECODE_RESPONSE = "/cosmos.tx.v1beta1.TxDecodeResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxDecodeResponse` - the response type for the Service.TxDecode method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxDecodeResponse = {
    tx?: CosmosTxTx | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxEncodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx - the transaction to encode.
 */
export declare const destructCosmosTxTxEncodeRequest: (g_struct: CosmosTxTxEncodeRequest) => [tx?: CosmosTxTx];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_ENCODE_REQUEST = "/cosmos.tx.v1beta1.TxEncodeRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxEncodeRequest` - the request type for the Service.TxEncode RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxEncodeRequest = {
    tx?: CosmosTxTx | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxEncodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tx_bytes - the encoded transaction bytes.
 */
export declare const destructCosmosTxTxEncodeResponse: (g_struct: CosmosTxTxEncodeResponse) => [tx_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_ENCODE_RESPONSE = "/cosmos.tx.v1beta1.TxEncodeResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxEncodeResponse` - the response type for the Service.TxEncode method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxEncodeResponse = {
    tx_bytes?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxEncodeAminoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amino_json -
 */
export declare const destructCosmosTxTxEncodeAminoRequest: (g_struct: CosmosTxTxEncodeAminoRequest) => [amino_json?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_ENCODE_AMINO_REQUEST = "/cosmos.tx.v1beta1.TxEncodeAminoRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxEncodeAminoRequest` - the request type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxEncodeAminoRequest = {
    amino_json?: string | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxEncodeAminoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amino_binary -
 */
export declare const destructCosmosTxTxEncodeAminoResponse: (g_struct: CosmosTxTxEncodeAminoResponse) => [amino_binary?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_ENCODE_AMINO_RESPONSE = "/cosmos.tx.v1beta1.TxEncodeAminoResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxEncodeAminoResponse` - the response type for the Service.TxEncodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxEncodeAminoResponse = {
    amino_binary?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxDecodeAminoRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amino_binary -
 */
export declare const destructCosmosTxTxDecodeAminoRequest: (g_struct: CosmosTxTxDecodeAminoRequest) => [amino_binary?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_DECODE_AMINO_REQUEST = "/cosmos.tx.v1beta1.TxDecodeAminoRequest";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxDecodeAminoRequest` - the request type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxDecodeAminoRequest = {
    amino_binary?: CwBase64 | undefined;
};
/**
 * Destructures the fields of a {@link CosmosTxTxDecodeAminoResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amino_json -
 */
export declare const destructCosmosTxTxDecodeAminoResponse: (g_struct: CosmosTxTxDecodeAminoResponse) => [amino_json?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_COSMOS_TX_TX_DECODE_AMINO_RESPONSE = "/cosmos.tx.v1beta1.TxDecodeAminoResponse";
/**
 * JSON serialization of `cosmos.tx.v1beta1.TxDecodeAminoResponse` - the response type for the Service.TxDecodeAmino RPC method. Since: cosmos-sdk 0.47
 */
export type CosmosTxTxDecodeAminoResponse = {
    amino_json?: string | undefined;
};
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_UNSPECIFIED** - specifies an unknown sorting order. OrderBy defaults to ASC in this case.
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxOrderBy}
 */
export declare const XC_PROTO_COSMOS_TX_ORDER_BY_UNSPECIFIED = 0;
/**
 * JSON enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_UNSPECIFIED** - specifies an unknown sorting order. OrderBy defaults to ASC in this case.
 *
 * Belongs to enum type {@link JsonEnumCosmosTxOrderBy}
 */
export declare const SI_JSON_COSMOS_TX_ORDER_BY_UNSPECIFIED = "ORDER_BY_UNSPECIFIED";
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_ASC** - defines ascending order
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxOrderBy}
 */
export declare const XC_PROTO_COSMOS_TX_ORDER_BY_ASC = 1;
/**
 * JSON enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_ASC** - defines ascending order
 *
 * Belongs to enum type {@link JsonEnumCosmosTxOrderBy}
 */
export declare const SI_JSON_COSMOS_TX_ORDER_BY_ASC = "ORDER_BY_ASC";
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_DESC** - defines descending order
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxOrderBy}
 */
export declare const XC_PROTO_COSMOS_TX_ORDER_BY_DESC = 2;
/**
 * JSON enum value for `cosmos.tx.v1beta1.OrderBy`.
 *
 * **ORDER_BY_DESC** - defines descending order
 *
 * Belongs to enum type {@link JsonEnumCosmosTxOrderBy}
 */
export declare const SI_JSON_COSMOS_TX_ORDER_BY_DESC = "ORDER_BY_DESC";
/**
 * Raw protobuf enum values for `cosmos.tx.v1beta1.OrderBy` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_COSMOS_TX_ORDER_BY_UNSPECIFIED}
 *   - {@link XC_PROTO_COSMOS_TX_ORDER_BY_ASC}
 *   - {@link XC_PROTO_COSMOS_TX_ORDER_BY_DESC}
 */
export type ProtoEnumCosmosTxOrderBy = typeof XC_PROTO_COSMOS_TX_ORDER_BY_UNSPECIFIED | typeof XC_PROTO_COSMOS_TX_ORDER_BY_ASC | typeof XC_PROTO_COSMOS_TX_ORDER_BY_DESC;
/**
 * JSON enum values for `cosmos.tx.v1beta1.OrderBy` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_COSMOS_TX_ORDER_BY_UNSPECIFIED}
 *   - {@link SI_JSON_COSMOS_TX_ORDER_BY_ASC}
 *   - {@link SI_JSON_COSMOS_TX_ORDER_BY_DESC}
 */
export type JsonEnumCosmosTxOrderBy = typeof SI_JSON_COSMOS_TX_ORDER_BY_UNSPECIFIED | typeof SI_JSON_COSMOS_TX_ORDER_BY_ASC | typeof SI_JSON_COSMOS_TX_ORDER_BY_DESC;
/**
 * Maps a protobuf enum int value for `cosmos.tx.v1beta1.OrderBy` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumCosmosTxOrderBy: Record<ProtoEnumCosmosTxOrderBy, JsonEnumCosmosTxOrderBy>;
/**
 * Maps a JSON enum string value for `cosmos.tx.v1beta1.OrderBy` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumCosmosTxOrderBy: Record<JsonEnumCosmosTxOrderBy, ProtoEnumCosmosTxOrderBy>;
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_UNSPECIFIED** - zero-value for mode ordering
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxBroadcastMode}
 */
export declare const XC_PROTO_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED = 0;
/**
 * JSON enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_UNSPECIFIED** - zero-value for mode ordering
 *
 * Belongs to enum type {@link JsonEnumCosmosTxBroadcastMode}
 */
export declare const SI_JSON_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED = "BROADCAST_MODE_UNSPECIFIED";
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_BLOCK** - Deprecated: use BROADCAST_MODE_SYNC instead, BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxBroadcastMode}
 */
export declare const XC_PROTO_COSMOS_TX_BROADCAST_MODE_BLOCK = 1;
/**
 * JSON enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_BLOCK** - Deprecated: use BROADCAST_MODE_SYNC instead, BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
 *
 * Belongs to enum type {@link JsonEnumCosmosTxBroadcastMode}
 */
export declare const SI_JSON_COSMOS_TX_BROADCAST_MODE_BLOCK = "BROADCAST_MODE_BLOCK";
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_SYNC** - defines a tx broadcasting mode where the client waits for a CheckTx execution response only.
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxBroadcastMode}
 */
export declare const XC_PROTO_COSMOS_TX_BROADCAST_MODE_SYNC = 2;
/**
 * JSON enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_SYNC** - defines a tx broadcasting mode where the client waits for a CheckTx execution response only.
 *
 * Belongs to enum type {@link JsonEnumCosmosTxBroadcastMode}
 */
export declare const SI_JSON_COSMOS_TX_BROADCAST_MODE_SYNC = "BROADCAST_MODE_SYNC";
/**
 * Protobuf enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_ASYNC** - defines a tx broadcasting mode where the client returns immediately.
 *
 * Belongs to enum type {@link ProtoEnumCosmosTxBroadcastMode}
 */
export declare const XC_PROTO_COSMOS_TX_BROADCAST_MODE_ASYNC = 3;
/**
 * JSON enum value for `cosmos.tx.v1beta1.BroadcastMode`.
 *
 * **BROADCAST_MODE_ASYNC** - defines a tx broadcasting mode where the client returns immediately.
 *
 * Belongs to enum type {@link JsonEnumCosmosTxBroadcastMode}
 */
export declare const SI_JSON_COSMOS_TX_BROADCAST_MODE_ASYNC = "BROADCAST_MODE_ASYNC";
/**
 * Raw protobuf enum values for `cosmos.tx.v1beta1.BroadcastMode` to be used when passing to an encoder or comparing to a decoded protobuf value.
 *
 * Values:
 *   - {@link XC_PROTO_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED}
 *   - {@link XC_PROTO_COSMOS_TX_BROADCAST_MODE_BLOCK}
 *   - {@link XC_PROTO_COSMOS_TX_BROADCAST_MODE_SYNC}
 *   - {@link XC_PROTO_COSMOS_TX_BROADCAST_MODE_ASYNC}
 */
export type ProtoEnumCosmosTxBroadcastMode = typeof XC_PROTO_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED | typeof XC_PROTO_COSMOS_TX_BROADCAST_MODE_BLOCK | typeof XC_PROTO_COSMOS_TX_BROADCAST_MODE_SYNC | typeof XC_PROTO_COSMOS_TX_BROADCAST_MODE_ASYNC;
/**
 * JSON enum values for `cosmos.tx.v1beta1.BroadcastMode` to be used when passing to a gRPC-gateway method or comparing to a response value
 *
 * Values:
 *   - {@link SI_JSON_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED}
 *   - {@link SI_JSON_COSMOS_TX_BROADCAST_MODE_BLOCK}
 *   - {@link SI_JSON_COSMOS_TX_BROADCAST_MODE_SYNC}
 *   - {@link SI_JSON_COSMOS_TX_BROADCAST_MODE_ASYNC}
 */
export type JsonEnumCosmosTxBroadcastMode = typeof SI_JSON_COSMOS_TX_BROADCAST_MODE_UNSPECIFIED | typeof SI_JSON_COSMOS_TX_BROADCAST_MODE_BLOCK | typeof SI_JSON_COSMOS_TX_BROADCAST_MODE_SYNC | typeof SI_JSON_COSMOS_TX_BROADCAST_MODE_ASYNC;
/**
 * Maps a protobuf enum int value for `cosmos.tx.v1beta1.BroadcastMode` to is JSON equivalent enum string value
 */
export declare const ProtoToJsonEnumCosmosTxBroadcastMode: Record<ProtoEnumCosmosTxBroadcastMode, JsonEnumCosmosTxBroadcastMode>;
/**
 * Maps a JSON enum string value for `cosmos.tx.v1beta1.BroadcastMode` to is protobuf equivalent enum int value
 */
export declare const JsonToProtoEnumCosmosTxBroadcastMode: Record<JsonEnumCosmosTxBroadcastMode, ProtoEnumCosmosTxBroadcastMode>;
