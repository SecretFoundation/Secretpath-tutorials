/// <reference types="node" />
import type { Encoded, Opt } from '../../../../api/types.js';
import type { GaiaGlobalfeeParams, DecodedGaiaGlobalfeeParams } from './genesis.js';
export type EncodedGaiaGlobalfeeQueryParamsRequest = Encoded<'/gaia.globalfee.v1beta1.QueryParamsRequest'>;
export type EncodedGaiaGlobalfeeQueryParamsResponse = Encoded<'/gaia.globalfee.v1beta1.QueryParamsResponse'>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export declare const queryGaiaGlobalfeeParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<GaiaGlobalfeeQueryParamsResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message: QueryMinimumGasPricesRequest is the request type for the Query/MinimumGasPrices RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeGaiaGlobalfeeQueryParamsRequest: () => EncodedGaiaGlobalfeeQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: QueryMinimumGasPricesResponse is the response type for the Query/MinimumGasPrices RPC method.
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeGaiaGlobalfeeQueryParamsResponse: (atu8_params?: Opt<Encoded<'/gaia.globalfee.v1beta1.Params'>>) => EncodedGaiaGlobalfeeQueryParamsResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedGaiaGlobalfeeQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedGaiaGlobalfeeQueryParamsRequest}
 */
export declare const decodeGaiaGlobalfeeQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params -
 */
export type DecodedGaiaGlobalfeeQueryParamsResponse = [
    a_params?: DecodedGaiaGlobalfeeParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedGaiaGlobalfeeQueryParamsResponse}
 */
export declare const decodeGaiaGlobalfeeQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedGaiaGlobalfeeQueryParamsResponse;
/**
 * Destructures the fields of a {@link GaiaGlobalfeeQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructGaiaGlobalfeeQueryParamsRequest: (g_struct: GaiaGlobalfeeQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_GAIA_GLOBALFEE_QUERY_PARAMS_REQUEST = "/gaia.globalfee.v1beta1.QueryParamsRequest";
/**
 * JSON serialization of `gaia.globalfee.v1beta1.QueryParamsRequest` - QueryMinimumGasPricesRequest is the request type for the Query/MinimumGasPrices RPC method.
 */
export type GaiaGlobalfeeQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link GaiaGlobalfeeQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export declare const destructGaiaGlobalfeeQueryParamsResponse: (g_struct: GaiaGlobalfeeQueryParamsResponse) => [params?: GaiaGlobalfeeParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_GAIA_GLOBALFEE_QUERY_PARAMS_RESPONSE = "/gaia.globalfee.v1beta1.QueryParamsResponse";
/**
 * JSON serialization of `gaia.globalfee.v1beta1.QueryParamsResponse` - QueryMinimumGasPricesResponse is the response type for the Query/MinimumGasPrices RPC method.
 */
export type GaiaGlobalfeeQueryParamsResponse = {
    params?: GaiaGlobalfeeParams | undefined;
};
