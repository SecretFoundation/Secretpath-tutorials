import type { Encoded, Opt } from '../../../../../api/types.js';
import type { CosmosAuthBaseAccount, DecodedCosmosAuthBaseAccount } from '../../../../cosmos/auth/v1beta1/auth.js';
export type AnyIbcApplicationsInterchainAccountsInterchainAccount = Encoded<'ibc.applications.interchain_accounts.v1.InterchainAccountI'>;
export type EncodedIbcApplicationsInterchainAccountsInterchainAccount = Encoded<'/ibc.applications.interchain_accounts.v1.InterchainAccount' | 'ibc.applications.interchain_accounts.v1.InterchainAccountI'>;
/**
 * Encodes a `InterchainAccount` protobuf message wrapped in the `Any` container: An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 * @param g_base_account - `base_account`:
 * @param s_account_owner - `account_owner`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export declare const anyInterchainAccount: (atu8_base_account?: Opt<Encoded<'/cosmos.auth.v1beta1.BaseAccount'>>, s_account_owner?: Opt<string>) => AnyIbcApplicationsInterchainAccountsInterchainAccount;
/**
 * Encodes a `InterchainAccount` protobuf message: An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 * @param g_base_account - `base_account`:
 * @param s_account_owner - `account_owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcApplicationsInterchainAccountsInterchainAccount: (atu8_base_account?: Opt<Encoded<'/cosmos.auth.v1beta1.BaseAccount'>>, s_account_owner?: Opt<string>) => EncodedIbcApplicationsInterchainAccountsInterchainAccount;
/**
 * A decoded protobuf InterchainAccount message
 *
 * Tuple where:
 *   - 0: base_account -
 *   - 1: account_owner -
 */
export type DecodedIbcApplicationsInterchainAccountsInterchainAccount = [
    a_base_account?: DecodedCosmosAuthBaseAccount,
    s_account_owner?: string
];
/**
 * Decodes a protobuf InterchainAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsInterchainAccountsInterchainAccount}
 */
export declare const decodeIbcApplicationsInterchainAccountsInterchainAccount: (atu8_payload: Uint8Array) => DecodedIbcApplicationsInterchainAccountsInterchainAccount;
/**
 * Destructures the fields of a {@link IbcApplicationsInterchainAccountsInterchainAccount} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: base_account -
 *   - 1: account_owner -
 */
export declare const destructIbcApplicationsInterchainAccountsInterchainAccount: (g_struct: IbcApplicationsInterchainAccountsInterchainAccount) => [base_account?: CosmosAuthBaseAccount, account_owner?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_APPLICATIONS_INTERCHAIN_ACCOUNTS_INTERCHAIN_ACCOUNT = "/ibc.applications.interchain_accounts.v1.InterchainAccount";
/**
 * JSON serialization of `ibc.applications.interchain_accounts.v1.InterchainAccount` - An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 */
export type IbcApplicationsInterchainAccountsInterchainAccount = {
    base_account?: CosmosAuthBaseAccount | undefined;
    account_owner?: string | undefined;
};
