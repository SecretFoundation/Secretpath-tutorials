import { decode_protobuf, decode_coin } from '../../../../../api/protobuf-reader.js';
import { Protobuf, coins } from '../../../../../api/protobuf-writer.js';
import { decodeIbcApplicationsTransferDenomTrace, decodeIbcApplicationsTransferParams } from './transfer.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the ibc-transfer genesis state
 * @param si_port - `port_id`:
 * @param a_denom_traces - `denom_traces`:
 * @param g_params - `params`:
 * @param a_total_escroweds - `total_escrowed`: contains the total amount of tokens escrowed by the transfer module
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcApplicationsTransferGenesisState = (si_port, a_denom_traces, atu8_params, a_total_escroweds) => Protobuf() // ...
    .s(si_port) // string port_id = 1
    .B(a_denom_traces) // DenomTrace[] denom_traces = 2
    .b(atu8_params) // Params params = 3
    .B(coins(a_total_escroweds)) // Coin[] total_escrowed = 4
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcApplicationsTransferGenesisState}
 */
export const decodeIbcApplicationsTransferGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0, 1, 0], [0, decodeIbcApplicationsTransferDenomTrace, decodeIbcApplicationsTransferParams, decode_coin]);
/**
 * Destructures the fields of a {@link IbcApplicationsTransferGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: port_id -
 *   - 1: denom_traces -
 *   - 2: params -
 *   - 3: total_escrowed - contains the total amount of tokens escrowed by the transfer module
 */
export const destructIbcApplicationsTransferGenesisState = (g_struct) => [g_struct.port_id, g_struct.denom_traces, g_struct.params, g_struct.total_escrowed];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_APPLICATIONS_TRANSFER_GENESIS_STATE = '/ibc.applications.transfer.v1.GenesisState';
//# sourceMappingURL=genesis.js.map