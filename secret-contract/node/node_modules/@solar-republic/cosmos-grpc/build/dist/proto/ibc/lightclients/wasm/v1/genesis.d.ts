import type { CwBase64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedIbcLightclientsWasmGenesisState = Encoded<'/ibc.lightclients.wasm.v1.GenesisState'>;
export type EncodedIbcLightclientsWasmContract = Encoded<'/ibc.lightclients.wasm.v1.Contract'>;
/**
 * Encodes a `GenesisState` protobuf message: defines 08-wasm's keeper genesis state
 * @param a_contracts - `contracts`: uploaded light client wasm contracts
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmGenesisState: (a_contracts?: Opt<Encoded<'/ibc.lightclients.wasm.v1.Contract'>[]>) => EncodedIbcLightclientsWasmGenesisState;
/**
 * Encodes a `Contract` protobuf message: stores contract code
 * @param atu8_code_bytes - `code_bytes`: contract byte code
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeIbcLightclientsWasmContract: (atu8_code_bytes?: Opt<Uint8Array>) => EncodedIbcLightclientsWasmContract;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: contracts - uploaded light client wasm contracts
 */
export type DecodedIbcLightclientsWasmGenesisState = [
    a_contracts?: DecodedIbcLightclientsWasmContract[]
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmGenesisState}
 */
export declare const decodeIbcLightclientsWasmGenesisState: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmGenesisState;
/**
 * A decoded protobuf Contract message
 *
 * Alias for: code_bytes - contract byte code
 */
export type DecodedIbcLightclientsWasmContract = [
    atu8_code_bytes?: Uint8Array
];
/**
 * Decodes a protobuf Contract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmContract}
 */
export declare const decodeIbcLightclientsWasmContract: (atu8_payload: Uint8Array) => DecodedIbcLightclientsWasmContract;
/**
 * Destructures the fields of a {@link IbcLightclientsWasmGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contracts - uploaded light client wasm contracts
 */
export declare const destructIbcLightclientsWasmGenesisState: (g_struct: IbcLightclientsWasmGenesisState) => [contracts?: IbcLightclientsWasmContract[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_GENESIS_STATE = "/ibc.lightclients.wasm.v1.GenesisState";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.GenesisState` - defines 08-wasm's keeper genesis state
 */
export type IbcLightclientsWasmGenesisState = {
    contracts?: IbcLightclientsWasmContract[] | undefined;
};
/**
 * Destructures the fields of a {@link IbcLightclientsWasmContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_bytes - contract byte code
 */
export declare const destructIbcLightclientsWasmContract: (g_struct: IbcLightclientsWasmContract) => [code_bytes?: Uint8Array];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_CONTRACT = "/ibc.lightclients.wasm.v1.Contract";
/**
 * JSON serialization of `ibc.lightclients.wasm.v1.Contract` - stores contract code
 */
export type IbcLightclientsWasmContract = {
    code_bytes?: CwBase64 | undefined;
};
