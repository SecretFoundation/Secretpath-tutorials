import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../../api/transport.js';
import { safe_base64_to_bytes } from '../../../../../api/util.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../../cosmos/base/query/v1beta1/pagination.js';
const SR_LCD_IBC_LIGHTCLIENTS_WASM_QUERY = '/ibc/lightclients/wasm/v1/checksums';
/**
 * Get all Wasm checksums
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: checksums - a list of the hex encoded checksums of all wasm codes stored.
 *   - 1: pagination - a list of the hex encoded checksums of all wasm codes stored.
 */
export const queryIbcLightclientsWasmChecksums = restful_grpc(g_pagination => [SR_LCD_IBC_LIGHTCLIENTS_WASM_QUERY, {
        pagination: g_pagination,
    }]);
/**
 * Get Wasm code for given checksum
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_checksum - a hex encoded string of the code stored.
 * @returns a tuple where:
 *   - 0: data - the 'data' response property
 */
export const queryIbcLightclientsWasmCode = restful_grpc(s_checksum => [SR_LCD_IBC_LIGHTCLIENTS_WASM_QUERY + '/' + s_checksum + '/code']);
/**
 * Encodes a `QueryChecksumsRequest` protobuf message: the request type for the Query/Checksums RPC method.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmQueryChecksumsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `QueryChecksumsResponse` protobuf message: the response type for the Query/Checksums RPC method.
 * @param a_checksums - `checksums`: a list of the hex encoded checksums of all wasm codes stored.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmQueryChecksumsResponse = (a_checksums, atu8_pagination) => Protobuf() // ...
    .S(a_checksums) // string[] checksums = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryCodeRequest` protobuf message: the request type for the Query/Code RPC method.
 * @param s_checksum - `checksum`: a hex encoded string of the code stored.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmQueryCodeRequest = (s_checksum) => Protobuf() // ...
    .s(s_checksum) // string checksum = 1
    .o;
/**
 * Encodes a `QueryCodeResponse` protobuf message: the response type for the Query/Code RPC method.
 * @param atu8_data - `data`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeIbcLightclientsWasmQueryCodeResponse = (atu8_data) => Protobuf() // ...
    .b(atu8_data) // bytes data = 1
    .o;
/**
 * Decodes a protobuf QueryChecksumsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryChecksumsRequest}
 */
export const decodeIbcLightclientsWasmQueryChecksumsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryChecksums message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryChecksumsResponse}
 */
export const decodeIbcLightclientsWasmQueryChecksumsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [4, 1], [0, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryCodeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryCodeRequest}
 */
export const decodeIbcLightclientsWasmQueryCodeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryCode message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedIbcLightclientsWasmQueryCodeResponse}
 */
export const decodeIbcLightclientsWasmQueryCodeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryChecksumsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export const destructIbcLightclientsWasmQueryChecksumsRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CHECKSUMS_REQUEST = '/ibc.lightclients.wasm.v1.QueryChecksumsRequest';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryChecksumsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksums - a list of the hex encoded checksums of all wasm codes stored.
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructIbcLightclientsWasmQueryChecksumsResponse = (g_struct) => [g_struct.checksums, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CHECKSUMS_RESPONSE = '/ibc.lightclients.wasm.v1.QueryChecksumsResponse';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryCodeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: checksum - a hex encoded string of the code stored.
 */
export const destructIbcLightclientsWasmQueryCodeRequest = (g_struct) => [g_struct.checksum];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CODE_REQUEST = '/ibc.lightclients.wasm.v1.QueryCodeRequest';
/**
 * Destructures the fields of a {@link IbcLightclientsWasmQueryCodeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: data -
 */
export const destructIbcLightclientsWasmQueryCodeResponse = (g_struct) => [safe_base64_to_bytes(g_struct.data)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_IBC_LIGHTCLIENTS_WASM_QUERY_CODE_RESPONSE = '/ibc.lightclients.wasm.v1.QueryCodeResponse';
//# sourceMappingURL=query.js.map