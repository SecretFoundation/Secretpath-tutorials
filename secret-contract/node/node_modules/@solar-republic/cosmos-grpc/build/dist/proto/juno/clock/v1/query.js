import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import { decodeJunoClockClockContract } from './clock.js';
import { decodeJunoClockParams } from './genesis.js';
const SR_LCD_JUNO_CLOCK_QUERY = '/juno/clock/v1/';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: clock_contracts - the clock contracts.
 *   - 1: pagination - the clock contracts.
 */
export const queryJunoClockClockContracts = restful_grpc(g_pagination => [SR_LCD_JUNO_CLOCK_QUERY + 'contracts', {
        pagination: g_pagination,
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_contract - the address of the contract to query.
 * @returns a tuple where:
 *   - 0: clock_contract - contract is the clock contract.
 */
export const queryJunoClockClockContract = restful_grpc(sa_contract => [SR_LCD_JUNO_CLOCK_QUERY + 'contracts/' + sa_contract]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryJunoClockParams = restful_grpc(() => [SR_LCD_JUNO_CLOCK_QUERY + 'params']);
/**
 * Encodes a `QueryClockContracts` protobuf message: the request type to get all contracts.
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryClockContracts = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `QueryClockContractsResponse` protobuf message: the response type for the Query/ClockContracts RPC method.
 * @param a_clock_contracts - `clock_contracts`: the clock contracts.
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryClockContractsResponse = (a_clock_contracts, atu8_pagination) => Protobuf() // ...
    .B(a_clock_contracts) // ClockContract[] clock_contracts = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryClockContract` protobuf message: the request type to get a single contract.
 * @param sa_contract - `contract_address`: the address of the contract to query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryClockContract = (sa_contract) => Protobuf() // ...
    .s(sa_contract) // string contract_address = 1
    .o;
/**
 * Encodes a `QueryClockContractResponse` protobuf message: the response type for the Query/ClockContract RPC method.
 * @param g_clock_contract - `clock_contract`: contract is the clock contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryClockContractResponse = (atu8_clock_contract) => Protobuf() // ...
    .b(atu8_clock_contract) // ClockContract clock_contract = 1
    .o;
/**
 * Encodes a `QueryParamsRequest` protobuf message: QueryParams is the request type to get all module params.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message: QueryClockContractsResponse is the response type for the Query/ClockContracts RPC method.
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoClockQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Decodes a protobuf QueryClockContracts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryClockContracts}
 */
export const decodeJunoClockQueryClockContracts = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryClockContracts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryClockContractsResponse}
 */
export const decodeJunoClockQueryClockContractsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeJunoClockClockContract, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryClockContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryClockContract}
 */
export const decodeJunoClockQueryClockContract = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryClockContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryClockContractResponse}
 */
export const decodeJunoClockQueryClockContractResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeJunoClockClockContract]);
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryParamsRequest}
 */
export const decodeJunoClockQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoClockQueryParamsResponse}
 */
export const decodeJunoClockQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeJunoClockParams]);
/**
 * Destructures the fields of a {@link JunoClockQueryClockContracts} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - defines an optional pagination for the request.
 */
export const destructJunoClockQueryClockContracts = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_CLOCK_CONTRACTS = '/juno.clock.v1.QueryClockContracts';
/**
 * Destructures the fields of a {@link JunoClockQueryClockContractsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: clock_contracts - the clock contracts.
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructJunoClockQueryClockContractsResponse = (g_struct) => [g_struct.clock_contracts, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_CLOCK_CONTRACTS_RESPONSE = '/juno.clock.v1.QueryClockContractsResponse';
/**
 * Destructures the fields of a {@link JunoClockQueryClockContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - the address of the contract to query.
 */
export const destructJunoClockQueryClockContract = (g_struct) => [g_struct.contract_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_CLOCK_CONTRACT = '/juno.clock.v1.QueryClockContract';
/**
 * Destructures the fields of a {@link JunoClockQueryClockContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: clock_contract - contract is the clock contract.
 */
export const destructJunoClockQueryClockContractResponse = (g_struct) => [g_struct.clock_contract];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_CLOCK_CONTRACT_RESPONSE = '/juno.clock.v1.QueryClockContractResponse';
/**
 * Destructures the fields of a {@link JunoClockQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructJunoClockQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_PARAMS_REQUEST = '/juno.clock.v1.QueryParamsRequest';
/**
 * Destructures the fields of a {@link JunoClockQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructJunoClockQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_CLOCK_QUERY_PARAMS_RESPONSE = '/juno.clock.v1.QueryParamsResponse';
//# sourceMappingURL=query.js.map