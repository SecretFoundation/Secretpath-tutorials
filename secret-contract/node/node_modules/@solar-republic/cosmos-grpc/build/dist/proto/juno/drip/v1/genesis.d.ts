import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedJunoDripGenesisState = Encoded<'/juno.drip.v1.GenesisState'>;
export type EncodedJunoDripParams = Encoded<'/juno.drip.v1.Params'>;
/**
 * Encodes a `GenesisState` protobuf message: defines the module's genesis state.
 * @param g_params - `params`: the drip module parameters
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoDripGenesisState: (atu8_params?: Opt<Encoded<'/juno.drip.v1.Params'>>) => EncodedJunoDripGenesisState;
/**
 * Encodes a `Params` protobuf message: defines the drip module params
 * @param b_enable_drip - `enable_drip`: defines a parameter to enable the drip module
 * @param a_allowed_addresses - `allowed_addresses`: defines the list of addresses authorized to use the module
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoDripParams: (b_enable_drip?: Opt<boolean | 0 | 1>, a_allowed_addresses?: Opt<string[]>) => EncodedJunoDripParams;
/**
 * A decoded protobuf GenesisState message
 *
 * Alias for: params - the drip module parameters
 */
export type DecodedJunoDripGenesisState = [
    a_params?: DecodedJunoDripParams
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoDripGenesisState}
 */
export declare const decodeJunoDripGenesisState: (atu8_payload: Uint8Array) => DecodedJunoDripGenesisState;
/**
 * A decoded protobuf Params message
 *
 * Tuple where:
 *   - 0: enable_drip - defines a parameter to enable the drip module
 *   - 2: allowed_addresses - defines the list of addresses authorized to use the module
 */
export type DecodedJunoDripParams = [
    b_enable_drip?: 0 | 1,
    w_0?: undefined,
    a_allowed_addresses?: string[]
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedJunoDripParams}
 */
export declare const decodeJunoDripParams: (atu8_payload: Uint8Array, RESERVED?: never) => DecodedJunoDripParams;
/**
 * Destructures the fields of a {@link JunoDripParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: enable_drip - defines a parameter to enable the drip module
 *   - 2: allowed_addresses - defines the list of addresses authorized to use the module
 */
export declare const destructJunoDripParams: (g_struct: JunoDripParams) => [enable_drip?: boolean, EMPTY?: void, allowed_addresses?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_DRIP_PARAMS = "/juno.drip.v1.Params";
/**
 * JSON serialization of `juno.drip.v1.Params` - defines the drip module params
 */
export type JunoDripParams = {
    enable_drip?: boolean | undefined;
    allowed_addresses?: string[] | undefined;
};
/**
 * Destructures the fields of a {@link JunoDripGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - the drip module parameters
 */
export declare const destructJunoDripGenesisState: (g_struct: JunoDripGenesisState) => [params?: JunoDripParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_DRIP_GENESIS_STATE = "/juno.drip.v1.GenesisState";
/**
 * JSON serialization of `juno.drip.v1.GenesisState` - defines the module's genesis state.
 */
export type JunoDripGenesisState = {
    params?: JunoDripParams | undefined;
};
