/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the module's genesis state.
 * @param g_params - `params`: the drip module parameters
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoDripGenesisState = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `Params` protobuf message: defines the drip module params
 * @param b_enable_drip - `enable_drip`: defines a parameter to enable the drip module
 * @param a_allowed_addresses - `allowed_addresses`: defines the list of addresses authorized to use the module
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeJunoDripParams = (b_enable_drip, a_allowed_addresses) => Protobuf() // ...
    .v(b_enable_drip) // boolean enable_drip = 1
    .S(a_allowed_addresses, 3) // string[] allowed_addresses = 3
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoDripGenesisState}
 */
export const decodeJunoDripGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeJunoDripParams]);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedJunoDripParams}
 */
export const decodeJunoDripParams = ((atu8_payload, [b_enable_drip, , a_allowed_addresses] = decode_protobuf(atu8_payload, [1, 0, 4])) => [b_enable_drip, __UNDEFINED, a_allowed_addresses]);
/**
 * Destructures the fields of a {@link JunoDripParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: enable_drip - defines a parameter to enable the drip module
 *   - 2: allowed_addresses - defines the list of addresses authorized to use the module
 */
export const destructJunoDripParams = (g_struct) => [g_struct.enable_drip, __UNDEFINED, g_struct.allowed_addresses];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_DRIP_PARAMS = '/juno.drip.v1.Params';
/**
 * Destructures the fields of a {@link JunoDripGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - the drip module parameters
 */
export const destructJunoDripGenesisState = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_JUNO_DRIP_GENESIS_STATE = '/juno.drip.v1.GenesisState';
//# sourceMappingURL=genesis.js.map