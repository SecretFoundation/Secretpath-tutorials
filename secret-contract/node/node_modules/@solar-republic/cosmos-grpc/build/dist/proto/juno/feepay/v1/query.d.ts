/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import type { JunoFeepayFeePayContract, DecodedJunoFeepayFeePayContract } from './feepay.js';
import type { JunoFeepayParams, DecodedJunoFeepayParams } from './genesis.js';
export type EncodedJunoFeepayQueryFeePayContract = Encoded<'/juno.feepay.v1.QueryFeePayContract'>;
export type EncodedJunoFeepayQueryFeePayContractResponse = Encoded<'/juno.feepay.v1.QueryFeePayContractResponse'>;
export type EncodedJunoFeepayQueryFeePayContracts = Encoded<'/juno.feepay.v1.QueryFeePayContracts'>;
export type EncodedJunoFeepayQueryFeePayContractsResponse = Encoded<'/juno.feepay.v1.QueryFeePayContractsResponse'>;
export type EncodedJunoFeepayQueryFeePayContractUses = Encoded<'/juno.feepay.v1.QueryFeePayContractUses'>;
export type EncodedJunoFeepayQueryFeePayContractUsesResponse = Encoded<'/juno.feepay.v1.QueryFeePayContractUsesResponse'>;
export type EncodedJunoFeepayQueryFeePayWalletIsEligible = Encoded<'/juno.feepay.v1.QueryFeePayWalletIsEligible'>;
export type EncodedJunoFeepayQueryFeePayWalletIsEligibleResponse = Encoded<'/juno.feepay.v1.QueryFeePayWalletIsEligibleResponse'>;
export type EncodedJunoFeepayQueryParamsRequest = Encoded<'/juno.feepay.v1.QueryParamsRequest'>;
export type EncodedJunoFeepayQueryParamsResponse = Encoded<'/juno.feepay.v1.QueryParamsResponse'>;
/**
 * Queries a single fee pay contract by address
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_contract - defines the address of the fee pay contract
 * @returns a tuple where:
 *   - 0: fee_pay_contract - contract defines the fee pay contract
 */
export declare const queryJunoFeepayFeePayContract: (z_req: string | ({
    origin: string;
} & RequestInit), sa_contract?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayQueryFeePayContractResponse>>;
/**
 * Retrieve all fee pay contracts
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - Pagination defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: fee_pay_contracts - A slice of all the stored fee pay contracts
 *   - 1: pagination - A slice of all the stored fee pay contracts
 */
export declare const queryJunoFeepayFeePayContracts: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayQueryFeePayContractsResponse>>;
/**
 * Retrieve the number of uses on a fee pay contract by wallet
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_contract - The contract address.
 * @param sa_wallet - The wallet address.
 * @returns a tuple where:
 *   - 0: uses - The number of uses on the fee pay contract by wallet
 */
export declare const queryJunoFeepayFeePayContractUses: (z_req: string | ({
    origin: string;
} & RequestInit), sa_contract?: Opt<`${string}1${string}`>, sa_wallet?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayQueryFeePayContractUsesResponse>>;
/**
 * Query if sender is eligible for fee pay contract interaction
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_contract - The contract address.
 * @param sa_wallet - The wallet address.
 * @returns a tuple where:
 *   - 0: eligible - The eligibility of the wallet for fee pay contract interactions
 */
export declare const queryJunoFeepayFeePayWalletIsEligible: (z_req: string | ({
    origin: string;
} & RequestInit), sa_contract?: Opt<`${string}1${string}`>, sa_wallet?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayQueryFeePayWalletIsEligibleResponse>>;
/**
 * Retrieves the FeePay module params
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the returned Feepay parameter
 */
export declare const queryJunoFeepayParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayQueryParamsResponse>>;
/**
 * Encodes a `QueryFeePayContract` protobuf message: retrieves a single fee pay contract
 * @param sa_contract - `contract_address`: defines the address of the fee pay contract
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContract: (sa_contract?: Opt<WeakAccountAddr>) => EncodedJunoFeepayQueryFeePayContract;
/**
 * Encodes a `QueryFeePayContractResponse` protobuf message: defines the response for retrieving a single fee pay contract
 * @param g_fee_pay_contract - `fee_pay_contract`: contract defines the fee pay contract
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContractResponse: (atu8_fee_pay_contract?: Opt<Encoded<'/juno.feepay.v1.FeePayContract'>>) => EncodedJunoFeepayQueryFeePayContractResponse;
/**
 * Encodes a `QueryFeePayContracts` protobuf message: Message for querying a list of fee pay contracts
 * @param g_pagination - `pagination`: Pagination defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContracts: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedJunoFeepayQueryFeePayContracts;
/**
 * Encodes a `QueryFeePayContractsResponse` protobuf message: The response for querying all fee pay contracts
 * @param a_fee_pay_contracts - `fee_pay_contracts`: A slice of all the stored fee pay contracts
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContractsResponse: (a_fee_pay_contracts?: Opt<Encoded<'/juno.feepay.v1.FeePayContract'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedJunoFeepayQueryFeePayContractsResponse;
/**
 * Encodes a `QueryFeePayContractUses` protobuf message: Message for querying the number of uses on a fee pay contract by wallet
 * @param sa_contract - `contract_address`: The contract address.
 * @param sa_wallet - `wallet_address`: The wallet address.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContractUses: (sa_contract?: Opt<WeakAccountAddr>, sa_wallet?: Opt<WeakAccountAddr>) => EncodedJunoFeepayQueryFeePayContractUses;
/**
 * Encodes a `QueryFeePayContractUsesResponse` protobuf message: The response for querying the number of uses on a fee pay contract by wallet
 * @param sg_uses - `uses`: The number of uses on the fee pay contract by wallet
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayContractUsesResponse: (sg_uses?: Opt<WeakUint64Str>) => EncodedJunoFeepayQueryFeePayContractUsesResponse;
/**
 * Encodes a `QueryFeePayWalletIsEligible` protobuf message: Message for querying if a wallet is eligible for fee pay contract interactions
 * @param sa_contract - `contract_address`: The contract address.
 * @param sa_wallet - `wallet_address`: The wallet address.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayWalletIsEligible: (sa_contract?: Opt<WeakAccountAddr>, sa_wallet?: Opt<WeakAccountAddr>) => EncodedJunoFeepayQueryFeePayWalletIsEligible;
/**
 * Encodes a `QueryFeePayWalletIsEligibleResponse` protobuf message: The response for querying if a wallet is eligible for fee pay contract interactions
 * @param b_eligible - `eligible`: The eligibility of the wallet for fee pay contract interactions
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryFeePayWalletIsEligibleResponse: (b_eligible?: Opt<boolean | 0 | 1>) => EncodedJunoFeepayQueryFeePayWalletIsEligibleResponse;
/**
 * Encodes a `QueryParamsRequest` protobuf message: the request type for the Query/Params RPC method.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryParamsRequest: () => EncodedJunoFeepayQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message: the response type for the Query/Params RPC method.
 * @param g_params - `params`: the returned Feepay parameter
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayQueryParamsResponse: (atu8_params?: Opt<Encoded<'/juno.feepay.v1.Params'>>) => EncodedJunoFeepayQueryParamsResponse;
/**
 * A decoded protobuf QueryFeePayContract message
 *
 * Alias for: contract_address - defines the address of the fee pay contract
 */
export type DecodedJunoFeepayQueryFeePayContract = [
    sa_contract?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContract}
 */
export declare const decodeJunoFeepayQueryFeePayContract: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContract;
/**
 * A decoded protobuf QueryFeePayContract message
 *
 * Alias for: fee_pay_contract - contract defines the fee pay contract
 */
export type DecodedJunoFeepayQueryFeePayContractResponse = [
    a_fee_pay_contract?: DecodedJunoFeepayFeePayContract
];
/**
 * Decodes a protobuf QueryFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContractResponse}
 */
export declare const decodeJunoFeepayQueryFeePayContractResponse: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContractResponse;
/**
 * A decoded protobuf QueryFeePayContracts message
 *
 * Alias for: pagination - Pagination defines an optional pagination for the request.
 */
export type DecodedJunoFeepayQueryFeePayContracts = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf QueryFeePayContracts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContracts}
 */
export declare const decodeJunoFeepayQueryFeePayContracts: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContracts;
/**
 * A decoded protobuf QueryFeePayContracts message
 *
 * Tuple where:
 *   - 0: fee_pay_contracts - A slice of all the stored fee pay contracts
 *   - 1: pagination - defines the pagination in the response.
 */
export type DecodedJunoFeepayQueryFeePayContractsResponse = [
    a_fee_pay_contracts?: DecodedJunoFeepayFeePayContract[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf QueryFeePayContracts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContractsResponse}
 */
export declare const decodeJunoFeepayQueryFeePayContractsResponse: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContractsResponse;
/**
 * A decoded protobuf QueryFeePayContractUses message
 *
 * Tuple where:
 *   - 0: contract_address - The contract address.
 *   - 1: wallet_address - The wallet address.
 */
export type DecodedJunoFeepayQueryFeePayContractUses = [
    sa_contract?: CwAccountAddr,
    sa_wallet?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryFeePayContractUses message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContractUses}
 */
export declare const decodeJunoFeepayQueryFeePayContractUses: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContractUses;
/**
 * A decoded protobuf QueryFeePayContractUses message
 *
 * Alias for: uses - The number of uses on the fee pay contract by wallet
 */
export type DecodedJunoFeepayQueryFeePayContractUsesResponse = [
    sg_uses?: CwUint64
];
/**
 * Decodes a protobuf QueryFeePayContractUses message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayContractUsesResponse}
 */
export declare const decodeJunoFeepayQueryFeePayContractUsesResponse: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayContractUsesResponse;
/**
 * A decoded protobuf QueryFeePayWalletIsEligible message
 *
 * Tuple where:
 *   - 0: contract_address - The contract address.
 *   - 1: wallet_address - The wallet address.
 */
export type DecodedJunoFeepayQueryFeePayWalletIsEligible = [
    sa_contract?: CwAccountAddr,
    sa_wallet?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryFeePayWalletIsEligible message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayWalletIsEligible}
 */
export declare const decodeJunoFeepayQueryFeePayWalletIsEligible: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayWalletIsEligible;
/**
 * A decoded protobuf QueryFeePayWalletIsEligible message
 *
 * Alias for: eligible - The eligibility of the wallet for fee pay contract interactions
 */
export type DecodedJunoFeepayQueryFeePayWalletIsEligibleResponse = [
    b_eligible?: 0 | 1
];
/**
 * Decodes a protobuf QueryFeePayWalletIsEligible message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryFeePayWalletIsEligibleResponse}
 */
export declare const decodeJunoFeepayQueryFeePayWalletIsEligibleResponse: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryFeePayWalletIsEligibleResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryParamsRequest}
 */
export declare const decodeJunoFeepayQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - the returned Feepay parameter
 */
export type DecodedJunoFeepayQueryParamsResponse = [
    a_params?: DecodedJunoFeepayParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayQueryParamsResponse}
 */
export declare const decodeJunoFeepayQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedJunoFeepayQueryParamsResponse;
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - defines the address of the fee pay contract
 */
export declare const destructJunoFeepayQueryFeePayContract: (g_struct: JunoFeepayQueryFeePayContract) => [contract_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACT = "/juno.feepay.v1.QueryFeePayContract";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContract` - retrieves a single fee pay contract
 */
export type JunoFeepayQueryFeePayContract = {
    contract_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_pay_contract - contract defines the fee pay contract
 */
export declare const destructJunoFeepayQueryFeePayContractResponse: (g_struct: JunoFeepayQueryFeePayContractResponse) => [fee_pay_contract?: JunoFeepayFeePayContract];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACT_RESPONSE = "/juno.feepay.v1.QueryFeePayContractResponse";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContractResponse` - defines the response for retrieving a single fee pay contract
 */
export type JunoFeepayQueryFeePayContractResponse = {
    fee_pay_contract?: JunoFeepayFeePayContract | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContracts} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination - Pagination defines an optional pagination for the request.
 */
export declare const destructJunoFeepayQueryFeePayContracts: (g_struct: JunoFeepayQueryFeePayContracts) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACTS = "/juno.feepay.v1.QueryFeePayContracts";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContracts` - Message for querying a list of fee pay contracts
 */
export type JunoFeepayQueryFeePayContracts = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContractsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: fee_pay_contracts - A slice of all the stored fee pay contracts
 *   - 1: pagination - defines the pagination in the response.
 */
export declare const destructJunoFeepayQueryFeePayContractsResponse: (g_struct: JunoFeepayQueryFeePayContractsResponse) => [fee_pay_contracts?: JunoFeepayFeePayContract[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACTS_RESPONSE = "/juno.feepay.v1.QueryFeePayContractsResponse";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContractsResponse` - The response for querying all fee pay contracts
 */
export type JunoFeepayQueryFeePayContractsResponse = {
    fee_pay_contracts?: JunoFeepayFeePayContract[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContractUses} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - The contract address.
 *   - 1: wallet_address - The wallet address.
 */
export declare const destructJunoFeepayQueryFeePayContractUses: (g_struct: JunoFeepayQueryFeePayContractUses) => [contract_address?: CwAccountAddr, wallet_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACT_USES = "/juno.feepay.v1.QueryFeePayContractUses";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContractUses` - Message for querying the number of uses on a fee pay contract by wallet
 */
export type JunoFeepayQueryFeePayContractUses = {
    contract_address?: CwAccountAddr | undefined;
    wallet_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayContractUsesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: uses - The number of uses on the fee pay contract by wallet
 */
export declare const destructJunoFeepayQueryFeePayContractUsesResponse: (g_struct: JunoFeepayQueryFeePayContractUsesResponse) => [uses?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_CONTRACT_USES_RESPONSE = "/juno.feepay.v1.QueryFeePayContractUsesResponse";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayContractUsesResponse` - The response for querying the number of uses on a fee pay contract by wallet
 */
export type JunoFeepayQueryFeePayContractUsesResponse = {
    uses?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayWalletIsEligible} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - The contract address.
 *   - 1: wallet_address - The wallet address.
 */
export declare const destructJunoFeepayQueryFeePayWalletIsEligible: (g_struct: JunoFeepayQueryFeePayWalletIsEligible) => [contract_address?: CwAccountAddr, wallet_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_WALLET_IS_ELIGIBLE = "/juno.feepay.v1.QueryFeePayWalletIsEligible";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayWalletIsEligible` - Message for querying if a wallet is eligible for fee pay contract interactions
 */
export type JunoFeepayQueryFeePayWalletIsEligible = {
    contract_address?: CwAccountAddr | undefined;
    wallet_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryFeePayWalletIsEligibleResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: eligible - The eligibility of the wallet for fee pay contract interactions
 */
export declare const destructJunoFeepayQueryFeePayWalletIsEligibleResponse: (g_struct: JunoFeepayQueryFeePayWalletIsEligibleResponse) => [eligible?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_FEE_PAY_WALLET_IS_ELIGIBLE_RESPONSE = "/juno.feepay.v1.QueryFeePayWalletIsEligibleResponse";
/**
 * JSON serialization of `juno.feepay.v1.QueryFeePayWalletIsEligibleResponse` - The response for querying if a wallet is eligible for fee pay contract interactions
 */
export type JunoFeepayQueryFeePayWalletIsEligibleResponse = {
    eligible?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayQueryParamsRequest: (g_struct: JunoFeepayQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_PARAMS_REQUEST = "/juno.feepay.v1.QueryParamsRequest";
/**
 * JSON serialization of `juno.feepay.v1.QueryParamsRequest` - the request type for the Query/Params RPC method.
 */
export type JunoFeepayQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link JunoFeepayQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - the returned Feepay parameter
 */
export declare const destructJunoFeepayQueryParamsResponse: (g_struct: JunoFeepayQueryParamsResponse) => [params?: JunoFeepayParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_QUERY_PARAMS_RESPONSE = "/juno.feepay.v1.QueryParamsResponse";
/**
 * JSON serialization of `juno.feepay.v1.QueryParamsResponse` - the response type for the Query/Params RPC method.
 */
export type JunoFeepayQueryParamsResponse = {
    params?: JunoFeepayParams | undefined;
};
