/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, SlimCoin, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../cosmos/base/v1beta1/coin.js';
import type { JunoFeepayFeePayContract, DecodedJunoFeepayFeePayContract } from './feepay.js';
import type { JunoFeepayParams, DecodedJunoFeepayParams } from './genesis.js';
export type EncodedJunoFeepayMsgRegisterFeePayContract = Encoded<'/juno.feepay.v1.MsgRegisterFeePayContract'>;
export type EncodedJunoFeepayMsgRegisterFeePayContractResponse = Encoded<'/juno.feepay.v1.MsgRegisterFeePayContractResponse'>;
export type EncodedJunoFeepayMsgUnregisterFeePayContract = Encoded<'/juno.feepay.v1.MsgUnregisterFeePayContract'>;
export type EncodedJunoFeepayMsgUnregisterFeePayContractResponse = Encoded<'/juno.feepay.v1.MsgUnregisterFeePayContractResponse'>;
export type EncodedJunoFeepayMsgFundFeePayContract = Encoded<'/juno.feepay.v1.MsgFundFeePayContract'>;
export type EncodedJunoFeepayMsgFundFeePayContractResponse = Encoded<'/juno.feepay.v1.MsgFundFeePayContractResponse'>;
export type EncodedJunoFeepayMsgUpdateFeePayContractWalletLimit = Encoded<'/juno.feepay.v1.MsgUpdateFeePayContractWalletLimit'>;
export type EncodedJunoFeepayMsgUpdateFeePayContractWalletLimitResponse = Encoded<'/juno.feepay.v1.MsgUpdateFeePayContractWalletLimitResponse'>;
export type EncodedJunoFeepayMsgUpdateParams = Encoded<'/juno.feepay.v1.MsgUpdateParams'>;
export type EncodedJunoFeepayMsgUpdateParamsResponse = Encoded<'/juno.feepay.v1.MsgUpdateParamsResponse'>;
/**
 * RegisterFeeShare registers a new contract for receiving transaction fees
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender - The wallet address of the sender.
 * @param g_fee_pay_contract - The fee pay contract to register.
 * @returns an empty tuple
 */
export declare const submitJunoFeepayRegisterFeePayContract: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, g_fee_pay_contract?: Opt<JunoFeepayFeePayContract>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayMsgRegisterFeePayContractResponse>>;
/**
 * UnregisterFeeShare unregisters a contract for receiving transaction fees
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender - The wallet address of the sender.
 * @param sa_contract - The fee pay contract address.
 * @returns an empty tuple
 */
export declare const submitJunoFeepayUnregisterFeePayContract: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sa_contract?: Opt<`${string}1${string}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayMsgUnregisterFeePayContractResponse>>;
/**
 * Fund a fee pay contract
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender - The wallet address of the sender.
 * @param sa_contract - The fee pay contract to fund.
 * @param a_amounts - The coins to fund the contract with.
 * @returns an empty tuple
 */
export declare const submitJunoFeepayFundFeePayContract: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sa_contract?: Opt<`${string}1${string}`>, a_amounts?: Opt<SlimCoin[]>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayMsgFundFeePayContractResponse>>;
/**
 * Update a fee pay contract wallet limit
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender - The wallet address of the sender.
 * @param sa_contract - The fee pay contract to fund.
 * @param sg_wallet_limit - The new wallet limit.
 * @returns an empty tuple
 */
export declare const submitJunoFeepayUpdateFeePayContractWalletLimit: (z_req: string | ({
    origin: string;
} & RequestInit), sa_sender?: Opt<`${string}1${string}`>, sa_contract?: Opt<`${string}1${string}`>, sg_wallet_limit?: Opt<`${bigint}`>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<JunoFeepayMsgUpdateFeePayContractWalletLimitResponse>>;
/**
 * Encodes a `MsgRegisterFeePayContract` protobuf message: The message to register a fee pay contract.
 * @param sa_sender - `sender_address`: The wallet address of the sender.
 * @param g_fee_pay_contract - `fee_pay_contract`: The fee pay contract to register.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgRegisterFeePayContract: (sa_sender?: Opt<WeakAccountAddr>, atu8_fee_pay_contract?: Opt<Encoded<'/juno.feepay.v1.FeePayContract'>>) => EncodedJunoFeepayMsgRegisterFeePayContract;
/**
 * Encodes a `MsgRegisterFeePayContractResponse` protobuf message: The response message for registering a fee pay contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgRegisterFeePayContractResponse: () => EncodedJunoFeepayMsgRegisterFeePayContractResponse;
/**
 * Encodes a `MsgUnregisterFeePayContract` protobuf message: The message to unregister a fee pay contract.
 * @param sa_sender - `sender_address`: The wallet address of the sender.
 * @param sa_contract - `contract_address`: The fee pay contract address.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUnregisterFeePayContract: (sa_sender?: Opt<WeakAccountAddr>, sa_contract?: Opt<WeakAccountAddr>) => EncodedJunoFeepayMsgUnregisterFeePayContract;
/**
 * Encodes a `MsgUnregisterFeePayContractResponse` protobuf message: The response message for unregistering a fee pay contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUnregisterFeePayContractResponse: () => EncodedJunoFeepayMsgUnregisterFeePayContractResponse;
/**
 * Encodes a `MsgFundFeePayContract` protobuf message: The message to fund a fee pay contract
 * @param sa_sender - `sender_address`: The wallet address of the sender.
 * @param sa_contract - `contract_address`: The fee pay contract to fund.
 * @param a_amounts - `amount`: The coins to fund the contract with.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgFundFeePayContract: (sa_sender?: Opt<WeakAccountAddr>, sa_contract?: Opt<WeakAccountAddr>, a_amounts?: Opt<SlimCoin[]>) => EncodedJunoFeepayMsgFundFeePayContract;
/**
 * Encodes a `MsgFundFeePayContractResponse` protobuf message: The response message for funding a fee pay contract.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgFundFeePayContractResponse: () => EncodedJunoFeepayMsgFundFeePayContractResponse;
/**
 * Encodes a `MsgUpdateFeePayContractWalletLimit` protobuf message: The message to update a fee pay contract wallet limit.
 * @param sa_sender - `sender_address`: The wallet address of the sender.
 * @param sa_contract - `contract_address`: The fee pay contract to fund.
 * @param sg_wallet_limit - `wallet_limit`: The new wallet limit.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUpdateFeePayContractWalletLimit: (sa_sender?: Opt<WeakAccountAddr>, sa_contract?: Opt<WeakAccountAddr>, sg_wallet_limit?: Opt<WeakUint64Str>) => EncodedJunoFeepayMsgUpdateFeePayContractWalletLimit;
/**
 * Encodes a `MsgUpdateFeePayContractWalletLimitResponse` protobuf message: The response message for updating a fee pay contract wallet limit.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUpdateFeePayContractWalletLimitResponse: () => EncodedJunoFeepayMsgUpdateFeePayContractWalletLimitResponse;
/**
 * Encodes a `MsgUpdateParams` protobuf message: the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 * @param s_authority - `authority`: the address that controls the module (defaults to x/gov unless overwritten).
 * @param g_params - `params`: defines the x/feepay parameters to update. NOTE: All parameters must be supplied.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUpdateParams: (s_authority?: Opt<string>, atu8_params?: Opt<Encoded<'/juno.feepay.v1.Params'>>) => EncodedJunoFeepayMsgUpdateParams;
/**
 * Encodes a `MsgUpdateParamsResponse` protobuf message: defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeJunoFeepayMsgUpdateParamsResponse: () => EncodedJunoFeepayMsgUpdateParamsResponse;
/**
 * A decoded protobuf RegisterFeePayContract message
 *
 * Tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: fee_pay_contract - The fee pay contract to register.
 */
export type DecodedJunoFeepayMsgRegisterFeePayContract = [
    sa_sender?: CwAccountAddr,
    a_fee_pay_contract?: DecodedJunoFeepayFeePayContract
];
/**
 * Decodes a protobuf RegisterFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgRegisterFeePayContract}
 */
export declare const decodeJunoFeepayMsgRegisterFeePayContract: (atu8_payload: Uint8Array) => DecodedJunoFeepayMsgRegisterFeePayContract;
/**
 * A decoded protobuf RegisterFeePayContract message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayMsgRegisterFeePayContractResponse = [];
/**
 * Decodes a protobuf RegisterFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgRegisterFeePayContractResponse}
 */
export declare const decodeJunoFeepayMsgRegisterFeePayContractResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UnregisterFeePayContract message
 *
 * Tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract address.
 */
export type DecodedJunoFeepayMsgUnregisterFeePayContract = [
    sa_sender?: CwAccountAddr,
    sa_contract?: CwAccountAddr
];
/**
 * Decodes a protobuf UnregisterFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUnregisterFeePayContract}
 */
export declare const decodeJunoFeepayMsgUnregisterFeePayContract: (atu8_payload: Uint8Array) => DecodedJunoFeepayMsgUnregisterFeePayContract;
/**
 * A decoded protobuf UnregisterFeePayContract message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayMsgUnregisterFeePayContractResponse = [];
/**
 * Decodes a protobuf UnregisterFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUnregisterFeePayContractResponse}
 */
export declare const decodeJunoFeepayMsgUnregisterFeePayContractResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf FundFeePayContract message
 *
 * Tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract to fund.
 *   - 2: amount - The coins to fund the contract with.
 */
export type DecodedJunoFeepayMsgFundFeePayContract = [
    sa_sender?: CwAccountAddr,
    sa_contract?: CwAccountAddr,
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf FundFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgFundFeePayContract}
 */
export declare const decodeJunoFeepayMsgFundFeePayContract: (atu8_payload: Uint8Array) => DecodedJunoFeepayMsgFundFeePayContract;
/**
 * A decoded protobuf FundFeePayContract message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayMsgFundFeePayContractResponse = [];
/**
 * Decodes a protobuf FundFeePayContract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgFundFeePayContractResponse}
 */
export declare const decodeJunoFeepayMsgFundFeePayContractResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UpdateFeePayContractWalletLimit message
 *
 * Tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract to fund.
 *   - 2: wallet_limit - The new wallet limit.
 */
export type DecodedJunoFeepayMsgUpdateFeePayContractWalletLimit = [
    sa_sender?: CwAccountAddr,
    sa_contract?: CwAccountAddr,
    sg_wallet_limit?: CwUint64
];
/**
 * Decodes a protobuf UpdateFeePayContractWalletLimit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUpdateFeePayContractWalletLimit}
 */
export declare const decodeJunoFeepayMsgUpdateFeePayContractWalletLimit: (atu8_payload: Uint8Array) => DecodedJunoFeepayMsgUpdateFeePayContractWalletLimit;
/**
 * A decoded protobuf UpdateFeePayContractWalletLimit message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayMsgUpdateFeePayContractWalletLimitResponse = [];
/**
 * Decodes a protobuf UpdateFeePayContractWalletLimit message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUpdateFeePayContractWalletLimitResponse}
 */
export declare const decodeJunoFeepayMsgUpdateFeePayContractWalletLimitResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/feepay parameters to update. NOTE: All parameters must be supplied.
 */
export type DecodedJunoFeepayMsgUpdateParams = [
    s_authority?: string,
    a_params?: DecodedJunoFeepayParams
];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUpdateParams}
 */
export declare const decodeJunoFeepayMsgUpdateParams: (atu8_payload: Uint8Array) => DecodedJunoFeepayMsgUpdateParams;
/**
 * A decoded protobuf UpdateParams message
 *
 * Tuple where:
 */
export type DecodedJunoFeepayMsgUpdateParamsResponse = [];
/**
 * Decodes a protobuf UpdateParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedJunoFeepayMsgUpdateParamsResponse}
 */
export declare const decodeJunoFeepayMsgUpdateParamsResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link JunoFeepayMsgRegisterFeePayContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: fee_pay_contract - The fee pay contract to register.
 */
export declare const destructJunoFeepayMsgRegisterFeePayContract: (g_struct: JunoFeepayMsgRegisterFeePayContract) => [sender_address?: CwAccountAddr, fee_pay_contract?: JunoFeepayFeePayContract];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_REGISTER_FEE_PAY_CONTRACT = "/juno.feepay.v1.MsgRegisterFeePayContract";
/**
 * JSON serialization of `juno.feepay.v1.MsgRegisterFeePayContract` - The message to register a fee pay contract.
 */
export type JunoFeepayMsgRegisterFeePayContract = {
    sender_address?: CwAccountAddr | undefined;
    fee_pay_contract?: JunoFeepayFeePayContract | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayMsgRegisterFeePayContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayMsgRegisterFeePayContractResponse: (g_struct: JunoFeepayMsgRegisterFeePayContractResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_REGISTER_FEE_PAY_CONTRACT_RESPONSE = "/juno.feepay.v1.MsgRegisterFeePayContractResponse";
/**
 * JSON serialization of `juno.feepay.v1.MsgRegisterFeePayContractResponse` - The response message for registering a fee pay contract.
 */
export type JunoFeepayMsgRegisterFeePayContractResponse = {};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUnregisterFeePayContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract address.
 */
export declare const destructJunoFeepayMsgUnregisterFeePayContract: (g_struct: JunoFeepayMsgUnregisterFeePayContract) => [sender_address?: CwAccountAddr, contract_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UNREGISTER_FEE_PAY_CONTRACT = "/juno.feepay.v1.MsgUnregisterFeePayContract";
/**
 * JSON serialization of `juno.feepay.v1.MsgUnregisterFeePayContract` - The message to unregister a fee pay contract.
 */
export type JunoFeepayMsgUnregisterFeePayContract = {
    sender_address?: CwAccountAddr | undefined;
    contract_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUnregisterFeePayContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayMsgUnregisterFeePayContractResponse: (g_struct: JunoFeepayMsgUnregisterFeePayContractResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UNREGISTER_FEE_PAY_CONTRACT_RESPONSE = "/juno.feepay.v1.MsgUnregisterFeePayContractResponse";
/**
 * JSON serialization of `juno.feepay.v1.MsgUnregisterFeePayContractResponse` - The response message for unregistering a fee pay contract.
 */
export type JunoFeepayMsgUnregisterFeePayContractResponse = {};
/**
 * Destructures the fields of a {@link JunoFeepayMsgFundFeePayContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract to fund.
 *   - 2: amount - The coins to fund the contract with.
 */
export declare const destructJunoFeepayMsgFundFeePayContract: (g_struct: JunoFeepayMsgFundFeePayContract) => [sender_address?: CwAccountAddr, contract_address?: CwAccountAddr, amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_FUND_FEE_PAY_CONTRACT = "/juno.feepay.v1.MsgFundFeePayContract";
/**
 * JSON serialization of `juno.feepay.v1.MsgFundFeePayContract` - The message to fund a fee pay contract
 */
export type JunoFeepayMsgFundFeePayContract = {
    sender_address?: CwAccountAddr | undefined;
    contract_address?: CwAccountAddr | undefined;
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayMsgFundFeePayContractResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayMsgFundFeePayContractResponse: (g_struct: JunoFeepayMsgFundFeePayContractResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_FUND_FEE_PAY_CONTRACT_RESPONSE = "/juno.feepay.v1.MsgFundFeePayContractResponse";
/**
 * JSON serialization of `juno.feepay.v1.MsgFundFeePayContractResponse` - The response message for funding a fee pay contract.
 */
export type JunoFeepayMsgFundFeePayContractResponse = {};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUpdateFeePayContractWalletLimit} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender_address - The wallet address of the sender.
 *   - 1: contract_address - The fee pay contract to fund.
 *   - 2: wallet_limit - The new wallet limit.
 */
export declare const destructJunoFeepayMsgUpdateFeePayContractWalletLimit: (g_struct: JunoFeepayMsgUpdateFeePayContractWalletLimit) => [sender_address?: CwAccountAddr, contract_address?: CwAccountAddr, wallet_limit?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UPDATE_FEE_PAY_CONTRACT_WALLET_LIMIT = "/juno.feepay.v1.MsgUpdateFeePayContractWalletLimit";
/**
 * JSON serialization of `juno.feepay.v1.MsgUpdateFeePayContractWalletLimit` - The message to update a fee pay contract wallet limit.
 */
export type JunoFeepayMsgUpdateFeePayContractWalletLimit = {
    sender_address?: CwAccountAddr | undefined;
    contract_address?: CwAccountAddr | undefined;
    wallet_limit?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUpdateFeePayContractWalletLimitResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayMsgUpdateFeePayContractWalletLimitResponse: (g_struct: JunoFeepayMsgUpdateFeePayContractWalletLimitResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UPDATE_FEE_PAY_CONTRACT_WALLET_LIMIT_RESPONSE = "/juno.feepay.v1.MsgUpdateFeePayContractWalletLimitResponse";
/**
 * JSON serialization of `juno.feepay.v1.MsgUpdateFeePayContractWalletLimitResponse` - The response message for updating a fee pay contract wallet limit.
 */
export type JunoFeepayMsgUpdateFeePayContractWalletLimitResponse = {};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUpdateParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: authority - the address that controls the module (defaults to x/gov unless overwritten).
 *   - 1: params - defines the x/feepay parameters to update. NOTE: All parameters must be supplied.
 */
export declare const destructJunoFeepayMsgUpdateParams: (g_struct: JunoFeepayMsgUpdateParams) => [authority?: string, params?: JunoFeepayParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UPDATE_PARAMS = "/juno.feepay.v1.MsgUpdateParams";
/**
 * JSON serialization of `juno.feepay.v1.MsgUpdateParams` - the Msg/UpdateParams request type. Since: cosmos-sdk 0.47
 */
export type JunoFeepayMsgUpdateParams = {
    authority?: string | undefined;
    params?: JunoFeepayParams | undefined;
};
/**
 * Destructures the fields of a {@link JunoFeepayMsgUpdateParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructJunoFeepayMsgUpdateParamsResponse: (g_struct: JunoFeepayMsgUpdateParamsResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_JUNO_FEEPAY_MSG_UPDATE_PARAMS_RESPONSE = "/juno.feepay.v1.MsgUpdateParamsResponse";
/**
 * JSON serialization of `juno.feepay.v1.MsgUpdateParamsResponse` - defines the response structure for executing a MsgUpdateParams message. Since: cosmos-sdk 0.47
 */
export type JunoFeepayMsgUpdateParamsResponse = {};
