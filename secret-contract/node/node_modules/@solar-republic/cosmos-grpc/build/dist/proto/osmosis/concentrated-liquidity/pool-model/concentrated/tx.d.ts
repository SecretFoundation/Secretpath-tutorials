import type { WeakUint64Str, WeakAccountAddr, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = Encoded<'/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool'>;
export type EncodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = Encoded<'/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse'>;
/**
 * Encodes a `MsgCreateConcentratedPool` protobuf message: ===================== MsgCreateConcentratedPool
 * @param sa_sender - `sender`:
 * @param s_denom0 - `denom0`:
 * @param s_denom1 - `denom1`:
 * @param sg_tick_spacing - `tick_spacing`:
 * @param s_spread_factor - `spread_factor`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool: (sa_sender?: Opt<WeakAccountAddr>, s_denom0?: Opt<string>, s_denom1?: Opt<string>, sg_tick_spacing?: Opt<WeakUint64Str>, s_spread_factor?: Opt<string>) => EncodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool;
/**
 * Encodes a `MsgCreateConcentratedPoolResponse` protobuf message: Returns a unique poolID to identify the pool with.
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse: (sg_pool_id?: Opt<WeakUint64Str>) => EncodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse;
/**
 * A decoded protobuf CreateConcentratedPool message
 *
 * Tuple where:
 *   - 0: sender -
 *   - 1: denom0 -
 *   - 2: denom1 -
 *   - 3: tick_spacing -
 *   - 4: spread_factor -
 */
export type DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = [
    sa_sender?: CwAccountAddr,
    s_denom0?: string,
    s_denom1?: string,
    sg_tick_spacing?: CwUint64,
    s_spread_factor?: string
];
/**
 * Decodes a protobuf CreateConcentratedPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool}
 */
export declare const decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool;
/**
 * A decoded protobuf CreateConcentratedPool message
 *
 * Alias for: pool_id -
 */
export type DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = [
    sg_pool_id?: CwUint64
];
/**
 * Decodes a protobuf CreateConcentratedPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse}
 */
export declare const decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse: (atu8_payload: Uint8Array) => DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse;
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: denom0 -
 *   - 2: denom1 -
 *   - 3: tick_spacing -
 *   - 4: spread_factor -
 */
export declare const destructOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool: (g_struct: OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool) => [sender?: CwAccountAddr, denom0?: string, denom1?: string, tick_spacing?: CwUint64, spread_factor?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLMODEL_CONCENTRATED_MSG_CREATE_CONCENTRATED_POOL = "/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool";
/**
 * JSON serialization of `osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool` - ===================== MsgCreateConcentratedPool
 */
export type OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = {
    sender?: CwAccountAddr | undefined;
    denom0?: string | undefined;
    denom1?: string | undefined;
    tick_spacing?: CwUint64 | undefined;
    spread_factor?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export declare const destructOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse: (g_struct: OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse) => [pool_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLMODEL_CONCENTRATED_MSG_CREATE_CONCENTRATED_POOL_RESPONSE = "/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse";
/**
 * JSON serialization of `osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse` - Returns a unique poolID to identify the pool with.
 */
export type OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = {
    pool_id?: CwUint64 | undefined;
};
