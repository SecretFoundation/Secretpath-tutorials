import { decode_protobuf } from '../../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../../api/protobuf-writer.js';
/**
 * Encodes a `MsgCreateConcentratedPool` protobuf message: ===================== MsgCreateConcentratedPool
 * @param sa_sender - `sender`:
 * @param s_denom0 - `denom0`:
 * @param s_denom1 - `denom1`:
 * @param sg_tick_spacing - `tick_spacing`:
 * @param s_spread_factor - `spread_factor`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = (sa_sender, s_denom0, s_denom1, sg_tick_spacing, s_spread_factor) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .s(s_denom0) // string denom0 = 2
    .s(s_denom1) // string denom1 = 3
    .g(sg_tick_spacing) // uint64 tick_spacing = 4
    .s(s_spread_factor) // string spread_factor = 5
    .o;
/**
 * Encodes a `MsgCreateConcentratedPoolResponse` protobuf message: Returns a unique poolID to identify the pool with.
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Decodes a protobuf CreateConcentratedPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool}
 */
export const decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5, 3, 5]);
/**
 * Decodes a protobuf CreateConcentratedPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse}
 */
export const decodeOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: denom0 -
 *   - 2: denom1 -
 *   - 3: tick_spacing -
 *   - 4: spread_factor -
 */
export const destructOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPool = (g_struct) => [g_struct.sender, g_struct.denom0, g_struct.denom1, g_struct.tick_spacing, g_struct.spread_factor];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLMODEL_CONCENTRATED_MSG_CREATE_CONCENTRATED_POOL = '/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPool';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisConcentratedliquidityPoolmodelConcentratedMsgCreateConcentratedPoolResponse = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLMODEL_CONCENTRATED_MSG_CREATE_CONCENTRATED_POOL_RESPONSE = '/osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1.MsgCreateConcentratedPoolResponse';
//# sourceMappingURL=tx.js.map