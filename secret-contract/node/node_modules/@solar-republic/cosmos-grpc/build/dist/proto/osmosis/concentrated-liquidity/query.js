import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf, decode_coin } from '../../../api/protobuf-reader.js';
import { Protobuf, coins } from '../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../cosmos/base/query/v1beta1/pagination.js';
import { decodeCosmosBaseDecCoin } from '../../cosmos/base/v1beta1/coin.js';
import { decodeGoogleProtobufAny } from '../../google/protobuf/any.js';
import { decodeOsmosisConcentratedliquidityIncentiveRecord } from './incentive_record.js';
import { decodeOsmosisConcentratedliquidityParams } from './params.js';
import { decodeOsmosisConcentratedliquidityFullPositionBreakdown, decodeOsmosisConcentratedliquidityPositionWithPeriodLock } from './position.js';
import { decodeOsmosisConcentratedliquidityUptimeTracker } from './tickInfo.js';
const SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY = '/osmosis/concentratedliquidity/v1beta1/';
/**
 * Returns all concentrated liquidity pools
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export const queryOsmosisConcentratedliquidityPools = restful_grpc(g_pagination => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'pools', {
        pagination: g_pagination,
    }]);
/**
 * Returns concentrated liquidity module params.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryOsmosisConcentratedliquidityParams = restful_grpc(() => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'params']);
/**
 * Returns all concentrated postitions of some address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @param sg_pool_id -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: positions - the 'positions' response property
 *   - 1: pagination - the 'positions' response property
 */
export const queryOsmosisConcentratedliquidityUserPositions = restful_grpc((sa_address, sg_pool_id, g_pagination) => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'positions/' + sa_address, {
        pool_id: sg_pool_id,
        pagination: g_pagination,
    }]);
/**
 * Returns the amount of liquidity per every tick range existing within the given pool
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export const queryOsmosisConcentratedliquidityLiquidityPerTickRange = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'liquidity_per_tick_range', {
        pool_id: sg_pool_id,
    }]);
/**
 * Returns liquidity net in the direction given. Uses the bound if specified, if not uses either min tick / max tick depending on the direction.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in -
 * @param sg_start_tick -
 * @param b_use_cur_tick -
 * @param sg_bound_tick -
 * @param b_use_no_bound -
 * @returns a tuple where:
 *   - 0: liquidity_depths - the 'liquidity_depths' response property
 *   - 1: current_tick - the 'liquidity_depths' response property
 *   - 2: current_liquidity - the 'liquidity_depths' response property
 *   - 3: current_sqrt_price - the 'liquidity_depths' response property
 */
export const queryOsmosisConcentratedliquidityLiquidityNetInDirection = restful_grpc((sg_pool_id, s_token_in, sg_start_tick, b_use_cur_tick, sg_bound_tick, b_use_no_bound) => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'liquidity_net_in_direction', {
        pool_id: sg_pool_id,
        token_in: s_token_in,
        start_tick: sg_start_tick,
        use_cur_tick: b_use_cur_tick,
        bound_tick: sg_bound_tick,
        use_no_bound: b_use_no_bound,
    }]);
/**
 * Returns the amount of spread rewards that can be claimed by a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: claimable_spread_rewards - the 'claimable_spread_rewards' response property
 */
export const queryOsmosisConcentratedliquidityClaimableSpreadRewards = restful_grpc(sg_position_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'claimable_spread_rewards', {
        position_id: sg_position_id,
    }]);
/**
 * Returns the amount of incentives that can be claimed and how many would be forfeited by a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: claimable_incentives - the 'claimable_incentives' response property
 *   - 1: forfeited_incentives - the 'claimable_incentives' response property
 */
export const queryOsmosisConcentratedliquidityClaimableIncentives = restful_grpc(sg_position_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'claimable_incentives', {
        position_id: sg_position_id,
    }]);
/**
 * Returns a position with the given id.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_position_id -
 * @returns a tuple where:
 *   - 0: position - the 'position' response property
 */
export const queryOsmosisConcentratedliquidityPositionById = restful_grpc(sg_position_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'position_by_id', {
        position_id: sg_position_id,
    }]);
/**
 * Returns the pool-global accumulator rewards. Contains spread factor rewards and uptime rewards.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: spread_reward_growth_global - the 'spread_reward_growth_global' response property
 *   - 1: uptime_growth_global - the 'spread_reward_growth_global' response property
 */
export const queryOsmosisConcentratedliquidityPoolAccumulatorRewards = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'pool_accum_rewards', {
        pool_id: sg_pool_id,
    }]);
/**
 * Returns the incentive records for a given poolId
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: incentive_records - the 'incentive_records' response property
 *   - 1: pagination - the 'incentive_records' response property
 */
export const queryOsmosisConcentratedliquidityIncentiveRecords = restful_grpc((sg_pool_id, g_pagination) => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'incentive_records', {
        pool_id: sg_pool_id,
        pagination: g_pagination,
    }]);
/**
 * Returns the tick accumulator trackers. Contains spread factor and uptime accumulator trackers.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param sg_tick_index -
 * @returns a tuple where:
 *   - 0: spread_reward_growth_opposite_direction_of_last_traversal - the 'spread_reward_growth_opposite_direction_of_last_traversal' response property
 *   - 1: uptime_trackers - the 'spread_reward_growth_opposite_direction_of_last_traversal' response property
 */
export const queryOsmosisConcentratedliquidityTickAccumulatorTrackers = restful_grpc((sg_pool_id, sg_tick_index) => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'tick_accum_trackers', {
        pool_id: sg_pool_id,
        tick_index: sg_tick_index,
    }]);
/**
 * Returns the pool id of the CFMM pool that is linked with the given concentrated pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_concentrated_pool_id -
 * @returns a tuple where:
 *   - 0: cfmm_pool_id - the 'cfmm_pool_id' response property
 */
export const queryOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolId = restful_grpc(sg_concentrated_pool_id => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'cfmm_pool_id_link_from_concentrated/' + sg_concentrated_pool_id]);
/**
 * Returns the position and lock info of unbonding positions of the given address.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_address -
 * @returns a tuple where:
 *   - 0: positions_with_period_lock - the 'positions_with_period_lock' response property
 */
export const queryOsmosisConcentratedliquidityUserUnbondingPositions = restful_grpc(sa_address => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'user_unbonding_positions/' + sa_address]);
/**
 * Returns total liquidity across all cl pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: total_liquidity - the 'total_liquidity' response property
 */
export const queryOsmosisConcentratedliquidityGetTotalLiquidity = restful_grpc(() => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'get_total_liquidity']);
/**
 * Returns the provided number of next initialized ticks in the direction of swapping the token in denom.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_token_in_denom -
 * @param sg_num_next_initialized_ticks -
 * @returns a tuple where:
 *   - 0: liquidity_depths - the 'liquidity_depths' response property
 *   - 1: current_tick - the 'liquidity_depths' response property
 *   - 2: current_liquidity - the 'liquidity_depths' response property
 */
export const queryOsmosisConcentratedliquidityNumNextInitializedTicks = restful_grpc((sg_pool_id, s_token_in_denom, sg_num_next_initialized_ticks) => [SR_LCD_OSMOSIS_CONCENTRATEDLIQUIDITY_QUERY + 'num_next_initialized_ticks', {
        pool_id: sg_pool_id,
        token_in_denom: s_token_in_denom,
        num_next_initialized_ticks: sg_num_next_initialized_ticks,
    }]);
/**
 * Encodes a `UserPositionsRequest` protobuf message: =============================== UserPositions
 * @param sa_address - `address`:
 * @param sg_pool_id - `pool_id`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityUserPositionsRequest = (sa_address, sg_pool_id, atu8_pagination) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .g(sg_pool_id) // uint64 pool_id = 2
    .b(atu8_pagination) // PageRequest pagination = 3
    .o;
/**
 * Encodes a `UserPositionsResponse` protobuf message:
 * @param a_positions - `positions`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityUserPositionsResponse = (a_positions, atu8_pagination) => Protobuf() // ...
    .B(a_positions) // FullPositionBreakdown[] positions = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `PositionByIdRequest` protobuf message: =============================== PositionById
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPositionByIdRequest = (sg_position_id) => Protobuf() // ...
    .g(sg_position_id) // uint64 position_id = 1
    .o;
/**
 * Encodes a `PositionByIdResponse` protobuf message:
 * @param g_position - `position`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPositionByIdResponse = (atu8_position) => Protobuf() // ...
    .b(atu8_position) // FullPositionBreakdown position = 1
    .o;
/**
 * Encodes a `PoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination, 2) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `PoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolsResponse = (a_pools, atu8_pagination) => Protobuf() // ...
    .B(a_pools) // Any[] pools = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `ParamsRequest` protobuf message: =============================== ModuleParams
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `TickLiquidityNet` protobuf message:
 * @param s_liquidity_net - `liquidity_net`:
 * @param sg_tick_index - `tick_index`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityTickLiquidityNet = (s_liquidity_net, sg_tick_index) => Protobuf() // ...
    .s(s_liquidity_net) // string liquidity_net = 1
    .g(sg_tick_index) // int32 tick_index = 2
    .o;
/**
 * Encodes a `LiquidityDepthWithRange` protobuf message:
 * @param s_liquidity_amount - `liquidity_amount`:
 * @param sg_lower_tick - `lower_tick`:
 * @param sg_upper_tick - `upper_tick`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityLiquidityDepthWithRange = (s_liquidity_amount, sg_lower_tick, sg_upper_tick) => Protobuf() // ...
    .s(s_liquidity_amount) // string liquidity_amount = 1
    .g(sg_lower_tick) // int32 lower_tick = 2
    .g(sg_upper_tick) // int32 upper_tick = 3
    .o;
/**
 * Encodes a `LiquidityNetInDirectionRequest` protobuf message: =============================== LiquidityNetInDirection
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param sg_start_tick - `start_tick`:
 * @param b_use_cur_tick - `use_cur_tick`:
 * @param sg_bound_tick - `bound_tick`:
 * @param b_use_no_bound - `use_no_bound`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest = (sg_pool_id, s_token_in, sg_start_tick, b_use_cur_tick, sg_bound_tick, b_use_no_bound) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_token_in) // string token_in = 2
    .g(sg_start_tick) // int32 start_tick = 3
    .v(b_use_cur_tick) // boolean use_cur_tick = 4
    .g(sg_bound_tick) // int32 bound_tick = 5
    .v(b_use_no_bound) // boolean use_no_bound = 6
    .o;
/**
 * Encodes a `LiquidityNetInDirectionResponse` protobuf message:
 * @param a_liquidity_depths - `liquidity_depths`:
 * @param sg_current_tick - `current_tick`:
 * @param s_current_liquidity - `current_liquidity`:
 * @param s_current_sqrt_price - `current_sqrt_price`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse = (a_liquidity_depths, sg_current_tick, s_current_liquidity, s_current_sqrt_price) => Protobuf() // ...
    .B(a_liquidity_depths) // TickLiquidityNet[] liquidity_depths = 1
    .g(sg_current_tick) // int32 current_tick = 2
    .s(s_current_liquidity) // string current_liquidity = 3
    .s(s_current_sqrt_price) // string current_sqrt_price = 4
    .o;
/**
 * Encodes a `LiquidityPerTickRangeRequest` protobuf message: =============================== LiquidityPerTickRange
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `LiquidityPerTickRangeResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse = (a_liquiditys) => Protobuf() // ...
    .B(a_liquiditys) // LiquidityDepthWithRange[] liquidity = 1
    .o;
/**
 * Encodes a `ClaimableSpreadRewardsRequest` protobuf message: ===================== QueryClaimableSpreadRewards
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest = (sg_position_id) => Protobuf() // ...
    .g(sg_position_id) // uint64 position_id = 1
    .o;
/**
 * Encodes a `ClaimableSpreadRewardsResponse` protobuf message:
 * @param a_claimable_spread_rewards - `claimable_spread_rewards`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse = (a_claimable_spread_rewards) => Protobuf() // ...
    .B(coins(a_claimable_spread_rewards)) // Coin[] claimable_spread_rewards = 1
    .o;
/**
 * Encodes a `ClaimableIncentivesRequest` protobuf message: ===================== QueryClaimableIncentives
 * @param sg_position_id - `position_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityClaimableIncentivesRequest = (sg_position_id) => Protobuf() // ...
    .g(sg_position_id) // uint64 position_id = 1
    .o;
/**
 * Encodes a `ClaimableIncentivesResponse` protobuf message:
 * @param a_claimable_incentives - `claimable_incentives`:
 * @param a_forfeited_incentives - `forfeited_incentives`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityClaimableIncentivesResponse = (a_claimable_incentives, a_forfeited_incentives) => Protobuf() // ...
    .B(coins(a_claimable_incentives)) // Coin[] claimable_incentives = 1
    .B(coins(a_forfeited_incentives)) // Coin[] forfeited_incentives = 2
    .o;
/**
 * Encodes a `PoolAccumulatorRewardsRequest` protobuf message: ===================== QueryPoolAccumulatorRewards
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `PoolAccumulatorRewardsResponse` protobuf message:
 * @param a_spread_reward_growth_globals - `spread_reward_growth_global`:
 * @param a_uptime_growth_globals - `uptime_growth_global`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = (a_spread_reward_growth_globals, a_uptime_growth_globals) => Protobuf() // ...
    .B(a_spread_reward_growth_globals) // DecCoin[] spread_reward_growth_global = 1
    .B(a_uptime_growth_globals) // UptimeTracker[] uptime_growth_global = 2
    .o;
/**
 * Encodes a `TickAccumulatorTrackersRequest` protobuf message: ===================== QueryTickAccumulatorTrackers
 * @param sg_pool_id - `pool_id`:
 * @param sg_tick_index - `tick_index`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest = (sg_pool_id, sg_tick_index) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .g(sg_tick_index) // int32 tick_index = 2
    .o;
/**
 * Encodes a `TickAccumulatorTrackersResponse` protobuf message:
 * @param a_spread_reward_growth_opposite_direction_of_last_traversals - `spread_reward_growth_opposite_direction_of_last_traversal`:
 * @param a_uptime_trackers - `uptime_trackers`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse = (a_spread_reward_growth_opposite_direction_of_last_traversals, a_uptime_trackers) => Protobuf() // ...
    .B(a_spread_reward_growth_opposite_direction_of_last_traversals) // DecCoin[] spread_reward_growth_opposite_direction_of_last_traversal = 1
    .B(a_uptime_trackers) // UptimeTracker[] uptime_trackers = 2
    .o;
/**
 * Encodes a `IncentiveRecordsRequest` protobuf message: ===================== QueryIncentiveRecords
 * @param sg_pool_id - `pool_id`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityIncentiveRecordsRequest = (sg_pool_id, atu8_pagination) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .b(atu8_pagination) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `IncentiveRecordsResponse` protobuf message:
 * @param a_incentive_records - `incentive_records`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityIncentiveRecordsResponse = (a_incentive_records, atu8_pagination) => Protobuf() // ...
    .B(a_incentive_records) // IncentiveRecord[] incentive_records = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `CFMMPoolIdLinkFromConcentratedPoolIdRequest` protobuf message: =============================== CFMMPoolIdLinkFromConcentratedPoolId
 * @param sg_concentrated_pool_id - `concentrated_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = (sg_concentrated_pool_id) => Protobuf() // ...
    .g(sg_concentrated_pool_id) // uint64 concentrated_pool_id = 1
    .o;
/**
 * Encodes a `CFMMPoolIdLinkFromConcentratedPoolIdResponse` protobuf message:
 * @param sg_cfmm_pool_id - `cfmm_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = (sg_cfmm_pool_id) => Protobuf() // ...
    .g(sg_cfmm_pool_id) // uint64 cfmm_pool_id = 1
    .o;
/**
 * Encodes a `UserUnbondingPositionsRequest` protobuf message: =============================== UserUnbondingPositions
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest = (sa_address) => Protobuf() // ...
    .s(sa_address) // string address = 1
    .o;
/**
 * Encodes a `UserUnbondingPositionsResponse` protobuf message:
 * @param a_positions_with_period_locks - `positions_with_period_lock`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse = (a_positions_with_period_locks) => Protobuf() // ...
    .B(a_positions_with_period_locks) // PositionWithPeriodLock[] positions_with_period_lock = 1
    .o;
/**
 * Encodes a `GetTotalLiquidityRequest` protobuf message: =============================== GetTotalLiquidity
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityGetTotalLiquidityRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `GetTotalLiquidityResponse` protobuf message:
 * @param a_total_liquiditys - `total_liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityGetTotalLiquidityResponse = (a_total_liquiditys) => Protobuf() // ...
    .B(coins(a_total_liquiditys)) // Coin[] total_liquidity = 1
    .o;
/**
 * Encodes a `NumNextInitializedTicksRequest` protobuf message: =============================== NumNextInitializedTicks
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in_denom - `token_in_denom`:
 * @param sg_num_next_initialized_ticks - `num_next_initialized_ticks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest = (sg_pool_id, s_token_in_denom, sg_num_next_initialized_ticks) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_token_in_denom) // string token_in_denom = 2
    .g(sg_num_next_initialized_ticks) // uint64 num_next_initialized_ticks = 3
    .o;
/**
 * Encodes a `NumNextInitializedTicksResponse` protobuf message:
 * @param a_liquidity_depths - `liquidity_depths`:
 * @param sg_current_tick - `current_tick`:
 * @param s_current_liquidity - `current_liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse = (a_liquidity_depths, sg_current_tick, s_current_liquidity) => Protobuf() // ...
    .B(a_liquidity_depths) // TickLiquidityNet[] liquidity_depths = 1
    .g(sg_current_tick) // int32 current_tick = 2
    .s(s_current_liquidity) // string current_liquidity = 3
    .o;
/**
 * Decodes a protobuf UserPositionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserPositionsRequest}
 */
export const decodeOsmosisConcentratedliquidityUserPositionsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 1], [0, 0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf UserPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserPositionsResponse}
 */
export const decodeOsmosisConcentratedliquidityUserPositionsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeOsmosisConcentratedliquidityFullPositionBreakdown, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf PositionByIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPositionByIdRequest}
 */
export const decodeOsmosisConcentratedliquidityPositionByIdRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf PositionById message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPositionByIdResponse}
 */
export const decodeOsmosisConcentratedliquidityPositionByIdResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisConcentratedliquidityFullPositionBreakdown]);
/**
 * Decodes a protobuf PoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolsRequest}
 */
export const decodeOsmosisConcentratedliquidityPoolsRequest = ((atu8_payload, [, a_pagination] = decode_protobuf(atu8_payload, [0, 1], [0, decodeCosmosBaseQueryPageRequest])) => [__UNDEFINED, a_pagination]);
/**
 * Decodes a protobuf Pools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolsResponse}
 */
export const decodeOsmosisConcentratedliquidityPoolsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeGoogleProtobufAny, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityParamsRequest}
 */
export const decodeOsmosisConcentratedliquidityParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityParamsResponse}
 */
export const decodeOsmosisConcentratedliquidityParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisConcentratedliquidityParams]);
/**
 * Decodes a protobuf TickLiquidityNet message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickLiquidityNet}
 */
export const decodeOsmosisConcentratedliquidityTickLiquidityNet = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Decodes a protobuf LiquidityDepthWithRange message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityDepthWithRange}
 */
export const decodeOsmosisConcentratedliquidityLiquidityDepthWithRange = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 3]);
/**
 * Decodes a protobuf LiquidityNetInDirectionRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionRequest}
 */
export const decodeOsmosisConcentratedliquidityLiquidityNetInDirectionRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 3, 1, 3, 1]);
/**
 * Decodes a protobuf LiquidityNetInDirection message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityNetInDirectionResponse}
 */
export const decodeOsmosisConcentratedliquidityLiquidityNetInDirectionResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 3, 5, 5], [decodeOsmosisConcentratedliquidityTickLiquidityNet]);
/**
 * Decodes a protobuf LiquidityPerTickRangeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeRequest}
 */
export const decodeOsmosisConcentratedliquidityLiquidityPerTickRangeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf LiquidityPerTickRange message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityLiquidityPerTickRangeResponse}
 */
export const decodeOsmosisConcentratedliquidityLiquidityPerTickRangeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisConcentratedliquidityLiquidityDepthWithRange]);
/**
 * Decodes a protobuf ClaimableSpreadRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsRequest}
 */
export const decodeOsmosisConcentratedliquidityClaimableSpreadRewardsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf ClaimableSpreadRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableSpreadRewardsResponse}
 */
export const decodeOsmosisConcentratedliquidityClaimableSpreadRewardsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf ClaimableIncentivesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableIncentivesRequest}
 */
export const decodeOsmosisConcentratedliquidityClaimableIncentivesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf ClaimableIncentives message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityClaimableIncentivesResponse}
 */
export const decodeOsmosisConcentratedliquidityClaimableIncentivesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0], [decode_coin, decode_coin]);
/**
 * Decodes a protobuf PoolAccumulatorRewardsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest}
 */
export const decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf PoolAccumulatorRewards message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse}
 */
export const decodeOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0], [decodeCosmosBaseDecCoin, decodeOsmosisConcentratedliquidityUptimeTracker]);
/**
 * Decodes a protobuf TickAccumulatorTrackersRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersRequest}
 */
export const decodeOsmosisConcentratedliquidityTickAccumulatorTrackersRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 3]);
/**
 * Decodes a protobuf TickAccumulatorTrackers message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityTickAccumulatorTrackersResponse}
 */
export const decodeOsmosisConcentratedliquidityTickAccumulatorTrackersResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0], [decodeCosmosBaseDecCoin, decodeOsmosisConcentratedliquidityUptimeTracker]);
/**
 * Decodes a protobuf IncentiveRecordsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityIncentiveRecordsRequest}
 */
export const decodeOsmosisConcentratedliquidityIncentiveRecordsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1], [0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf IncentiveRecords message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityIncentiveRecordsResponse}
 */
export const decodeOsmosisConcentratedliquidityIncentiveRecordsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeOsmosisConcentratedliquidityIncentiveRecord, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf CFMMPoolIdLinkFromConcentratedPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest}
 */
export const decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf CFMMPoolIdLinkFromConcentratedPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse}
 */
export const decodeOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf UserUnbondingPositionsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserUnbondingPositionsRequest}
 */
export const decodeOsmosisConcentratedliquidityUserUnbondingPositionsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf UserUnbondingPositions message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityUserUnbondingPositionsResponse}
 */
export const decodeOsmosisConcentratedliquidityUserUnbondingPositionsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisConcentratedliquidityPositionWithPeriodLock]);
/**
 * Decodes a protobuf GetTotalLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityGetTotalLiquidityRequest}
 */
export const decodeOsmosisConcentratedliquidityGetTotalLiquidityRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf GetTotalLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityGetTotalLiquidityResponse}
 */
export const decodeOsmosisConcentratedliquidityGetTotalLiquidityResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf NumNextInitializedTicksRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityNumNextInitializedTicksRequest}
 */
export const decodeOsmosisConcentratedliquidityNumNextInitializedTicksRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 3]);
/**
 * Decodes a protobuf NumNextInitializedTicks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisConcentratedliquidityNumNextInitializedTicksResponse}
 */
export const decodeOsmosisConcentratedliquidityNumNextInitializedTicksResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 3, 5], [decodeOsmosisConcentratedliquidityTickLiquidityNet]);
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserPositionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 *   - 1: pool_id -
 *   - 2: pagination -
 */
export const destructOsmosisConcentratedliquidityUserPositionsRequest = (g_struct) => [g_struct.address, g_struct.pool_id, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_POSITIONS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.UserPositionsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: positions -
 *   - 1: pagination -
 */
export const destructOsmosisConcentratedliquidityUserPositionsResponse = (g_struct) => [g_struct.positions, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_POSITIONS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.UserPositionsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPositionByIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export const destructOsmosisConcentratedliquidityPositionByIdRequest = (g_struct) => [g_struct.position_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POSITION_BY_ID_REQUEST = '/osmosis.concentratedliquidity.v1beta1.PositionByIdRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPositionByIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position -
 */
export const destructOsmosisConcentratedliquidityPositionByIdResponse = (g_struct) => [g_struct.position];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POSITION_BY_ID_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.PositionByIdResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructOsmosisConcentratedliquidityPoolsRequest = (g_struct) => [__UNDEFINED, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.PoolsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructOsmosisConcentratedliquidityPoolsResponse = (g_struct) => [g_struct.pools, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOLS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.PoolsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisConcentratedliquidityParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_PARAMS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.ParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructOsmosisConcentratedliquidityParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_PARAMS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.ParamsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickLiquidityNet} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_net -
 *   - 1: tick_index -
 */
export const destructOsmosisConcentratedliquidityTickLiquidityNet = (g_struct) => [g_struct.liquidity_net, g_struct.tick_index];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_LIQUIDITY_NET = '/osmosis.concentratedliquidity.v1beta1.TickLiquidityNet';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityDepthWithRange} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_amount -
 *   - 1: lower_tick -
 *   - 2: upper_tick -
 */
export const destructOsmosisConcentratedliquidityLiquidityDepthWithRange = (g_struct) => [g_struct.liquidity_amount, g_struct.lower_tick, g_struct.upper_tick];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_DEPTH_WITH_RANGE = '/osmosis.concentratedliquidity.v1beta1.LiquidityDepthWithRange';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityNetInDirectionRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in -
 *   - 2: start_tick -
 *   - 3: use_cur_tick -
 *   - 4: bound_tick -
 *   - 5: use_no_bound -
 */
export const destructOsmosisConcentratedliquidityLiquidityNetInDirectionRequest = (g_struct) => [g_struct.pool_id, g_struct.token_in, g_struct.start_tick, g_struct.use_cur_tick, g_struct.bound_tick, g_struct.use_no_bound];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_NET_IN_DIRECTION_REQUEST = '/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityNetInDirectionResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 *   - 3: current_sqrt_price -
 */
export const destructOsmosisConcentratedliquidityLiquidityNetInDirectionResponse = (g_struct) => [g_struct.liquidity_depths, g_struct.current_tick, g_struct.current_liquidity, g_struct.current_sqrt_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_NET_IN_DIRECTION_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.LiquidityNetInDirectionResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityPerTickRangeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisConcentratedliquidityLiquidityPerTickRangeRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_PER_TICK_RANGE_REQUEST = '/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityLiquidityPerTickRangeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export const destructOsmosisConcentratedliquidityLiquidityPerTickRangeResponse = (g_struct) => [g_struct.liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_LIQUIDITY_PER_TICK_RANGE_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.LiquidityPerTickRangeResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableSpreadRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export const destructOsmosisConcentratedliquidityClaimableSpreadRewardsRequest = (g_struct) => [g_struct.position_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_SPREAD_REWARDS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableSpreadRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: claimable_spread_rewards -
 */
export const destructOsmosisConcentratedliquidityClaimableSpreadRewardsResponse = (g_struct) => [g_struct.claimable_spread_rewards];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_SPREAD_REWARDS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.ClaimableSpreadRewardsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableIncentivesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: position_id -
 */
export const destructOsmosisConcentratedliquidityClaimableIncentivesRequest = (g_struct) => [g_struct.position_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_INCENTIVES_REQUEST = '/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityClaimableIncentivesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: claimable_incentives -
 *   - 1: forfeited_incentives -
 */
export const destructOsmosisConcentratedliquidityClaimableIncentivesResponse = (g_struct) => [g_struct.claimable_incentives, g_struct.forfeited_incentives];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_CLAIMABLE_INCENTIVES_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.ClaimableIncentivesResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolAccumulatorRewardsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisConcentratedliquidityPoolAccumulatorRewardsRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_ACCUMULATOR_REWARDS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityPoolAccumulatorRewardsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spread_reward_growth_global -
 *   - 1: uptime_growth_global -
 */
export const destructOsmosisConcentratedliquidityPoolAccumulatorRewardsResponse = (g_struct) => [g_struct.spread_reward_growth_global, g_struct.uptime_growth_global];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_POOL_ACCUMULATOR_REWARDS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.PoolAccumulatorRewardsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickAccumulatorTrackersRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tick_index -
 */
export const destructOsmosisConcentratedliquidityTickAccumulatorTrackersRequest = (g_struct) => [g_struct.pool_id, g_struct.tick_index];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_ACCUMULATOR_TRACKERS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityTickAccumulatorTrackersResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spread_reward_growth_opposite_direction_of_last_traversal -
 *   - 1: uptime_trackers -
 */
export const destructOsmosisConcentratedliquidityTickAccumulatorTrackersResponse = (g_struct) => [g_struct.spread_reward_growth_opposite_direction_of_last_traversal, g_struct.uptime_trackers];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_TICK_ACCUMULATOR_TRACKERS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.TickAccumulatorTrackersResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityIncentiveRecordsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: pagination -
 */
export const destructOsmosisConcentratedliquidityIncentiveRecordsRequest = (g_struct) => [g_struct.pool_id, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_INCENTIVE_RECORDS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityIncentiveRecordsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: incentive_records -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructOsmosisConcentratedliquidityIncentiveRecordsResponse = (g_struct) => [g_struct.incentive_records, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_INCENTIVE_RECORDS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.IncentiveRecordsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: concentrated_pool_id -
 */
export const destructOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdRequest = (g_struct) => [g_struct.concentrated_pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_C_F_M_M_POOL_ID_LINK_FROM_CONCENTRATED_POOL_ID_REQUEST = '/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cfmm_pool_id -
 */
export const destructOsmosisConcentratedliquidityCFMMPoolIdLinkFromConcentratedPoolIdResponse = (g_struct) => [g_struct.cfmm_pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_C_F_M_M_POOL_ID_LINK_FROM_CONCENTRATED_POOL_ID_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.CFMMPoolIdLinkFromConcentratedPoolIdResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserUnbondingPositionsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: address -
 */
export const destructOsmosisConcentratedliquidityUserUnbondingPositionsRequest = (g_struct) => [g_struct.address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_UNBONDING_POSITIONS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityUserUnbondingPositionsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: positions_with_period_lock -
 */
export const destructOsmosisConcentratedliquidityUserUnbondingPositionsResponse = (g_struct) => [g_struct.positions_with_period_lock];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_USER_UNBONDING_POSITIONS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.UserUnbondingPositionsResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityGetTotalLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisConcentratedliquidityGetTotalLiquidityRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_GET_TOTAL_LIQUIDITY_REQUEST = '/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityGetTotalLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_liquidity -
 */
export const destructOsmosisConcentratedliquidityGetTotalLiquidityResponse = (g_struct) => [g_struct.total_liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_GET_TOTAL_LIQUIDITY_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.GetTotalLiquidityResponse';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityNumNextInitializedTicksRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: token_in_denom -
 *   - 2: num_next_initialized_ticks -
 */
export const destructOsmosisConcentratedliquidityNumNextInitializedTicksRequest = (g_struct) => [g_struct.pool_id, g_struct.token_in_denom, g_struct.num_next_initialized_ticks];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_NUM_NEXT_INITIALIZED_TICKS_REQUEST = '/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksRequest';
/**
 * Destructures the fields of a {@link OsmosisConcentratedliquidityNumNextInitializedTicksResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity_depths -
 *   - 1: current_tick -
 *   - 2: current_liquidity -
 */
export const destructOsmosisConcentratedliquidityNumNextInitializedTicksResponse = (g_struct) => [g_struct.liquidity_depths, g_struct.current_tick, g_struct.current_liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_CONCENTRATEDLIQUIDITY_NUM_NEXT_INITIALIZED_TICKS_RESPONSE = '/osmosis.concentratedliquidity.v1beta1.NumNextInitializedTicksResponse';
//# sourceMappingURL=query.js.map