import type { SlimCoin } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../../api/types.js';
import type { CosmosBaseCoin } from '../../../../cosmos/base/v1beta1/coin.js';
export type EncodedOsmosisCosmwasmpoolCalcOutAmtGivenIn = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn'>;
export type EncodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest'>;
export type EncodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse'>;
export type EncodedOsmosisCosmwasmpoolCalcInAmtGivenOut = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut'>;
export type EncodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest'>;
export type EncodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse'>;
/**
 * Encodes a `CalcOutAmtGivenIn` protobuf message: ===================== CalcOutAmtGivenIn
 * @param a_token_in - `token_in`: the token to be sent to the pool.
 * @param s_token_out_denom - `token_out_denom`: the token denom to be received from the pool.
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcOutAmtGivenIn: (a_token_in?: Opt<SlimCoin>, s_token_out_denom?: Opt<string>, s_swap_fee?: Opt<string>) => EncodedOsmosisCosmwasmpoolCalcOutAmtGivenIn;
/**
 * Encodes a `CalcOutAmtGivenInRequest` protobuf message:
 * @param g_calc_out_amt_given_in - `calc_out_amt_given_in`: the structure containing all the request information for this query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest: (atu8_calc_out_amt_given_in?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn'>>) => EncodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest;
/**
 * Encodes a `CalcOutAmtGivenInResponse` protobuf message:
 * @param a_token_out - `token_out`: the token out computed from this swap estimate call.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse: (a_token_out?: Opt<SlimCoin>) => EncodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse;
/**
 * Encodes a `CalcInAmtGivenOut` protobuf message: ===================== CalcInAmtGivenOut
 * @param a_token_out - `token_out`: the token out to be receoved from the pool.
 * @param s_token_in_denom - `token_in_denom`: the token denom to be sentt to the pool.
 * @param s_swap_fee - `swap_fee`: the swap fee for this swap estimate.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcInAmtGivenOut: (a_token_out?: Opt<SlimCoin>, s_token_in_denom?: Opt<string>, s_swap_fee?: Opt<string>) => EncodedOsmosisCosmwasmpoolCalcInAmtGivenOut;
/**
 * Encodes a `CalcInAmtGivenOutRequest` protobuf message:
 * @param g_calc_in_amt_given_out - `calc_in_amt_given_out`: the structure containing all the request information for this query.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest: (atu8_calc_in_amt_given_out?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut'>>) => EncodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest;
/**
 * Encodes a `CalcInAmtGivenOutResponse` protobuf message:
 * @param a_token_in - `token_in`: the token in computed from this swap estimate call.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse: (a_token_in?: Opt<SlimCoin>) => EncodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse;
/**
 * A decoded protobuf CalcOutAmtGivenIn message
 *
 * Tuple where:
 *   - 0: token_in - the token to be sent to the pool.
 *   - 1: token_out_denom - the token denom to be received from the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export type DecodedOsmosisCosmwasmpoolCalcOutAmtGivenIn = [
    a_token_in?: [
        string,
        string
    ],
    s_token_out_denom?: string,
    s_swap_fee?: string
];
/**
 * Decodes a protobuf CalcOutAmtGivenIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenIn}
 */
export declare const decodeOsmosisCosmwasmpoolCalcOutAmtGivenIn: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcOutAmtGivenIn;
/**
 * A decoded protobuf CalcOutAmtGivenInRequest message
 *
 * Alias for: calc_out_amt_given_in - the structure containing all the request information for this query.
 */
export type DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest = [
    a_calc_out_amt_given_in?: DecodedOsmosisCosmwasmpoolCalcOutAmtGivenIn
];
/**
 * Decodes a protobuf CalcOutAmtGivenInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest}
 */
export declare const decodeOsmosisCosmwasmpoolCalcOutAmtGivenInRequest: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInRequest;
/**
 * A decoded protobuf CalcOutAmtGivenIn message
 *
 * Alias for: token_out - the token out computed from this swap estimate call.
 */
export type DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse = [
    a_token_out?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf CalcOutAmtGivenIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse}
 */
export declare const decodeOsmosisCosmwasmpoolCalcOutAmtGivenInResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcOutAmtGivenInResponse;
/**
 * A decoded protobuf CalcInAmtGivenOut message
 *
 * Tuple where:
 *   - 0: token_out - the token out to be receoved from the pool.
 *   - 1: token_in_denom - the token denom to be sentt to the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export type DecodedOsmosisCosmwasmpoolCalcInAmtGivenOut = [
    a_token_out?: [
        string,
        string
    ],
    s_token_in_denom?: string,
    s_swap_fee?: string
];
/**
 * Decodes a protobuf CalcInAmtGivenOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOut}
 */
export declare const decodeOsmosisCosmwasmpoolCalcInAmtGivenOut: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcInAmtGivenOut;
/**
 * A decoded protobuf CalcInAmtGivenOutRequest message
 *
 * Alias for: calc_in_amt_given_out - the structure containing all the request information for this query.
 */
export type DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest = [
    a_calc_in_amt_given_out?: DecodedOsmosisCosmwasmpoolCalcInAmtGivenOut
];
/**
 * Decodes a protobuf CalcInAmtGivenOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest}
 */
export declare const decodeOsmosisCosmwasmpoolCalcInAmtGivenOutRequest: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutRequest;
/**
 * A decoded protobuf CalcInAmtGivenOut message
 *
 * Alias for: token_in - the token in computed from this swap estimate call.
 */
export type DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse = [
    a_token_in?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf CalcInAmtGivenOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse}
 */
export declare const decodeOsmosisCosmwasmpoolCalcInAmtGivenOutResponse: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolCalcInAmtGivenOutResponse;
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenIn} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in - the token to be sent to the pool.
 *   - 1: token_out_denom - the token denom to be received from the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export declare const destructOsmosisCosmwasmpoolCalcOutAmtGivenIn: (g_struct: OsmosisCosmwasmpoolCalcOutAmtGivenIn) => [token_in?: CosmosBaseCoin, token_out_denom?: string, swap_fee?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN = "/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenIn` - ===================== CalcOutAmtGivenIn
 */
export type OsmosisCosmwasmpoolCalcOutAmtGivenIn = {
    token_in?: CosmosBaseCoin | undefined;
    token_out_denom?: string | undefined;
    swap_fee?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: calc_out_amt_given_in - the structure containing all the request information for this query.
 */
export declare const destructOsmosisCosmwasmpoolCalcOutAmtGivenInRequest: (g_struct: OsmosisCosmwasmpoolCalcOutAmtGivenInRequest) => [calc_out_amt_given_in?: OsmosisCosmwasmpoolCalcOutAmtGivenIn];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN_REQUEST = "/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInRequest` -
 */
export type OsmosisCosmwasmpoolCalcOutAmtGivenInRequest = {
    calc_out_amt_given_in?: OsmosisCosmwasmpoolCalcOutAmtGivenIn | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcOutAmtGivenInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out - the token out computed from this swap estimate call.
 */
export declare const destructOsmosisCosmwasmpoolCalcOutAmtGivenInResponse: (g_struct: OsmosisCosmwasmpoolCalcOutAmtGivenInResponse) => [token_out?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_OUT_AMT_GIVEN_IN_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcOutAmtGivenInResponse` -
 */
export type OsmosisCosmwasmpoolCalcOutAmtGivenInResponse = {
    token_out?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOut} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out - the token out to be receoved from the pool.
 *   - 1: token_in_denom - the token denom to be sentt to the pool.
 *   - 2: swap_fee - the swap fee for this swap estimate.
 */
export declare const destructOsmosisCosmwasmpoolCalcInAmtGivenOut: (g_struct: OsmosisCosmwasmpoolCalcInAmtGivenOut) => [token_out?: CosmosBaseCoin, token_in_denom?: string, swap_fee?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT = "/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOut` - ===================== CalcInAmtGivenOut
 */
export type OsmosisCosmwasmpoolCalcInAmtGivenOut = {
    token_out?: CosmosBaseCoin | undefined;
    token_in_denom?: string | undefined;
    swap_fee?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: calc_in_amt_given_out - the structure containing all the request information for this query.
 */
export declare const destructOsmosisCosmwasmpoolCalcInAmtGivenOutRequest: (g_struct: OsmosisCosmwasmpoolCalcInAmtGivenOutRequest) => [calc_in_amt_given_out?: OsmosisCosmwasmpoolCalcInAmtGivenOut];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT_REQUEST = "/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutRequest` -
 */
export type OsmosisCosmwasmpoolCalcInAmtGivenOutRequest = {
    calc_in_amt_given_out?: OsmosisCosmwasmpoolCalcInAmtGivenOut | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolCalcInAmtGivenOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in - the token in computed from this swap estimate call.
 */
export declare const destructOsmosisCosmwasmpoolCalcInAmtGivenOutResponse: (g_struct: OsmosisCosmwasmpoolCalcInAmtGivenOutResponse) => [token_in?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CALC_IN_AMT_GIVEN_OUT_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.CalcInAmtGivenOutResponse` -
 */
export type OsmosisCosmwasmpoolCalcInAmtGivenOutResponse = {
    token_in?: CosmosBaseCoin | undefined;
};
