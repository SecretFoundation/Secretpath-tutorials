import type { Encoded, Opt } from '../../../../../api/types.js';
export type EncodedOsmosisCosmwasmpoolEmptyRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyRequest'>;
export type EncodedOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest'>;
export type EncodedOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse'>;
export type EncodedOsmosisCosmwasmpoolExitPoolExecuteMsgRequest = Encoded<'/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest'>;
export type EncodedOsmosisCosmwasmpoolExitPoolExecuteMsgResponse = Encoded<'/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse'>;
/**
 * Encodes a `EmptyRequest` protobuf message: ===================== JoinPoolExecuteMsg
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolEmptyRequest: () => EncodedOsmosisCosmwasmpoolEmptyRequest;
/**
 * Encodes a `JoinPoolExecuteMsgRequest` protobuf message:
 * @param g_join_pool - `join_pool`: the structure containing all request fields of the join pool execute message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest: (atu8_join_pool?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyRequest'>>) => EncodedOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest;
/**
 * Encodes a `JoinPoolExecuteMsgResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse: () => EncodedOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse;
/**
 * Encodes a `ExitPoolExecuteMsgRequest` protobuf message: ===================== ExitPoolExecuteMsg
 * @param g_exit_pool - `exit_pool`: the structure containing all request fields of the exit pool execute message.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolExitPoolExecuteMsgRequest: (atu8_exit_pool?: Opt<Encoded<'/osmosis.cosmwasmpool.v1beta1.EmptyRequest'>>) => EncodedOsmosisCosmwasmpoolExitPoolExecuteMsgRequest;
/**
 * Encodes a `ExitPoolExecuteMsgResponse` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisCosmwasmpoolExitPoolExecuteMsgResponse: () => EncodedOsmosisCosmwasmpoolExitPoolExecuteMsgResponse;
/**
 * A decoded protobuf EmptyRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisCosmwasmpoolEmptyRequest = [];
/**
 * Decodes a protobuf EmptyRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolEmptyRequest}
 */
export declare const decodeOsmosisCosmwasmpoolEmptyRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf JoinPoolExecuteMsgRequest message
 *
 * Alias for: join_pool - the structure containing all request fields of the join pool execute message.
 */
export type DecodedOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest = [
    a_join_pool?: DecodedOsmosisCosmwasmpoolEmptyRequest
];
/**
 * Decodes a protobuf JoinPoolExecuteMsgRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest}
 */
export declare const decodeOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest;
/**
 * A decoded protobuf JoinPoolExecuteMsg message
 *
 * Tuple where:
 */
export type DecodedOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse = [];
/**
 * Decodes a protobuf JoinPoolExecuteMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf ExitPoolExecuteMsgRequest message
 *
 * Alias for: exit_pool - the structure containing all request fields of the exit pool execute message.
 */
export type DecodedOsmosisCosmwasmpoolExitPoolExecuteMsgRequest = [
    a_exit_pool?: DecodedOsmosisCosmwasmpoolEmptyRequest
];
/**
 * Decodes a protobuf ExitPoolExecuteMsgRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolExitPoolExecuteMsgRequest}
 */
export declare const decodeOsmosisCosmwasmpoolExitPoolExecuteMsgRequest: (atu8_payload: Uint8Array) => DecodedOsmosisCosmwasmpoolExitPoolExecuteMsgRequest;
/**
 * A decoded protobuf ExitPoolExecuteMsg message
 *
 * Tuple where:
 */
export type DecodedOsmosisCosmwasmpoolExitPoolExecuteMsgResponse = [];
/**
 * Decodes a protobuf ExitPoolExecuteMsg message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolExitPoolExecuteMsgResponse}
 */
export declare const decodeOsmosisCosmwasmpoolExitPoolExecuteMsgResponse: (atu8_payload: Uint8Array) => [];
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolEmptyRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisCosmwasmpoolEmptyRequest: (g_struct: OsmosisCosmwasmpoolEmptyRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_EMPTY_REQUEST = "/osmosis.cosmwasmpool.v1beta1.EmptyRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.EmptyRequest` - ===================== JoinPoolExecuteMsg
 */
export type OsmosisCosmwasmpoolEmptyRequest = {};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolJoinPoolExecuteMsgRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: join_pool - the structure containing all request fields of the join pool execute message.
 */
export declare const destructOsmosisCosmwasmpoolJoinPoolExecuteMsgRequest: (g_struct: OsmosisCosmwasmpoolJoinPoolExecuteMsgRequest) => [join_pool?: OsmosisCosmwasmpoolEmptyRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_JOIN_POOL_EXECUTE_MSG_REQUEST = "/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgRequest` -
 */
export type OsmosisCosmwasmpoolJoinPoolExecuteMsgRequest = {
    join_pool?: OsmosisCosmwasmpoolEmptyRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolJoinPoolExecuteMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisCosmwasmpoolJoinPoolExecuteMsgResponse: (g_struct: OsmosisCosmwasmpoolJoinPoolExecuteMsgResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_JOIN_POOL_EXECUTE_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.JoinPoolExecuteMsgResponse` -
 */
export type OsmosisCosmwasmpoolJoinPoolExecuteMsgResponse = {};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolExitPoolExecuteMsgRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: exit_pool - the structure containing all request fields of the exit pool execute message.
 */
export declare const destructOsmosisCosmwasmpoolExitPoolExecuteMsgRequest: (g_struct: OsmosisCosmwasmpoolExitPoolExecuteMsgRequest) => [exit_pool?: OsmosisCosmwasmpoolEmptyRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_EXIT_POOL_EXECUTE_MSG_REQUEST = "/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgRequest` - ===================== ExitPoolExecuteMsg
 */
export type OsmosisCosmwasmpoolExitPoolExecuteMsgRequest = {
    exit_pool?: OsmosisCosmwasmpoolEmptyRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolExitPoolExecuteMsgResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisCosmwasmpoolExitPoolExecuteMsgResponse: (g_struct: OsmosisCosmwasmpoolExitPoolExecuteMsgResponse) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_EXIT_POOL_EXECUTE_MSG_RESPONSE = "/osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse";
/**
 * JSON serialization of `osmosis.cosmwasmpool.v1beta1.ExitPoolExecuteMsgResponse` -
 */
export type OsmosisCosmwasmpoolExitPoolExecuteMsgResponse = {};
