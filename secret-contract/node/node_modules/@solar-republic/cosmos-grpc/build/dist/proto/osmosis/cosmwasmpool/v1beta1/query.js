import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import { decodeGoogleProtobufAny } from '../../../google/protobuf/any.js';
import { decodeOsmosisCosmwasmpoolParams } from './params.js';
const SR_LCD_OSMOSIS_COSMWASMPOOL_QUERY = '/osmosis/cosmwasmpool/v1beta1/';
/**
 * Returns all cosmwasm pools
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export const queryOsmosisCosmwasmpoolPools = restful_grpc(g_pagination => [SR_LCD_OSMOSIS_COSMWASMPOOL_QUERY + 'pools', {
        pagination: g_pagination,
    }]);
/**
 * Returns the parameters of the x/cosmwasmpool module.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryOsmosisCosmwasmpoolParams = restful_grpc(() => [SR_LCD_OSMOSIS_COSMWASMPOOL_QUERY + 'params']);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id - the pool id of the requested pool.
 * @returns a tuple where:
 *   - 0: contract_address - the pool address and contract address of the requested pool id.
 *   - 1: code_id - the pool address and contract address of the requested pool id.
 */
export const queryOsmosisCosmwasmpoolContractInfoByPoolId = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_COSMWASMPOOL_QUERY + 'contract_info', {
        pool_id: sg_pool_id,
    }]);
/**
 * Encodes a `ParamsRequest` protobuf message: =============================== ContractInfoByPoolId
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `ParamsResponse` protobuf message:
 * @param g_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `PoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolPoolsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination, 2) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `PoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolPoolsResponse = (a_pools, atu8_pagination) => Protobuf() // ...
    .B(a_pools) // Any[] pools = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `ContractInfoByPoolIdRequest` protobuf message: =============================== ContractInfoByPoolId
 * @param sg_pool_id - `pool_id`: the pool id of the requested pool.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `ContractInfoByPoolIdResponse` protobuf message:
 * @param sa_contract - `contract_address`: the pool address and contract address of the requested pool id.
 * @param sg_code_id - `code_id`: the code id of the requested pool id.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse = (sa_contract, sg_code_id) => Protobuf() // ...
    .s(sa_contract) // string contract_address = 1
    .g(sg_code_id) // uint64 code_id = 2
    .o;
/**
 * Decodes a protobuf ParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolParamsRequest}
 */
export const decodeOsmosisCosmwasmpoolParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolParamsResponse}
 */
export const decodeOsmosisCosmwasmpoolParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisCosmwasmpoolParams]);
/**
 * Decodes a protobuf PoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisCosmwasmpoolPoolsRequest}
 */
export const decodeOsmosisCosmwasmpoolPoolsRequest = ((atu8_payload, [, a_pagination] = decode_protobuf(atu8_payload, [0, 1], [0, decodeCosmosBaseQueryPageRequest])) => [__UNDEFINED, a_pagination]);
/**
 * Decodes a protobuf Pools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolPoolsResponse}
 */
export const decodeOsmosisCosmwasmpoolPoolsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeGoogleProtobufAny, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf ContractInfoByPoolIdRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolContractInfoByPoolIdRequest}
 */
export const decodeOsmosisCosmwasmpoolContractInfoByPoolIdRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf ContractInfoByPoolId message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisCosmwasmpoolContractInfoByPoolIdResponse}
 */
export const decodeOsmosisCosmwasmpoolContractInfoByPoolIdResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisCosmwasmpoolParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_PARAMS_REQUEST = '/osmosis.cosmwasmpool.v1beta1.ParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructOsmosisCosmwasmpoolParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_PARAMS_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.ParamsResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructOsmosisCosmwasmpoolPoolsRequest = (g_struct) => [__UNDEFINED, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_POOLS_REQUEST = '/osmosis.cosmwasmpool.v1beta1.PoolsRequest';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructOsmosisCosmwasmpoolPoolsResponse = (g_struct) => [g_struct.pools, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_POOLS_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.PoolsResponse';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolContractInfoByPoolIdRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id - the pool id of the requested pool.
 */
export const destructOsmosisCosmwasmpoolContractInfoByPoolIdRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CONTRACT_INFO_BY_POOL_ID_REQUEST = '/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdRequest';
/**
 * Destructures the fields of a {@link OsmosisCosmwasmpoolContractInfoByPoolIdResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address - the pool address and contract address of the requested pool id.
 *   - 1: code_id - the code id of the requested pool id.
 */
export const destructOsmosisCosmwasmpoolContractInfoByPoolIdResponse = (g_struct) => [g_struct.contract_address, g_struct.code_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_COSMWASMPOOL_CONTRACT_INFO_BY_POOL_ID_RESPONSE = '/osmosis.cosmwasmpool.v1beta1.ContractInfoByPoolIdResponse';
//# sourceMappingURL=query.js.map