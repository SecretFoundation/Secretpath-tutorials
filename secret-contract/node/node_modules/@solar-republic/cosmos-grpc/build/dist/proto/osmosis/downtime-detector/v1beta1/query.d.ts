/// <reference types="node" />
import type { Encoded, Opt, WeakDurationStr } from '../../../../api/types.js';
import type { ProtoEnumOsmosisDowntimedetectorDowntime, JsonEnumOsmosisDowntimedetectorDowntime } from './downtime_duration.js';
export type EncodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = Encoded<'/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest'>;
export type EncodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = Encoded<'/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse'>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param xc_downtime -
 * @param xt_recovery -
 * @returns a tuple where:
 *   - 0: succesfully_recovered - the 'succesfully_recovered' response property
 */
export declare const queryOsmosisDowntimedetectorRecoveredSinceDowntimeOfLength: (z_req: string | ({
    origin: string;
} & RequestInit), xc_downtime?: Opt<ProtoEnumOsmosisDowntimedetectorDowntime>, xt_recovery?: Opt<number>) => Promise<import("../../../../api/transport.js").NetworkJsonResponse<OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse>>;
/**
 * Encodes a `RecoveredSinceDowntimeOfLengthRequest` protobuf message: Query for has it been at least $RECOVERY_DURATION units of time, since the chain has been down for $DOWNTIME_DURATION.
 * @param xc_downtime - `downtime`:
 * @param xt_recovery - `recovery`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest: (xc_downtime?: Opt<ProtoEnumOsmosisDowntimedetectorDowntime>, xt_recovery?: Opt<number>) => EncodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest;
/**
 * Encodes a `RecoveredSinceDowntimeOfLengthResponse` protobuf message:
 * @param b_succesfully_recovered - `succesfully_recovered`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse: (b_succesfully_recovered?: Opt<boolean | 0 | 1>) => EncodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse;
/**
 * A decoded protobuf RecoveredSinceDowntimeOfLengthRequest message
 *
 * Tuple where:
 *   - 0: downtime -
 *   - 1: recovery -
 */
export type DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = [
    xc_downtime?: ProtoEnumOsmosisDowntimedetectorDowntime,
    a_recovery?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf RecoveredSinceDowntimeOfLengthRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest}
 */
export declare const decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest: (atu8_payload: Uint8Array) => DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest;
/**
 * A decoded protobuf RecoveredSinceDowntimeOfLength message
 *
 * Alias for: succesfully_recovered -
 */
export type DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = [
    b_succesfully_recovered?: 0 | 1
];
/**
 * Decodes a protobuf RecoveredSinceDowntimeOfLength message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse}
 */
export declare const decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse: (atu8_payload: Uint8Array) => DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse;
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: downtime -
 *   - 1: recovery -
 */
export declare const destructOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest: (g_struct: OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest) => [downtime?: JsonEnumOsmosisDowntimedetectorDowntime, recovery?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_RECOVERED_SINCE_DOWNTIME_OF_LENGTH_REQUEST = "/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest";
/**
 * JSON serialization of `osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest` - Query for has it been at least $RECOVERY_DURATION units of time, since the chain has been down for $DOWNTIME_DURATION.
 */
export type OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = {
    downtime?: JsonEnumOsmosisDowntimedetectorDowntime | undefined;
    recovery?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: succesfully_recovered -
 */
export declare const destructOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse: (g_struct: OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse) => [succesfully_recovered?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_RECOVERED_SINCE_DOWNTIME_OF_LENGTH_RESPONSE = "/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse";
/**
 * JSON serialization of `osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse` -
 */
export type OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = {
    succesfully_recovered?: boolean | undefined;
};
