/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { parse_duration, duration_to_json } from '../../../../api/json.js';
import { decode_protobuf, decode_temporal } from '../../../../api/protobuf-reader.js';
import { Protobuf, temporal } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
const SR_LCD_OSMOSIS_DOWNTIMEDETECTOR_QUERY = '/osmosis/downtime-detector/v1beta1/RecoveredSinceDowntimeOfLength';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param xc_downtime -
 * @param xt_recovery -
 * @returns a tuple where:
 *   - 0: succesfully_recovered - the 'succesfully_recovered' response property
 */
export const queryOsmosisDowntimedetectorRecoveredSinceDowntimeOfLength = restful_grpc((xc_downtime, xt_recovery) => [SR_LCD_OSMOSIS_DOWNTIMEDETECTOR_QUERY, {
        downtime: xc_downtime,
        recovery: duration_to_json(xt_recovery),
    }]);
/**
 * Encodes a `RecoveredSinceDowntimeOfLengthRequest` protobuf message: Query for has it been at least $RECOVERY_DURATION units of time, since the chain has been down for $DOWNTIME_DURATION.
 * @param xc_downtime - `downtime`:
 * @param xt_recovery - `recovery`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = (xc_downtime, xt_recovery) => Protobuf() // ...
    .v(xc_downtime) // Downtime downtime = 1
    .b(temporal(xt_recovery)) // Duration recovery = 2
    .o;
/**
 * Encodes a `RecoveredSinceDowntimeOfLengthResponse` protobuf message:
 * @param b_succesfully_recovered - `succesfully_recovered`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = (b_succesfully_recovered) => Protobuf() // ...
    .v(b_succesfully_recovered) // boolean succesfully_recovered = 1
    .o;
/**
 * Decodes a protobuf RecoveredSinceDowntimeOfLengthRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest}
 */
export const decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1, [3, 1]], [0, decode_temporal]);
/**
 * Decodes a protobuf RecoveredSinceDowntimeOfLength message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse}
 */
export const decodeOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: downtime -
 *   - 1: recovery -
 */
export const destructOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthRequest = (g_struct) => [g_struct.downtime, parse_duration(g_struct.recovery)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_RECOVERED_SINCE_DOWNTIME_OF_LENGTH_REQUEST = '/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthRequest';
/**
 * Destructures the fields of a {@link OsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: succesfully_recovered -
 */
export const destructOsmosisDowntimedetectorRecoveredSinceDowntimeOfLengthResponse = (g_struct) => [g_struct.succesfully_recovered];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_DOWNTIMEDETECTOR_RECOVERED_SINCE_DOWNTIME_OF_LENGTH_RESPONSE = '/osmosis.downtimedetector.v1beta1.RecoveredSinceDowntimeOfLengthResponse';
//# sourceMappingURL=query.js.map