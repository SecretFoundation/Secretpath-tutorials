import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf, any } from '../../../../api/protobuf-writer.js';
import { decodeOsmosisGammBalancerToConcentratedPoolLink } from './shared.js';
/**
 * Encodes a `ReplaceMigrationRecordsProposal` protobuf message wrapped in the `Any` container: a gov Content type for updating the migration records. If a ReplaceMigrationRecordsProposal passes, the proposal’s records override the existing MigrationRecords set in the module. Each record specifies a single connection between a single balancer pool and a single concentrated pool.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_records - `records`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyReplaceMigrationRecordsProposal = (s_title, s_description, a_records) => any('/osmosis.gamm.v1beta1.ReplaceMigrationRecordsProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_records) // BalancerToConcentratedPoolLink[] records = 3
    .o);
/**
 * Encodes a `UpdateMigrationRecordsProposal` protobuf message wrapped in the `Any` container: For example: if the existing DistrRecords were: [(Balancer 1, CL 5), (Balancer 2, CL 6), (Balancer 3, CL 7)] And an UpdateMigrationRecordsProposal includes [(Balancer 2, CL 0), (Balancer 3, CL 4), (Balancer 4, CL 10)] This would leave Balancer 1 record, delete Balancer 2 record, Edit Balancer 3 record, and Add Balancer 4 record The result MigrationRecords in state would be: [(Balancer 1, CL 5), (Balancer 3, CL 4), (Balancer 4, CL 10)]
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_records - `records`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyUpdateMigrationRecordsProposal = (s_title, s_description, a_records) => any('/osmosis.gamm.v1beta1.UpdateMigrationRecordsProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_records) // BalancerToConcentratedPoolLink[] records = 3
    .o);
/**
 * Encodes a `CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal` protobuf message wrapped in the `Any` container: a gov Content type for creating concentrated liquidity pools and linking it to a CFMM pool.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_pool_records_with_cfmm_links - `pool_records_with_cfmm_link`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = (s_title, s_description, a_pool_records_with_cfmm_links) => any('/osmosis.gamm.v1beta1.CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_pool_records_with_cfmm_links) // PoolRecordWithCFMMLink[] pool_records_with_cfmm_link = 3
    .o);
/**
 * Encodes a `SetScalingFactorControllerProposal` protobuf message wrapped in the `Any` container: a gov Content type for updating the scaling factor controller address of a stableswap pool
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param sg_pool_id - `pool_id`:
 * @param sa_controller - `controller_address`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anySetScalingFactorControllerProposal = (s_title, s_description, sg_pool_id, sa_controller) => any('/osmosis.gamm.v1beta1.SetScalingFactorControllerProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .g(sg_pool_id) // uint64 pool_id = 3
    .s(sa_controller) // string controller_address = 4
    .o);
/**
 * Encodes a `ReplaceMigrationRecordsProposal` protobuf message: a gov Content type for updating the migration records. If a ReplaceMigrationRecordsProposal passes, the proposal’s records override the existing MigrationRecords set in the module. Each record specifies a single connection between a single balancer pool and a single concentrated pool.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_records - `records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammReplaceMigrationRecordsProposal = (s_title, s_description, a_records) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_records) // BalancerToConcentratedPoolLink[] records = 3
    .o;
/**
 * Encodes a `UpdateMigrationRecordsProposal` protobuf message: For example: if the existing DistrRecords were: [(Balancer 1, CL 5), (Balancer 2, CL 6), (Balancer 3, CL 7)] And an UpdateMigrationRecordsProposal includes [(Balancer 2, CL 0), (Balancer 3, CL 4), (Balancer 4, CL 10)] This would leave Balancer 1 record, delete Balancer 2 record, Edit Balancer 3 record, and Add Balancer 4 record The result MigrationRecords in state would be: [(Balancer 1, CL 5), (Balancer 3, CL 4), (Balancer 4, CL 10)]
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_records - `records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammUpdateMigrationRecordsProposal = (s_title, s_description, a_records) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_records) // BalancerToConcentratedPoolLink[] records = 3
    .o;
/**
 * Encodes a `PoolRecordWithCFMMLink` protobuf message:
 * @param s_denom0 - `denom0`:
 * @param s_denom1 - `denom1`:
 * @param sg_tick_spacing - `tick_spacing`:
 * @param s_exponent_at_price_one - `exponent_at_price_one`:
 * @param s_spread_factor - `spread_factor`:
 * @param sg_balancer_pool_id - `balancer_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammPoolRecordWithCFMMLink = (s_denom0, s_denom1, sg_tick_spacing, s_exponent_at_price_one, s_spread_factor, sg_balancer_pool_id) => Protobuf() // ...
    .s(s_denom0) // string denom0 = 1
    .s(s_denom1) // string denom1 = 2
    .g(sg_tick_spacing) // uint64 tick_spacing = 3
    .s(s_exponent_at_price_one) // string exponent_at_price_one = 4
    .s(s_spread_factor) // string spread_factor = 5
    .g(sg_balancer_pool_id) // uint64 balancer_pool_id = 6
    .o;
/**
 * Encodes a `CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal` protobuf message: a gov Content type for creating concentrated liquidity pools and linking it to a CFMM pool.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_pool_records_with_cfmm_links - `pool_records_with_cfmm_link`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = (s_title, s_description, a_pool_records_with_cfmm_links) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_pool_records_with_cfmm_links) // PoolRecordWithCFMMLink[] pool_records_with_cfmm_link = 3
    .o;
/**
 * Encodes a `SetScalingFactorControllerProposal` protobuf message: a gov Content type for updating the scaling factor controller address of a stableswap pool
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param sg_pool_id - `pool_id`:
 * @param sa_controller - `controller_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammSetScalingFactorControllerProposal = (s_title, s_description, sg_pool_id, sa_controller) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .g(sg_pool_id) // uint64 pool_id = 3
    .s(sa_controller) // string controller_address = 4
    .o;
/**
 * Decodes a protobuf ReplaceMigrationRecordsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammReplaceMigrationRecordsProposal}
 */
export const decodeOsmosisGammReplaceMigrationRecordsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisGammBalancerToConcentratedPoolLink]);
/**
 * Decodes a protobuf UpdateMigrationRecordsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammUpdateMigrationRecordsProposal}
 */
export const decodeOsmosisGammUpdateMigrationRecordsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisGammBalancerToConcentratedPoolLink]);
/**
 * Decodes a protobuf PoolRecordWithCFMMLink message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammPoolRecordWithCFMMLink}
 */
export const decodeOsmosisGammPoolRecordWithCFMMLink = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 3, 5, 5, 3]);
/**
 * Decodes a protobuf CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal}
 */
export const decodeOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisGammPoolRecordWithCFMMLink]);
/**
 * Decodes a protobuf SetScalingFactorControllerProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammSetScalingFactorControllerProposal}
 */
export const decodeOsmosisGammSetScalingFactorControllerProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 3, 5]);
/**
 * Destructures the fields of a {@link OsmosisGammReplaceMigrationRecordsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: records -
 */
export const destructOsmosisGammReplaceMigrationRecordsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_REPLACE_MIGRATION_RECORDS_PROPOSAL = '/osmosis.gamm.v1beta1.ReplaceMigrationRecordsProposal';
/**
 * Destructures the fields of a {@link OsmosisGammUpdateMigrationRecordsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: records -
 */
export const destructOsmosisGammUpdateMigrationRecordsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_UPDATE_MIGRATION_RECORDS_PROPOSAL = '/osmosis.gamm.v1beta1.UpdateMigrationRecordsProposal';
/**
 * Destructures the fields of a {@link OsmosisGammPoolRecordWithCFMMLink} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom0 -
 *   - 1: denom1 -
 *   - 2: tick_spacing -
 *   - 3: exponent_at_price_one -
 *   - 4: spread_factor -
 *   - 5: balancer_pool_id -
 */
export const destructOsmosisGammPoolRecordWithCFMMLink = (g_struct) => [g_struct.denom0, g_struct.denom1, g_struct.tick_spacing, g_struct.exponent_at_price_one, g_struct.spread_factor, g_struct.balancer_pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_POOL_RECORD_WITH_C_F_M_M_LINK = '/osmosis.gamm.v1beta1.PoolRecordWithCFMMLink';
/**
 * Destructures the fields of a {@link OsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_records_with_cfmm_link -
 */
export const destructOsmosisGammCreateConcentratedLiquidityPoolsAndLinktoCFMMProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.pool_records_with_cfmm_link];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_CREATE_CONCENTRATED_LIQUIDITY_POOLS_AND_LINKTO_C_F_M_M_PROPOSAL = '/osmosis.gamm.v1beta1.CreateConcentratedLiquidityPoolsAndLinktoCFMMProposal';
/**
 * Destructures the fields of a {@link OsmosisGammSetScalingFactorControllerProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: pool_id -
 *   - 3: controller_address -
 */
export const destructOsmosisGammSetScalingFactorControllerProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.pool_id, g_struct.controller_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_SET_SCALING_FACTOR_CONTROLLER_PROPOSAL = '/osmosis.gamm.v1beta1.SetScalingFactorControllerProposal';
//# sourceMappingURL=gov.js.map