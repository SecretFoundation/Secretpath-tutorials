import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf, decode_coin } from '../../../../api/protobuf-reader.js';
import { Protobuf, map, coin, coins } from '../../../../api/protobuf-writer.js';
import { restful_grpc, restruct_coin } from '../../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../../cosmos/base/query/v1beta1/pagination.js';
import { decodeGoogleProtobufAny } from '../../../google/protobuf/any.js';
import { decodeOsmosisGammMigrationRecords } from './shared.js';
import { decodeOsmosisPoolmanagerSwapAmountInRoute, decodeOsmosisPoolmanagerSwapAmountOutRoute } from '../../poolmanager/v1beta1/swap_route.js';
const SR_LCD_OSMOSIS_GAMM_QUERY = '/osmosis/gamm/v1beta1/';
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination - defines an optional pagination for the request.
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export const queryOsmosisGammPools = restful_grpc(g_pagination => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools', {
        pagination: g_pagination,
    }]);
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: num_pools - the 'num_pools' response property
 */
export const queryOsmosisGammNumPools = restful_grpc(() => [SR_LCD_OSMOSIS_GAMM_QUERY + 'num_pools']);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export const queryOsmosisGammTotalLiquidity = restful_grpc(() => [SR_LCD_OSMOSIS_GAMM_QUERY + 'total_liquidity']);
/**
 * Allows you to query specific pools with requested parameters
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_min_liquidity - String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 * @param s_pool_type -
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: pools - the 'pools' response property
 *   - 1: pagination - the 'pools' response property
 */
export const queryOsmosisGammPoolsWithFilter = restful_grpc((s_min_liquidity, s_pool_type, g_pagination) => [SR_LCD_OSMOSIS_GAMM_QUERY + 'filtered_pools', {
        min_liquidity: s_min_liquidity,
        pool_type: s_pool_type,
        pagination: g_pagination,
    }]);
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: pool - the 'pool' response property
 */
export const queryOsmosisGammPool = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id]);
/**
 * Returns the type of the pool. Returns "Balancer" as a string literal when the pool is a balancer pool. Errors if the pool is failed to be type caseted.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: pool_type - the 'pool_type' response property
 */
export const queryOsmosisGammPoolType = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pool_type/' + sg_pool_id]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param a_tokens_ins -
 * @returns a tuple where:
 *   - 0: share_out_amount - the 'share_out_amount' response property
 *   - 1: tokens_out - the 'share_out_amount' response property
 */
export const queryOsmosisGammCalcJoinPoolShares = restful_grpc((sg_pool_id, a_tokens_ins) => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/join_swap_exact_in', {
        tokens_in: map(a_tokens_ins, restruct_coin),
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_share_in_amount -
 * @returns a tuple where:
 *   - 0: tokens_out - the 'tokens_out' response property
 */
export const queryOsmosisGammCalcExitPoolCoinsFromShares = restful_grpc((sg_pool_id, s_share_in_amount) => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/exit_swap_share_amount_in', {
        share_in_amount: s_share_in_amount,
    }]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: params - the 'params' response property
 */
export const queryOsmosisGammPoolParams = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/params']);
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: liquidity - the 'liquidity' response property
 */
export const queryOsmosisGammTotalPoolLiquidity = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/total_pool_liquidity']);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @returns a tuple where:
 *   - 0: total_shares - the 'total_shares' response property
 */
export const queryOsmosisGammTotalShares = restful_grpc(sg_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/total_shares']);
/**
 * Defines a gRPC query handler that returns the spot price given a base denomination and a quote denomination.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset_denom -
 * @param s_quote_asset_denom -
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export const queryOsmosisGammSpotPrice = restful_grpc((sg_pool_id, s_base_asset_denom, s_quote_asset_denom) => [SR_LCD_OSMOSIS_GAMM_QUERY + 'pools/' + sg_pool_id + '/prices', {
        base_asset_denom: s_base_asset_denom,
        quote_asset_denom: s_quote_asset_denom,
    }]);
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_pool_id -
 * @param s_token_in -
 * @param a_routes -
 * @returns a tuple where:
 *   - 0: token_out_amount - the 'token_out_amount' response property
 */
export const queryOsmosisGammEstimateSwapExactAmountIn = restful_grpc((sa_sender, sg_pool_id, s_token_in, a_routes) => [SR_LCD_OSMOSIS_GAMM_QUERY + sg_pool_id + '/estimate/swap_exact_amount_in', {
        sender: sa_sender,
        token_in: s_token_in,
        routes: a_routes,
    }]);
/**
 * Deprecated: please use the alternative in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_sender -
 * @param sg_pool_id -
 * @param a_routes -
 * @param s_token_out -
 * @returns a tuple where:
 *   - 0: token_in_amount - the 'token_in_amount' response property
 */
export const queryOsmosisGammEstimateSwapExactAmountOut = restful_grpc((sa_sender, sg_pool_id, a_routes, s_token_out) => [SR_LCD_OSMOSIS_GAMM_QUERY + sg_pool_id + '/estimate/swap_exact_amount_out', {
        sender: sa_sender,
        routes: a_routes,
        token_out: s_token_out,
    }]);
/**
 * ConcentratedPoolIdLinkFromBalancer returns the pool id of the concentrated pool that is linked with the given CFMM pool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_cfmm_pool_id -
 * @returns a tuple where:
 *   - 0: concentrated_pool_id - the 'concentrated_pool_id' response property
 */
export const queryOsmosisGammConcentratedPoolIdLinkFromCFMM = restful_grpc(sg_cfmm_pool_id => [SR_LCD_OSMOSIS_GAMM_QUERY + 'concentrated_pool_id_link_from_cfmm/' + sg_cfmm_pool_id]);
/**
 * Returns migration links between CFMM and Concentrated pools.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: migration_records - the 'migration_records' response property
 */
export const queryOsmosisGammCFMMConcentratedPoolLinks = restful_grpc(() => [SR_LCD_OSMOSIS_GAMM_QUERY + 'cfmm_concentrated_pool_links']);
/**
 * Encodes a `QueryPoolRequest` protobuf message: =============================== Pool Deprecated: please use the alternative in x/poolmanager
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `QueryPoolResponse` protobuf message: Deprecated: please use the alternative in x/poolmanager
 * @param atu8_pool - `pool`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolResponse = (atu8_pool) => Protobuf() // ...
    .b(atu8_pool) // Any pool = 1
    .o;
/**
 * Encodes a `QueryPoolsRequest` protobuf message: =============================== Pools
 * @param g_pagination - `pagination`: defines an optional pagination for the request.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination, 2) // PageRequest pagination = 2
    .o;
/**
 * Encodes a `QueryPoolsResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolsResponse = (a_pools, atu8_pagination) => Protobuf() // ...
    .B(a_pools) // Any[] pools = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QueryNumPoolsRequest` protobuf message: =============================== NumPools
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryNumPoolsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryNumPoolsResponse` protobuf message:
 * @param sg_num_pools - `num_pools`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryNumPoolsResponse = (sg_num_pools) => Protobuf() // ...
    .g(sg_num_pools) // uint64 num_pools = 1
    .o;
/**
 * Encodes a `QueryPoolTypeRequest` protobuf message: =============================== PoolType
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolTypeRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `QueryPoolTypeResponse` protobuf message:
 * @param s_pool_type - `pool_type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolTypeResponse = (s_pool_type) => Protobuf() // ...
    .s(s_pool_type) // string pool_type = 1
    .o;
/**
 * Encodes a `QueryCalcJoinPoolSharesRequest` protobuf message: =============================== CalcJoinPoolShares
 * @param sg_pool_id - `pool_id`:
 * @param a_tokens_ins - `tokens_in`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcJoinPoolSharesRequest = (sg_pool_id, a_tokens_ins) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .B(coins(a_tokens_ins)) // Coin[] tokens_in = 2
    .o;
/**
 * Encodes a `QueryCalcJoinPoolSharesResponse` protobuf message:
 * @param s_share_out_amount - `share_out_amount`:
 * @param a_tokens_outs - `tokens_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcJoinPoolSharesResponse = (s_share_out_amount, a_tokens_outs) => Protobuf() // ...
    .s(s_share_out_amount) // string share_out_amount = 1
    .B(coins(a_tokens_outs)) // Coin[] tokens_out = 2
    .o;
/**
 * Encodes a `QueryCalcExitPoolCoinsFromSharesRequest` protobuf message: =============================== CalcExitPoolCoinsFromShares
 * @param sg_pool_id - `pool_id`:
 * @param s_share_in_amount - `share_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = (sg_pool_id, s_share_in_amount) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_share_in_amount) // string share_in_amount = 2
    .o;
/**
 * Encodes a `QueryCalcExitPoolCoinsFromSharesResponse` protobuf message:
 * @param a_tokens_outs - `tokens_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = (a_tokens_outs) => Protobuf() // ...
    .B(coins(a_tokens_outs)) // Coin[] tokens_out = 1
    .o;
/**
 * Encodes a `QueryPoolParamsRequest` protobuf message: =============================== PoolParams
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolParamsRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `QueryPoolParamsResponse` protobuf message:
 * @param atu8_params - `params`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Any params = 1
    .o;
/**
 * Encodes a `QueryTotalPoolLiquidityRequest` protobuf message: =============================== PoolLiquidity Deprecated: please use the alternative in x/poolmanager
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalPoolLiquidityRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `QueryTotalPoolLiquidityResponse` protobuf message: Deprecated: please use the alternative in x/poolmanager
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalPoolLiquidityResponse = (a_liquiditys) => Protobuf() // ...
    .B(coins(a_liquiditys)) // Coin[] liquidity = 1
    .o;
/**
 * Encodes a `QueryTotalSharesRequest` protobuf message: =============================== TotalShares
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalSharesRequest = (sg_pool_id) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .o;
/**
 * Encodes a `QueryTotalSharesResponse` protobuf message:
 * @param a_total_shares - `total_shares`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalSharesResponse = (a_total_shares) => Protobuf() // ...
    .b(coin(a_total_shares)) // Coin total_shares = 1
    .o;
/**
 * Encodes a `QueryCalcJoinPoolNoSwapSharesRequest` protobuf message: =============================== CalcJoinPoolNoSwapShares
 * @param sg_pool_id - `pool_id`:
 * @param a_tokens_ins - `tokens_in`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = (sg_pool_id, a_tokens_ins) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .B(coins(a_tokens_ins)) // Coin[] tokens_in = 2
    .o;
/**
 * Encodes a `QueryCalcJoinPoolNoSwapSharesResponse` protobuf message:
 * @param a_tokens_outs - `tokens_out`:
 * @param s_shares_out - `shares_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = (a_tokens_outs, s_shares_out) => Protobuf() // ...
    .B(coins(a_tokens_outs)) // Coin[] tokens_out = 1
    .s(s_shares_out) // string shares_out = 2
    .o;
/**
 * Encodes a `QuerySpotPriceRequest` protobuf message: defines the gRPC request structure for a SpotPrice query.
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset_denom - `base_asset_denom`:
 * @param s_quote_asset_denom - `quote_asset_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySpotPriceRequest = (sg_pool_id, s_base_asset_denom, s_quote_asset_denom) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset_denom) // string base_asset_denom = 2
    .s(s_quote_asset_denom) // string quote_asset_denom = 3
    .o;
/**
 * Encodes a `QueryPoolsWithFilterRequest` protobuf message:
 * @param s_min_liquidity - `min_liquidity`: String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 * @param s_pool_type - `pool_type`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolsWithFilterRequest = (s_min_liquidity, s_pool_type, atu8_pagination) => Protobuf() // ...
    .s(s_min_liquidity) // string min_liquidity = 1
    .s(s_pool_type) // string pool_type = 2
    .b(atu8_pagination) // PageRequest pagination = 3
    .o;
/**
 * Encodes a `QueryPoolsWithFilterResponse` protobuf message:
 * @param a_pools - `pools`:
 * @param g_pagination - `pagination`: defines the pagination in the response.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryPoolsWithFilterResponse = (a_pools, atu8_pagination) => Protobuf() // ...
    .B(a_pools) // Any[] pools = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `QuerySpotPriceResponse` protobuf message: defines the gRPC response structure for a SpotPrice query.
 * @param s_spot_price - `spot_price`: String of the Dec. Ex) 10.203uatom
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySpotPriceResponse = (s_spot_price) => Protobuf() // ...
    .s(s_spot_price) // string spot_price = 1
    .o;
/**
 * Encodes a `QuerySwapExactAmountInRequest` protobuf message: =============================== EstimateSwapExactAmountIn
 * @param sa_sender - `sender`:
 * @param sg_pool_id - `pool_id`:
 * @param s_token_in - `token_in`:
 * @param a_routes - `routes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySwapExactAmountInRequest = (sa_sender, sg_pool_id, s_token_in, a_routes) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .g(sg_pool_id) // uint64 pool_id = 2
    .s(s_token_in) // string token_in = 3
    .B(a_routes) // SwapAmountInRoute[] routes = 4
    .o;
/**
 * Encodes a `QuerySwapExactAmountInResponse` protobuf message:
 * @param s_token_out_amount - `token_out_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySwapExactAmountInResponse = (s_token_out_amount) => Protobuf() // ...
    .s(s_token_out_amount) // string token_out_amount = 1
    .o;
/**
 * Encodes a `QuerySwapExactAmountOutRequest` protobuf message: =============================== EstimateSwapExactAmountOut
 * @param sa_sender - `sender`:
 * @param sg_pool_id - `pool_id`:
 * @param a_routes - `routes`:
 * @param s_token_out - `token_out`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySwapExactAmountOutRequest = (sa_sender, sg_pool_id, a_routes, s_token_out) => Protobuf() // ...
    .s(sa_sender) // string sender = 1
    .g(sg_pool_id) // uint64 pool_id = 2
    .B(a_routes) // SwapAmountOutRoute[] routes = 3
    .s(s_token_out) // string token_out = 4
    .o;
/**
 * Encodes a `QuerySwapExactAmountOutResponse` protobuf message:
 * @param s_token_in_amount - `token_in_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySwapExactAmountOutResponse = (s_token_in_amount) => Protobuf() // ...
    .s(s_token_in_amount) // string token_in_amount = 1
    .o;
/**
 * Encodes a `QueryTotalLiquidityRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalLiquidityRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryTotalLiquidityResponse` protobuf message:
 * @param a_liquiditys - `liquidity`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryTotalLiquidityResponse = (a_liquiditys) => Protobuf() // ...
    .B(coins(a_liquiditys)) // Coin[] liquidity = 1
    .o;
/**
 * Encodes a `QueryConcentratedPoolIdLinkFromCFMMRequest` protobuf message: =============================== QueryConcentratedPoolIdLinkFromCFMM
 * @param sg_cfmm_pool_id - `cfmm_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = (sg_cfmm_pool_id) => Protobuf() // ...
    .g(sg_cfmm_pool_id) // uint64 cfmm_pool_id = 1
    .o;
/**
 * Encodes a `QueryConcentratedPoolIdLinkFromCFMMResponse` protobuf message:
 * @param sg_concentrated_pool_id - `concentrated_pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = (sg_concentrated_pool_id) => Protobuf() // ...
    .g(sg_concentrated_pool_id) // uint64 concentrated_pool_id = 1
    .o;
/**
 * Encodes a `QueryCFMMConcentratedPoolLinksRequest` protobuf message: =============================== QueryCFMMConcentratedPoolLinks
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryCFMMConcentratedPoolLinksResponse` protobuf message:
 * @param g_migration_records - `migration_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse = (atu8_migration_records) => Protobuf() // ...
    .b(atu8_migration_records) // MigrationRecords migration_records = 1
    .o;
/**
 * Decodes a protobuf QueryPoolRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolRequest}
 */
export const decodeOsmosisGammQueryPoolRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryPool message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolResponse}
 */
export const decodeOsmosisGammQueryPoolResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf QueryPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedOsmosisGammQueryPoolsRequest}
 */
export const decodeOsmosisGammQueryPoolsRequest = ((atu8_payload, [, a_pagination] = decode_protobuf(atu8_payload, [0, 1], [0, decodeCosmosBaseQueryPageRequest])) => [__UNDEFINED, a_pagination]);
/**
 * Decodes a protobuf QueryPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsResponse}
 */
export const decodeOsmosisGammQueryPoolsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeGoogleProtobufAny, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QueryNumPoolsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryNumPoolsRequest}
 */
export const decodeOsmosisGammQueryNumPoolsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryNumPools message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryNumPoolsResponse}
 */
export const decodeOsmosisGammQueryNumPoolsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryPoolTypeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolTypeRequest}
 */
export const decodeOsmosisGammQueryPoolTypeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryPoolType message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolTypeResponse}
 */
export const decodeOsmosisGammQueryPoolTypeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryCalcJoinPoolSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolSharesRequest}
 */
export const decodeOsmosisGammQueryCalcJoinPoolSharesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 0], [0, decode_coin]);
/**
 * Decodes a protobuf QueryCalcJoinPoolShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolSharesResponse}
 */
export const decodeOsmosisGammQueryCalcJoinPoolSharesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5, 0], [0, decode_coin]);
/**
 * Decodes a protobuf QueryCalcExitPoolCoinsFromSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest}
 */
export const decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5]);
/**
 * Decodes a protobuf QueryCalcExitPoolCoinsFromShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse}
 */
export const decodeOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf QueryPoolParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolParamsRequest}
 */
export const decodeOsmosisGammQueryPoolParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryPoolParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolParamsResponse}
 */
export const decodeOsmosisGammQueryPoolParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeGoogleProtobufAny]);
/**
 * Decodes a protobuf QueryTotalPoolLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalPoolLiquidityRequest}
 */
export const decodeOsmosisGammQueryTotalPoolLiquidityRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryTotalPoolLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalPoolLiquidityResponse}
 */
export const decodeOsmosisGammQueryTotalPoolLiquidityResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf QueryTotalSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalSharesRequest}
 */
export const decodeOsmosisGammQueryTotalSharesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryTotalShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalSharesResponse}
 */
export const decodeOsmosisGammQueryTotalSharesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decode_coin]);
/**
 * Decodes a protobuf QueryCalcJoinPoolNoSwapSharesRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest}
 */
export const decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 0], [0, decode_coin]);
/**
 * Decodes a protobuf QueryCalcJoinPoolNoSwapShares message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse}
 */
export const decodeOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 5], [decode_coin]);
/**
 * Decodes a protobuf QuerySpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceRequest}
 */
export const decodeOsmosisGammQuerySpotPriceRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5]);
/**
 * Decodes a protobuf QueryPoolsWithFilterRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsWithFilterRequest}
 */
export const decodeOsmosisGammQueryPoolsWithFilterRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 1], [0, 0, decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf QueryPoolsWithFilter message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryPoolsWithFilterResponse}
 */
export const decodeOsmosisGammQueryPoolsWithFilterResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeGoogleProtobufAny, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf QuerySpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceResponse}
 */
export const decodeOsmosisGammQuerySpotPriceResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QuerySwapExactAmountInRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountInRequest}
 */
export const decodeOsmosisGammQuerySwapExactAmountInRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 5, 0], [0, 0, 0, decodeOsmosisPoolmanagerSwapAmountInRoute]);
/**
 * Decodes a protobuf QuerySwapExactAmountIn message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountInResponse}
 */
export const decodeOsmosisGammQuerySwapExactAmountInResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QuerySwapExactAmountOutRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountOutRequest}
 */
export const decodeOsmosisGammQuerySwapExactAmountOutRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3, 0, 5], [0, 0, decodeOsmosisPoolmanagerSwapAmountOutRoute]);
/**
 * Decodes a protobuf QuerySwapExactAmountOut message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySwapExactAmountOutResponse}
 */
export const decodeOsmosisGammQuerySwapExactAmountOutResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryTotalLiquidityRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalLiquidityRequest}
 */
export const decodeOsmosisGammQueryTotalLiquidityRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryTotalLiquidity message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryTotalLiquidityResponse}
 */
export const decodeOsmosisGammQueryTotalLiquidityResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf QueryConcentratedPoolIdLinkFromCFMMRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest}
 */
export const decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryConcentratedPoolIdLinkFromCFMM message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse}
 */
export const decodeOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf QueryCFMMConcentratedPoolLinksRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCFMMConcentratedPoolLinksRequest}
 */
export const decodeOsmosisGammQueryCFMMConcentratedPoolLinksRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryCFMMConcentratedPoolLinks message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQueryCFMMConcentratedPoolLinksResponse}
 */
export const decodeOsmosisGammQueryCFMMConcentratedPoolLinksResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisGammMigrationRecords]);
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisGammQueryPoolRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_REQUEST = '/osmosis.gamm.v1beta1.QueryPoolRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool -
 */
export const destructOsmosisGammQueryPoolResponse = (g_struct) => [g_struct.pool];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_RESPONSE = '/osmosis.gamm.v1beta1.QueryPoolResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: pagination - defines an optional pagination for the request.
 */
export const destructOsmosisGammQueryPoolsRequest = (g_struct) => [__UNDEFINED, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_REQUEST = '/osmosis.gamm.v1beta1.QueryPoolsRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructOsmosisGammQueryPoolsResponse = (g_struct) => [g_struct.pools, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_RESPONSE = '/osmosis.gamm.v1beta1.QueryPoolsResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryNumPoolsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisGammQueryNumPoolsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_NUM_POOLS_REQUEST = '/osmosis.gamm.v1beta1.QueryNumPoolsRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryNumPoolsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: num_pools -
 */
export const destructOsmosisGammQueryNumPoolsResponse = (g_struct) => [g_struct.num_pools];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_NUM_POOLS_RESPONSE = '/osmosis.gamm.v1beta1.QueryNumPoolsResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolTypeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisGammQueryPoolTypeRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_TYPE_REQUEST = '/osmosis.gamm.v1beta1.QueryPoolTypeRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolTypeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_type -
 */
export const destructOsmosisGammQueryPoolTypeResponse = (g_struct) => [g_struct.pool_type];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_TYPE_RESPONSE = '/osmosis.gamm.v1beta1.QueryPoolTypeResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export const destructOsmosisGammQueryCalcJoinPoolSharesRequest = (g_struct) => [g_struct.pool_id, g_struct.tokens_in];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_SHARES_REQUEST = '/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: share_out_amount -
 *   - 1: tokens_out -
 */
export const destructOsmosisGammQueryCalcJoinPoolSharesResponse = (g_struct) => [g_struct.share_out_amount, g_struct.tokens_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_SHARES_RESPONSE = '/osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcExitPoolCoinsFromSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: share_in_amount -
 */
export const destructOsmosisGammQueryCalcExitPoolCoinsFromSharesRequest = (g_struct) => [g_struct.pool_id, g_struct.share_in_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_EXIT_POOL_COINS_FROM_SHARES_REQUEST = '/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcExitPoolCoinsFromSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tokens_out -
 */
export const destructOsmosisGammQueryCalcExitPoolCoinsFromSharesResponse = (g_struct) => [g_struct.tokens_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_EXIT_POOL_COINS_FROM_SHARES_RESPONSE = '/osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisGammQueryPoolParamsRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_PARAMS_REQUEST = '/osmosis.gamm.v1beta1.QueryPoolParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params -
 */
export const destructOsmosisGammQueryPoolParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOL_PARAMS_RESPONSE = '/osmosis.gamm.v1beta1.QueryPoolParamsResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalPoolLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisGammQueryTotalPoolLiquidityRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_POOL_LIQUIDITY_REQUEST = '/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalPoolLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export const destructOsmosisGammQueryTotalPoolLiquidityResponse = (g_struct) => [g_struct.liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_POOL_LIQUIDITY_RESPONSE = '/osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 */
export const destructOsmosisGammQueryTotalSharesRequest = (g_struct) => [g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_SHARES_REQUEST = '/osmosis.gamm.v1beta1.QueryTotalSharesRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_shares -
 */
export const destructOsmosisGammQueryTotalSharesResponse = (g_struct) => [g_struct.total_shares];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_SHARES_RESPONSE = '/osmosis.gamm.v1beta1.QueryTotalSharesResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolNoSwapSharesRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: tokens_in -
 */
export const destructOsmosisGammQueryCalcJoinPoolNoSwapSharesRequest = (g_struct) => [g_struct.pool_id, g_struct.tokens_in];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_NO_SWAP_SHARES_REQUEST = '/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCalcJoinPoolNoSwapSharesResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: tokens_out -
 *   - 1: shares_out -
 */
export const destructOsmosisGammQueryCalcJoinPoolNoSwapSharesResponse = (g_struct) => [g_struct.tokens_out, g_struct.shares_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CALC_JOIN_POOL_NO_SWAP_SHARES_RESPONSE = '/osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export const destructOsmosisGammQuerySpotPriceRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset_denom, g_struct.quote_asset_denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_REQUEST = '/osmosis.gamm.v1beta1.QuerySpotPriceRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsWithFilterRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: min_liquidity - String of the coins in single string seperated by comma. Ex) 10uatom,100uosmo
 *   - 1: pool_type -
 *   - 2: pagination -
 */
export const destructOsmosisGammQueryPoolsWithFilterRequest = (g_struct) => [g_struct.min_liquidity, g_struct.pool_type, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_WITH_FILTER_REQUEST = '/osmosis.gamm.v1beta1.QueryPoolsWithFilterRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryPoolsWithFilterResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pools -
 *   - 1: pagination - defines the pagination in the response.
 */
export const destructOsmosisGammQueryPoolsWithFilterResponse = (g_struct) => [g_struct.pools, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_POOLS_WITH_FILTER_RESPONSE = '/osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export const destructOsmosisGammQuerySpotPriceResponse = (g_struct) => [g_struct.spot_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_RESPONSE = '/osmosis.gamm.v1beta1.QuerySpotPriceResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountInRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: token_in -
 *   - 3: routes -
 */
export const destructOsmosisGammQuerySwapExactAmountInRequest = (g_struct) => [g_struct.sender, g_struct.pool_id, g_struct.token_in, g_struct.routes];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_IN_REQUEST = '/osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountInResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_out_amount -
 */
export const destructOsmosisGammQuerySwapExactAmountInResponse = (g_struct) => [g_struct.token_out_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_IN_RESPONSE = '/osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountOutRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: sender -
 *   - 1: pool_id -
 *   - 2: routes -
 *   - 3: token_out -
 */
export const destructOsmosisGammQuerySwapExactAmountOutRequest = (g_struct) => [g_struct.sender, g_struct.pool_id, g_struct.routes, g_struct.token_out];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_OUT_REQUEST = '/osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySwapExactAmountOutResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: token_in_amount -
 */
export const destructOsmosisGammQuerySwapExactAmountOutResponse = (g_struct) => [g_struct.token_in_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SWAP_EXACT_AMOUNT_OUT_RESPONSE = '/osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalLiquidityRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisGammQueryTotalLiquidityRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_LIQUIDITY_REQUEST = '/osmosis.gamm.v1beta1.QueryTotalLiquidityRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryTotalLiquidityResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: liquidity -
 */
export const destructOsmosisGammQueryTotalLiquidityResponse = (g_struct) => [g_struct.liquidity];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_TOTAL_LIQUIDITY_RESPONSE = '/osmosis.gamm.v1beta1.QueryTotalLiquidityResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cfmm_pool_id -
 */
export const destructOsmosisGammQueryConcentratedPoolIdLinkFromCFMMRequest = (g_struct) => [g_struct.cfmm_pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CONCENTRATED_POOL_ID_LINK_FROM_C_F_M_M_REQUEST = '/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: concentrated_pool_id -
 */
export const destructOsmosisGammQueryConcentratedPoolIdLinkFromCFMMResponse = (g_struct) => [g_struct.concentrated_pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_CONCENTRATED_POOL_ID_LINK_FROM_C_F_M_M_RESPONSE = '/osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCFMMConcentratedPoolLinksRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisGammQueryCFMMConcentratedPoolLinksRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_C_F_M_M_CONCENTRATED_POOL_LINKS_REQUEST = '/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQueryCFMMConcentratedPoolLinksResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: migration_records -
 */
export const destructOsmosisGammQueryCFMMConcentratedPoolLinksResponse = (g_struct) => [g_struct.migration_records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_C_F_M_M_CONCENTRATED_POOL_LINKS_RESPONSE = '/osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse';
//# sourceMappingURL=query.js.map