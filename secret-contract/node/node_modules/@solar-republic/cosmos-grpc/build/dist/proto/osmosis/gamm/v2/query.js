import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../../api/transport.js';
const SR_LCD_OSMOSIS_GAMM_QUERY = '/osmosis/gamm/v2/pools/';
/**
 * Deprecated: please use alternate in x/poolmanager
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_pool_id -
 * @param s_base_asset_denom -
 * @param s_quote_asset_denom -
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export const queryOsmosisGammSpotPrice = restful_grpc((sg_pool_id, s_base_asset_denom, s_quote_asset_denom) => [SR_LCD_OSMOSIS_GAMM_QUERY + sg_pool_id + '/prices', {
        base_asset_denom: s_base_asset_denom,
        quote_asset_denom: s_quote_asset_denom,
    }]);
/**
 * Encodes a `QuerySpotPriceRequest` protobuf message: Deprecated: please use alternate in x/poolmanager
 * @param sg_pool_id - `pool_id`:
 * @param s_base_asset_denom - `base_asset_denom`:
 * @param s_quote_asset_denom - `quote_asset_denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySpotPriceRequest = (sg_pool_id, s_base_asset_denom, s_quote_asset_denom) => Protobuf() // ...
    .g(sg_pool_id) // uint64 pool_id = 1
    .s(s_base_asset_denom) // string base_asset_denom = 2
    .s(s_quote_asset_denom) // string quote_asset_denom = 3
    .o;
/**
 * Encodes a `QuerySpotPriceResponse` protobuf message: Depreacted: please use alternate in x/poolmanager
 * @param s_spot_price - `spot_price`: String of the Dec. Ex) 10.203uatom
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisGammQuerySpotPriceResponse = (s_spot_price) => Protobuf() // ...
    .s(s_spot_price) // string spot_price = 1
    .o;
/**
 * Decodes a protobuf QuerySpotPriceRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceRequest}
 */
export const decodeOsmosisGammQuerySpotPriceRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3, 5, 5]);
/**
 * Decodes a protobuf QuerySpotPrice message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisGammQuerySpotPriceResponse}
 */
export const decodeOsmosisGammQuerySpotPriceResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_id -
 *   - 1: base_asset_denom -
 *   - 2: quote_asset_denom -
 */
export const destructOsmosisGammQuerySpotPriceRequest = (g_struct) => [g_struct.pool_id, g_struct.base_asset_denom, g_struct.quote_asset_denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_REQUEST = '/osmosis.gamm.v2.QuerySpotPriceRequest';
/**
 * Destructures the fields of a {@link OsmosisGammQuerySpotPriceResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: spot_price - String of the Dec. Ex) 10.203uatom
 */
export const destructOsmosisGammQuerySpotPriceResponse = (g_struct) => [g_struct.spot_price];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_GAMM_QUERY_SPOT_PRICE_RESPONSE = '/osmosis.gamm.v2.QuerySpotPriceResponse';
//# sourceMappingURL=query.js.map