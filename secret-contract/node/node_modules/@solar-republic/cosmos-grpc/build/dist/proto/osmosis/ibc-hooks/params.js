/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../api/protobuf-reader.js';
import { Protobuf } from '../../../api/protobuf-writer.js';
/**
 * Encodes a `Params` protobuf message:
 * @param a_allowed_async_ack_contracts - `allowed_async_ack_contracts`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisIbchooksParams = (a_allowed_async_ack_contracts) => Protobuf() // ...
    .S(a_allowed_async_ack_contracts) // string[] allowed_async_ack_contracts = 1
    .o;
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIbchooksParams}
 */
export const decodeOsmosisIbchooksParams = (atu8_payload) => decode_protobuf(atu8_payload, [4]);
/**
 * Destructures the fields of a {@link OsmosisIbchooksParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: allowed_async_ack_contracts -
 */
export const destructOsmosisIbchooksParams = (g_struct) => [g_struct.allowed_async_ack_contracts];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_IBCHOOKS_PARAMS = '/osmosis.ibchooks.Params';
//# sourceMappingURL=params.js.map