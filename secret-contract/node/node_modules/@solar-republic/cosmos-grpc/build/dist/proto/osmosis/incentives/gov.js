/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../api/protobuf-reader.js';
import { Protobuf } from '../../../api/protobuf-writer.js';
import { decodeOsmosisIncentivesCreateGroup } from './group.js';
/**
 * Encodes a `CreateGroupsProposal` protobuf message: a type for creating one or more groups via governance. This is useful for creating groups without having to pay creation fees.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_create_groups - `create_groups`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisIncentivesCreateGroupsProposal = (s_title, s_description, a_create_groups) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_create_groups) // CreateGroup[] create_groups = 3
    .o;
/**
 * Decodes a protobuf CreateGroupsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisIncentivesCreateGroupsProposal}
 */
export const decodeOsmosisIncentivesCreateGroupsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisIncentivesCreateGroup]);
/**
 * Destructures the fields of a {@link OsmosisIncentivesCreateGroupsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: create_groups -
 */
export const destructOsmosisIncentivesCreateGroupsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.create_groups];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_INCENTIVES_CREATE_GROUPS_PROPOSAL = '/osmosis.incentives.CreateGroupsProposal';
//# sourceMappingURL=gov.js.map