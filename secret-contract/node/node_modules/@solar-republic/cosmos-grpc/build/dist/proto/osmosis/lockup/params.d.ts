import type { Encoded, Opt } from '../../../api/types.js';
export type EncodedOsmosisLockupParams = Encoded<'/osmosis.lockup.Params'>;
/**
 * Encodes a `Params` protobuf message:
 * @param a_force_unlock_allowed_addresses - `force_unlock_allowed_addresses`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupParams: (a_force_unlock_allowed_addresses?: Opt<string[]>) => EncodedOsmosisLockupParams;
/**
 * A decoded protobuf Params message
 *
 * Alias for: force_unlock_allowed_addresses -
 */
export type DecodedOsmosisLockupParams = [
    a_force_unlock_allowed_addresses?: string[]
];
/**
 * Decodes a protobuf Params message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupParams}
 */
export declare const decodeOsmosisLockupParams: (atu8_payload: Uint8Array) => DecodedOsmosisLockupParams;
/**
 * Destructures the fields of a {@link OsmosisLockupParams} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: force_unlock_allowed_addresses -
 */
export declare const destructOsmosisLockupParams: (g_struct: OsmosisLockupParams) => [force_unlock_allowed_addresses?: string[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_PARAMS = "/osmosis.lockup.Params";
/**
 * JSON serialization of `osmosis.lockup.Params` -
 */
export type OsmosisLockupParams = {
    force_unlock_allowed_addresses?: string[] | undefined;
};
