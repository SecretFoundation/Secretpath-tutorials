import type { WeakUint64Str, WeakAccountAddr, SlimCoin, CwUint64, CwAccountAddr } from '@solar-republic/types';
import type { Encoded, Opt, WeakDurationStr } from '../../../api/types.js';
import type { CosmosBaseCoin } from '../../cosmos/base/v1beta1/coin.js';
import type { OsmosisLockupPeriodLock, DecodedOsmosisLockupPeriodLock } from './lock.js';
export type EncodedOsmosisLockupMsgLockTokens = Encoded<'/osmosis.lockup.MsgLockTokens'>;
export type EncodedOsmosisLockupMsgLockTokensResponse = Encoded<'/osmosis.lockup.MsgLockTokensResponse'>;
export type EncodedOsmosisLockupMsgBeginUnlockingAll = Encoded<'/osmosis.lockup.MsgBeginUnlockingAll'>;
export type EncodedOsmosisLockupMsgBeginUnlockingAllResponse = Encoded<'/osmosis.lockup.MsgBeginUnlockingAllResponse'>;
export type EncodedOsmosisLockupMsgBeginUnlocking = Encoded<'/osmosis.lockup.MsgBeginUnlocking'>;
export type EncodedOsmosisLockupMsgBeginUnlockingResponse = Encoded<'/osmosis.lockup.MsgBeginUnlockingResponse'>;
export type EncodedOsmosisLockupMsgExtendLockup = Encoded<'/osmosis.lockup.MsgExtendLockup'>;
export type EncodedOsmosisLockupMsgExtendLockupResponse = Encoded<'/osmosis.lockup.MsgExtendLockupResponse'>;
export type EncodedOsmosisLockupMsgForceUnlock = Encoded<'/osmosis.lockup.MsgForceUnlock'>;
export type EncodedOsmosisLockupMsgForceUnlockResponse = Encoded<'/osmosis.lockup.MsgForceUnlockResponse'>;
export type EncodedOsmosisLockupMsgSetRewardReceiverAddress = Encoded<'/osmosis.lockup.MsgSetRewardReceiverAddress'>;
export type EncodedOsmosisLockupMsgSetRewardReceiverAddressResponse = Encoded<'/osmosis.lockup.MsgSetRewardReceiverAddressResponse'>;
/**
 * Encodes a `MsgLockTokens` protobuf message:
 * @param sa_owner - `owner`:
 * @param xt_duration - `duration`:
 * @param a_coins - `coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgLockTokens: (sa_owner?: Opt<WeakAccountAddr>, xt_duration?: Opt<number>, a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupMsgLockTokens;
/**
 * Encodes a `MsgLockTokensResponse` protobuf message:
 * @param sg_ID - `ID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgLockTokensResponse: (sg_ID?: Opt<WeakUint64Str>) => EncodedOsmosisLockupMsgLockTokensResponse;
/**
 * Encodes a `MsgBeginUnlockingAll` protobuf message:
 * @param sa_owner - `owner`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgBeginUnlockingAll: (sa_owner?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupMsgBeginUnlockingAll;
/**
 * Encodes a `MsgBeginUnlockingAllResponse` protobuf message:
 * @param a_unlocks - `unlocks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgBeginUnlockingAllResponse: (a_unlocks?: Opt<Encoded<'/osmosis.lockup.PeriodLock'>[]>) => EncodedOsmosisLockupMsgBeginUnlockingAllResponse;
/**
 * Encodes a `MsgBeginUnlocking` protobuf message:
 * @param sa_owner - `owner`:
 * @param sg_ID - `ID`:
 * @param a_coins - `coins`: Amount of unlocking coins. Unlock all if not set.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgBeginUnlocking: (sa_owner?: Opt<WeakAccountAddr>, sg_ID?: Opt<WeakUint64Str>, a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupMsgBeginUnlocking;
/**
 * Encodes a `MsgBeginUnlockingResponse` protobuf message:
 * @param b_success - `success`:
 * @param sg_unlockingLockID - `unlockingLockID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgBeginUnlockingResponse: (b_success?: Opt<boolean | 0 | 1>, sg_unlockingLockID?: Opt<WeakUint64Str>) => EncodedOsmosisLockupMsgBeginUnlockingResponse;
/**
 * Encodes a `MsgExtendLockup` protobuf message: extends the existing lockup's duration. The new duration is longer than the original.
 * @param sa_owner - `owner`:
 * @param sg_ID - `ID`:
 * @param xt_duration - `duration`: to be set. fails if lower than the current duration, or is unlocking
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgExtendLockup: (sa_owner?: Opt<WeakAccountAddr>, sg_ID?: Opt<WeakUint64Str>, xt_duration?: Opt<number>) => EncodedOsmosisLockupMsgExtendLockup;
/**
 * Encodes a `MsgExtendLockupResponse` protobuf message:
 * @param b_success - `success`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgExtendLockupResponse: (b_success?: Opt<boolean | 0 | 1>) => EncodedOsmosisLockupMsgExtendLockupResponse;
/**
 * Encodes a `MsgForceUnlock` protobuf message: unlocks locks immediately for addresses registered via governance.
 * @param sa_owner - `owner`:
 * @param sg_ID - `ID`:
 * @param a_coins - `coins`: Amount of unlocking coins. Unlock all if not set.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgForceUnlock: (sa_owner?: Opt<WeakAccountAddr>, sg_ID?: Opt<WeakUint64Str>, a_coins?: Opt<SlimCoin[]>) => EncodedOsmosisLockupMsgForceUnlock;
/**
 * Encodes a `MsgForceUnlockResponse` protobuf message:
 * @param b_success - `success`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgForceUnlockResponse: (b_success?: Opt<boolean | 0 | 1>) => EncodedOsmosisLockupMsgForceUnlockResponse;
/**
 * Encodes a `MsgSetRewardReceiverAddress` protobuf message:
 * @param sa_owner - `owner`:
 * @param sg_lockID - `lockID`:
 * @param sa_reward_receiver - `reward_receiver`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgSetRewardReceiverAddress: (sa_owner?: Opt<WeakAccountAddr>, sg_lockID?: Opt<WeakUint64Str>, sa_reward_receiver?: Opt<WeakAccountAddr>) => EncodedOsmosisLockupMsgSetRewardReceiverAddress;
/**
 * Encodes a `MsgSetRewardReceiverAddressResponse` protobuf message:
 * @param b_success - `success`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisLockupMsgSetRewardReceiverAddressResponse: (b_success?: Opt<boolean | 0 | 1>) => EncodedOsmosisLockupMsgSetRewardReceiverAddressResponse;
/**
 * A decoded protobuf LockTokens message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: duration -
 *   - 2: coins -
 */
export type DecodedOsmosisLockupMsgLockTokens = [
    sa_owner?: CwAccountAddr,
    a_duration?: [
        string,
        number
    ],
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf LockTokens message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgLockTokens}
 */
export declare const decodeOsmosisLockupMsgLockTokens: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgLockTokens;
/**
 * A decoded protobuf LockTokens message
 *
 * Alias for: ID -
 */
export type DecodedOsmosisLockupMsgLockTokensResponse = [
    sg_ID?: CwUint64
];
/**
 * Decodes a protobuf LockTokens message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgLockTokensResponse}
 */
export declare const decodeOsmosisLockupMsgLockTokensResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgLockTokensResponse;
/**
 * A decoded protobuf BeginUnlockingAll message
 *
 * Alias for: owner -
 */
export type DecodedOsmosisLockupMsgBeginUnlockingAll = [
    sa_owner?: CwAccountAddr
];
/**
 * Decodes a protobuf BeginUnlockingAll message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgBeginUnlockingAll}
 */
export declare const decodeOsmosisLockupMsgBeginUnlockingAll: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgBeginUnlockingAll;
/**
 * A decoded protobuf BeginUnlockingAll message
 *
 * Alias for: unlocks -
 */
export type DecodedOsmosisLockupMsgBeginUnlockingAllResponse = [
    a_unlocks?: DecodedOsmosisLockupPeriodLock[]
];
/**
 * Decodes a protobuf BeginUnlockingAll message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgBeginUnlockingAllResponse}
 */
export declare const decodeOsmosisLockupMsgBeginUnlockingAllResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgBeginUnlockingAllResponse;
/**
 * A decoded protobuf BeginUnlocking message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: coins - Amount of unlocking coins. Unlock all if not set.
 */
export type DecodedOsmosisLockupMsgBeginUnlocking = [
    sa_owner?: CwAccountAddr,
    sg_ID?: CwUint64,
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf BeginUnlocking message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgBeginUnlocking}
 */
export declare const decodeOsmosisLockupMsgBeginUnlocking: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgBeginUnlocking;
/**
 * A decoded protobuf BeginUnlocking message
 *
 * Tuple where:
 *   - 0: success -
 *   - 1: unlockingLockID -
 */
export type DecodedOsmosisLockupMsgBeginUnlockingResponse = [
    b_success?: 0 | 1,
    sg_unlockingLockID?: CwUint64
];
/**
 * Decodes a protobuf BeginUnlocking message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgBeginUnlockingResponse}
 */
export declare const decodeOsmosisLockupMsgBeginUnlockingResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgBeginUnlockingResponse;
/**
 * A decoded protobuf ExtendLockup message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: duration - to be set. fails if lower than the current duration, or is unlocking
 */
export type DecodedOsmosisLockupMsgExtendLockup = [
    sa_owner?: CwAccountAddr,
    sg_ID?: CwUint64,
    a_duration?: [
        string,
        number
    ]
];
/**
 * Decodes a protobuf ExtendLockup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgExtendLockup}
 */
export declare const decodeOsmosisLockupMsgExtendLockup: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgExtendLockup;
/**
 * A decoded protobuf ExtendLockup message
 *
 * Alias for: success -
 */
export type DecodedOsmosisLockupMsgExtendLockupResponse = [
    b_success?: 0 | 1
];
/**
 * Decodes a protobuf ExtendLockup message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgExtendLockupResponse}
 */
export declare const decodeOsmosisLockupMsgExtendLockupResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgExtendLockupResponse;
/**
 * A decoded protobuf ForceUnlock message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: coins - Amount of unlocking coins. Unlock all if not set.
 */
export type DecodedOsmosisLockupMsgForceUnlock = [
    sa_owner?: CwAccountAddr,
    sg_ID?: CwUint64,
    a_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf ForceUnlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgForceUnlock}
 */
export declare const decodeOsmosisLockupMsgForceUnlock: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgForceUnlock;
/**
 * A decoded protobuf ForceUnlock message
 *
 * Alias for: success -
 */
export type DecodedOsmosisLockupMsgForceUnlockResponse = [
    b_success?: 0 | 1
];
/**
 * Decodes a protobuf ForceUnlock message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgForceUnlockResponse}
 */
export declare const decodeOsmosisLockupMsgForceUnlockResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgForceUnlockResponse;
/**
 * A decoded protobuf SetRewardReceiverAddress message
 *
 * Tuple where:
 *   - 0: owner -
 *   - 1: lockID -
 *   - 2: reward_receiver -
 */
export type DecodedOsmosisLockupMsgSetRewardReceiverAddress = [
    sa_owner?: CwAccountAddr,
    sg_lockID?: CwUint64,
    sa_reward_receiver?: CwAccountAddr
];
/**
 * Decodes a protobuf SetRewardReceiverAddress message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgSetRewardReceiverAddress}
 */
export declare const decodeOsmosisLockupMsgSetRewardReceiverAddress: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgSetRewardReceiverAddress;
/**
 * A decoded protobuf SetRewardReceiverAddress message
 *
 * Alias for: success -
 */
export type DecodedOsmosisLockupMsgSetRewardReceiverAddressResponse = [
    b_success?: 0 | 1
];
/**
 * Decodes a protobuf SetRewardReceiverAddress message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisLockupMsgSetRewardReceiverAddressResponse}
 */
export declare const decodeOsmosisLockupMsgSetRewardReceiverAddressResponse: (atu8_payload: Uint8Array) => DecodedOsmosisLockupMsgSetRewardReceiverAddressResponse;
/**
 * Destructures the fields of a {@link OsmosisLockupMsgLockTokens} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: duration -
 *   - 2: coins -
 */
export declare const destructOsmosisLockupMsgLockTokens: (g_struct: OsmosisLockupMsgLockTokens) => [owner?: CwAccountAddr, duration?: number, coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_LOCK_TOKENS = "/osmosis.lockup.MsgLockTokens";
/**
 * JSON serialization of `osmosis.lockup.MsgLockTokens` -
 */
export type OsmosisLockupMsgLockTokens = {
    owner?: CwAccountAddr | undefined;
    duration?: WeakDurationStr | undefined;
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgLockTokensResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: ID -
 */
export declare const destructOsmosisLockupMsgLockTokensResponse: (g_struct: OsmosisLockupMsgLockTokensResponse) => [ID?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_LOCK_TOKENS_RESPONSE = "/osmosis.lockup.MsgLockTokensResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgLockTokensResponse` -
 */
export type OsmosisLockupMsgLockTokensResponse = {
    ID?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgBeginUnlockingAll} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 */
export declare const destructOsmosisLockupMsgBeginUnlockingAll: (g_struct: OsmosisLockupMsgBeginUnlockingAll) => [owner?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_BEGIN_UNLOCKING_ALL = "/osmosis.lockup.MsgBeginUnlockingAll";
/**
 * JSON serialization of `osmosis.lockup.MsgBeginUnlockingAll` -
 */
export type OsmosisLockupMsgBeginUnlockingAll = {
    owner?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgBeginUnlockingAllResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: unlocks -
 */
export declare const destructOsmosisLockupMsgBeginUnlockingAllResponse: (g_struct: OsmosisLockupMsgBeginUnlockingAllResponse) => [unlocks?: OsmosisLockupPeriodLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_BEGIN_UNLOCKING_ALL_RESPONSE = "/osmosis.lockup.MsgBeginUnlockingAllResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgBeginUnlockingAllResponse` -
 */
export type OsmosisLockupMsgBeginUnlockingAllResponse = {
    unlocks?: OsmosisLockupPeriodLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgBeginUnlocking} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: coins - Amount of unlocking coins. Unlock all if not set.
 */
export declare const destructOsmosisLockupMsgBeginUnlocking: (g_struct: OsmosisLockupMsgBeginUnlocking) => [owner?: CwAccountAddr, ID?: CwUint64, coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_BEGIN_UNLOCKING = "/osmosis.lockup.MsgBeginUnlocking";
/**
 * JSON serialization of `osmosis.lockup.MsgBeginUnlocking` -
 */
export type OsmosisLockupMsgBeginUnlocking = {
    owner?: CwAccountAddr | undefined;
    ID?: CwUint64 | undefined;
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgBeginUnlockingResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: success -
 *   - 1: unlockingLockID -
 */
export declare const destructOsmosisLockupMsgBeginUnlockingResponse: (g_struct: OsmosisLockupMsgBeginUnlockingResponse) => [success?: boolean, unlockingLockID?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_BEGIN_UNLOCKING_RESPONSE = "/osmosis.lockup.MsgBeginUnlockingResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgBeginUnlockingResponse` -
 */
export type OsmosisLockupMsgBeginUnlockingResponse = {
    success?: boolean | undefined;
    unlockingLockID?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgExtendLockup} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: duration - to be set. fails if lower than the current duration, or is unlocking
 */
export declare const destructOsmosisLockupMsgExtendLockup: (g_struct: OsmosisLockupMsgExtendLockup) => [owner?: CwAccountAddr, ID?: CwUint64, duration?: number];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_EXTEND_LOCKUP = "/osmosis.lockup.MsgExtendLockup";
/**
 * JSON serialization of `osmosis.lockup.MsgExtendLockup` - extends the existing lockup's duration. The new duration is longer than the original.
 */
export type OsmosisLockupMsgExtendLockup = {
    owner?: CwAccountAddr | undefined;
    ID?: CwUint64 | undefined;
    duration?: WeakDurationStr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgExtendLockupResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: success -
 */
export declare const destructOsmosisLockupMsgExtendLockupResponse: (g_struct: OsmosisLockupMsgExtendLockupResponse) => [success?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_EXTEND_LOCKUP_RESPONSE = "/osmosis.lockup.MsgExtendLockupResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgExtendLockupResponse` -
 */
export type OsmosisLockupMsgExtendLockupResponse = {
    success?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgForceUnlock} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: ID -
 *   - 2: coins - Amount of unlocking coins. Unlock all if not set.
 */
export declare const destructOsmosisLockupMsgForceUnlock: (g_struct: OsmosisLockupMsgForceUnlock) => [owner?: CwAccountAddr, ID?: CwUint64, coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_FORCE_UNLOCK = "/osmosis.lockup.MsgForceUnlock";
/**
 * JSON serialization of `osmosis.lockup.MsgForceUnlock` - unlocks locks immediately for addresses registered via governance.
 */
export type OsmosisLockupMsgForceUnlock = {
    owner?: CwAccountAddr | undefined;
    ID?: CwUint64 | undefined;
    coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgForceUnlockResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: success -
 */
export declare const destructOsmosisLockupMsgForceUnlockResponse: (g_struct: OsmosisLockupMsgForceUnlockResponse) => [success?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_FORCE_UNLOCK_RESPONSE = "/osmosis.lockup.MsgForceUnlockResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgForceUnlockResponse` -
 */
export type OsmosisLockupMsgForceUnlockResponse = {
    success?: boolean | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgSetRewardReceiverAddress} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: owner -
 *   - 1: lockID -
 *   - 2: reward_receiver -
 */
export declare const destructOsmosisLockupMsgSetRewardReceiverAddress: (g_struct: OsmosisLockupMsgSetRewardReceiverAddress) => [owner?: CwAccountAddr, lockID?: CwUint64, reward_receiver?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_SET_REWARD_RECEIVER_ADDRESS = "/osmosis.lockup.MsgSetRewardReceiverAddress";
/**
 * JSON serialization of `osmosis.lockup.MsgSetRewardReceiverAddress` -
 */
export type OsmosisLockupMsgSetRewardReceiverAddress = {
    owner?: CwAccountAddr | undefined;
    lockID?: CwUint64 | undefined;
    reward_receiver?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisLockupMsgSetRewardReceiverAddressResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: success -
 */
export declare const destructOsmosisLockupMsgSetRewardReceiverAddressResponse: (g_struct: OsmosisLockupMsgSetRewardReceiverAddressResponse) => [success?: boolean];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_LOCKUP_MSG_SET_REWARD_RECEIVER_ADDRESS_RESPONSE = "/osmosis.lockup.MsgSetRewardReceiverAddressResponse";
/**
 * JSON serialization of `osmosis.lockup.MsgSetRewardReceiverAddressResponse` -
 */
export type OsmosisLockupMsgSetRewardReceiverAddressResponse = {
    success?: boolean | undefined;
};
