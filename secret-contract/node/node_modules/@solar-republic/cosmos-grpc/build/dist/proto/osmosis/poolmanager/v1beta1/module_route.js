import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `ModuleRoute` protobuf message: r defines a route encapsulating pool type. It is used as the value of a mapping from pool id to the pool type, allowing the pool manager to know which module to route swaps to given the pool id.
 * @param xc_pool_type - `pool_type`: specifies the type of the pool
 * @param sg_pool_id - `pool_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisPoolmanagerModuleRoute = (xc_pool_type, sg_pool_id) => Protobuf() // ...
    .v(xc_pool_type) // PoolType pool_type = 1
    .g(sg_pool_id) // uint64 pool_id = 2
    .o;
/**
 * Decodes a protobuf ModuleRoute message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisPoolmanagerModuleRoute}
 */
export const decodeOsmosisPoolmanagerModuleRoute = (atu8_payload) => decode_protobuf(atu8_payload, [1, 3]);
/**
 * Destructures the fields of a {@link OsmosisPoolmanagerModuleRoute} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_type - specifies the type of the pool
 *   - 1: pool_id -
 */
export const destructOsmosisPoolmanagerModuleRoute = (g_struct) => [g_struct.pool_type, g_struct.pool_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_POOLMANAGER_MODULE_ROUTE = '/osmosis.poolmanager.v1beta1.ModuleRoute';
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Balancer** - the standard xy=k curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export const XC_PROTO_OSMOSIS_POOLMANAGER_Balancer = 0;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Balancer** - the standard xy=k curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export const SI_JSON_OSMOSIS_POOLMANAGER_Balancer = 'Balancer';
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Stableswap** - the Solidly cfmm stable swap curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export const XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap = 1;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Stableswap** - the Solidly cfmm stable swap curve. Its pool model is defined in x/gamm.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export const SI_JSON_OSMOSIS_POOLMANAGER_Stableswap = 'Stableswap';
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Concentrated** - the pool model specific to concentrated liquidity. It is defined in x/concentrated-liquidity.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export const XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated = 2;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **Concentrated** - the pool model specific to concentrated liquidity. It is defined in x/concentrated-liquidity.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export const SI_JSON_OSMOSIS_POOLMANAGER_Concentrated = 'Concentrated';
/**
 * Protobuf enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **CosmWasm** - the pool model specific to CosmWasm. It is defined in x/cosmwasmpool.
 *
 * Belongs to enum type {@link ProtoEnumOsmosisPoolmanagerPoolType}
 */
export const XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm = 3;
/**
 * JSON enum value for `osmosis.poolmanager.v1beta1.PoolType`.
 *
 * **CosmWasm** - the pool model specific to CosmWasm. It is defined in x/cosmwasmpool.
 *
 * Belongs to enum type {@link JsonEnumOsmosisPoolmanagerPoolType}
 */
export const SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm = 'CosmWasm';
/**
 * Maps a protobuf enum int value for `osmosis.poolmanager.v1beta1.PoolType` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumOsmosisPoolmanagerPoolType = {
    [XC_PROTO_OSMOSIS_POOLMANAGER_Balancer]: SI_JSON_OSMOSIS_POOLMANAGER_Balancer,
    [XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap]: SI_JSON_OSMOSIS_POOLMANAGER_Stableswap,
    [XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated]: SI_JSON_OSMOSIS_POOLMANAGER_Concentrated,
    [XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm]: SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm,
};
/**
 * Maps a JSON enum string value for `osmosis.poolmanager.v1beta1.PoolType` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumOsmosisPoolmanagerPoolType = {
    [SI_JSON_OSMOSIS_POOLMANAGER_Balancer]: XC_PROTO_OSMOSIS_POOLMANAGER_Balancer,
    [SI_JSON_OSMOSIS_POOLMANAGER_Stableswap]: XC_PROTO_OSMOSIS_POOLMANAGER_Stableswap,
    [SI_JSON_OSMOSIS_POOLMANAGER_Concentrated]: XC_PROTO_OSMOSIS_POOLMANAGER_Concentrated,
    [SI_JSON_OSMOSIS_POOLMANAGER_CosmWasm]: XC_PROTO_OSMOSIS_POOLMANAGER_CosmWasm,
};
//# sourceMappingURL=module_route.js.map