/// <reference types="node" />
import type { WeakUint64Str, WeakAccountAddr, WeakValidatorAddr, SlimCoin, CwUint64, CwAccountAddr, CwValidatorAddr } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../api/types.js';
import type { CosmosBaseQueryPageRequest, DecodedCosmosBaseQueryPageRequest, CosmosBaseQueryPageResponse, DecodedCosmosBaseQueryPageResponse } from '../../cosmos/base/query/v1beta1/pagination.js';
import type { CosmosBaseCoin } from '../../cosmos/base/v1beta1/coin.js';
import type { CosmosStakingDelegationResponse, DecodedCosmosStakingDelegationResponse } from '../../cosmos/staking/v1beta1/staking.js';
import type { OsmosisLockupSyntheticLock, DecodedOsmosisLockupSyntheticLock } from '../lockup/lock.js';
import type { OsmosisSuperfluidParams, DecodedOsmosisSuperfluidParams } from './params.js';
import type { ProtoEnumOsmosisSuperfluidSuperfluidAssetType, JsonEnumOsmosisSuperfluidSuperfluidAssetType, OsmosisSuperfluidSuperfluidAsset, DecodedOsmosisSuperfluidSuperfluidAsset, OsmosisSuperfluidOsmoEquivalentMultiplierRecord, DecodedOsmosisSuperfluidOsmoEquivalentMultiplierRecord, OsmosisSuperfluidSuperfluidDelegationRecord, DecodedOsmosisSuperfluidSuperfluidDelegationRecord, OsmosisSuperfluidConcentratedPoolUserPositionRecord, DecodedOsmosisSuperfluidConcentratedPoolUserPositionRecord } from './superfluid.js';
export type EncodedOsmosisSuperfluidQueryParamsRequest = Encoded<'/osmosis.superfluid.QueryParamsRequest'>;
export type EncodedOsmosisSuperfluidQueryParamsResponse = Encoded<'/osmosis.superfluid.QueryParamsResponse'>;
export type EncodedOsmosisSuperfluidAssetTypeRequest = Encoded<'/osmosis.superfluid.AssetTypeRequest'>;
export type EncodedOsmosisSuperfluidAssetTypeResponse = Encoded<'/osmosis.superfluid.AssetTypeResponse'>;
export type EncodedOsmosisSuperfluidAllAssetsRequest = Encoded<'/osmosis.superfluid.AllAssetsRequest'>;
export type EncodedOsmosisSuperfluidAllAssetsResponse = Encoded<'/osmosis.superfluid.AllAssetsResponse'>;
export type EncodedOsmosisSuperfluidAssetMultiplierRequest = Encoded<'/osmosis.superfluid.AssetMultiplierRequest'>;
export type EncodedOsmosisSuperfluidAssetMultiplierResponse = Encoded<'/osmosis.superfluid.AssetMultiplierResponse'>;
export type EncodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = Encoded<'/osmosis.superfluid.SuperfluidIntermediaryAccountInfo'>;
export type EncodedOsmosisSuperfluidAllIntermediaryAccountsRequest = Encoded<'/osmosis.superfluid.AllIntermediaryAccountsRequest'>;
export type EncodedOsmosisSuperfluidAllIntermediaryAccountsResponse = Encoded<'/osmosis.superfluid.AllIntermediaryAccountsResponse'>;
export type EncodedOsmosisSuperfluidConnectedIntermediaryAccountRequest = Encoded<'/osmosis.superfluid.ConnectedIntermediaryAccountRequest'>;
export type EncodedOsmosisSuperfluidConnectedIntermediaryAccountResponse = Encoded<'/osmosis.superfluid.ConnectedIntermediaryAccountResponse'>;
export type EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = Encoded<'/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest'>;
export type EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = Encoded<'/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse'>;
export type EncodedOsmosisSuperfluidDelegations = Encoded<'/osmosis.superfluid.Delegations'>;
export type EncodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest = Encoded<'/osmosis.superfluid.TotalSuperfluidDelegationsRequest'>;
export type EncodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse = Encoded<'/osmosis.superfluid.TotalSuperfluidDelegationsResponse'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationAmountRequest = Encoded<'/osmosis.superfluid.SuperfluidDelegationAmountRequest'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationAmountResponse = Encoded<'/osmosis.superfluid.SuperfluidDelegationAmountResponse'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = Encoded<'/osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = Encoded<'/osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse'>;
export type EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = Encoded<'/osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest'>;
export type EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = Encoded<'/osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = Encoded<'/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest'>;
export type EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = Encoded<'/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse'>;
export type EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = Encoded<'/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest'>;
export type EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = Encoded<'/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse'>;
export type EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = Encoded<'/osmosis.superfluid.QueryTotalDelegationByDelegatorRequest'>;
export type EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = Encoded<'/osmosis.superfluid.QueryTotalDelegationByDelegatorResponse'>;
export type EncodedOsmosisSuperfluidQueryUnpoolWhitelistRequest = Encoded<'/osmosis.superfluid.QueryUnpoolWhitelistRequest'>;
export type EncodedOsmosisSuperfluidQueryUnpoolWhitelistResponse = Encoded<'/osmosis.superfluid.QueryUnpoolWhitelistResponse'>;
export type EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = Encoded<'/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest'>;
export type EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = Encoded<'/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse'>;
export type EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = Encoded<'/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest'>;
export type EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = Encoded<'/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse'>;
/**
 * Returns the total set of superfluid parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const queryOsmosisSuperfluidParams: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidQueryParamsResponse>>;
/**
 * Returns superfluid asset type, whether if it's a native asset or an lp share.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: asset_type - the 'asset_type' response property
 */
export declare const queryOsmosisSuperfluidAssetType: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidAssetTypeResponse>>;
/**
 * Returns all registered superfluid assets.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: assets - the 'assets' response property
 */
export declare const queryOsmosisSuperfluidAllAssets: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidAllAssetsResponse>>;
/**
 * Returns the osmo equivalent multiplier used in the most recent epoch.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: osmo_equivalent_multiplier - the 'osmo_equivalent_multiplier' response property
 */
export declare const queryOsmosisSuperfluidAssetMultiplier: (z_req: string | ({
    origin: string;
} & RequestInit), s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidAssetMultiplierResponse>>;
/**
 * Returns all superfluid intermediary accounts.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 *   - 1: pagination - the 'accounts' response property
 */
export declare const queryOsmosisSuperfluidAllIntermediaryAccounts: (z_req: string | ({
    origin: string;
} & RequestInit), g_pagination?: Opt<CosmosBaseQueryPageRequest>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidAllIntermediaryAccountsResponse>>;
/**
 * Returns intermediary account connected to a superfluid staked lock by id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: account - the 'account' response property
 */
export declare const queryOsmosisSuperfluidConnectedIntermediaryAccount: (z_req: string | ({
    origin: string;
} & RequestInit), sg_lock_id?: Opt<`${bigint}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidConnectedIntermediaryAccountResponse>>;
/**
 * Returns the total amount of osmo superfluidly staked. Response is denominated in uosmo.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: total_delegations - the 'total_delegations' response property
 */
export declare const queryOsmosisSuperfluidTotalSuperfluidDelegations: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidTotalSuperfluidDelegationsResponse>>;
/**
 * Returns the coins superfluid delegated for the delegator, validator, denom triplet
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: amount - the 'amount' response property
 */
export declare const queryOsmosisSuperfluidSuperfluidDelegationAmount: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>, sa_validator?: Opt<`${string}valoper1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidSuperfluidDelegationAmountResponse>>;
/**
 * Returns all the delegated superfluid poistions for a specific delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: total_delegated_coins - the 'superfluid_delegation_records' response property
 *   - 2: total_equivalent_staked_amount - the 'superfluid_delegation_records' response property
 */
export declare const queryOsmosisSuperfluidSuperfluidDelegationsByDelegator: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse>>;
/**
 * Returns all the undelegating superfluid poistions for a specific delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: total_undelegated_coins - the 'superfluid_delegation_records' response property
 *   - 2: synthetic_locks - the 'superfluid_delegation_records' response property
 */
export declare const queryOsmosisSuperfluidSuperfluidUndelegationsByDelegator: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse>>;
/**
 * Returns all the superfluid positions of a specific denom delegated to one validator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 */
export declare const queryOsmosisSuperfluidSuperfluidDelegationsByValidatorDenom: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse>>;
/**
 * Returns the amount of a specific denom delegated to a specific validator This is labeled an estimate, because the way it calculates the amount can lead rounding errors from the true delegated amount
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: total_delegated_coins - the 'total_delegated_coins' response property
 */
export declare const queryOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenom: (z_req: string | ({
    origin: string;
} & RequestInit), sa_validator?: Opt<`${string}valoper1${string}`>, s_denom?: Opt<string>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse>>;
/**
 * Returns the specified delegations for a specific delegator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: delegation_response - the 'superfluid_delegation_records' response property
 *   - 2: total_delegated_coins - the 'superfluid_delegation_records' response property
 *   - 3: total_equivalent_staked_amount - the 'superfluid_delegation_records' response property
 */
export declare const queryOsmosisSuperfluidTotalDelegationByDelegator: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidQueryTotalDelegationByDelegatorResponse>>;
/**
 * Returns a list of whitelisted pool ids to unpool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: pool_ids - the 'pool_ids' response property
 */
export declare const queryOsmosisSuperfluidUnpoolWhitelist: (z_req: string | ({
    origin: string;
} & RequestInit)) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidQueryUnpoolWhitelistResponse>>;
/**
 * Returns all of a user's full range CL positions that are superfluid staked.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records - the 'cl_pool_user_position_records' response property
 */
export declare const queryOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegated: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse>>;
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records - the 'cl_pool_user_position_records' response property
 */
export declare const queryOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegating: (z_req: string | ({
    origin: string;
} & RequestInit), sa_delegator?: Opt<`${string}1${string}`>) => Promise<import("../../../api/transport.js").NetworkJsonResponse<OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse>>;
/**
 * Encodes a `QueryParamsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryParamsRequest: () => EncodedOsmosisSuperfluidQueryParamsRequest;
/**
 * Encodes a `QueryParamsResponse` protobuf message:
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryParamsResponse: (atu8_params?: Opt<Encoded<'/osmosis.superfluid.Params'>>) => EncodedOsmosisSuperfluidQueryParamsResponse;
/**
 * Encodes a `AssetTypeRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAssetTypeRequest: (s_denom?: Opt<string>) => EncodedOsmosisSuperfluidAssetTypeRequest;
/**
 * Encodes a `AssetTypeResponse` protobuf message:
 * @param xc_asset_type - `asset_type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAssetTypeResponse: (xc_asset_type?: Opt<ProtoEnumOsmosisSuperfluidSuperfluidAssetType>) => EncodedOsmosisSuperfluidAssetTypeResponse;
/**
 * Encodes a `AllAssetsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAllAssetsRequest: () => EncodedOsmosisSuperfluidAllAssetsRequest;
/**
 * Encodes a `AllAssetsResponse` protobuf message:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAllAssetsResponse: (a_assets?: Opt<Encoded<'/osmosis.superfluid.SuperfluidAsset'>[]>) => EncodedOsmosisSuperfluidAllAssetsResponse;
/**
 * Encodes a `AssetMultiplierRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAssetMultiplierRequest: (s_denom?: Opt<string>) => EncodedOsmosisSuperfluidAssetMultiplierRequest;
/**
 * Encodes a `AssetMultiplierResponse` protobuf message:
 * @param g_osmo_equivalent_multiplier - `osmo_equivalent_multiplier`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAssetMultiplierResponse: (atu8_osmo_equivalent_multiplier?: Opt<Encoded<'/osmosis.superfluid.OsmoEquivalentMultiplierRecord'>>) => EncodedOsmosisSuperfluidAssetMultiplierResponse;
/**
 * Encodes a `SuperfluidIntermediaryAccountInfo` protobuf message:
 * @param s_denom - `denom`:
 * @param sa_val - `val_addr`:
 * @param sg_gauge_id - `gauge_id`:
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo: (s_denom?: Opt<string>, sa_val?: Opt<WeakValidatorAddr>, sg_gauge_id?: Opt<WeakUint64Str>, sa_address?: Opt<WeakAccountAddr>) => EncodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo;
/**
 * Encodes a `AllIntermediaryAccountsRequest` protobuf message:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAllIntermediaryAccountsRequest: (atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageRequest'>>) => EncodedOsmosisSuperfluidAllIntermediaryAccountsRequest;
/**
 * Encodes a `AllIntermediaryAccountsResponse` protobuf message:
 * @param a_accounts - `accounts`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidAllIntermediaryAccountsResponse: (a_accounts?: Opt<Encoded<'/osmosis.superfluid.SuperfluidIntermediaryAccountInfo'>[]>, atu8_pagination?: Opt<Encoded<'/cosmos.base.query.v1beta1.PageResponse'>>) => EncodedOsmosisSuperfluidAllIntermediaryAccountsResponse;
/**
 * Encodes a `ConnectedIntermediaryAccountRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidConnectedIntermediaryAccountRequest: (sg_lock_id?: Opt<WeakUint64Str>) => EncodedOsmosisSuperfluidConnectedIntermediaryAccountRequest;
/**
 * Encodes a `ConnectedIntermediaryAccountResponse` protobuf message:
 * @param g_account - `account`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidConnectedIntermediaryAccountResponse: (atu8_account?: Opt<Encoded<'/osmosis.superfluid.SuperfluidIntermediaryAccountInfo'>>) => EncodedOsmosisSuperfluidConnectedIntermediaryAccountResponse;
/**
 * Encodes a `QueryTotalDelegationByValidatorForDenomRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest: (s_denom?: Opt<string>) => EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest;
/**
 * Encodes a `QueryTotalDelegationByValidatorForDenomResponse` protobuf message:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse: (a_assets?: Opt<Encoded<'/osmosis.superfluid.Delegations'>[]>) => EncodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse;
/**
 * Encodes a `Delegations` protobuf message:
 * @param sa_val - `val_addr`:
 * @param s_amount_sfsd - `amount_sfsd`:
 * @param s_osmo_equivalent - `osmo_equivalent`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidDelegations: (sa_val?: Opt<WeakValidatorAddr>, s_amount_sfsd?: Opt<string>, s_osmo_equivalent?: Opt<string>) => EncodedOsmosisSuperfluidDelegations;
/**
 * Encodes a `TotalSuperfluidDelegationsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest: () => EncodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest;
/**
 * Encodes a `TotalSuperfluidDelegationsResponse` protobuf message:
 * @param s_total_delegations - `total_delegations`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse: (s_total_delegations?: Opt<string>) => EncodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse;
/**
 * Encodes a `SuperfluidDelegationAmountRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationAmountRequest: (sa_delegator?: Opt<WeakAccountAddr>, sa_validator?: Opt<WeakValidatorAddr>, s_denom?: Opt<string>) => EncodedOsmosisSuperfluidSuperfluidDelegationAmountRequest;
/**
 * Encodes a `SuperfluidDelegationAmountResponse` protobuf message:
 * @param a_amounts - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationAmountResponse: (a_amounts?: Opt<SlimCoin[]>) => EncodedOsmosisSuperfluidSuperfluidDelegationAmountResponse;
/**
 * Encodes a `SuperfluidDelegationsByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest;
/**
 * Encodes a `SuperfluidDelegationsByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @param a_total_equivalent_staked_amount - `total_equivalent_staked_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse: (a_superfluid_delegation_records?: Opt<Encoded<'/osmosis.superfluid.SuperfluidDelegationRecord'>[]>, a_total_delegated_coins?: Opt<SlimCoin[]>, a_total_equivalent_staked_amount?: Opt<SlimCoin>) => EncodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse;
/**
 * Encodes a `SuperfluidUndelegationsByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest: (sa_delegator?: Opt<WeakAccountAddr>, s_denom?: Opt<string>) => EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest;
/**
 * Encodes a `SuperfluidUndelegationsByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_total_undelegated_coins - `total_undelegated_coins`:
 * @param a_synthetic_locks - `synthetic_locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse: (a_superfluid_delegation_records?: Opt<Encoded<'/osmosis.superfluid.SuperfluidDelegationRecord'>[]>, a_total_undelegated_coins?: Opt<SlimCoin[]>, a_synthetic_locks?: Opt<Encoded<'/osmosis.lockup.SyntheticLock'>[]>) => EncodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse;
/**
 * Encodes a `SuperfluidDelegationsByValidatorDenomRequest` protobuf message:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest: (sa_validator?: Opt<WeakValidatorAddr>, s_denom?: Opt<string>) => EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest;
/**
 * Encodes a `SuperfluidDelegationsByValidatorDenomResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse: (a_superfluid_delegation_records?: Opt<Encoded<'/osmosis.superfluid.SuperfluidDelegationRecord'>[]>) => EncodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse;
/**
 * Encodes a `EstimateSuperfluidDelegatedAmountByValidatorDenomRequest` protobuf message:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest: (sa_validator?: Opt<WeakValidatorAddr>, s_denom?: Opt<string>) => EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest;
/**
 * Encodes a `EstimateSuperfluidDelegatedAmountByValidatorDenomResponse` protobuf message:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse: (a_total_delegated_coins?: Opt<SlimCoin[]>) => EncodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse;
/**
 * Encodes a `QueryTotalDelegationByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest;
/**
 * Encodes a `QueryTotalDelegationByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_delegation_responses - `delegation_response`:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @param a_total_equivalent_staked_amount - `total_equivalent_staked_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse: (a_superfluid_delegation_records?: Opt<Encoded<'/osmosis.superfluid.SuperfluidDelegationRecord'>[]>, a_delegation_responses?: Opt<Encoded<'/cosmos.staking.v1beta1.DelegationResponse'>[]>, a_total_delegated_coins?: Opt<SlimCoin[]>, a_total_equivalent_staked_amount?: Opt<SlimCoin>) => EncodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse;
/**
 * Encodes a `QueryUnpoolWhitelistRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryUnpoolWhitelistRequest: () => EncodedOsmosisSuperfluidQueryUnpoolWhitelistRequest;
/**
 * Encodes a `QueryUnpoolWhitelistResponse` protobuf message:
 * @param a_pool_ids - `pool_ids`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidQueryUnpoolWhitelistResponse: (a_pool_ids?: Opt<WeakUint64Str[]>) => EncodedOsmosisSuperfluidQueryUnpoolWhitelistResponse;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsDelegatedRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsDelegatedResponse` protobuf message:
 * @param a_cl_pool_user_position_records - `cl_pool_user_position_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse: (a_cl_pool_user_position_records?: Opt<Encoded<'/osmosis.superfluid.ConcentratedPoolUserPositionRecord'>[]>) => EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsUndelegatingRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest: (sa_delegator?: Opt<WeakAccountAddr>) => EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsUndelegatingResponse` protobuf message:
 * @param a_cl_pool_user_position_records - `cl_pool_user_position_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse: (a_cl_pool_user_position_records?: Opt<Encoded<'/osmosis.superfluid.ConcentratedPoolUserPositionRecord'>[]>) => EncodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse;
/**
 * A decoded protobuf QueryParamsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisSuperfluidQueryParamsRequest = [];
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryParamsRequest}
 */
export declare const decodeOsmosisSuperfluidQueryParamsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryParams message
 *
 * Alias for: params - defines the parameters of the module.
 */
export type DecodedOsmosisSuperfluidQueryParamsResponse = [
    a_params?: DecodedOsmosisSuperfluidParams
];
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryParamsResponse}
 */
export declare const decodeOsmosisSuperfluidQueryParamsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryParamsResponse;
/**
 * A decoded protobuf AssetTypeRequest message
 *
 * Alias for: denom -
 */
export type DecodedOsmosisSuperfluidAssetTypeRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf AssetTypeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetTypeRequest}
 */
export declare const decodeOsmosisSuperfluidAssetTypeRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAssetTypeRequest;
/**
 * A decoded protobuf AssetType message
 *
 * Alias for: asset_type -
 */
export type DecodedOsmosisSuperfluidAssetTypeResponse = [
    xc_asset_type?: ProtoEnumOsmosisSuperfluidSuperfluidAssetType
];
/**
 * Decodes a protobuf AssetType message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetTypeResponse}
 */
export declare const decodeOsmosisSuperfluidAssetTypeResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAssetTypeResponse;
/**
 * A decoded protobuf AllAssetsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisSuperfluidAllAssetsRequest = [];
/**
 * Decodes a protobuf AllAssetsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllAssetsRequest}
 */
export declare const decodeOsmosisSuperfluidAllAssetsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf AllAssets message
 *
 * Alias for: assets -
 */
export type DecodedOsmosisSuperfluidAllAssetsResponse = [
    a_assets?: DecodedOsmosisSuperfluidSuperfluidAsset[]
];
/**
 * Decodes a protobuf AllAssets message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllAssetsResponse}
 */
export declare const decodeOsmosisSuperfluidAllAssetsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAllAssetsResponse;
/**
 * A decoded protobuf AssetMultiplierRequest message
 *
 * Alias for: denom -
 */
export type DecodedOsmosisSuperfluidAssetMultiplierRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf AssetMultiplierRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetMultiplierRequest}
 */
export declare const decodeOsmosisSuperfluidAssetMultiplierRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAssetMultiplierRequest;
/**
 * A decoded protobuf AssetMultiplier message
 *
 * Alias for: osmo_equivalent_multiplier -
 */
export type DecodedOsmosisSuperfluidAssetMultiplierResponse = [
    a_osmo_equivalent_multiplier?: DecodedOsmosisSuperfluidOsmoEquivalentMultiplierRecord
];
/**
 * Decodes a protobuf AssetMultiplier message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetMultiplierResponse}
 */
export declare const decodeOsmosisSuperfluidAssetMultiplierResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAssetMultiplierResponse;
/**
 * A decoded protobuf SuperfluidIntermediaryAccountInfo message
 *
 * Tuple where:
 *   - 0: denom -
 *   - 1: val_addr -
 *   - 2: gauge_id -
 *   - 3: address -
 */
export type DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = [
    s_denom?: string,
    sa_val?: CwValidatorAddr,
    sg_gauge_id?: CwUint64,
    sa_address?: CwAccountAddr
];
/**
 * Decodes a protobuf SuperfluidIntermediaryAccountInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo}
 */
export declare const decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo;
/**
 * A decoded protobuf AllIntermediaryAccountsRequest message
 *
 * Alias for: pagination -
 */
export type DecodedOsmosisSuperfluidAllIntermediaryAccountsRequest = [
    a_pagination?: DecodedCosmosBaseQueryPageRequest
];
/**
 * Decodes a protobuf AllIntermediaryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllIntermediaryAccountsRequest}
 */
export declare const decodeOsmosisSuperfluidAllIntermediaryAccountsRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAllIntermediaryAccountsRequest;
/**
 * A decoded protobuf AllIntermediaryAccounts message
 *
 * Tuple where:
 *   - 0: accounts -
 *   - 1: pagination -
 */
export type DecodedOsmosisSuperfluidAllIntermediaryAccountsResponse = [
    a_accounts?: DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo[],
    a_pagination?: DecodedCosmosBaseQueryPageResponse
];
/**
 * Decodes a protobuf AllIntermediaryAccounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllIntermediaryAccountsResponse}
 */
export declare const decodeOsmosisSuperfluidAllIntermediaryAccountsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidAllIntermediaryAccountsResponse;
/**
 * A decoded protobuf ConnectedIntermediaryAccountRequest message
 *
 * Alias for: lock_id -
 */
export type DecodedOsmosisSuperfluidConnectedIntermediaryAccountRequest = [
    sg_lock_id?: CwUint64
];
/**
 * Decodes a protobuf ConnectedIntermediaryAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidConnectedIntermediaryAccountRequest}
 */
export declare const decodeOsmosisSuperfluidConnectedIntermediaryAccountRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidConnectedIntermediaryAccountRequest;
/**
 * A decoded protobuf ConnectedIntermediaryAccount message
 *
 * Alias for: account -
 */
export type DecodedOsmosisSuperfluidConnectedIntermediaryAccountResponse = [
    a_account?: DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo
];
/**
 * Decodes a protobuf ConnectedIntermediaryAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidConnectedIntermediaryAccountResponse}
 */
export declare const decodeOsmosisSuperfluidConnectedIntermediaryAccountResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidConnectedIntermediaryAccountResponse;
/**
 * A decoded protobuf QueryTotalDelegationByValidatorForDenomRequest message
 *
 * Alias for: denom -
 */
export type DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = [
    s_denom?: string
];
/**
 * Decodes a protobuf QueryTotalDelegationByValidatorForDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest}
 */
export declare const decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest;
/**
 * A decoded protobuf QueryTotalDelegationByValidatorForDenom message
 *
 * Alias for: assets -
 */
export type DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = [
    a_assets?: DecodedOsmosisSuperfluidDelegations[]
];
/**
 * Decodes a protobuf QueryTotalDelegationByValidatorForDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse}
 */
export declare const decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse;
/**
 * A decoded protobuf Delegations message
 *
 * Tuple where:
 *   - 0: val_addr -
 *   - 1: amount_sfsd -
 *   - 2: osmo_equivalent -
 */
export type DecodedOsmosisSuperfluidDelegations = [
    sa_val?: CwValidatorAddr,
    s_amount_sfsd?: string,
    s_osmo_equivalent?: string
];
/**
 * Decodes a protobuf Delegations message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidDelegations}
 */
export declare const decodeOsmosisSuperfluidDelegations: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidDelegations;
/**
 * A decoded protobuf TotalSuperfluidDelegationsRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest = [];
/**
 * Decodes a protobuf TotalSuperfluidDelegationsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest}
 */
export declare const decodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf TotalSuperfluidDelegations message
 *
 * Alias for: total_delegations -
 */
export type DecodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse = [
    s_total_delegations?: string
];
/**
 * Decodes a protobuf TotalSuperfluidDelegations message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse}
 */
export declare const decodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse;
/**
 * A decoded protobuf SuperfluidDelegationAmountRequest message
 *
 * Tuple where:
 *   - 0: delegator_address -
 *   - 1: validator_address -
 *   - 2: denom -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationAmountRequest = [
    sa_delegator?: CwAccountAddr,
    sa_validator?: CwValidatorAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf SuperfluidDelegationAmountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationAmountRequest}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationAmountRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationAmountRequest;
/**
 * A decoded protobuf SuperfluidDelegationAmount message
 *
 * Alias for: amount -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationAmountResponse = [
    a_amount?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf SuperfluidDelegationAmount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationAmountResponse}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationAmountResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationAmountResponse;
/**
 * A decoded protobuf SuperfluidDelegationsByDelegatorRequest message
 *
 * Alias for: delegator_address -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf SuperfluidDelegationsByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest;
/**
 * A decoded protobuf SuperfluidDelegationsByDelegator message
 *
 * Tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_delegated_coins -
 *   - 2: total_equivalent_staked_amount -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = [
    a_superfluid_delegation_records?: DecodedOsmosisSuperfluidSuperfluidDelegationRecord[],
    a_total_delegated_coins?: [
        string,
        string
    ][],
    a_total_equivalent_staked_amount?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf SuperfluidDelegationsByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse;
/**
 * A decoded protobuf SuperfluidUndelegationsByDelegatorRequest message
 *
 * Tuple where:
 *   - 0: delegator_address -
 *   - 1: denom -
 */
export type DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = [
    sa_delegator?: CwAccountAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf SuperfluidUndelegationsByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest}
 */
export declare const decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest;
/**
 * A decoded protobuf SuperfluidUndelegationsByDelegator message
 *
 * Tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_undelegated_coins -
 *   - 2: synthetic_locks -
 */
export type DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = [
    a_superfluid_delegation_records?: DecodedOsmosisSuperfluidSuperfluidDelegationRecord[],
    a_total_undelegated_coins?: [
        string,
        string
    ][],
    a_synthetic_locks?: DecodedOsmosisLockupSyntheticLock[]
];
/**
 * Decodes a protobuf SuperfluidUndelegationsByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse}
 */
export declare const decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse;
/**
 * A decoded protobuf SuperfluidDelegationsByValidatorDenomRequest message
 *
 * Tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = [
    sa_validator?: CwValidatorAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf SuperfluidDelegationsByValidatorDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest;
/**
 * A decoded protobuf SuperfluidDelegationsByValidatorDenom message
 *
 * Alias for: superfluid_delegation_records -
 */
export type DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = [
    a_superfluid_delegation_records?: DecodedOsmosisSuperfluidSuperfluidDelegationRecord[]
];
/**
 * Decodes a protobuf SuperfluidDelegationsByValidatorDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse}
 */
export declare const decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse;
/**
 * A decoded protobuf EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message
 *
 * Tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export type DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = [
    sa_validator?: CwValidatorAddr,
    s_denom?: string
];
/**
 * Decodes a protobuf EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest}
 */
export declare const decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest;
/**
 * A decoded protobuf EstimateSuperfluidDelegatedAmountByValidatorDenom message
 *
 * Alias for: total_delegated_coins -
 */
export type DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = [
    a_total_delegated_coins?: [
        string,
        string
    ][]
];
/**
 * Decodes a protobuf EstimateSuperfluidDelegatedAmountByValidatorDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse}
 */
export declare const decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse;
/**
 * A decoded protobuf QueryTotalDelegationByDelegatorRequest message
 *
 * Alias for: delegator_address -
 */
export type DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf QueryTotalDelegationByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest}
 */
export declare const decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest;
/**
 * A decoded protobuf QueryTotalDelegationByDelegator message
 *
 * Tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: delegation_response -
 *   - 2: total_delegated_coins -
 *   - 3: total_equivalent_staked_amount -
 */
export type DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = [
    a_superfluid_delegation_records?: DecodedOsmosisSuperfluidSuperfluidDelegationRecord[],
    a_delegation_response?: DecodedCosmosStakingDelegationResponse[],
    a_total_delegated_coins?: [
        string,
        string
    ][],
    a_total_equivalent_staked_amount?: [
        string,
        string
    ]
];
/**
 * Decodes a protobuf QueryTotalDelegationByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse}
 */
export declare const decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse;
/**
 * A decoded protobuf QueryUnpoolWhitelistRequest message
 *
 * Tuple where:
 */
export type DecodedOsmosisSuperfluidQueryUnpoolWhitelistRequest = [];
/**
 * Decodes a protobuf QueryUnpoolWhitelistRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryUnpoolWhitelistRequest}
 */
export declare const decodeOsmosisSuperfluidQueryUnpoolWhitelistRequest: (atu8_payload: Uint8Array) => [];
/**
 * A decoded protobuf QueryUnpoolWhitelist message
 *
 * Alias for: pool_ids -
 */
export type DecodedOsmosisSuperfluidQueryUnpoolWhitelistResponse = [
    a_pool_ids?: CwUint64[]
];
/**
 * Decodes a protobuf QueryUnpoolWhitelist message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryUnpoolWhitelistResponse}
 */
export declare const decodeOsmosisSuperfluidQueryUnpoolWhitelistResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidQueryUnpoolWhitelistResponse;
/**
 * A decoded protobuf UserConcentratedSuperfluidPositionsDelegatedRequest message
 *
 * Alias for: delegator_address -
 */
export type DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsDelegatedRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest}
 */
export declare const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest;
/**
 * A decoded protobuf UserConcentratedSuperfluidPositionsDelegated message
 *
 * Alias for: cl_pool_user_position_records -
 */
export type DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = [
    a_cl_pool_user_position_records?: DecodedOsmosisSuperfluidConcentratedPoolUserPositionRecord[]
];
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsDelegated message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse}
 */
export declare const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse;
/**
 * A decoded protobuf UserConcentratedSuperfluidPositionsUndelegatingRequest message
 *
 * Alias for: delegator_address -
 */
export type DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = [
    sa_delegator?: CwAccountAddr
];
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsUndelegatingRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest}
 */
export declare const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest;
/**
 * A decoded protobuf UserConcentratedSuperfluidPositionsUndelegating message
 *
 * Alias for: cl_pool_user_position_records -
 */
export type DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = [
    a_cl_pool_user_position_records?: DecodedOsmosisSuperfluidConcentratedPoolUserPositionRecord[]
];
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsUndelegating message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse}
 */
export declare const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse: (atu8_payload: Uint8Array) => DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse;
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisSuperfluidQueryParamsRequest: (g_struct: OsmosisSuperfluidQueryParamsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_PARAMS_REQUEST = "/osmosis.superfluid.QueryParamsRequest";
/**
 * JSON serialization of `osmosis.superfluid.QueryParamsRequest` -
 */
export type OsmosisSuperfluidQueryParamsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export declare const destructOsmosisSuperfluidQueryParamsResponse: (g_struct: OsmosisSuperfluidQueryParamsResponse) => [params?: OsmosisSuperfluidParams];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_PARAMS_RESPONSE = "/osmosis.superfluid.QueryParamsResponse";
/**
 * JSON serialization of `osmosis.superfluid.QueryParamsResponse` -
 */
export type OsmosisSuperfluidQueryParamsResponse = {
    params?: OsmosisSuperfluidParams | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetTypeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export declare const destructOsmosisSuperfluidAssetTypeRequest: (g_struct: OsmosisSuperfluidAssetTypeRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_TYPE_REQUEST = "/osmosis.superfluid.AssetTypeRequest";
/**
 * JSON serialization of `osmosis.superfluid.AssetTypeRequest` -
 */
export type OsmosisSuperfluidAssetTypeRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetTypeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: asset_type -
 */
export declare const destructOsmosisSuperfluidAssetTypeResponse: (g_struct: OsmosisSuperfluidAssetTypeResponse) => [asset_type?: JsonEnumOsmosisSuperfluidSuperfluidAssetType];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_TYPE_RESPONSE = "/osmosis.superfluid.AssetTypeResponse";
/**
 * JSON serialization of `osmosis.superfluid.AssetTypeResponse` -
 */
export type OsmosisSuperfluidAssetTypeResponse = {
    asset_type?: JsonEnumOsmosisSuperfluidSuperfluidAssetType | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllAssetsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisSuperfluidAllAssetsRequest: (g_struct: OsmosisSuperfluidAllAssetsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_ASSETS_REQUEST = "/osmosis.superfluid.AllAssetsRequest";
/**
 * JSON serialization of `osmosis.superfluid.AllAssetsRequest` -
 */
export type OsmosisSuperfluidAllAssetsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllAssetsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: assets -
 */
export declare const destructOsmosisSuperfluidAllAssetsResponse: (g_struct: OsmosisSuperfluidAllAssetsResponse) => [assets?: OsmosisSuperfluidSuperfluidAsset[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_ASSETS_RESPONSE = "/osmosis.superfluid.AllAssetsResponse";
/**
 * JSON serialization of `osmosis.superfluid.AllAssetsResponse` -
 */
export type OsmosisSuperfluidAllAssetsResponse = {
    assets?: OsmosisSuperfluidSuperfluidAsset[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetMultiplierRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export declare const destructOsmosisSuperfluidAssetMultiplierRequest: (g_struct: OsmosisSuperfluidAssetMultiplierRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_MULTIPLIER_REQUEST = "/osmosis.superfluid.AssetMultiplierRequest";
/**
 * JSON serialization of `osmosis.superfluid.AssetMultiplierRequest` -
 */
export type OsmosisSuperfluidAssetMultiplierRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetMultiplierResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: osmo_equivalent_multiplier -
 */
export declare const destructOsmosisSuperfluidAssetMultiplierResponse: (g_struct: OsmosisSuperfluidAssetMultiplierResponse) => [osmo_equivalent_multiplier?: OsmosisSuperfluidOsmoEquivalentMultiplierRecord];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_MULTIPLIER_RESPONSE = "/osmosis.superfluid.AssetMultiplierResponse";
/**
 * JSON serialization of `osmosis.superfluid.AssetMultiplierResponse` -
 */
export type OsmosisSuperfluidAssetMultiplierResponse = {
    osmo_equivalent_multiplier?: OsmosisSuperfluidOsmoEquivalentMultiplierRecord | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidIntermediaryAccountInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: val_addr -
 *   - 2: gauge_id -
 *   - 3: address -
 */
export declare const destructOsmosisSuperfluidSuperfluidIntermediaryAccountInfo: (g_struct: OsmosisSuperfluidSuperfluidIntermediaryAccountInfo) => [denom?: string, val_addr?: CwValidatorAddr, gauge_id?: CwUint64, address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_INTERMEDIARY_ACCOUNT_INFO = "/osmosis.superfluid.SuperfluidIntermediaryAccountInfo";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidIntermediaryAccountInfo` -
 */
export type OsmosisSuperfluidSuperfluidIntermediaryAccountInfo = {
    denom?: string | undefined;
    val_addr?: CwValidatorAddr | undefined;
    gauge_id?: CwUint64 | undefined;
    address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllIntermediaryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination -
 */
export declare const destructOsmosisSuperfluidAllIntermediaryAccountsRequest: (g_struct: OsmosisSuperfluidAllIntermediaryAccountsRequest) => [pagination?: CosmosBaseQueryPageRequest];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_INTERMEDIARY_ACCOUNTS_REQUEST = "/osmosis.superfluid.AllIntermediaryAccountsRequest";
/**
 * JSON serialization of `osmosis.superfluid.AllIntermediaryAccountsRequest` -
 */
export type OsmosisSuperfluidAllIntermediaryAccountsRequest = {
    pagination?: CosmosBaseQueryPageRequest | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllIntermediaryAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 *   - 1: pagination -
 */
export declare const destructOsmosisSuperfluidAllIntermediaryAccountsResponse: (g_struct: OsmosisSuperfluidAllIntermediaryAccountsResponse) => [accounts?: OsmosisSuperfluidSuperfluidIntermediaryAccountInfo[], pagination?: CosmosBaseQueryPageResponse];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_INTERMEDIARY_ACCOUNTS_RESPONSE = "/osmosis.superfluid.AllIntermediaryAccountsResponse";
/**
 * JSON serialization of `osmosis.superfluid.AllIntermediaryAccountsResponse` -
 */
export type OsmosisSuperfluidAllIntermediaryAccountsResponse = {
    accounts?: OsmosisSuperfluidSuperfluidIntermediaryAccountInfo[] | undefined;
    pagination?: CosmosBaseQueryPageResponse | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidConnectedIntermediaryAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export declare const destructOsmosisSuperfluidConnectedIntermediaryAccountRequest: (g_struct: OsmosisSuperfluidConnectedIntermediaryAccountRequest) => [lock_id?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_CONNECTED_INTERMEDIARY_ACCOUNT_REQUEST = "/osmosis.superfluid.ConnectedIntermediaryAccountRequest";
/**
 * JSON serialization of `osmosis.superfluid.ConnectedIntermediaryAccountRequest` -
 */
export type OsmosisSuperfluidConnectedIntermediaryAccountRequest = {
    lock_id?: CwUint64 | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidConnectedIntermediaryAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account -
 */
export declare const destructOsmosisSuperfluidConnectedIntermediaryAccountResponse: (g_struct: OsmosisSuperfluidConnectedIntermediaryAccountResponse) => [account?: OsmosisSuperfluidSuperfluidIntermediaryAccountInfo];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_CONNECTED_INTERMEDIARY_ACCOUNT_RESPONSE = "/osmosis.superfluid.ConnectedIntermediaryAccountResponse";
/**
 * JSON serialization of `osmosis.superfluid.ConnectedIntermediaryAccountResponse` -
 */
export type OsmosisSuperfluidConnectedIntermediaryAccountResponse = {
    account?: OsmosisSuperfluidSuperfluidIntermediaryAccountInfo | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export declare const destructOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest: (g_struct: OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest) => [denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_VALIDATOR_FOR_DENOM_REQUEST = "/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest";
/**
 * JSON serialization of `osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest` -
 */
export type OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = {
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: assets -
 */
export declare const destructOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse: (g_struct: OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse) => [assets?: OsmosisSuperfluidDelegations[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_VALIDATOR_FOR_DENOM_RESPONSE = "/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse";
/**
 * JSON serialization of `osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse` -
 */
export type OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = {
    assets?: OsmosisSuperfluidDelegations[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidDelegations} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: val_addr -
 *   - 1: amount_sfsd -
 *   - 2: osmo_equivalent -
 */
export declare const destructOsmosisSuperfluidDelegations: (g_struct: OsmosisSuperfluidDelegations) => [val_addr?: CwValidatorAddr, amount_sfsd?: string, osmo_equivalent?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_DELEGATIONS = "/osmosis.superfluid.Delegations";
/**
 * JSON serialization of `osmosis.superfluid.Delegations` -
 */
export type OsmosisSuperfluidDelegations = {
    val_addr?: CwValidatorAddr | undefined;
    amount_sfsd?: string | undefined;
    osmo_equivalent?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidTotalSuperfluidDelegationsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisSuperfluidTotalSuperfluidDelegationsRequest: (g_struct: OsmosisSuperfluidTotalSuperfluidDelegationsRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_TOTAL_SUPERFLUID_DELEGATIONS_REQUEST = "/osmosis.superfluid.TotalSuperfluidDelegationsRequest";
/**
 * JSON serialization of `osmosis.superfluid.TotalSuperfluidDelegationsRequest` -
 */
export type OsmosisSuperfluidTotalSuperfluidDelegationsRequest = {};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidTotalSuperfluidDelegationsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_delegations -
 */
export declare const destructOsmosisSuperfluidTotalSuperfluidDelegationsResponse: (g_struct: OsmosisSuperfluidTotalSuperfluidDelegationsResponse) => [total_delegations?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_TOTAL_SUPERFLUID_DELEGATIONS_RESPONSE = "/osmosis.superfluid.TotalSuperfluidDelegationsResponse";
/**
 * JSON serialization of `osmosis.superfluid.TotalSuperfluidDelegationsResponse` -
 */
export type OsmosisSuperfluidTotalSuperfluidDelegationsResponse = {
    total_delegations?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationAmountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 *   - 1: validator_address -
 *   - 2: denom -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationAmountRequest: (g_struct: OsmosisSuperfluidSuperfluidDelegationAmountRequest) => [delegator_address?: CwAccountAddr, validator_address?: CwValidatorAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATION_AMOUNT_REQUEST = "/osmosis.superfluid.SuperfluidDelegationAmountRequest";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationAmountRequest` -
 */
export type OsmosisSuperfluidSuperfluidDelegationAmountRequest = {
    delegator_address?: CwAccountAddr | undefined;
    validator_address?: CwValidatorAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationAmountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationAmountResponse: (g_struct: OsmosisSuperfluidSuperfluidDelegationAmountResponse) => [amount?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATION_AMOUNT_RESPONSE = "/osmosis.superfluid.SuperfluidDelegationAmountResponse";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationAmountResponse` -
 */
export type OsmosisSuperfluidSuperfluidDelegationAmountResponse = {
    amount?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest: (g_struct: OsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_DELEGATOR_REQUEST = "/osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest` -
 */
export type OsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_delegated_coins -
 *   - 2: total_equivalent_staked_amount -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse: (g_struct: OsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse) => [superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[], total_delegated_coins?: CosmosBaseCoin[], total_equivalent_staked_amount?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_DELEGATOR_RESPONSE = "/osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse` -
 */
export type OsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = {
    superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[] | undefined;
    total_delegated_coins?: CosmosBaseCoin[] | undefined;
    total_equivalent_staked_amount?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 *   - 1: denom -
 */
export declare const destructOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest: (g_struct: OsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest) => [delegator_address?: CwAccountAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_UNDELEGATIONS_BY_DELEGATOR_REQUEST = "/osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest` -
 */
export type OsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = {
    delegator_address?: CwAccountAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_undelegated_coins -
 *   - 2: synthetic_locks -
 */
export declare const destructOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse: (g_struct: OsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse) => [superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[], total_undelegated_coins?: CosmosBaseCoin[], synthetic_locks?: OsmosisLockupSyntheticLock[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_UNDELEGATIONS_BY_DELEGATOR_RESPONSE = "/osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse` -
 */
export type OsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = {
    superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[] | undefined;
    total_undelegated_coins?: CosmosBaseCoin[] | undefined;
    synthetic_locks?: OsmosisLockupSyntheticLock[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest: (g_struct: OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest) => [validator_address?: CwValidatorAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_VALIDATOR_DENOM_REQUEST = "/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest` -
 */
export type OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = {
    validator_address?: CwValidatorAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 */
export declare const destructOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse: (g_struct: OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse) => [superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_VALIDATOR_DENOM_RESPONSE = "/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse";
/**
 * JSON serialization of `osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse` -
 */
export type OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = {
    superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export declare const destructOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest: (g_struct: OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest) => [validator_address?: CwValidatorAddr, denom?: string];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ESTIMATE_SUPERFLUID_DELEGATED_AMOUNT_BY_VALIDATOR_DENOM_REQUEST = "/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest";
/**
 * JSON serialization of `osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest` -
 */
export type OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = {
    validator_address?: CwValidatorAddr | undefined;
    denom?: string | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_delegated_coins -
 */
export declare const destructOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse: (g_struct: OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse) => [total_delegated_coins?: CosmosBaseCoin[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ESTIMATE_SUPERFLUID_DELEGATED_AMOUNT_BY_VALIDATOR_DENOM_RESPONSE = "/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse";
/**
 * JSON serialization of `osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse` -
 */
export type OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = {
    total_delegated_coins?: CosmosBaseCoin[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export declare const destructOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest: (g_struct: OsmosisSuperfluidQueryTotalDelegationByDelegatorRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_DELEGATOR_REQUEST = "/osmosis.superfluid.QueryTotalDelegationByDelegatorRequest";
/**
 * JSON serialization of `osmosis.superfluid.QueryTotalDelegationByDelegatorRequest` -
 */
export type OsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: delegation_response -
 *   - 2: total_delegated_coins -
 *   - 3: total_equivalent_staked_amount -
 */
export declare const destructOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse: (g_struct: OsmosisSuperfluidQueryTotalDelegationByDelegatorResponse) => [superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[], delegation_response?: CosmosStakingDelegationResponse[], total_delegated_coins?: CosmosBaseCoin[], total_equivalent_staked_amount?: CosmosBaseCoin];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_DELEGATOR_RESPONSE = "/osmosis.superfluid.QueryTotalDelegationByDelegatorResponse";
/**
 * JSON serialization of `osmosis.superfluid.QueryTotalDelegationByDelegatorResponse` -
 */
export type OsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = {
    superfluid_delegation_records?: OsmosisSuperfluidSuperfluidDelegationRecord[] | undefined;
    delegation_response?: CosmosStakingDelegationResponse[] | undefined;
    total_delegated_coins?: CosmosBaseCoin[] | undefined;
    total_equivalent_staked_amount?: CosmosBaseCoin | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryUnpoolWhitelistRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export declare const destructOsmosisSuperfluidQueryUnpoolWhitelistRequest: (g_struct: OsmosisSuperfluidQueryUnpoolWhitelistRequest) => [];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_UNPOOL_WHITELIST_REQUEST = "/osmosis.superfluid.QueryUnpoolWhitelistRequest";
/**
 * JSON serialization of `osmosis.superfluid.QueryUnpoolWhitelistRequest` -
 */
export type OsmosisSuperfluidQueryUnpoolWhitelistRequest = {};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryUnpoolWhitelistResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_ids -
 */
export declare const destructOsmosisSuperfluidQueryUnpoolWhitelistResponse: (g_struct: OsmosisSuperfluidQueryUnpoolWhitelistResponse) => [pool_ids?: CwUint64[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_UNPOOL_WHITELIST_RESPONSE = "/osmosis.superfluid.QueryUnpoolWhitelistResponse";
/**
 * JSON serialization of `osmosis.superfluid.QueryUnpoolWhitelistResponse` -
 */
export type OsmosisSuperfluidQueryUnpoolWhitelistResponse = {
    pool_ids?: CwUint64[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export declare const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest: (g_struct: OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_DELEGATED_REQUEST = "/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest";
/**
 * JSON serialization of `osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest` -
 */
export type OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records -
 */
export declare const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse: (g_struct: OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse) => [cl_pool_user_position_records?: OsmosisSuperfluidConcentratedPoolUserPositionRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_DELEGATED_RESPONSE = "/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse";
/**
 * JSON serialization of `osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse` -
 */
export type OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = {
    cl_pool_user_position_records?: OsmosisSuperfluidConcentratedPoolUserPositionRecord[] | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export declare const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest: (g_struct: OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest) => [delegator_address?: CwAccountAddr];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_UNDELEGATING_REQUEST = "/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest";
/**
 * JSON serialization of `osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest` -
 */
export type OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = {
    delegator_address?: CwAccountAddr | undefined;
};
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records -
 */
export declare const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse: (g_struct: OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse) => [cl_pool_user_position_records?: OsmosisSuperfluidConcentratedPoolUserPositionRecord[]];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_UNDELEGATING_RESPONSE = "/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse";
/**
 * JSON serialization of `osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse` -
 */
export type OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = {
    cl_pool_user_position_records?: OsmosisSuperfluidConcentratedPoolUserPositionRecord[] | undefined;
};
