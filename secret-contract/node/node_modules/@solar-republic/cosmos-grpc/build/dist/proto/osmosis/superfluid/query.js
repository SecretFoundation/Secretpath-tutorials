import { decode_protobuf, decode_coin } from '../../../api/protobuf-reader.js';
import { Protobuf, coin, coins } from '../../../api/protobuf-writer.js';
import { restful_grpc } from '../../../api/transport.js';
import { decodeCosmosBaseQueryPageRequest, decodeCosmosBaseQueryPageResponse } from '../../cosmos/base/query/v1beta1/pagination.js';
import { decodeCosmosStakingDelegationResponse } from '../../cosmos/staking/v1beta1/staking.js';
import { decodeOsmosisLockupSyntheticLock } from '../lockup/lock.js';
import { decodeOsmosisSuperfluidParams } from './params.js';
import { decodeOsmosisSuperfluidSuperfluidAsset, decodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord, decodeOsmosisSuperfluidSuperfluidDelegationRecord, decodeOsmosisSuperfluidConcentratedPoolUserPositionRecord } from './superfluid.js';
const SR_LCD_OSMOSIS_SUPERFLUID_QUERY = '/osmosis/superfluid/v1beta1/';
/**
 * Returns the total set of superfluid parameters.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const queryOsmosisSuperfluidParams = restful_grpc(() => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'params']);
/**
 * Returns superfluid asset type, whether if it's a native asset or an lp share.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: asset_type - the 'asset_type' response property
 */
export const queryOsmosisSuperfluidAssetType = restful_grpc(s_denom => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'asset_type', {
        denom: s_denom,
    }]);
/**
 * Returns all registered superfluid assets.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: assets - the 'assets' response property
 */
export const queryOsmosisSuperfluidAllAssets = restful_grpc(() => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'all_assets']);
/**
 * Returns the osmo equivalent multiplier used in the most recent epoch.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: osmo_equivalent_multiplier - the 'osmo_equivalent_multiplier' response property
 */
export const queryOsmosisSuperfluidAssetMultiplier = restful_grpc(s_denom => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'asset_multiplier', {
        denom: s_denom,
    }]);
/**
 * Returns all superfluid intermediary accounts.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param g_pagination -
 * @returns a tuple where:
 *   - 0: accounts - the 'accounts' response property
 *   - 1: pagination - the 'accounts' response property
 */
export const queryOsmosisSuperfluidAllIntermediaryAccounts = restful_grpc(g_pagination => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'all_intermediary_accounts', {
        pagination: g_pagination,
    }]);
/**
 * Returns intermediary account connected to a superfluid staked lock by id
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sg_lock_id -
 * @returns a tuple where:
 *   - 0: account - the 'account' response property
 */
export const queryOsmosisSuperfluidConnectedIntermediaryAccount = restful_grpc(sg_lock_id => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'connected_intermediary_account/' + sg_lock_id]);
/**
 * Returns the total amount of osmo superfluidly staked. Response is denominated in uosmo.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: total_delegations - the 'total_delegations' response property
 */
export const queryOsmosisSuperfluidTotalSuperfluidDelegations = restful_grpc(() => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'all_superfluid_delegations']);
/**
 * Returns the coins superfluid delegated for the delegator, validator, denom triplet
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: amount - the 'amount' response property
 */
export const queryOsmosisSuperfluidSuperfluidDelegationAmount = restful_grpc((sa_delegator, sa_validator, s_denom) => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'superfluid_delegation_amount', {
        delegator_address: sa_delegator,
        validator_address: sa_validator,
        denom: s_denom,
    }]);
/**
 * Returns all the delegated superfluid poistions for a specific delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: total_delegated_coins - the 'superfluid_delegation_records' response property
 *   - 2: total_equivalent_staked_amount - the 'superfluid_delegation_records' response property
 */
export const queryOsmosisSuperfluidSuperfluidDelegationsByDelegator = restful_grpc(sa_delegator => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'superfluid_delegations/' + sa_delegator]);
/**
 * Returns all the undelegating superfluid poistions for a specific delegator.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: total_undelegated_coins - the 'superfluid_delegation_records' response property
 *   - 2: synthetic_locks - the 'superfluid_delegation_records' response property
 */
export const queryOsmosisSuperfluidSuperfluidUndelegationsByDelegator = restful_grpc((sa_delegator, s_denom) => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'superfluid_undelegations_by_delegator/' + sa_delegator, {
        denom: s_denom,
    }]);
/**
 * Returns all the superfluid positions of a specific denom delegated to one validator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 */
export const queryOsmosisSuperfluidSuperfluidDelegationsByValidatorDenom = restful_grpc((sa_validator, s_denom) => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'superfluid_delegations_by_validator_denom', {
        validator_address: sa_validator,
        denom: s_denom,
    }]);
/**
 * Returns the amount of a specific denom delegated to a specific validator This is labeled an estimate, because the way it calculates the amount can lead rounding errors from the true delegated amount
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_validator -
 * @param s_denom -
 * @returns a tuple where:
 *   - 0: total_delegated_coins - the 'total_delegated_coins' response property
 */
export const queryOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenom = restful_grpc((sa_validator, s_denom) => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'estimate_superfluid_delegation_amount_by_validator_denom', {
        validator_address: sa_validator,
        denom: s_denom,
    }]);
/**
 * Returns the specified delegations for a specific delegator
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records - the 'superfluid_delegation_records' response property
 *   - 1: delegation_response - the 'superfluid_delegation_records' response property
 *   - 2: total_delegated_coins - the 'superfluid_delegation_records' response property
 *   - 3: total_equivalent_staked_amount - the 'superfluid_delegation_records' response property
 */
export const queryOsmosisSuperfluidTotalDelegationByDelegator = restful_grpc(sa_delegator => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'total_delegation_by_delegator/' + sa_delegator]);
/**
 * Returns a list of whitelisted pool ids to unpool.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @returns a tuple where:
 *   - 0: pool_ids - the 'pool_ids' response property
 */
export const queryOsmosisSuperfluidUnpoolWhitelist = restful_grpc(() => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'unpool_whitelist']);
/**
 * Returns all of a user's full range CL positions that are superfluid staked.
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records - the 'cl_pool_user_position_records' response property
 */
export const queryOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegated = restful_grpc(sa_delegator => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'account_delegated_cl_positions/' + sa_delegator]);
/**
 *
 * @param z_req - URL origin of LCD endpoint or {@link RequestInit}
 * @param sa_delegator -
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records - the 'cl_pool_user_position_records' response property
 */
export const queryOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegating = restful_grpc(sa_delegator => [SR_LCD_OSMOSIS_SUPERFLUID_QUERY + 'account_undelegating_cl_positions/' + sa_delegator]);
/**
 * Encodes a `QueryParamsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryParamsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryParamsResponse` protobuf message:
 * @param g_params - `params`: defines the parameters of the module.
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryParamsResponse = (atu8_params) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .o;
/**
 * Encodes a `AssetTypeRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAssetTypeRequest = (s_denom) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .o;
/**
 * Encodes a `AssetTypeResponse` protobuf message:
 * @param xc_asset_type - `asset_type`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAssetTypeResponse = (xc_asset_type) => Protobuf() // ...
    .v(xc_asset_type) // SuperfluidAssetType asset_type = 1
    .o;
/**
 * Encodes a `AllAssetsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAllAssetsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `AllAssetsResponse` protobuf message:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAllAssetsResponse = (a_assets) => Protobuf() // ...
    .B(a_assets) // SuperfluidAsset[] assets = 1
    .o;
/**
 * Encodes a `AssetMultiplierRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAssetMultiplierRequest = (s_denom) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .o;
/**
 * Encodes a `AssetMultiplierResponse` protobuf message:
 * @param g_osmo_equivalent_multiplier - `osmo_equivalent_multiplier`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAssetMultiplierResponse = (atu8_osmo_equivalent_multiplier) => Protobuf() // ...
    .b(atu8_osmo_equivalent_multiplier) // OsmoEquivalentMultiplierRecord osmo_equivalent_multiplier = 1
    .o;
/**
 * Encodes a `SuperfluidIntermediaryAccountInfo` protobuf message:
 * @param s_denom - `denom`:
 * @param sa_val - `val_addr`:
 * @param sg_gauge_id - `gauge_id`:
 * @param sa_address - `address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = (s_denom, sa_val, sg_gauge_id, sa_address) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .s(sa_val) // string val_addr = 2
    .g(sg_gauge_id) // uint64 gauge_id = 3
    .s(sa_address) // string address = 4
    .o;
/**
 * Encodes a `AllIntermediaryAccountsRequest` protobuf message:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAllIntermediaryAccountsRequest = (atu8_pagination) => Protobuf() // ...
    .b(atu8_pagination) // PageRequest pagination = 1
    .o;
/**
 * Encodes a `AllIntermediaryAccountsResponse` protobuf message:
 * @param a_accounts - `accounts`:
 * @param g_pagination - `pagination`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidAllIntermediaryAccountsResponse = (a_accounts, atu8_pagination) => Protobuf() // ...
    .B(a_accounts) // SuperfluidIntermediaryAccountInfo[] accounts = 1
    .b(atu8_pagination) // PageResponse pagination = 2
    .o;
/**
 * Encodes a `ConnectedIntermediaryAccountRequest` protobuf message:
 * @param sg_lock_id - `lock_id`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidConnectedIntermediaryAccountRequest = (sg_lock_id) => Protobuf() // ...
    .g(sg_lock_id) // uint64 lock_id = 1
    .o;
/**
 * Encodes a `ConnectedIntermediaryAccountResponse` protobuf message:
 * @param g_account - `account`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidConnectedIntermediaryAccountResponse = (atu8_account) => Protobuf() // ...
    .b(atu8_account) // SuperfluidIntermediaryAccountInfo account = 1
    .o;
/**
 * Encodes a `QueryTotalDelegationByValidatorForDenomRequest` protobuf message:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = (s_denom) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .o;
/**
 * Encodes a `QueryTotalDelegationByValidatorForDenomResponse` protobuf message:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = (a_assets) => Protobuf() // ...
    .B(a_assets) // Delegations[] assets = 1
    .o;
/**
 * Encodes a `Delegations` protobuf message:
 * @param sa_val - `val_addr`:
 * @param s_amount_sfsd - `amount_sfsd`:
 * @param s_osmo_equivalent - `osmo_equivalent`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidDelegations = (sa_val, s_amount_sfsd, s_osmo_equivalent) => Protobuf() // ...
    .s(sa_val) // string val_addr = 1
    .s(s_amount_sfsd) // string amount_sfsd = 2
    .s(s_osmo_equivalent) // string osmo_equivalent = 3
    .o;
/**
 * Encodes a `TotalSuperfluidDelegationsRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `TotalSuperfluidDelegationsResponse` protobuf message:
 * @param s_total_delegations - `total_delegations`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse = (s_total_delegations) => Protobuf() // ...
    .s(s_total_delegations) // string total_delegations = 1
    .o;
/**
 * Encodes a `SuperfluidDelegationAmountRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationAmountRequest = (sa_delegator, sa_validator, s_denom) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .s(sa_validator) // string validator_address = 2
    .s(s_denom) // string denom = 3
    .o;
/**
 * Encodes a `SuperfluidDelegationAmountResponse` protobuf message:
 * @param a_amounts - `amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationAmountResponse = (a_amounts) => Protobuf() // ...
    .B(coins(a_amounts)) // Coin[] amount = 1
    .o;
/**
 * Encodes a `SuperfluidDelegationsByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = (sa_delegator) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .o;
/**
 * Encodes a `SuperfluidDelegationsByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @param a_total_equivalent_staked_amount - `total_equivalent_staked_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = (a_superfluid_delegation_records, a_total_delegated_coins, a_total_equivalent_staked_amount) => Protobuf() // ...
    .B(a_superfluid_delegation_records) // SuperfluidDelegationRecord[] superfluid_delegation_records = 1
    .B(coins(a_total_delegated_coins)) // Coin[] total_delegated_coins = 2
    .b(coin(a_total_equivalent_staked_amount)) // Coin total_equivalent_staked_amount = 3
    .o;
/**
 * Encodes a `SuperfluidUndelegationsByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = (sa_delegator, s_denom) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .s(s_denom) // string denom = 2
    .o;
/**
 * Encodes a `SuperfluidUndelegationsByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_total_undelegated_coins - `total_undelegated_coins`:
 * @param a_synthetic_locks - `synthetic_locks`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = (a_superfluid_delegation_records, a_total_undelegated_coins, a_synthetic_locks) => Protobuf() // ...
    .B(a_superfluid_delegation_records) // SuperfluidDelegationRecord[] superfluid_delegation_records = 1
    .B(coins(a_total_undelegated_coins)) // Coin[] total_undelegated_coins = 2
    .B(a_synthetic_locks) // SyntheticLock[] synthetic_locks = 3
    .o;
/**
 * Encodes a `SuperfluidDelegationsByValidatorDenomRequest` protobuf message:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = (sa_validator, s_denom) => Protobuf() // ...
    .s(sa_validator) // string validator_address = 1
    .s(s_denom) // string denom = 2
    .o;
/**
 * Encodes a `SuperfluidDelegationsByValidatorDenomResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = (a_superfluid_delegation_records) => Protobuf() // ...
    .B(a_superfluid_delegation_records) // SuperfluidDelegationRecord[] superfluid_delegation_records = 1
    .o;
/**
 * Encodes a `EstimateSuperfluidDelegatedAmountByValidatorDenomRequest` protobuf message:
 * @param sa_validator - `validator_address`:
 * @param s_denom - `denom`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = (sa_validator, s_denom) => Protobuf() // ...
    .s(sa_validator) // string validator_address = 1
    .s(s_denom) // string denom = 2
    .o;
/**
 * Encodes a `EstimateSuperfluidDelegatedAmountByValidatorDenomResponse` protobuf message:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = (a_total_delegated_coins) => Protobuf() // ...
    .B(coins(a_total_delegated_coins)) // Coin[] total_delegated_coins = 1
    .o;
/**
 * Encodes a `QueryTotalDelegationByDelegatorRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = (sa_delegator) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .o;
/**
 * Encodes a `QueryTotalDelegationByDelegatorResponse` protobuf message:
 * @param a_superfluid_delegation_records - `superfluid_delegation_records`:
 * @param a_delegation_responses - `delegation_response`:
 * @param a_total_delegated_coins - `total_delegated_coins`:
 * @param a_total_equivalent_staked_amount - `total_equivalent_staked_amount`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = (a_superfluid_delegation_records, a_delegation_responses, a_total_delegated_coins, a_total_equivalent_staked_amount) => Protobuf() // ...
    .B(a_superfluid_delegation_records) // SuperfluidDelegationRecord[] superfluid_delegation_records = 1
    .B(a_delegation_responses) // DelegationResponse[] delegation_response = 2
    .B(coins(a_total_delegated_coins)) // Coin[] total_delegated_coins = 3
    .b(coin(a_total_equivalent_staked_amount)) // Coin total_equivalent_staked_amount = 4
    .o;
/**
 * Encodes a `QueryUnpoolWhitelistRequest` protobuf message:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryUnpoolWhitelistRequest = () => Protobuf() // ...
    .o;
/**
 * Encodes a `QueryUnpoolWhitelistResponse` protobuf message:
 * @param a_pool_ids - `pool_ids`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidQueryUnpoolWhitelistResponse = (a_pool_ids) => Protobuf() // ...
    .G(a_pool_ids) // uint64[] pool_ids = 1
    .o;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsDelegatedRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = (sa_delegator) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .o;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsDelegatedResponse` protobuf message:
 * @param a_cl_pool_user_position_records - `cl_pool_user_position_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = (a_cl_pool_user_position_records) => Protobuf() // ...
    .B(a_cl_pool_user_position_records) // ConcentratedPoolUserPositionRecord[] cl_pool_user_position_records = 1
    .o;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsUndelegatingRequest` protobuf message:
 * @param sa_delegator - `delegator_address`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = (sa_delegator) => Protobuf() // ...
    .s(sa_delegator) // string delegator_address = 1
    .o;
/**
 * Encodes a `UserConcentratedSuperfluidPositionsUndelegatingResponse` protobuf message:
 * @param a_cl_pool_user_position_records - `cl_pool_user_position_records`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = (a_cl_pool_user_position_records) => Protobuf() // ...
    .B(a_cl_pool_user_position_records) // ConcentratedPoolUserPositionRecord[] cl_pool_user_position_records = 1
    .o;
/**
 * Decodes a protobuf QueryParamsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryParamsRequest}
 */
export const decodeOsmosisSuperfluidQueryParamsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryParams message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryParamsResponse}
 */
export const decodeOsmosisSuperfluidQueryParamsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisSuperfluidParams]);
/**
 * Decodes a protobuf AssetTypeRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetTypeRequest}
 */
export const decodeOsmosisSuperfluidAssetTypeRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf AssetType message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetTypeResponse}
 */
export const decodeOsmosisSuperfluidAssetTypeResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf AllAssetsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllAssetsRequest}
 */
export const decodeOsmosisSuperfluidAllAssetsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf AllAssets message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllAssetsResponse}
 */
export const decodeOsmosisSuperfluidAllAssetsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisSuperfluidSuperfluidAsset]);
/**
 * Decodes a protobuf AssetMultiplierRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetMultiplierRequest}
 */
export const decodeOsmosisSuperfluidAssetMultiplierRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf AssetMultiplier message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAssetMultiplierResponse}
 */
export const decodeOsmosisSuperfluidAssetMultiplierResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisSuperfluidOsmoEquivalentMultiplierRecord]);
/**
 * Decodes a protobuf SuperfluidIntermediaryAccountInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidIntermediaryAccountInfo}
 */
export const decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 3, 5]);
/**
 * Decodes a protobuf AllIntermediaryAccountsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllIntermediaryAccountsRequest}
 */
export const decodeOsmosisSuperfluidAllIntermediaryAccountsRequest = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeCosmosBaseQueryPageRequest]);
/**
 * Decodes a protobuf AllIntermediaryAccounts message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidAllIntermediaryAccountsResponse}
 */
export const decodeOsmosisSuperfluidAllIntermediaryAccountsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 1], [decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo, decodeCosmosBaseQueryPageResponse]);
/**
 * Decodes a protobuf ConnectedIntermediaryAccountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidConnectedIntermediaryAccountRequest}
 */
export const decodeOsmosisSuperfluidConnectedIntermediaryAccountRequest = (atu8_payload) => decode_protobuf(atu8_payload, [3]);
/**
 * Decodes a protobuf ConnectedIntermediaryAccount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidConnectedIntermediaryAccountResponse}
 */
export const decodeOsmosisSuperfluidConnectedIntermediaryAccountResponse = (atu8_payload) => decode_protobuf(atu8_payload, [1], [decodeOsmosisSuperfluidSuperfluidIntermediaryAccountInfo]);
/**
 * Decodes a protobuf QueryTotalDelegationByValidatorForDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest}
 */
export const decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryTotalDelegationByValidatorForDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse}
 */
export const decodeOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisSuperfluidDelegations]);
/**
 * Decodes a protobuf Delegations message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidDelegations}
 */
export const decodeOsmosisSuperfluidDelegations = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Decodes a protobuf TotalSuperfluidDelegationsRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidTotalSuperfluidDelegationsRequest}
 */
export const decodeOsmosisSuperfluidTotalSuperfluidDelegationsRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf TotalSuperfluidDelegations message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidTotalSuperfluidDelegationsResponse}
 */
export const decodeOsmosisSuperfluidTotalSuperfluidDelegationsResponse = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SuperfluidDelegationAmountRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationAmountRequest}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationAmountRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 5]);
/**
 * Decodes a protobuf SuperfluidDelegationAmount message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationAmountResponse}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationAmountResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf SuperfluidDelegationsByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf SuperfluidDelegationsByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0, 1], [decodeOsmosisSuperfluidSuperfluidDelegationRecord, decode_coin, decode_coin]);
/**
 * Decodes a protobuf SuperfluidUndelegationsByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest}
 */
export const decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf SuperfluidUndelegationsByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse}
 */
export const decodeOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0, 0], [decodeOsmosisSuperfluidSuperfluidDelegationRecord, decode_coin, decodeOsmosisLockupSyntheticLock]);
/**
 * Decodes a protobuf SuperfluidDelegationsByValidatorDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf SuperfluidDelegationsByValidatorDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse}
 */
export const decodeOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisSuperfluidSuperfluidDelegationRecord]);
/**
 * Decodes a protobuf EstimateSuperfluidDelegatedAmountByValidatorDenomRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest}
 */
export const decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5]);
/**
 * Decodes a protobuf EstimateSuperfluidDelegatedAmountByValidatorDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse}
 */
export const decodeOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decode_coin]);
/**
 * Decodes a protobuf QueryTotalDelegationByDelegatorRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest}
 */
export const decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf QueryTotalDelegationByDelegator message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse}
 */
export const decodeOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0, 0, 0, 1], [decodeOsmosisSuperfluidSuperfluidDelegationRecord, decodeCosmosStakingDelegationResponse, decode_coin, decode_coin]);
/**
 * Decodes a protobuf QueryUnpoolWhitelistRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryUnpoolWhitelistRequest}
 */
export const decodeOsmosisSuperfluidQueryUnpoolWhitelistRequest = (atu8_payload) => decode_protobuf(atu8_payload);
/**
 * Decodes a protobuf QueryUnpoolWhitelist message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidQueryUnpoolWhitelistResponse}
 */
export const decodeOsmosisSuperfluidQueryUnpoolWhitelistResponse = (atu8_payload) => decode_protobuf(atu8_payload, [2]);
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsDelegatedRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest}
 */
export const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsDelegated message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse}
 */
export const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisSuperfluidConcentratedPoolUserPositionRecord]);
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsUndelegatingRequest message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest}
 */
export const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = (atu8_payload) => decode_protobuf(atu8_payload, [5]);
/**
 * Decodes a protobuf UserConcentratedSuperfluidPositionsUndelegating message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse}
 */
export const decodeOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = (atu8_payload) => decode_protobuf(atu8_payload, [0], [decodeOsmosisSuperfluidConcentratedPoolUserPositionRecord]);
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryParamsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisSuperfluidQueryParamsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_PARAMS_REQUEST = '/osmosis.superfluid.QueryParamsRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryParamsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the parameters of the module.
 */
export const destructOsmosisSuperfluidQueryParamsResponse = (g_struct) => [g_struct.params];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_PARAMS_RESPONSE = '/osmosis.superfluid.QueryParamsResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetTypeRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export const destructOsmosisSuperfluidAssetTypeRequest = (g_struct) => [g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_TYPE_REQUEST = '/osmosis.superfluid.AssetTypeRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetTypeResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: asset_type -
 */
export const destructOsmosisSuperfluidAssetTypeResponse = (g_struct) => [g_struct.asset_type];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_TYPE_RESPONSE = '/osmosis.superfluid.AssetTypeResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllAssetsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisSuperfluidAllAssetsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_ASSETS_REQUEST = '/osmosis.superfluid.AllAssetsRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllAssetsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: assets -
 */
export const destructOsmosisSuperfluidAllAssetsResponse = (g_struct) => [g_struct.assets];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_ASSETS_RESPONSE = '/osmosis.superfluid.AllAssetsResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetMultiplierRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export const destructOsmosisSuperfluidAssetMultiplierRequest = (g_struct) => [g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_MULTIPLIER_REQUEST = '/osmosis.superfluid.AssetMultiplierRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAssetMultiplierResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: osmo_equivalent_multiplier -
 */
export const destructOsmosisSuperfluidAssetMultiplierResponse = (g_struct) => [g_struct.osmo_equivalent_multiplier];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ASSET_MULTIPLIER_RESPONSE = '/osmosis.superfluid.AssetMultiplierResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidIntermediaryAccountInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: val_addr -
 *   - 2: gauge_id -
 *   - 3: address -
 */
export const destructOsmosisSuperfluidSuperfluidIntermediaryAccountInfo = (g_struct) => [g_struct.denom, g_struct.val_addr, g_struct.gauge_id, g_struct.address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_INTERMEDIARY_ACCOUNT_INFO = '/osmosis.superfluid.SuperfluidIntermediaryAccountInfo';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllIntermediaryAccountsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pagination -
 */
export const destructOsmosisSuperfluidAllIntermediaryAccountsRequest = (g_struct) => [g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_INTERMEDIARY_ACCOUNTS_REQUEST = '/osmosis.superfluid.AllIntermediaryAccountsRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidAllIntermediaryAccountsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: accounts -
 *   - 1: pagination -
 */
export const destructOsmosisSuperfluidAllIntermediaryAccountsResponse = (g_struct) => [g_struct.accounts, g_struct.pagination];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ALL_INTERMEDIARY_ACCOUNTS_RESPONSE = '/osmosis.superfluid.AllIntermediaryAccountsResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidConnectedIntermediaryAccountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: lock_id -
 */
export const destructOsmosisSuperfluidConnectedIntermediaryAccountRequest = (g_struct) => [g_struct.lock_id];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_CONNECTED_INTERMEDIARY_ACCOUNT_REQUEST = '/osmosis.superfluid.ConnectedIntermediaryAccountRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidConnectedIntermediaryAccountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: account -
 */
export const destructOsmosisSuperfluidConnectedIntermediaryAccountResponse = (g_struct) => [g_struct.account];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_CONNECTED_INTERMEDIARY_ACCOUNT_RESPONSE = '/osmosis.superfluid.ConnectedIntermediaryAccountResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 */
export const destructOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomRequest = (g_struct) => [g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_VALIDATOR_FOR_DENOM_REQUEST = '/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: assets -
 */
export const destructOsmosisSuperfluidQueryTotalDelegationByValidatorForDenomResponse = (g_struct) => [g_struct.assets];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_VALIDATOR_FOR_DENOM_RESPONSE = '/osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidDelegations} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: val_addr -
 *   - 1: amount_sfsd -
 *   - 2: osmo_equivalent -
 */
export const destructOsmosisSuperfluidDelegations = (g_struct) => [g_struct.val_addr, g_struct.amount_sfsd, g_struct.osmo_equivalent];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_DELEGATIONS = '/osmosis.superfluid.Delegations';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidTotalSuperfluidDelegationsRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisSuperfluidTotalSuperfluidDelegationsRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_TOTAL_SUPERFLUID_DELEGATIONS_REQUEST = '/osmosis.superfluid.TotalSuperfluidDelegationsRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidTotalSuperfluidDelegationsResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_delegations -
 */
export const destructOsmosisSuperfluidTotalSuperfluidDelegationsResponse = (g_struct) => [g_struct.total_delegations];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_TOTAL_SUPERFLUID_DELEGATIONS_RESPONSE = '/osmosis.superfluid.TotalSuperfluidDelegationsResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationAmountRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 *   - 1: validator_address -
 *   - 2: denom -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationAmountRequest = (g_struct) => [g_struct.delegator_address, g_struct.validator_address, g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATION_AMOUNT_REQUEST = '/osmosis.superfluid.SuperfluidDelegationAmountRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationAmountResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: amount -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationAmountResponse = (g_struct) => [g_struct.amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATION_AMOUNT_RESPONSE = '/osmosis.superfluid.SuperfluidDelegationAmountResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationsByDelegatorRequest = (g_struct) => [g_struct.delegator_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_DELEGATOR_REQUEST = '/osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_delegated_coins -
 *   - 2: total_equivalent_staked_amount -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationsByDelegatorResponse = (g_struct) => [g_struct.superfluid_delegation_records, g_struct.total_delegated_coins, g_struct.total_equivalent_staked_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_DELEGATOR_RESPONSE = '/osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 *   - 1: denom -
 */
export const destructOsmosisSuperfluidSuperfluidUndelegationsByDelegatorRequest = (g_struct) => [g_struct.delegator_address, g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_UNDELEGATIONS_BY_DELEGATOR_REQUEST = '/osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: total_undelegated_coins -
 *   - 2: synthetic_locks -
 */
export const destructOsmosisSuperfluidSuperfluidUndelegationsByDelegatorResponse = (g_struct) => [g_struct.superfluid_delegation_records, g_struct.total_undelegated_coins, g_struct.synthetic_locks];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_UNDELEGATIONS_BY_DELEGATOR_RESPONSE = '/osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomRequest = (g_struct) => [g_struct.validator_address, g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_VALIDATOR_DENOM_REQUEST = '/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 */
export const destructOsmosisSuperfluidSuperfluidDelegationsByValidatorDenomResponse = (g_struct) => [g_struct.superfluid_delegation_records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SUPERFLUID_DELEGATIONS_BY_VALIDATOR_DENOM_RESPONSE = '/osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: validator_address -
 *   - 1: denom -
 */
export const destructOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomRequest = (g_struct) => [g_struct.validator_address, g_struct.denom];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ESTIMATE_SUPERFLUID_DELEGATED_AMOUNT_BY_VALIDATOR_DENOM_REQUEST = '/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: total_delegated_coins -
 */
export const destructOsmosisSuperfluidEstimateSuperfluidDelegatedAmountByValidatorDenomResponse = (g_struct) => [g_struct.total_delegated_coins];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_ESTIMATE_SUPERFLUID_DELEGATED_AMOUNT_BY_VALIDATOR_DENOM_RESPONSE = '/osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByDelegatorRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export const destructOsmosisSuperfluidQueryTotalDelegationByDelegatorRequest = (g_struct) => [g_struct.delegator_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_DELEGATOR_REQUEST = '/osmosis.superfluid.QueryTotalDelegationByDelegatorRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryTotalDelegationByDelegatorResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: superfluid_delegation_records -
 *   - 1: delegation_response -
 *   - 2: total_delegated_coins -
 *   - 3: total_equivalent_staked_amount -
 */
export const destructOsmosisSuperfluidQueryTotalDelegationByDelegatorResponse = (g_struct) => [g_struct.superfluid_delegation_records, g_struct.delegation_response, g_struct.total_delegated_coins, g_struct.total_equivalent_staked_amount];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_TOTAL_DELEGATION_BY_DELEGATOR_RESPONSE = '/osmosis.superfluid.QueryTotalDelegationByDelegatorResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryUnpoolWhitelistRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 */
export const destructOsmosisSuperfluidQueryUnpoolWhitelistRequest = (g_struct) => [];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_UNPOOL_WHITELIST_REQUEST = '/osmosis.superfluid.QueryUnpoolWhitelistRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidQueryUnpoolWhitelistResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: pool_ids -
 */
export const destructOsmosisSuperfluidQueryUnpoolWhitelistResponse = (g_struct) => [g_struct.pool_ids];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_QUERY_UNPOOL_WHITELIST_RESPONSE = '/osmosis.superfluid.QueryUnpoolWhitelistResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedRequest = (g_struct) => [g_struct.delegator_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_DELEGATED_REQUEST = '/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records -
 */
export const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsDelegatedResponse = (g_struct) => [g_struct.cl_pool_user_position_records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_DELEGATED_RESPONSE = '/osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: delegator_address -
 */
export const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingRequest = (g_struct) => [g_struct.delegator_address];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_UNDELEGATING_REQUEST = '/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingRequest';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: cl_pool_user_position_records -
 */
export const destructOsmosisSuperfluidUserConcentratedSuperfluidPositionsUndelegatingResponse = (g_struct) => [g_struct.cl_pool_user_position_records];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_USER_CONCENTRATED_SUPERFLUID_POSITIONS_UNDELEGATING_RESPONSE = '/osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse';
//# sourceMappingURL=query.js.map