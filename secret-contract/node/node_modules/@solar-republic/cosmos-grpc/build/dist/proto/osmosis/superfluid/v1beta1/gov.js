import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf, any } from '../../../../api/protobuf-writer.js';
import { decodeOsmosisSuperfluidSuperfluidAsset } from '../superfluid.js';
/**
 * Encodes a `SetSuperfluidAssetsProposal` protobuf message wrapped in the `Any` container: a gov Content type to update the superfluid assets
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anySetSuperfluidAssetsProposal = (s_title, s_description, a_assets) => any('/osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_assets) // SuperfluidAsset[] assets = 3
    .o);
/**
 * Encodes a `RemoveSuperfluidAssetsProposal` protobuf message wrapped in the `Any` container: a gov Content type to remove the superfluid assets by denom
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_superfluid_asset_denoms - `superfluid_asset_denoms`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyRemoveSuperfluidAssetsProposal = (s_title, s_description, a_superfluid_asset_denoms) => any('/osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .S(a_superfluid_asset_denoms) // string[] superfluid_asset_denoms = 3
    .o);
/**
 * Encodes a `UpdateUnpoolWhiteListProposal` protobuf message wrapped in the `Any` container: a gov Content type to update the allowed list of pool ids.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_ids - `ids`:
 * @param b_is_overwrite - `is_overwrite`:
 * @returns a strongly subtyped Uint8Array representing an `Any` protobuf message
 */
export const anyUpdateUnpoolWhiteListProposal = (s_title, s_description, a_ids, b_is_overwrite) => any('/osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal', Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .G(a_ids) // uint64[] ids = 3
    .v(b_is_overwrite) // boolean is_overwrite = 4
    .o);
/**
 * Encodes a `SetSuperfluidAssetsProposal` protobuf message: a gov Content type to update the superfluid assets
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_assets - `assets`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidSetSuperfluidAssetsProposal = (s_title, s_description, a_assets) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .B(a_assets) // SuperfluidAsset[] assets = 3
    .o;
/**
 * Encodes a `RemoveSuperfluidAssetsProposal` protobuf message: a gov Content type to remove the superfluid assets by denom
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_superfluid_asset_denoms - `superfluid_asset_denoms`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidRemoveSuperfluidAssetsProposal = (s_title, s_description, a_superfluid_asset_denoms) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .S(a_superfluid_asset_denoms) // string[] superfluid_asset_denoms = 3
    .o;
/**
 * Encodes a `UpdateUnpoolWhiteListProposal` protobuf message: a gov Content type to update the allowed list of pool ids.
 * @param s_title - `title`:
 * @param s_description - `description`:
 * @param a_ids - `ids`:
 * @param b_is_overwrite - `is_overwrite`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisSuperfluidUpdateUnpoolWhiteListProposal = (s_title, s_description, a_ids, b_is_overwrite) => Protobuf() // ...
    .s(s_title) // string title = 1
    .s(s_description) // string description = 2
    .G(a_ids) // uint64[] ids = 3
    .v(b_is_overwrite) // boolean is_overwrite = 4
    .o;
/**
 * Decodes a protobuf SetSuperfluidAssetsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidSetSuperfluidAssetsProposal}
 */
export const decodeOsmosisSuperfluidSetSuperfluidAssetsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 0], [0, 0, decodeOsmosisSuperfluidSuperfluidAsset]);
/**
 * Decodes a protobuf RemoveSuperfluidAssetsProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidRemoveSuperfluidAssetsProposal}
 */
export const decodeOsmosisSuperfluidRemoveSuperfluidAssetsProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 4]);
/**
 * Decodes a protobuf UpdateUnpoolWhiteListProposal message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisSuperfluidUpdateUnpoolWhiteListProposal}
 */
export const decodeOsmosisSuperfluidUpdateUnpoolWhiteListProposal = (atu8_payload) => decode_protobuf(atu8_payload, [5, 5, 2, 1]);
/**
 * Destructures the fields of a {@link OsmosisSuperfluidSetSuperfluidAssetsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: assets -
 */
export const destructOsmosisSuperfluidSetSuperfluidAssetsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.assets];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_SET_SUPERFLUID_ASSETS_PROPOSAL = '/osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidRemoveSuperfluidAssetsProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: superfluid_asset_denoms -
 */
export const destructOsmosisSuperfluidRemoveSuperfluidAssetsProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.superfluid_asset_denoms];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_REMOVE_SUPERFLUID_ASSETS_PROPOSAL = '/osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal';
/**
 * Destructures the fields of a {@link OsmosisSuperfluidUpdateUnpoolWhiteListProposal} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: title -
 *   - 1: description -
 *   - 2: ids -
 *   - 3: is_overwrite -
 */
export const destructOsmosisSuperfluidUpdateUnpoolWhiteListProposal = (g_struct) => [g_struct.title, g_struct.description, g_struct.ids, g_struct.is_overwrite];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_SUPERFLUID_UPDATE_UNPOOL_WHITE_LIST_PROPOSAL = '/osmosis.superfluid.v1beta1.UpdateUnpoolWhiteListProposal';
//# sourceMappingURL=gov.js.map