/*
* ================================
*     GENERATED FILE WARNING
* Do not edit this file manually.
* ================================
*/
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { decodeOsmosisTokenfactoryDenomAuthorityMetadata } from './authorityMetadata.js';
import { decodeOsmosisTokenfactoryParams } from './params.js';
/**
 * Encodes a `GenesisState` protobuf message: defines the tokenfactory module's genesis state.
 * @param g_params - `params`: defines the paramaters of the module.
 * @param a_factory_denoms - `factory_denoms`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTokenfactoryGenesisState = (atu8_params, a_factory_denoms) => Protobuf() // ...
    .b(atu8_params) // Params params = 1
    .B(a_factory_denoms) // GenesisDenom[] factory_denoms = 2
    .o;
/**
 * Encodes a `GenesisDenom` protobuf message: defines a tokenfactory denom that is defined within genesis state. The structure contains DenomAuthorityMetadata which defines the denom's admin.
 * @param s_denom - `denom`:
 * @param g_authority_metadata - `authority_metadata`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTokenfactoryGenesisDenom = (s_denom, atu8_authority_metadata) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .b(atu8_authority_metadata) // DenomAuthorityMetadata authority_metadata = 2
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTokenfactoryGenesisState}
 */
export const decodeOsmosisTokenfactoryGenesisState = (atu8_payload) => decode_protobuf(atu8_payload, [1, 0], [decodeOsmosisTokenfactoryParams, decodeOsmosisTokenfactoryGenesisDenom]);
/**
 * Decodes a protobuf GenesisDenom message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTokenfactoryGenesisDenom}
 */
export const decodeOsmosisTokenfactoryGenesisDenom = (atu8_payload) => decode_protobuf(atu8_payload, [5, 1], [0, decodeOsmosisTokenfactoryDenomAuthorityMetadata]);
/**
 * Destructures the fields of a {@link OsmosisTokenfactoryGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: params - defines the paramaters of the module.
 *   - 1: factory_denoms -
 */
export const destructOsmosisTokenfactoryGenesisState = (g_struct) => [g_struct.params, g_struct.factory_denoms];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TOKENFACTORY_GENESIS_STATE = '/osmosis.tokenfactory.v1beta1.GenesisState';
/**
 * Destructures the fields of a {@link OsmosisTokenfactoryGenesisDenom} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: authority_metadata -
 */
export const destructOsmosisTokenfactoryGenesisDenom = (g_struct) => [g_struct.denom, g_struct.authority_metadata];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TOKENFACTORY_GENESIS_DENOM = '/osmosis.tokenfactory.v1beta1.GenesisDenom';
//# sourceMappingURL=genesis.js.map