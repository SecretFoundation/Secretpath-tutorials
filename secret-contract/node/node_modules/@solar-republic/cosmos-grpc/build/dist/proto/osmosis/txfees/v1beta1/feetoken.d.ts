import type { WeakUint64Str, CwUint64 } from '@solar-republic/types';
import type { Encoded, Opt } from '../../../../api/types.js';
export type EncodedOsmosisTxfeesFeeToken = Encoded<'/osmosis.txfees.v1beta1.FeeToken'>;
/**
 * Encodes a `FeeToken` protobuf message: a struct that specifies a coin denom, and pool ID pair. This marks the token as eligible for use as a tx fee asset in Osmosis. Its price in osmo is derived through looking at the provided pool ID. The pool ID must have osmo as one of its assets.
 * @param s_denom - `denom`:
 * @param sg_poolID - `poolID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeOsmosisTxfeesFeeToken: (s_denom?: Opt<string>, sg_poolID?: Opt<WeakUint64Str>) => EncodedOsmosisTxfeesFeeToken;
/**
 * A decoded protobuf FeeToken message
 *
 * Tuple where:
 *   - 0: denom -
 *   - 1: poolID -
 */
export type DecodedOsmosisTxfeesFeeToken = [
    s_denom?: string,
    sg_poolID?: CwUint64
];
/**
 * Decodes a protobuf FeeToken message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesFeeToken}
 */
export declare const decodeOsmosisTxfeesFeeToken: (atu8_payload: Uint8Array) => DecodedOsmosisTxfeesFeeToken;
/**
 * Destructures the fields of a {@link OsmosisTxfeesFeeToken} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: poolID -
 */
export declare const destructOsmosisTxfeesFeeToken: (g_struct: OsmosisTxfeesFeeToken) => [denom?: string, poolID?: CwUint64];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_FEE_TOKEN = "/osmosis.txfees.v1beta1.FeeToken";
/**
 * JSON serialization of `osmosis.txfees.v1beta1.FeeToken` - a struct that specifies a coin denom, and pool ID pair. This marks the token as eligible for use as a tx fee asset in Osmosis. Its price in osmo is derived through looking at the provided pool ID. The pool ID must have osmo as one of its assets.
 */
export type OsmosisTxfeesFeeToken = {
    denom?: string | undefined;
    poolID?: CwUint64 | undefined;
};
