import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
/**
 * Encodes a `FeeToken` protobuf message: a struct that specifies a coin denom, and pool ID pair. This marks the token as eligible for use as a tx fee asset in Osmosis. Its price in osmo is derived through looking at the provided pool ID. The pool ID must have osmo as one of its assets.
 * @param s_denom - `denom`:
 * @param sg_poolID - `poolID`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeOsmosisTxfeesFeeToken = (s_denom, sg_poolID) => Protobuf() // ...
    .s(s_denom) // string denom = 1
    .g(sg_poolID) // uint64 poolID = 2
    .o;
/**
 * Decodes a protobuf FeeToken message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedOsmosisTxfeesFeeToken}
 */
export const decodeOsmosisTxfeesFeeToken = (atu8_payload) => decode_protobuf(atu8_payload, [5, 3]);
/**
 * Destructures the fields of a {@link OsmosisTxfeesFeeToken} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: denom -
 *   - 1: poolID -
 */
export const destructOsmosisTxfeesFeeToken = (g_struct) => [g_struct.denom, g_struct.poolID];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_OSMOSIS_TXFEES_FEE_TOKEN = '/osmosis.txfees.v1beta1.FeeToken';
//# sourceMappingURL=feetoken.js.map