import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
import { decodeSecretComputeCodeInfo, decodeSecretComputeContractInfo, decodeSecretComputeModel, decodeSecretComputeContractCustomInfo } from './types.js';
/**
 * Encodes a `GenesisState` protobuf message: - genesis state of x/wasm
 * @param a_codes - `codes`: Params params = 1 [(gogoproto.nullable) = false];
 * @param a_contracts - `contracts`:
 * @param a_sequences - `sequences`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeGenesisState = (a_codes, a_contracts, a_sequences) => Protobuf() // ...
    .B(a_codes, 2) // Code[] codes = 2
    .B(a_contracts, 3) // Contract[] contracts = 3
    .B(a_sequences, 4) // Sequence[] sequences = 4
    .o;
/**
 * Encodes a `Code` protobuf message: struct encompasses CodeInfo and CodeBytes
 * @param sg_code_id - `code_id`:
 * @param g_code_info - `code_info`:
 * @param atu8_code_bytes - `code_bytes`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeCode = (sg_code_id, atu8_code_info, atu8_code_bytes) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .b(atu8_code_info) // CodeInfo code_info = 2
    .b(atu8_code_bytes) // bytes code_bytes = 3
    .o;
/**
 * Encodes a `Contract` protobuf message: struct encompasses ContractAddress, ContractInfo, and ContractState
 * @param atu8_contract_address - `contract_address`:
 * @param g_contract_info - `contract_info`:
 * @param a_contract_states - `contract_state`:
 * @param g_contract_custom_info - `contract_custom_info`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeContract = (atu8_contract_address, atu8_contract_info, a_contract_states, atu8_contract_custom_info) => Protobuf() // ...
    .b(atu8_contract_address) // bytes contract_address = 1
    .b(atu8_contract_info) // ContractInfo contract_info = 2
    .B(a_contract_states) // Model[] contract_state = 3
    .b(atu8_contract_custom_info) // ContractCustomInfo contract_custom_info = 4
    .o;
/**
 * Encodes a `Sequence` protobuf message: id and value of a counter
 * @param atu8_id_key - `id_key`:
 * @param sg_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeSequence = (atu8_id_key, sg_value) => Protobuf() // ...
    .b(atu8_id_key) // bytes id_key = 1
    .g(sg_value) // uint64 value = 2
    .o;
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedSecretComputeGenesisState}
 */
export const decodeSecretComputeGenesisState = ((atu8_payload, [, a_codes, a_contracts, a_sequences] = decode_protobuf(atu8_payload, [0, 0, 0, 0], [0, decodeSecretComputeCode, decodeSecretComputeContract, decodeSecretComputeSequence])) => [__UNDEFINED, a_codes, a_contracts, a_sequences]);
/**
 * Decodes a protobuf Code message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeCode}
 */
export const decodeSecretComputeCode = (atu8_payload) => decode_protobuf(atu8_payload, [3, 1, 1], [0, decodeSecretComputeCodeInfo]);
/**
 * Decodes a protobuf Contract message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeContract}
 */
export const decodeSecretComputeContract = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 0, 1], [0, decodeSecretComputeContractInfo, decodeSecretComputeModel, decodeSecretComputeContractCustomInfo]);
/**
 * Decodes a protobuf Sequence message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeSequence}
 */
export const decodeSecretComputeSequence = (atu8_payload) => decode_protobuf(atu8_payload, [1, 3]);
/**
 * Destructures the fields of a {@link SecretComputeGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 1: codes - Params params = 1 [(gogoproto.nullable) = false];
 *   - 2: contracts -
 *   - 3: sequences -
 */
export const destructSecretComputeGenesisState = (g_struct) => [__UNDEFINED, g_struct.codes, g_struct.contracts, g_struct.sequences];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_GENESIS_STATE = '/secret.compute.v1beta1.GenesisState';
/**
 * Destructures the fields of a {@link SecretComputeCode} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id -
 *   - 1: code_info -
 *   - 2: code_bytes -
 */
export const destructSecretComputeCode = (g_struct) => [g_struct.code_id, g_struct.code_info, safe_base64_to_bytes(g_struct.code_bytes)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CODE = '/secret.compute.v1beta1.Code';
/**
 * Destructures the fields of a {@link SecretComputeContract} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: contract_address -
 *   - 1: contract_info -
 *   - 2: contract_state -
 *   - 3: contract_custom_info -
 */
export const destructSecretComputeContract = (g_struct) => [safe_base64_to_bytes(g_struct.contract_address), g_struct.contract_info, g_struct.contract_state, g_struct.contract_custom_info];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT = '/secret.compute.v1beta1.Contract';
/**
 * Destructures the fields of a {@link SecretComputeSequence} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: id_key -
 *   - 1: value -
 */
export const destructSecretComputeSequence = (g_struct) => [safe_base64_to_bytes(g_struct.id_key), g_struct.value];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_SEQUENCE = '/secret.compute.v1beta1.Sequence';
//# sourceMappingURL=genesis.js.map