import { __UNDEFINED } from '@blake.regalia/belt';
import { decode_protobuf } from '../../../../api/protobuf-reader.js';
import { Protobuf } from '../../../../api/protobuf-writer.js';
import { safe_base64_to_bytes } from '../../../../api/util.js';
/**
 * Encodes a `AccessTypeParam` protobuf message:
 * @param xc_value - `value`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeAccessTypeParam = (xc_value) => Protobuf() // ...
    .v(xc_value) // AccessType value = 1
    .o;
/**
 * Encodes a `CodeInfo` protobuf message: data for the uploaded contract WASM code
 * @param atu8_code_hash - `code_hash`:
 * @param atu8_creator - `creator`:
 * @param s_source - `source`:
 * @param s_builder - `builder`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeCodeInfo = (atu8_code_hash, atu8_creator, s_source, s_builder) => Protobuf() // ...
    .b(atu8_code_hash) // bytes code_hash = 1
    .b(atu8_creator) // bytes creator = 2
    .s(s_source) // string source = 3
    .s(s_builder) // string builder = 4
    .o;
/**
 * Encodes a `ContractKey` protobuf message:
 * @param atu8_og_contract_key - `og_contract_key`:
 * @param atu8_current_contract_key - `current_contract_key`:
 * @param atu8_current_contract_key_proof - `current_contract_key_proof`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeContractKey = (atu8_og_contract_key, atu8_current_contract_key, atu8_current_contract_key_proof) => Protobuf() // ...
    .b(atu8_og_contract_key) // bytes og_contract_key = 1
    .b(atu8_current_contract_key) // bytes current_contract_key = 2
    .b(atu8_current_contract_key_proof) // bytes current_contract_key_proof = 3
    .o;
/**
 * Encodes a `ContractCustomInfo` protobuf message:
 * @param g_enclave_key - `enclave_key`:
 * @param s_label - `label`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeContractCustomInfo = (atu8_enclave_key, s_label) => Protobuf() // ...
    .b(atu8_enclave_key) // ContractKey enclave_key = 1
    .s(s_label) // string label = 2
    .o;
/**
 * Encodes a `ContractInfo` protobuf message: stores a WASM contract instance
 * @param sg_code_id - `code_id`: CodeID is the reference to the stored Wasm code
 * @param atu8_creator - `creator`: Creator address who initially instantiated the contract
 * @param s_label - `label`: Label is mandatory metadata to be stored with a contract instance.
 * @param g_created - `created`: Created Tx position when the contract was instantiated.
 * @param si_ibc_port - `ibc_port_id`:
 * @param s_admin - `admin`: Admin is an optional address that can execute migrations
 * @param atu8_admin_proof - `admin_proof`: Proof that enclave executed the instantiate command
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeContractInfo = (sg_code_id, atu8_creator, s_label, atu8_created, si_ibc_port, s_admin, atu8_admin_proof) => Protobuf() // ...
    .g(sg_code_id) // uint64 code_id = 1
    .b(atu8_creator) // bytes creator = 2
    .s(s_label, 4) // string label = 4
    .b(atu8_created, 5) // AbsoluteTxPosition created = 5
    .s(si_ibc_port, 6) // string ibc_port_id = 6
    .s(s_admin, 7) // string admin = 7
    .b(atu8_admin_proof, 8) // bytes admin_proof = 8
    .o;
/**
 * Encodes a `AbsoluteTxPosition` protobuf message: can be used to sort contracts
 * @param sg_block_height - `block_height`: BlockHeight is the block the contract was created at
 * @param sg_tx_index - `tx_index`: TxIndex is a monotonic counter within the block (actual transaction index, or gas consumed)
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeAbsoluteTxPosition = (sg_block_height, sg_tx_index) => Protobuf() // ...
    .g(sg_block_height) // int32 block_height = 1
    .g(sg_tx_index) // uint64 tx_index = 2
    .o;
/**
 * Encodes a `Model` protobuf message: a struct that holds a KV pair
 * @param atu8_key - `Key`: hex-encode key to read it better (this is often ascii)
 * @param atu8_value - `Value`: base64-encode raw value
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeModel = (atu8_key, atu8_value) => Protobuf() // ...
    .b(atu8_key) // bytes Key = 1
    .b(atu8_value) // bytes Value = 2
    .o;
/**
 * Encodes a `ContractCodeHistoryEntry` protobuf message: metadata to a contract.
 * @param xc_operation - `operation`:
 * @param sg_code_id - `code_id`: CodeID is the reference to the stored WASM code
 * @param g_updated - `updated`: Updated Tx position when the operation was executed.
 * @param atu8_msg - `msg`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export const encodeSecretComputeContractCodeHistoryEntry = (xc_operation, sg_code_id, atu8_updated, atu8_msg) => Protobuf() // ...
    .v(xc_operation) // ContractCodeHistoryOperationType operation = 1
    .g(sg_code_id) // uint64 code_id = 2
    .b(atu8_updated) // AbsoluteTxPosition updated = 3
    .b(atu8_msg) // bytes msg = 4
    .o;
/**
 * Decodes a protobuf AccessTypeParam message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeAccessTypeParam}
 */
export const decodeSecretComputeAccessTypeParam = (atu8_payload) => decode_protobuf(atu8_payload, [1]);
/**
 * Decodes a protobuf CodeInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeCodeInfo}
 */
export const decodeSecretComputeCodeInfo = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 5, 5]);
/**
 * Decodes a protobuf ContractKey message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeContractKey}
 */
export const decodeSecretComputeContractKey = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1, 1]);
/**
 * Decodes a protobuf ContractCustomInfo message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeContractCustomInfo}
 */
export const decodeSecretComputeContractCustomInfo = (atu8_payload) => decode_protobuf(atu8_payload, [1, 5], [decodeSecretComputeContractKey]);
/**
 * Decodes a protobuf ContractInfo message
 * @param atu8_payload - raw bytes to decode
 * @param RESERVED - a second argument is explicitly forbidden. make sure not to pass this function by reference to some callback argument
 * @returns a {@link DecodedSecretComputeContractInfo}
 */
export const decodeSecretComputeContractInfo = ((atu8_payload, [sg_code_id, atu8_creator, , s_label, a_created, si_ibc_port, s_admin, atu8_admin_proof] = decode_protobuf(atu8_payload, [3, 1, 0, 5, 1, 5, 5, 1], [0, 0, 0, 0, decodeSecretComputeAbsoluteTxPosition])) => [sg_code_id, atu8_creator, __UNDEFINED, s_label, a_created, si_ibc_port, s_admin, atu8_admin_proof]);
/**
 * Decodes a protobuf AbsoluteTxPosition message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeAbsoluteTxPosition}
 */
export const decodeSecretComputeAbsoluteTxPosition = (atu8_payload) => decode_protobuf(atu8_payload, [3, 3]);
/**
 * Decodes a protobuf Model message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeModel}
 */
export const decodeSecretComputeModel = (atu8_payload) => decode_protobuf(atu8_payload, [1, 1]);
/**
 * Decodes a protobuf ContractCodeHistoryEntry message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretComputeContractCodeHistoryEntry}
 */
export const decodeSecretComputeContractCodeHistoryEntry = (atu8_payload) => decode_protobuf(atu8_payload, [1, 3, 1, 1], [0, 0, decodeSecretComputeAbsoluteTxPosition]);
/**
 * Destructures the fields of a {@link SecretComputeAccessTypeParam} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: value -
 */
export const destructSecretComputeAccessTypeParam = (g_struct) => [g_struct.value];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_ACCESS_TYPE_PARAM = '/secret.compute.v1beta1.AccessTypeParam';
/**
 * Destructures the fields of a {@link SecretComputeCodeInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_hash -
 *   - 1: creator -
 *   - 2: source -
 *   - 3: builder -
 */
export const destructSecretComputeCodeInfo = (g_struct) => [safe_base64_to_bytes(g_struct.code_hash), safe_base64_to_bytes(g_struct.creator), g_struct.source, g_struct.builder];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CODE_INFO = '/secret.compute.v1beta1.CodeInfo';
/**
 * Destructures the fields of a {@link SecretComputeContractKey} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: og_contract_key -
 *   - 1: current_contract_key -
 *   - 2: current_contract_key_proof -
 */
export const destructSecretComputeContractKey = (g_struct) => [safe_base64_to_bytes(g_struct.og_contract_key), safe_base64_to_bytes(g_struct.current_contract_key), safe_base64_to_bytes(g_struct.current_contract_key_proof)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT_KEY = '/secret.compute.v1beta1.ContractKey';
/**
 * Destructures the fields of a {@link SecretComputeContractCustomInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: enclave_key -
 *   - 1: label -
 */
export const destructSecretComputeContractCustomInfo = (g_struct) => [g_struct.enclave_key, g_struct.label];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT_CUSTOM_INFO = '/secret.compute.v1beta1.ContractCustomInfo';
/**
 * Destructures the fields of a {@link SecretComputeContractInfo} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: code_id - CodeID is the reference to the stored Wasm code
 *   - 1: creator - Creator address who initially instantiated the contract
 *   - 3: label - Label is mandatory metadata to be stored with a contract instance.
 *   - 4: created - Created Tx position when the contract was instantiated.
 *   - 5: ibc_port_id -
 *   - 6: admin - Admin is an optional address that can execute migrations
 *   - 7: admin_proof - Proof that enclave executed the instantiate command
 */
export const destructSecretComputeContractInfo = (g_struct) => [g_struct.code_id, safe_base64_to_bytes(g_struct.creator), __UNDEFINED, g_struct.label, g_struct.created, g_struct.ibc_port_id, g_struct.admin, safe_base64_to_bytes(g_struct.admin_proof)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT_INFO = '/secret.compute.v1beta1.ContractInfo';
/**
 * Destructures the fields of a {@link SecretComputeAbsoluteTxPosition} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: block_height - BlockHeight is the block the contract was created at
 *   - 1: tx_index - TxIndex is a monotonic counter within the block (actual transaction index, or gas consumed)
 */
export const destructSecretComputeAbsoluteTxPosition = (g_struct) => [g_struct.block_height, g_struct.tx_index];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_ABSOLUTE_TX_POSITION = '/secret.compute.v1beta1.AbsoluteTxPosition';
/**
 * Destructures the fields of a {@link SecretComputeModel} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: Key - hex-encode key to read it better (this is often ascii)
 *   - 1: Value - base64-encode raw value
 */
export const destructSecretComputeModel = (g_struct) => [safe_base64_to_bytes(g_struct.Key), safe_base64_to_bytes(g_struct.Value)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_MODEL = '/secret.compute.v1beta1.Model';
/**
 * Destructures the fields of a {@link SecretComputeContractCodeHistoryEntry} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: operation -
 *   - 1: code_id - CodeID is the reference to the stored WASM code
 *   - 2: updated - Updated Tx position when the operation was executed.
 *   - 3: msg -
 */
export const destructSecretComputeContractCodeHistoryEntry = (g_struct) => [g_struct.operation, g_struct.code_id, g_struct.updated, safe_base64_to_bytes(g_struct.msg)];
/**
 * Message type string constant
 */
export const SI_MESSAGE_TYPE_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_ENTRY = '/secret.compute.v1beta1.ContractCodeHistoryEntry';
/**
 * Protobuf enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **UNDEFINED** -
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeAccessType}
 */
export const XC_PROTO_SECRET_COMPUTE_UNDEFINED = 0;
/**
 * JSON enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **UNDEFINED** -
 *
 * Belongs to enum type {@link JsonEnumSecretComputeAccessType}
 */
export const SI_JSON_SECRET_COMPUTE_UNDEFINED = 'AccessTypeUndefined';
/**
 * Protobuf enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **NOBODY** -
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeAccessType}
 */
export const XC_PROTO_SECRET_COMPUTE_NOBODY = 1;
/**
 * JSON enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **NOBODY** -
 *
 * Belongs to enum type {@link JsonEnumSecretComputeAccessType}
 */
export const SI_JSON_SECRET_COMPUTE_NOBODY = 'AccessTypeNobody';
/**
 * Protobuf enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **ONLY_ADDRESS** -
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeAccessType}
 */
export const XC_PROTO_SECRET_COMPUTE_ONLY_ADDRESS = 2;
/**
 * JSON enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **ONLY_ADDRESS** -
 *
 * Belongs to enum type {@link JsonEnumSecretComputeAccessType}
 */
export const SI_JSON_SECRET_COMPUTE_ONLY_ADDRESS = 'AccessTypeOnlyAddress';
/**
 * Protobuf enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **EVERYBODY** -
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeAccessType}
 */
export const XC_PROTO_SECRET_COMPUTE_EVERYBODY = 3;
/**
 * JSON enum value for `secret.compute.v1beta1.AccessType`.
 *
 * **EVERYBODY** -
 *
 * Belongs to enum type {@link JsonEnumSecretComputeAccessType}
 */
export const SI_JSON_SECRET_COMPUTE_EVERYBODY = 'AccessTypeEverybody';
/**
 * Maps a protobuf enum int value for `secret.compute.v1beta1.AccessType` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumSecretComputeAccessType = {
    [XC_PROTO_SECRET_COMPUTE_UNDEFINED]: SI_JSON_SECRET_COMPUTE_UNDEFINED,
    [XC_PROTO_SECRET_COMPUTE_NOBODY]: SI_JSON_SECRET_COMPUTE_NOBODY,
    [XC_PROTO_SECRET_COMPUTE_ONLY_ADDRESS]: SI_JSON_SECRET_COMPUTE_ONLY_ADDRESS,
    [XC_PROTO_SECRET_COMPUTE_EVERYBODY]: SI_JSON_SECRET_COMPUTE_EVERYBODY,
};
/**
 * Maps a JSON enum string value for `secret.compute.v1beta1.AccessType` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumSecretComputeAccessType = {
    [SI_JSON_SECRET_COMPUTE_UNDEFINED]: XC_PROTO_SECRET_COMPUTE_UNDEFINED,
    [SI_JSON_SECRET_COMPUTE_NOBODY]: XC_PROTO_SECRET_COMPUTE_NOBODY,
    [SI_JSON_SECRET_COMPUTE_ONLY_ADDRESS]: XC_PROTO_SECRET_COMPUTE_ONLY_ADDRESS,
    [SI_JSON_SECRET_COMPUTE_EVERYBODY]: XC_PROTO_SECRET_COMPUTE_EVERYBODY,
};
/**
 * Protobuf enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED** - ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeContractCodeHistoryOperationType}
 */
export const XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED = 0;
/**
 * JSON enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED** - ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
 *
 * Belongs to enum type {@link JsonEnumSecretComputeContractCodeHistoryOperationType}
 */
export const SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED = 'ContractCodeHistoryOperationTypeUnspecified';
/**
 * Protobuf enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT** - ContractCodeHistoryOperationTypeInit on chain contract instantiation
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeContractCodeHistoryOperationType}
 */
export const XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT = 1;
/**
 * JSON enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT** - ContractCodeHistoryOperationTypeInit on chain contract instantiation
 *
 * Belongs to enum type {@link JsonEnumSecretComputeContractCodeHistoryOperationType}
 */
export const SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT = 'ContractCodeHistoryOperationTypeInit';
/**
 * Protobuf enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE** - ContractCodeHistoryOperationTypeMigrate code migration
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeContractCodeHistoryOperationType}
 */
export const XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE = 2;
/**
 * JSON enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE** - ContractCodeHistoryOperationTypeMigrate code migration
 *
 * Belongs to enum type {@link JsonEnumSecretComputeContractCodeHistoryOperationType}
 */
export const SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE = 'ContractCodeHistoryOperationTypeMigrate';
/**
 * Protobuf enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS** - ContractCodeHistoryOperationTypeGenesis based on genesis data
 *
 * Belongs to enum type {@link ProtoEnumSecretComputeContractCodeHistoryOperationType}
 */
export const XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS = 3;
/**
 * JSON enum value for `secret.compute.v1beta1.ContractCodeHistoryOperationType`.
 *
 * **CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS** - ContractCodeHistoryOperationTypeGenesis based on genesis data
 *
 * Belongs to enum type {@link JsonEnumSecretComputeContractCodeHistoryOperationType}
 */
export const SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS = 'ContractCodeHistoryOperationTypeGenesis';
/**
 * Maps a protobuf enum int value for `secret.compute.v1beta1.ContractCodeHistoryOperationType` to is JSON equivalent enum string value
 */
export const ProtoToJsonEnumSecretComputeContractCodeHistoryOperationType = {
    [XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED]: SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED,
    [XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT]: SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT,
    [XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE]: SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE,
    [XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS]: SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS,
};
/**
 * Maps a JSON enum string value for `secret.compute.v1beta1.ContractCodeHistoryOperationType` to is protobuf equivalent enum int value
 */
export const JsonToProtoEnumSecretComputeContractCodeHistoryOperationType = {
    [SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED]: XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED,
    [SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT]: XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT,
    [SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE]: XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE,
    [SI_JSON_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS]: XC_PROTO_SECRET_COMPUTE_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS,
};
//# sourceMappingURL=types.js.map