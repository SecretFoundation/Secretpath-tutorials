import type { Encoded, Opt } from '../../../../api/types.js';
import type { SecretRegistrationMasterKey, DecodedSecretRegistrationMasterKey } from './msg.js';
import type { SecretRegistrationRegistrationNodeInfo, DecodedSecretRegistrationRegistrationNodeInfo } from './types.js';
export type EncodedSecretRegistrationGenesisState = Encoded<'/secret.registration.v1beta1.GenesisState'>;
/**
 * Encodes a `GenesisState` protobuf message:
 * @param a_registrations - `registration`:
 * @param g_node_exch_master_key - `node_exch_master_key`:
 * @param g_io_master_key - `io_master_key`:
 * @returns a strongly subtyped Uint8Array protobuf message
 */
export declare const encodeSecretRegistrationGenesisState: (a_registrations?: Opt<Encoded<'/secret.registration.v1beta1.RegistrationNodeInfo'>[]>, atu8_node_exch_master_key?: Opt<Encoded<'/secret.registration.v1beta1.MasterKey'>>, atu8_io_master_key?: Opt<Encoded<'/secret.registration.v1beta1.MasterKey'>>) => EncodedSecretRegistrationGenesisState;
/**
 * A decoded protobuf GenesisState message
 *
 * Tuple where:
 *   - 0: registration -
 *   - 1: node_exch_master_key -
 *   - 2: io_master_key -
 */
export type DecodedSecretRegistrationGenesisState = [
    a_registration?: DecodedSecretRegistrationRegistrationNodeInfo[],
    a_node_exch_master_key?: DecodedSecretRegistrationMasterKey,
    a_io_master_key?: DecodedSecretRegistrationMasterKey
];
/**
 * Decodes a protobuf GenesisState message
 * @param atu8_payload - raw bytes to decode
 * @returns a {@link DecodedSecretRegistrationGenesisState}
 */
export declare const decodeSecretRegistrationGenesisState: (atu8_payload: Uint8Array) => DecodedSecretRegistrationGenesisState;
/**
 * Destructures the fields of a {@link SecretRegistrationGenesisState} JSON message into a tuple of parsed ES equivalents
 * @param g_struct - the JSON message
 * @returns a tuple where:
 *   - 0: registration -
 *   - 1: node_exch_master_key -
 *   - 2: io_master_key -
 */
export declare const destructSecretRegistrationGenesisState: (g_struct: SecretRegistrationGenesisState) => [registration?: SecretRegistrationRegistrationNodeInfo[], node_exch_master_key?: SecretRegistrationMasterKey, io_master_key?: SecretRegistrationMasterKey];
/**
 * Message type string constant
 */
export declare const SI_MESSAGE_TYPE_SECRET_REGISTRATION_GENESIS_STATE = "/secret.registration.v1beta1.GenesisState";
/**
 * JSON serialization of `secret.registration.v1beta1.GenesisState` -
 */
export type SecretRegistrationGenesisState = {
    registration?: SecretRegistrationRegistrationNodeInfo[] | undefined;
    node_exch_master_key?: SecretRegistrationMasterKey | undefined;
    io_master_key?: SecretRegistrationMasterKey | undefined;
};
