import type { L } from 'ts-toolbelt';
import type { SlimCoin } from './types.js';
type Nester = (k_writer: ProtoWriter, ...a_args: any[]) => ProtoWriter;
export interface ProtoWriter {
    v(xn_value: number): this;
    g(xg_value: bigint): this;
    b(atu8_bytes: Uint8Array | number[]): this;
    s(s_data: string): this;
    n<f_nester extends Nester>(f_call: f_nester, ...a_args: L.Tail<Parameters<f_nester>>): ProtoWriter;
    o(): Uint8Array;
}
export declare const Protobuf: () => ProtoWriter;
export declare const any: (si_type: string, atu8_value: Uint8Array) => Uint8Array;
export declare const coin: (a_coin: SlimCoin) => Uint8Array;
export declare const timestamp: (xt_timestamp: number) => Uint8Array;
export {};
