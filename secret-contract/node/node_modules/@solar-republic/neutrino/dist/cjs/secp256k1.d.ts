import type { Nilable } from '@blake.regalia/belt';
export type RecoveryValue = 0 | 1 | 2 | 3;
export type SignatureAndRecovery = [
    atu8_signature: Uint8Array,
    xc_recovery: RecoveryValue
];
export declare const gen_sk: () => Uint8Array;
export declare const ent_to_sk: (atu8_entropy: Uint8Array) => Uint8Array;
export declare const sk_to_pk: (z_sk: Uint8Array | bigint, xc_uncompressed?: boolean | 0 | 1) => Uint8Array;
export declare const ecdh: (atu8_sk: Uint8Array, atu8_pk: Uint8Array, b_uncompressed?: boolean) => Uint8Array;
export type Signature = [xg_r: bigint, xg_s: bigint];
export declare const sign: (atu8_sk: Uint8Array, atu8_hash: Uint8Array, atu8_ent?: Nilable<Uint8Array>) => Promise<SignatureAndRecovery>;
export declare const verify: (atu8_signature: Uint8Array, atu8_hash: Uint8Array, atu8_pk: Uint8Array, b_low_s?: boolean) => boolean;
